(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@276 (T@U Int Int) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 () T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@333 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@370 () Int)
(declare-fun $generated@@371 (Int Int) Bool)
(declare-fun $generated@@372 (Int Int) Int)
(declare-fun $generated@@373 (Int Int) Int)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@493 (T@U Int) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@607 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@150) ($generated@@0 ($generated@@83 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@83 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@150)) (= (type $generated@@259) $generated@@150)) (= (type $generated@@260) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@254 $generated@@260)) (= ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@141) (= ($generated@@139 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@141) ($generated@@139 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@150) (= (type $generated@@266) $generated@@150)) (= $generated@@264 ($generated@@228 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@139 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@2) (= ($generated@@137 $generated@@275 $generated@@134) (<= ($generated@@248 0) ($generated $generated@@275))))
 :pattern ( ($generated@@137 $generated@@275 $generated@@134))
)))
(assert  (and (= ($generated@@1 $generated@@278) 18) (forall (($generated@@279 T@U) ) (! (= (type ($generated@@277 $generated@@279)) $generated@@278)
 :pattern ( ($generated@@277 $generated@@279))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 Int) ($generated@@282 Int) ) (!  (=> (= (type $generated@@280) $generated@@278) (= ($generated@@276 ($generated@@277 $generated@@280) $generated@@281 $generated@@282) ($generated@@276 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@276 ($generated@@277 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@150)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@66) (= (type $generated@@287) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@255 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@76 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@255 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@78 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@81 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@78 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@83 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@78 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@83 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@83 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 20)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@78 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@83 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@83 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@81 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@78 $generated@@331 $generated@@2)) (= ($generated@@156 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@83 $generated@@330 $generated@@332))) (<= ($generated ($generated@@83 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@83 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@156 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@150) ($generated@@229 $generated@@336 $generated@@134)) (and (= ($generated@@283 ($generated@@333 $generated@@2 $generated@@336)) $generated@@336) ($generated@@137 ($generated@@333 $generated@@2 $generated@@336) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@336 $generated@@134))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@298 (type $generated@@337))))
(let (($generated@@339 ($generated@@297 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@296 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@295 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@294 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@298 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@78 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@298 (type $generated@@344))))
(let (($generated@@346 ($generated@@297 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@296 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@295 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@316 (type $generated@@348))))
(let (($generated@@350 ($generated@@315 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@314 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@313 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@312 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@316 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@78 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@316 (type $generated@@355))))
(let (($generated@@357 ($generated@@315 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@314 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@313 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@360) $generated@@66)) (= ($generated@@137 $generated@@359 ($generated@@155 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@359 $generated@@361)))) ($generated@@229 $generated@@361 $generated@@360))
 :pattern ( ($generated@@83 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@137 $generated@@359 ($generated@@155 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@363) $generated@@66)) (= (type $generated@@364) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@362 ($generated@@238 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@150) ($generated@@0 ($generated@@83 $generated@@362 $generated@@365))) ($generated@@255 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@83 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@76 $generated@@362 ($generated@@238 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@367) $generated@@66)) (= (type $generated@@368) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@366 ($generated@@243 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@150) ($generated@@0 ($generated@@83 $generated@@366 $generated@@369))) ($generated@@255 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@83 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@76 $generated@@366 ($generated@@243 $generated@@367) $generated@@368))
)))
(assert  (=> (<= 1 $generated@@370) (forall (($generated@@374 T@U) ($generated@@375 Int) ($generated@@376 Int) ) (!  (=> (and (= (type $generated@@374) $generated@@278) (or ($generated@@371 ($generated@@248 $generated@@375) ($generated@@248 $generated@@376)) (and (not (= 1 $generated@@370)) (and (<= ($generated@@248 0) $generated@@375) (<= ($generated@@248 0) $generated@@376))))) (and (=> (not (= ($generated@@248 $generated@@375) ($generated@@248 0))) ($generated@@371 ($generated@@248 (- $generated@@375 1)) ($generated@@248 ($generated@@372 $generated@@376 ($generated@@248 2))))) (= ($generated@@276 ($generated@@277 $generated@@374) ($generated@@248 $generated@@375) ($generated@@248 $generated@@376)) (ite (= ($generated@@248 $generated@@375) ($generated@@248 0)) (= ($generated@@248 ($generated@@373 $generated@@376 ($generated@@248 2))) ($generated@@248 1)) ($generated@@276 ($generated@@277 $generated@@374) ($generated@@248 (- $generated@@375 1)) ($generated@@248 ($generated@@372 $generated@@376 ($generated@@248 2))))))))
 :weight 3
 :pattern ( ($generated@@276 ($generated@@277 $generated@@374) ($generated@@248 $generated@@375) ($generated@@248 $generated@@376)))
))))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(= ($generated ($generated@@83 ($generated@@289 $generated@@378) $generated@@377)) 0))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@83 ($generated@@289 $generated@@378) $generated@@377)))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@298 (type $generated@@382))))
(let (($generated@@384 ($generated@@297 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@296 $generated@@150 $generated@@150)) (= (type $generated@@386) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@83 ($generated@@294 $generated@@385) ($generated@@148 ($generated@@333 $generated@@141 $generated@@386)))) (= ($generated@@83 ($generated@@380 $generated@@385) ($generated@@148 ($generated@@333 $generated@@141 $generated@@386))) ($generated@@149 ($generated@@333 $generated@@141 $generated@@386))))))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@316 (type $generated@@390))))
(let (($generated@@392 ($generated@@315 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@394) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@83 ($generated@@312 $generated@@393) ($generated@@148 ($generated@@333 $generated@@141 $generated@@394)))) (= ($generated@@83 ($generated@@388 $generated@@393) ($generated@@148 ($generated@@333 $generated@@141 $generated@@394))) ($generated@@149 ($generated@@333 $generated@@141 $generated@@394))))))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@297 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@296 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@83 ($generated@@341 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@83 ($generated@@294 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@83 ($generated@@380 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@395) $generated@@399))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@315 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@314 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@83 ($generated@@352 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@83 ($generated@@312 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@66)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@296 $generated@@150 $generated@@150)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@408) $generated@@412))) (and ($generated@@255 ($generated@@83 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@255 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@66)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@416) $generated@@420))) (and ($generated@@255 ($generated@@83 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@255 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 Int) ($generated@@422 Int) ) (! (= ($generated@@372 $generated@@421 $generated@@422) (div $generated@@421 $generated@@422))
 :pattern ( ($generated@@372 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@78 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@316 (type $generated@@425))))
(let (($generated@@427 ($generated@@315 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@314 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@313 $generated@@427 $generated@@426)) (= ($generated@@312 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@312 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@316 (type $generated@@428))))
(let (($generated@@430 ($generated@@315 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@314 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@313 $generated@@430 $generated@@429)) (= ($generated@@352 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@352 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@316 (type $generated@@431))))
(let (($generated@@433 ($generated@@315 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@314 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@313 $generated@@433 $generated@@432)) (= ($generated@@387 $generated@@431) ($generated@@423 $generated@@150))))))
 :pattern ( ($generated@@387 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@298 (type $generated@@434))))
(let (($generated@@436 ($generated@@297 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@296 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@295 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@150) (= (type $generated@@438) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@379 $generated@@434) ($generated@@283 ($generated@@228 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@379 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@316 (type $generated@@439))))
(let (($generated@@441 ($generated@@315 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@314 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@313 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@150) (= (type $generated@@443) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@439) ($generated@@283 ($generated@@228 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@387 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@150) ($generated@@229 $generated@@444 $generated@@46)) (and (= ($generated@@283 ($generated@@333 $generated@@2 $generated@@444)) $generated@@444) ($generated@@137 ($generated@@333 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@150) ($generated@@229 $generated@@445 $generated@@47)) (and (= ($generated@@283 ($generated@@333 $generated@@3 $generated@@445)) $generated@@445) ($generated@@137 ($generated@@333 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@150) ($generated@@229 $generated@@446 $generated@@44)) (and (= ($generated@@283 ($generated@@333 $generated@@4 $generated@@446)) $generated@@446) ($generated@@137 ($generated@@333 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 21))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@150) ($generated@@229 $generated@@448 $generated@@45)) (and (= ($generated@@283 ($generated@@333 $generated@@447 $generated@@448)) $generated@@448) ($generated@@137 ($generated@@333 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@66) (= ($generated@@229 ($generated@@283 $generated@@449) $generated@@450) ($generated@@137 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@229 ($generated@@283 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@81 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@78 $generated@@452 $generated@@2)) (<= 0 ($generated@@288 $generated@@451))))
 :pattern ( ($generated@@288 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@270 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@269 $generated@@454)) (<= 0 ($generated@@268 $generated@@453))))
 :pattern ( ($generated@@268 $generated@@453))
)))
(assert  (=> (<= 1 $generated@@370) (forall (($generated@@455 T@U) ($generated@@456 Int) ($generated@@457 Int) ) (!  (=> (and (= (type $generated@@455) $generated@@278) (or ($generated@@371 $generated@@456 $generated@@457) (and (not (= 1 $generated@@370)) (and (<= ($generated@@248 0) $generated@@456) (<= ($generated@@248 0) $generated@@457))))) true)
 :pattern ( ($generated@@276 $generated@@455 $generated@@456 $generated@@457))
))))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@66)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@458 ($generated@@405 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@405 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@66)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@462 ($generated@@405 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@405 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@74 ($generated@@405 $generated@@466 $generated@@467)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@413 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@413 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@472 ($generated@@413 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@413 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@74 ($generated@@413 $generated@@476 $generated@@477)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@150) (= (type $generated@@479) $generated@@150)) (= ($generated@@261 ($generated@@228 $generated@@478 $generated@@479)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@66) (= (type $generated@@483) $generated@@66)) (= ($generated@@480 ($generated@@140 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@140 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@66)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@66) (= (type $generated@@487) $generated@@66)) (= ($generated@@484 ($generated@@140 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@140 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@150) (= (type $generated@@489) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@228 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@150) (= (type $generated@@491) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@228 $generated@@490 $generated@@491))
)))
(assert  (and (forall (($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@494))
)) (forall (($generated@@495 T@U) ($generated@@496 Int) ) (! (let (($generated@@497 ($generated@@270 (type $generated@@495))))
(= (type ($generated@@493 $generated@@495 $generated@@496)) $generated@@497))
 :pattern ( ($generated@@493 $generated@@495 $generated@@496))
))))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@269 $generated@@150)) (= (type $generated@@499) $generated@@66)) (= (type $generated@@500) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@498 ($generated@@492 $generated@@499) $generated@@500) (forall (($generated@@501 Int) ) (!  (=> (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@268 $generated@@498))) ($generated@@255 ($generated@@493 $generated@@498 $generated@@501) $generated@@499 $generated@@500))
 :pattern ( ($generated@@493 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@76 $generated@@498 ($generated@@492 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@77 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@77 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@238 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@238 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@508 ($generated@@243 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@243 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@155 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@155 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@516 ($generated@@492 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@492 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@74 ($generated@@492 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@492 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated@@333 $generated@@521 ($generated@@283 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@283 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@296 $generated@@150 $generated@@150)) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) (= ($generated@@137 $generated@@522 ($generated@@405 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@522) $generated@@525))) (and ($generated@@229 ($generated@@83 ($generated@@380 $generated@@522) $generated@@525) $generated@@524) ($generated@@229 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@522) $generated@@525))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@137 $generated@@522 ($generated@@405 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@66)) (= ($generated@@137 $generated@@526 ($generated@@413 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@526) $generated@@529))) (and ($generated@@229 ($generated@@83 ($generated@@388 $generated@@526) $generated@@529) $generated@@528) ($generated@@229 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@526) $generated@@529))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@137 $generated@@526 ($generated@@413 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@150) (= (type $generated@@533) $generated@@150)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@228 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@228 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@150) (= (type $generated@@535) $generated@@150)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@228 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@228 $generated@@534 $generated@@535))
)))
(assert  (=> (<= 1 $generated@@370) (forall (($generated@@536 T@U) ($generated@@537 Int) ($generated@@538 Int) ) (!  (=> (and (= (type $generated@@536) $generated@@278) (or ($generated@@371 $generated@@537 $generated@@538) (and (not (= 1 $generated@@370)) (and (<= ($generated@@248 0) $generated@@537) (<= ($generated@@248 0) $generated@@538))))) (and (=> (not (= $generated@@537 ($generated@@248 0))) ($generated@@371 (- $generated@@537 1) ($generated@@372 $generated@@538 ($generated@@248 2)))) (= ($generated@@276 ($generated@@277 $generated@@536) $generated@@537 $generated@@538) (ite (= $generated@@537 ($generated@@248 0)) (= ($generated@@373 $generated@@538 ($generated@@248 2)) ($generated@@248 1)) ($generated@@276 $generated@@536 (- $generated@@537 1) ($generated@@372 $generated@@538 ($generated@@248 2)))))))
 :pattern ( ($generated@@276 ($generated@@277 $generated@@536) $generated@@537 $generated@@538))
))))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@66)) ($generated@@229 $generated@@539 ($generated@@405 $generated@@540 $generated@@541))) (and (= ($generated@@283 ($generated@@333 ($generated@@296 $generated@@150 $generated@@150) $generated@@539)) $generated@@539) ($generated@@137 ($generated@@333 ($generated@@296 $generated@@150 $generated@@150) $generated@@539) ($generated@@405 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@229 $generated@@539 ($generated@@405 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) $generated@@66)) ($generated@@229 $generated@@542 ($generated@@413 $generated@@543 $generated@@544))) (and (= ($generated@@283 ($generated@@333 ($generated@@314 $generated@@150 $generated@@150) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@333 ($generated@@314 $generated@@150 $generated@@150) $generated@@542) ($generated@@413 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@229 $generated@@542 ($generated@@413 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@66) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) $generated@@150)) ($generated@@229 $generated@@547 ($generated@@140 $generated@@545 $generated@@546))) (and (= ($generated@@283 ($generated@@333 $generated@@141 $generated@@547)) $generated@@547) ($generated@@137 ($generated@@333 $generated@@141 $generated@@547) ($generated@@140 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@229 $generated@@547 ($generated@@140 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
 (not ($generated@@0 ($generated@@83 ($generated@@423 $generated@@549) $generated@@548))))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@83 ($generated@@423 $generated@@549) $generated@@548)))
)))
(assert (forall (($generated@@550 Int) ($generated@@551 Int) ) (! (= ($generated@@373 $generated@@550 $generated@@551) (mod $generated@@550 $generated@@551))
 :pattern ( ($generated@@373 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@71)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@66) (= (type $generated@@555) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@554 $generated@@555)) $generated@@63) (= ($generated@@552 ($generated@@140 $generated@@554 $generated@@555)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@141) (= ($generated@@530 ($generated@@283 $generated@@556)) ($generated@@531 $generated@@556)))
 :pattern ( ($generated@@530 ($generated@@283 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@150) ($generated@@229 $generated@@557 ($generated@@77 0))) (and (= ($generated@@283 ($generated@@333 $generated@@2 $generated@@557)) $generated@@557) ($generated@@137 ($generated@@333 ($generated@@78 $generated@@150 $generated@@4) $generated@@557) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@557 ($generated@@77 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@150) (= (type $generated@@559) $generated@@66)) ($generated@@229 $generated@@558 ($generated@@238 $generated@@559))) (and (= ($generated@@283 ($generated@@333 ($generated@@78 $generated@@150 $generated@@4) $generated@@558)) $generated@@558) ($generated@@137 ($generated@@333 ($generated@@78 $generated@@150 $generated@@4) $generated@@558) ($generated@@238 $generated@@559))))
 :pattern ( ($generated@@229 $generated@@558 ($generated@@238 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@150) (= (type $generated@@561) $generated@@66)) ($generated@@229 $generated@@560 ($generated@@243 $generated@@561))) (and (= ($generated@@283 ($generated@@333 ($generated@@78 $generated@@150 $generated@@4) $generated@@560)) $generated@@560) ($generated@@137 ($generated@@333 ($generated@@78 $generated@@150 $generated@@4) $generated@@560) ($generated@@243 $generated@@561))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@243 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@150) (= (type $generated@@563) $generated@@66)) ($generated@@229 $generated@@562 ($generated@@155 $generated@@563))) (and (= ($generated@@283 ($generated@@333 ($generated@@78 $generated@@150 $generated@@2) $generated@@562)) $generated@@562) ($generated@@137 ($generated@@333 ($generated@@78 $generated@@150 $generated@@2) $generated@@562) ($generated@@155 $generated@@563))))
 :pattern ( ($generated@@229 $generated@@562 ($generated@@155 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@150) (= (type $generated@@565) $generated@@66)) ($generated@@229 $generated@@564 ($generated@@492 $generated@@565))) (and (= ($generated@@283 ($generated@@333 ($generated@@269 $generated@@150) $generated@@564)) $generated@@564) ($generated@@137 ($generated@@333 ($generated@@269 $generated@@150) $generated@@564) ($generated@@492 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@564 ($generated@@492 $generated@@565)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@552 $generated@@134) $generated@@64))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@566 ($generated@@155 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@566 $generated@@569)))) ($generated@@255 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@83 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@76 $generated@@566 ($generated@@155 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@141) (= (type $generated@@571) $generated@@66)) (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@572) (and ($generated@@139 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@66) ($generated@@76 $generated@@570 ($generated@@140 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@76 $generated@@570 ($generated@@140 $generated@@571 $generated@@573) $generated@@572))
))))) ($generated@@255 ($generated@@148 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@255 ($generated@@148 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@141) (= (type $generated@@575) $generated@@66)) (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@576) (and ($generated@@139 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@66) ($generated@@76 $generated@@574 ($generated@@140 $generated@@577 $generated@@575) $generated@@576))
 :pattern ( ($generated@@76 $generated@@574 ($generated@@140 $generated@@577 $generated@@575) $generated@@576))
))))) ($generated@@255 ($generated@@149 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@255 ($generated@@149 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@150) (= (type $generated@@579) $generated@@150)) (= ($generated@@228 ($generated@@250 $generated@@578) ($generated@@250 $generated@@579)) ($generated@@250 ($generated@@228 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@578) ($generated@@250 $generated@@579)))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@248 $generated@@580))) ($generated@@250 ($generated@@283 ($generated@@8 $generated@@580))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@248 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@283 ($generated@@250 $generated@@581)) ($generated@@250 ($generated@@283 $generated@@581)))
 :pattern ( ($generated@@283 ($generated@@250 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@270 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@269 $generated@@583)) (= ($generated@@268 $generated@@582) 0)) (= $generated@@582 ($generated@@267 $generated@@583))))
 :pattern ( ($generated@@268 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@78 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@288 ($generated@@84 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@288 $generated@@584) ($generated ($generated@@83 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@288 ($generated@@84 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@2)) ($generated@@76 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@3)) ($generated@@76 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@593) $generated@@4)) ($generated@@76 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@76 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) $generated@@447)) ($generated@@76 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@76 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@597) $generated@@150)) ($generated@@76 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@76 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@269 $generated@@150)) (= (type $generated@@599) $generated@@66)) (= ($generated@@137 $generated@@598 ($generated@@492 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@268 $generated@@598))) ($generated@@229 ($generated@@493 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@493 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@137 $generated@@598 ($generated@@492 $generated@@599)))
)))
(assert  (and (forall (($generated@@603 T@U) ) (! (= (type ($generated@@601 $generated@@603)) $generated@@278)
 :pattern ( ($generated@@601 $generated@@603))
)) (= (type $generated@@602) $generated@@278)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ($generated@@606 Int) ) (!  (=> (= (type $generated@@604) $generated@@278) (= ($generated@@276 $generated@@604 $generated@@605 $generated@@606) ($generated@@276 $generated@@602 $generated@@605 $generated@@606)))
 :pattern ( ($generated@@276 ($generated@@601 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) ($generated@@269 $generated@@150)) (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@268 $generated@@608))) (< ($generated@@531 ($generated@@333 $generated@@141 ($generated@@493 $generated@@608 $generated@@609))) ($generated@@607 $generated@@608))))
 :pattern ( ($generated@@531 ($generated@@333 $generated@@141 ($generated@@493 $generated@@608 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@296 $generated@@150 $generated@@150)) (= (type $generated@@611) $generated@@66)) (= (type $generated@@612) $generated@@66)) ($generated@@137 $generated@@610 ($generated@@405 $generated@@611 $generated@@612))) (and (and ($generated@@137 ($generated@@294 $generated@@610) ($generated@@238 $generated@@611)) ($generated@@137 ($generated@@341 $generated@@610) ($generated@@238 $generated@@612))) ($generated@@137 ($generated@@379 $generated@@610) ($generated@@238 ($generated@@140 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@137 $generated@@610 ($generated@@405 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@614) $generated@@66)) (= (type $generated@@615) $generated@@66)) ($generated@@137 $generated@@613 ($generated@@413 $generated@@614 $generated@@615))) (and (and ($generated@@137 ($generated@@312 $generated@@613) ($generated@@243 $generated@@614)) ($generated@@137 ($generated@@352 $generated@@613) ($generated@@243 $generated@@615))) ($generated@@137 ($generated@@387 $generated@@613) ($generated@@243 ($generated@@140 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@137 $generated@@613 ($generated@@413 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@2) ($generated@@137 $generated@@616 $generated@@46))
 :pattern ( ($generated@@137 $generated@@616 $generated@@46))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@3) ($generated@@137 $generated@@617 $generated@@47))
 :pattern ( ($generated@@137 $generated@@617 $generated@@47))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@4) ($generated@@137 $generated@@618 $generated@@44))
 :pattern ( ($generated@@137 $generated@@618 $generated@@44))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@447) ($generated@@137 $generated@@619 $generated@@45))
 :pattern ( ($generated@@137 $generated@@619 $generated@@45))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@150) ($generated@@137 $generated@@620 $generated@@48))
 :pattern ( ($generated@@137 $generated@@620 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@623) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@626) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@627) $generated@@79)) (= (type $generated@@628) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@630  (=> (not (= $generated@@621 ($generated@@248 0))) (and (=> (= (ControlFlow 0 5) (- 0 10)) (not (= ($generated@@248 2) 0))) (=> (not (= ($generated@@248 2) 0)) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@137 ($generated@@8 (- $generated@@621 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@621 1)) $generated@@134) (=> (and (= $generated@@622 (- $generated@@621 1)) ($generated@@76 ($generated@@8 $generated@@622) $generated@@134 $generated@@623)) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@137 ($generated@@8 ($generated@@372 $generated@@624 ($generated@@248 2))) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@372 $generated@@624 ($generated@@248 2))) $generated@@134) (=> (and (= $generated@@625 ($generated@@372 $generated@@624 ($generated@@248 2))) ($generated@@76 ($generated@@8 $generated@@625) $generated@@134 $generated@@623)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@621) (= $generated@@622 $generated@@621))) (=> (or (<= 0 $generated@@621) (= $generated@@622 $generated@@621)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (or (<= 0 $generated@@624) (< $generated@@622 $generated@@621)) (= $generated@@625 $generated@@624))) (=> (or (or (<= 0 $generated@@624) (< $generated@@622 $generated@@621)) (= $generated@@625 $generated@@624)) (=> (= (ControlFlow 0 5) (- 0 4)) (or (< $generated@@622 $generated@@621) (and (= $generated@@622 $generated@@621) (< $generated@@625 $generated@@624)))))))))))))))))))
(let (($generated@@631  (=> (and (= $generated@@621 ($generated@@248 0)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@248 2) 0)))))
(let (($generated@@632  (=> (= $generated@@626 ($generated@@216 $generated@@627 $generated@@623 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 3) $generated@@631) (=> (= (ControlFlow 0 11) 5) $generated@@630)))))
(let (($generated@@633 true))
(let (($generated@@634  (=> (= $generated@@628 ($generated@@161 $generated@@627 $generated@@623 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 1) $generated@@633) (=> (= (ControlFlow 0 12) 11) $generated@@632)))))
(let (($generated@@635  (=> (and ($generated@@254 $generated@@623) ($generated@@629 $generated@@623)) (=> (and (and (<= ($generated@@248 0) $generated@@621) (<= ($generated@@248 0) $generated@@624)) (and (= 1 $generated@@370) (= (ControlFlow 0 13) 12))) $generated@@634))))
$generated@@635)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@275 (T@U Int Int T@U Int) T@U)
(declare-fun $generated@@276 () T@T)
(declare-fun $generated@@277 (T@T T@U) T@U)
(declare-fun $generated@@278 (T@U Int Int) Bool)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@374 () Int)
(declare-fun $generated@@375 (Int) T@U)
(declare-fun $generated@@376 (Int) Bool)
(declare-fun $generated@@379 () T@U)
(declare-fun $generated@@380 (Int Int) Bool)
(declare-fun $generated@@391 (Int Int) Int)
(declare-fun $generated@@392 (Int Int) Int)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@512 (T@U Int) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@622 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@150) ($generated@@0 ($generated@@83 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@83 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@150)) (= (type $generated@@259) $generated@@150)) (= (type $generated@@260) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@254 $generated@@260)) (= ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@141) (= ($generated@@139 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@141) ($generated@@139 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@150) (= (type $generated@@266) $generated@@150)) (= $generated@@264 ($generated@@228 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@139 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert  (and (and (= ($generated@@1 $generated@@276) 18) (forall (($generated@@279 T@U) ($generated@@280 Int) ($generated@@281 Int) ($generated@@282 T@U) ($generated@@283 Int) ) (! (= (type ($generated@@275 $generated@@279 $generated@@280 $generated@@281 $generated@@282 $generated@@283)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@275 $generated@@279 $generated@@280 $generated@@281 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@T) ($generated@@285 T@U) ) (! (= (type ($generated@@277 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@277 $generated@@284 $generated@@285))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 Int) ($generated@@288 Int) ($generated@@289 T@U) ($generated@@290 Int) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@286) $generated@@66) (= (type $generated@@289) $generated@@276)) (= (type $generated@@291) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@275 $generated@@286 $generated@@287 $generated@@288 $generated@@289 $generated@@290) $generated@@291))  (and ($generated@@229 $generated@@291 $generated@@286) (and (and (<= $generated@@287 ($generated ($generated@@277 $generated@@2 $generated@@291))) (< ($generated ($generated@@277 $generated@@2 $generated@@291)) $generated@@288)) ($generated@@278 $generated@@289 ($generated ($generated@@277 $generated@@2 $generated@@291)) $generated@@290)))))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@286 $generated@@287 $generated@@288 $generated@@289 $generated@@290) $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@2) (= ($generated@@137 $generated@@292 $generated@@134) (<= ($generated@@248 0) ($generated $generated@@292))))
 :pattern ( ($generated@@137 $generated@@292 $generated@@134))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@276)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 Int) ($generated@@297 Int) ) (!  (=> (= (type $generated@@295) $generated@@276) (= ($generated@@278 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@278 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@278 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@150)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@66) (= (type $generated@@302) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@255 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@76 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@255 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@78 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@81 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@78 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@83 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 20)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@78 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@83 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@83 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@81 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@78 $generated@@346 $generated@@2)) (= ($generated@@156 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@83 $generated@@345 $generated@@347))) (<= ($generated ($generated@@83 $generated@@345 $generated@@347)) ($generated@@303 $generated@@345))))
 :pattern ( ($generated@@83 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@156 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@150) ($generated@@229 $generated@@348 $generated@@134)) (and (= ($generated@@298 ($generated@@277 $generated@@2 $generated@@348)) $generated@@348) ($generated@@137 ($generated@@277 $generated@@2 $generated@@348) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@348 $generated@@134))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@313 (type $generated@@349))))
(let (($generated@@351 ($generated@@312 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@311 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@310 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@309 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@313 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@78 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@313 (type $generated@@356))))
(let (($generated@@358 ($generated@@312 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@311 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@310 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@331 (type $generated@@360))))
(let (($generated@@362 ($generated@@330 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@329 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@328 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@83 ($generated@@327 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@327 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@331 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@78 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@331 (type $generated@@367))))
(let (($generated@@369 ($generated@@330 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@329 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@328 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@83 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@372) $generated@@66)) (= ($generated@@137 $generated@@371 ($generated@@155 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@371 $generated@@373)))) ($generated@@229 $generated@@373 $generated@@372))
 :pattern ( ($generated@@83 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@137 $generated@@371 ($generated@@155 $generated@@372)))
)))
(assert (forall (($generated@@377 Int) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)))
(assert  (=> (<= 2 $generated@@374) (forall (($generated@@378 Int) ) (!  (=> (or ($generated@@376 $generated@@378) (and (not (= 2 $generated@@374)) (<= ($generated@@248 0) $generated@@378))) ($generated@@137 ($generated@@375 $generated@@378) ($generated@@238 $generated@@134)))
 :pattern ( ($generated@@375 $generated@@378))
))))
(assert (= (type $generated@@379) $generated@@276))
(assert  (=> (<= 2 $generated@@374) (forall (($generated@@381 Int) ) (!  (=> (or ($generated@@376 $generated@@381) (and (not (= 2 $generated@@374)) (<= ($generated@@248 0) $generated@@381))) (and (forall (($generated@@382 Int) ) (!  (=> (<= ($generated@@248 0) $generated@@382) (=> (< $generated@@382 $generated@@381) ($generated@@380 $generated@@382 $generated@@381)))
 :pattern ( ($generated@@278 ($generated@@293 $generated@@379) $generated@@382 $generated@@381))
)) (= ($generated@@375 $generated@@381) ($generated@@275 $generated@@46 ($generated@@248 0) $generated@@381 ($generated@@293 $generated@@379) $generated@@381))))
 :pattern ( ($generated@@375 $generated@@381))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@384) $generated@@66)) (= (type $generated@@385) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@383 ($generated@@238 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@150) ($generated@@0 ($generated@@83 $generated@@383 $generated@@386))) ($generated@@255 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@83 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@76 $generated@@383 ($generated@@238 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@388) $generated@@66)) (= (type $generated@@389) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@387 ($generated@@243 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@150) ($generated@@0 ($generated@@83 $generated@@387 $generated@@390))) ($generated@@255 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@83 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@76 $generated@@387 ($generated@@243 $generated@@388) $generated@@389))
)))
(assert  (=> (<= 1 $generated@@374) (forall (($generated@@393 T@U) ($generated@@394 Int) ($generated@@395 Int) ) (!  (=> (and (= (type $generated@@393) $generated@@276) (or ($generated@@380 ($generated@@248 $generated@@394) ($generated@@248 $generated@@395)) (and (not (= 1 $generated@@374)) (and (<= ($generated@@248 0) $generated@@394) (<= ($generated@@248 0) $generated@@395))))) (and (=> (not (= ($generated@@248 $generated@@394) ($generated@@248 0))) ($generated@@380 ($generated@@248 (- $generated@@394 1)) ($generated@@248 ($generated@@391 $generated@@395 ($generated@@248 2))))) (= ($generated@@278 ($generated@@293 $generated@@393) ($generated@@248 $generated@@394) ($generated@@248 $generated@@395)) (ite (= ($generated@@248 $generated@@394) ($generated@@248 0)) (= ($generated@@248 ($generated@@392 $generated@@395 ($generated@@248 2))) ($generated@@248 1)) ($generated@@278 ($generated@@293 $generated@@393) ($generated@@248 (- $generated@@394 1)) ($generated@@248 ($generated@@391 $generated@@395 ($generated@@248 2))))))))
 :weight 3
 :pattern ( ($generated@@278 ($generated@@293 $generated@@393) ($generated@@248 $generated@@394) ($generated@@248 $generated@@395)))
))))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@83 ($generated@@304 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@83 ($generated@@304 $generated@@397) $generated@@396)))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@313 (type $generated@@401))))
(let (($generated@@403 ($generated@@312 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@78 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@405) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@404) ($generated@@148 ($generated@@277 $generated@@141 $generated@@405)))) (= ($generated@@83 ($generated@@399 $generated@@404) ($generated@@148 ($generated@@277 $generated@@141 $generated@@405))) ($generated@@149 ($generated@@277 $generated@@141 $generated@@405))))))
 :pattern ( ($generated@@83 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@331 (type $generated@@409))))
(let (($generated@@411 ($generated@@330 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@78 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@329 $generated@@150 $generated@@150)) (= (type $generated@@413) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@83 ($generated@@327 $generated@@412) ($generated@@148 ($generated@@277 $generated@@141 $generated@@413)))) (= ($generated@@83 ($generated@@407 $generated@@412) ($generated@@148 ($generated@@277 $generated@@141 $generated@@413))) ($generated@@149 ($generated@@277 $generated@@141 $generated@@413))))))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@312 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@311 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@83 ($generated@@353 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@83 ($generated@@399 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@414) $generated@@418))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@330 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@329 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@83 ($generated@@364 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@83 ($generated@@327 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@83 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@83 ($generated@@327 $generated@@419) $generated@@423))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@66)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@428) $generated@@66)) (= (type $generated@@429) $generated@@66)) (= (type $generated@@430) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@427) $generated@@431))) (and ($generated@@255 ($generated@@83 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@255 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@76 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@66)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@329 $generated@@150 $generated@@150)) (= (type $generated@@436) $generated@@66)) (= (type $generated@@437) $generated@@66)) (= (type $generated@@438) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@327 $generated@@435) $generated@@439))) (and ($generated@@255 ($generated@@83 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@255 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@83 ($generated@@327 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@76 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 Int) ($generated@@441 Int) ) (! (= ($generated@@391 $generated@@440 $generated@@441) (div $generated@@440 $generated@@441))
 :pattern ( ($generated@@391 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@78 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@331 (type $generated@@444))))
(let (($generated@@446 ($generated@@330 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@329 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@328 $generated@@446 $generated@@445)) (= ($generated@@327 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@327 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@331 (type $generated@@447))))
(let (($generated@@449 ($generated@@330 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@329 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@328 $generated@@449 $generated@@448)) (= ($generated@@364 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@364 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@331 (type $generated@@450))))
(let (($generated@@452 ($generated@@330 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@329 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@328 $generated@@452 $generated@@451)) (= ($generated@@406 $generated@@450) ($generated@@442 $generated@@150))))))
 :pattern ( ($generated@@406 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@313 (type $generated@@453))))
(let (($generated@@455 ($generated@@312 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@311 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@310 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@150) (= (type $generated@@457) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@398 $generated@@453) ($generated@@298 ($generated@@228 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@398 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@331 (type $generated@@458))))
(let (($generated@@460 ($generated@@330 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@329 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@328 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@150) (= (type $generated@@462) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@406 $generated@@458) ($generated@@298 ($generated@@228 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@406 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@150) ($generated@@229 $generated@@463 $generated@@46)) (and (= ($generated@@298 ($generated@@277 $generated@@2 $generated@@463)) $generated@@463) ($generated@@137 ($generated@@277 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@150) ($generated@@229 $generated@@464 $generated@@47)) (and (= ($generated@@298 ($generated@@277 $generated@@3 $generated@@464)) $generated@@464) ($generated@@137 ($generated@@277 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@150) ($generated@@229 $generated@@465 $generated@@44)) (and (= ($generated@@298 ($generated@@277 $generated@@4 $generated@@465)) $generated@@465) ($generated@@137 ($generated@@277 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 21))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@150) ($generated@@229 $generated@@467 $generated@@45)) (and (= ($generated@@298 ($generated@@277 $generated@@466 $generated@@467)) $generated@@467) ($generated@@137 ($generated@@277 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@66) (= ($generated@@229 ($generated@@298 $generated@@468) $generated@@469) ($generated@@137 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@229 ($generated@@298 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@81 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@78 $generated@@471 $generated@@2)) (<= 0 ($generated@@303 $generated@@470))))
 :pattern ( ($generated@@303 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@270 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@269 $generated@@473)) (<= 0 ($generated@@268 $generated@@472))))
 :pattern ( ($generated@@268 $generated@@472))
)))
(assert  (=> (<= 1 $generated@@374) (forall (($generated@@474 T@U) ($generated@@475 Int) ($generated@@476 Int) ) (!  (=> (and (= (type $generated@@474) $generated@@276) (or ($generated@@380 $generated@@475 $generated@@476) (and (not (= 1 $generated@@374)) (and (<= ($generated@@248 0) $generated@@475) (<= ($generated@@248 0) $generated@@476))))) true)
 :pattern ( ($generated@@278 $generated@@474 $generated@@475 $generated@@476))
))))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@424 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@424 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@424 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@66) (= (type $generated@@486) $generated@@66)) (= ($generated@@74 ($generated@@424 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@66) (= (type $generated@@490) $generated@@66)) (= ($generated@@487 ($generated@@432 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@432 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@66) (= (type $generated@@494) $generated@@66)) (= ($generated@@491 ($generated@@432 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@432 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@66) (= (type $generated@@496) $generated@@66)) (= ($generated@@74 ($generated@@432 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) (= (type $generated@@498) $generated@@150)) (= ($generated@@261 ($generated@@228 $generated@@497 $generated@@498)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@66) (= (type $generated@@502) $generated@@66)) (= ($generated@@499 ($generated@@140 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@140 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@140 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@140 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@150) (= (type $generated@@508) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@228 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@150) (= (type $generated@@510) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@228 $generated@@509 $generated@@510))
)))
(assert  (and (forall (($generated@@513 T@U) ) (! (= (type ($generated@@511 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@511 $generated@@513))
)) (forall (($generated@@514 T@U) ($generated@@515 Int) ) (! (let (($generated@@516 ($generated@@270 (type $generated@@514))))
(= (type ($generated@@512 $generated@@514 $generated@@515)) $generated@@516))
 :pattern ( ($generated@@512 $generated@@514 $generated@@515))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@269 $generated@@150)) (= (type $generated@@518) $generated@@66)) (= (type $generated@@519) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@517 ($generated@@511 $generated@@518) $generated@@519) (forall (($generated@@520 Int) ) (!  (=> (and (<= 0 $generated@@520) (< $generated@@520 ($generated@@268 $generated@@517))) ($generated@@255 ($generated@@512 $generated@@517 $generated@@520) $generated@@518 $generated@@519))
 :pattern ( ($generated@@512 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@76 $generated@@517 ($generated@@511 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 Int) ) (! (= ($generated@@521 ($generated@@77 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@77 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@66)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@66) (= ($generated@@523 ($generated@@238 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@238 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@526)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@66) (= ($generated@@527 ($generated@@243 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@243 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@530)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@66)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@66) (= ($generated@@531 ($generated@@155 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@155 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@534)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@66)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@66) (= ($generated@@535 ($generated@@511 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@511 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@66) (= ($generated@@74 ($generated@@511 $generated@@538)) $generated@@57))
 :pattern ( ($generated@@511 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@277 $generated@@540 ($generated@@298 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@298 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@66)) (= ($generated@@137 $generated@@541 ($generated@@424 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@541) $generated@@544))) (and ($generated@@229 ($generated@@83 ($generated@@399 $generated@@541) $generated@@544) $generated@@543) ($generated@@229 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@541) $generated@@544))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@137 $generated@@541 ($generated@@424 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@329 $generated@@150 $generated@@150)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) $generated@@66)) (= ($generated@@137 $generated@@545 ($generated@@432 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@327 $generated@@545) $generated@@548))) (and ($generated@@229 ($generated@@83 ($generated@@407 $generated@@545) $generated@@548) $generated@@547) ($generated@@229 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@545) $generated@@548))
 :pattern ( ($generated@@83 ($generated@@327 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@137 $generated@@545 ($generated@@432 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@150) (= (type $generated@@552) $generated@@150)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@228 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@228 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@150) (= (type $generated@@554) $generated@@150)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@228 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@228 $generated@@553 $generated@@554))
)))
(assert  (=> (<= 1 $generated@@374) (forall (($generated@@555 T@U) ($generated@@556 Int) ($generated@@557 Int) ) (!  (=> (and (= (type $generated@@555) $generated@@276) (or ($generated@@380 $generated@@556 $generated@@557) (and (not (= 1 $generated@@374)) (and (<= ($generated@@248 0) $generated@@556) (<= ($generated@@248 0) $generated@@557))))) (and (=> (not (= $generated@@556 ($generated@@248 0))) ($generated@@380 (- $generated@@556 1) ($generated@@391 $generated@@557 ($generated@@248 2)))) (= ($generated@@278 ($generated@@293 $generated@@555) $generated@@556 $generated@@557) (ite (= $generated@@556 ($generated@@248 0)) (= ($generated@@392 $generated@@557 ($generated@@248 2)) ($generated@@248 1)) ($generated@@278 $generated@@555 (- $generated@@556 1) ($generated@@391 $generated@@557 ($generated@@248 2)))))))
 :pattern ( ($generated@@278 ($generated@@293 $generated@@555) $generated@@556 $generated@@557))
))))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@150) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) $generated@@66)) ($generated@@229 $generated@@558 ($generated@@424 $generated@@559 $generated@@560))) (and (= ($generated@@298 ($generated@@277 ($generated@@311 $generated@@150 $generated@@150) $generated@@558)) $generated@@558) ($generated@@137 ($generated@@277 ($generated@@311 $generated@@150 $generated@@150) $generated@@558) ($generated@@424 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@229 $generated@@558 ($generated@@424 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@150) (= (type $generated@@562) $generated@@66)) (= (type $generated@@563) $generated@@66)) ($generated@@229 $generated@@561 ($generated@@432 $generated@@562 $generated@@563))) (and (= ($generated@@298 ($generated@@277 ($generated@@329 $generated@@150 $generated@@150) $generated@@561)) $generated@@561) ($generated@@137 ($generated@@277 ($generated@@329 $generated@@150 $generated@@150) $generated@@561) ($generated@@432 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@229 $generated@@561 ($generated@@432 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@66) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) $generated@@150)) ($generated@@229 $generated@@566 ($generated@@140 $generated@@564 $generated@@565))) (and (= ($generated@@298 ($generated@@277 $generated@@141 $generated@@566)) $generated@@566) ($generated@@137 ($generated@@277 $generated@@141 $generated@@566) ($generated@@140 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@566 ($generated@@140 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@83 ($generated@@442 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@83 ($generated@@442 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@569 Int) ($generated@@570 Int) ) (! (= ($generated@@392 $generated@@569 $generated@@570) (mod $generated@@569 $generated@@570))
 :pattern ( ($generated@@392 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@71)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@66) (= (type $generated@@574) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@573 $generated@@574)) $generated@@63) (= ($generated@@571 ($generated@@140 $generated@@573 $generated@@574)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@141) (= ($generated@@549 ($generated@@298 $generated@@575)) ($generated@@550 $generated@@575)))
 :pattern ( ($generated@@549 ($generated@@298 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@150) ($generated@@229 $generated@@576 ($generated@@77 0))) (and (= ($generated@@298 ($generated@@277 $generated@@2 $generated@@576)) $generated@@576) ($generated@@137 ($generated@@277 ($generated@@78 $generated@@150 $generated@@4) $generated@@576) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@576 ($generated@@77 0)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@66)) ($generated@@229 $generated@@577 ($generated@@238 $generated@@578))) (and (= ($generated@@298 ($generated@@277 ($generated@@78 $generated@@150 $generated@@4) $generated@@577)) $generated@@577) ($generated@@137 ($generated@@277 ($generated@@78 $generated@@150 $generated@@4) $generated@@577) ($generated@@238 $generated@@578))))
 :pattern ( ($generated@@229 $generated@@577 ($generated@@238 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@150) (= (type $generated@@580) $generated@@66)) ($generated@@229 $generated@@579 ($generated@@243 $generated@@580))) (and (= ($generated@@298 ($generated@@277 ($generated@@78 $generated@@150 $generated@@4) $generated@@579)) $generated@@579) ($generated@@137 ($generated@@277 ($generated@@78 $generated@@150 $generated@@4) $generated@@579) ($generated@@243 $generated@@580))))
 :pattern ( ($generated@@229 $generated@@579 ($generated@@243 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@66)) ($generated@@229 $generated@@581 ($generated@@155 $generated@@582))) (and (= ($generated@@298 ($generated@@277 ($generated@@78 $generated@@150 $generated@@2) $generated@@581)) $generated@@581) ($generated@@137 ($generated@@277 ($generated@@78 $generated@@150 $generated@@2) $generated@@581) ($generated@@155 $generated@@582))))
 :pattern ( ($generated@@229 $generated@@581 ($generated@@155 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@150) (= (type $generated@@584) $generated@@66)) ($generated@@229 $generated@@583 ($generated@@511 $generated@@584))) (and (= ($generated@@298 ($generated@@277 ($generated@@269 $generated@@150) $generated@@583)) $generated@@583) ($generated@@137 ($generated@@277 ($generated@@269 $generated@@150) $generated@@583) ($generated@@511 $generated@@584))))
 :pattern ( ($generated@@229 $generated@@583 ($generated@@511 $generated@@584)))
)))
(assert  (=> (<= 2 $generated@@374) (forall (($generated@@585 Int) ) (!  (=> (or ($generated@@376 ($generated@@248 $generated@@585)) (and (not (= 2 $generated@@374)) (<= ($generated@@248 0) $generated@@585))) (and (forall (($generated@@586 Int) ) (!  (=> (<= ($generated@@248 0) $generated@@586) (=> (< $generated@@586 $generated@@585) ($generated@@380 $generated@@586 ($generated@@248 $generated@@585))))
 :pattern ( ($generated@@278 ($generated@@293 $generated@@379) $generated@@586 $generated@@585))
)) (= ($generated@@375 ($generated@@248 $generated@@585)) ($generated@@275 $generated@@46 ($generated@@248 0) $generated@@585 ($generated@@293 $generated@@379) ($generated@@248 $generated@@585)))))
 :weight 3
 :pattern ( ($generated@@375 ($generated@@248 $generated@@585)))
))))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@571 $generated@@134) $generated@@64))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@587 ($generated@@155 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@587 $generated@@590)))) ($generated@@255 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@83 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@76 $generated@@587 ($generated@@155 $generated@@588) $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@141) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@593) (and ($generated@@139 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@66) ($generated@@76 $generated@@591 ($generated@@140 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@76 $generated@@591 ($generated@@140 $generated@@592 $generated@@594) $generated@@593))
))))) ($generated@@255 ($generated@@148 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@255 ($generated@@148 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@141) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@597) (and ($generated@@139 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@66) ($generated@@76 $generated@@595 ($generated@@140 $generated@@598 $generated@@596) $generated@@597))
 :pattern ( ($generated@@76 $generated@@595 ($generated@@140 $generated@@598 $generated@@596) $generated@@597))
))))) ($generated@@255 ($generated@@149 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@255 ($generated@@149 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@150) (= (type $generated@@600) $generated@@150)) (= ($generated@@228 ($generated@@250 $generated@@599) ($generated@@250 $generated@@600)) ($generated@@250 ($generated@@228 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@599) ($generated@@250 $generated@@600)))
)))
(assert (forall (($generated@@601 Int) ) (! (= ($generated@@298 ($generated@@8 ($generated@@248 $generated@@601))) ($generated@@250 ($generated@@298 ($generated@@8 $generated@@601))))
 :pattern ( ($generated@@298 ($generated@@8 ($generated@@248 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ) (! (= ($generated@@298 ($generated@@250 $generated@@602)) ($generated@@250 ($generated@@298 $generated@@602)))
 :pattern ( ($generated@@298 ($generated@@250 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@270 (type $generated@@603))))
 (=> (and (= (type $generated@@603) ($generated@@269 $generated@@604)) (= ($generated@@268 $generated@@603) 0)) (= $generated@@603 ($generated@@267 $generated@@604))))
 :pattern ( ($generated@@268 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@606)))
 (=> (and (and (= (type $generated@@605) ($generated@@78 $generated@@608 $generated@@2)) (= (type $generated@@607) $generated@@2)) (<= 0 ($generated $generated@@607))) (= ($generated@@303 ($generated@@84 $generated@@605 $generated@@606 $generated@@607)) (+ (- ($generated@@303 $generated@@605) ($generated ($generated@@83 $generated@@605 $generated@@606))) ($generated $generated@@607)))))
 :pattern ( ($generated@@303 ($generated@@84 $generated@@605 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@610) $generated@@2)) ($generated@@76 $generated@@610 $generated@@46 $generated@@609))
 :pattern ( ($generated@@76 $generated@@610 $generated@@46 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@612) $generated@@3)) ($generated@@76 $generated@@612 $generated@@47 $generated@@611))
 :pattern ( ($generated@@76 $generated@@612 $generated@@47 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@614) $generated@@4)) ($generated@@76 $generated@@614 $generated@@44 $generated@@613))
 :pattern ( ($generated@@76 $generated@@614 $generated@@44 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@616) $generated@@466)) ($generated@@76 $generated@@616 $generated@@45 $generated@@615))
 :pattern ( ($generated@@76 $generated@@616 $generated@@45 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@618) $generated@@150)) ($generated@@76 $generated@@618 $generated@@48 $generated@@617))
 :pattern ( ($generated@@76 $generated@@618 $generated@@48 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@269 $generated@@150)) (= (type $generated@@620) $generated@@66)) (= ($generated@@137 $generated@@619 ($generated@@511 $generated@@620)) (forall (($generated@@621 Int) ) (!  (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@268 $generated@@619))) ($generated@@229 ($generated@@512 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@512 $generated@@619 $generated@@621))
))))
 :pattern ( ($generated@@137 $generated@@619 ($generated@@511 $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ) (! (= (type ($generated@@622 $generated@@623)) $generated@@276)
 :pattern ( ($generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 Int) ($generated@@626 Int) ) (!  (=> (= (type $generated@@624) $generated@@276) (= ($generated@@278 $generated@@624 $generated@@625 $generated@@626) ($generated@@278 $generated@@379 $generated@@625 $generated@@626)))
 :pattern ( ($generated@@278 ($generated@@622 $generated@@624) $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@269 $generated@@150)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@268 $generated@@628))) (< ($generated@@550 ($generated@@277 $generated@@141 ($generated@@512 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@550 ($generated@@277 $generated@@141 ($generated@@512 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) $generated@@66)) ($generated@@137 $generated@@630 ($generated@@424 $generated@@631 $generated@@632))) (and (and ($generated@@137 ($generated@@309 $generated@@630) ($generated@@238 $generated@@631)) ($generated@@137 ($generated@@353 $generated@@630) ($generated@@238 $generated@@632))) ($generated@@137 ($generated@@398 $generated@@630) ($generated@@238 ($generated@@140 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@137 $generated@@630 ($generated@@424 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@329 $generated@@150 $generated@@150)) (= (type $generated@@634) $generated@@66)) (= (type $generated@@635) $generated@@66)) ($generated@@137 $generated@@633 ($generated@@432 $generated@@634 $generated@@635))) (and (and ($generated@@137 ($generated@@327 $generated@@633) ($generated@@243 $generated@@634)) ($generated@@137 ($generated@@364 $generated@@633) ($generated@@243 $generated@@635))) ($generated@@137 ($generated@@406 $generated@@633) ($generated@@243 ($generated@@140 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@137 $generated@@633 ($generated@@432 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@137 $generated@@636 $generated@@46))
 :pattern ( ($generated@@137 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@137 $generated@@637 $generated@@47))
 :pattern ( ($generated@@137 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@137 $generated@@638 $generated@@44))
 :pattern ( ($generated@@137 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@466) ($generated@@137 $generated@@639 $generated@@45))
 :pattern ( ($generated@@137 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@150) ($generated@@137 $generated@@640 $generated@@48))
 :pattern ( ($generated@@137 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@643) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@644) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@645) $generated@@79)) (= (type $generated@@646) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@648  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@137 ($generated@@275 $generated@@46 ($generated@@248 0) $generated@@641 ($generated@@293 $generated@@379) $generated@@641) ($generated@@238 $generated@@134)))))
(let (($generated@@649  (=> (and (not (and (and (<= ($generated@@248 0) $generated@@642) (< $generated@@642 $generated@@641)) ($generated@@278 ($generated@@293 $generated@@379) $generated@@642 $generated@@641))) (= (ControlFlow 0 6) 4)) $generated@@648)))
(let (($generated@@650  (=> (and (and (and (<= ($generated@@248 0) $generated@@642) (< $generated@@642 $generated@@641)) ($generated@@278 ($generated@@293 $generated@@379) $generated@@642 $generated@@641)) (= (ControlFlow 0 5) 4)) $generated@@648)))
(let (($generated@@651  (=> (not (and (<= ($generated@@248 0) $generated@@642) (< $generated@@642 $generated@@641))) (and (=> (= (ControlFlow 0 9) 5) $generated@@650) (=> (= (ControlFlow 0 9) 6) $generated@@649)))))
(let (($generated@@652  (=> (and (<= ($generated@@248 0) $generated@@642) (< $generated@@642 $generated@@641)) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@137 ($generated@@8 $generated@@642) $generated@@134)) (=> ($generated@@137 ($generated@@8 $generated@@642) $generated@@134) (=> ($generated@@76 ($generated@@8 $generated@@642) $generated@@134 $generated@@643) (=> (and ($generated@@76 ($generated@@8 $generated@@641) $generated@@134 $generated@@643) ($generated@@380 $generated@@642 $generated@@641)) (and (=> (= (ControlFlow 0 7) 5) $generated@@650) (=> (= (ControlFlow 0 7) 6) $generated@@649)))))))))
(let (($generated@@653  (=> (< $generated@@642 ($generated@@248 0)) (and (=> (= (ControlFlow 0 11) 7) $generated@@652) (=> (= (ControlFlow 0 11) 9) $generated@@651)))))
(let (($generated@@654  (=> (<= ($generated@@248 0) $generated@@642) (and (=> (= (ControlFlow 0 10) 7) $generated@@652) (=> (= (ControlFlow 0 10) 9) $generated@@651)))))
(let (($generated@@655  (and (=> (= (ControlFlow 0 12) 10) $generated@@654) (=> (= (ControlFlow 0 12) 11) $generated@@653))))
(let (($generated@@656 true))
(let (($generated@@657  (=> (= $generated@@644 ($generated@@216 $generated@@645 $generated@@643 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@655) (=> (= (ControlFlow 0 13) 2) $generated@@656)))))
(let (($generated@@658 true))
(let (($generated@@659  (=> (= $generated@@646 ($generated@@161 $generated@@645 $generated@@643 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 1) $generated@@658) (=> (= (ControlFlow 0 14) 13) $generated@@657)))))
(let (($generated@@660  (=> (and (and (and ($generated@@254 $generated@@643) ($generated@@647 $generated@@643)) (<= ($generated@@248 0) $generated@@641)) (and (= 2 $generated@@374) (= (ControlFlow 0 15) 14))) $generated@@659)))
$generated@@660))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U Int Int) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 (Int Int) Bool)
(declare-fun $generated@@172 (Int Int) Int)
(declare-fun $generated@@173 (Int Int) Int)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@T T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@164 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (= (type $generated@@167) $generated@@165) (= ($generated@@163 ($generated@@164 $generated@@167) $generated@@168 $generated@@169) ($generated@@163 $generated@@167 $generated@@168 $generated@@169)))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@167) $generated@@168 $generated@@169))
)))
(assert  (=> (<= 1 $generated@@170) (forall (($generated@@174 T@U) ($generated@@175 Int) ($generated@@176 Int) ) (!  (=> (and (= (type $generated@@174) $generated@@165) (or ($generated@@171 ($generated@@157 $generated@@175) ($generated@@157 $generated@@176)) (and (not (= 1 $generated@@170)) (and (<= ($generated@@157 0) $generated@@175) (<= ($generated@@157 0) $generated@@176))))) (and (=> (not (= ($generated@@157 $generated@@175) ($generated@@157 0))) ($generated@@171 ($generated@@157 (- $generated@@175 1)) ($generated@@157 ($generated@@172 $generated@@176 ($generated@@157 2))))) (= ($generated@@163 ($generated@@164 $generated@@174) ($generated@@157 $generated@@175) ($generated@@157 $generated@@176)) (ite (= ($generated@@157 $generated@@175) ($generated@@157 0)) (= ($generated@@157 ($generated@@173 $generated@@176 ($generated@@157 2))) ($generated@@157 1)) ($generated@@163 ($generated@@164 $generated@@174) ($generated@@157 (- $generated@@175 1)) ($generated@@157 ($generated@@172 $generated@@176 ($generated@@157 2))))))))
 :weight 3
 :pattern ( ($generated@@163 ($generated@@164 $generated@@174) ($generated@@157 $generated@@175) ($generated@@157 $generated@@176)))
))))
(assert (forall (($generated@@177 Int) ($generated@@178 Int) ) (! (= ($generated@@172 $generated@@177 $generated@@178) (div $generated@@177 $generated@@178))
 :pattern ( ($generated@@172 $generated@@177 $generated@@178))
)))
(assert  (=> (<= 1 $generated@@170) (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (!  (=> (and (= (type $generated@@179) $generated@@165) (or ($generated@@171 $generated@@180 $generated@@181) (and (not (= 1 $generated@@170)) (and (<= ($generated@@157 0) $generated@@180) (<= ($generated@@157 0) $generated@@181))))) true)
 :pattern ( ($generated@@163 $generated@@179 $generated@@180 $generated@@181))
))))
(assert  (and (and (= ($generated@@1 $generated@@184) 12) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@182 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@U) ) (! (= (type ($generated@@183 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@183 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(= ($generated@@183 $generated@@189 ($generated@@182 $generated@@188)) $generated@@188))
 :pattern ( ($generated@@182 $generated@@188))
)))
(assert  (=> (<= 1 $generated@@170) (forall (($generated@@190 T@U) ($generated@@191 Int) ($generated@@192 Int) ) (!  (=> (and (= (type $generated@@190) $generated@@165) (or ($generated@@171 $generated@@191 $generated@@192) (and (not (= 1 $generated@@170)) (and (<= ($generated@@157 0) $generated@@191) (<= ($generated@@157 0) $generated@@192))))) (and (=> (not (= $generated@@191 ($generated@@157 0))) ($generated@@171 (- $generated@@191 1) ($generated@@172 $generated@@192 ($generated@@157 2)))) (= ($generated@@163 ($generated@@164 $generated@@190) $generated@@191 $generated@@192) (ite (= $generated@@191 ($generated@@157 0)) (= ($generated@@173 $generated@@192 ($generated@@157 2)) ($generated@@157 1)) ($generated@@163 $generated@@190 (- $generated@@191 1) ($generated@@172 $generated@@192 ($generated@@157 2)))))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@190) $generated@@191 $generated@@192))
))))
(assert (forall (($generated@@193 Int) ($generated@@194 Int) ) (! (= ($generated@@173 $generated@@193 $generated@@194) (mod $generated@@193 $generated@@194))
 :pattern ( ($generated@@173 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@182 ($generated@@8 ($generated@@157 $generated@@195))) ($generated@@159 ($generated@@182 ($generated@@8 $generated@@195))))
 :pattern ( ($generated@@182 ($generated@@8 ($generated@@157 $generated@@195))))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@182 ($generated@@159 $generated@@196)) ($generated@@159 ($generated@@182 $generated@@196)))
 :pattern ( ($generated@@182 ($generated@@159 $generated@@196)))
)))
(assert  (and (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@165)
 :pattern ( ($generated@@197 $generated@@199))
)) (= (type $generated@@198) $generated@@165)))
(assert (forall (($generated@@200 T@U) ($generated@@201 Int) ($generated@@202 Int) ) (!  (=> (= (type $generated@@200) $generated@@165) (= ($generated@@163 $generated@@200 $generated@@201 $generated@@202) ($generated@@163 $generated@@198 $generated@@201 $generated@@202)))
 :pattern ( ($generated@@163 ($generated@@197 $generated@@200) $generated@@201 $generated@@202))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 (T@U) Bool)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 (T@U) Bool)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Int)
(assert  (and (and (and (and (= (type $generated@@203) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@204) $generated@@47)) (= (type $generated@@205) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@206) ($generated@@50 $generated@@4))) (= (type $generated@@208) ($generated@@48 $generated@@47 $generated@@49))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@212  (=> (= $generated@@203 ($generated@@45 $generated@@204 $generated@@205 $generated@@206 false)) (=> (and (and (and ($generated@@207 $generated@@208) ($generated@@209 $generated@@208)) (= $generated@@205 $generated@@208)) (and (forall (($generated@@213 Int) ($generated@@214 Int) )  (=> (and (and (and (<= ($generated@@157 0) $generated@@213) (<= ($generated@@157 0) $generated@@214)) ($generated@@163 ($generated@@164 $generated@@198) $generated@@213 $generated@@214)) (or (and (<= 0 $generated@@213) (< $generated@@213 $generated@@210)) (and (= $generated@@213 $generated@@210) (and (<= 0 $generated@@214) (< $generated@@214 $generated@@211))))) (< $generated@@213 $generated@@214))) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@210 $generated@@211)))))
(let (($generated@@215  (=> (and (and (and (and ($generated@@207 $generated@@205) ($generated@@209 $generated@@205)) (<= ($generated@@157 0) $generated@@210)) (and (<= ($generated@@157 0) $generated@@211) (= 2 $generated@@170))) (and (and ($generated@@171 $generated@@210 $generated@@211) (and ($generated@@163 ($generated@@164 $generated@@198) $generated@@210 $generated@@211) (ite (= $generated@@210 ($generated@@157 0)) (= ($generated@@173 $generated@@211 ($generated@@157 2)) ($generated@@157 1)) ($generated@@163 ($generated@@164 $generated@@198) (- $generated@@210 1) ($generated@@172 $generated@@211 ($generated@@157 2)))))) (= (ControlFlow 0 3) 2))) $generated@@212)))
$generated@@215)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (Int) Bool)
(declare-fun $generated@@152 (Int) Bool)
(declare-fun $generated@@153 (Int) Int)
(declare-fun $generated@@154 (Int Int) Int)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@U Int) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@155 Int) ) (!  (=> (or ($generated@@152 $generated@@155) (and (not (= 1 $generated@@150)) (<= ($generated@@153 0) $generated@@155))) (= ($generated@@151 $generated@@155) (= ($generated@@154 $generated@@155 ($generated@@153 2)) ($generated@@153 0))))
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@64)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@160) $generated@@64)) ($generated@@132 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@132 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@77 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@67 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@77) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@212) ($generated@@66 $generated@@4))) (= (type $generated@@214) $generated@@77)) (= (type $generated@@215) ($generated@@66 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@163 $generated@@77 $generated@@4))
 :pattern ( ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@67 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@77) (= (type $generated@@223) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@224) ($generated@@66 $generated@@4))) (= (type $generated@@226) $generated@@77)) (= (type $generated@@227) ($generated@@66 $generated@@228))) (= ($generated@@0 ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@136)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@145)) (= (type $generated@@236) $generated@@145)) (= ($generated@@132 ($generated@@229 $generated@@235 $generated@@236) ($generated@@135 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@132 ($generated@@229 $generated@@235 $generated@@236) ($generated@@135 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@136) (= (type $generated@@238) $generated@@136)) (= ($generated@@142 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@142 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@145) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@145) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@153 $generated@@249) $generated@@249)
 :pattern ( ($generated@@153 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@64) (= (type $generated@@257) $generated@@64)) (= (type $generated@@258) $generated@@145)) (= (type $generated@@259) $generated@@145)) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@254 $generated@@260)) (= ($generated@@74 ($generated@@229 $generated@@258 $generated@@259) ($generated@@135 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@74 ($generated@@229 $generated@@258 $generated@@259) ($generated@@135 $generated@@256 $generated@@257) $generated@@260))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@261 Int) ) (!  (=> (or ($generated@@152 ($generated@@153 $generated@@261)) (and (not (= 1 $generated@@150)) (<= ($generated@@153 0) $generated@@261))) (= ($generated@@151 ($generated@@153 $generated@@261)) (= ($generated@@153 ($generated@@154 $generated@@261 ($generated@@153 2))) ($generated@@153 0))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@153 $generated@@261)))
))))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@136) (= ($generated@@134 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@136) ($generated@@134 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (= $generated@@265 ($generated@@229 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@134 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@145)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@255 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@74 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@255 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@76 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@79 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@76 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@81 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@79 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@76 $generated@@324 $generated@@2)) (= ($generated@@157 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@81 $generated@@323 $generated@@325))) (<= ($generated ($generated@@81 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@81 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@157 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@287 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@291 (type $generated@@333))))
(let (($generated@@335 ($generated@@290 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@289 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@288 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@309 (type $generated@@337))))
(let (($generated@@339 ($generated@@308 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@307 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@306 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@305 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@309 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@309 (type $generated@@344))))
(let (($generated@@346 ($generated@@308 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@307 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@306 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@349) $generated@@64)) (= ($generated@@132 $generated@@348 ($generated@@156 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@348 $generated@@350)))) ($generated@@230 $generated@@350 $generated@@349))
 :pattern ( ($generated@@81 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@132 $generated@@348 ($generated@@156 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@239 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@145) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@255 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@239 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@244 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@145) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@255 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@244 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@81 ($generated@@282 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@81 ($generated@@282 $generated@@360) $generated@@359)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@361 Int) ) (!  (=> (or ($generated@@152 $generated@@361) (and (not (= 1 $generated@@150)) (<= ($generated@@153 0) $generated@@361))) true)
 :pattern ( ($generated@@151 $generated@@361))
))))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@372) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@371) ($generated@@143 ($generated@@363 $generated@@136 $generated@@372)))) (= ($generated@@81 ($generated@@364 $generated@@371) ($generated@@143 ($generated@@363 $generated@@136 $generated@@372))) ($generated@@144 ($generated@@363 $generated@@136 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@379) ($generated@@143 ($generated@@363 $generated@@136 $generated@@380)))) (= ($generated@@81 ($generated@@374 $generated@@379) ($generated@@143 ($generated@@363 $generated@@136 $generated@@380))) ($generated@@144 ($generated@@363 $generated@@136 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@255 ($generated@@81 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@255 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@255 ($generated@@81 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@255 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@76 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@309 (type $generated@@409))))
(let (($generated@@411 ($generated@@308 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@307 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@306 $generated@@411 $generated@@410)) (= ($generated@@305 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@305 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@341 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@341 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@373 $generated@@415) ($generated@@407 $generated@@145))))))
 :pattern ( ($generated@@373 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@291 (type $generated@@418))))
(let (($generated@@420 ($generated@@290 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@289 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@288 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@145) (= (type $generated@@422) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@418) ($generated@@276 ($generated@@229 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@362 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@309 (type $generated@@423))))
(let (($generated@@425 ($generated@@308 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@307 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@306 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@145) (= (type $generated@@427) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@423) ($generated@@276 ($generated@@229 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@373 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@230 $generated@@428 $generated@@46)) (and (= ($generated@@276 ($generated@@363 $generated@@2 $generated@@428)) $generated@@428) ($generated@@132 ($generated@@363 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@230 $generated@@429 $generated@@47)) (and (= ($generated@@276 ($generated@@363 $generated@@3 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@363 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@230 $generated@@430 $generated@@44)) (and (= ($generated@@276 ($generated@@363 $generated@@4 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@363 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@230 $generated@@432 $generated@@45)) (and (= ($generated@@276 ($generated@@363 $generated@@431 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@363 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@64) (= ($generated@@230 ($generated@@276 $generated@@433) $generated@@434) ($generated@@132 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@230 ($generated@@276 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@79 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@76 $generated@@436 $generated@@2)) (<= 0 ($generated@@281 $generated@@435))))
 :pattern ( ($generated@@281 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@271 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@270 $generated@@438)) (<= 0 ($generated@@269 $generated@@437))))
 :pattern ( ($generated@@269 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@391 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@391 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@391 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@391 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@447 $generated@@448)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@399 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@399 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@399 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@457 $generated@@458)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) (= (type $generated@@460) $generated@@145)) (= ($generated@@262 ($generated@@229 $generated@@459 $generated@@460)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@135 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@135 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) (= (type $generated@@470) $generated@@145)) (= ($generated@@143 ($generated@@229 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@229 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@144 ($generated@@229 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@229 $generated@@471 $generated@@472))
)))
(assert  (and (forall (($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@475))
)) (forall (($generated@@476 T@U) ($generated@@477 Int) ) (! (let (($generated@@478 ($generated@@271 (type $generated@@476))))
(= (type ($generated@@474 $generated@@476 $generated@@477)) $generated@@478))
 :pattern ( ($generated@@474 $generated@@476 $generated@@477))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@270 $generated@@145)) (= (type $generated@@480) $generated@@64)) (= (type $generated@@481) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@479 ($generated@@473 $generated@@480) $generated@@481) (forall (($generated@@482 Int) ) (!  (=> (and (<= 0 $generated@@482) (< $generated@@482 ($generated@@269 $generated@@479))) ($generated@@255 ($generated@@474 $generated@@479 $generated@@482) $generated@@480 $generated@@481))
 :pattern ( ($generated@@474 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@74 $generated@@479 ($generated@@473 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@75 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@75 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@239 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@239 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@488)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@244 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@244 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@492)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@156 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@156 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@156 $generated@@496)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@473 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@473 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@473 $generated@@500)) $generated@@57))
 :pattern ( ($generated@@473 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(= ($generated@@363 $generated@@502 ($generated@@276 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@276 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@132 $generated@@503 ($generated@@391 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@503) $generated@@506))) (and ($generated@@230 ($generated@@81 ($generated@@364 $generated@@503) $generated@@506) $generated@@505) ($generated@@230 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@132 $generated@@503 ($generated@@391 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@132 $generated@@507 ($generated@@399 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@507) $generated@@510))) (and ($generated@@230 ($generated@@81 ($generated@@374 $generated@@507) $generated@@510) $generated@@509) ($generated@@230 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@132 $generated@@507 ($generated@@399 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@145)) (< ($generated@@511 $generated@@513) ($generated@@512 ($generated@@229 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@229 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@145)) (< ($generated@@511 $generated@@516) ($generated@@512 ($generated@@229 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@229 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@230 $generated@@517 ($generated@@391 $generated@@518 $generated@@519))) (and (= ($generated@@276 ($generated@@363 ($generated@@289 $generated@@145 $generated@@145) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@363 ($generated@@289 $generated@@145 $generated@@145) $generated@@517) ($generated@@391 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@230 $generated@@517 ($generated@@391 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) ($generated@@230 $generated@@520 ($generated@@399 $generated@@521 $generated@@522))) (and (= ($generated@@276 ($generated@@363 ($generated@@307 $generated@@145 $generated@@145) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@363 ($generated@@307 $generated@@145 $generated@@145) $generated@@520) ($generated@@399 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@230 $generated@@520 ($generated@@399 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@145)) ($generated@@230 $generated@@525 ($generated@@135 $generated@@523 $generated@@524))) (and (= ($generated@@276 ($generated@@363 $generated@@136 $generated@@525)) $generated@@525) ($generated@@132 ($generated@@363 $generated@@136 $generated@@525) ($generated@@135 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@230 $generated@@525 ($generated@@135 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
 (not ($generated@@0 ($generated@@81 ($generated@@407 $generated@@527) $generated@@526))))
 :pattern ( (let (($generated@@527 (type $generated@@526)))
($generated@@81 ($generated@@407 $generated@@527) $generated@@526)))
)))
(assert (forall (($generated@@528 Int) ($generated@@529 Int) ) (! (= ($generated@@154 $generated@@528 $generated@@529) (mod $generated@@528 $generated@@529))
 :pattern ( ($generated@@154 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@69)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@530 ($generated@@135 $generated@@532 $generated@@533)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@136) (= ($generated@@511 ($generated@@276 $generated@@534)) ($generated@@512 $generated@@534)))
 :pattern ( ($generated@@511 ($generated@@276 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) ($generated@@230 $generated@@535 ($generated@@75 0))) (and (= ($generated@@276 ($generated@@363 $generated@@2 $generated@@535)) $generated@@535) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@75 0))))
 :pattern ( ($generated@@230 $generated@@535 ($generated@@75 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@230 $generated@@536 ($generated@@239 $generated@@537))) (and (= ($generated@@276 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@536) ($generated@@239 $generated@@537))))
 :pattern ( ($generated@@230 $generated@@536 ($generated@@239 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@230 $generated@@538 ($generated@@244 $generated@@539))) (and (= ($generated@@276 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@244 $generated@@539))))
 :pattern ( ($generated@@230 $generated@@538 ($generated@@244 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@230 $generated@@540 ($generated@@156 $generated@@541))) (and (= ($generated@@276 ($generated@@363 ($generated@@76 $generated@@145 $generated@@2) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@2) $generated@@540) ($generated@@156 $generated@@541))))
 :pattern ( ($generated@@230 $generated@@540 ($generated@@156 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@230 $generated@@542 ($generated@@473 $generated@@543))) (and (= ($generated@@276 ($generated@@363 ($generated@@270 $generated@@145) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@363 ($generated@@270 $generated@@145) $generated@@542) ($generated@@473 $generated@@543))))
 :pattern ( ($generated@@230 $generated@@542 ($generated@@473 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@544 ($generated@@156 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@544 $generated@@547)))) ($generated@@255 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@81 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@156 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@136) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@550) (and ($generated@@134 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@64) ($generated@@74 $generated@@548 ($generated@@135 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@135 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@255 ($generated@@143 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@255 ($generated@@143 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@136) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@554) (and ($generated@@134 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@64) ($generated@@74 $generated@@552 ($generated@@135 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@135 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@255 ($generated@@144 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@255 ($generated@@144 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@145)) (= ($generated@@229 ($generated@@250 $generated@@556) ($generated@@250 $generated@@557)) ($generated@@250 ($generated@@229 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@229 ($generated@@250 $generated@@556) ($generated@@250 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@276 ($generated@@8 ($generated@@153 $generated@@558))) ($generated@@250 ($generated@@276 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@276 ($generated@@8 ($generated@@153 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@276 ($generated@@250 $generated@@559)) ($generated@@250 ($generated@@276 $generated@@559)))
 :pattern ( ($generated@@276 ($generated@@250 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@271 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@270 $generated@@561)) (= ($generated@@269 $generated@@560) 0)) (= $generated@@560 ($generated@@268 $generated@@561))))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@76 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@281 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@281 $generated@@562) ($generated ($generated@@81 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@281 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@431)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@145)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@270 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= ($generated@@132 $generated@@576 ($generated@@473 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@269 $generated@@576))) ($generated@@230 ($generated@@474 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@474 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@473 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@270 $generated@@145)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@269 $generated@@580))) (< ($generated@@512 ($generated@@363 $generated@@136 ($generated@@474 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@512 ($generated@@363 $generated@@136 ($generated@@474 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@391 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@287 $generated@@582) ($generated@@239 $generated@@583)) ($generated@@132 ($generated@@330 $generated@@582) ($generated@@239 $generated@@584))) ($generated@@132 ($generated@@362 $generated@@582) ($generated@@239 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@391 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@399 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@305 $generated@@585) ($generated@@244 $generated@@586)) ($generated@@132 ($generated@@341 $generated@@585) ($generated@@244 $generated@@587))) ($generated@@132 ($generated@@373 $generated@@585) ($generated@@244 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@399 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@132 $generated@@588 $generated@@46))
 :pattern ( ($generated@@132 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@132 $generated@@589 $generated@@47))
 :pattern ( ($generated@@132 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@132 $generated@@590 $generated@@44))
 :pattern ( ($generated@@132 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@431) ($generated@@132 $generated@@591 $generated@@45))
 :pattern ( ($generated@@132 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) ($generated@@132 $generated@@592 $generated@@48))
 :pattern ( ($generated@@132 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(declare-fun $generated@@598 () Int)
(assert  (and (and (and (= (type $generated@@593) ($generated@@163 $generated@@77 $generated@@4)) (= (type $generated@@594) $generated@@77)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@596) ($generated@@163 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@599  (=> (and (= $generated@@593 ($generated@@217 $generated@@594 $generated@@595 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@153 2) 0)))))
(let (($generated@@600 true))
(let (($generated@@601  (=> (= $generated@@596 ($generated@@162 $generated@@594 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@600) (=> (= (ControlFlow 0 4) 3) $generated@@599)))))
(let (($generated@@602  (=> (and (and (and ($generated@@254 $generated@@595) ($generated@@597 $generated@@595)) (<= ($generated@@153 0) $generated@@598)) (and (= 1 $generated@@150) (= (ControlFlow 0 5) 4))) $generated@@601)))
$generated@@602)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U Int Int) Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (Int) Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@334 () Int)
(declare-fun $generated@@335 (Int Int) Bool)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@495 (T@U Int) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@138)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@138))
))) (= (type $generated@@137) $generated@@136)))
(assert (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (= (type $generated@@139) $generated@@136) (= ($generated@@134 $generated@@139 $generated@@140 $generated@@141) ($generated@@134 $generated@@137 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@134 ($generated@@135 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@66))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@77 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@66)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 17)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@69 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@79) (= (type $generated@@218) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@219) ($generated@@68 $generated@@4))) (= (type $generated@@221) $generated@@79)) (= (type $generated@@222) ($generated@@68 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@69 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@79) (= (type $generated@@230) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@231) ($generated@@68 $generated@@4))) (= (type $generated@@233) $generated@@79)) (= (type $generated@@234) ($generated@@68 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@149)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@66) (= (type $generated@@241) $generated@@66)) (= (type $generated@@242) $generated@@158)) (= (type $generated@@243) $generated@@158)) (= ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@148 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@148 $generated@@240 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@149) (= (type $generated@@245) $generated@@149)) (= ($generated@@155 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@155 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@66)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@249) $generated@@66)) (= ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@158) ($generated@@0 ($generated@@83 $generated@@248 $generated@@250))) ($generated@@237 $generated@@250 $generated@@249))
 :pattern ( ($generated@@83 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@66)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@254) $generated@@66)) (= ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@158) ($generated@@0 ($generated@@83 $generated@@253 $generated@@255))) ($generated@@237 $generated@@255 $generated@@254))
 :pattern ( ($generated@@83 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 Int) ) (! (= ($generated@@256 $generated@@257) $generated@@257)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@66) (= (type $generated@@265) $generated@@66)) (= (type $generated@@266) $generated@@158)) (= (type $generated@@267) $generated@@158)) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@262 $generated@@268)) (= ($generated@@76 ($generated@@236 $generated@@266 $generated@@267) ($generated@@148 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@266 $generated@@267) ($generated@@148 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@149) (= ($generated@@147 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@149) ($generated@@147 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@158) (= (type $generated@@274) $generated@@158)) (= $generated@@272 ($generated@@236 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@147 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 18)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@2) (= ($generated@@145 $generated@@283 $generated@@142) (<= ($generated@@256 0) ($generated $generated@@283))))
 :pattern ( ($generated@@145 $generated@@283 $generated@@142))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@158)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@66) (= (type $generated@@288) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@263 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@76 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@263 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@78 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@81 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@78 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@83 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 19)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@78 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@83 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@83 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 20)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@78 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@83 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@83 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@81 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@78 $generated@@332 $generated@@2)) (= ($generated@@164 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@83 $generated@@331 $generated@@333))) (<= ($generated ($generated@@83 $generated@@331 $generated@@333)) ($generated@@289 $generated@@331))))
 :pattern ( ($generated@@83 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@164 $generated@@331))
)))
(assert  (=> (<= 1 $generated@@334) (forall (($generated@@336 T@U) ($generated@@337 Int) ($generated@@338 Int) ) (!  (=> (and (= (type $generated@@336) $generated@@136) (or ($generated@@335 $generated@@337 $generated@@338) (and (not (= 1 $generated@@334)) (and (<= ($generated@@256 0) $generated@@337) (<= ($generated@@256 0) $generated@@338))))) (<= ($generated@@256 0) ($generated@@134 $generated@@336 $generated@@337 $generated@@338)))
 :pattern ( ($generated@@134 $generated@@336 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@158) ($generated@@237 $generated@@342 $generated@@142)) (and (= ($generated@@284 ($generated@@339 $generated@@2 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@339 $generated@@2 $generated@@342) $generated@@142)))
 :pattern ( ($generated@@237 $generated@@342 $generated@@142))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@299 (type $generated@@343))))
(let (($generated@@345 ($generated@@298 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@297 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@296 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@295 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@299 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@78 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@299 (type $generated@@350))))
(let (($generated@@352 ($generated@@298 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@297 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@296 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@317 (type $generated@@354))))
(let (($generated@@356 ($generated@@316 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@315 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@314 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@313 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@317 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@78 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(let (($generated@@363 ($generated@@316 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@315 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@314 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@83 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (= (type ($generated@@365 $generated@@366)) $generated@@136)
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 Int) ($generated@@369 Int) ) (!  (=> (= (type $generated@@367) $generated@@136) (= ($generated@@134 ($generated@@365 $generated@@367) $generated@@368 $generated@@369) ($generated@@134 $generated@@367 $generated@@368 $generated@@369)))
 :pattern ( ($generated@@134 ($generated@@365 $generated@@367) $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@371) $generated@@66)) (= ($generated@@145 $generated@@370 ($generated@@163 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@370 $generated@@372)))) ($generated@@237 $generated@@372 $generated@@371))
 :pattern ( ($generated@@83 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@145 $generated@@370 ($generated@@163 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@334) (forall (($generated@@373 T@U) ($generated@@374 Int) ($generated@@375 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@136) (or ($generated@@335 ($generated@@256 $generated@@374) ($generated@@256 $generated@@375)) (and (not (= 1 $generated@@334)) (and (<= ($generated@@256 0) $generated@@374) (<= ($generated@@256 0) $generated@@375))))) (and (=> (not (= ($generated@@256 $generated@@375) ($generated@@256 0))) (=> (not (= ($generated@@256 $generated@@374) ($generated@@256 0))) (and ($generated@@335 ($generated@@256 (- $generated@@374 1)) ($generated@@256 $generated@@375)) ($generated@@335 ($generated@@256 (- $generated@@374 1)) ($generated@@256 (- $generated@@375 1)))))) (= ($generated@@134 ($generated@@365 $generated@@373) ($generated@@256 $generated@@374) ($generated@@256 $generated@@375)) (ite (= ($generated@@256 $generated@@375) ($generated@@256 0)) 1 (ite (= ($generated@@256 $generated@@374) ($generated@@256 0)) 0 (+ ($generated@@134 ($generated@@365 $generated@@373) ($generated@@256 (- $generated@@374 1)) ($generated@@256 $generated@@375)) ($generated@@134 ($generated@@365 $generated@@373) ($generated@@256 (- $generated@@374 1)) ($generated@@256 (- $generated@@375 1)))))))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@365 $generated@@373) ($generated@@256 $generated@@374) ($generated@@256 $generated@@375)))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@377) $generated@@66)) (= (type $generated@@378) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@376 ($generated@@246 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@158) ($generated@@0 ($generated@@83 $generated@@376 $generated@@379))) ($generated@@263 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@83 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@76 $generated@@376 ($generated@@246 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@381) $generated@@66)) (= (type $generated@@382) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@380 ($generated@@251 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@158) ($generated@@0 ($generated@@83 $generated@@380 $generated@@383))) ($generated@@263 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@83 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@76 $generated@@380 ($generated@@251 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@83 ($generated@@290 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@83 ($generated@@290 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@299 (type $generated@@389))))
(let (($generated@@391 ($generated@@298 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@297 $generated@@158 $generated@@158)) (= (type $generated@@393) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@83 ($generated@@295 $generated@@392) ($generated@@156 ($generated@@339 $generated@@149 $generated@@393)))) (= ($generated@@83 ($generated@@387 $generated@@392) ($generated@@156 ($generated@@339 $generated@@149 $generated@@393))) ($generated@@157 ($generated@@339 $generated@@149 $generated@@393))))))
 :pattern ( ($generated@@83 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@317 (type $generated@@397))))
(let (($generated@@399 ($generated@@316 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@78 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@401) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@83 ($generated@@313 $generated@@400) ($generated@@156 ($generated@@339 $generated@@149 $generated@@401)))) (= ($generated@@83 ($generated@@395 $generated@@400) ($generated@@156 ($generated@@339 $generated@@149 $generated@@401))) ($generated@@157 ($generated@@339 $generated@@149 $generated@@401))))))
 :pattern ( ($generated@@83 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@298 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@297 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@83 ($generated@@347 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@83 ($generated@@295 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@83 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@83 ($generated@@347 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@316 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@315 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@83 ($generated@@358 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@83 ($generated@@313 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@83 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@407) $generated@@411))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@83 ($generated@@358 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@66)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@297 $generated@@158 $generated@@158)) (= (type $generated@@416) $generated@@66)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@415) $generated@@419))) (and ($generated@@263 ($generated@@83 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@263 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@76 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@66)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@424) $generated@@66)) (= (type $generated@@425) $generated@@66)) (= (type $generated@@426) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@423) $generated@@427))) (and ($generated@@263 ($generated@@83 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@263 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@76 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@78 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@317 (type $generated@@430))))
(let (($generated@@432 ($generated@@316 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@315 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@314 $generated@@432 $generated@@431)) (= ($generated@@313 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@313 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@317 (type $generated@@433))))
(let (($generated@@435 ($generated@@316 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@315 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@314 $generated@@435 $generated@@434)) (= ($generated@@358 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@358 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@317 (type $generated@@436))))
(let (($generated@@438 ($generated@@316 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@315 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@314 $generated@@438 $generated@@437)) (= ($generated@@394 $generated@@436) ($generated@@428 $generated@@158))))))
 :pattern ( ($generated@@394 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@299 (type $generated@@439))))
(let (($generated@@441 ($generated@@298 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@297 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@296 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@158) (= (type $generated@@443) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@386 $generated@@439) ($generated@@284 ($generated@@236 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@386 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@317 (type $generated@@444))))
(let (($generated@@446 ($generated@@316 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@315 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@314 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@158) (= (type $generated@@448) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@394 $generated@@444) ($generated@@284 ($generated@@236 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@394 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@158) ($generated@@237 $generated@@449 $generated@@46)) (and (= ($generated@@284 ($generated@@339 $generated@@2 $generated@@449)) $generated@@449) ($generated@@145 ($generated@@339 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@158) ($generated@@237 $generated@@450 $generated@@47)) (and (= ($generated@@284 ($generated@@339 $generated@@3 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@339 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@158) ($generated@@237 $generated@@451 $generated@@44)) (and (= ($generated@@284 ($generated@@339 $generated@@4 $generated@@451)) $generated@@451) ($generated@@145 ($generated@@339 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 21))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@158) ($generated@@237 $generated@@453 $generated@@45)) (and (= ($generated@@284 ($generated@@339 $generated@@452 $generated@@453)) $generated@@453) ($generated@@145 ($generated@@339 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@66) (= ($generated@@237 ($generated@@284 $generated@@454) $generated@@455) ($generated@@145 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@237 ($generated@@284 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@81 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@78 $generated@@457 $generated@@2)) (<= 0 ($generated@@289 $generated@@456))))
 :pattern ( ($generated@@289 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@278 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@277 $generated@@459)) (<= 0 ($generated@@276 $generated@@458))))
 :pattern ( ($generated@@276 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@412 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@412 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@74 ($generated@@412 $generated@@468 $generated@@469)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@470 ($generated@@420 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@420 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@74 ($generated@@420 $generated@@478 $generated@@479)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@158) (= (type $generated@@481) $generated@@158)) (= ($generated@@269 ($generated@@236 $generated@@480 $generated@@481)) $generated@@62))
 :pattern ( ($generated@@236 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@482 ($generated@@148 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@148 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@66) (= (type $generated@@489) $generated@@66)) (= ($generated@@486 ($generated@@148 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@148 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@158) (= (type $generated@@491) $generated@@158)) (= ($generated@@156 ($generated@@236 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@236 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@158) (= (type $generated@@493) $generated@@158)) (= ($generated@@157 ($generated@@236 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@236 $generated@@492 $generated@@493))
)))
(assert  (and (forall (($generated@@496 T@U) ) (! (= (type ($generated@@494 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@496))
)) (forall (($generated@@497 T@U) ($generated@@498 Int) ) (! (let (($generated@@499 ($generated@@278 (type $generated@@497))))
(= (type ($generated@@495 $generated@@497 $generated@@498)) $generated@@499))
 :pattern ( ($generated@@495 $generated@@497 $generated@@498))
))))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@277 $generated@@158)) (= (type $generated@@501) $generated@@66)) (= (type $generated@@502) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@500 ($generated@@494 $generated@@501) $generated@@502) (forall (($generated@@503 Int) ) (!  (=> (and (<= 0 $generated@@503) (< $generated@@503 ($generated@@276 $generated@@500))) ($generated@@263 ($generated@@495 $generated@@500 $generated@@503) $generated@@501 $generated@@502))
 :pattern ( ($generated@@495 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@76 $generated@@500 ($generated@@494 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@77 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@77 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@246 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@246 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@74 ($generated@@246 $generated@@509)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@251 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@251 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@251 $generated@@513)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@514 ($generated@@163 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@163 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@74 ($generated@@163 $generated@@517)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@66)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@518 ($generated@@494 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@494 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@74 ($generated@@494 $generated@@521)) $generated@@57))
 :pattern ( ($generated@@494 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@339 $generated@@523 ($generated@@284 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@284 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@297 $generated@@158 $generated@@158)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) (= ($generated@@145 $generated@@524 ($generated@@412 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@524) $generated@@527))) (and ($generated@@237 ($generated@@83 ($generated@@387 $generated@@524) $generated@@527) $generated@@526) ($generated@@237 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@524) $generated@@527))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@145 $generated@@524 ($generated@@412 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) (= ($generated@@145 $generated@@528 ($generated@@420 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@528) $generated@@531))) (and ($generated@@237 ($generated@@83 ($generated@@395 $generated@@528) $generated@@531) $generated@@530) ($generated@@237 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@528) $generated@@531))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@145 $generated@@528 ($generated@@420 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@158) (= (type $generated@@535) $generated@@158)) (< ($generated@@532 $generated@@534) ($generated@@533 ($generated@@236 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@236 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@158) (= (type $generated@@537) $generated@@158)) (< ($generated@@532 $generated@@537) ($generated@@533 ($generated@@236 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@236 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@158) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) ($generated@@237 $generated@@538 ($generated@@412 $generated@@539 $generated@@540))) (and (= ($generated@@284 ($generated@@339 ($generated@@297 $generated@@158 $generated@@158) $generated@@538)) $generated@@538) ($generated@@145 ($generated@@339 ($generated@@297 $generated@@158 $generated@@158) $generated@@538) ($generated@@412 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@237 $generated@@538 ($generated@@412 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@158) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@66)) ($generated@@237 $generated@@541 ($generated@@420 $generated@@542 $generated@@543))) (and (= ($generated@@284 ($generated@@339 ($generated@@315 $generated@@158 $generated@@158) $generated@@541)) $generated@@541) ($generated@@145 ($generated@@339 ($generated@@315 $generated@@158 $generated@@158) $generated@@541) ($generated@@420 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@237 $generated@@541 ($generated@@420 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@66) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) $generated@@158)) ($generated@@237 $generated@@546 ($generated@@148 $generated@@544 $generated@@545))) (and (= ($generated@@284 ($generated@@339 $generated@@149 $generated@@546)) $generated@@546) ($generated@@145 ($generated@@339 $generated@@149 $generated@@546) ($generated@@148 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@237 $generated@@546 ($generated@@148 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@83 ($generated@@428 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@83 ($generated@@428 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@71)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@66) (= (type $generated@@552) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@551 $generated@@552)) $generated@@63) (= ($generated@@549 ($generated@@148 $generated@@551 $generated@@552)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@149) (= ($generated@@532 ($generated@@284 $generated@@553)) ($generated@@533 $generated@@553)))
 :pattern ( ($generated@@532 ($generated@@284 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@158) ($generated@@237 $generated@@554 ($generated@@77 0))) (and (= ($generated@@284 ($generated@@339 $generated@@2 $generated@@554)) $generated@@554) ($generated@@145 ($generated@@339 ($generated@@78 $generated@@158 $generated@@4) $generated@@554) ($generated@@77 0))))
 :pattern ( ($generated@@237 $generated@@554 ($generated@@77 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@66)) ($generated@@237 $generated@@555 ($generated@@246 $generated@@556))) (and (= ($generated@@284 ($generated@@339 ($generated@@78 $generated@@158 $generated@@4) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@339 ($generated@@78 $generated@@158 $generated@@4) $generated@@555) ($generated@@246 $generated@@556))))
 :pattern ( ($generated@@237 $generated@@555 ($generated@@246 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@158) (= (type $generated@@558) $generated@@66)) ($generated@@237 $generated@@557 ($generated@@251 $generated@@558))) (and (= ($generated@@284 ($generated@@339 ($generated@@78 $generated@@158 $generated@@4) $generated@@557)) $generated@@557) ($generated@@145 ($generated@@339 ($generated@@78 $generated@@158 $generated@@4) $generated@@557) ($generated@@251 $generated@@558))))
 :pattern ( ($generated@@237 $generated@@557 ($generated@@251 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@158) (= (type $generated@@560) $generated@@66)) ($generated@@237 $generated@@559 ($generated@@163 $generated@@560))) (and (= ($generated@@284 ($generated@@339 ($generated@@78 $generated@@158 $generated@@2) $generated@@559)) $generated@@559) ($generated@@145 ($generated@@339 ($generated@@78 $generated@@158 $generated@@2) $generated@@559) ($generated@@163 $generated@@560))))
 :pattern ( ($generated@@237 $generated@@559 ($generated@@163 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@158) (= (type $generated@@562) $generated@@66)) ($generated@@237 $generated@@561 ($generated@@494 $generated@@562))) (and (= ($generated@@284 ($generated@@339 ($generated@@277 $generated@@158) $generated@@561)) $generated@@561) ($generated@@145 ($generated@@339 ($generated@@277 $generated@@158) $generated@@561) ($generated@@494 $generated@@562))))
 :pattern ( ($generated@@237 $generated@@561 ($generated@@494 $generated@@562)))
)))
(assert (= ($generated@@74 $generated@@142) $generated@@61))
(assert (= ($generated@@549 $generated@@142) $generated@@64))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@563 ($generated@@163 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@563 $generated@@566)))) ($generated@@263 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@83 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@76 $generated@@563 ($generated@@163 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@149) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@569) (and ($generated@@147 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@66) ($generated@@76 $generated@@567 ($generated@@148 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@76 $generated@@567 ($generated@@148 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@263 ($generated@@156 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@263 ($generated@@156 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@149) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@573) (and ($generated@@147 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@66) ($generated@@76 $generated@@571 ($generated@@148 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@76 $generated@@571 ($generated@@148 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@263 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@263 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@158) (= (type $generated@@576) $generated@@158)) (= ($generated@@236 ($generated@@258 $generated@@575) ($generated@@258 $generated@@576)) ($generated@@258 ($generated@@236 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@236 ($generated@@258 $generated@@575) ($generated@@258 $generated@@576)))
)))
(assert  (=> (<= 1 $generated@@334) (forall (($generated@@577 T@U) ($generated@@578 Int) ($generated@@579 Int) ) (!  (=> (and (= (type $generated@@577) $generated@@136) (or ($generated@@335 $generated@@578 $generated@@579) (and (not (= 1 $generated@@334)) (and (<= ($generated@@256 0) $generated@@578) (<= ($generated@@256 0) $generated@@579))))) (and (=> (not (= $generated@@579 ($generated@@256 0))) (=> (not (= $generated@@578 ($generated@@256 0))) (and ($generated@@335 (- $generated@@578 1) $generated@@579) ($generated@@335 (- $generated@@578 1) (- $generated@@579 1))))) (= ($generated@@134 ($generated@@365 $generated@@577) $generated@@578 $generated@@579) (ite (= $generated@@579 ($generated@@256 0)) 1 (ite (= $generated@@578 ($generated@@256 0)) 0 (+ ($generated@@134 $generated@@577 (- $generated@@578 1) $generated@@579) ($generated@@134 $generated@@577 (- $generated@@578 1) (- $generated@@579 1))))))))
 :pattern ( ($generated@@134 ($generated@@365 $generated@@577) $generated@@578 $generated@@579))
))))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@284 ($generated@@8 ($generated@@256 $generated@@580))) ($generated@@258 ($generated@@284 ($generated@@8 $generated@@580))))
 :pattern ( ($generated@@284 ($generated@@8 ($generated@@256 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@284 ($generated@@258 $generated@@581)) ($generated@@258 ($generated@@284 $generated@@581)))
 :pattern ( ($generated@@284 ($generated@@258 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@278 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@277 $generated@@583)) (= ($generated@@276 $generated@@582) 0)) (= $generated@@582 ($generated@@275 $generated@@583))))
 :pattern ( ($generated@@276 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@78 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@289 ($generated@@84 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@289 $generated@@584) ($generated ($generated@@83 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@289 ($generated@@84 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@2)) ($generated@@76 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@3)) ($generated@@76 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@593) $generated@@4)) ($generated@@76 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@76 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) $generated@@452)) ($generated@@76 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@76 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@597) $generated@@158)) ($generated@@76 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@76 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@277 $generated@@158)) (= (type $generated@@599) $generated@@66)) (= ($generated@@145 $generated@@598 ($generated@@494 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@276 $generated@@598))) ($generated@@237 ($generated@@495 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@495 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@494 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@277 $generated@@158)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@276 $generated@@602))) (< ($generated@@533 ($generated@@339 $generated@@149 ($generated@@495 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@533 ($generated@@339 $generated@@149 ($generated@@495 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@297 $generated@@158 $generated@@158)) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) $generated@@66)) ($generated@@145 $generated@@604 ($generated@@412 $generated@@605 $generated@@606))) (and (and ($generated@@145 ($generated@@295 $generated@@604) ($generated@@246 $generated@@605)) ($generated@@145 ($generated@@347 $generated@@604) ($generated@@246 $generated@@606))) ($generated@@145 ($generated@@386 $generated@@604) ($generated@@246 ($generated@@148 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@145 $generated@@604 ($generated@@412 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@66)) ($generated@@145 $generated@@607 ($generated@@420 $generated@@608 $generated@@609))) (and (and ($generated@@145 ($generated@@313 $generated@@607) ($generated@@251 $generated@@608)) ($generated@@145 ($generated@@358 $generated@@607) ($generated@@251 $generated@@609))) ($generated@@145 ($generated@@394 $generated@@607) ($generated@@251 ($generated@@148 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@145 $generated@@607 ($generated@@420 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@145 $generated@@610 $generated@@46))
 :pattern ( ($generated@@145 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@145 $generated@@611 $generated@@47))
 :pattern ( ($generated@@145 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@145 $generated@@612 $generated@@44))
 :pattern ( ($generated@@145 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@452) ($generated@@145 $generated@@613 $generated@@45))
 :pattern ( ($generated@@145 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@158) ($generated@@145 $generated@@614 $generated@@48))
 :pattern ( ($generated@@145 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@621) ($generated@@170 $generated@@79 $generated@@4))) (= (type $generated@@622) $generated@@79)) (= (type $generated@@623) ($generated@@170 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@625  (=> (not (= $generated@@615 ($generated@@256 0))) (and (=> (= (ControlFlow 0 7) (- 0 16)) ($generated@@145 ($generated@@8 (- $generated@@615 1)) $generated@@142)) (=> ($generated@@145 ($generated@@8 (- $generated@@615 1)) $generated@@142) (=> (= $generated@@616 (- $generated@@615 1)) (=> (and ($generated@@76 ($generated@@8 $generated@@616) $generated@@142 $generated@@617) ($generated@@76 ($generated@@8 $generated@@618) $generated@@142 $generated@@617)) (and (=> (= (ControlFlow 0 7) (- 0 15)) (or (<= 0 $generated@@615) (= $generated@@616 $generated@@615))) (=> (or (<= 0 $generated@@615) (= $generated@@616 $generated@@615)) (and (=> (= (ControlFlow 0 7) (- 0 14)) (or (or (<= 0 $generated@@618) (< $generated@@616 $generated@@615)) (= $generated@@618 $generated@@618))) (=> (or (or (<= 0 $generated@@618) (< $generated@@616 $generated@@615)) (= $generated@@618 $generated@@618)) (and (=> (= (ControlFlow 0 7) (- 0 13)) (or (< $generated@@616 $generated@@615) (and (= $generated@@616 $generated@@615) (< $generated@@618 $generated@@618)))) (=> (or (< $generated@@616 $generated@@615) (and (= $generated@@616 $generated@@615) (< $generated@@618 $generated@@618))) (=> ($generated@@335 (- $generated@@615 1) $generated@@618) (and (=> (= (ControlFlow 0 7) (- 0 12)) ($generated@@145 ($generated@@8 (- $generated@@615 1)) $generated@@142)) (=> ($generated@@145 ($generated@@8 (- $generated@@615 1)) $generated@@142) (=> (and (= $generated@@619 (- $generated@@615 1)) ($generated@@76 ($generated@@8 $generated@@619) $generated@@142 $generated@@617)) (and (=> (= (ControlFlow 0 7) (- 0 11)) ($generated@@145 ($generated@@8 (- $generated@@618 1)) $generated@@142)) (=> ($generated@@145 ($generated@@8 (- $generated@@618 1)) $generated@@142) (=> (and (= $generated@@620 (- $generated@@618 1)) ($generated@@76 ($generated@@8 $generated@@620) $generated@@142 $generated@@617)) (and (=> (= (ControlFlow 0 7) (- 0 10)) (or (<= 0 $generated@@615) (= $generated@@619 $generated@@615))) (=> (or (<= 0 $generated@@615) (= $generated@@619 $generated@@615)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (or (<= 0 $generated@@618) (< $generated@@619 $generated@@615)) (= $generated@@620 $generated@@618))) (=> (or (or (<= 0 $generated@@618) (< $generated@@619 $generated@@615)) (= $generated@@620 $generated@@618)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (< $generated@@619 $generated@@615) (and (= $generated@@619 $generated@@615) (< $generated@@620 $generated@@618)))) (=> (or (< $generated@@619 $generated@@615) (and (= $generated@@619 $generated@@615) (< $generated@@620 $generated@@618))) (=> (and ($generated@@335 (- $generated@@615 1) (- $generated@@618 1)) (= (ControlFlow 0 7) (- 0 6))) ($generated@@145 ($generated@@8 (+ ($generated@@134 ($generated@@365 $generated@@137) (- $generated@@615 1) $generated@@618) ($generated@@134 ($generated@@365 $generated@@137) (- $generated@@615 1) (- $generated@@618 1)))) $generated@@142))))))))))))))))))))))))))))
(let (($generated@@626  (=> (and (= $generated@@615 ($generated@@256 0)) (= (ControlFlow 0 5) (- 0 4))) ($generated@@145 ($generated@@8 ($generated@@256 0)) $generated@@142))))
(let (($generated@@627  (=> (not (= $generated@@618 ($generated@@256 0))) (and (=> (= (ControlFlow 0 17) 5) $generated@@626) (=> (= (ControlFlow 0 17) 7) $generated@@625)))))
(let (($generated@@628  (=> (and (= $generated@@618 ($generated@@256 0)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@145 ($generated@@8 ($generated@@256 1)) $generated@@142))))
(let (($generated@@629  (=> (= $generated@@621 ($generated@@224 $generated@@622 $generated@@617 $generated@@60 false)) (and (=> (= (ControlFlow 0 18) 3) $generated@@628) (=> (= (ControlFlow 0 18) 17) $generated@@627)))))
(let (($generated@@630 true))
(let (($generated@@631  (=> (= $generated@@623 ($generated@@169 $generated@@622 $generated@@617 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) 1) $generated@@630) (=> (= (ControlFlow 0 19) 18) $generated@@629)))))
(let (($generated@@632  (=> (and ($generated@@262 $generated@@617) ($generated@@624 $generated@@617)) (=> (and (and (<= ($generated@@256 0) $generated@@615) (<= ($generated@@256 0) $generated@@618)) (and (= 1 $generated@@334) (= (ControlFlow 0 20) 19))) $generated@@631))))
$generated@@632)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U Int Int) Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 (Int) Bool)
(declare-fun $generated@@165 (Int) Bool)
(declare-fun $generated@@166 (Int) Int)
(declare-fun $generated@@167 (Int Int) Int)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (Int Int) Bool)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (Int Int) Int)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@138)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@138))
))) (= (type $generated@@137) $generated@@136)))
(assert (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (= (type $generated@@139) $generated@@136) (= ($generated@@134 $generated@@139 $generated@@140 $generated@@141) ($generated@@134 $generated@@137 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@134 ($generated@@135 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@66))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@77 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@168 Int) ) (!  (=> (or ($generated@@165 $generated@@168) (and (not (= 1 $generated@@163)) (<= ($generated@@166 0) $generated@@168))) (= ($generated@@164 $generated@@168) (= ($generated@@167 $generated@@168 ($generated@@166 2)) ($generated@@166 0))))
 :pattern ( ($generated@@164 $generated@@168))
))))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@66)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@173) $generated@@66)) ($generated@@145 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@145 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 17)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@79 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@69 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@79) (= (type $generated@@224) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@225) ($generated@@68 $generated@@4))) (= (type $generated@@227) $generated@@79)) (= (type $generated@@228) ($generated@@68 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@149)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@66) (= (type $generated@@235) $generated@@66)) (= (type $generated@@236) $generated@@158)) (= (type $generated@@237) $generated@@158)) (= ($generated@@145 ($generated@@230 $generated@@236 $generated@@237) ($generated@@148 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@145 ($generated@@230 $generated@@236 $generated@@237) ($generated@@148 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@149) (= (type $generated@@239) $generated@@149)) (= ($generated@@155 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@155 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@66)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@243) $generated@@66)) (= ($generated@@145 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@158) ($generated@@0 ($generated@@83 $generated@@242 $generated@@244))) ($generated@@231 $generated@@244 $generated@@243))
 :pattern ( ($generated@@83 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@145 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@66)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@248) $generated@@66)) (= ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@158) ($generated@@0 ($generated@@83 $generated@@247 $generated@@249))) ($generated@@231 $generated@@249 $generated@@248))
 :pattern ( ($generated@@83 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@166 $generated@@250) $generated@@250)
 :pattern ( ($generated@@166 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@66) (= (type $generated@@258) $generated@@66)) (= (type $generated@@259) $generated@@158)) (= (type $generated@@260) $generated@@158)) (= (type $generated@@261) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@255 $generated@@261)) (= ($generated@@76 ($generated@@230 $generated@@259 $generated@@260) ($generated@@148 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@76 ($generated@@230 $generated@@259 $generated@@260) ($generated@@148 $generated@@257 $generated@@258) $generated@@261))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@262 Int) ) (!  (=> (or ($generated@@165 ($generated@@166 $generated@@262)) (and (not (= 1 $generated@@163)) (<= ($generated@@166 0) $generated@@262))) (= ($generated@@164 ($generated@@166 $generated@@262)) (= ($generated@@166 ($generated@@167 $generated@@262 ($generated@@166 2))) ($generated@@166 0))))
 :weight 3
 :pattern ( ($generated@@164 ($generated@@166 $generated@@262)))
))))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@70)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@149) (= ($generated@@147 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@149) ($generated@@147 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@158) (= (type $generated@@268) $generated@@158)) (= $generated@@266 ($generated@@230 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@147 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 18)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@2) (= ($generated@@145 $generated@@277 $generated@@142) (<= ($generated@@166 0) ($generated $generated@@277))))
 :pattern ( ($generated@@145 $generated@@277 $generated@@142))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@158)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@66) (= (type $generated@@282) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@256 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@76 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@256 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@78 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@81 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@78 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@83 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 19)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@78 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 20)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@81 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@78 $generated@@326 $generated@@2)) (= ($generated@@170 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@83 $generated@@325 $generated@@327))) (<= ($generated ($generated@@83 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@83 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@170 $generated@@325))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@329 T@U) ($generated@@330 Int) ($generated@@331 Int) ) (!  (=> (and (= (type $generated@@329) $generated@@136) (or ($generated@@328 $generated@@330 $generated@@331) (and (not (= 1 $generated@@163)) (and (<= ($generated@@166 0) $generated@@330) (<= ($generated@@166 0) $generated@@331))))) (<= ($generated@@166 0) ($generated@@134 $generated@@329 $generated@@330 $generated@@331)))
 :pattern ( ($generated@@134 $generated@@329 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@158) ($generated@@231 $generated@@335 $generated@@142)) (and (= ($generated@@278 ($generated@@332 $generated@@2 $generated@@335)) $generated@@335) ($generated@@145 ($generated@@332 $generated@@2 $generated@@335) $generated@@142)))
 :pattern ( ($generated@@231 $generated@@335 $generated@@142))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@293 (type $generated@@336))))
(let (($generated@@338 ($generated@@292 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@291 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@290 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@289 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@293 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@78 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@293 (type $generated@@343))))
(let (($generated@@345 ($generated@@292 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@291 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@290 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@83 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@311 (type $generated@@347))))
(let (($generated@@349 ($generated@@310 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@309 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@308 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@307 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@311 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@78 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@311 (type $generated@@354))))
(let (($generated@@356 ($generated@@310 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@309 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@308 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@83 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@136)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 Int) ($generated@@362 Int) ) (!  (=> (= (type $generated@@360) $generated@@136) (= ($generated@@134 ($generated@@358 $generated@@360) $generated@@361 $generated@@362) ($generated@@134 $generated@@360 $generated@@361 $generated@@362)))
 :pattern ( ($generated@@134 ($generated@@358 $generated@@360) $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@364) $generated@@66)) (= ($generated@@145 $generated@@363 ($generated@@169 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@363 $generated@@365)))) ($generated@@231 $generated@@365 $generated@@364))
 :pattern ( ($generated@@83 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@145 $generated@@363 ($generated@@169 $generated@@364)))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@366 T@U) ($generated@@367 Int) ($generated@@368 Int) ) (!  (=> (and (= (type $generated@@366) $generated@@136) (or ($generated@@328 ($generated@@166 $generated@@367) ($generated@@166 $generated@@368)) (and (not (= 1 $generated@@163)) (and (<= ($generated@@166 0) $generated@@367) (<= ($generated@@166 0) $generated@@368))))) (and (=> (not (= ($generated@@166 $generated@@368) ($generated@@166 0))) (=> (not (= ($generated@@166 $generated@@367) ($generated@@166 0))) (and ($generated@@328 ($generated@@166 (- $generated@@367 1)) ($generated@@166 $generated@@368)) ($generated@@328 ($generated@@166 (- $generated@@367 1)) ($generated@@166 (- $generated@@368 1)))))) (= ($generated@@134 ($generated@@358 $generated@@366) ($generated@@166 $generated@@367) ($generated@@166 $generated@@368)) (ite (= ($generated@@166 $generated@@368) ($generated@@166 0)) 1 (ite (= ($generated@@166 $generated@@367) ($generated@@166 0)) 0 (+ ($generated@@134 ($generated@@358 $generated@@366) ($generated@@166 (- $generated@@367 1)) ($generated@@166 $generated@@368)) ($generated@@134 ($generated@@358 $generated@@366) ($generated@@166 (- $generated@@367 1)) ($generated@@166 (- $generated@@368 1)))))))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@358 $generated@@366) ($generated@@166 $generated@@367) ($generated@@166 $generated@@368)))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@370) $generated@@66)) (= (type $generated@@371) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@369 ($generated@@240 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@158) ($generated@@0 ($generated@@83 $generated@@369 $generated@@372))) ($generated@@256 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@83 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@76 $generated@@369 ($generated@@240 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@374) $generated@@66)) (= (type $generated@@375) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@373 ($generated@@245 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@158) ($generated@@0 ($generated@@83 $generated@@373 $generated@@376))) ($generated@@256 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@83 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@76 $generated@@373 ($generated@@245 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(= ($generated ($generated@@83 ($generated@@284 $generated@@378) $generated@@377)) 0))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@83 ($generated@@284 $generated@@378) $generated@@377)))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@379 Int) ) (!  (=> (or ($generated@@165 $generated@@379) (and (not (= 1 $generated@@163)) (<= ($generated@@166 0) $generated@@379))) true)
 :pattern ( ($generated@@164 $generated@@379))
))))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@293 (type $generated@@383))))
(let (($generated@@385 ($generated@@292 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@387) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@386) ($generated@@156 ($generated@@332 $generated@@149 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@156 ($generated@@332 $generated@@149 $generated@@387))) ($generated@@157 ($generated@@332 $generated@@149 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@311 (type $generated@@391))))
(let (($generated@@393 ($generated@@310 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@78 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@395) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@394) ($generated@@156 ($generated@@332 $generated@@149 $generated@@395)))) (= ($generated@@83 ($generated@@389 $generated@@394) ($generated@@156 ($generated@@332 $generated@@149 $generated@@395))) ($generated@@157 ($generated@@332 $generated@@149 $generated@@395))))))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@292 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@291 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@83 ($generated@@340 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@83 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@83 ($generated@@340 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@310 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@309 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@83 ($generated@@351 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@83 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@83 ($generated@@351 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@66)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@409) $generated@@413))) (and ($generated@@256 ($generated@@83 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@256 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@66)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@417) $generated@@421))) (and ($generated@@256 ($generated@@83 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@256 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@76 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 Int) ($generated@@424 Int) ) (! (= ($generated@@422 $generated@@423 $generated@@424) (div $generated@@423 $generated@@424))
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@78 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@311 (type $generated@@427))))
(let (($generated@@429 ($generated@@310 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@309 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@308 $generated@@429 $generated@@428)) (= ($generated@@307 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@307 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@311 (type $generated@@430))))
(let (($generated@@432 ($generated@@310 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@309 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@308 $generated@@432 $generated@@431)) (= ($generated@@351 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@351 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@311 (type $generated@@433))))
(let (($generated@@435 ($generated@@310 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@309 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@308 $generated@@435 $generated@@434)) (= ($generated@@388 $generated@@433) ($generated@@425 $generated@@158))))))
 :pattern ( ($generated@@388 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@293 (type $generated@@436))))
(let (($generated@@438 ($generated@@292 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@291 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@290 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@158) (= (type $generated@@440) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@436) ($generated@@278 ($generated@@230 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@380 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@311 (type $generated@@441))))
(let (($generated@@443 ($generated@@310 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@309 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@308 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@158) (= (type $generated@@445) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@388 $generated@@441) ($generated@@278 ($generated@@230 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@388 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@158) ($generated@@231 $generated@@446 $generated@@46)) (and (= ($generated@@278 ($generated@@332 $generated@@2 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@332 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@158) ($generated@@231 $generated@@447 $generated@@47)) (and (= ($generated@@278 ($generated@@332 $generated@@3 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@332 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@158) ($generated@@231 $generated@@448 $generated@@44)) (and (= ($generated@@278 ($generated@@332 $generated@@4 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@332 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 21))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@158) ($generated@@231 $generated@@450 $generated@@45)) (and (= ($generated@@278 ($generated@@332 $generated@@449 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@332 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@66) (= ($generated@@231 ($generated@@278 $generated@@451) $generated@@452) ($generated@@145 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@231 ($generated@@278 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@81 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@78 $generated@@454 $generated@@2)) (<= 0 ($generated@@283 $generated@@453))))
 :pattern ( ($generated@@283 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@272 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@271 $generated@@456)) (<= 0 ($generated@@270 $generated@@455))))
 :pattern ( ($generated@@270 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@406 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@406 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@406 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@406 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@74 ($generated@@406 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@414 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@471 ($generated@@414 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@74 ($generated@@414 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@158) (= (type $generated@@478) $generated@@158)) (= ($generated@@263 ($generated@@230 $generated@@477 $generated@@478)) $generated@@62))
 :pattern ( ($generated@@230 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@148 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@148 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@66)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@66) (= (type $generated@@486) $generated@@66)) (= ($generated@@483 ($generated@@148 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@148 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@158) (= (type $generated@@488) $generated@@158)) (= ($generated@@156 ($generated@@230 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@230 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@158) (= (type $generated@@490) $generated@@158)) (= ($generated@@157 ($generated@@230 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@272 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@271 $generated@@158)) (= (type $generated@@498) $generated@@66)) (= (type $generated@@499) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@270 $generated@@497))) ($generated@@256 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@76 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@77 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@77 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@503 ($generated@@240 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@240 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@74 ($generated@@240 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@507 ($generated@@245 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@245 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@74 ($generated@@245 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@66)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@511 ($generated@@169 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@169 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@74 ($generated@@169 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@74 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@332 $generated@@520 ($generated@@278 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@278 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) $generated@@66)) (= ($generated@@145 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@521) $generated@@524))) (and ($generated@@231 ($generated@@83 ($generated@@381 $generated@@521) $generated@@524) $generated@@523) ($generated@@231 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@521) $generated@@524))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@145 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) (= ($generated@@145 $generated@@525 ($generated@@414 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@525) $generated@@528))) (and ($generated@@231 ($generated@@83 ($generated@@389 $generated@@525) $generated@@528) $generated@@527) ($generated@@231 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@525) $generated@@528))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@145 $generated@@525 ($generated@@414 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@158) (= (type $generated@@532) $generated@@158)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@230 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@230 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@158) (= (type $generated@@534) $generated@@158)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@230 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@230 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@158) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@66)) ($generated@@231 $generated@@535 ($generated@@406 $generated@@536 $generated@@537))) (and (= ($generated@@278 ($generated@@332 ($generated@@291 $generated@@158 $generated@@158) $generated@@535)) $generated@@535) ($generated@@145 ($generated@@332 ($generated@@291 $generated@@158 $generated@@158) $generated@@535) ($generated@@406 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@231 $generated@@535 ($generated@@406 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@158) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) ($generated@@231 $generated@@538 ($generated@@414 $generated@@539 $generated@@540))) (and (= ($generated@@278 ($generated@@332 ($generated@@309 $generated@@158 $generated@@158) $generated@@538)) $generated@@538) ($generated@@145 ($generated@@332 ($generated@@309 $generated@@158 $generated@@158) $generated@@538) ($generated@@414 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@231 $generated@@538 ($generated@@414 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@158)) ($generated@@231 $generated@@543 ($generated@@148 $generated@@541 $generated@@542))) (and (= ($generated@@278 ($generated@@332 $generated@@149 $generated@@543)) $generated@@543) ($generated@@145 ($generated@@332 $generated@@149 $generated@@543) ($generated@@148 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@231 $generated@@543 ($generated@@148 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@83 ($generated@@425 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@83 ($generated@@425 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@546 Int) ($generated@@547 Int) ) (! (= ($generated@@167 $generated@@546 $generated@@547) (mod $generated@@546 $generated@@547))
 :pattern ( ($generated@@167 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@71)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@66) (= (type $generated@@551) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@550 $generated@@551)) $generated@@63) (= ($generated@@548 ($generated@@148 $generated@@550 $generated@@551)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@149) (= ($generated@@529 ($generated@@278 $generated@@552)) ($generated@@530 $generated@@552)))
 :pattern ( ($generated@@529 ($generated@@278 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@158) ($generated@@231 $generated@@553 ($generated@@77 0))) (and (= ($generated@@278 ($generated@@332 $generated@@2 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@553) ($generated@@77 0))))
 :pattern ( ($generated@@231 $generated@@553 ($generated@@77 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@158) (= (type $generated@@555) $generated@@66)) ($generated@@231 $generated@@554 ($generated@@240 $generated@@555))) (and (= ($generated@@278 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@554) ($generated@@240 $generated@@555))))
 :pattern ( ($generated@@231 $generated@@554 ($generated@@240 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@158) (= (type $generated@@557) $generated@@66)) ($generated@@231 $generated@@556 ($generated@@245 $generated@@557))) (and (= ($generated@@278 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@556) ($generated@@245 $generated@@557))))
 :pattern ( ($generated@@231 $generated@@556 ($generated@@245 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@158) (= (type $generated@@559) $generated@@66)) ($generated@@231 $generated@@558 ($generated@@169 $generated@@559))) (and (= ($generated@@278 ($generated@@332 ($generated@@78 $generated@@158 $generated@@2) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@2) $generated@@558) ($generated@@169 $generated@@559))))
 :pattern ( ($generated@@231 $generated@@558 ($generated@@169 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@158) (= (type $generated@@561) $generated@@66)) ($generated@@231 $generated@@560 ($generated@@491 $generated@@561))) (and (= ($generated@@278 ($generated@@332 ($generated@@271 $generated@@158) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@332 ($generated@@271 $generated@@158) $generated@@560) ($generated@@491 $generated@@561))))
 :pattern ( ($generated@@231 $generated@@560 ($generated@@491 $generated@@561)))
)))
(assert (= ($generated@@74 $generated@@142) $generated@@61))
(assert (= ($generated@@548 $generated@@142) $generated@@64))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@562 ($generated@@169 $generated@@563) $generated@@564) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@562 $generated@@565)))) ($generated@@256 $generated@@565 $generated@@563 $generated@@564))
 :pattern ( ($generated@@83 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@76 $generated@@562 ($generated@@169 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@149) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@568) (and ($generated@@147 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@66) ($generated@@76 $generated@@566 ($generated@@148 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@76 $generated@@566 ($generated@@148 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@256 ($generated@@156 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@256 ($generated@@156 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@149) (= (type $generated@@571) $generated@@66)) (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@572) (and ($generated@@147 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@66) ($generated@@76 $generated@@570 ($generated@@148 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@76 $generated@@570 ($generated@@148 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@256 ($generated@@157 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@256 ($generated@@157 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@158) (= (type $generated@@575) $generated@@158)) (= ($generated@@230 ($generated@@251 $generated@@574) ($generated@@251 $generated@@575)) ($generated@@251 ($generated@@230 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@230 ($generated@@251 $generated@@574) ($generated@@251 $generated@@575)))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@576 T@U) ($generated@@577 Int) ($generated@@578 Int) ) (!  (=> (and (= (type $generated@@576) $generated@@136) (or ($generated@@328 $generated@@577 $generated@@578) (and (not (= 1 $generated@@163)) (and (<= ($generated@@166 0) $generated@@577) (<= ($generated@@166 0) $generated@@578))))) (and (=> (not (= $generated@@578 ($generated@@166 0))) (=> (not (= $generated@@577 ($generated@@166 0))) (and ($generated@@328 (- $generated@@577 1) $generated@@578) ($generated@@328 (- $generated@@577 1) (- $generated@@578 1))))) (= ($generated@@134 ($generated@@358 $generated@@576) $generated@@577 $generated@@578) (ite (= $generated@@578 ($generated@@166 0)) 1 (ite (= $generated@@577 ($generated@@166 0)) 0 (+ ($generated@@134 $generated@@576 (- $generated@@577 1) $generated@@578) ($generated@@134 $generated@@576 (- $generated@@577 1) (- $generated@@578 1))))))))
 :pattern ( ($generated@@134 ($generated@@358 $generated@@576) $generated@@577 $generated@@578))
))))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@278 ($generated@@8 ($generated@@166 $generated@@579))) ($generated@@251 ($generated@@278 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@278 ($generated@@8 ($generated@@166 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ) (! (= ($generated@@278 ($generated@@251 $generated@@580)) ($generated@@251 ($generated@@278 $generated@@580)))
 :pattern ( ($generated@@278 ($generated@@251 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@272 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@271 $generated@@582)) (= ($generated@@270 $generated@@581) 0)) (= $generated@@581 ($generated@@269 $generated@@582))))
 :pattern ( ($generated@@270 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@78 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@283 ($generated@@84 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@283 $generated@@583) ($generated ($generated@@83 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@283 ($generated@@84 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@2)) ($generated@@76 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@3)) ($generated@@76 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@4)) ($generated@@76 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@449)) ($generated@@76 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@158)) ($generated@@76 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@48 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@271 $generated@@158)) (= (type $generated@@598) $generated@@66)) (= ($generated@@145 $generated@@597 ($generated@@491 $generated@@598)) (forall (($generated@@599 Int) ) (!  (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@270 $generated@@597))) ($generated@@231 ($generated@@492 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@492 $generated@@597 $generated@@599))
))))
 :pattern ( ($generated@@145 $generated@@597 ($generated@@491 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 Int) ) (!  (=> (= (type $generated@@601) ($generated@@271 $generated@@158)) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@270 $generated@@601))) (< ($generated@@530 ($generated@@332 $generated@@149 ($generated@@492 $generated@@601 $generated@@602))) ($generated@@600 $generated@@601))))
 :pattern ( ($generated@@530 ($generated@@332 $generated@@149 ($generated@@492 $generated@@601 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) $generated@@66)) ($generated@@145 $generated@@603 ($generated@@406 $generated@@604 $generated@@605))) (and (and ($generated@@145 ($generated@@289 $generated@@603) ($generated@@240 $generated@@604)) ($generated@@145 ($generated@@340 $generated@@603) ($generated@@240 $generated@@605))) ($generated@@145 ($generated@@380 $generated@@603) ($generated@@240 ($generated@@148 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@145 $generated@@603 ($generated@@406 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@607) $generated@@66)) (= (type $generated@@608) $generated@@66)) ($generated@@145 $generated@@606 ($generated@@414 $generated@@607 $generated@@608))) (and (and ($generated@@145 ($generated@@307 $generated@@606) ($generated@@245 $generated@@607)) ($generated@@145 ($generated@@351 $generated@@606) ($generated@@245 $generated@@608))) ($generated@@145 ($generated@@388 $generated@@606) ($generated@@245 ($generated@@148 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@145 $generated@@606 ($generated@@414 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) ($generated@@145 $generated@@609 $generated@@46))
 :pattern ( ($generated@@145 $generated@@609 $generated@@46))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@3) ($generated@@145 $generated@@610 $generated@@47))
 :pattern ( ($generated@@145 $generated@@610 $generated@@47))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@4) ($generated@@145 $generated@@611 $generated@@44))
 :pattern ( ($generated@@145 $generated@@611 $generated@@44))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@449) ($generated@@145 $generated@@612 $generated@@45))
 :pattern ( ($generated@@145 $generated@@612 $generated@@45))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@158) ($generated@@145 $generated@@613 $generated@@48))
 :pattern ( ($generated@@145 $generated@@613 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@619) ($generated@@176 $generated@@79 $generated@@4))) (= (type $generated@@620) $generated@@79)) (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@623 true))
(let (($generated@@624  (=> (not (and ($generated@@164 $generated@@614) (not ($generated@@164 $generated@@615)))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (not (= ($generated@@166 2) 0))) (=> (not (= ($generated@@166 2) 0)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (not (= ($generated@@166 2) 0))) (=> (not (= ($generated@@166 2) 0)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@145 ($generated@@8 ($generated@@422 $generated@@614 ($generated@@166 2))) $generated@@142)) (=> ($generated@@145 ($generated@@8 ($generated@@422 $generated@@614 ($generated@@166 2))) $generated@@142) (=> (and (= $generated@@616 ($generated@@422 $generated@@614 ($generated@@166 2))) ($generated@@76 ($generated@@8 $generated@@616) $generated@@142 $generated@@617)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@145 ($generated@@8 ($generated@@422 $generated@@615 ($generated@@166 2))) $generated@@142)) (=> ($generated@@145 ($generated@@8 ($generated@@422 $generated@@615 ($generated@@166 2))) $generated@@142) (=> (= $generated@@618 ($generated@@422 $generated@@615 ($generated@@166 2))) (=> (and ($generated@@76 ($generated@@8 $generated@@618) $generated@@142 $generated@@617) ($generated@@328 ($generated@@422 $generated@@614 ($generated@@166 2)) ($generated@@422 $generated@@615 ($generated@@166 2)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= ($generated@@166 2) 0))) (=> (not (= ($generated@@166 2) 0)) (=> (= (ControlFlow 0 3) 1) $generated@@623)))))))))))))))))
(let (($generated@@625  (=> (and (and ($generated@@164 $generated@@614) (not ($generated@@164 $generated@@615))) (= (ControlFlow 0 2) 1)) $generated@@623)))
(let (($generated@@626  (=> (not ($generated@@164 $generated@@614)) (and (=> (= (ControlFlow 0 10) 2) $generated@@625) (=> (= (ControlFlow 0 10) 3) $generated@@624)))))
(let (($generated@@627  (=> ($generated@@164 $generated@@614) (=> (and ($generated@@76 ($generated@@8 $generated@@615) $generated@@142 $generated@@617) ($generated@@165 $generated@@615)) (and (=> (= (ControlFlow 0 9) 2) $generated@@625) (=> (= (ControlFlow 0 9) 3) $generated@@624))))))
(let (($generated@@628  (=> (= $generated@@619 ($generated@@175 $generated@@620 $generated@@621 $generated@@60 false)) (=> (and ($generated@@255 $generated@@617) ($generated@@622 $generated@@617)) (=> (and (and (= $generated@@621 $generated@@617) ($generated@@76 ($generated@@8 $generated@@614) $generated@@142 $generated@@617)) (and ($generated@@76 ($generated@@8 $generated@@615) $generated@@142 $generated@@617) ($generated@@328 $generated@@614 $generated@@615))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (not (= ($generated@@166 2) 0))) (=> (not (= ($generated@@166 2) 0)) (=> (and ($generated@@76 ($generated@@8 $generated@@614) $generated@@142 $generated@@617) ($generated@@165 $generated@@614)) (and (=> (= (ControlFlow 0 11) 9) $generated@@627) (=> (= (ControlFlow 0 11) 10) $generated@@626))))))))))
(let (($generated@@629  (=> (and ($generated@@255 $generated@@621) ($generated@@622 $generated@@621)) (=> (and (and (<= ($generated@@166 0) $generated@@614) (<= ($generated@@166 0) $generated@@615)) (and (= 2 $generated@@163) (= (ControlFlow 0 13) 11))) $generated@@628))))
$generated@@629))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U Int Int) Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 (Int) Bool)
(declare-fun $generated@@165 (Int) Bool)
(declare-fun $generated@@166 (Int) Int)
(declare-fun $generated@@167 (Int Int) Int)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (Int Int) Bool)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (Int Int) Int)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@138)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@138))
))) (= (type $generated@@137) $generated@@136)))
(assert (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (= (type $generated@@139) $generated@@136) (= ($generated@@134 $generated@@139 $generated@@140 $generated@@141) ($generated@@134 $generated@@137 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@134 ($generated@@135 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@66))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@77 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@168 Int) ) (!  (=> (or ($generated@@165 $generated@@168) (and (not (= 1 $generated@@163)) (<= ($generated@@166 0) $generated@@168))) (= ($generated@@164 $generated@@168) (= ($generated@@167 $generated@@168 ($generated@@166 2)) ($generated@@166 0))))
 :pattern ( ($generated@@164 $generated@@168))
))))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@66)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@173) $generated@@66)) ($generated@@145 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@145 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 17)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@79 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@69 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@79) (= (type $generated@@224) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@225) ($generated@@68 $generated@@4))) (= (type $generated@@227) $generated@@79)) (= (type $generated@@228) ($generated@@68 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@149)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@66) (= (type $generated@@235) $generated@@66)) (= (type $generated@@236) $generated@@158)) (= (type $generated@@237) $generated@@158)) (= ($generated@@145 ($generated@@230 $generated@@236 $generated@@237) ($generated@@148 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@145 ($generated@@230 $generated@@236 $generated@@237) ($generated@@148 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@149) (= (type $generated@@239) $generated@@149)) (= ($generated@@155 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@155 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@66)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@243) $generated@@66)) (= ($generated@@145 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@158) ($generated@@0 ($generated@@83 $generated@@242 $generated@@244))) ($generated@@231 $generated@@244 $generated@@243))
 :pattern ( ($generated@@83 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@145 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@66)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@248) $generated@@66)) (= ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@158) ($generated@@0 ($generated@@83 $generated@@247 $generated@@249))) ($generated@@231 $generated@@249 $generated@@248))
 :pattern ( ($generated@@83 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@145 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@166 $generated@@250) $generated@@250)
 :pattern ( ($generated@@166 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@66) (= (type $generated@@258) $generated@@66)) (= (type $generated@@259) $generated@@158)) (= (type $generated@@260) $generated@@158)) (= (type $generated@@261) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@255 $generated@@261)) (= ($generated@@76 ($generated@@230 $generated@@259 $generated@@260) ($generated@@148 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@76 ($generated@@230 $generated@@259 $generated@@260) ($generated@@148 $generated@@257 $generated@@258) $generated@@261))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@262 Int) ) (!  (=> (or ($generated@@165 ($generated@@166 $generated@@262)) (and (not (= 1 $generated@@163)) (<= ($generated@@166 0) $generated@@262))) (= ($generated@@164 ($generated@@166 $generated@@262)) (= ($generated@@166 ($generated@@167 $generated@@262 ($generated@@166 2))) ($generated@@166 0))))
 :weight 3
 :pattern ( ($generated@@164 ($generated@@166 $generated@@262)))
))))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@70)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@149) (= ($generated@@147 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@149) ($generated@@147 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@158) (= (type $generated@@268) $generated@@158)) (= $generated@@266 ($generated@@230 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@147 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 18)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@2) (= ($generated@@145 $generated@@277 $generated@@142) (<= ($generated@@166 0) ($generated $generated@@277))))
 :pattern ( ($generated@@145 $generated@@277 $generated@@142))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@158)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@66) (= (type $generated@@282) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@256 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@76 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@256 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@78 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@81 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@78 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@83 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 19)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@78 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 20)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@81 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@78 $generated@@326 $generated@@2)) (= ($generated@@170 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@83 $generated@@325 $generated@@327))) (<= ($generated ($generated@@83 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@83 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@170 $generated@@325))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@329 T@U) ($generated@@330 Int) ($generated@@331 Int) ) (!  (=> (and (= (type $generated@@329) $generated@@136) (or ($generated@@328 $generated@@330 $generated@@331) (and (not (= 1 $generated@@163)) (and (<= ($generated@@166 0) $generated@@330) (<= ($generated@@166 0) $generated@@331))))) (<= ($generated@@166 0) ($generated@@134 $generated@@329 $generated@@330 $generated@@331)))
 :pattern ( ($generated@@134 $generated@@329 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@158) ($generated@@231 $generated@@335 $generated@@142)) (and (= ($generated@@278 ($generated@@332 $generated@@2 $generated@@335)) $generated@@335) ($generated@@145 ($generated@@332 $generated@@2 $generated@@335) $generated@@142)))
 :pattern ( ($generated@@231 $generated@@335 $generated@@142))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@293 (type $generated@@336))))
(let (($generated@@338 ($generated@@292 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@291 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@290 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@289 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@293 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@78 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@293 (type $generated@@343))))
(let (($generated@@345 ($generated@@292 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@291 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@290 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@83 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@311 (type $generated@@347))))
(let (($generated@@349 ($generated@@310 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@309 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@308 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@307 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@311 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@78 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@311 (type $generated@@354))))
(let (($generated@@356 ($generated@@310 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@309 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@308 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@83 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@136)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 Int) ($generated@@362 Int) ) (!  (=> (= (type $generated@@360) $generated@@136) (= ($generated@@134 ($generated@@358 $generated@@360) $generated@@361 $generated@@362) ($generated@@134 $generated@@360 $generated@@361 $generated@@362)))
 :pattern ( ($generated@@134 ($generated@@358 $generated@@360) $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@364) $generated@@66)) (= ($generated@@145 $generated@@363 ($generated@@169 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@363 $generated@@365)))) ($generated@@231 $generated@@365 $generated@@364))
 :pattern ( ($generated@@83 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@145 $generated@@363 ($generated@@169 $generated@@364)))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@366 T@U) ($generated@@367 Int) ($generated@@368 Int) ) (!  (=> (and (= (type $generated@@366) $generated@@136) (or ($generated@@328 ($generated@@166 $generated@@367) ($generated@@166 $generated@@368)) (and (not (= 1 $generated@@163)) (and (<= ($generated@@166 0) $generated@@367) (<= ($generated@@166 0) $generated@@368))))) (and (=> (not (= ($generated@@166 $generated@@368) ($generated@@166 0))) (=> (not (= ($generated@@166 $generated@@367) ($generated@@166 0))) (and ($generated@@328 ($generated@@166 (- $generated@@367 1)) ($generated@@166 $generated@@368)) ($generated@@328 ($generated@@166 (- $generated@@367 1)) ($generated@@166 (- $generated@@368 1)))))) (= ($generated@@134 ($generated@@358 $generated@@366) ($generated@@166 $generated@@367) ($generated@@166 $generated@@368)) (ite (= ($generated@@166 $generated@@368) ($generated@@166 0)) 1 (ite (= ($generated@@166 $generated@@367) ($generated@@166 0)) 0 (+ ($generated@@134 ($generated@@358 $generated@@366) ($generated@@166 (- $generated@@367 1)) ($generated@@166 $generated@@368)) ($generated@@134 ($generated@@358 $generated@@366) ($generated@@166 (- $generated@@367 1)) ($generated@@166 (- $generated@@368 1)))))))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@358 $generated@@366) ($generated@@166 $generated@@367) ($generated@@166 $generated@@368)))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@370) $generated@@66)) (= (type $generated@@371) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@369 ($generated@@240 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@158) ($generated@@0 ($generated@@83 $generated@@369 $generated@@372))) ($generated@@256 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@83 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@76 $generated@@369 ($generated@@240 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@374) $generated@@66)) (= (type $generated@@375) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@373 ($generated@@245 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@158) ($generated@@0 ($generated@@83 $generated@@373 $generated@@376))) ($generated@@256 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@83 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@76 $generated@@373 ($generated@@245 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(= ($generated ($generated@@83 ($generated@@284 $generated@@378) $generated@@377)) 0))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@83 ($generated@@284 $generated@@378) $generated@@377)))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@379 Int) ) (!  (=> (or ($generated@@165 $generated@@379) (and (not (= 1 $generated@@163)) (<= ($generated@@166 0) $generated@@379))) true)
 :pattern ( ($generated@@164 $generated@@379))
))))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@293 (type $generated@@383))))
(let (($generated@@385 ($generated@@292 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@387) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@386) ($generated@@156 ($generated@@332 $generated@@149 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@156 ($generated@@332 $generated@@149 $generated@@387))) ($generated@@157 ($generated@@332 $generated@@149 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@311 (type $generated@@391))))
(let (($generated@@393 ($generated@@310 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@78 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@395) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@394) ($generated@@156 ($generated@@332 $generated@@149 $generated@@395)))) (= ($generated@@83 ($generated@@389 $generated@@394) ($generated@@156 ($generated@@332 $generated@@149 $generated@@395))) ($generated@@157 ($generated@@332 $generated@@149 $generated@@395))))))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@292 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@291 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@83 ($generated@@340 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@83 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@83 ($generated@@340 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@310 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@309 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@83 ($generated@@351 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@83 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@83 ($generated@@351 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@66)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@409) $generated@@413))) (and ($generated@@256 ($generated@@83 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@256 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@66)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@417) $generated@@421))) (and ($generated@@256 ($generated@@83 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@256 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@76 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 Int) ($generated@@424 Int) ) (! (= ($generated@@422 $generated@@423 $generated@@424) (div $generated@@423 $generated@@424))
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@78 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@311 (type $generated@@427))))
(let (($generated@@429 ($generated@@310 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@309 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@308 $generated@@429 $generated@@428)) (= ($generated@@307 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@307 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@311 (type $generated@@430))))
(let (($generated@@432 ($generated@@310 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@309 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@308 $generated@@432 $generated@@431)) (= ($generated@@351 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@351 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@311 (type $generated@@433))))
(let (($generated@@435 ($generated@@310 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@309 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@308 $generated@@435 $generated@@434)) (= ($generated@@388 $generated@@433) ($generated@@425 $generated@@158))))))
 :pattern ( ($generated@@388 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@293 (type $generated@@436))))
(let (($generated@@438 ($generated@@292 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@291 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@290 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@158) (= (type $generated@@440) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@436) ($generated@@278 ($generated@@230 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@380 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@311 (type $generated@@441))))
(let (($generated@@443 ($generated@@310 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@309 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@308 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@158) (= (type $generated@@445) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@388 $generated@@441) ($generated@@278 ($generated@@230 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@388 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@158) ($generated@@231 $generated@@446 $generated@@46)) (and (= ($generated@@278 ($generated@@332 $generated@@2 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@332 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@158) ($generated@@231 $generated@@447 $generated@@47)) (and (= ($generated@@278 ($generated@@332 $generated@@3 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@332 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@158) ($generated@@231 $generated@@448 $generated@@44)) (and (= ($generated@@278 ($generated@@332 $generated@@4 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@332 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 21))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@158) ($generated@@231 $generated@@450 $generated@@45)) (and (= ($generated@@278 ($generated@@332 $generated@@449 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@332 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@66) (= ($generated@@231 ($generated@@278 $generated@@451) $generated@@452) ($generated@@145 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@231 ($generated@@278 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@81 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@78 $generated@@454 $generated@@2)) (<= 0 ($generated@@283 $generated@@453))))
 :pattern ( ($generated@@283 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@272 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@271 $generated@@456)) (<= 0 ($generated@@270 $generated@@455))))
 :pattern ( ($generated@@270 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@406 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@406 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@406 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@406 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@74 ($generated@@406 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@414 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@471 ($generated@@414 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@74 ($generated@@414 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@158) (= (type $generated@@478) $generated@@158)) (= ($generated@@263 ($generated@@230 $generated@@477 $generated@@478)) $generated@@62))
 :pattern ( ($generated@@230 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@148 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@148 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@66)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@66) (= (type $generated@@486) $generated@@66)) (= ($generated@@483 ($generated@@148 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@148 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@158) (= (type $generated@@488) $generated@@158)) (= ($generated@@156 ($generated@@230 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@230 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@158) (= (type $generated@@490) $generated@@158)) (= ($generated@@157 ($generated@@230 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@272 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@271 $generated@@158)) (= (type $generated@@498) $generated@@66)) (= (type $generated@@499) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@270 $generated@@497))) ($generated@@256 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@76 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@77 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@77 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@503 ($generated@@240 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@240 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@74 ($generated@@240 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@507 ($generated@@245 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@245 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@74 ($generated@@245 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@66)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@511 ($generated@@169 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@169 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@74 ($generated@@169 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@74 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@332 $generated@@520 ($generated@@278 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@278 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) $generated@@66)) (= ($generated@@145 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@521) $generated@@524))) (and ($generated@@231 ($generated@@83 ($generated@@381 $generated@@521) $generated@@524) $generated@@523) ($generated@@231 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@521) $generated@@524))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@145 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) (= ($generated@@145 $generated@@525 ($generated@@414 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@525) $generated@@528))) (and ($generated@@231 ($generated@@83 ($generated@@389 $generated@@525) $generated@@528) $generated@@527) ($generated@@231 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@525) $generated@@528))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@145 $generated@@525 ($generated@@414 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@158) (= (type $generated@@532) $generated@@158)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@230 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@230 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@158) (= (type $generated@@534) $generated@@158)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@230 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@230 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@158) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@66)) ($generated@@231 $generated@@535 ($generated@@406 $generated@@536 $generated@@537))) (and (= ($generated@@278 ($generated@@332 ($generated@@291 $generated@@158 $generated@@158) $generated@@535)) $generated@@535) ($generated@@145 ($generated@@332 ($generated@@291 $generated@@158 $generated@@158) $generated@@535) ($generated@@406 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@231 $generated@@535 ($generated@@406 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@158) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) ($generated@@231 $generated@@538 ($generated@@414 $generated@@539 $generated@@540))) (and (= ($generated@@278 ($generated@@332 ($generated@@309 $generated@@158 $generated@@158) $generated@@538)) $generated@@538) ($generated@@145 ($generated@@332 ($generated@@309 $generated@@158 $generated@@158) $generated@@538) ($generated@@414 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@231 $generated@@538 ($generated@@414 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@158)) ($generated@@231 $generated@@543 ($generated@@148 $generated@@541 $generated@@542))) (and (= ($generated@@278 ($generated@@332 $generated@@149 $generated@@543)) $generated@@543) ($generated@@145 ($generated@@332 $generated@@149 $generated@@543) ($generated@@148 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@231 $generated@@543 ($generated@@148 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@83 ($generated@@425 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@83 ($generated@@425 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@546 Int) ($generated@@547 Int) ) (! (= ($generated@@167 $generated@@546 $generated@@547) (mod $generated@@546 $generated@@547))
 :pattern ( ($generated@@167 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@71)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@66) (= (type $generated@@551) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@550 $generated@@551)) $generated@@63) (= ($generated@@548 ($generated@@148 $generated@@550 $generated@@551)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@149) (= ($generated@@529 ($generated@@278 $generated@@552)) ($generated@@530 $generated@@552)))
 :pattern ( ($generated@@529 ($generated@@278 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@158) ($generated@@231 $generated@@553 ($generated@@77 0))) (and (= ($generated@@278 ($generated@@332 $generated@@2 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@553) ($generated@@77 0))))
 :pattern ( ($generated@@231 $generated@@553 ($generated@@77 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@158) (= (type $generated@@555) $generated@@66)) ($generated@@231 $generated@@554 ($generated@@240 $generated@@555))) (and (= ($generated@@278 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@554) ($generated@@240 $generated@@555))))
 :pattern ( ($generated@@231 $generated@@554 ($generated@@240 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@158) (= (type $generated@@557) $generated@@66)) ($generated@@231 $generated@@556 ($generated@@245 $generated@@557))) (and (= ($generated@@278 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@556) ($generated@@245 $generated@@557))))
 :pattern ( ($generated@@231 $generated@@556 ($generated@@245 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@158) (= (type $generated@@559) $generated@@66)) ($generated@@231 $generated@@558 ($generated@@169 $generated@@559))) (and (= ($generated@@278 ($generated@@332 ($generated@@78 $generated@@158 $generated@@2) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@2) $generated@@558) ($generated@@169 $generated@@559))))
 :pattern ( ($generated@@231 $generated@@558 ($generated@@169 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@158) (= (type $generated@@561) $generated@@66)) ($generated@@231 $generated@@560 ($generated@@491 $generated@@561))) (and (= ($generated@@278 ($generated@@332 ($generated@@271 $generated@@158) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@332 ($generated@@271 $generated@@158) $generated@@560) ($generated@@491 $generated@@561))))
 :pattern ( ($generated@@231 $generated@@560 ($generated@@491 $generated@@561)))
)))
(assert (= ($generated@@74 $generated@@142) $generated@@61))
(assert (= ($generated@@548 $generated@@142) $generated@@64))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@562 ($generated@@169 $generated@@563) $generated@@564) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@562 $generated@@565)))) ($generated@@256 $generated@@565 $generated@@563 $generated@@564))
 :pattern ( ($generated@@83 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@76 $generated@@562 ($generated@@169 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@149) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@568) (and ($generated@@147 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@66) ($generated@@76 $generated@@566 ($generated@@148 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@76 $generated@@566 ($generated@@148 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@256 ($generated@@156 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@256 ($generated@@156 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@149) (= (type $generated@@571) $generated@@66)) (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@572) (and ($generated@@147 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@66) ($generated@@76 $generated@@570 ($generated@@148 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@76 $generated@@570 ($generated@@148 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@256 ($generated@@157 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@256 ($generated@@157 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@158) (= (type $generated@@575) $generated@@158)) (= ($generated@@230 ($generated@@251 $generated@@574) ($generated@@251 $generated@@575)) ($generated@@251 ($generated@@230 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@230 ($generated@@251 $generated@@574) ($generated@@251 $generated@@575)))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@576 T@U) ($generated@@577 Int) ($generated@@578 Int) ) (!  (=> (and (= (type $generated@@576) $generated@@136) (or ($generated@@328 $generated@@577 $generated@@578) (and (not (= 1 $generated@@163)) (and (<= ($generated@@166 0) $generated@@577) (<= ($generated@@166 0) $generated@@578))))) (and (=> (not (= $generated@@578 ($generated@@166 0))) (=> (not (= $generated@@577 ($generated@@166 0))) (and ($generated@@328 (- $generated@@577 1) $generated@@578) ($generated@@328 (- $generated@@577 1) (- $generated@@578 1))))) (= ($generated@@134 ($generated@@358 $generated@@576) $generated@@577 $generated@@578) (ite (= $generated@@578 ($generated@@166 0)) 1 (ite (= $generated@@577 ($generated@@166 0)) 0 (+ ($generated@@134 $generated@@576 (- $generated@@577 1) $generated@@578) ($generated@@134 $generated@@576 (- $generated@@577 1) (- $generated@@578 1))))))))
 :pattern ( ($generated@@134 ($generated@@358 $generated@@576) $generated@@577 $generated@@578))
))))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@278 ($generated@@8 ($generated@@166 $generated@@579))) ($generated@@251 ($generated@@278 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@278 ($generated@@8 ($generated@@166 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ) (! (= ($generated@@278 ($generated@@251 $generated@@580)) ($generated@@251 ($generated@@278 $generated@@580)))
 :pattern ( ($generated@@278 ($generated@@251 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@272 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@271 $generated@@582)) (= ($generated@@270 $generated@@581) 0)) (= $generated@@581 ($generated@@269 $generated@@582))))
 :pattern ( ($generated@@270 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@78 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@283 ($generated@@84 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@283 $generated@@583) ($generated ($generated@@83 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@283 ($generated@@84 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@2)) ($generated@@76 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@3)) ($generated@@76 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@4)) ($generated@@76 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@449)) ($generated@@76 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@158)) ($generated@@76 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@48 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@271 $generated@@158)) (= (type $generated@@598) $generated@@66)) (= ($generated@@145 $generated@@597 ($generated@@491 $generated@@598)) (forall (($generated@@599 Int) ) (!  (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@270 $generated@@597))) ($generated@@231 ($generated@@492 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@492 $generated@@597 $generated@@599))
))))
 :pattern ( ($generated@@145 $generated@@597 ($generated@@491 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 Int) ) (!  (=> (= (type $generated@@601) ($generated@@271 $generated@@158)) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@270 $generated@@601))) (< ($generated@@530 ($generated@@332 $generated@@149 ($generated@@492 $generated@@601 $generated@@602))) ($generated@@600 $generated@@601))))
 :pattern ( ($generated@@530 ($generated@@332 $generated@@149 ($generated@@492 $generated@@601 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) $generated@@66)) ($generated@@145 $generated@@603 ($generated@@406 $generated@@604 $generated@@605))) (and (and ($generated@@145 ($generated@@289 $generated@@603) ($generated@@240 $generated@@604)) ($generated@@145 ($generated@@340 $generated@@603) ($generated@@240 $generated@@605))) ($generated@@145 ($generated@@380 $generated@@603) ($generated@@240 ($generated@@148 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@145 $generated@@603 ($generated@@406 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@607) $generated@@66)) (= (type $generated@@608) $generated@@66)) ($generated@@145 $generated@@606 ($generated@@414 $generated@@607 $generated@@608))) (and (and ($generated@@145 ($generated@@307 $generated@@606) ($generated@@245 $generated@@607)) ($generated@@145 ($generated@@351 $generated@@606) ($generated@@245 $generated@@608))) ($generated@@145 ($generated@@388 $generated@@606) ($generated@@245 ($generated@@148 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@145 $generated@@606 ($generated@@414 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) ($generated@@145 $generated@@609 $generated@@46))
 :pattern ( ($generated@@145 $generated@@609 $generated@@46))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@3) ($generated@@145 $generated@@610 $generated@@47))
 :pattern ( ($generated@@145 $generated@@610 $generated@@47))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@4) ($generated@@145 $generated@@611 $generated@@44))
 :pattern ( ($generated@@145 $generated@@611 $generated@@44))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@449) ($generated@@145 $generated@@612 $generated@@45))
 :pattern ( ($generated@@145 $generated@@612 $generated@@45))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@158) ($generated@@145 $generated@@613 $generated@@48))
 :pattern ( ($generated@@145 $generated@@613 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@619) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@622) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@623) ($generated@@176 $generated@@79 $generated@@4))) (= (type $generated@@624) $generated@@79)) (= (type $generated@@625) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@626  (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@167 ($generated@@134 ($generated@@358 ($generated@@358 $generated@@137)) $generated@@614 $generated@@615) ($generated@@166 2)) (ite  (and ($generated@@164 $generated@@614) (not ($generated@@164 $generated@@615))) 0 ($generated@@167 ($generated@@134 ($generated@@358 ($generated@@358 $generated@@137)) ($generated@@422 $generated@@614 ($generated@@166 2)) ($generated@@422 $generated@@615 ($generated@@166 2))) ($generated@@166 2)))))))
(let (($generated@@627  (=> (not (or (= $generated@@614 ($generated@@166 0)) (= $generated@@615 ($generated@@166 0)))) (and (=> (= (ControlFlow 0 4) (- 0 13)) ($generated@@145 ($generated@@8 (- $generated@@614 1)) $generated@@142)) (=> ($generated@@145 ($generated@@8 (- $generated@@614 1)) $generated@@142) (=> (= $generated@@616 (- $generated@@614 1)) (and (=> (= (ControlFlow 0 4) (- 0 12)) (or (<= 0 $generated@@614) (= $generated@@616 $generated@@614))) (=> (or (<= 0 $generated@@614) (= $generated@@616 $generated@@614)) (and (=> (= (ControlFlow 0 4) (- 0 11)) (or (or (<= 0 $generated@@615) (< $generated@@616 $generated@@614)) (= $generated@@615 $generated@@615))) (=> (or (or (<= 0 $generated@@615) (< $generated@@616 $generated@@614)) (= $generated@@615 $generated@@615)) (and (=> (= (ControlFlow 0 4) (- 0 10)) (or (< $generated@@616 $generated@@614) (and (= $generated@@616 $generated@@614) (< $generated@@615 $generated@@615)))) (=> (or (< $generated@@616 $generated@@614) (and (= $generated@@616 $generated@@614) (< $generated@@615 $generated@@615))) (=> (and ($generated@@255 $generated@@617) ($generated@@618 $generated@@617)) (=> (and (and ($generated@@328 $generated@@616 $generated@@615) (and (and ($generated@@165 $generated@@616) (=> ($generated@@164 $generated@@616) ($generated@@165 $generated@@615))) (=> (not (and ($generated@@164 $generated@@616) (not ($generated@@164 $generated@@615)))) ($generated@@328 ($generated@@422 $generated@@616 ($generated@@166 2)) ($generated@@422 $generated@@615 ($generated@@166 2)))))) (and (= ($generated@@167 ($generated@@134 ($generated@@358 ($generated@@358 $generated@@137)) $generated@@616 $generated@@615) ($generated@@166 2)) (ite  (and ($generated@@164 $generated@@616) (not ($generated@@164 $generated@@615))) 0 ($generated@@167 ($generated@@134 ($generated@@358 ($generated@@358 $generated@@137)) ($generated@@422 $generated@@616 ($generated@@166 2)) ($generated@@422 $generated@@615 ($generated@@166 2))) ($generated@@166 2)))) (= $generated@@619 $generated@@617))) (and (=> (= (ControlFlow 0 4) (- 0 9)) ($generated@@145 ($generated@@8 (- $generated@@614 1)) $generated@@142)) (=> ($generated@@145 ($generated@@8 (- $generated@@614 1)) $generated@@142) (=> (= $generated@@620 (- $generated@@614 1)) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@145 ($generated@@8 (- $generated@@615 1)) $generated@@142)) (=> ($generated@@145 ($generated@@8 (- $generated@@615 1)) $generated@@142) (=> (= $generated@@621 (- $generated@@615 1)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@614) (= $generated@@620 $generated@@614))) (=> (or (<= 0 $generated@@614) (= $generated@@620 $generated@@614)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (<= 0 $generated@@615) (< $generated@@620 $generated@@614)) (= $generated@@621 $generated@@615))) (=> (or (or (<= 0 $generated@@615) (< $generated@@620 $generated@@614)) (= $generated@@621 $generated@@615)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (< $generated@@620 $generated@@614) (and (= $generated@@620 $generated@@614) (< $generated@@621 $generated@@615)))) (=> (or (< $generated@@620 $generated@@614) (and (= $generated@@620 $generated@@614) (< $generated@@621 $generated@@615))) (=> (and ($generated@@255 $generated@@622) ($generated@@618 $generated@@622)) (=> (and (and (and ($generated@@328 $generated@@620 $generated@@621) (and (and ($generated@@165 $generated@@620) (=> ($generated@@164 $generated@@620) ($generated@@165 $generated@@621))) (=> (not (and ($generated@@164 $generated@@620) (not ($generated@@164 $generated@@621)))) ($generated@@328 ($generated@@422 $generated@@620 ($generated@@166 2)) ($generated@@422 $generated@@621 ($generated@@166 2)))))) (= ($generated@@167 ($generated@@134 ($generated@@358 ($generated@@358 $generated@@137)) $generated@@620 $generated@@621) ($generated@@166 2)) (ite  (and ($generated@@164 $generated@@620) (not ($generated@@164 $generated@@621))) 0 ($generated@@167 ($generated@@134 ($generated@@358 ($generated@@358 $generated@@137)) ($generated@@422 $generated@@620 ($generated@@166 2)) ($generated@@422 $generated@@621 ($generated@@166 2))) ($generated@@166 2))))) (and (= $generated@@617 $generated@@622) (= (ControlFlow 0 4) 2))) $generated@@626))))))))))))))))))))))))))))
(let (($generated@@628  (=> (and (or (= $generated@@614 ($generated@@166 0)) (= $generated@@615 ($generated@@166 0))) (= (ControlFlow 0 3) 2)) $generated@@626)))
(let (($generated@@629  (and (=> (= (ControlFlow 0 14) 3) $generated@@628) (=> (= (ControlFlow 0 14) 4) $generated@@627))))
(let (($generated@@630  (=> (and (= $generated@@614 ($generated@@166 0)) (= (ControlFlow 0 16) 14)) $generated@@629)))
(let (($generated@@631  (=> (and (not (= $generated@@614 ($generated@@166 0))) (= (ControlFlow 0 15) 14)) $generated@@629)))
(let (($generated@@632  (=> (= $generated@@623 ($generated@@175 $generated@@624 $generated@@625 $generated@@60 false)) (=> (and (and ($generated@@255 $generated@@619) ($generated@@618 $generated@@619)) (and (= $generated@@625 $generated@@619) (forall (($generated@@633 Int) ($generated@@634 Int) )  (=> (and (and (and (<= ($generated@@166 0) $generated@@633) (<= ($generated@@166 0) $generated@@634)) ($generated@@0 ($generated@@251 ($generated@@11 true)))) (or (and (<= 0 $generated@@633) (< $generated@@633 $generated@@614)) (and (= $generated@@633 $generated@@614) (and (<= 0 $generated@@634) (< $generated@@634 $generated@@615))))) (= ($generated@@167 ($generated@@134 ($generated@@358 $generated@@137) $generated@@633 $generated@@634) ($generated@@166 2)) (ite  (and ($generated@@164 $generated@@633) (not ($generated@@164 $generated@@634))) 0 ($generated@@167 ($generated@@134 ($generated@@358 $generated@@137) ($generated@@422 $generated@@633 ($generated@@166 2)) ($generated@@422 $generated@@634 ($generated@@166 2))) ($generated@@166 2)))))))) (and (=> (= (ControlFlow 0 17) 15) $generated@@631) (=> (= (ControlFlow 0 17) 16) $generated@@630))))))
(let (($generated@@635  (=> (and ($generated@@255 $generated@@625) ($generated@@618 $generated@@625)) (=> (and (and (<= ($generated@@166 0) $generated@@614) (<= ($generated@@166 0) $generated@@615)) (and (= 2 $generated@@163) (= (ControlFlow 0 18) 17))) $generated@@632))))
$generated@@635)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@281 (Int T@U Int T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@140 $generated@@144)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@140 $generated@@144))
))) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@66)
 :pattern ( ($generated@@143 $generated@@145))
))))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 $generated@@146) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@146 ($generated@@143 $generated@@134))))) ($generated@@137 ($generated@@140 $generated@@146) ($generated@@143 $generated@@134)))
 :pattern ( ($generated@@140 $generated@@146))
))))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@137 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@137 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@141)
 :pattern ( ($generated@@156 $generated@@158))
)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@141)
 :pattern ( ($generated@@157 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@149) (= (type $generated@@161) $generated@@149)) true) (= ($generated@@155 $generated@@160 $generated@@161)  (and (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)) (= ($generated@@157 $generated@@160) ($generated@@157 $generated@@161)))))
 :pattern ( ($generated@@155 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@166) $generated@@66)) ($generated@@137 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@137 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@79 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@69 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@79) (= (type $generated@@217) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@218) ($generated@@68 $generated@@4))) (= (type $generated@@220) $generated@@79)) (= (type $generated@@221) ($generated@@68 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@79 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@69 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@79) (= (type $generated@@229) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@230) ($generated@@68 $generated@@4))) (= (type $generated@@232) $generated@@79)) (= (type $generated@@233) ($generated@@68 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@149)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@66) (= (type $generated@@240) $generated@@66)) (= (type $generated@@241) $generated@@141)) (= (type $generated@@242) $generated@@141)) (= ($generated@@137 ($generated@@235 $generated@@241 $generated@@242) ($generated@@148 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@137 ($generated@@235 $generated@@241 $generated@@242) ($generated@@148 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@149) (= (type $generated@@244) $generated@@149)) (= ($generated@@155 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@155 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@143 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@141) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@236 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@143 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@66)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@251) $generated@@66)) (= ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@0 ($generated@@83 $generated@@250 $generated@@252))) ($generated@@236 $generated@@252 $generated@@251))
 :pattern ( ($generated@@83 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@66) (= (type $generated@@262) $generated@@66)) (= (type $generated@@263) $generated@@141)) (= (type $generated@@264) $generated@@141)) (= (type $generated@@265) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@259 $generated@@265)) (= ($generated@@76 ($generated@@235 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@76 ($generated@@235 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@149) (= ($generated@@147 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@149) ($generated@@147 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@141) (= (type $generated@@271) $generated@@141)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@147 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@2) (= ($generated@@137 $generated@@280 $generated@@134) (<= ($generated@@253 0) ($generated $generated@@280))))
 :pattern ( ($generated@@137 $generated@@280 $generated@@134))
)))
(assert  (and (forall (($generated@@283 Int) ($generated@@284 T@U) ($generated@@285 Int) ($generated@@286 T@U) ) (! (= (type ($generated@@281 $generated@@283 $generated@@284 $generated@@285 $generated@@286)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@281 $generated@@283 $generated@@284 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (! (= (type ($generated@@282 $generated@@287)) $generated@@141)
 :pattern ( ($generated@@282 $generated@@287))
))))
(assert (forall (($generated@@288 Int) ($generated@@289 T@U) ($generated@@290 Int) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@289) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@291) ($generated@@78 $generated@@141 $generated@@4))) (= (type $generated@@292) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@281 $generated@@288 $generated@@289 $generated@@290 $generated@@291) $generated@@292)) (exists (($generated@@293 Int) ) (!  (and (and (<= $generated@@288 $generated@@293) ($generated@@0 ($generated@@83 $generated@@289 ($generated@@282 ($generated@@8 $generated@@293))))) (= $generated@@292 ($generated@@282 ($generated@@8 (+ $generated@@293 $generated@@290)))))
 :pattern ( ($generated@@83 $generated@@291 ($generated@@282 ($generated@@8 $generated@@293))))
))))
 :pattern ( ($generated@@83 ($generated@@281 $generated@@288 $generated@@289 $generated@@290 $generated@@291) $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@66) (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@260 ($generated@@282 $generated@@294) $generated@@295 $generated@@296) ($generated@@76 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@260 ($generated@@282 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@78 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@81 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@78 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@83 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@78 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@78 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@83 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@83 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@81 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@78 $generated@@340 $generated@@2)) (= ($generated@@163 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@83 $generated@@339 $generated@@341))) (<= ($generated ($generated@@83 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@83 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@163 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@141) ($generated@@236 $generated@@345 $generated@@134)) (and (= ($generated@@282 ($generated@@342 $generated@@2 $generated@@345)) $generated@@345) ($generated@@137 ($generated@@342 $generated@@2 $generated@@345) $generated@@134)))
 :pattern ( ($generated@@236 $generated@@345 $generated@@134))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@303 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@78 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@307 (type $generated@@353))))
(let (($generated@@355 ($generated@@306 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@305 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@304 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@325 (type $generated@@357))))
(let (($generated@@359 ($generated@@324 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@323 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@322 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@321 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@78 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@83 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@369) $generated@@66)) (= ($generated@@137 $generated@@368 ($generated@@162 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@141) (< 0 ($generated ($generated@@83 $generated@@368 $generated@@370)))) ($generated@@236 $generated@@370 $generated@@369))
 :pattern ( ($generated@@83 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@137 $generated@@368 ($generated@@162 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@372) $generated@@66)) (= (type $generated@@373) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@371 ($generated@@143 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@141) ($generated@@0 ($generated@@83 $generated@@371 $generated@@374))) ($generated@@260 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@83 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@76 $generated@@371 ($generated@@143 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@376) $generated@@66)) (= (type $generated@@377) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@141) ($generated@@0 ($generated@@83 $generated@@375 $generated@@378))) ($generated@@260 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@83 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@76 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@83 ($generated@@298 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@83 ($generated@@298 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@307 (type $generated@@384))))
(let (($generated@@386 ($generated@@306 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@78 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@305 $generated@@141 $generated@@141)) (= (type $generated@@388) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@387) ($generated@@156 ($generated@@342 $generated@@149 $generated@@388)))) (= ($generated@@83 ($generated@@382 $generated@@387) ($generated@@156 ($generated@@342 $generated@@149 $generated@@388))) ($generated@@157 ($generated@@342 $generated@@149 $generated@@388))))))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@325 (type $generated@@392))))
(let (($generated@@394 ($generated@@324 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@78 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@323 $generated@@141 $generated@@141)) (= (type $generated@@396) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@83 ($generated@@321 $generated@@395) ($generated@@156 ($generated@@342 $generated@@149 $generated@@396)))) (= ($generated@@83 ($generated@@390 $generated@@395) ($generated@@156 ($generated@@342 $generated@@149 $generated@@396))) ($generated@@157 ($generated@@342 $generated@@149 $generated@@396))))))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@306 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@305 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@83 ($generated@@350 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@83 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@397) $generated@@401))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@83 ($generated@@350 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@324 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@323 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@83 ($generated@@361 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@83 ($generated@@321 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@83 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@66)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@305 $generated@@141 $generated@@141)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) $generated@@66)) (= (type $generated@@413) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@410) $generated@@414))) (and ($generated@@260 ($generated@@83 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@260 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@76 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@66)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@323 $generated@@141 $generated@@141)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) $generated@@66)) (= (type $generated@@421) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@418) $generated@@422))) (and ($generated@@260 ($generated@@83 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@260 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@76 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@78 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@325 (type $generated@@425))))
(let (($generated@@427 ($generated@@324 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@323 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@322 $generated@@427 $generated@@426)) (= ($generated@@321 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@321 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@325 (type $generated@@428))))
(let (($generated@@430 ($generated@@324 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@323 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@322 $generated@@430 $generated@@429)) (= ($generated@@361 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@361 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@325 (type $generated@@431))))
(let (($generated@@433 ($generated@@324 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@323 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@322 $generated@@433 $generated@@432)) (= ($generated@@389 $generated@@431) ($generated@@423 $generated@@141))))))
 :pattern ( ($generated@@389 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@307 (type $generated@@434))))
(let (($generated@@436 ($generated@@306 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@305 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@304 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@141) (= (type $generated@@438) $generated@@141)) ($generated@@0 ($generated@@83 ($generated@@381 $generated@@434) ($generated@@282 ($generated@@235 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@325 (type $generated@@439))))
(let (($generated@@441 ($generated@@324 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@323 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@322 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@141) (= (type $generated@@443) $generated@@141)) ($generated@@0 ($generated@@83 ($generated@@389 $generated@@439) ($generated@@282 ($generated@@235 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@389 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@141) ($generated@@236 $generated@@444 $generated@@46)) (and (= ($generated@@282 ($generated@@342 $generated@@2 $generated@@444)) $generated@@444) ($generated@@137 ($generated@@342 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@141) ($generated@@236 $generated@@445 $generated@@47)) (and (= ($generated@@282 ($generated@@342 $generated@@3 $generated@@445)) $generated@@445) ($generated@@137 ($generated@@342 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@141) ($generated@@236 $generated@@446 $generated@@44)) (and (= ($generated@@282 ($generated@@342 $generated@@4 $generated@@446)) $generated@@446) ($generated@@137 ($generated@@342 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@141) ($generated@@236 $generated@@448 $generated@@45)) (and (= ($generated@@282 ($generated@@342 $generated@@447 $generated@@448)) $generated@@448) ($generated@@137 ($generated@@342 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@66) (= ($generated@@236 ($generated@@282 $generated@@449) $generated@@450) ($generated@@137 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@236 ($generated@@282 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@81 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@78 $generated@@452 $generated@@2)) (<= 0 ($generated@@297 $generated@@451))))
 :pattern ( ($generated@@297 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@275 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@274 $generated@@454)) (<= 0 ($generated@@273 $generated@@453))))
 :pattern ( ($generated@@273 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@407 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@407 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@407 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@407 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@74 ($generated@@407 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@74 ($generated@@415 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@141) (= (type $generated@@476) $generated@@141)) (= ($generated@@266 ($generated@@235 $generated@@475 $generated@@476)) $generated@@62))
 :pattern ( ($generated@@235 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@148 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@148 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@148 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@148 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@141) (= (type $generated@@486) $generated@@141)) (= ($generated@@156 ($generated@@235 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@235 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@141) (= (type $generated@@488) $generated@@141)) (= ($generated@@157 ($generated@@235 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@235 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@275 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@274 $generated@@141)) (= (type $generated@@496) $generated@@66)) (= (type $generated@@497) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@273 $generated@@495))) ($generated@@260 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@77 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@77 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@143 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@143 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@143 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@143 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@248 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@248 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@248 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@162 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@162 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@162 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@74 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@342 $generated@@518 ($generated@@282 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@282 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@305 $generated@@141 $generated@@141)) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) (= ($generated@@137 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@519) $generated@@522))) (and ($generated@@236 ($generated@@83 ($generated@@382 $generated@@519) $generated@@522) $generated@@521) ($generated@@236 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@519) $generated@@522))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@137 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@323 $generated@@141 $generated@@141)) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) (= ($generated@@137 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@523) $generated@@526))) (and ($generated@@236 ($generated@@83 ($generated@@390 $generated@@523) $generated@@526) $generated@@525) ($generated@@236 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@523) $generated@@526))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@137 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@141) (= (type $generated@@530) $generated@@141)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@235 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@235 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@141) (= (type $generated@@532) $generated@@141)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@235 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@235 $generated@@531 $generated@@532))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 $generated@@533) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@533 ($generated@@143 $generated@@134))))) (= ($generated@@140 $generated@@533) ($generated@@281 ($generated@@253 0) $generated@@533 1 $generated@@533)))
 :pattern ( ($generated@@140 $generated@@533))
))))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@141) (= (type $generated@@535) $generated@@66)) (= (type $generated@@536) $generated@@66)) ($generated@@236 $generated@@534 ($generated@@407 $generated@@535 $generated@@536))) (and (= ($generated@@282 ($generated@@342 ($generated@@305 $generated@@141 $generated@@141) $generated@@534)) $generated@@534) ($generated@@137 ($generated@@342 ($generated@@305 $generated@@141 $generated@@141) $generated@@534) ($generated@@407 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@534 ($generated@@407 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@141) (= (type $generated@@538) $generated@@66)) (= (type $generated@@539) $generated@@66)) ($generated@@236 $generated@@537 ($generated@@415 $generated@@538 $generated@@539))) (and (= ($generated@@282 ($generated@@342 ($generated@@323 $generated@@141 $generated@@141) $generated@@537)) $generated@@537) ($generated@@137 ($generated@@342 ($generated@@323 $generated@@141 $generated@@141) $generated@@537) ($generated@@415 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@415 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@66) (= (type $generated@@541) $generated@@66)) (= (type $generated@@542) $generated@@141)) ($generated@@236 $generated@@542 ($generated@@148 $generated@@540 $generated@@541))) (and (= ($generated@@282 ($generated@@342 $generated@@149 $generated@@542)) $generated@@542) ($generated@@137 ($generated@@342 $generated@@149 $generated@@542) ($generated@@148 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@236 $generated@@542 ($generated@@148 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@83 ($generated@@423 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@83 ($generated@@423 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@71)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@66) (= (type $generated@@548) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@547 $generated@@548)) $generated@@63) (= ($generated@@545 ($generated@@148 $generated@@547 $generated@@548)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@149) (= ($generated@@527 ($generated@@282 $generated@@549)) ($generated@@528 $generated@@549)))
 :pattern ( ($generated@@527 ($generated@@282 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@141) ($generated@@236 $generated@@550 ($generated@@77 0))) (and (= ($generated@@282 ($generated@@342 $generated@@2 $generated@@550)) $generated@@550) ($generated@@137 ($generated@@342 ($generated@@78 $generated@@141 $generated@@4) $generated@@550) ($generated@@77 0))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@77 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@141) (= (type $generated@@552) $generated@@66)) ($generated@@236 $generated@@551 ($generated@@143 $generated@@552))) (and (= ($generated@@282 ($generated@@342 ($generated@@78 $generated@@141 $generated@@4) $generated@@551)) $generated@@551) ($generated@@137 ($generated@@342 ($generated@@78 $generated@@141 $generated@@4) $generated@@551) ($generated@@143 $generated@@552))))
 :pattern ( ($generated@@236 $generated@@551 ($generated@@143 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@141) (= (type $generated@@554) $generated@@66)) ($generated@@236 $generated@@553 ($generated@@248 $generated@@554))) (and (= ($generated@@282 ($generated@@342 ($generated@@78 $generated@@141 $generated@@4) $generated@@553)) $generated@@553) ($generated@@137 ($generated@@342 ($generated@@78 $generated@@141 $generated@@4) $generated@@553) ($generated@@248 $generated@@554))))
 :pattern ( ($generated@@236 $generated@@553 ($generated@@248 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@141) (= (type $generated@@556) $generated@@66)) ($generated@@236 $generated@@555 ($generated@@162 $generated@@556))) (and (= ($generated@@282 ($generated@@342 ($generated@@78 $generated@@141 $generated@@2) $generated@@555)) $generated@@555) ($generated@@137 ($generated@@342 ($generated@@78 $generated@@141 $generated@@2) $generated@@555) ($generated@@162 $generated@@556))))
 :pattern ( ($generated@@236 $generated@@555 ($generated@@162 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@141) (= (type $generated@@558) $generated@@66)) ($generated@@236 $generated@@557 ($generated@@489 $generated@@558))) (and (= ($generated@@282 ($generated@@342 ($generated@@274 $generated@@141) $generated@@557)) $generated@@557) ($generated@@137 ($generated@@342 ($generated@@274 $generated@@141) $generated@@557) ($generated@@489 $generated@@558))))
 :pattern ( ($generated@@236 $generated@@557 ($generated@@489 $generated@@558)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@545 $generated@@134) $generated@@64))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@560) $generated@@66)) (= (type $generated@@561) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@559 ($generated@@162 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@141) (< 0 ($generated ($generated@@83 $generated@@559 $generated@@562)))) ($generated@@260 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@83 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@76 $generated@@559 ($generated@@162 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@149) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@259 $generated@@565) (and ($generated@@147 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@66) ($generated@@76 $generated@@563 ($generated@@148 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@76 $generated@@563 ($generated@@148 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@260 ($generated@@156 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@149) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@259 $generated@@569) (and ($generated@@147 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@66) ($generated@@76 $generated@@567 ($generated@@148 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@76 $generated@@567 ($generated@@148 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@260 ($generated@@157 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@567) $generated@@568 $generated@@569))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 ($generated@@255 $generated@@571)) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@571 ($generated@@143 $generated@@134))))) (= ($generated@@140 ($generated@@255 $generated@@571)) ($generated@@281 ($generated@@253 0) ($generated@@255 $generated@@571) 1 $generated@@571)))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@255 $generated@@571)))
))))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@141) (= (type $generated@@573) $generated@@141)) (= ($generated@@235 ($generated@@255 $generated@@572) ($generated@@255 $generated@@573)) ($generated@@255 ($generated@@235 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@235 ($generated@@255 $generated@@572) ($generated@@255 $generated@@573)))
)))
(assert (forall (($generated@@574 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@253 $generated@@574))) ($generated@@255 ($generated@@282 ($generated@@8 $generated@@574))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@253 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@282 ($generated@@255 $generated@@575)) ($generated@@255 ($generated@@282 $generated@@575)))
 :pattern ( ($generated@@282 ($generated@@255 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@275 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@274 $generated@@577)) (= ($generated@@273 $generated@@576) 0)) (= $generated@@576 ($generated@@272 $generated@@577))))
 :pattern ( ($generated@@273 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@78 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@297 ($generated@@84 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@297 $generated@@578) ($generated ($generated@@83 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@297 ($generated@@84 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@2)) ($generated@@76 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@585) $generated@@3)) ($generated@@76 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@76 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@4)) ($generated@@76 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@447)) ($generated@@76 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@141)) ($generated@@76 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@274 $generated@@141)) (= (type $generated@@593) $generated@@66)) (= ($generated@@137 $generated@@592 ($generated@@489 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@273 $generated@@592))) ($generated@@236 ($generated@@490 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@490 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@137 $generated@@592 ($generated@@489 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@274 $generated@@141)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@273 $generated@@596))) (< ($generated@@528 ($generated@@342 $generated@@149 ($generated@@490 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@528 ($generated@@342 $generated@@149 ($generated@@490 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@305 $generated@@141 $generated@@141)) (= (type $generated@@599) $generated@@66)) (= (type $generated@@600) $generated@@66)) ($generated@@137 $generated@@598 ($generated@@407 $generated@@599 $generated@@600))) (and (and ($generated@@137 ($generated@@303 $generated@@598) ($generated@@143 $generated@@599)) ($generated@@137 ($generated@@350 $generated@@598) ($generated@@143 $generated@@600))) ($generated@@137 ($generated@@381 $generated@@598) ($generated@@143 ($generated@@148 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@137 $generated@@598 ($generated@@407 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@323 $generated@@141 $generated@@141)) (= (type $generated@@602) $generated@@66)) (= (type $generated@@603) $generated@@66)) ($generated@@137 $generated@@601 ($generated@@415 $generated@@602 $generated@@603))) (and (and ($generated@@137 ($generated@@321 $generated@@601) ($generated@@248 $generated@@602)) ($generated@@137 ($generated@@361 $generated@@601) ($generated@@248 $generated@@603))) ($generated@@137 ($generated@@389 $generated@@601) ($generated@@248 ($generated@@148 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@137 $generated@@601 ($generated@@415 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@137 $generated@@604 $generated@@46))
 :pattern ( ($generated@@137 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@137 $generated@@605 $generated@@47))
 :pattern ( ($generated@@137 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@137 $generated@@606 $generated@@44))
 :pattern ( ($generated@@137 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@447) ($generated@@137 $generated@@607 $generated@@45))
 :pattern ( ($generated@@137 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@141) ($generated@@137 $generated@@608 $generated@@48))
 :pattern ( ($generated@@137 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@609) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@612) ($generated@@169 $generated@@79 $generated@@4))) (= (type $generated@@613) $generated@@79)) (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@615) ($generated@@169 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@617 true))
(let (($generated@@618  (=> (and (not ($generated@@0 ($generated@@83 $generated@@609 ($generated@@282 ($generated@@8 $generated@@610))))) (= (ControlFlow 0 6) 2)) $generated@@617)))
(let (($generated@@619  (=> (and ($generated@@0 ($generated@@83 $generated@@609 ($generated@@282 ($generated@@8 $generated@@610)))) (= $generated@@611 (+ $generated@@610 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@253 0) $generated@@611)) (=> (<= ($generated@@253 0) $generated@@611) (=> (= (ControlFlow 0 4) 2) $generated@@617))))))
(let (($generated@@620  (=> (<= ($generated@@253 0) $generated@@610) (and (=> (= (ControlFlow 0 7) 4) $generated@@619) (=> (= (ControlFlow 0 7) 6) $generated@@618)))))
(let (($generated@@621  (=> (and (< $generated@@610 ($generated@@253 0)) (= (ControlFlow 0 3) 2)) $generated@@617)))
(let (($generated@@622  (=> (= $generated@@612 ($generated@@223 $generated@@613 $generated@@614 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 7) $generated@@620) (=> (= (ControlFlow 0 8) 3) $generated@@621)))))
(let (($generated@@623 true))
(let (($generated@@624  (=> (= $generated@@615 ($generated@@168 $generated@@613 $generated@@614 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 1) $generated@@623) (=> (= (ControlFlow 0 9) 8) $generated@@622)))))
(let (($generated@@625  (=> (and (and (and ($generated@@259 $generated@@614) ($generated@@616 $generated@@614)) ($generated@@137 $generated@@609 ($generated@@143 $generated@@134))) (and (= 1 $generated@@139) (= (ControlFlow 0 10) 9))) $generated@@624)))
$generated@@625))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@269 (Int T@U Int T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@T) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U Int) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@140 $generated@@144)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@140 $generated@@144))
))) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@66)
 :pattern ( ($generated@@143 $generated@@145))
))))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 $generated@@146) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@146 ($generated@@143 $generated@@134))))) ($generated@@137 ($generated@@140 $generated@@146) ($generated@@143 $generated@@134)))
 :pattern ( ($generated@@140 $generated@@146))
))))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@137 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@137 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@141)
 :pattern ( ($generated@@156 $generated@@158))
)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@141)
 :pattern ( ($generated@@157 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@149) (= (type $generated@@161) $generated@@149)) true) (= ($generated@@155 $generated@@160 $generated@@161)  (and (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)) (= ($generated@@157 $generated@@160) ($generated@@157 $generated@@161)))))
 :pattern ( ($generated@@155 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@166) $generated@@66)) ($generated@@137 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@137 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@79 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@69 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@79) (= (type $generated@@217) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@218) ($generated@@68 $generated@@4))) (= (type $generated@@220) $generated@@79)) (= (type $generated@@221) ($generated@@68 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@149)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@66) (= (type $generated@@228) $generated@@66)) (= (type $generated@@229) $generated@@141)) (= (type $generated@@230) $generated@@141)) (= ($generated@@137 ($generated@@223 $generated@@229 $generated@@230) ($generated@@148 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@137 ($generated@@223 $generated@@229 $generated@@230) ($generated@@148 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@149) (= (type $generated@@232) $generated@@149)) (= ($generated@@155 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@155 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@143 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@141) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@224 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@143 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@66)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@239) $generated@@66)) (= ($generated@@137 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@141) ($generated@@0 ($generated@@83 $generated@@238 $generated@@240))) ($generated@@224 $generated@@240 $generated@@239))
 :pattern ( ($generated@@83 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@137 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@66) (= (type $generated@@250) $generated@@66)) (= (type $generated@@251) $generated@@141)) (= (type $generated@@252) $generated@@141)) (= (type $generated@@253) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@247 $generated@@253)) (= ($generated@@76 ($generated@@223 $generated@@251 $generated@@252) ($generated@@148 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@76 ($generated@@223 $generated@@251 $generated@@252) ($generated@@148 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@149) (= ($generated@@147 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@149) ($generated@@147 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@141) (= (type $generated@@259) $generated@@141)) (= $generated@@257 ($generated@@223 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@147 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@2) (= ($generated@@137 $generated@@268 $generated@@134) (<= ($generated@@241 0) ($generated $generated@@268))))
 :pattern ( ($generated@@137 $generated@@268 $generated@@134))
)))
(assert  (and (forall (($generated@@271 Int) ($generated@@272 T@U) ($generated@@273 Int) ($generated@@274 T@U) ) (! (= (type ($generated@@269 $generated@@271 $generated@@272 $generated@@273 $generated@@274)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@269 $generated@@271 $generated@@272 $generated@@273 $generated@@274))
)) (forall (($generated@@275 T@U) ) (! (= (type ($generated@@270 $generated@@275)) $generated@@141)
 :pattern ( ($generated@@270 $generated@@275))
))))
(assert (forall (($generated@@276 Int) ($generated@@277 T@U) ($generated@@278 Int) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@277) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@279) ($generated@@78 $generated@@141 $generated@@4))) (= (type $generated@@280) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@269 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@280)) (exists (($generated@@281 Int) ) (!  (and (and (<= $generated@@276 $generated@@281) ($generated@@0 ($generated@@83 $generated@@277 ($generated@@270 ($generated@@8 $generated@@281))))) (= $generated@@280 ($generated@@270 ($generated@@8 (+ $generated@@281 $generated@@278)))))
 :pattern ( ($generated@@83 $generated@@279 ($generated@@270 ($generated@@8 $generated@@281))))
))))
 :pattern ( ($generated@@83 ($generated@@269 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@66) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@248 ($generated@@270 $generated@@282) $generated@@283 $generated@@284) ($generated@@76 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@248 ($generated@@270 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@78 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@81 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@78 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@83 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@78 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@81 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@78 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@83 $generated@@327 $generated@@329))) (<= ($generated ($generated@@83 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@83 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@141) ($generated@@224 $generated@@333 $generated@@134)) (and (= ($generated@@270 ($generated@@330 $generated@@2 $generated@@333)) $generated@@333) ($generated@@137 ($generated@@330 $generated@@2 $generated@@333) $generated@@134)))
 :pattern ( ($generated@@224 $generated@@333 $generated@@134))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@295 (type $generated@@334))))
(let (($generated@@336 ($generated@@294 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@293 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@292 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@291 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@295 (type $generated@@341))))
(let (($generated@@343 ($generated@@294 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@293 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@292 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@313 (type $generated@@345))))
(let (($generated@@347 ($generated@@312 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@311 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@310 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@309 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@78 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@357) $generated@@66)) (= ($generated@@137 $generated@@356 ($generated@@162 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@141) (< 0 ($generated ($generated@@83 $generated@@356 $generated@@358)))) ($generated@@224 $generated@@358 $generated@@357))
 :pattern ( ($generated@@83 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@137 $generated@@356 ($generated@@162 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@143 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@141) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@248 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@143 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@364) $generated@@66)) (= (type $generated@@365) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@363 ($generated@@236 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@141) ($generated@@0 ($generated@@83 $generated@@363 $generated@@366))) ($generated@@248 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@83 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@76 $generated@@363 ($generated@@236 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(= ($generated ($generated@@83 ($generated@@286 $generated@@368) $generated@@367)) 0))
 :pattern ( (let (($generated@@368 (type $generated@@367)))
($generated@@83 ($generated@@286 $generated@@368) $generated@@367)))
)))
(assert  (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@369 $generated@@371))
)) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@295 (type $generated@@372))))
(let (($generated@@374 ($generated@@294 (type $generated@@372))))
(= (type ($generated@@370 $generated@@372)) ($generated@@78 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@293 $generated@@141 $generated@@141)) (= (type $generated@@376) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@369 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@375) ($generated@@156 ($generated@@330 $generated@@149 $generated@@376)))) (= ($generated@@83 ($generated@@370 $generated@@375) ($generated@@156 ($generated@@330 $generated@@149 $generated@@376))) ($generated@@157 ($generated@@330 $generated@@149 $generated@@376))))))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@375) $generated@@376))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@313 (type $generated@@380))))
(let (($generated@@382 ($generated@@312 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@78 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@311 $generated@@141 $generated@@141)) (= (type $generated@@384) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@383) ($generated@@156 ($generated@@330 $generated@@149 $generated@@384)))) (= ($generated@@83 ($generated@@378 $generated@@383) ($generated@@156 ($generated@@330 $generated@@149 $generated@@384))) ($generated@@157 ($generated@@330 $generated@@149 $generated@@384))))))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@294 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@293 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@83 ($generated@@338 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@83 ($generated@@370 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@385) $generated@@389))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@83 ($generated@@338 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@312 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@311 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@83 ($generated@@349 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@83 ($generated@@378 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@390) $generated@@394))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@66)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@293 $generated@@141 $generated@@141)) (= (type $generated@@399) $generated@@66)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@398) $generated@@402))) (and ($generated@@248 ($generated@@83 ($generated@@370 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@248 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@398) $generated@@402))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@76 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@66)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@311 $generated@@141 $generated@@141)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) $generated@@66)) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@406) $generated@@410))) (and ($generated@@248 ($generated@@83 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@248 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@76 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@T) ) (! (= (type ($generated@@411 $generated@@412)) ($generated@@78 $generated@@412 $generated@@4))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@313 (type $generated@@413))))
(let (($generated@@415 ($generated@@312 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@311 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@310 $generated@@415 $generated@@414)) (= ($generated@@309 $generated@@413) ($generated@@411 $generated@@415))))))
 :pattern ( ($generated@@309 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@313 (type $generated@@416))))
(let (($generated@@418 ($generated@@312 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@311 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@310 $generated@@418 $generated@@417)) (= ($generated@@349 $generated@@416) ($generated@@411 $generated@@417))))))
 :pattern ( ($generated@@349 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@313 (type $generated@@419))))
(let (($generated@@421 ($generated@@312 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@311 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@310 $generated@@421 $generated@@420)) (= ($generated@@377 $generated@@419) ($generated@@411 $generated@@141))))))
 :pattern ( ($generated@@377 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@295 (type $generated@@422))))
(let (($generated@@424 ($generated@@294 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@293 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@292 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@141) (= (type $generated@@426) $generated@@141)) ($generated@@0 ($generated@@83 ($generated@@369 $generated@@422) ($generated@@270 ($generated@@223 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@369 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@313 (type $generated@@427))))
(let (($generated@@429 ($generated@@312 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@311 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@310 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@141) (= (type $generated@@431) $generated@@141)) ($generated@@0 ($generated@@83 ($generated@@377 $generated@@427) ($generated@@270 ($generated@@223 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@377 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@141) ($generated@@224 $generated@@432 $generated@@46)) (and (= ($generated@@270 ($generated@@330 $generated@@2 $generated@@432)) $generated@@432) ($generated@@137 ($generated@@330 $generated@@2 $generated@@432) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@432 $generated@@46))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@141) ($generated@@224 $generated@@433 $generated@@47)) (and (= ($generated@@270 ($generated@@330 $generated@@3 $generated@@433)) $generated@@433) ($generated@@137 ($generated@@330 $generated@@3 $generated@@433) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@433 $generated@@47))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@141) ($generated@@224 $generated@@434 $generated@@44)) (and (= ($generated@@270 ($generated@@330 $generated@@4 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@330 $generated@@4 $generated@@434) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@434 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@435) 20))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@141) ($generated@@224 $generated@@436 $generated@@45)) (and (= ($generated@@270 ($generated@@330 $generated@@435 $generated@@436)) $generated@@436) ($generated@@137 ($generated@@330 $generated@@435 $generated@@436) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@436 $generated@@45))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@66) (= ($generated@@224 ($generated@@270 $generated@@437) $generated@@438) ($generated@@137 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@224 ($generated@@270 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@81 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@78 $generated@@440 $generated@@2)) (<= 0 ($generated@@285 $generated@@439))))
 :pattern ( ($generated@@285 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@263 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@262 $generated@@442)) (<= 0 ($generated@@261 $generated@@441))))
 :pattern ( ($generated@@261 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@66)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@443 ($generated@@395 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@395 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@395 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@395 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@66) (= (type $generated@@452) $generated@@66)) (= ($generated@@74 ($generated@@395 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@395 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@403 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@403 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@403 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@74 ($generated@@403 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@403 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@141) (= (type $generated@@464) $generated@@141)) (= ($generated@@254 ($generated@@223 $generated@@463 $generated@@464)) $generated@@62))
 :pattern ( ($generated@@223 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@148 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@148 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@148 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@148 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@141) (= (type $generated@@474) $generated@@141)) (= ($generated@@156 ($generated@@223 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@223 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@141) (= (type $generated@@476) $generated@@141)) (= ($generated@@157 ($generated@@223 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@223 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ($generated@@481 Int) ) (! (let (($generated@@482 ($generated@@263 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480 $generated@@481)) $generated@@482))
 :pattern ( ($generated@@478 $generated@@480 $generated@@481))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@262 $generated@@141)) (= (type $generated@@484) $generated@@66)) (= (type $generated@@485) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@483 ($generated@@477 $generated@@484) $generated@@485) (forall (($generated@@486 Int) ) (!  (=> (and (<= 0 $generated@@486) (< $generated@@486 ($generated@@261 $generated@@483))) ($generated@@248 ($generated@@478 $generated@@483 $generated@@486) $generated@@484 $generated@@485))
 :pattern ( ($generated@@478 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@76 $generated@@483 ($generated@@477 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@77 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@77 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@489 ($generated@@143 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@143 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@74 ($generated@@143 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@143 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@493 ($generated@@236 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@236 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@74 ($generated@@236 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@162 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@162 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@74 ($generated@@162 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@477 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@477 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@477 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@477 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@330 $generated@@506 ($generated@@270 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@270 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@293 $generated@@141 $generated@@141)) (= (type $generated@@508) $generated@@66)) (= (type $generated@@509) $generated@@66)) (= ($generated@@137 $generated@@507 ($generated@@395 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@507) $generated@@510))) (and ($generated@@224 ($generated@@83 ($generated@@370 $generated@@507) $generated@@510) $generated@@509) ($generated@@224 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@507) $generated@@510))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@137 $generated@@507 ($generated@@395 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@311 $generated@@141 $generated@@141)) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) $generated@@66)) (= ($generated@@137 $generated@@511 ($generated@@403 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@511) $generated@@514))) (and ($generated@@224 ($generated@@83 ($generated@@378 $generated@@511) $generated@@514) $generated@@513) ($generated@@224 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@511) $generated@@514))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@137 $generated@@511 ($generated@@403 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@141) (= (type $generated@@518) $generated@@141)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@223 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@223 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@141) (= (type $generated@@520) $generated@@141)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@223 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@223 $generated@@519 $generated@@520))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 $generated@@521) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@521 ($generated@@143 $generated@@134))))) (= ($generated@@140 $generated@@521) ($generated@@269 ($generated@@241 0) $generated@@521 1 $generated@@521)))
 :pattern ( ($generated@@140 $generated@@521))
))))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@141) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@224 $generated@@522 ($generated@@395 $generated@@523 $generated@@524))) (and (= ($generated@@270 ($generated@@330 ($generated@@293 $generated@@141 $generated@@141) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@330 ($generated@@293 $generated@@141 $generated@@141) $generated@@522) ($generated@@395 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@224 $generated@@522 ($generated@@395 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@141) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@224 $generated@@525 ($generated@@403 $generated@@526 $generated@@527))) (and (= ($generated@@270 ($generated@@330 ($generated@@311 $generated@@141 $generated@@141) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@330 ($generated@@311 $generated@@141 $generated@@141) $generated@@525) ($generated@@403 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@224 $generated@@525 ($generated@@403 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@141)) ($generated@@224 $generated@@530 ($generated@@148 $generated@@528 $generated@@529))) (and (= ($generated@@270 ($generated@@330 $generated@@149 $generated@@530)) $generated@@530) ($generated@@137 ($generated@@330 $generated@@149 $generated@@530) ($generated@@148 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@224 $generated@@530 ($generated@@148 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@411 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@411 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@535 $generated@@536)) $generated@@63) (= ($generated@@533 ($generated@@148 $generated@@535 $generated@@536)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@149) (= ($generated@@515 ($generated@@270 $generated@@537)) ($generated@@516 $generated@@537)))
 :pattern ( ($generated@@515 ($generated@@270 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@141) ($generated@@224 $generated@@538 ($generated@@77 0))) (and (= ($generated@@270 ($generated@@330 $generated@@2 $generated@@538)) $generated@@538) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@141 $generated@@4) $generated@@538) ($generated@@77 0))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@77 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@141) (= (type $generated@@540) $generated@@66)) ($generated@@224 $generated@@539 ($generated@@143 $generated@@540))) (and (= ($generated@@270 ($generated@@330 ($generated@@78 $generated@@141 $generated@@4) $generated@@539)) $generated@@539) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@141 $generated@@4) $generated@@539) ($generated@@143 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@143 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@141) (= (type $generated@@542) $generated@@66)) ($generated@@224 $generated@@541 ($generated@@236 $generated@@542))) (and (= ($generated@@270 ($generated@@330 ($generated@@78 $generated@@141 $generated@@4) $generated@@541)) $generated@@541) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@141 $generated@@4) $generated@@541) ($generated@@236 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@236 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@141) (= (type $generated@@544) $generated@@66)) ($generated@@224 $generated@@543 ($generated@@162 $generated@@544))) (and (= ($generated@@270 ($generated@@330 ($generated@@78 $generated@@141 $generated@@2) $generated@@543)) $generated@@543) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@141 $generated@@2) $generated@@543) ($generated@@162 $generated@@544))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@162 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@141) (= (type $generated@@546) $generated@@66)) ($generated@@224 $generated@@545 ($generated@@477 $generated@@546))) (and (= ($generated@@270 ($generated@@330 ($generated@@262 $generated@@141) $generated@@545)) $generated@@545) ($generated@@137 ($generated@@330 ($generated@@262 $generated@@141) $generated@@545) ($generated@@477 $generated@@546))))
 :pattern ( ($generated@@224 $generated@@545 ($generated@@477 $generated@@546)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@533 $generated@@134) $generated@@64))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@547 ($generated@@162 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@141) (< 0 ($generated ($generated@@83 $generated@@547 $generated@@550)))) ($generated@@248 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@83 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@76 $generated@@547 ($generated@@162 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@149) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@247 $generated@@553) (and ($generated@@147 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@66) ($generated@@76 $generated@@551 ($generated@@148 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@76 $generated@@551 ($generated@@148 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@248 ($generated@@156 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@248 ($generated@@156 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@149) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@247 $generated@@557) (and ($generated@@147 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@66) ($generated@@76 $generated@@555 ($generated@@148 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@76 $generated@@555 ($generated@@148 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@248 ($generated@@157 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@248 ($generated@@157 $generated@@555) $generated@@556 $generated@@557))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 ($generated@@243 $generated@@559)) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@559 ($generated@@143 $generated@@134))))) (= ($generated@@140 ($generated@@243 $generated@@559)) ($generated@@269 ($generated@@241 0) ($generated@@243 $generated@@559) 1 $generated@@559)))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@243 $generated@@559)))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@141) (= (type $generated@@561) $generated@@141)) (= ($generated@@223 ($generated@@243 $generated@@560) ($generated@@243 $generated@@561)) ($generated@@243 ($generated@@223 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@223 ($generated@@243 $generated@@560) ($generated@@243 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@241 $generated@@562))) ($generated@@243 ($generated@@270 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@241 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@270 ($generated@@243 $generated@@563)) ($generated@@243 ($generated@@270 $generated@@563)))
 :pattern ( ($generated@@270 ($generated@@243 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@263 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@262 $generated@@565)) (= ($generated@@261 $generated@@564) 0)) (= $generated@@564 ($generated@@260 $generated@@565))))
 :pattern ( ($generated@@261 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@78 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@285 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@285 $generated@@566) ($generated ($generated@@83 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@285 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@2)) ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@3)) ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@4)) ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@435)) ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@141)) ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@262 $generated@@141)) (= (type $generated@@581) $generated@@66)) (= ($generated@@137 $generated@@580 ($generated@@477 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@261 $generated@@580))) ($generated@@224 ($generated@@478 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@478 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@137 $generated@@580 ($generated@@477 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@262 $generated@@141)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@261 $generated@@584))) (< ($generated@@516 ($generated@@330 $generated@@149 ($generated@@478 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@516 ($generated@@330 $generated@@149 ($generated@@478 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@293 $generated@@141 $generated@@141)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@137 $generated@@586 ($generated@@395 $generated@@587 $generated@@588))) (and (and ($generated@@137 ($generated@@291 $generated@@586) ($generated@@143 $generated@@587)) ($generated@@137 ($generated@@338 $generated@@586) ($generated@@143 $generated@@588))) ($generated@@137 ($generated@@369 $generated@@586) ($generated@@143 ($generated@@148 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@137 $generated@@586 ($generated@@395 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@311 $generated@@141 $generated@@141)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) ($generated@@137 $generated@@589 ($generated@@403 $generated@@590 $generated@@591))) (and (and ($generated@@137 ($generated@@309 $generated@@589) ($generated@@236 $generated@@590)) ($generated@@137 ($generated@@349 $generated@@589) ($generated@@236 $generated@@591))) ($generated@@137 ($generated@@377 $generated@@589) ($generated@@236 ($generated@@148 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@137 $generated@@589 ($generated@@403 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@137 $generated@@592 $generated@@46))
 :pattern ( ($generated@@137 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@137 $generated@@593 $generated@@47))
 :pattern ( ($generated@@137 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@137 $generated@@594 $generated@@44))
 :pattern ( ($generated@@137 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@435) ($generated@@137 $generated@@595 $generated@@45))
 :pattern ( ($generated@@137 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@141) ($generated@@137 $generated@@596 $generated@@48))
 :pattern ( ($generated@@137 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@597) ($generated@@169 $generated@@79 $generated@@4)) (= (type $generated@@598) $generated@@79)) (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@600) ($generated@@78 $generated@@141 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@602  (=> (and (= $generated@@597 ($generated@@168 $generated@@598 $generated@@599 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@603 Int) ) (!  (=> true (= ($generated@@0 ($generated@@83 $generated@@600 ($generated@@270 ($generated@@8 $generated@@603)))) ($generated@@0 ($generated@@83 ($generated@@140 $generated@@600) ($generated@@270 ($generated@@8 (+ $generated@@603 1)))))))
 :pattern ( ($generated@@83 $generated@@600 ($generated@@270 ($generated@@8 $generated@@603))))
)))))
(let (($generated@@604  (=> (and ($generated@@247 $generated@@599) ($generated@@601 $generated@@599)) (=> (and (and ($generated@@137 $generated@@600 ($generated@@143 $generated@@134)) ($generated@@76 $generated@@600 ($generated@@143 $generated@@134) $generated@@599)) (and (= 2 $generated@@139) (= (ControlFlow 0 3) 2))) $generated@@602))))
$generated@@604)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U Int Int T@U Int) T@U)
(declare-fun $generated@@269 () T@T)
(declare-fun $generated@@270 (T@T T@U) T@U)
(declare-fun $generated@@271 (T@U Int Int) Bool)
(declare-fun $generated@@286 (Int T@U Int T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@307 (T@U) Int)
(declare-fun $generated@@308 (T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@349 (T@U T@U) Bool)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@383 (Int) T@U)
(declare-fun $generated@@384 (Int) Bool)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 (Int Int) Bool)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@407 (Int Int) Int)
(declare-fun $generated@@408 (Int Int) Int)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@T) T@U)
(declare-fun $generated@@501 () T@T)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@547 (T@U Int) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@606 (T@T) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@666 (T@U) T@U)
(declare-fun $generated@@671 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@140 $generated@@144)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@140 $generated@@144))
))) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@66)
 :pattern ( ($generated@@143 $generated@@145))
))))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 $generated@@146) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@146 ($generated@@143 $generated@@134))))) ($generated@@137 ($generated@@140 $generated@@146) ($generated@@143 $generated@@134)))
 :pattern ( ($generated@@140 $generated@@146))
))))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@137 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@137 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@141)
 :pattern ( ($generated@@156 $generated@@158))
)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@141)
 :pattern ( ($generated@@157 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@149) (= (type $generated@@161) $generated@@149)) true) (= ($generated@@155 $generated@@160 $generated@@161)  (and (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)) (= ($generated@@157 $generated@@160) ($generated@@157 $generated@@161)))))
 :pattern ( ($generated@@155 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@166) $generated@@66)) ($generated@@137 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@137 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@79 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@69 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@79) (= (type $generated@@217) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@218) ($generated@@68 $generated@@4))) (= (type $generated@@220) $generated@@79)) (= (type $generated@@221) ($generated@@68 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@149)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@66) (= (type $generated@@228) $generated@@66)) (= (type $generated@@229) $generated@@141)) (= (type $generated@@230) $generated@@141)) (= ($generated@@137 ($generated@@223 $generated@@229 $generated@@230) ($generated@@148 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@137 ($generated@@223 $generated@@229 $generated@@230) ($generated@@148 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@149) (= (type $generated@@232) $generated@@149)) (= ($generated@@155 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@155 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@143 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@141) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@224 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@143 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@66)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@239) $generated@@66)) (= ($generated@@137 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@141) ($generated@@0 ($generated@@83 $generated@@238 $generated@@240))) ($generated@@224 $generated@@240 $generated@@239))
 :pattern ( ($generated@@83 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@137 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@66) (= (type $generated@@250) $generated@@66)) (= (type $generated@@251) $generated@@141)) (= (type $generated@@252) $generated@@141)) (= (type $generated@@253) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@247 $generated@@253)) (= ($generated@@76 ($generated@@223 $generated@@251 $generated@@252) ($generated@@148 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@76 ($generated@@223 $generated@@251 $generated@@252) ($generated@@148 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@149) (= ($generated@@147 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@149) ($generated@@147 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@141) (= (type $generated@@259) $generated@@141)) (= $generated@@257 ($generated@@223 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@147 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert  (and (and (= ($generated@@1 $generated@@269) 18) (forall (($generated@@272 T@U) ($generated@@273 Int) ($generated@@274 Int) ($generated@@275 T@U) ($generated@@276 Int) ) (! (= (type ($generated@@268 $generated@@272 $generated@@273 $generated@@274 $generated@@275 $generated@@276)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@268 $generated@@272 $generated@@273 $generated@@274 $generated@@275 $generated@@276))
))) (forall (($generated@@277 T@T) ($generated@@278 T@U) ) (! (= (type ($generated@@270 $generated@@277 $generated@@278)) $generated@@277)
 :pattern ( ($generated@@270 $generated@@277 $generated@@278))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 Int) ($generated@@281 Int) ($generated@@282 T@U) ($generated@@283 Int) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@66) (= (type $generated@@282) $generated@@269)) (= (type $generated@@284) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@268 $generated@@279 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@284))  (and ($generated@@224 $generated@@284 $generated@@279) (and (and (<= $generated@@280 ($generated ($generated@@270 $generated@@2 $generated@@284))) (< ($generated ($generated@@270 $generated@@2 $generated@@284)) $generated@@281)) ($generated@@271 $generated@@282 ($generated ($generated@@270 $generated@@2 $generated@@284)) $generated@@283)))))
 :pattern ( ($generated@@83 ($generated@@268 $generated@@279 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@2) (= ($generated@@137 $generated@@285 $generated@@134) (<= ($generated@@241 0) ($generated $generated@@285))))
 :pattern ( ($generated@@137 $generated@@285 $generated@@134))
)))
(assert  (and (forall (($generated@@288 Int) ($generated@@289 T@U) ($generated@@290 Int) ($generated@@291 T@U) ) (! (= (type ($generated@@286 $generated@@288 $generated@@289 $generated@@290 $generated@@291)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@286 $generated@@288 $generated@@289 $generated@@290 $generated@@291))
)) (forall (($generated@@292 T@U) ) (! (= (type ($generated@@287 $generated@@292)) $generated@@141)
 :pattern ( ($generated@@287 $generated@@292))
))))
(assert (forall (($generated@@293 Int) ($generated@@294 T@U) ($generated@@295 Int) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (= (type $generated@@294) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@296) ($generated@@78 $generated@@141 $generated@@4))) (= (type $generated@@297) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@286 $generated@@293 $generated@@294 $generated@@295 $generated@@296) $generated@@297)) (exists (($generated@@298 Int) ) (!  (and (and (<= $generated@@293 $generated@@298) ($generated@@0 ($generated@@83 $generated@@294 ($generated@@287 ($generated@@8 $generated@@298))))) (= $generated@@297 ($generated@@287 ($generated@@8 (+ $generated@@298 $generated@@295)))))
 :pattern ( ($generated@@83 $generated@@296 ($generated@@287 ($generated@@8 $generated@@298))))
))))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@293 $generated@@294 $generated@@295 $generated@@296) $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@269)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 Int) ($generated@@303 Int) ) (!  (=> (= (type $generated@@301) $generated@@269) (= ($generated@@271 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@271 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@271 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@66) (= (type $generated@@306) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@248 ($generated@@287 $generated@@304) $generated@@305 $generated@@306) ($generated@@76 $generated@@304 $generated@@305 $generated@@306)))
 :pattern ( ($generated@@248 ($generated@@287 $generated@@304) $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@309 T@T) ) (! (= (type ($generated@@308 $generated@@309)) ($generated@@78 $generated@@309 $generated@@2))
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@81 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@78 $generated@@311 $generated@@2)) (and (= (= ($generated@@307 $generated@@310) 0) (= $generated@@310 ($generated@@308 $generated@@311))) (=> (not (= ($generated@@307 $generated@@310) 0)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@311) (< 0 ($generated ($generated@@83 $generated@@310 $generated@@312))))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@78 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@83 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@83 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 20)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@78 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@83 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@83 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@81 (type $generated@@350))))
 (=> (and (= (type $generated@@350) ($generated@@78 $generated@@352 $generated@@4)) (= (type $generated@@351) ($generated@@78 $generated@@352 $generated@@4))) (= ($generated@@349 $generated@@350 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (= ($generated@@0 ($generated@@83 $generated@@350 $generated@@353)) ($generated@@0 ($generated@@83 $generated@@351 $generated@@353))))
 :pattern ( ($generated@@83 $generated@@350 $generated@@353))
 :pattern ( ($generated@@83 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@81 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@78 $generated@@355 $generated@@2)) (= ($generated@@163 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@83 $generated@@354 $generated@@356))) (<= ($generated ($generated@@83 $generated@@354 $generated@@356)) ($generated@@307 $generated@@354))))
 :pattern ( ($generated@@83 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@163 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@141) ($generated@@224 $generated@@357 $generated@@134)) (and (= ($generated@@287 ($generated@@270 $generated@@2 $generated@@357)) $generated@@357) ($generated@@137 ($generated@@270 $generated@@2 $generated@@357) $generated@@134)))
 :pattern ( ($generated@@224 $generated@@357 $generated@@134))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@317 (type $generated@@358))))
(let (($generated@@360 ($generated@@316 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@315 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@314 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@313 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@317 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@78 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@317 (type $generated@@365))))
(let (($generated@@367 ($generated@@316 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@315 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@314 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@83 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@335 (type $generated@@369))))
(let (($generated@@371 ($generated@@334 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@333 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@332 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@83 ($generated@@331 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@331 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@335 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@78 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@335 (type $generated@@376))))
(let (($generated@@378 ($generated@@334 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@333 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@332 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@381) $generated@@66)) (= ($generated@@137 $generated@@380 ($generated@@162 $generated@@381)) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@141) (< 0 ($generated ($generated@@83 $generated@@380 $generated@@382)))) ($generated@@224 $generated@@382 $generated@@381))
 :pattern ( ($generated@@83 $generated@@380 $generated@@382))
))))
 :pattern ( ($generated@@137 $generated@@380 ($generated@@162 $generated@@381)))
)))
(assert (forall (($generated@@385 Int) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@386 Int) ) (!  (=> (or ($generated@@384 $generated@@386) (and (not (= 2 $generated@@139)) (<= ($generated@@241 0) $generated@@386))) ($generated@@137 ($generated@@383 $generated@@386) ($generated@@143 $generated@@134)))
 :pattern ( ($generated@@383 $generated@@386))
))))
(assert (= (type $generated@@387) $generated@@269))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@389 Int) ) (!  (=> (or ($generated@@384 $generated@@389) (and (not (= 2 $generated@@139)) (<= ($generated@@241 0) $generated@@389))) (and (forall (($generated@@390 Int) ) (!  (=> (<= ($generated@@241 0) $generated@@390) (=> (< $generated@@390 $generated@@389) ($generated@@388 $generated@@390 $generated@@389)))
 :pattern ( ($generated@@271 ($generated@@299 $generated@@387) $generated@@390 $generated@@389))
)) (= ($generated@@383 $generated@@389) ($generated@@268 $generated@@46 ($generated@@241 0) $generated@@389 ($generated@@299 $generated@@387) $generated@@389))))
 :pattern ( ($generated@@383 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@81 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392 $generated@@393)) ($generated@@78 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
 (=> (and (= (type $generated@@395) ($generated@@78 $generated@@398 $generated@@4)) (= (type $generated@@396) ($generated@@78 $generated@@398 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@83 $generated@@395 $generated@@397)) (not ($generated@@0 ($generated@@83 $generated@@396 $generated@@397)))))))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@399 ($generated@@143 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@141) ($generated@@0 ($generated@@83 $generated@@399 $generated@@402))) ($generated@@248 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@83 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@76 $generated@@399 ($generated@@143 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@403 ($generated@@236 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@141) ($generated@@0 ($generated@@83 $generated@@403 $generated@@406))) ($generated@@248 $generated@@406 $generated@@404 $generated@@405))
 :pattern ( ($generated@@83 $generated@@403 $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@403 ($generated@@236 $generated@@404) $generated@@405))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@409 T@U) ($generated@@410 Int) ($generated@@411 Int) ) (!  (=> (and (= (type $generated@@409) $generated@@269) (or ($generated@@388 ($generated@@241 $generated@@410) ($generated@@241 $generated@@411)) (and (not (= 1 $generated@@139)) (and (<= ($generated@@241 0) $generated@@410) (<= ($generated@@241 0) $generated@@411))))) (and (=> (not (= ($generated@@241 $generated@@410) ($generated@@241 0))) ($generated@@388 ($generated@@241 (- $generated@@410 1)) ($generated@@241 ($generated@@407 $generated@@411 ($generated@@241 2))))) (= ($generated@@271 ($generated@@299 $generated@@409) ($generated@@241 $generated@@410) ($generated@@241 $generated@@411)) (ite (= ($generated@@241 $generated@@410) ($generated@@241 0)) (= ($generated@@241 ($generated@@408 $generated@@411 ($generated@@241 2))) ($generated@@241 1)) ($generated@@271 ($generated@@299 $generated@@409) ($generated@@241 (- $generated@@410 1)) ($generated@@241 ($generated@@407 $generated@@411 ($generated@@241 2))))))))
 :weight 3
 :pattern ( ($generated@@271 ($generated@@299 $generated@@409) ($generated@@241 $generated@@410) ($generated@@241 $generated@@411)))
))))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= ($generated ($generated@@83 ($generated@@308 $generated@@413) $generated@@412)) 0))
 :pattern ( (let (($generated@@413 (type $generated@@412)))
($generated@@83 ($generated@@308 $generated@@413) $generated@@412)))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@317 (type $generated@@417))))
(let (($generated@@419 ($generated@@316 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@78 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@315 $generated@@141 $generated@@141)) (= (type $generated@@421) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@83 ($generated@@313 $generated@@420) ($generated@@156 ($generated@@270 $generated@@149 $generated@@421)))) (= ($generated@@83 ($generated@@415 $generated@@420) ($generated@@156 ($generated@@270 $generated@@149 $generated@@421))) ($generated@@157 ($generated@@270 $generated@@149 $generated@@421))))))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@335 (type $generated@@425))))
(let (($generated@@427 ($generated@@334 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@78 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@429) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@83 ($generated@@331 $generated@@428) ($generated@@156 ($generated@@270 $generated@@149 $generated@@429)))) (= ($generated@@83 ($generated@@423 $generated@@428) ($generated@@156 ($generated@@270 $generated@@149 $generated@@429))) ($generated@@157 ($generated@@270 $generated@@149 $generated@@429))))))
 :pattern ( ($generated@@83 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@316 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@315 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@83 ($generated@@362 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@83 ($generated@@313 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@83 ($generated@@415 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@430) $generated@@434))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@334 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@333 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@83 ($generated@@331 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@83 ($generated@@423 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@83 ($generated@@331 $generated@@435) $generated@@439))
 :pattern ( ($generated@@83 ($generated@@423 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@315 $generated@@141 $generated@@141)) (= (type $generated@@444) $generated@@66)) (= (type $generated@@445) $generated@@66)) (= (type $generated@@446) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@443) $generated@@447))) (and ($generated@@248 ($generated@@83 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@248 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@76 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@449 $generated@@450)) $generated@@66)
 :pattern ( ($generated@@448 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (= (type $generated@@451) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@452) $generated@@66)) (= (type $generated@@453) $generated@@66)) (= (type $generated@@454) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@331 $generated@@451) $generated@@455))) (and ($generated@@248 ($generated@@83 ($generated@@423 $generated@@451) $generated@@455) $generated@@453 $generated@@454) ($generated@@248 $generated@@455 $generated@@452 $generated@@454)))
 :pattern ( ($generated@@83 ($generated@@423 $generated@@451) $generated@@455))
 :pattern ( ($generated@@83 ($generated@@331 $generated@@451) $generated@@455))
))))
 :pattern ( ($generated@@76 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@456 Int) ($generated@@457 Int) ) (! (= ($generated@@407 $generated@@456 $generated@@457) (div $generated@@456 $generated@@457))
 :pattern ( ($generated@@407 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@81 (type $generated@@458))))
 (=> (and (and (= (type $generated@@458) ($generated@@78 $generated@@460 $generated@@4)) (= (type $generated@@459) ($generated@@78 $generated@@460 $generated@@4))) ($generated@@349 $generated@@458 $generated@@459)) (= $generated@@458 $generated@@459)))
 :pattern ( ($generated@@349 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(= (type ($generated@@461 $generated@@462 $generated@@463)) ($generated@@78 $generated@@464 $generated@@4)))
 :pattern ( ($generated@@461 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@466)))
 (=> (and (and (= (type $generated@@465) ($generated@@78 $generated@@468 $generated@@4)) (= (type $generated@@467) $generated@@468)) ($generated@@0 ($generated@@83 $generated@@465 $generated@@467))) ($generated@@0 ($generated@@83 ($generated@@461 $generated@@465 $generated@@466) $generated@@467))))
 :pattern ( ($generated@@461 $generated@@465 $generated@@466) ($generated@@83 $generated@@465 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (! (let (($generated@@472 (type $generated@@470)))
 (=> (and (= (type $generated@@469) ($generated@@78 $generated@@472 $generated@@4)) (= (type $generated@@471) $generated@@472)) (= ($generated@@0 ($generated@@83 ($generated@@461 $generated@@469 $generated@@470) $generated@@471))  (or (= $generated@@471 $generated@@470) ($generated@@0 ($generated@@83 $generated@@469 $generated@@471))))))
 :pattern ( ($generated@@83 ($generated@@461 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 (type $generated@@475)))
 (=> (and (and (= (type $generated@@473) ($generated@@78 $generated@@476 $generated@@4)) (= (type $generated@@474) ($generated@@78 $generated@@476 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@474 $generated@@475))) (not ($generated@@0 ($generated@@83 ($generated@@391 $generated@@473 $generated@@474) $generated@@475)))))
 :pattern ( ($generated@@391 $generated@@473 $generated@@474) ($generated@@83 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@478 T@T) ) (! (= (type ($generated@@477 $generated@@478)) ($generated@@78 $generated@@478 $generated@@4))
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@335 (type $generated@@479))))
(let (($generated@@481 ($generated@@334 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@333 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@332 $generated@@481 $generated@@480)) (= ($generated@@331 $generated@@479) ($generated@@477 $generated@@481))))))
 :pattern ( ($generated@@331 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@335 (type $generated@@482))))
(let (($generated@@484 ($generated@@334 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@333 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@332 $generated@@484 $generated@@483)) (= ($generated@@373 $generated@@482) ($generated@@477 $generated@@483))))))
 :pattern ( ($generated@@373 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@335 (type $generated@@485))))
(let (($generated@@487 ($generated@@334 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@333 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@332 $generated@@487 $generated@@486)) (= ($generated@@422 $generated@@485) ($generated@@477 $generated@@141))))))
 :pattern ( ($generated@@422 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@317 (type $generated@@488))))
(let (($generated@@490 ($generated@@316 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@315 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@314 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@141) (= (type $generated@@492) $generated@@141)) ($generated@@0 ($generated@@83 ($generated@@414 $generated@@488) ($generated@@287 ($generated@@223 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@414 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@335 (type $generated@@493))))
(let (($generated@@495 ($generated@@334 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@333 $generated@@495 $generated@@494)) (or (= $generated@@493 ($generated@@332 $generated@@495 $generated@@494)) (exists (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (and (and (= (type $generated@@496) $generated@@141) (= (type $generated@@497) $generated@@141)) ($generated@@0 ($generated@@83 ($generated@@422 $generated@@493) ($generated@@287 ($generated@@223 $generated@@496 $generated@@497)))))
 :no-pattern (type $generated@@496)
 :no-pattern (type $generated@@497)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
))))))
 :pattern ( ($generated@@422 $generated@@493))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@141) ($generated@@224 $generated@@498 $generated@@46)) (and (= ($generated@@287 ($generated@@270 $generated@@2 $generated@@498)) $generated@@498) ($generated@@137 ($generated@@270 $generated@@2 $generated@@498) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@498 $generated@@46))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@141) ($generated@@224 $generated@@499 $generated@@47)) (and (= ($generated@@287 ($generated@@270 $generated@@3 $generated@@499)) $generated@@499) ($generated@@137 ($generated@@270 $generated@@3 $generated@@499) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@499 $generated@@47))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@141) ($generated@@224 $generated@@500 $generated@@44)) (and (= ($generated@@287 ($generated@@270 $generated@@4 $generated@@500)) $generated@@500) ($generated@@137 ($generated@@270 $generated@@4 $generated@@500) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@500 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@501) 21))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@141) ($generated@@224 $generated@@502 $generated@@45)) (and (= ($generated@@287 ($generated@@270 $generated@@501 $generated@@502)) $generated@@502) ($generated@@137 ($generated@@270 $generated@@501 $generated@@502) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@502 $generated@@45))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@224 ($generated@@287 $generated@@503) $generated@@504) ($generated@@137 $generated@@503 $generated@@504)))
 :pattern ( ($generated@@224 ($generated@@287 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@81 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@78 $generated@@506 $generated@@2)) (<= 0 ($generated@@307 $generated@@505))))
 :pattern ( ($generated@@307 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@263 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@262 $generated@@508)) (<= 0 ($generated@@261 $generated@@507))))
 :pattern ( ($generated@@261 $generated@@507))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@509 T@U) ($generated@@510 Int) ($generated@@511 Int) ) (!  (=> (and (= (type $generated@@509) $generated@@269) (or ($generated@@388 $generated@@510 $generated@@511) (and (not (= 1 $generated@@139)) (and (<= ($generated@@241 0) $generated@@510) (<= ($generated@@241 0) $generated@@511))))) true)
 :pattern ( ($generated@@271 $generated@@509 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@512 ($generated@@440 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@440 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@66) (= (type $generated@@519) $generated@@66)) (= ($generated@@516 ($generated@@440 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@440 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@66) (= (type $generated@@521) $generated@@66)) (= ($generated@@74 ($generated@@440 $generated@@520 $generated@@521)) $generated@@58))
 :pattern ( ($generated@@440 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@66)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@66) (= (type $generated@@525) $generated@@66)) (= ($generated@@522 ($generated@@448 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@448 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@66)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= ($generated@@526 ($generated@@448 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@448 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@66) (= (type $generated@@531) $generated@@66)) (= ($generated@@74 ($generated@@448 $generated@@530 $generated@@531)) $generated@@59))
 :pattern ( ($generated@@448 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@141) (= (type $generated@@533) $generated@@141)) (= ($generated@@254 ($generated@@223 $generated@@532 $generated@@533)) $generated@@62))
 :pattern ( ($generated@@223 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@66)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@66) (= (type $generated@@537) $generated@@66)) (= ($generated@@534 ($generated@@148 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@148 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@66)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@66) (= (type $generated@@541) $generated@@66)) (= ($generated@@538 ($generated@@148 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@148 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@141) (= (type $generated@@543) $generated@@141)) (= ($generated@@156 ($generated@@223 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@223 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@141) (= (type $generated@@545) $generated@@141)) (= ($generated@@157 ($generated@@223 $generated@@544 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@223 $generated@@544 $generated@@545))
)))
(assert  (and (forall (($generated@@548 T@U) ) (! (= (type ($generated@@546 $generated@@548)) $generated@@66)
 :pattern ( ($generated@@546 $generated@@548))
)) (forall (($generated@@549 T@U) ($generated@@550 Int) ) (! (let (($generated@@551 ($generated@@263 (type $generated@@549))))
(= (type ($generated@@547 $generated@@549 $generated@@550)) $generated@@551))
 :pattern ( ($generated@@547 $generated@@549 $generated@@550))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@262 $generated@@141)) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@552 ($generated@@546 $generated@@553) $generated@@554) (forall (($generated@@555 Int) ) (!  (=> (and (<= 0 $generated@@555) (< $generated@@555 ($generated@@261 $generated@@552))) ($generated@@248 ($generated@@547 $generated@@552 $generated@@555) $generated@@553 $generated@@554))
 :pattern ( ($generated@@547 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@546 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (=> (= (type $generated@@556) ($generated@@78 $generated@@558 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@461 $generated@@556 $generated@@557) $generated@@557))))
 :pattern ( ($generated@@461 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@559 ($generated@@77 $generated@@560)) $generated@@560)
 :pattern ( ($generated@@77 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@66)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@66) (= ($generated@@561 ($generated@@143 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@143 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@66) (= ($generated@@74 ($generated@@143 $generated@@564)) $generated@@54))
 :pattern ( ($generated@@143 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@66)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@66) (= ($generated@@565 ($generated@@236 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@236 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@66) (= ($generated@@74 ($generated@@236 $generated@@568)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@66)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@66) (= ($generated@@569 ($generated@@162 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@162 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@66) (= ($generated@@74 ($generated@@162 $generated@@572)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@66)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@66) (= ($generated@@573 ($generated@@546 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@546 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@66) (= ($generated@@74 ($generated@@546 $generated@@576)) $generated@@57))
 :pattern ( ($generated@@546 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
(= ($generated@@270 $generated@@578 ($generated@@287 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@287 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@315 $generated@@141 $generated@@141)) (= (type $generated@@580) $generated@@66)) (= (type $generated@@581) $generated@@66)) (= ($generated@@137 $generated@@579 ($generated@@440 $generated@@580 $generated@@581)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@579) $generated@@582))) (and ($generated@@224 ($generated@@83 ($generated@@415 $generated@@579) $generated@@582) $generated@@581) ($generated@@224 $generated@@582 $generated@@580)))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@579) $generated@@582))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@579) $generated@@582))
))))
 :pattern ( ($generated@@137 $generated@@579 ($generated@@440 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) (= ($generated@@137 $generated@@583 ($generated@@448 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@331 $generated@@583) $generated@@586))) (and ($generated@@224 ($generated@@83 ($generated@@423 $generated@@583) $generated@@586) $generated@@585) ($generated@@224 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@83 ($generated@@423 $generated@@583) $generated@@586))
 :pattern ( ($generated@@83 ($generated@@331 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@137 $generated@@583 ($generated@@448 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@141) (= (type $generated@@590) $generated@@141)) (< ($generated@@587 $generated@@589) ($generated@@588 ($generated@@223 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@223 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@141) (= (type $generated@@592) $generated@@141)) (< ($generated@@587 $generated@@592) ($generated@@588 ($generated@@223 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@223 $generated@@591 $generated@@592))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 $generated@@593) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@593 ($generated@@143 $generated@@134))))) (= ($generated@@140 $generated@@593) ($generated@@286 ($generated@@241 0) $generated@@593 1 $generated@@593)))
 :pattern ( ($generated@@140 $generated@@593))
))))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@594 T@U) ($generated@@595 Int) ($generated@@596 Int) ) (!  (=> (and (= (type $generated@@594) $generated@@269) (or ($generated@@388 $generated@@595 $generated@@596) (and (not (= 1 $generated@@139)) (and (<= ($generated@@241 0) $generated@@595) (<= ($generated@@241 0) $generated@@596))))) (and (=> (not (= $generated@@595 ($generated@@241 0))) ($generated@@388 (- $generated@@595 1) ($generated@@407 $generated@@596 ($generated@@241 2)))) (= ($generated@@271 ($generated@@299 $generated@@594) $generated@@595 $generated@@596) (ite (= $generated@@595 ($generated@@241 0)) (= ($generated@@408 $generated@@596 ($generated@@241 2)) ($generated@@241 1)) ($generated@@271 $generated@@594 (- $generated@@595 1) ($generated@@407 $generated@@596 ($generated@@241 2)))))))
 :pattern ( ($generated@@271 ($generated@@299 $generated@@594) $generated@@595 $generated@@596))
))))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@141) (= (type $generated@@598) $generated@@66)) (= (type $generated@@599) $generated@@66)) ($generated@@224 $generated@@597 ($generated@@440 $generated@@598 $generated@@599))) (and (= ($generated@@287 ($generated@@270 ($generated@@315 $generated@@141 $generated@@141) $generated@@597)) $generated@@597) ($generated@@137 ($generated@@270 ($generated@@315 $generated@@141 $generated@@141) $generated@@597) ($generated@@440 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@224 $generated@@597 ($generated@@440 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@141) (= (type $generated@@601) $generated@@66)) (= (type $generated@@602) $generated@@66)) ($generated@@224 $generated@@600 ($generated@@448 $generated@@601 $generated@@602))) (and (= ($generated@@287 ($generated@@270 ($generated@@333 $generated@@141 $generated@@141) $generated@@600)) $generated@@600) ($generated@@137 ($generated@@270 ($generated@@333 $generated@@141 $generated@@141) $generated@@600) ($generated@@448 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@224 $generated@@600 ($generated@@448 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@66) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) $generated@@141)) ($generated@@224 $generated@@605 ($generated@@148 $generated@@603 $generated@@604))) (and (= ($generated@@287 ($generated@@270 $generated@@149 $generated@@605)) $generated@@605) ($generated@@137 ($generated@@270 $generated@@149 $generated@@605) ($generated@@148 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@224 $generated@@605 ($generated@@148 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@607 T@T) ) (! (= (type ($generated@@606 $generated@@607)) ($generated@@78 $generated@@607 $generated@@4))
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@83 ($generated@@606 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@83 ($generated@@606 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@610)))
 (not ($generated@@0 ($generated@@83 ($generated@@477 $generated@@611) $generated@@610))))
 :pattern ( (let (($generated@@611 (type $generated@@610)))
($generated@@83 ($generated@@477 $generated@@611) $generated@@610)))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 Int) ) (! (= ($generated@@408 $generated@@612 $generated@@613) (mod $generated@@612 $generated@@613))
 :pattern ( ($generated@@408 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@71)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@66) (= (type $generated@@617) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@616 $generated@@617)) $generated@@63) (= ($generated@@614 ($generated@@148 $generated@@616 $generated@@617)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@149) (= ($generated@@587 ($generated@@287 $generated@@618)) ($generated@@588 $generated@@618)))
 :pattern ( ($generated@@587 ($generated@@287 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@141) ($generated@@224 $generated@@619 ($generated@@77 0))) (and (= ($generated@@287 ($generated@@270 $generated@@2 $generated@@619)) $generated@@619) ($generated@@137 ($generated@@270 ($generated@@78 $generated@@141 $generated@@4) $generated@@619) ($generated@@77 0))))
 :pattern ( ($generated@@224 $generated@@619 ($generated@@77 0)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@141) (= (type $generated@@621) $generated@@66)) ($generated@@224 $generated@@620 ($generated@@143 $generated@@621))) (and (= ($generated@@287 ($generated@@270 ($generated@@78 $generated@@141 $generated@@4) $generated@@620)) $generated@@620) ($generated@@137 ($generated@@270 ($generated@@78 $generated@@141 $generated@@4) $generated@@620) ($generated@@143 $generated@@621))))
 :pattern ( ($generated@@224 $generated@@620 ($generated@@143 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@141) (= (type $generated@@623) $generated@@66)) ($generated@@224 $generated@@622 ($generated@@236 $generated@@623))) (and (= ($generated@@287 ($generated@@270 ($generated@@78 $generated@@141 $generated@@4) $generated@@622)) $generated@@622) ($generated@@137 ($generated@@270 ($generated@@78 $generated@@141 $generated@@4) $generated@@622) ($generated@@236 $generated@@623))))
 :pattern ( ($generated@@224 $generated@@622 ($generated@@236 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@141) (= (type $generated@@625) $generated@@66)) ($generated@@224 $generated@@624 ($generated@@162 $generated@@625))) (and (= ($generated@@287 ($generated@@270 ($generated@@78 $generated@@141 $generated@@2) $generated@@624)) $generated@@624) ($generated@@137 ($generated@@270 ($generated@@78 $generated@@141 $generated@@2) $generated@@624) ($generated@@162 $generated@@625))))
 :pattern ( ($generated@@224 $generated@@624 ($generated@@162 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@141) (= (type $generated@@627) $generated@@66)) ($generated@@224 $generated@@626 ($generated@@546 $generated@@627))) (and (= ($generated@@287 ($generated@@270 ($generated@@262 $generated@@141) $generated@@626)) $generated@@626) ($generated@@137 ($generated@@270 ($generated@@262 $generated@@141) $generated@@626) ($generated@@546 $generated@@627))))
 :pattern ( ($generated@@224 $generated@@626 ($generated@@546 $generated@@627)))
)))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@628 Int) ) (!  (=> (or ($generated@@384 ($generated@@241 $generated@@628)) (and (not (= 2 $generated@@139)) (<= ($generated@@241 0) $generated@@628))) (and (forall (($generated@@629 Int) ) (!  (=> (<= ($generated@@241 0) $generated@@629) (=> (< $generated@@629 $generated@@628) ($generated@@388 $generated@@629 ($generated@@241 $generated@@628))))
 :pattern ( ($generated@@271 ($generated@@299 $generated@@387) $generated@@629 $generated@@628))
)) (= ($generated@@383 ($generated@@241 $generated@@628)) ($generated@@268 $generated@@46 ($generated@@241 0) $generated@@628 ($generated@@299 $generated@@387) ($generated@@241 $generated@@628)))))
 :weight 3
 :pattern ( ($generated@@383 ($generated@@241 $generated@@628)))
))))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@614 $generated@@134) $generated@@64))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@630) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@630 ($generated@@162 $generated@@631) $generated@@632) (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@141) (< 0 ($generated ($generated@@83 $generated@@630 $generated@@633)))) ($generated@@248 $generated@@633 $generated@@631 $generated@@632))
 :pattern ( ($generated@@83 $generated@@630 $generated@@633))
))))
 :pattern ( ($generated@@76 $generated@@630 ($generated@@162 $generated@@631) $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@149) (= (type $generated@@635) $generated@@66)) (= (type $generated@@636) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@247 $generated@@636) (and ($generated@@147 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@66) ($generated@@76 $generated@@634 ($generated@@148 $generated@@635 $generated@@637) $generated@@636))
 :pattern ( ($generated@@76 $generated@@634 ($generated@@148 $generated@@635 $generated@@637) $generated@@636))
))))) ($generated@@248 ($generated@@156 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@248 ($generated@@156 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@149) (= (type $generated@@639) $generated@@66)) (= (type $generated@@640) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@247 $generated@@640) (and ($generated@@147 $generated@@638) (exists (($generated@@641 T@U) ) (!  (and (= (type $generated@@641) $generated@@66) ($generated@@76 $generated@@638 ($generated@@148 $generated@@641 $generated@@639) $generated@@640))
 :pattern ( ($generated@@76 $generated@@638 ($generated@@148 $generated@@641 $generated@@639) $generated@@640))
))))) ($generated@@248 ($generated@@157 $generated@@638) $generated@@639 $generated@@640))
 :pattern ( ($generated@@248 ($generated@@157 $generated@@638) $generated@@639 $generated@@640))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 ($generated@@243 $generated@@642)) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@642 ($generated@@143 $generated@@134))))) (= ($generated@@140 ($generated@@243 $generated@@642)) ($generated@@286 ($generated@@241 0) ($generated@@243 $generated@@642) 1 $generated@@642)))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@243 $generated@@642)))
))))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@141) (= (type $generated@@644) $generated@@141)) (= ($generated@@223 ($generated@@243 $generated@@643) ($generated@@243 $generated@@644)) ($generated@@243 ($generated@@223 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@223 ($generated@@243 $generated@@643) ($generated@@243 $generated@@644)))
)))
(assert (forall (($generated@@645 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@241 $generated@@645))) ($generated@@243 ($generated@@287 ($generated@@8 $generated@@645))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@241 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ) (! (= ($generated@@287 ($generated@@243 $generated@@646)) ($generated@@243 ($generated@@287 $generated@@646)))
 :pattern ( ($generated@@287 ($generated@@243 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@263 (type $generated@@647))))
 (=> (and (= (type $generated@@647) ($generated@@262 $generated@@648)) (= ($generated@@261 $generated@@647) 0)) (= $generated@@647 ($generated@@260 $generated@@648))))
 :pattern ( ($generated@@261 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@650)))
 (=> (and (and (= (type $generated@@649) ($generated@@78 $generated@@652 $generated@@2)) (= (type $generated@@651) $generated@@2)) (<= 0 ($generated $generated@@651))) (= ($generated@@307 ($generated@@84 $generated@@649 $generated@@650 $generated@@651)) (+ (- ($generated@@307 $generated@@649) ($generated ($generated@@83 $generated@@649 $generated@@650))) ($generated $generated@@651)))))
 :pattern ( ($generated@@307 ($generated@@84 $generated@@649 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@654) $generated@@2)) ($generated@@76 $generated@@654 $generated@@46 $generated@@653))
 :pattern ( ($generated@@76 $generated@@654 $generated@@46 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@656) $generated@@3)) ($generated@@76 $generated@@656 $generated@@47 $generated@@655))
 :pattern ( ($generated@@76 $generated@@656 $generated@@47 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@658) $generated@@4)) ($generated@@76 $generated@@658 $generated@@44 $generated@@657))
 :pattern ( ($generated@@76 $generated@@658 $generated@@44 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@660) $generated@@501)) ($generated@@76 $generated@@660 $generated@@45 $generated@@659))
 :pattern ( ($generated@@76 $generated@@660 $generated@@45 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@662) $generated@@141)) ($generated@@76 $generated@@662 $generated@@48 $generated@@661))
 :pattern ( ($generated@@76 $generated@@662 $generated@@48 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@262 $generated@@141)) (= (type $generated@@664) $generated@@66)) (= ($generated@@137 $generated@@663 ($generated@@546 $generated@@664)) (forall (($generated@@665 Int) ) (!  (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@261 $generated@@663))) ($generated@@224 ($generated@@547 $generated@@663 $generated@@665) $generated@@664))
 :pattern ( ($generated@@547 $generated@@663 $generated@@665))
))))
 :pattern ( ($generated@@137 $generated@@663 ($generated@@546 $generated@@664)))
)))
(assert (forall (($generated@@667 T@U) ) (! (= (type ($generated@@666 $generated@@667)) $generated@@269)
 :pattern ( ($generated@@666 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ($generated@@670 Int) ) (!  (=> (= (type $generated@@668) $generated@@269) (= ($generated@@271 $generated@@668 $generated@@669 $generated@@670) ($generated@@271 $generated@@387 $generated@@669 $generated@@670)))
 :pattern ( ($generated@@271 ($generated@@666 $generated@@668) $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (= (type $generated@@672) ($generated@@262 $generated@@141)) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@261 $generated@@672))) (< ($generated@@588 ($generated@@270 $generated@@149 ($generated@@547 $generated@@672 $generated@@673))) ($generated@@671 $generated@@672))))
 :pattern ( ($generated@@588 ($generated@@270 $generated@@149 ($generated@@547 $generated@@672 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@315 $generated@@141 $generated@@141)) (= (type $generated@@675) $generated@@66)) (= (type $generated@@676) $generated@@66)) ($generated@@137 $generated@@674 ($generated@@440 $generated@@675 $generated@@676))) (and (and ($generated@@137 ($generated@@313 $generated@@674) ($generated@@143 $generated@@675)) ($generated@@137 ($generated@@362 $generated@@674) ($generated@@143 $generated@@676))) ($generated@@137 ($generated@@414 $generated@@674) ($generated@@143 ($generated@@148 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@137 $generated@@674 ($generated@@440 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@678) $generated@@66)) (= (type $generated@@679) $generated@@66)) ($generated@@137 $generated@@677 ($generated@@448 $generated@@678 $generated@@679))) (and (and ($generated@@137 ($generated@@331 $generated@@677) ($generated@@236 $generated@@678)) ($generated@@137 ($generated@@373 $generated@@677) ($generated@@236 $generated@@679))) ($generated@@137 ($generated@@422 $generated@@677) ($generated@@236 ($generated@@148 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@137 $generated@@677 ($generated@@448 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@2) ($generated@@137 $generated@@680 $generated@@46))
 :pattern ( ($generated@@137 $generated@@680 $generated@@46))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@3) ($generated@@137 $generated@@681 $generated@@47))
 :pattern ( ($generated@@137 $generated@@681 $generated@@47))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@4) ($generated@@137 $generated@@682 $generated@@44))
 :pattern ( ($generated@@137 $generated@@682 $generated@@44))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@501) ($generated@@137 $generated@@683 $generated@@45))
 :pattern ( ($generated@@137 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@141) ($generated@@137 $generated@@684 $generated@@48))
 :pattern ( ($generated@@137 $generated@@684 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 (T@U) Bool)
(declare-fun $generated@@690 () Int)
(assert  (and (and (and (= (type $generated@@685) ($generated@@169 $generated@@79 $generated@@4)) (= (type $generated@@686) $generated@@79)) (= (type $generated@@687) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@688) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@691  (=> (= $generated@@685 ($generated@@168 $generated@@686 $generated@@687 $generated@@60 false)) (=> (and (and (and ($generated@@247 $generated@@688) ($generated@@689 $generated@@688)) (= $generated@@687 $generated@@688)) (and ($generated@@76 ($generated@@8 $generated@@690) $generated@@134 $generated@@688) ($generated@@384 $generated@@690))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@137 ($generated@@8 ($generated@@241 0)) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@241 0)) $generated@@134) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= ($generated@@241 2) 0))) (=> (not (= ($generated@@241 2) 0)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@690 ($generated@@241 2))) $generated@@134))))))))))
(let (($generated@@692  (=> (and (and (and ($generated@@247 $generated@@687) ($generated@@689 $generated@@687)) (<= ($generated@@241 0) $generated@@690)) (and (= 3 $generated@@139) (= (ControlFlow 0 5) 2))) $generated@@691)))
$generated@@692)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U Int Int T@U Int) T@U)
(declare-fun $generated@@269 () T@T)
(declare-fun $generated@@270 (T@T T@U) T@U)
(declare-fun $generated@@271 (T@U Int Int) Bool)
(declare-fun $generated@@286 (Int T@U Int T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@307 (T@U) Int)
(declare-fun $generated@@308 (T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@349 (T@U T@U) Bool)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@383 (Int) T@U)
(declare-fun $generated@@384 (Int) Bool)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 (Int Int) Bool)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@407 (Int Int) Int)
(declare-fun $generated@@408 (Int Int) Int)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@T) T@U)
(declare-fun $generated@@501 () T@T)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@547 (T@U Int) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@606 (T@T) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@666 (T@U) T@U)
(declare-fun $generated@@671 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@140 $generated@@144)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@140 $generated@@144))
))) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@66)
 :pattern ( ($generated@@143 $generated@@145))
))))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 $generated@@146) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@146 ($generated@@143 $generated@@134))))) ($generated@@137 ($generated@@140 $generated@@146) ($generated@@143 $generated@@134)))
 :pattern ( ($generated@@140 $generated@@146))
))))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@137 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@137 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@141)
 :pattern ( ($generated@@156 $generated@@158))
)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@141)
 :pattern ( ($generated@@157 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@149) (= (type $generated@@161) $generated@@149)) true) (= ($generated@@155 $generated@@160 $generated@@161)  (and (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)) (= ($generated@@157 $generated@@160) ($generated@@157 $generated@@161)))))
 :pattern ( ($generated@@155 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@166) $generated@@66)) ($generated@@137 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@137 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@79 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@69 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@79) (= (type $generated@@217) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@218) ($generated@@68 $generated@@4))) (= (type $generated@@220) $generated@@79)) (= (type $generated@@221) ($generated@@68 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@149)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@66) (= (type $generated@@228) $generated@@66)) (= (type $generated@@229) $generated@@141)) (= (type $generated@@230) $generated@@141)) (= ($generated@@137 ($generated@@223 $generated@@229 $generated@@230) ($generated@@148 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@137 ($generated@@223 $generated@@229 $generated@@230) ($generated@@148 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@149) (= (type $generated@@232) $generated@@149)) (= ($generated@@155 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@155 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@143 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@141) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@224 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@143 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@66)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@239) $generated@@66)) (= ($generated@@137 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@141) ($generated@@0 ($generated@@83 $generated@@238 $generated@@240))) ($generated@@224 $generated@@240 $generated@@239))
 :pattern ( ($generated@@83 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@137 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@66) (= (type $generated@@250) $generated@@66)) (= (type $generated@@251) $generated@@141)) (= (type $generated@@252) $generated@@141)) (= (type $generated@@253) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@247 $generated@@253)) (= ($generated@@76 ($generated@@223 $generated@@251 $generated@@252) ($generated@@148 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@76 ($generated@@223 $generated@@251 $generated@@252) ($generated@@148 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@149) (= ($generated@@147 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@149) ($generated@@147 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@141) (= (type $generated@@259) $generated@@141)) (= $generated@@257 ($generated@@223 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@147 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert  (and (and (= ($generated@@1 $generated@@269) 18) (forall (($generated@@272 T@U) ($generated@@273 Int) ($generated@@274 Int) ($generated@@275 T@U) ($generated@@276 Int) ) (! (= (type ($generated@@268 $generated@@272 $generated@@273 $generated@@274 $generated@@275 $generated@@276)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@268 $generated@@272 $generated@@273 $generated@@274 $generated@@275 $generated@@276))
))) (forall (($generated@@277 T@T) ($generated@@278 T@U) ) (! (= (type ($generated@@270 $generated@@277 $generated@@278)) $generated@@277)
 :pattern ( ($generated@@270 $generated@@277 $generated@@278))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 Int) ($generated@@281 Int) ($generated@@282 T@U) ($generated@@283 Int) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@66) (= (type $generated@@282) $generated@@269)) (= (type $generated@@284) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@268 $generated@@279 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@284))  (and ($generated@@224 $generated@@284 $generated@@279) (and (and (<= $generated@@280 ($generated ($generated@@270 $generated@@2 $generated@@284))) (< ($generated ($generated@@270 $generated@@2 $generated@@284)) $generated@@281)) ($generated@@271 $generated@@282 ($generated ($generated@@270 $generated@@2 $generated@@284)) $generated@@283)))))
 :pattern ( ($generated@@83 ($generated@@268 $generated@@279 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@2) (= ($generated@@137 $generated@@285 $generated@@134) (<= ($generated@@241 0) ($generated $generated@@285))))
 :pattern ( ($generated@@137 $generated@@285 $generated@@134))
)))
(assert  (and (forall (($generated@@288 Int) ($generated@@289 T@U) ($generated@@290 Int) ($generated@@291 T@U) ) (! (= (type ($generated@@286 $generated@@288 $generated@@289 $generated@@290 $generated@@291)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@286 $generated@@288 $generated@@289 $generated@@290 $generated@@291))
)) (forall (($generated@@292 T@U) ) (! (= (type ($generated@@287 $generated@@292)) $generated@@141)
 :pattern ( ($generated@@287 $generated@@292))
))))
(assert (forall (($generated@@293 Int) ($generated@@294 T@U) ($generated@@295 Int) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (= (type $generated@@294) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@296) ($generated@@78 $generated@@141 $generated@@4))) (= (type $generated@@297) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@286 $generated@@293 $generated@@294 $generated@@295 $generated@@296) $generated@@297)) (exists (($generated@@298 Int) ) (!  (and (and (<= $generated@@293 $generated@@298) ($generated@@0 ($generated@@83 $generated@@294 ($generated@@287 ($generated@@8 $generated@@298))))) (= $generated@@297 ($generated@@287 ($generated@@8 (+ $generated@@298 $generated@@295)))))
 :pattern ( ($generated@@83 $generated@@296 ($generated@@287 ($generated@@8 $generated@@298))))
))))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@293 $generated@@294 $generated@@295 $generated@@296) $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@269)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 Int) ($generated@@303 Int) ) (!  (=> (= (type $generated@@301) $generated@@269) (= ($generated@@271 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@271 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@271 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@66) (= (type $generated@@306) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@248 ($generated@@287 $generated@@304) $generated@@305 $generated@@306) ($generated@@76 $generated@@304 $generated@@305 $generated@@306)))
 :pattern ( ($generated@@248 ($generated@@287 $generated@@304) $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@309 T@T) ) (! (= (type ($generated@@308 $generated@@309)) ($generated@@78 $generated@@309 $generated@@2))
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@81 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@78 $generated@@311 $generated@@2)) (and (= (= ($generated@@307 $generated@@310) 0) (= $generated@@310 ($generated@@308 $generated@@311))) (=> (not (= ($generated@@307 $generated@@310) 0)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@311) (< 0 ($generated ($generated@@83 $generated@@310 $generated@@312))))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@78 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@83 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@83 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 20)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@78 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@83 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@83 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@81 (type $generated@@350))))
 (=> (and (= (type $generated@@350) ($generated@@78 $generated@@352 $generated@@4)) (= (type $generated@@351) ($generated@@78 $generated@@352 $generated@@4))) (= ($generated@@349 $generated@@350 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (= ($generated@@0 ($generated@@83 $generated@@350 $generated@@353)) ($generated@@0 ($generated@@83 $generated@@351 $generated@@353))))
 :pattern ( ($generated@@83 $generated@@350 $generated@@353))
 :pattern ( ($generated@@83 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@81 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@78 $generated@@355 $generated@@2)) (= ($generated@@163 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@83 $generated@@354 $generated@@356))) (<= ($generated ($generated@@83 $generated@@354 $generated@@356)) ($generated@@307 $generated@@354))))
 :pattern ( ($generated@@83 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@163 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@141) ($generated@@224 $generated@@357 $generated@@134)) (and (= ($generated@@287 ($generated@@270 $generated@@2 $generated@@357)) $generated@@357) ($generated@@137 ($generated@@270 $generated@@2 $generated@@357) $generated@@134)))
 :pattern ( ($generated@@224 $generated@@357 $generated@@134))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@317 (type $generated@@358))))
(let (($generated@@360 ($generated@@316 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@315 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@314 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@313 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@317 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@78 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@317 (type $generated@@365))))
(let (($generated@@367 ($generated@@316 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@315 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@314 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@83 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@335 (type $generated@@369))))
(let (($generated@@371 ($generated@@334 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@333 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@332 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@83 ($generated@@331 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@331 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@335 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@78 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@335 (type $generated@@376))))
(let (($generated@@378 ($generated@@334 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@333 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@332 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@381) $generated@@66)) (= ($generated@@137 $generated@@380 ($generated@@162 $generated@@381)) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@141) (< 0 ($generated ($generated@@83 $generated@@380 $generated@@382)))) ($generated@@224 $generated@@382 $generated@@381))
 :pattern ( ($generated@@83 $generated@@380 $generated@@382))
))))
 :pattern ( ($generated@@137 $generated@@380 ($generated@@162 $generated@@381)))
)))
(assert (forall (($generated@@385 Int) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@386 Int) ) (!  (=> (or ($generated@@384 $generated@@386) (and (not (= 2 $generated@@139)) (<= ($generated@@241 0) $generated@@386))) ($generated@@137 ($generated@@383 $generated@@386) ($generated@@143 $generated@@134)))
 :pattern ( ($generated@@383 $generated@@386))
))))
(assert (= (type $generated@@387) $generated@@269))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@389 Int) ) (!  (=> (or ($generated@@384 $generated@@389) (and (not (= 2 $generated@@139)) (<= ($generated@@241 0) $generated@@389))) (and (forall (($generated@@390 Int) ) (!  (=> (<= ($generated@@241 0) $generated@@390) (=> (< $generated@@390 $generated@@389) ($generated@@388 $generated@@390 $generated@@389)))
 :pattern ( ($generated@@271 ($generated@@299 $generated@@387) $generated@@390 $generated@@389))
)) (= ($generated@@383 $generated@@389) ($generated@@268 $generated@@46 ($generated@@241 0) $generated@@389 ($generated@@299 $generated@@387) $generated@@389))))
 :pattern ( ($generated@@383 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@81 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392 $generated@@393)) ($generated@@78 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
 (=> (and (= (type $generated@@395) ($generated@@78 $generated@@398 $generated@@4)) (= (type $generated@@396) ($generated@@78 $generated@@398 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@83 $generated@@395 $generated@@397)) (not ($generated@@0 ($generated@@83 $generated@@396 $generated@@397)))))))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@399 ($generated@@143 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@141) ($generated@@0 ($generated@@83 $generated@@399 $generated@@402))) ($generated@@248 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@83 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@76 $generated@@399 ($generated@@143 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@78 $generated@@141 $generated@@4)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@403 ($generated@@236 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@141) ($generated@@0 ($generated@@83 $generated@@403 $generated@@406))) ($generated@@248 $generated@@406 $generated@@404 $generated@@405))
 :pattern ( ($generated@@83 $generated@@403 $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@403 ($generated@@236 $generated@@404) $generated@@405))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@409 T@U) ($generated@@410 Int) ($generated@@411 Int) ) (!  (=> (and (= (type $generated@@409) $generated@@269) (or ($generated@@388 ($generated@@241 $generated@@410) ($generated@@241 $generated@@411)) (and (not (= 1 $generated@@139)) (and (<= ($generated@@241 0) $generated@@410) (<= ($generated@@241 0) $generated@@411))))) (and (=> (not (= ($generated@@241 $generated@@410) ($generated@@241 0))) ($generated@@388 ($generated@@241 (- $generated@@410 1)) ($generated@@241 ($generated@@407 $generated@@411 ($generated@@241 2))))) (= ($generated@@271 ($generated@@299 $generated@@409) ($generated@@241 $generated@@410) ($generated@@241 $generated@@411)) (ite (= ($generated@@241 $generated@@410) ($generated@@241 0)) (= ($generated@@241 ($generated@@408 $generated@@411 ($generated@@241 2))) ($generated@@241 1)) ($generated@@271 ($generated@@299 $generated@@409) ($generated@@241 (- $generated@@410 1)) ($generated@@241 ($generated@@407 $generated@@411 ($generated@@241 2))))))))
 :weight 3
 :pattern ( ($generated@@271 ($generated@@299 $generated@@409) ($generated@@241 $generated@@410) ($generated@@241 $generated@@411)))
))))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= ($generated ($generated@@83 ($generated@@308 $generated@@413) $generated@@412)) 0))
 :pattern ( (let (($generated@@413 (type $generated@@412)))
($generated@@83 ($generated@@308 $generated@@413) $generated@@412)))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@317 (type $generated@@417))))
(let (($generated@@419 ($generated@@316 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@78 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@315 $generated@@141 $generated@@141)) (= (type $generated@@421) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@83 ($generated@@313 $generated@@420) ($generated@@156 ($generated@@270 $generated@@149 $generated@@421)))) (= ($generated@@83 ($generated@@415 $generated@@420) ($generated@@156 ($generated@@270 $generated@@149 $generated@@421))) ($generated@@157 ($generated@@270 $generated@@149 $generated@@421))))))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@78 $generated@@141 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@335 (type $generated@@425))))
(let (($generated@@427 ($generated@@334 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@78 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@429) $generated@@141)) (= ($generated@@0 ($generated@@83 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@83 ($generated@@331 $generated@@428) ($generated@@156 ($generated@@270 $generated@@149 $generated@@429)))) (= ($generated@@83 ($generated@@423 $generated@@428) ($generated@@156 ($generated@@270 $generated@@149 $generated@@429))) ($generated@@157 ($generated@@270 $generated@@149 $generated@@429))))))
 :pattern ( ($generated@@83 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@316 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@315 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@83 ($generated@@362 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@83 ($generated@@313 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@83 ($generated@@415 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@430) $generated@@434))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@334 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@333 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@83 ($generated@@331 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@83 ($generated@@423 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@83 ($generated@@331 $generated@@435) $generated@@439))
 :pattern ( ($generated@@83 ($generated@@423 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@315 $generated@@141 $generated@@141)) (= (type $generated@@444) $generated@@66)) (= (type $generated@@445) $generated@@66)) (= (type $generated@@446) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@443) $generated@@447))) (and ($generated@@248 ($generated@@83 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@248 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@76 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@449 $generated@@450)) $generated@@66)
 :pattern ( ($generated@@448 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (= (type $generated@@451) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@452) $generated@@66)) (= (type $generated@@453) $generated@@66)) (= (type $generated@@454) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@331 $generated@@451) $generated@@455))) (and ($generated@@248 ($generated@@83 ($generated@@423 $generated@@451) $generated@@455) $generated@@453 $generated@@454) ($generated@@248 $generated@@455 $generated@@452 $generated@@454)))
 :pattern ( ($generated@@83 ($generated@@423 $generated@@451) $generated@@455))
 :pattern ( ($generated@@83 ($generated@@331 $generated@@451) $generated@@455))
))))
 :pattern ( ($generated@@76 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@456 Int) ($generated@@457 Int) ) (! (= ($generated@@407 $generated@@456 $generated@@457) (div $generated@@456 $generated@@457))
 :pattern ( ($generated@@407 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@81 (type $generated@@458))))
 (=> (and (and (= (type $generated@@458) ($generated@@78 $generated@@460 $generated@@4)) (= (type $generated@@459) ($generated@@78 $generated@@460 $generated@@4))) ($generated@@349 $generated@@458 $generated@@459)) (= $generated@@458 $generated@@459)))
 :pattern ( ($generated@@349 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(= (type ($generated@@461 $generated@@462 $generated@@463)) ($generated@@78 $generated@@464 $generated@@4)))
 :pattern ( ($generated@@461 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@466)))
 (=> (and (and (= (type $generated@@465) ($generated@@78 $generated@@468 $generated@@4)) (= (type $generated@@467) $generated@@468)) ($generated@@0 ($generated@@83 $generated@@465 $generated@@467))) ($generated@@0 ($generated@@83 ($generated@@461 $generated@@465 $generated@@466) $generated@@467))))
 :pattern ( ($generated@@461 $generated@@465 $generated@@466) ($generated@@83 $generated@@465 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (! (let (($generated@@472 (type $generated@@470)))
 (=> (and (= (type $generated@@469) ($generated@@78 $generated@@472 $generated@@4)) (= (type $generated@@471) $generated@@472)) (= ($generated@@0 ($generated@@83 ($generated@@461 $generated@@469 $generated@@470) $generated@@471))  (or (= $generated@@471 $generated@@470) ($generated@@0 ($generated@@83 $generated@@469 $generated@@471))))))
 :pattern ( ($generated@@83 ($generated@@461 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 (type $generated@@475)))
 (=> (and (and (= (type $generated@@473) ($generated@@78 $generated@@476 $generated@@4)) (= (type $generated@@474) ($generated@@78 $generated@@476 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@474 $generated@@475))) (not ($generated@@0 ($generated@@83 ($generated@@391 $generated@@473 $generated@@474) $generated@@475)))))
 :pattern ( ($generated@@391 $generated@@473 $generated@@474) ($generated@@83 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@478 T@T) ) (! (= (type ($generated@@477 $generated@@478)) ($generated@@78 $generated@@478 $generated@@4))
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@335 (type $generated@@479))))
(let (($generated@@481 ($generated@@334 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@333 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@332 $generated@@481 $generated@@480)) (= ($generated@@331 $generated@@479) ($generated@@477 $generated@@481))))))
 :pattern ( ($generated@@331 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@335 (type $generated@@482))))
(let (($generated@@484 ($generated@@334 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@333 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@332 $generated@@484 $generated@@483)) (= ($generated@@373 $generated@@482) ($generated@@477 $generated@@483))))))
 :pattern ( ($generated@@373 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@335 (type $generated@@485))))
(let (($generated@@487 ($generated@@334 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@333 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@332 $generated@@487 $generated@@486)) (= ($generated@@422 $generated@@485) ($generated@@477 $generated@@141))))))
 :pattern ( ($generated@@422 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@317 (type $generated@@488))))
(let (($generated@@490 ($generated@@316 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@315 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@314 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@141) (= (type $generated@@492) $generated@@141)) ($generated@@0 ($generated@@83 ($generated@@414 $generated@@488) ($generated@@287 ($generated@@223 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@414 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@335 (type $generated@@493))))
(let (($generated@@495 ($generated@@334 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@333 $generated@@495 $generated@@494)) (or (= $generated@@493 ($generated@@332 $generated@@495 $generated@@494)) (exists (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (and (and (= (type $generated@@496) $generated@@141) (= (type $generated@@497) $generated@@141)) ($generated@@0 ($generated@@83 ($generated@@422 $generated@@493) ($generated@@287 ($generated@@223 $generated@@496 $generated@@497)))))
 :no-pattern (type $generated@@496)
 :no-pattern (type $generated@@497)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
))))))
 :pattern ( ($generated@@422 $generated@@493))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@141) ($generated@@224 $generated@@498 $generated@@46)) (and (= ($generated@@287 ($generated@@270 $generated@@2 $generated@@498)) $generated@@498) ($generated@@137 ($generated@@270 $generated@@2 $generated@@498) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@498 $generated@@46))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@141) ($generated@@224 $generated@@499 $generated@@47)) (and (= ($generated@@287 ($generated@@270 $generated@@3 $generated@@499)) $generated@@499) ($generated@@137 ($generated@@270 $generated@@3 $generated@@499) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@499 $generated@@47))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@141) ($generated@@224 $generated@@500 $generated@@44)) (and (= ($generated@@287 ($generated@@270 $generated@@4 $generated@@500)) $generated@@500) ($generated@@137 ($generated@@270 $generated@@4 $generated@@500) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@500 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@501) 21))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@141) ($generated@@224 $generated@@502 $generated@@45)) (and (= ($generated@@287 ($generated@@270 $generated@@501 $generated@@502)) $generated@@502) ($generated@@137 ($generated@@270 $generated@@501 $generated@@502) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@502 $generated@@45))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@224 ($generated@@287 $generated@@503) $generated@@504) ($generated@@137 $generated@@503 $generated@@504)))
 :pattern ( ($generated@@224 ($generated@@287 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@81 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@78 $generated@@506 $generated@@2)) (<= 0 ($generated@@307 $generated@@505))))
 :pattern ( ($generated@@307 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@263 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@262 $generated@@508)) (<= 0 ($generated@@261 $generated@@507))))
 :pattern ( ($generated@@261 $generated@@507))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@509 T@U) ($generated@@510 Int) ($generated@@511 Int) ) (!  (=> (and (= (type $generated@@509) $generated@@269) (or ($generated@@388 $generated@@510 $generated@@511) (and (not (= 1 $generated@@139)) (and (<= ($generated@@241 0) $generated@@510) (<= ($generated@@241 0) $generated@@511))))) true)
 :pattern ( ($generated@@271 $generated@@509 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@512 ($generated@@440 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@440 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@66) (= (type $generated@@519) $generated@@66)) (= ($generated@@516 ($generated@@440 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@440 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@66) (= (type $generated@@521) $generated@@66)) (= ($generated@@74 ($generated@@440 $generated@@520 $generated@@521)) $generated@@58))
 :pattern ( ($generated@@440 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@66)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@66) (= (type $generated@@525) $generated@@66)) (= ($generated@@522 ($generated@@448 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@448 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@66)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= ($generated@@526 ($generated@@448 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@448 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@66) (= (type $generated@@531) $generated@@66)) (= ($generated@@74 ($generated@@448 $generated@@530 $generated@@531)) $generated@@59))
 :pattern ( ($generated@@448 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@141) (= (type $generated@@533) $generated@@141)) (= ($generated@@254 ($generated@@223 $generated@@532 $generated@@533)) $generated@@62))
 :pattern ( ($generated@@223 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@66)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@66) (= (type $generated@@537) $generated@@66)) (= ($generated@@534 ($generated@@148 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@148 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@66)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@66) (= (type $generated@@541) $generated@@66)) (= ($generated@@538 ($generated@@148 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@148 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@141) (= (type $generated@@543) $generated@@141)) (= ($generated@@156 ($generated@@223 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@223 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@141) (= (type $generated@@545) $generated@@141)) (= ($generated@@157 ($generated@@223 $generated@@544 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@223 $generated@@544 $generated@@545))
)))
(assert  (and (forall (($generated@@548 T@U) ) (! (= (type ($generated@@546 $generated@@548)) $generated@@66)
 :pattern ( ($generated@@546 $generated@@548))
)) (forall (($generated@@549 T@U) ($generated@@550 Int) ) (! (let (($generated@@551 ($generated@@263 (type $generated@@549))))
(= (type ($generated@@547 $generated@@549 $generated@@550)) $generated@@551))
 :pattern ( ($generated@@547 $generated@@549 $generated@@550))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@262 $generated@@141)) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@552 ($generated@@546 $generated@@553) $generated@@554) (forall (($generated@@555 Int) ) (!  (=> (and (<= 0 $generated@@555) (< $generated@@555 ($generated@@261 $generated@@552))) ($generated@@248 ($generated@@547 $generated@@552 $generated@@555) $generated@@553 $generated@@554))
 :pattern ( ($generated@@547 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@546 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (=> (= (type $generated@@556) ($generated@@78 $generated@@558 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@461 $generated@@556 $generated@@557) $generated@@557))))
 :pattern ( ($generated@@461 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@559 ($generated@@77 $generated@@560)) $generated@@560)
 :pattern ( ($generated@@77 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@66)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@66) (= ($generated@@561 ($generated@@143 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@143 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@66) (= ($generated@@74 ($generated@@143 $generated@@564)) $generated@@54))
 :pattern ( ($generated@@143 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@66)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@66) (= ($generated@@565 ($generated@@236 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@236 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@66) (= ($generated@@74 ($generated@@236 $generated@@568)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@66)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@66) (= ($generated@@569 ($generated@@162 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@162 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@66) (= ($generated@@74 ($generated@@162 $generated@@572)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@66)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@66) (= ($generated@@573 ($generated@@546 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@546 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@66) (= ($generated@@74 ($generated@@546 $generated@@576)) $generated@@57))
 :pattern ( ($generated@@546 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
(= ($generated@@270 $generated@@578 ($generated@@287 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@287 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@315 $generated@@141 $generated@@141)) (= (type $generated@@580) $generated@@66)) (= (type $generated@@581) $generated@@66)) (= ($generated@@137 $generated@@579 ($generated@@440 $generated@@580 $generated@@581)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@579) $generated@@582))) (and ($generated@@224 ($generated@@83 ($generated@@415 $generated@@579) $generated@@582) $generated@@581) ($generated@@224 $generated@@582 $generated@@580)))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@579) $generated@@582))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@579) $generated@@582))
))))
 :pattern ( ($generated@@137 $generated@@579 ($generated@@440 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) (= ($generated@@137 $generated@@583 ($generated@@448 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@141) ($generated@@0 ($generated@@83 ($generated@@331 $generated@@583) $generated@@586))) (and ($generated@@224 ($generated@@83 ($generated@@423 $generated@@583) $generated@@586) $generated@@585) ($generated@@224 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@83 ($generated@@423 $generated@@583) $generated@@586))
 :pattern ( ($generated@@83 ($generated@@331 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@137 $generated@@583 ($generated@@448 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@141) (= (type $generated@@590) $generated@@141)) (< ($generated@@587 $generated@@589) ($generated@@588 ($generated@@223 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@223 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@141) (= (type $generated@@592) $generated@@141)) (< ($generated@@587 $generated@@592) ($generated@@588 ($generated@@223 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@223 $generated@@591 $generated@@592))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 $generated@@593) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@593 ($generated@@143 $generated@@134))))) (= ($generated@@140 $generated@@593) ($generated@@286 ($generated@@241 0) $generated@@593 1 $generated@@593)))
 :pattern ( ($generated@@140 $generated@@593))
))))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@594 T@U) ($generated@@595 Int) ($generated@@596 Int) ) (!  (=> (and (= (type $generated@@594) $generated@@269) (or ($generated@@388 $generated@@595 $generated@@596) (and (not (= 1 $generated@@139)) (and (<= ($generated@@241 0) $generated@@595) (<= ($generated@@241 0) $generated@@596))))) (and (=> (not (= $generated@@595 ($generated@@241 0))) ($generated@@388 (- $generated@@595 1) ($generated@@407 $generated@@596 ($generated@@241 2)))) (= ($generated@@271 ($generated@@299 $generated@@594) $generated@@595 $generated@@596) (ite (= $generated@@595 ($generated@@241 0)) (= ($generated@@408 $generated@@596 ($generated@@241 2)) ($generated@@241 1)) ($generated@@271 $generated@@594 (- $generated@@595 1) ($generated@@407 $generated@@596 ($generated@@241 2)))))))
 :pattern ( ($generated@@271 ($generated@@299 $generated@@594) $generated@@595 $generated@@596))
))))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@141) (= (type $generated@@598) $generated@@66)) (= (type $generated@@599) $generated@@66)) ($generated@@224 $generated@@597 ($generated@@440 $generated@@598 $generated@@599))) (and (= ($generated@@287 ($generated@@270 ($generated@@315 $generated@@141 $generated@@141) $generated@@597)) $generated@@597) ($generated@@137 ($generated@@270 ($generated@@315 $generated@@141 $generated@@141) $generated@@597) ($generated@@440 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@224 $generated@@597 ($generated@@440 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@141) (= (type $generated@@601) $generated@@66)) (= (type $generated@@602) $generated@@66)) ($generated@@224 $generated@@600 ($generated@@448 $generated@@601 $generated@@602))) (and (= ($generated@@287 ($generated@@270 ($generated@@333 $generated@@141 $generated@@141) $generated@@600)) $generated@@600) ($generated@@137 ($generated@@270 ($generated@@333 $generated@@141 $generated@@141) $generated@@600) ($generated@@448 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@224 $generated@@600 ($generated@@448 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@66) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) $generated@@141)) ($generated@@224 $generated@@605 ($generated@@148 $generated@@603 $generated@@604))) (and (= ($generated@@287 ($generated@@270 $generated@@149 $generated@@605)) $generated@@605) ($generated@@137 ($generated@@270 $generated@@149 $generated@@605) ($generated@@148 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@224 $generated@@605 ($generated@@148 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@607 T@T) ) (! (= (type ($generated@@606 $generated@@607)) ($generated@@78 $generated@@607 $generated@@4))
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@83 ($generated@@606 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@83 ($generated@@606 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@610)))
 (not ($generated@@0 ($generated@@83 ($generated@@477 $generated@@611) $generated@@610))))
 :pattern ( (let (($generated@@611 (type $generated@@610)))
($generated@@83 ($generated@@477 $generated@@611) $generated@@610)))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 Int) ) (! (= ($generated@@408 $generated@@612 $generated@@613) (mod $generated@@612 $generated@@613))
 :pattern ( ($generated@@408 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@71)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@66) (= (type $generated@@617) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@616 $generated@@617)) $generated@@63) (= ($generated@@614 ($generated@@148 $generated@@616 $generated@@617)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@149) (= ($generated@@587 ($generated@@287 $generated@@618)) ($generated@@588 $generated@@618)))
 :pattern ( ($generated@@587 ($generated@@287 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@141) ($generated@@224 $generated@@619 ($generated@@77 0))) (and (= ($generated@@287 ($generated@@270 $generated@@2 $generated@@619)) $generated@@619) ($generated@@137 ($generated@@270 ($generated@@78 $generated@@141 $generated@@4) $generated@@619) ($generated@@77 0))))
 :pattern ( ($generated@@224 $generated@@619 ($generated@@77 0)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@141) (= (type $generated@@621) $generated@@66)) ($generated@@224 $generated@@620 ($generated@@143 $generated@@621))) (and (= ($generated@@287 ($generated@@270 ($generated@@78 $generated@@141 $generated@@4) $generated@@620)) $generated@@620) ($generated@@137 ($generated@@270 ($generated@@78 $generated@@141 $generated@@4) $generated@@620) ($generated@@143 $generated@@621))))
 :pattern ( ($generated@@224 $generated@@620 ($generated@@143 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@141) (= (type $generated@@623) $generated@@66)) ($generated@@224 $generated@@622 ($generated@@236 $generated@@623))) (and (= ($generated@@287 ($generated@@270 ($generated@@78 $generated@@141 $generated@@4) $generated@@622)) $generated@@622) ($generated@@137 ($generated@@270 ($generated@@78 $generated@@141 $generated@@4) $generated@@622) ($generated@@236 $generated@@623))))
 :pattern ( ($generated@@224 $generated@@622 ($generated@@236 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@141) (= (type $generated@@625) $generated@@66)) ($generated@@224 $generated@@624 ($generated@@162 $generated@@625))) (and (= ($generated@@287 ($generated@@270 ($generated@@78 $generated@@141 $generated@@2) $generated@@624)) $generated@@624) ($generated@@137 ($generated@@270 ($generated@@78 $generated@@141 $generated@@2) $generated@@624) ($generated@@162 $generated@@625))))
 :pattern ( ($generated@@224 $generated@@624 ($generated@@162 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@141) (= (type $generated@@627) $generated@@66)) ($generated@@224 $generated@@626 ($generated@@546 $generated@@627))) (and (= ($generated@@287 ($generated@@270 ($generated@@262 $generated@@141) $generated@@626)) $generated@@626) ($generated@@137 ($generated@@270 ($generated@@262 $generated@@141) $generated@@626) ($generated@@546 $generated@@627))))
 :pattern ( ($generated@@224 $generated@@626 ($generated@@546 $generated@@627)))
)))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@628 Int) ) (!  (=> (or ($generated@@384 ($generated@@241 $generated@@628)) (and (not (= 2 $generated@@139)) (<= ($generated@@241 0) $generated@@628))) (and (forall (($generated@@629 Int) ) (!  (=> (<= ($generated@@241 0) $generated@@629) (=> (< $generated@@629 $generated@@628) ($generated@@388 $generated@@629 ($generated@@241 $generated@@628))))
 :pattern ( ($generated@@271 ($generated@@299 $generated@@387) $generated@@629 $generated@@628))
)) (= ($generated@@383 ($generated@@241 $generated@@628)) ($generated@@268 $generated@@46 ($generated@@241 0) $generated@@628 ($generated@@299 $generated@@387) ($generated@@241 $generated@@628)))))
 :weight 3
 :pattern ( ($generated@@383 ($generated@@241 $generated@@628)))
))))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@614 $generated@@134) $generated@@64))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@630) ($generated@@78 $generated@@141 $generated@@2)) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@630 ($generated@@162 $generated@@631) $generated@@632) (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@141) (< 0 ($generated ($generated@@83 $generated@@630 $generated@@633)))) ($generated@@248 $generated@@633 $generated@@631 $generated@@632))
 :pattern ( ($generated@@83 $generated@@630 $generated@@633))
))))
 :pattern ( ($generated@@76 $generated@@630 ($generated@@162 $generated@@631) $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@149) (= (type $generated@@635) $generated@@66)) (= (type $generated@@636) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@247 $generated@@636) (and ($generated@@147 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@66) ($generated@@76 $generated@@634 ($generated@@148 $generated@@635 $generated@@637) $generated@@636))
 :pattern ( ($generated@@76 $generated@@634 ($generated@@148 $generated@@635 $generated@@637) $generated@@636))
))))) ($generated@@248 ($generated@@156 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@248 ($generated@@156 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@149) (= (type $generated@@639) $generated@@66)) (= (type $generated@@640) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@247 $generated@@640) (and ($generated@@147 $generated@@638) (exists (($generated@@641 T@U) ) (!  (and (= (type $generated@@641) $generated@@66) ($generated@@76 $generated@@638 ($generated@@148 $generated@@641 $generated@@639) $generated@@640))
 :pattern ( ($generated@@76 $generated@@638 ($generated@@148 $generated@@641 $generated@@639) $generated@@640))
))))) ($generated@@248 ($generated@@157 $generated@@638) $generated@@639 $generated@@640))
 :pattern ( ($generated@@248 ($generated@@157 $generated@@638) $generated@@639 $generated@@640))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@78 $generated@@141 $generated@@4)) (or ($generated@@142 ($generated@@243 $generated@@642)) (and (not (= 1 $generated@@139)) ($generated@@137 $generated@@642 ($generated@@143 $generated@@134))))) (= ($generated@@140 ($generated@@243 $generated@@642)) ($generated@@286 ($generated@@241 0) ($generated@@243 $generated@@642) 1 $generated@@642)))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@243 $generated@@642)))
))))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@141) (= (type $generated@@644) $generated@@141)) (= ($generated@@223 ($generated@@243 $generated@@643) ($generated@@243 $generated@@644)) ($generated@@243 ($generated@@223 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@223 ($generated@@243 $generated@@643) ($generated@@243 $generated@@644)))
)))
(assert (forall (($generated@@645 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@241 $generated@@645))) ($generated@@243 ($generated@@287 ($generated@@8 $generated@@645))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@241 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ) (! (= ($generated@@287 ($generated@@243 $generated@@646)) ($generated@@243 ($generated@@287 $generated@@646)))
 :pattern ( ($generated@@287 ($generated@@243 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@263 (type $generated@@647))))
 (=> (and (= (type $generated@@647) ($generated@@262 $generated@@648)) (= ($generated@@261 $generated@@647) 0)) (= $generated@@647 ($generated@@260 $generated@@648))))
 :pattern ( ($generated@@261 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@650)))
 (=> (and (and (= (type $generated@@649) ($generated@@78 $generated@@652 $generated@@2)) (= (type $generated@@651) $generated@@2)) (<= 0 ($generated $generated@@651))) (= ($generated@@307 ($generated@@84 $generated@@649 $generated@@650 $generated@@651)) (+ (- ($generated@@307 $generated@@649) ($generated ($generated@@83 $generated@@649 $generated@@650))) ($generated $generated@@651)))))
 :pattern ( ($generated@@307 ($generated@@84 $generated@@649 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@654) $generated@@2)) ($generated@@76 $generated@@654 $generated@@46 $generated@@653))
 :pattern ( ($generated@@76 $generated@@654 $generated@@46 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@656) $generated@@3)) ($generated@@76 $generated@@656 $generated@@47 $generated@@655))
 :pattern ( ($generated@@76 $generated@@656 $generated@@47 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@658) $generated@@4)) ($generated@@76 $generated@@658 $generated@@44 $generated@@657))
 :pattern ( ($generated@@76 $generated@@658 $generated@@44 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@660) $generated@@501)) ($generated@@76 $generated@@660 $generated@@45 $generated@@659))
 :pattern ( ($generated@@76 $generated@@660 $generated@@45 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@662) $generated@@141)) ($generated@@76 $generated@@662 $generated@@48 $generated@@661))
 :pattern ( ($generated@@76 $generated@@662 $generated@@48 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@262 $generated@@141)) (= (type $generated@@664) $generated@@66)) (= ($generated@@137 $generated@@663 ($generated@@546 $generated@@664)) (forall (($generated@@665 Int) ) (!  (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@261 $generated@@663))) ($generated@@224 ($generated@@547 $generated@@663 $generated@@665) $generated@@664))
 :pattern ( ($generated@@547 $generated@@663 $generated@@665))
))))
 :pattern ( ($generated@@137 $generated@@663 ($generated@@546 $generated@@664)))
)))
(assert (forall (($generated@@667 T@U) ) (! (= (type ($generated@@666 $generated@@667)) $generated@@269)
 :pattern ( ($generated@@666 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ($generated@@670 Int) ) (!  (=> (= (type $generated@@668) $generated@@269) (= ($generated@@271 $generated@@668 $generated@@669 $generated@@670) ($generated@@271 $generated@@387 $generated@@669 $generated@@670)))
 :pattern ( ($generated@@271 ($generated@@666 $generated@@668) $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (= (type $generated@@672) ($generated@@262 $generated@@141)) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@261 $generated@@672))) (< ($generated@@588 ($generated@@270 $generated@@149 ($generated@@547 $generated@@672 $generated@@673))) ($generated@@671 $generated@@672))))
 :pattern ( ($generated@@588 ($generated@@270 $generated@@149 ($generated@@547 $generated@@672 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@315 $generated@@141 $generated@@141)) (= (type $generated@@675) $generated@@66)) (= (type $generated@@676) $generated@@66)) ($generated@@137 $generated@@674 ($generated@@440 $generated@@675 $generated@@676))) (and (and ($generated@@137 ($generated@@313 $generated@@674) ($generated@@143 $generated@@675)) ($generated@@137 ($generated@@362 $generated@@674) ($generated@@143 $generated@@676))) ($generated@@137 ($generated@@414 $generated@@674) ($generated@@143 ($generated@@148 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@137 $generated@@674 ($generated@@440 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@678) $generated@@66)) (= (type $generated@@679) $generated@@66)) ($generated@@137 $generated@@677 ($generated@@448 $generated@@678 $generated@@679))) (and (and ($generated@@137 ($generated@@331 $generated@@677) ($generated@@236 $generated@@678)) ($generated@@137 ($generated@@373 $generated@@677) ($generated@@236 $generated@@679))) ($generated@@137 ($generated@@422 $generated@@677) ($generated@@236 ($generated@@148 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@137 $generated@@677 ($generated@@448 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@2) ($generated@@137 $generated@@680 $generated@@46))
 :pattern ( ($generated@@137 $generated@@680 $generated@@46))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@3) ($generated@@137 $generated@@681 $generated@@47))
 :pattern ( ($generated@@137 $generated@@681 $generated@@47))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@4) ($generated@@137 $generated@@682 $generated@@44))
 :pattern ( ($generated@@137 $generated@@682 $generated@@44))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@501) ($generated@@137 $generated@@683 $generated@@45))
 :pattern ( ($generated@@137 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@141) ($generated@@137 $generated@@684 $generated@@48))
 :pattern ( ($generated@@137 $generated@@684 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 (T@U) Bool)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () Int)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () Int)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@687) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@706) ($generated@@78 $generated@@141 $generated@@4))) (= (type $generated@@707) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@709) ($generated@@78 $generated@@141 $generated@@4))) (= (type $generated@@692) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@696) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@710) ($generated@@169 $generated@@79 $generated@@4))) (= (type $generated@@711) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 86) (let (($generated@@712  (=> (and (=> (not (= $generated@@685 0)) ($generated@@384 $generated@@686)) (= (ControlFlow 0 79) (- 0 78))) (= ($generated@@0 ($generated@@83 ($generated@@391 ($generated@@383 $generated@@686) ($generated@@461 ($generated@@606 $generated@@141) ($generated@@287 ($generated@@8 ($generated@@241 0))))) ($generated@@287 ($generated@@8 $generated@@685))))  (and (not (= $generated@@685 0)) ($generated@@0 ($generated@@83 ($generated@@383 $generated@@686) ($generated@@287 ($generated@@8 $generated@@685)))))))))
(let (($generated@@713  (=> (and (= $generated@@685 0) (= (ControlFlow 0 81) 79)) $generated@@712)))
(let (($generated@@714  (=> (and (and (not (= $generated@@685 0)) ($generated@@76 ($generated@@8 $generated@@686) $generated@@134 $generated@@687)) (and ($generated@@384 $generated@@686) (= (ControlFlow 0 80) 79))) $generated@@712)))
(let (($generated@@715  (=> (and (and ($generated@@76 ($generated@@8 $generated@@686) $generated@@134 $generated@@687) ($generated@@384 $generated@@686)) (and ($generated@@137 ($generated@@8 ($generated@@241 0)) $generated@@134) ($generated@@384 $generated@@686))) (and (=> (= (ControlFlow 0 82) 80) $generated@@714) (=> (= (ControlFlow 0 82) 81) $generated@@713)))))
(let (($generated@@716  (=> (=> (and (<= ($generated@@241 0) (- $generated@@685 1)) (< (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) ($generated@@388 (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) (and (=> (= (ControlFlow 0 71) (- 0 73)) (not (= ($generated@@241 2) 0))) (and (=> (= (ControlFlow 0 71) (- 0 72)) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134) (=> (= $generated@@688 ($generated@@407 $generated@@686 ($generated@@241 2))) (=> (and (and ($generated@@76 ($generated@@8 $generated@@688) $generated@@134 $generated@@687) ($generated@@384 ($generated@@407 $generated@@686 ($generated@@241 2)))) (and ($generated@@384 ($generated@@407 $generated@@686 ($generated@@241 2))) (= (ControlFlow 0 71) (- 0 70)))) (=  (and (and (<= ($generated@@241 0) (- $generated@@685 1)) (< (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) ($generated@@271 ($generated@@299 ($generated@@299 $generated@@387)) (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) ($generated@@0 ($generated@@83 ($generated@@383 ($generated@@407 $generated@@686 ($generated@@241 2))) ($generated@@287 ($generated@@8 (- $generated@@685 1))))))))))))))
(let (($generated@@717  (=> (and (not (and (<= ($generated@@241 0) (- $generated@@685 1)) (< (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2))))) (= (ControlFlow 0 75) 71)) $generated@@716)))
(let (($generated@@718  (=> (and (and (<= ($generated@@241 0) (- $generated@@685 1)) (< (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) (not (= ($generated@@241 2) 0))) (=> (and (and (and ($generated@@137 ($generated@@8 (- $generated@@685 1)) $generated@@134) (= $generated@@689 (- $generated@@685 1))) (and ($generated@@76 ($generated@@8 $generated@@689) $generated@@134 $generated@@687) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134))) (and (and (= $generated@@690 ($generated@@407 $generated@@686 ($generated@@241 2))) ($generated@@76 ($generated@@8 $generated@@690) $generated@@134 $generated@@687)) (and ($generated@@388 (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2))) (= (ControlFlow 0 74) 71)))) $generated@@716))))
(let (($generated@@719  (=> (< (- $generated@@685 1) ($generated@@241 0)) (and (=> (= (ControlFlow 0 77) 74) $generated@@718) (=> (= (ControlFlow 0 77) 75) $generated@@717)))))
(let (($generated@@720  (=> (and (<= ($generated@@241 0) (- $generated@@685 1)) (not (= ($generated@@241 2) 0))) (and (=> (= (ControlFlow 0 76) 74) $generated@@718) (=> (= (ControlFlow 0 76) 75) $generated@@717)))))
(let (($generated@@721  (=> (and (=> (and (<= ($generated@@241 0) (- $generated@@685 1)) (< (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) ($generated@@388 (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) (= (ControlFlow 0 43) (- 0 42))) (=  (and (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) ($generated@@271 ($generated@@299 ($generated@@299 $generated@@387)) (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2))))  (and (and (<= ($generated@@241 0) (- $generated@@685 1)) (< (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) ($generated@@271 ($generated@@299 ($generated@@299 $generated@@387)) (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2))))))))
(let (($generated@@722  (=> (and (not (and (<= ($generated@@241 0) (- $generated@@685 1)) (< (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2))))) (= (ControlFlow 0 48) 43)) $generated@@721)))
(let (($generated@@723  (=> (and (<= ($generated@@241 0) (- $generated@@685 1)) (< (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) (and (=> (= (ControlFlow 0 44) (- 0 47)) (not (= ($generated@@241 2) 0))) (and (=> (= (ControlFlow 0 44) (- 0 46)) ($generated@@137 ($generated@@8 (- $generated@@685 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@685 1)) $generated@@134) (=> (and (= $generated@@691 (- $generated@@685 1)) ($generated@@76 ($generated@@8 $generated@@691) $generated@@134 $generated@@692)) (and (=> (= (ControlFlow 0 44) (- 0 45)) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134) (=> (and (and (= $generated@@693 ($generated@@407 $generated@@686 ($generated@@241 2))) ($generated@@76 ($generated@@8 $generated@@693) $generated@@134 $generated@@692)) (and ($generated@@388 (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2))) (= (ControlFlow 0 44) 43))) $generated@@721))))))))))
(let (($generated@@724  (=> (< (- $generated@@685 1) ($generated@@241 0)) (and (=> (= (ControlFlow 0 51) 44) $generated@@723) (=> (= (ControlFlow 0 51) 48) $generated@@722)))))
(let (($generated@@725  (=> (<= ($generated@@241 0) (- $generated@@685 1)) (and (=> (= (ControlFlow 0 49) (- 0 50)) (not (= ($generated@@241 2) 0))) (and (=> (= (ControlFlow 0 49) 44) $generated@@723) (=> (= (ControlFlow 0 49) 48) $generated@@722))))))
(let (($generated@@726  (=> (and (not (and (< 0 $generated@@685) ($generated@@271 ($generated@@299 $generated@@387) (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2))))) (= $generated@@692 $generated@@687)) (and (=> (= (ControlFlow 0 58) 49) $generated@@725) (=> (= (ControlFlow 0 58) 51) $generated@@724)))))
(let (($generated@@727  (=> (and (< 0 $generated@@685) ($generated@@271 ($generated@@299 $generated@@387) (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) (and (=> (= (ControlFlow 0 52) (- 0 57)) ($generated@@137 ($generated@@8 (- $generated@@685 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@685 1)) $generated@@134) (=> (= $generated@@694 (- $generated@@685 1)) (and (=> (= (ControlFlow 0 52) (- 0 56)) (not (= ($generated@@241 2) 0))) (=> (not (= ($generated@@241 2) 0)) (and (=> (= (ControlFlow 0 52) (- 0 55)) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134) (=> (= $generated@@695 ($generated@@407 $generated@@686 ($generated@@241 2))) (and (=> (= (ControlFlow 0 52) (- 0 54)) (=> ($generated@@388 $generated@@694 $generated@@695) (or ($generated@@271 ($generated@@299 $generated@@387) $generated@@694 $generated@@695) (=> (= $generated@@694 ($generated@@241 0)) (= ($generated@@408 $generated@@695 ($generated@@241 2)) ($generated@@241 1)))))) (=> (=> ($generated@@388 $generated@@694 $generated@@695) (or ($generated@@271 ($generated@@299 $generated@@387) $generated@@694 $generated@@695) (=> (= $generated@@694 ($generated@@241 0)) (= ($generated@@408 $generated@@695 ($generated@@241 2)) ($generated@@241 1))))) (and (=> (= (ControlFlow 0 52) (- 0 53)) (=> ($generated@@388 $generated@@694 $generated@@695) (or ($generated@@271 ($generated@@299 $generated@@387) $generated@@694 $generated@@695) (=> (not (= $generated@@694 ($generated@@241 0))) ($generated@@271 ($generated@@299 ($generated@@299 $generated@@387)) (- $generated@@694 1) ($generated@@407 $generated@@695 ($generated@@241 2))))))) (=> (=> ($generated@@388 $generated@@694 $generated@@695) (or ($generated@@271 ($generated@@299 $generated@@387) $generated@@694 $generated@@695) (=> (not (= $generated@@694 ($generated@@241 0))) ($generated@@271 ($generated@@299 ($generated@@299 $generated@@387)) (- $generated@@694 1) ($generated@@407 $generated@@695 ($generated@@241 2)))))) (=> (and (and (and ($generated@@247 $generated@@696) ($generated@@697 $generated@@696)) (< $generated@@694 $generated@@695)) (and (= $generated@@687 $generated@@696) (= $generated@@692 $generated@@696))) (and (=> (= (ControlFlow 0 52) 49) $generated@@725) (=> (= (ControlFlow 0 52) 51) $generated@@724))))))))))))))))))
(let (($generated@@728  (=> (=> (< 0 $generated@@685) ($generated@@388 (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) (and (=> (= (ControlFlow 0 59) 52) $generated@@727) (=> (= (ControlFlow 0 59) 58) $generated@@726)))))
(let (($generated@@729  (=> (and (<= $generated@@685 0) (= (ControlFlow 0 64) 59)) $generated@@728)))
(let (($generated@@730  (=> (< 0 $generated@@685) (and (=> (= (ControlFlow 0 60) (- 0 63)) (not (= ($generated@@241 2) 0))) (=> (not (= ($generated@@241 2) 0)) (and (=> (= (ControlFlow 0 60) (- 0 62)) ($generated@@137 ($generated@@8 (- $generated@@685 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@685 1)) $generated@@134) (=> (and (= $generated@@698 (- $generated@@685 1)) ($generated@@76 ($generated@@8 $generated@@698) $generated@@134 $generated@@687)) (and (=> (= (ControlFlow 0 60) (- 0 61)) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134) (=> (and (and (= $generated@@699 ($generated@@407 $generated@@686 ($generated@@241 2))) ($generated@@76 ($generated@@8 $generated@@699) $generated@@134 $generated@@687)) (and ($generated@@388 (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2))) (= (ControlFlow 0 60) 59))) $generated@@728)))))))))))
(let (($generated@@731  (=> (=> (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) ($generated@@388 (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) (and (=> (= (ControlFlow 0 65) 60) $generated@@730) (=> (= (ControlFlow 0 65) 64) $generated@@729)))))
(let (($generated@@732  (=> (and (not (and (< 0 $generated@@685) (< $generated@@685 $generated@@686))) (= (ControlFlow 0 67) 65)) $generated@@731)))
(let (($generated@@733  (=> (and (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) (not (= ($generated@@241 2) 0))) (=> (and (and (and ($generated@@137 ($generated@@8 (- $generated@@685 1)) $generated@@134) (= $generated@@700 (- $generated@@685 1))) (and ($generated@@76 ($generated@@8 $generated@@700) $generated@@134 $generated@@687) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134))) (and (and (= $generated@@701 ($generated@@407 $generated@@686 ($generated@@241 2))) ($generated@@76 ($generated@@8 $generated@@701) $generated@@134 $generated@@687)) (and ($generated@@388 (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2))) (= (ControlFlow 0 66) 65)))) $generated@@731))))
(let (($generated@@734  (=> (<= $generated@@685 0) (and (=> (= (ControlFlow 0 69) 66) $generated@@733) (=> (= (ControlFlow 0 69) 67) $generated@@732)))))
(let (($generated@@735  (=> (< 0 $generated@@685) (and (=> (= (ControlFlow 0 68) 66) $generated@@733) (=> (= (ControlFlow 0 68) 67) $generated@@732)))))
(let (($generated@@736  (=> (and (=> (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) ($generated@@388 (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2)))) (= (ControlFlow 0 29) (- 0 28))) (=  (and (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) ($generated@@271 ($generated@@299 ($generated@@299 $generated@@387)) $generated@@685 $generated@@686))  (and (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) ($generated@@271 ($generated@@299 ($generated@@299 $generated@@387)) (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2))))))))
(let (($generated@@737  (=> (and (not (and (< 0 $generated@@685) (< $generated@@685 $generated@@686))) (= (ControlFlow 0 34) 29)) $generated@@736)))
(let (($generated@@738  (=> (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) (and (=> (= (ControlFlow 0 30) (- 0 33)) (not (= ($generated@@241 2) 0))) (and (=> (= (ControlFlow 0 30) (- 0 32)) ($generated@@137 ($generated@@8 (- $generated@@685 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@685 1)) $generated@@134) (=> (and (= $generated@@702 (- $generated@@685 1)) ($generated@@76 ($generated@@8 $generated@@702) $generated@@134 $generated@@687)) (and (=> (= (ControlFlow 0 30) (- 0 31)) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134) (=> (and (and (= $generated@@703 ($generated@@407 $generated@@686 ($generated@@241 2))) ($generated@@76 ($generated@@8 $generated@@703) $generated@@134 $generated@@687)) (and ($generated@@388 (- $generated@@685 1) ($generated@@407 $generated@@686 ($generated@@241 2))) (= (ControlFlow 0 30) 29))) $generated@@736))))))))))
(let (($generated@@739  (=> (<= $generated@@685 0) (and (=> (= (ControlFlow 0 36) 30) $generated@@738) (=> (= (ControlFlow 0 36) 34) $generated@@737)))))
(let (($generated@@740  (=> (< 0 $generated@@685) (and (=> (= (ControlFlow 0 35) 30) $generated@@738) (=> (= (ControlFlow 0 35) 34) $generated@@737)))))
(let (($generated@@741  (=> (=> (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) ($generated@@388 $generated@@685 $generated@@686)) (and (=> (= (ControlFlow 0 37) 35) $generated@@740) (=> (= (ControlFlow 0 37) 36) $generated@@739)))))
(let (($generated@@742  (=> (and (not (and (< 0 $generated@@685) (< $generated@@685 $generated@@686))) (= (ControlFlow 0 39) 37)) $generated@@741)))
(let (($generated@@743  (=> (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@685) $generated@@134 $generated@@687) ($generated@@76 ($generated@@8 $generated@@686) $generated@@134 $generated@@687)) (and ($generated@@388 $generated@@685 $generated@@686) (= (ControlFlow 0 38) 37))) $generated@@741))))
(let (($generated@@744  (=> (<= $generated@@685 0) (and (=> (= (ControlFlow 0 41) 38) $generated@@743) (=> (= (ControlFlow 0 41) 39) $generated@@742)))))
(let (($generated@@745  (=> (< 0 $generated@@685) (and (=> (= (ControlFlow 0 40) 38) $generated@@743) (=> (= (ControlFlow 0 40) 39) $generated@@742)))))
(let (($generated@@746  (=> (and (=> (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) ($generated@@388 $generated@@685 $generated@@686)) (= (ControlFlow 0 20) (- 0 19))) (=  (and (not (= $generated@@685 0)) ($generated@@0 ($generated@@83 ($generated@@383 $generated@@686) ($generated@@287 ($generated@@8 $generated@@685)))))  (and (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) ($generated@@271 ($generated@@299 ($generated@@299 $generated@@387)) $generated@@685 $generated@@686))))))
(let (($generated@@747  (=> (and (not (and (< 0 $generated@@685) (< $generated@@685 $generated@@686))) (= (ControlFlow 0 22) 20)) $generated@@746)))
(let (($generated@@748  (=> (and (< 0 $generated@@685) (< $generated@@685 $generated@@686)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@685) $generated@@134 $generated@@687) ($generated@@76 ($generated@@8 $generated@@686) $generated@@134 $generated@@687)) (and ($generated@@388 $generated@@685 $generated@@686) (= (ControlFlow 0 21) 20))) $generated@@746))))
(let (($generated@@749  (=> (<= $generated@@685 0) (and (=> (= (ControlFlow 0 24) 21) $generated@@748) (=> (= (ControlFlow 0 24) 22) $generated@@747)))))
(let (($generated@@750  (=> (< 0 $generated@@685) (and (=> (= (ControlFlow 0 23) 21) $generated@@748) (=> (= (ControlFlow 0 23) 22) $generated@@747)))))
(let (($generated@@751  (=> (=> (not (= $generated@@685 0)) ($generated@@384 $generated@@686)) (and (=> (= (ControlFlow 0 25) 23) $generated@@750) (=> (= (ControlFlow 0 25) 24) $generated@@749)))))
(let (($generated@@752  (=> (and (= $generated@@685 0) (= (ControlFlow 0 27) 25)) $generated@@751)))
(let (($generated@@753  (=> (and (and (not (= $generated@@685 0)) ($generated@@76 ($generated@@8 $generated@@686) $generated@@134 $generated@@687)) (and ($generated@@384 $generated@@686) (= (ControlFlow 0 26) 25))) $generated@@751)))
(let (($generated@@754  (=> (and (= ($generated@@0 ($generated@@83 ($generated@@391 ($generated@@383 $generated@@686) ($generated@@461 ($generated@@606 $generated@@141) ($generated@@287 ($generated@@8 ($generated@@241 0))))) ($generated@@287 ($generated@@8 $generated@@685)))) ($generated@@0 ($generated@@83 ($generated@@140 ($generated@@383 ($generated@@407 $generated@@686 ($generated@@241 2)))) ($generated@@287 ($generated@@8 $generated@@685))))) (= (ControlFlow 0 18) (- 0 17))) (= ($generated@@0 ($generated@@83 ($generated@@391 ($generated@@383 $generated@@686) ($generated@@461 ($generated@@606 $generated@@141) ($generated@@287 ($generated@@8 ($generated@@241 0))))) ($generated@@287 ($generated@@8 $generated@@685)))) ($generated@@0 ($generated@@83 ($generated@@140 ($generated@@383 ($generated@@407 $generated@@686 ($generated@@241 2)))) ($generated@@287 ($generated@@8 $generated@@685))))))))
(let (($generated@@755  (=> (and (not (= ($generated@@241 2) 0)) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134)) (=> (and (and (= $generated@@704 ($generated@@407 $generated@@686 ($generated@@241 2))) ($generated@@76 ($generated@@8 $generated@@704) $generated@@134 $generated@@687)) (and ($generated@@384 ($generated@@407 $generated@@686 ($generated@@241 2))) ($generated@@384 ($generated@@407 $generated@@686 ($generated@@241 2))))) (and (=> (= (ControlFlow 0 12) (- 0 16)) (not (= ($generated@@241 2) 0))) (=> (not (= ($generated@@241 2) 0)) (and (=> (= (ControlFlow 0 12) (- 0 15)) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134) (=> (= $generated@@705 ($generated@@407 $generated@@686 ($generated@@241 2))) (=> (and (and ($generated@@76 ($generated@@8 $generated@@705) $generated@@134 $generated@@687) ($generated@@384 ($generated@@407 $generated@@686 ($generated@@241 2)))) (and ($generated@@384 ($generated@@407 $generated@@686 ($generated@@241 2))) (= $generated@@706 ($generated@@383 ($generated@@407 $generated@@686 ($generated@@241 2)))))) (=> (and (and (and ($generated@@247 $generated@@707) ($generated@@697 $generated@@707)) ($generated@@142 $generated@@706)) (and (forall (($generated@@756 T@U) ) (!  (=> (and (= (type $generated@@756) $generated@@2) true) (= ($generated@@0 ($generated@@83 $generated@@706 ($generated@@287 $generated@@756))) ($generated@@0 ($generated@@83 ($generated@@140 $generated@@706) ($generated@@287 ($generated@@8 (+ ($generated $generated@@756) 1)))))))
 :pattern ( ($generated@@83 $generated@@706 ($generated@@287 $generated@@756)))
)) (= $generated@@687 $generated@@707))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (not (= ($generated@@241 2) 0))) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134) (=> (and (= $generated@@708 ($generated@@407 $generated@@686 ($generated@@241 2))) ($generated@@76 ($generated@@8 $generated@@708) $generated@@134 $generated@@707)) (=> (and (and (and ($generated@@384 ($generated@@407 $generated@@686 ($generated@@241 2))) (= $generated@@709 ($generated@@383 ($generated@@407 $generated@@686 ($generated@@241 2))))) (and ($generated@@76 $generated@@709 ($generated@@143 $generated@@134) $generated@@707) ($generated@@142 ($generated@@383 ($generated@@407 $generated@@686 ($generated@@241 2)))))) (and (and ($generated@@384 ($generated@@407 $generated@@686 ($generated@@241 2))) ($generated@@142 ($generated@@383 ($generated@@407 $generated@@686 ($generated@@241 2))))) (= (ControlFlow 0 12) (- 0 11)))) (= ($generated@@0 ($generated@@83 ($generated@@383 ($generated@@407 $generated@@686 ($generated@@241 2))) ($generated@@287 ($generated@@8 (- $generated@@685 1))))) ($generated@@0 ($generated@@83 ($generated@@140 ($generated@@383 ($generated@@407 $generated@@686 ($generated@@241 2)))) ($generated@@287 ($generated@@8 $generated@@685)))))))))))))))))))))
(let (($generated@@757  (=> ($generated@@76 ($generated@@8 $generated@@686) $generated@@134 $generated@@687) (=> (and ($generated@@384 $generated@@686) (= (ControlFlow 0 10) (- 0 9))) ($generated@@137 ($generated@@8 ($generated@@241 0)) $generated@@134)))))
(let (($generated@@758  (=> (and ($generated@@76 ($generated@@8 $generated@@686) $generated@@134 $generated@@687) ($generated@@384 $generated@@686)) (and (=> (= (ControlFlow 0 6) (- 0 8)) ($generated@@137 ($generated@@8 ($generated@@241 0)) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@241 0)) $generated@@134) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not (= ($generated@@241 2) 0))) (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@137 ($generated@@8 ($generated@@407 $generated@@686 ($generated@@241 2))) $generated@@134))))))))
(let (($generated@@759  (=> (<= ($generated@@241 0) $generated@@685) (and (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 83) 6) $generated@@758) (=> (= (ControlFlow 0 83) 10) $generated@@757)) (=> (= (ControlFlow 0 83) 82) $generated@@715)) (=> (= (ControlFlow 0 83) 12) $generated@@755)) (=> (= (ControlFlow 0 83) 18) $generated@@754)) (=> (= (ControlFlow 0 83) 76) $generated@@720)) (=> (= (ControlFlow 0 83) 77) $generated@@719)) (=> (= (ControlFlow 0 83) 68) $generated@@735)) (=> (= (ControlFlow 0 83) 69) $generated@@734)) (=> (= (ControlFlow 0 83) 40) $generated@@745)) (=> (= (ControlFlow 0 83) 41) $generated@@744)) (=> (= (ControlFlow 0 83) 26) $generated@@753)) (=> (= (ControlFlow 0 83) 27) $generated@@752)))))
(let (($generated@@760  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@349 ($generated@@391 ($generated@@383 $generated@@686) ($generated@@461 ($generated@@606 $generated@@141) ($generated@@287 ($generated@@8 ($generated@@241 0))))) ($generated@@140 ($generated@@383 ($generated@@407 $generated@@686 ($generated@@241 2))))))))
(let (($generated@@761  (=> (and (forall (($generated@@762 T@U) ) (!  (=> (= (type $generated@@762) $generated@@2) (=> (and (<= ($generated@@241 0) ($generated $generated@@762)) ($generated@@0 ($generated@@243 ($generated@@11 true)))) (= ($generated@@0 ($generated@@83 ($generated@@391 ($generated@@383 $generated@@686) ($generated@@461 ($generated@@606 $generated@@141) ($generated@@287 ($generated@@8 ($generated@@241 0))))) ($generated@@287 $generated@@762))) ($generated@@0 ($generated@@83 ($generated@@140 ($generated@@383 ($generated@@407 $generated@@686 ($generated@@241 2)))) ($generated@@287 $generated@@762))))))
 :pattern ( ($generated@@83 ($generated@@140 ($generated@@383 ($generated@@407 $generated@@686 2))) ($generated@@287 $generated@@762)))
 :pattern ( ($generated@@83 ($generated@@391 ($generated@@383 $generated@@686) ($generated@@461 ($generated@@606 $generated@@141) ($generated@@287 ($generated@@8 0)))) ($generated@@287 $generated@@762)))
)) (= (ControlFlow 0 4) 2)) $generated@@760)))
(let (($generated@@763  (=> (not (= $generated@@686 ($generated@@241 0))) (and (=> (= (ControlFlow 0 84) 83) $generated@@759) (=> (= (ControlFlow 0 84) 4) $generated@@761)))))
(let (($generated@@764  (=> (and (= $generated@@686 ($generated@@241 0)) (= (ControlFlow 0 3) 2)) $generated@@760)))
(let (($generated@@765  (=> (= $generated@@710 ($generated@@168 $generated@@711 $generated@@687 $generated@@60 false)) (and (=> (= (ControlFlow 0 85) 3) $generated@@764) (=> (= (ControlFlow 0 85) 84) $generated@@763)))))
(let (($generated@@766  (=> (and (and (and ($generated@@247 $generated@@687) ($generated@@697 $generated@@687)) (<= ($generated@@241 0) $generated@@686)) (and (= 3 $generated@@139) (= (ControlFlow 0 86) 85))) $generated@@765)))
$generated@@766))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U Int Int) Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (Int) Bool)
(declare-fun $generated@@171 (Int) Bool)
(declare-fun $generated@@172 (Int) Int)
(declare-fun $generated@@173 (Int Int) Int)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@281 (T@U Int Int T@U Int) T@U)
(declare-fun $generated@@282 (T@T T@U) T@U)
(declare-fun $generated@@283 (T@U Int Int) Bool)
(declare-fun $generated@@298 (Int T@U Int T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@361 (T@U T@U) Bool)
(declare-fun $generated@@369 (Int Int) Bool)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@402 (Int) T@U)
(declare-fun $generated@@403 (Int) Bool)
(declare-fun $generated@@406 (Int Int) Bool)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@428 (Int Int) Int)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@461 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@U T@U) T@U)
(declare-fun $generated@@482 (T@U T@U) T@U)
(declare-fun $generated@@498 (T@T) T@U)
(declare-fun $generated@@522 () T@T)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@568 (T@U Int) T@U)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(declare-fun $generated@@609 (T@U) Int)
(declare-fun $generated@@627 (T@T) T@U)
(declare-fun $generated@@635 (T@U) T@U)
(declare-fun $generated@@651 (T@U T@U) Bool)
(declare-fun $generated@@698 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@138)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@138))
))) (= (type $generated@@137) $generated@@136)))
(assert (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (= (type $generated@@139) $generated@@136) (= ($generated@@134 $generated@@139 $generated@@140 $generated@@141) ($generated@@134 $generated@@137 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@134 ($generated@@135 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@66))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@77 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@77 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@148 $generated@@152)) ($generated@@78 $generated@@149 $generated@@4))
 :pattern ( ($generated@@148 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@153)) $generated@@66)
 :pattern ( ($generated@@151 $generated@@153))
))))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@154) ($generated@@78 $generated@@149 $generated@@4)) (or ($generated@@150 $generated@@154) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@154 ($generated@@151 $generated@@142))))) ($generated@@145 ($generated@@148 $generated@@154) ($generated@@151 $generated@@142)))
 :pattern ( ($generated@@148 $generated@@154))
))))
(assert  (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@66)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@66) (= (type $generated@@161) $generated@@66)) (= (type $generated@@162) $generated@@157)) ($generated@@145 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@145 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@149)
 :pattern ( ($generated@@164 $generated@@166))
)) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@149)
 :pattern ( ($generated@@165 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@157) (= (type $generated@@169) $generated@@157)) true) (= ($generated@@163 $generated@@168 $generated@@169)  (and (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)) (= ($generated@@165 $generated@@168) ($generated@@165 $generated@@169)))))
 :pattern ( ($generated@@163 $generated@@168 $generated@@169))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@174 Int) ) (!  (=> (or ($generated@@171 $generated@@174) (and (not (= 1 $generated@@147)) (<= ($generated@@172 0) $generated@@174))) (= ($generated@@170 $generated@@174) (= ($generated@@173 $generated@@174 ($generated@@172 2)) ($generated@@172 0))))
 :pattern ( ($generated@@170 $generated@@174))
))))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@66)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@78 $generated@@149 $generated@@2)) (= (type $generated@@179) $generated@@66)) ($generated@@145 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@145 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 17)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@79 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@69 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@79) (= (type $generated@@230) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@231) ($generated@@68 $generated@@4))) (= (type $generated@@233) $generated@@79)) (= (type $generated@@234) ($generated@@68 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@157)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@66) (= (type $generated@@241) $generated@@66)) (= (type $generated@@242) $generated@@149)) (= (type $generated@@243) $generated@@149)) (= ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@156 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@156 $generated@@240 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@157) (= (type $generated@@245) $generated@@157)) (= ($generated@@163 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@163 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@78 $generated@@149 $generated@@4)) (= (type $generated@@247) $generated@@66)) (= ($generated@@145 $generated@@246 ($generated@@151 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@149) ($generated@@0 ($generated@@83 $generated@@246 $generated@@248))) ($generated@@237 $generated@@248 $generated@@247))
 :pattern ( ($generated@@83 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@145 $generated@@246 ($generated@@151 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@66)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@78 $generated@@149 $generated@@4)) (= (type $generated@@252) $generated@@66)) (= ($generated@@145 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@149) ($generated@@0 ($generated@@83 $generated@@251 $generated@@253))) ($generated@@237 $generated@@253 $generated@@252))
 :pattern ( ($generated@@83 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@145 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@172 $generated@@254) $generated@@254)
 :pattern ( ($generated@@172 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@66) (= (type $generated@@262) $generated@@66)) (= (type $generated@@263) $generated@@149)) (= (type $generated@@264) $generated@@149)) (= (type $generated@@265) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@259 $generated@@265)) (= ($generated@@76 ($generated@@236 $generated@@263 $generated@@264) ($generated@@156 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@263 $generated@@264) ($generated@@156 $generated@@261 $generated@@262) $generated@@265))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@266 Int) ) (!  (=> (or ($generated@@171 ($generated@@172 $generated@@266)) (and (not (= 1 $generated@@147)) (<= ($generated@@172 0) $generated@@266))) (= ($generated@@170 ($generated@@172 $generated@@266)) (= ($generated@@172 ($generated@@173 $generated@@266 ($generated@@172 2))) ($generated@@172 0))))
 :weight 3
 :pattern ( ($generated@@170 ($generated@@172 $generated@@266)))
))))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@70)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@157) (= ($generated@@155 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@62)))
 :pattern ( ($generated@@155 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@157) ($generated@@155 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@149) (= (type $generated@@272) $generated@@149)) (= $generated@@270 ($generated@@236 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@155 $generated@@270))
)))
(assert  (and (and (forall (($generated@@277 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@277)) 18)) (forall (($generated@@278 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@278)) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
))) (forall (($generated@@279 T@T) ) (! (= (type ($generated@@273 $generated@@279)) ($generated@@275 $generated@@279))
 :pattern ( ($generated@@273 $generated@@279))
))))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@280)) 0)
 :pattern ( ($generated@@273 $generated@@280))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 Int) ($generated@@286 Int) ($generated@@287 T@U) ($generated@@288 Int) ) (! (= (type ($generated@@281 $generated@@284 $generated@@285 $generated@@286 $generated@@287 $generated@@288)) ($generated@@78 $generated@@149 $generated@@4))
 :pattern ( ($generated@@281 $generated@@284 $generated@@285 $generated@@286 $generated@@287 $generated@@288))
)) (forall (($generated@@289 T@T) ($generated@@290 T@U) ) (! (= (type ($generated@@282 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@282 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 Int) ($generated@@293 Int) ($generated@@294 T@U) ($generated@@295 Int) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@291) $generated@@66) (= (type $generated@@294) $generated@@136)) (= (type $generated@@296) $generated@@149)) (= ($generated@@0 ($generated@@83 ($generated@@281 $generated@@291 $generated@@292 $generated@@293 $generated@@294 $generated@@295) $generated@@296))  (and ($generated@@237 $generated@@296 $generated@@291) (and (and (<= $generated@@292 ($generated ($generated@@282 $generated@@2 $generated@@296))) (< ($generated ($generated@@282 $generated@@2 $generated@@296)) $generated@@293)) ($generated@@283 $generated@@294 ($generated ($generated@@282 $generated@@2 $generated@@296)) $generated@@295)))))
 :pattern ( ($generated@@83 ($generated@@281 $generated@@291 $generated@@292 $generated@@293 $generated@@294 $generated@@295) $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@2) (= ($generated@@145 $generated@@297 $generated@@142) (<= ($generated@@172 0) ($generated $generated@@297))))
 :pattern ( ($generated@@145 $generated@@297 $generated@@142))
)))
(assert  (and (forall (($generated@@300 Int) ($generated@@301 T@U) ($generated@@302 Int) ($generated@@303 T@U) ) (! (= (type ($generated@@298 $generated@@300 $generated@@301 $generated@@302 $generated@@303)) ($generated@@78 $generated@@149 $generated@@4))
 :pattern ( ($generated@@298 $generated@@300 $generated@@301 $generated@@302 $generated@@303))
)) (forall (($generated@@304 T@U) ) (! (= (type ($generated@@299 $generated@@304)) $generated@@149)
 :pattern ( ($generated@@299 $generated@@304))
))))
(assert (forall (($generated@@305 Int) ($generated@@306 T@U) ($generated@@307 Int) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (= (type $generated@@306) ($generated@@78 $generated@@149 $generated@@4)) (= (type $generated@@308) ($generated@@78 $generated@@149 $generated@@4))) (= (type $generated@@309) $generated@@149)) (= ($generated@@0 ($generated@@83 ($generated@@298 $generated@@305 $generated@@306 $generated@@307 $generated@@308) $generated@@309)) (exists (($generated@@310 Int) ) (!  (and (and (<= $generated@@305 $generated@@310) ($generated@@0 ($generated@@83 $generated@@306 ($generated@@299 ($generated@@8 $generated@@310))))) (= $generated@@309 ($generated@@299 ($generated@@8 (+ $generated@@310 $generated@@307)))))
 :pattern ( ($generated@@83 $generated@@308 ($generated@@299 ($generated@@8 $generated@@310))))
))))
 :pattern ( ($generated@@83 ($generated@@298 $generated@@305 $generated@@306 $generated@@307 $generated@@308) $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@136)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 Int) ($generated@@315 Int) ) (!  (=> (= (type $generated@@313) $generated@@136) (= ($generated@@283 ($generated@@311 $generated@@313) $generated@@314 $generated@@315) ($generated@@283 $generated@@313 $generated@@314 $generated@@315)))
 :pattern ( ($generated@@283 ($generated@@311 $generated@@313) $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@66) (= (type $generated@@318) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@260 ($generated@@299 $generated@@316) $generated@@317 $generated@@318) ($generated@@76 $generated@@316 $generated@@317 $generated@@318)))
 :pattern ( ($generated@@260 ($generated@@299 $generated@@316) $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@321 T@T) ) (! (= (type ($generated@@320 $generated@@321)) ($generated@@78 $generated@@321 $generated@@2))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@81 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@78 $generated@@323 $generated@@2)) (and (= (= ($generated@@319 $generated@@322) 0) (= $generated@@322 ($generated@@320 $generated@@323))) (=> (not (= ($generated@@319 $generated@@322) 0)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) (< 0 ($generated ($generated@@83 $generated@@322 $generated@@324))))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@78 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@83 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@83 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 20)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@78 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@83 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@83 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@81 (type $generated@@362))))
 (=> (and (= (type $generated@@362) ($generated@@78 $generated@@364 $generated@@4)) (= (type $generated@@363) ($generated@@78 $generated@@364 $generated@@4))) (= ($generated@@361 $generated@@362 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (= ($generated@@0 ($generated@@83 $generated@@362 $generated@@365)) ($generated@@0 ($generated@@83 $generated@@363 $generated@@365))))
 :pattern ( ($generated@@83 $generated@@362 $generated@@365))
 :pattern ( ($generated@@83 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@81 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@78 $generated@@367 $generated@@2)) (= ($generated@@176 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (and (<= 0 ($generated ($generated@@83 $generated@@366 $generated@@368))) (<= ($generated ($generated@@83 $generated@@366 $generated@@368)) ($generated@@319 $generated@@366))))
 :pattern ( ($generated@@83 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@176 $generated@@366))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@370 T@U) ($generated@@371 Int) ($generated@@372 Int) ) (!  (=> (and (= (type $generated@@370) $generated@@136) (or ($generated@@369 $generated@@371 $generated@@372) (and (not (= 1 $generated@@147)) (and (<= ($generated@@172 0) $generated@@371) (<= ($generated@@172 0) $generated@@372))))) (<= ($generated@@172 0) ($generated@@134 $generated@@370 $generated@@371 $generated@@372)))
 :pattern ( ($generated@@134 $generated@@370 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@149) ($generated@@237 $generated@@373 $generated@@142)) (and (= ($generated@@299 ($generated@@282 $generated@@2 $generated@@373)) $generated@@373) ($generated@@145 ($generated@@282 $generated@@2 $generated@@373) $generated@@142)))
 :pattern ( ($generated@@237 $generated@@373 $generated@@142))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@329 (type $generated@@374))))
(let (($generated@@376 ($generated@@328 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@327 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@326 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@83 ($generated@@325 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@325 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@329 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@78 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@329 (type $generated@@381))))
(let (($generated@@383 ($generated@@328 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@327 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@326 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@83 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@347 (type $generated@@385))))
(let (($generated@@387 ($generated@@346 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@345 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@344 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) ($generated@@0 ($generated@@83 ($generated@@343 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@343 $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@347 (type $generated@@390))))
(= (type ($generated@@389 $generated@@390)) ($generated@@78 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@347 (type $generated@@392))))
(let (($generated@@394 ($generated@@346 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@345 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@344 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@393) ($generated@@0 ($generated@@83 ($generated@@389 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@389 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 Int) ($generated@@398 Int) ) (!  (=> (= (type $generated@@396) $generated@@136) (= ($generated@@134 ($generated@@311 $generated@@396) $generated@@397 $generated@@398) ($generated@@134 $generated@@396 $generated@@397 $generated@@398)))
 :pattern ( ($generated@@134 ($generated@@311 $generated@@396) $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@78 $generated@@149 $generated@@2)) (= (type $generated@@400) $generated@@66)) (= ($generated@@145 $generated@@399 ($generated@@175 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@149) (< 0 ($generated ($generated@@83 $generated@@399 $generated@@401)))) ($generated@@237 $generated@@401 $generated@@400))
 :pattern ( ($generated@@83 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@145 $generated@@399 ($generated@@175 $generated@@400)))
)))
(assert (forall (($generated@@404 Int) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@78 $generated@@149 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)))
(assert  (=> (<= 2 $generated@@147) (forall (($generated@@405 Int) ) (!  (=> (or ($generated@@403 $generated@@405) (and (not (= 2 $generated@@147)) (<= ($generated@@172 0) $generated@@405))) ($generated@@145 ($generated@@402 $generated@@405) ($generated@@151 $generated@@142)))
 :pattern ( ($generated@@402 $generated@@405))
))))
(assert  (=> (<= 2 $generated@@147) (forall (($generated@@407 Int) ) (!  (=> (or ($generated@@403 $generated@@407) (and (not (= 2 $generated@@147)) (<= ($generated@@172 0) $generated@@407))) (and (forall (($generated@@408 Int) ) (!  (=> (<= ($generated@@172 0) $generated@@408) (=> (< $generated@@408 $generated@@407) ($generated@@406 $generated@@408 $generated@@407)))
 :pattern ( ($generated@@283 ($generated@@311 $generated@@137) $generated@@408 $generated@@407))
)) (= ($generated@@402 $generated@@407) ($generated@@281 $generated@@46 ($generated@@172 0) $generated@@407 ($generated@@311 $generated@@137) $generated@@407))))
 :pattern ( ($generated@@402 $generated@@407))
))))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@409 T@U) ($generated@@410 Int) ($generated@@411 Int) ) (!  (=> (and (= (type $generated@@409) $generated@@136) (or ($generated@@369 ($generated@@172 $generated@@410) ($generated@@172 $generated@@411)) (and (not (= 1 $generated@@147)) (and (<= ($generated@@172 0) $generated@@410) (<= ($generated@@172 0) $generated@@411))))) (and (=> (not (= ($generated@@172 $generated@@411) ($generated@@172 0))) (=> (not (= ($generated@@172 $generated@@410) ($generated@@172 0))) (and ($generated@@369 ($generated@@172 (- $generated@@410 1)) ($generated@@172 $generated@@411)) ($generated@@369 ($generated@@172 (- $generated@@410 1)) ($generated@@172 (- $generated@@411 1)))))) (= ($generated@@134 ($generated@@311 $generated@@409) ($generated@@172 $generated@@410) ($generated@@172 $generated@@411)) (ite (= ($generated@@172 $generated@@411) ($generated@@172 0)) 1 (ite (= ($generated@@172 $generated@@410) ($generated@@172 0)) 0 (+ ($generated@@134 ($generated@@311 $generated@@409) ($generated@@172 (- $generated@@410 1)) ($generated@@172 $generated@@411)) ($generated@@134 ($generated@@311 $generated@@409) ($generated@@172 (- $generated@@410 1)) ($generated@@172 (- $generated@@411 1)))))))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@311 $generated@@409) ($generated@@172 $generated@@410) ($generated@@172 $generated@@411)))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@81 (type $generated@@413))))
(= (type ($generated@@412 $generated@@413 $generated@@414)) ($generated@@78 $generated@@415 $generated@@4)))
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
 (=> (and (= (type $generated@@416) ($generated@@78 $generated@@419 $generated@@4)) (= (type $generated@@417) ($generated@@78 $generated@@419 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@83 $generated@@416 $generated@@418)) (not ($generated@@0 ($generated@@83 $generated@@417 $generated@@418)))))))
 :pattern ( ($generated@@83 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@420) ($generated@@78 $generated@@149 $generated@@4)) (= (type $generated@@421) $generated@@66)) (= (type $generated@@422) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@420 ($generated@@151 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@149) ($generated@@0 ($generated@@83 $generated@@420 $generated@@423))) ($generated@@260 $generated@@423 $generated@@421 $generated@@422))
 :pattern ( ($generated@@83 $generated@@420 $generated@@423))
))))
 :pattern ( ($generated@@76 $generated@@420 ($generated@@151 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@424) ($generated@@78 $generated@@149 $generated@@4)) (= (type $generated@@425) $generated@@66)) (= (type $generated@@426) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@424 ($generated@@249 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@149) ($generated@@0 ($generated@@83 $generated@@424 $generated@@427))) ($generated@@260 $generated@@427 $generated@@425 $generated@@426))
 :pattern ( ($generated@@83 $generated@@424 $generated@@427))
))))
 :pattern ( ($generated@@76 $generated@@424 ($generated@@249 $generated@@425) $generated@@426))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@429 T@U) ($generated@@430 Int) ($generated@@431 Int) ) (!  (=> (and (= (type $generated@@429) $generated@@136) (or ($generated@@406 ($generated@@172 $generated@@430) ($generated@@172 $generated@@431)) (and (not (= 1 $generated@@147)) (and (<= ($generated@@172 0) $generated@@430) (<= ($generated@@172 0) $generated@@431))))) (and (=> (not (= ($generated@@172 $generated@@430) ($generated@@172 0))) ($generated@@406 ($generated@@172 (- $generated@@430 1)) ($generated@@172 ($generated@@428 $generated@@431 ($generated@@172 2))))) (= ($generated@@283 ($generated@@311 $generated@@429) ($generated@@172 $generated@@430) ($generated@@172 $generated@@431)) (ite (= ($generated@@172 $generated@@430) ($generated@@172 0)) (= ($generated@@172 ($generated@@173 $generated@@431 ($generated@@172 2))) ($generated@@172 1)) ($generated@@283 ($generated@@311 $generated@@429) ($generated@@172 (- $generated@@430 1)) ($generated@@172 ($generated@@428 $generated@@431 ($generated@@172 2))))))))
 :weight 3
 :pattern ( ($generated@@283 ($generated@@311 $generated@@429) ($generated@@172 $generated@@430) ($generated@@172 $generated@@431)))
))))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(= ($generated ($generated@@83 ($generated@@320 $generated@@433) $generated@@432)) 0))
 :pattern ( (let (($generated@@433 (type $generated@@432)))
($generated@@83 ($generated@@320 $generated@@433) $generated@@432)))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@434 Int) ) (!  (=> (or ($generated@@171 $generated@@434) (and (not (= 1 $generated@@147)) (<= ($generated@@172 0) $generated@@434))) true)
 :pattern ( ($generated@@170 $generated@@434))
))))
(assert  (and (forall (($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@437)) ($generated@@78 $generated@@149 $generated@@4))
 :pattern ( ($generated@@435 $generated@@437))
)) (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@329 (type $generated@@438))))
(let (($generated@@440 ($generated@@328 (type $generated@@438))))
(= (type ($generated@@436 $generated@@438)) ($generated@@78 $generated@@440 $generated@@439))))
 :pattern ( ($generated@@436 $generated@@438))
))))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@442) $generated@@149)) (= ($generated@@0 ($generated@@83 ($generated@@435 $generated@@441) $generated@@442))  (and ($generated@@0 ($generated@@83 ($generated@@325 $generated@@441) ($generated@@164 ($generated@@282 $generated@@157 $generated@@442)))) (= ($generated@@83 ($generated@@436 $generated@@441) ($generated@@164 ($generated@@282 $generated@@157 $generated@@442))) ($generated@@165 ($generated@@282 $generated@@157 $generated@@442))))))
 :pattern ( ($generated@@83 ($generated@@435 $generated@@441) $generated@@442))
)))
(assert  (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@445)) ($generated@@78 $generated@@149 $generated@@4))
 :pattern ( ($generated@@443 $generated@@445))
)) (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@347 (type $generated@@446))))
(let (($generated@@448 ($generated@@346 (type $generated@@446))))
(= (type ($generated@@444 $generated@@446)) ($generated@@78 $generated@@448 $generated@@447))))
 :pattern ( ($generated@@444 $generated@@446))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@345 $generated@@149 $generated@@149)) (= (type $generated@@450) $generated@@149)) (= ($generated@@0 ($generated@@83 ($generated@@443 $generated@@449) $generated@@450))  (and ($generated@@0 ($generated@@83 ($generated@@343 $generated@@449) ($generated@@164 ($generated@@282 $generated@@157 $generated@@450)))) (= ($generated@@83 ($generated@@444 $generated@@449) ($generated@@164 ($generated@@282 $generated@@157 $generated@@450))) ($generated@@165 ($generated@@282 $generated@@157 $generated@@450))))))
 :pattern ( ($generated@@83 ($generated@@443 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(let (($generated@@454 ($generated@@328 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@327 $generated@@454 $generated@@453)) (= ($generated@@0 ($generated@@83 ($generated@@378 $generated@@451) $generated@@452)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@454) (and ($generated@@0 ($generated@@83 ($generated@@325 $generated@@451) $generated@@455)) (= $generated@@452 ($generated@@83 ($generated@@436 $generated@@451) $generated@@455))))
 :pattern ( ($generated@@83 ($generated@@325 $generated@@451) $generated@@455))
 :pattern ( ($generated@@83 ($generated@@436 $generated@@451) $generated@@455))
))))))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
(let (($generated@@459 ($generated@@346 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@345 $generated@@459 $generated@@458)) (= ($generated@@0 ($generated@@83 ($generated@@389 $generated@@456) $generated@@457)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@459) (and ($generated@@0 ($generated@@83 ($generated@@343 $generated@@456) $generated@@460)) (= $generated@@457 ($generated@@83 ($generated@@444 $generated@@456) $generated@@460))))
 :pattern ( ($generated@@83 ($generated@@343 $generated@@456) $generated@@460))
 :pattern ( ($generated@@83 ($generated@@444 $generated@@456) $generated@@460))
))))))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@462 $generated@@463)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (and (= (type $generated@@464) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@465) $generated@@66)) (= (type $generated@@466) $generated@@66)) (= (type $generated@@467) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@149) ($generated@@0 ($generated@@83 ($generated@@325 $generated@@464) $generated@@468))) (and ($generated@@260 ($generated@@83 ($generated@@436 $generated@@464) $generated@@468) $generated@@466 $generated@@467) ($generated@@260 $generated@@468 $generated@@465 $generated@@467)))
 :pattern ( ($generated@@83 ($generated@@436 $generated@@464) $generated@@468))
 :pattern ( ($generated@@83 ($generated@@325 $generated@@464) $generated@@468))
))))
 :pattern ( ($generated@@76 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@470 $generated@@471)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (= (type $generated@@472) ($generated@@345 $generated@@149 $generated@@149)) (= (type $generated@@473) $generated@@66)) (= (type $generated@@474) $generated@@66)) (= (type $generated@@475) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475) (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@149) ($generated@@0 ($generated@@83 ($generated@@343 $generated@@472) $generated@@476))) (and ($generated@@260 ($generated@@83 ($generated@@444 $generated@@472) $generated@@476) $generated@@474 $generated@@475) ($generated@@260 $generated@@476 $generated@@473 $generated@@475)))
 :pattern ( ($generated@@83 ($generated@@444 $generated@@472) $generated@@476))
 :pattern ( ($generated@@83 ($generated@@343 $generated@@472) $generated@@476))
))))
 :pattern ( ($generated@@76 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@477 Int) ($generated@@478 Int) ) (! (= ($generated@@428 $generated@@477 $generated@@478) (div $generated@@477 $generated@@478))
 :pattern ( ($generated@@428 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@81 (type $generated@@479))))
 (=> (and (and (= (type $generated@@479) ($generated@@78 $generated@@481 $generated@@4)) (= (type $generated@@480) ($generated@@78 $generated@@481 $generated@@4))) ($generated@@361 $generated@@479 $generated@@480)) (= $generated@@479 $generated@@480)))
 :pattern ( ($generated@@361 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= (type ($generated@@482 $generated@@483 $generated@@484)) ($generated@@78 $generated@@485 $generated@@4)))
 :pattern ( ($generated@@482 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@487)))
 (=> (and (and (= (type $generated@@486) ($generated@@78 $generated@@489 $generated@@4)) (= (type $generated@@488) $generated@@489)) ($generated@@0 ($generated@@83 $generated@@486 $generated@@488))) ($generated@@0 ($generated@@83 ($generated@@482 $generated@@486 $generated@@487) $generated@@488))))
 :pattern ( ($generated@@482 $generated@@486 $generated@@487) ($generated@@83 $generated@@486 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@491)))
 (=> (and (= (type $generated@@490) ($generated@@78 $generated@@493 $generated@@4)) (= (type $generated@@492) $generated@@493)) (= ($generated@@0 ($generated@@83 ($generated@@482 $generated@@490 $generated@@491) $generated@@492))  (or (= $generated@@492 $generated@@491) ($generated@@0 ($generated@@83 $generated@@490 $generated@@492))))))
 :pattern ( ($generated@@83 ($generated@@482 $generated@@490 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (! (let (($generated@@497 (type $generated@@496)))
 (=> (and (and (= (type $generated@@494) ($generated@@78 $generated@@497 $generated@@4)) (= (type $generated@@495) ($generated@@78 $generated@@497 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@495 $generated@@496))) (not ($generated@@0 ($generated@@83 ($generated@@412 $generated@@494 $generated@@495) $generated@@496)))))
 :pattern ( ($generated@@412 $generated@@494 $generated@@495) ($generated@@83 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@499 T@T) ) (! (= (type ($generated@@498 $generated@@499)) ($generated@@78 $generated@@499 $generated@@4))
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@347 (type $generated@@500))))
(let (($generated@@502 ($generated@@346 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@345 $generated@@502 $generated@@501)) (= (= $generated@@500 ($generated@@344 $generated@@502 $generated@@501)) (= ($generated@@343 $generated@@500) ($generated@@498 $generated@@502))))))
 :pattern ( ($generated@@343 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@347 (type $generated@@503))))
(let (($generated@@505 ($generated@@346 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@345 $generated@@505 $generated@@504)) (= (= $generated@@503 ($generated@@344 $generated@@505 $generated@@504)) (= ($generated@@389 $generated@@503) ($generated@@498 $generated@@504))))))
 :pattern ( ($generated@@389 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@347 (type $generated@@506))))
(let (($generated@@508 ($generated@@346 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@345 $generated@@508 $generated@@507)) (= (= $generated@@506 ($generated@@344 $generated@@508 $generated@@507)) (= ($generated@@443 $generated@@506) ($generated@@498 $generated@@149))))))
 :pattern ( ($generated@@443 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@329 (type $generated@@509))))
(let (($generated@@511 ($generated@@328 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@327 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@326 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@149) (= (type $generated@@513) $generated@@149)) ($generated@@0 ($generated@@83 ($generated@@435 $generated@@509) ($generated@@299 ($generated@@236 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@435 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@347 (type $generated@@514))))
(let (($generated@@516 ($generated@@346 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@345 $generated@@516 $generated@@515)) (or (= $generated@@514 ($generated@@344 $generated@@516 $generated@@515)) (exists (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (and (and (= (type $generated@@517) $generated@@149) (= (type $generated@@518) $generated@@149)) ($generated@@0 ($generated@@83 ($generated@@443 $generated@@514) ($generated@@299 ($generated@@236 $generated@@517 $generated@@518)))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
))))))
 :pattern ( ($generated@@443 $generated@@514))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@149) ($generated@@237 $generated@@519 $generated@@46)) (and (= ($generated@@299 ($generated@@282 $generated@@2 $generated@@519)) $generated@@519) ($generated@@145 ($generated@@282 $generated@@2 $generated@@519) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@519 $generated@@46))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@149) ($generated@@237 $generated@@520 $generated@@47)) (and (= ($generated@@299 ($generated@@282 $generated@@3 $generated@@520)) $generated@@520) ($generated@@145 ($generated@@282 $generated@@3 $generated@@520) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@520 $generated@@47))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@149) ($generated@@237 $generated@@521 $generated@@44)) (and (= ($generated@@299 ($generated@@282 $generated@@4 $generated@@521)) $generated@@521) ($generated@@145 ($generated@@282 $generated@@4 $generated@@521) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@521 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@522) 21))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@149) ($generated@@237 $generated@@523 $generated@@45)) (and (= ($generated@@299 ($generated@@282 $generated@@522 $generated@@523)) $generated@@523) ($generated@@145 ($generated@@282 $generated@@522 $generated@@523) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@523 $generated@@45))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@66) (= ($generated@@237 ($generated@@299 $generated@@524) $generated@@525) ($generated@@145 $generated@@524 $generated@@525)))
 :pattern ( ($generated@@237 ($generated@@299 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@81 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@78 $generated@@527 $generated@@2)) (<= 0 ($generated@@319 $generated@@526))))
 :pattern ( ($generated@@319 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@276 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@275 $generated@@529)) (<= 0 ($generated@@274 $generated@@528))))
 :pattern ( ($generated@@274 $generated@@528))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@530 T@U) ($generated@@531 Int) ($generated@@532 Int) ) (!  (=> (and (= (type $generated@@530) $generated@@136) (or ($generated@@406 $generated@@531 $generated@@532) (and (not (= 1 $generated@@147)) (and (<= ($generated@@172 0) $generated@@531) (<= ($generated@@172 0) $generated@@532))))) true)
 :pattern ( ($generated@@283 $generated@@530 $generated@@531 $generated@@532))
))))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (= ($generated@@533 ($generated@@461 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@461 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@66) (= (type $generated@@540) $generated@@66)) (= ($generated@@537 ($generated@@461 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@461 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= ($generated@@74 ($generated@@461 $generated@@541 $generated@@542)) $generated@@58))
 :pattern ( ($generated@@461 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@66)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@66) (= (type $generated@@546) $generated@@66)) (= ($generated@@543 ($generated@@469 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@469 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@66)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@66) (= (type $generated@@550) $generated@@66)) (= ($generated@@547 ($generated@@469 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@469 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@66) (= (type $generated@@552) $generated@@66)) (= ($generated@@74 ($generated@@469 $generated@@551 $generated@@552)) $generated@@59))
 :pattern ( ($generated@@469 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@149)) (= ($generated@@267 ($generated@@236 $generated@@553 $generated@@554)) $generated@@62))
 :pattern ( ($generated@@236 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@66)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@66) (= (type $generated@@558) $generated@@66)) (= ($generated@@555 ($generated@@156 $generated@@557 $generated@@558)) $generated@@557))
 :pattern ( ($generated@@156 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@66)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@66) (= (type $generated@@562) $generated@@66)) (= ($generated@@559 ($generated@@156 $generated@@561 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@156 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@149) (= (type $generated@@564) $generated@@149)) (= ($generated@@164 ($generated@@236 $generated@@563 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@236 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@149)) (= ($generated@@165 ($generated@@236 $generated@@565 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@236 $generated@@565 $generated@@566))
)))
(assert  (and (forall (($generated@@569 T@U) ) (! (= (type ($generated@@567 $generated@@569)) $generated@@66)
 :pattern ( ($generated@@567 $generated@@569))
)) (forall (($generated@@570 T@U) ($generated@@571 Int) ) (! (let (($generated@@572 ($generated@@276 (type $generated@@570))))
(= (type ($generated@@568 $generated@@570 $generated@@571)) $generated@@572))
 :pattern ( ($generated@@568 $generated@@570 $generated@@571))
))))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@275 $generated@@149)) (= (type $generated@@574) $generated@@66)) (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@573 ($generated@@567 $generated@@574) $generated@@575) (forall (($generated@@576 Int) ) (!  (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@274 $generated@@573))) ($generated@@260 ($generated@@568 $generated@@573 $generated@@576) $generated@@574 $generated@@575))
 :pattern ( ($generated@@568 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@76 $generated@@573 ($generated@@567 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (=> (= (type $generated@@577) ($generated@@78 $generated@@579 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@482 $generated@@577 $generated@@578) $generated@@578))))
 :pattern ( ($generated@@482 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@580 ($generated@@77 $generated@@581)) $generated@@581)
 :pattern ( ($generated@@77 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@66)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@66) (= ($generated@@582 ($generated@@151 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@151 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@66) (= ($generated@@74 ($generated@@151 $generated@@585)) $generated@@54))
 :pattern ( ($generated@@151 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@66)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@66) (= ($generated@@586 ($generated@@249 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@249 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@66) (= ($generated@@74 ($generated@@249 $generated@@589)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@66)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@66) (= ($generated@@590 ($generated@@175 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@175 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@66) (= ($generated@@74 ($generated@@175 $generated@@593)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@66)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@66) (= ($generated@@594 ($generated@@567 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@567 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@66) (= ($generated@@74 ($generated@@567 $generated@@597)) $generated@@57))
 :pattern ( ($generated@@567 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
(= ($generated@@282 $generated@@599 ($generated@@299 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@299 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@600) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@601) $generated@@66)) (= (type $generated@@602) $generated@@66)) (= ($generated@@145 $generated@@600 ($generated@@461 $generated@@601 $generated@@602)) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@149) ($generated@@0 ($generated@@83 ($generated@@325 $generated@@600) $generated@@603))) (and ($generated@@237 ($generated@@83 ($generated@@436 $generated@@600) $generated@@603) $generated@@602) ($generated@@237 $generated@@603 $generated@@601)))
 :pattern ( ($generated@@83 ($generated@@436 $generated@@600) $generated@@603))
 :pattern ( ($generated@@83 ($generated@@325 $generated@@600) $generated@@603))
))))
 :pattern ( ($generated@@145 $generated@@600 ($generated@@461 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@604) ($generated@@345 $generated@@149 $generated@@149)) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) $generated@@66)) (= ($generated@@145 $generated@@604 ($generated@@469 $generated@@605 $generated@@606)) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@149) ($generated@@0 ($generated@@83 ($generated@@343 $generated@@604) $generated@@607))) (and ($generated@@237 ($generated@@83 ($generated@@444 $generated@@604) $generated@@607) $generated@@606) ($generated@@237 $generated@@607 $generated@@605)))
 :pattern ( ($generated@@83 ($generated@@444 $generated@@604) $generated@@607))
 :pattern ( ($generated@@83 ($generated@@343 $generated@@604) $generated@@607))
))))
 :pattern ( ($generated@@145 $generated@@604 ($generated@@469 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@149) (= (type $generated@@611) $generated@@149)) (< ($generated@@608 $generated@@610) ($generated@@609 ($generated@@236 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@236 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@149) (= (type $generated@@613) $generated@@149)) (< ($generated@@608 $generated@@613) ($generated@@609 ($generated@@236 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@236 $generated@@612 $generated@@613))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@78 $generated@@149 $generated@@4)) (or ($generated@@150 $generated@@614) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@614 ($generated@@151 $generated@@142))))) (= ($generated@@148 $generated@@614) ($generated@@298 ($generated@@172 0) $generated@@614 1 $generated@@614)))
 :pattern ( ($generated@@148 $generated@@614))
))))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@615 T@U) ($generated@@616 Int) ($generated@@617 Int) ) (!  (=> (and (= (type $generated@@615) $generated@@136) (or ($generated@@406 $generated@@616 $generated@@617) (and (not (= 1 $generated@@147)) (and (<= ($generated@@172 0) $generated@@616) (<= ($generated@@172 0) $generated@@617))))) (and (=> (not (= $generated@@616 ($generated@@172 0))) ($generated@@406 (- $generated@@616 1) ($generated@@428 $generated@@617 ($generated@@172 2)))) (= ($generated@@283 ($generated@@311 $generated@@615) $generated@@616 $generated@@617) (ite (= $generated@@616 ($generated@@172 0)) (= ($generated@@173 $generated@@617 ($generated@@172 2)) ($generated@@172 1)) ($generated@@283 $generated@@615 (- $generated@@616 1) ($generated@@428 $generated@@617 ($generated@@172 2)))))))
 :pattern ( ($generated@@283 ($generated@@311 $generated@@615) $generated@@616 $generated@@617))
))))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@149) (= (type $generated@@619) $generated@@66)) (= (type $generated@@620) $generated@@66)) ($generated@@237 $generated@@618 ($generated@@461 $generated@@619 $generated@@620))) (and (= ($generated@@299 ($generated@@282 ($generated@@327 $generated@@149 $generated@@149) $generated@@618)) $generated@@618) ($generated@@145 ($generated@@282 ($generated@@327 $generated@@149 $generated@@149) $generated@@618) ($generated@@461 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@237 $generated@@618 ($generated@@461 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@149) (= (type $generated@@622) $generated@@66)) (= (type $generated@@623) $generated@@66)) ($generated@@237 $generated@@621 ($generated@@469 $generated@@622 $generated@@623))) (and (= ($generated@@299 ($generated@@282 ($generated@@345 $generated@@149 $generated@@149) $generated@@621)) $generated@@621) ($generated@@145 ($generated@@282 ($generated@@345 $generated@@149 $generated@@149) $generated@@621) ($generated@@469 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@237 $generated@@621 ($generated@@469 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@66) (= (type $generated@@625) $generated@@66)) (= (type $generated@@626) $generated@@149)) ($generated@@237 $generated@@626 ($generated@@156 $generated@@624 $generated@@625))) (and (= ($generated@@299 ($generated@@282 $generated@@157 $generated@@626)) $generated@@626) ($generated@@145 ($generated@@282 $generated@@157 $generated@@626) ($generated@@156 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@237 $generated@@626 ($generated@@156 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@628 T@T) ) (! (= (type ($generated@@627 $generated@@628)) ($generated@@78 $generated@@628 $generated@@4))
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@629)))
 (not ($generated@@0 ($generated@@83 ($generated@@627 $generated@@630) $generated@@629))))
 :pattern ( (let (($generated@@630 (type $generated@@629)))
($generated@@83 ($generated@@627 $generated@@630) $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@631)))
 (not ($generated@@0 ($generated@@83 ($generated@@498 $generated@@632) $generated@@631))))
 :pattern ( (let (($generated@@632 (type $generated@@631)))
($generated@@83 ($generated@@498 $generated@@632) $generated@@631)))
)))
(assert (forall (($generated@@633 Int) ($generated@@634 Int) ) (! (= ($generated@@173 $generated@@633 $generated@@634) (mod $generated@@633 $generated@@634))
 :pattern ( ($generated@@173 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ) (! (= (type ($generated@@635 $generated@@636)) $generated@@71)
 :pattern ( ($generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@66) (= (type $generated@@638) $generated@@66)) (and (= ($generated@@74 ($generated@@156 $generated@@637 $generated@@638)) $generated@@63) (= ($generated@@635 ($generated@@156 $generated@@637 $generated@@638)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@157) (= ($generated@@608 ($generated@@299 $generated@@639)) ($generated@@609 $generated@@639)))
 :pattern ( ($generated@@608 ($generated@@299 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@149) ($generated@@237 $generated@@640 ($generated@@77 0))) (and (= ($generated@@299 ($generated@@282 $generated@@2 $generated@@640)) $generated@@640) ($generated@@145 ($generated@@282 ($generated@@78 $generated@@149 $generated@@4) $generated@@640) ($generated@@77 0))))
 :pattern ( ($generated@@237 $generated@@640 ($generated@@77 0)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@149) (= (type $generated@@642) $generated@@66)) ($generated@@237 $generated@@641 ($generated@@151 $generated@@642))) (and (= ($generated@@299 ($generated@@282 ($generated@@78 $generated@@149 $generated@@4) $generated@@641)) $generated@@641) ($generated@@145 ($generated@@282 ($generated@@78 $generated@@149 $generated@@4) $generated@@641) ($generated@@151 $generated@@642))))
 :pattern ( ($generated@@237 $generated@@641 ($generated@@151 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@149) (= (type $generated@@644) $generated@@66)) ($generated@@237 $generated@@643 ($generated@@249 $generated@@644))) (and (= ($generated@@299 ($generated@@282 ($generated@@78 $generated@@149 $generated@@4) $generated@@643)) $generated@@643) ($generated@@145 ($generated@@282 ($generated@@78 $generated@@149 $generated@@4) $generated@@643) ($generated@@249 $generated@@644))))
 :pattern ( ($generated@@237 $generated@@643 ($generated@@249 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@149) (= (type $generated@@646) $generated@@66)) ($generated@@237 $generated@@645 ($generated@@175 $generated@@646))) (and (= ($generated@@299 ($generated@@282 ($generated@@78 $generated@@149 $generated@@2) $generated@@645)) $generated@@645) ($generated@@145 ($generated@@282 ($generated@@78 $generated@@149 $generated@@2) $generated@@645) ($generated@@175 $generated@@646))))
 :pattern ( ($generated@@237 $generated@@645 ($generated@@175 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@149) (= (type $generated@@648) $generated@@66)) ($generated@@237 $generated@@647 ($generated@@567 $generated@@648))) (and (= ($generated@@299 ($generated@@282 ($generated@@275 $generated@@149) $generated@@647)) $generated@@647) ($generated@@145 ($generated@@282 ($generated@@275 $generated@@149) $generated@@647) ($generated@@567 $generated@@648))))
 :pattern ( ($generated@@237 $generated@@647 ($generated@@567 $generated@@648)))
)))
(assert  (=> (<= 2 $generated@@147) (forall (($generated@@649 Int) ) (!  (=> (or ($generated@@403 ($generated@@172 $generated@@649)) (and (not (= 2 $generated@@147)) (<= ($generated@@172 0) $generated@@649))) (and (forall (($generated@@650 Int) ) (!  (=> (<= ($generated@@172 0) $generated@@650) (=> (< $generated@@650 $generated@@649) ($generated@@406 $generated@@650 ($generated@@172 $generated@@649))))
 :pattern ( ($generated@@283 ($generated@@311 $generated@@137) $generated@@650 $generated@@649))
)) (= ($generated@@402 ($generated@@172 $generated@@649)) ($generated@@281 $generated@@46 ($generated@@172 0) $generated@@649 ($generated@@311 $generated@@137) ($generated@@172 $generated@@649)))))
 :weight 3
 :pattern ( ($generated@@402 ($generated@@172 $generated@@649)))
))))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 ($generated@@81 (type $generated@@652))))
 (=> (and (= (type $generated@@652) ($generated@@78 $generated@@654 $generated@@4)) (= (type $generated@@653) ($generated@@78 $generated@@654 $generated@@4))) (= ($generated@@651 $generated@@652 $generated@@653) (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@654) ($generated@@0 ($generated@@83 $generated@@652 $generated@@655))) ($generated@@0 ($generated@@83 $generated@@653 $generated@@655)))
 :pattern ( ($generated@@83 $generated@@652 $generated@@655))
 :pattern ( ($generated@@83 $generated@@653 $generated@@655))
)))))
 :pattern ( ($generated@@651 $generated@@652 $generated@@653))
)))
(assert (= ($generated@@74 $generated@@142) $generated@@61))
(assert (= ($generated@@635 $generated@@142) $generated@@64))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@656) ($generated@@78 $generated@@149 $generated@@2)) (= (type $generated@@657) $generated@@66)) (= (type $generated@@658) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@656 ($generated@@175 $generated@@657) $generated@@658) (forall (($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@149) (< 0 ($generated ($generated@@83 $generated@@656 $generated@@659)))) ($generated@@260 $generated@@659 $generated@@657 $generated@@658))
 :pattern ( ($generated@@83 $generated@@656 $generated@@659))
))))
 :pattern ( ($generated@@76 $generated@@656 ($generated@@175 $generated@@657) $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) $generated@@157) (= (type $generated@@661) $generated@@66)) (= (type $generated@@662) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@259 $generated@@662) (and ($generated@@155 $generated@@660) (exists (($generated@@663 T@U) ) (!  (and (= (type $generated@@663) $generated@@66) ($generated@@76 $generated@@660 ($generated@@156 $generated@@661 $generated@@663) $generated@@662))
 :pattern ( ($generated@@76 $generated@@660 ($generated@@156 $generated@@661 $generated@@663) $generated@@662))
))))) ($generated@@260 ($generated@@164 $generated@@660) $generated@@661 $generated@@662))
 :pattern ( ($generated@@260 ($generated@@164 $generated@@660) $generated@@661 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) $generated@@157) (= (type $generated@@665) $generated@@66)) (= (type $generated@@666) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@259 $generated@@666) (and ($generated@@155 $generated@@664) (exists (($generated@@667 T@U) ) (!  (and (= (type $generated@@667) $generated@@66) ($generated@@76 $generated@@664 ($generated@@156 $generated@@667 $generated@@665) $generated@@666))
 :pattern ( ($generated@@76 $generated@@664 ($generated@@156 $generated@@667 $generated@@665) $generated@@666))
))))) ($generated@@260 ($generated@@165 $generated@@664) $generated@@665 $generated@@666))
 :pattern ( ($generated@@260 ($generated@@165 $generated@@664) $generated@@665 $generated@@666))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@78 $generated@@149 $generated@@4)) (or ($generated@@150 ($generated@@255 $generated@@668)) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@668 ($generated@@151 $generated@@142))))) (= ($generated@@148 ($generated@@255 $generated@@668)) ($generated@@298 ($generated@@172 0) ($generated@@255 $generated@@668) 1 $generated@@668)))
 :weight 3
 :pattern ( ($generated@@148 ($generated@@255 $generated@@668)))
))))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@149) (= (type $generated@@670) $generated@@149)) (= ($generated@@236 ($generated@@255 $generated@@669) ($generated@@255 $generated@@670)) ($generated@@255 ($generated@@236 $generated@@669 $generated@@670))))
 :pattern ( ($generated@@236 ($generated@@255 $generated@@669) ($generated@@255 $generated@@670)))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@671 T@U) ($generated@@672 Int) ($generated@@673 Int) ) (!  (=> (and (= (type $generated@@671) $generated@@136) (or ($generated@@369 $generated@@672 $generated@@673) (and (not (= 1 $generated@@147)) (and (<= ($generated@@172 0) $generated@@672) (<= ($generated@@172 0) $generated@@673))))) (and (=> (not (= $generated@@673 ($generated@@172 0))) (=> (not (= $generated@@672 ($generated@@172 0))) (and ($generated@@369 (- $generated@@672 1) $generated@@673) ($generated@@369 (- $generated@@672 1) (- $generated@@673 1))))) (= ($generated@@134 ($generated@@311 $generated@@671) $generated@@672 $generated@@673) (ite (= $generated@@673 ($generated@@172 0)) 1 (ite (= $generated@@672 ($generated@@172 0)) 0 (+ ($generated@@134 $generated@@671 (- $generated@@672 1) $generated@@673) ($generated@@134 $generated@@671 (- $generated@@672 1) (- $generated@@673 1))))))))
 :pattern ( ($generated@@134 ($generated@@311 $generated@@671) $generated@@672 $generated@@673))
))))
(assert (forall (($generated@@674 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@172 $generated@@674))) ($generated@@255 ($generated@@299 ($generated@@8 $generated@@674))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@172 $generated@@674))))
)))
(assert (forall (($generated@@675 T@U) ) (! (= ($generated@@299 ($generated@@255 $generated@@675)) ($generated@@255 ($generated@@299 $generated@@675)))
 :pattern ( ($generated@@299 ($generated@@255 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (! (let (($generated@@677 ($generated@@276 (type $generated@@676))))
 (=> (and (= (type $generated@@676) ($generated@@275 $generated@@677)) (= ($generated@@274 $generated@@676) 0)) (= $generated@@676 ($generated@@273 $generated@@677))))
 :pattern ( ($generated@@274 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (! (let (($generated@@681 (type $generated@@679)))
 (=> (and (and (= (type $generated@@678) ($generated@@78 $generated@@681 $generated@@2)) (= (type $generated@@680) $generated@@2)) (<= 0 ($generated $generated@@680))) (= ($generated@@319 ($generated@@84 $generated@@678 $generated@@679 $generated@@680)) (+ (- ($generated@@319 $generated@@678) ($generated ($generated@@83 $generated@@678 $generated@@679))) ($generated $generated@@680)))))
 :pattern ( ($generated@@319 ($generated@@84 $generated@@678 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@683) $generated@@2)) ($generated@@76 $generated@@683 $generated@@46 $generated@@682))
 :pattern ( ($generated@@76 $generated@@683 $generated@@46 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@685) $generated@@3)) ($generated@@76 $generated@@685 $generated@@47 $generated@@684))
 :pattern ( ($generated@@76 $generated@@685 $generated@@47 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@687) $generated@@4)) ($generated@@76 $generated@@687 $generated@@44 $generated@@686))
 :pattern ( ($generated@@76 $generated@@687 $generated@@44 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@689) $generated@@522)) ($generated@@76 $generated@@689 $generated@@45 $generated@@688))
 :pattern ( ($generated@@76 $generated@@689 $generated@@45 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@691) $generated@@149)) ($generated@@76 $generated@@691 $generated@@48 $generated@@690))
 :pattern ( ($generated@@76 $generated@@691 $generated@@48 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) ($generated@@275 $generated@@149)) (= (type $generated@@693) $generated@@66)) (= ($generated@@145 $generated@@692 ($generated@@567 $generated@@693)) (forall (($generated@@694 Int) ) (!  (=> (and (<= 0 $generated@@694) (< $generated@@694 ($generated@@274 $generated@@692))) ($generated@@237 ($generated@@568 $generated@@692 $generated@@694) $generated@@693))
 :pattern ( ($generated@@568 $generated@@692 $generated@@694))
))))
 :pattern ( ($generated@@145 $generated@@692 ($generated@@567 $generated@@693)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 Int) ($generated@@697 Int) ) (!  (=> (= (type $generated@@695) $generated@@136) (= ($generated@@283 $generated@@695 $generated@@696 $generated@@697) ($generated@@283 $generated@@137 $generated@@696 $generated@@697)))
 :pattern ( ($generated@@283 ($generated@@135 $generated@@695) $generated@@696 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 Int) ) (!  (=> (= (type $generated@@699) ($generated@@275 $generated@@149)) (=> (and (<= 0 $generated@@700) (< $generated@@700 ($generated@@274 $generated@@699))) (< ($generated@@609 ($generated@@282 $generated@@157 ($generated@@568 $generated@@699 $generated@@700))) ($generated@@698 $generated@@699))))
 :pattern ( ($generated@@609 ($generated@@282 $generated@@157 ($generated@@568 $generated@@699 $generated@@700))))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@702) $generated@@66)) (= (type $generated@@703) $generated@@66)) ($generated@@145 $generated@@701 ($generated@@461 $generated@@702 $generated@@703))) (and (and ($generated@@145 ($generated@@325 $generated@@701) ($generated@@151 $generated@@702)) ($generated@@145 ($generated@@378 $generated@@701) ($generated@@151 $generated@@703))) ($generated@@145 ($generated@@435 $generated@@701) ($generated@@151 ($generated@@156 $generated@@702 $generated@@703)))))
 :pattern ( ($generated@@145 $generated@@701 ($generated@@461 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) ($generated@@345 $generated@@149 $generated@@149)) (= (type $generated@@705) $generated@@66)) (= (type $generated@@706) $generated@@66)) ($generated@@145 $generated@@704 ($generated@@469 $generated@@705 $generated@@706))) (and (and ($generated@@145 ($generated@@343 $generated@@704) ($generated@@249 $generated@@705)) ($generated@@145 ($generated@@389 $generated@@704) ($generated@@249 $generated@@706))) ($generated@@145 ($generated@@443 $generated@@704) ($generated@@249 ($generated@@156 $generated@@705 $generated@@706)))))
 :pattern ( ($generated@@145 $generated@@704 ($generated@@469 $generated@@705 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@2) ($generated@@145 $generated@@707 $generated@@46))
 :pattern ( ($generated@@145 $generated@@707 $generated@@46))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@3) ($generated@@145 $generated@@708 $generated@@47))
 :pattern ( ($generated@@145 $generated@@708 $generated@@47))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@4) ($generated@@145 $generated@@709 $generated@@44))
 :pattern ( ($generated@@145 $generated@@709 $generated@@44))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@522) ($generated@@145 $generated@@710 $generated@@45))
 :pattern ( ($generated@@145 $generated@@710 $generated@@45))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@149) ($generated@@145 $generated@@711 $generated@@48))
 :pattern ( ($generated@@145 $generated@@711 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@712 () Int)
(declare-fun $generated@@713 () Int)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () Int)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 (T@U) Bool)
(declare-fun $generated@@718 () Int)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () Int)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () T@U)
(declare-fun $generated@@726 () T@U)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () Int)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () Int)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 () Int)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@714) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@733) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@731) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@724) ($generated@@78 $generated@@149 $generated@@4))) (= (type $generated@@725) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@726) ($generated@@78 $generated@@149 $generated@@4))) (= (type $generated@@727) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@728) ($generated@@78 $generated@@149 $generated@@4))) (= (type $generated@@729) ($generated@@78 $generated@@149 $generated@@4))) (= (type $generated@@719) ($generated@@78 $generated@@149 $generated@@4))) (= (type $generated@@721) ($generated@@78 $generated@@149 $generated@@4))) (= (type $generated@@722) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@723) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@716) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@735) ($generated@@182 $generated@@79 $generated@@4))) (= (type $generated@@736) $generated@@79)) (= (type $generated@@737) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 64) (let (($generated@@738  (=> (and ($generated@@403 $generated@@712) (=> ($generated@@0 ($generated@@83 ($generated@@402 $generated@@712) ($generated@@299 ($generated@@8 ($generated@@172 0))))) ($generated@@403 $generated@@713))) (and (=> (= (ControlFlow 0 49) (- 0 51)) ($generated@@0 ($generated@@83 ($generated@@402 $generated@@712) ($generated@@299 ($generated@@8 ($generated@@172 0)))))) (and (=> (= (ControlFlow 0 49) (- 0 50)) (not ($generated@@0 ($generated@@83 ($generated@@402 $generated@@713) ($generated@@299 ($generated@@8 ($generated@@172 0))))))) (=> (and ($generated@@0 ($generated@@83 ($generated@@402 $generated@@712) ($generated@@299 ($generated@@8 ($generated@@172 0))))) (not ($generated@@0 ($generated@@83 ($generated@@402 $generated@@713) ($generated@@299 ($generated@@8 ($generated@@172 0))))))) (=> (and (and (and ($generated@@76 ($generated@@8 $generated@@712) $generated@@142 $generated@@714) ($generated@@403 $generated@@712)) (and ($generated@@76 ($generated@@8 $generated@@713) $generated@@142 $generated@@714) ($generated@@403 $generated@@713))) (and (and ($generated@@403 $generated@@712) ($generated@@403 $generated@@713)) (= (ControlFlow 0 49) (- 0 48)))) (= ($generated@@0 ($generated@@255 ($generated@@11 false))) ($generated@@651 ($generated@@402 $generated@@712) ($generated@@402 $generated@@713))))))))))
(let (($generated@@739  (=> (and (not ($generated@@0 ($generated@@83 ($generated@@402 $generated@@712) ($generated@@299 ($generated@@8 ($generated@@172 0)))))) (= (ControlFlow 0 53) 49)) $generated@@738)))
(let (($generated@@740  (=> (and (and ($generated@@0 ($generated@@83 ($generated@@402 $generated@@712) ($generated@@299 ($generated@@8 ($generated@@172 0))))) ($generated@@76 ($generated@@8 $generated@@713) $generated@@142 $generated@@714)) (and ($generated@@403 $generated@@713) (= (ControlFlow 0 52) 49))) $generated@@738)))
(let (($generated@@741  (=> (and ($generated@@76 ($generated@@8 $generated@@712) $generated@@142 $generated@@714) ($generated@@403 $generated@@712)) (and (=> (= (ControlFlow 0 54) 52) $generated@@740) (=> (= (ControlFlow 0 54) 53) $generated@@739)))))
(let (($generated@@742  (=> (and ($generated@@76 ($generated@@8 $generated@@713) $generated@@142 $generated@@714) ($generated@@76 ($generated@@8 $generated@@712) $generated@@142 $generated@@714)) (=> (and (and (and (and ($generated@@369 $generated@@713 $generated@@712) (= $generated@@715 ($generated@@134 ($generated@@311 $generated@@137) $generated@@713 $generated@@712))) (and ($generated@@76 ($generated@@8 $generated@@715) $generated@@142 $generated@@714) ($generated@@171 ($generated@@134 ($generated@@311 $generated@@137) $generated@@713 $generated@@712)))) (and (and ($generated@@369 $generated@@713 $generated@@712) ($generated@@171 ($generated@@134 ($generated@@311 $generated@@137) $generated@@713 $generated@@712))) (and ($generated@@259 $generated@@716) ($generated@@717 $generated@@716)))) (and (and (and ($generated@@369 $generated@@713 $generated@@712) (and (and ($generated@@171 $generated@@713) (=> ($generated@@170 $generated@@713) ($generated@@171 $generated@@712))) (=> (not (and ($generated@@170 $generated@@713) (not ($generated@@170 $generated@@712)))) ($generated@@369 ($generated@@428 $generated@@713 ($generated@@172 2)) ($generated@@428 $generated@@712 ($generated@@172 2)))))) (= ($generated@@173 ($generated@@134 ($generated@@311 ($generated@@311 $generated@@137)) $generated@@713 $generated@@712) ($generated@@172 2)) (ite  (and ($generated@@170 $generated@@713) (not ($generated@@170 $generated@@712))) 0 ($generated@@173 ($generated@@134 ($generated@@311 ($generated@@311 $generated@@137)) ($generated@@428 $generated@@713 ($generated@@172 2)) ($generated@@428 $generated@@712 ($generated@@172 2))) ($generated@@172 2))))) (and (= $generated@@714 $generated@@716) (= (ControlFlow 0 46) (- 0 45))))) (=  (not ($generated@@170 ($generated@@134 ($generated@@311 ($generated@@311 $generated@@137)) $generated@@713 $generated@@712))) ($generated@@0 ($generated@@255 ($generated@@11 false))))))))
(let (($generated@@743 true))
(let (($generated@@744  (=> (and ($generated@@403 $generated@@713) (=> ($generated@@0 ($generated@@83 ($generated@@402 $generated@@713) ($generated@@299 ($generated@@8 ($generated@@172 0))))) (and ($generated@@403 $generated@@713) ($generated@@403 $generated@@713)))) (and (=> (= (ControlFlow 0 30) (- 0 31)) (=> ($generated@@0 ($generated@@83 ($generated@@402 $generated@@713) ($generated@@299 ($generated@@8 ($generated@@172 0))))) ($generated@@651 ($generated@@412 ($generated@@402 $generated@@713) ($generated@@482 ($generated@@627 $generated@@149) ($generated@@299 ($generated@@8 ($generated@@172 0))))) ($generated@@402 $generated@@713)))) (=> (=> ($generated@@0 ($generated@@83 ($generated@@402 $generated@@713) ($generated@@299 ($generated@@8 ($generated@@172 0))))) ($generated@@651 ($generated@@412 ($generated@@402 $generated@@713) ($generated@@482 ($generated@@627 $generated@@149) ($generated@@299 ($generated@@8 ($generated@@172 0))))) ($generated@@402 $generated@@713))) (=> (and (and (and ($generated@@76 ($generated@@8 $generated@@712) $generated@@142 $generated@@714) ($generated@@403 $generated@@712)) (and ($generated@@76 ($generated@@8 $generated@@713) $generated@@142 $generated@@714) ($generated@@403 $generated@@713))) (and (and ($generated@@403 $generated@@712) ($generated@@403 $generated@@713)) (= (ControlFlow 0 30) (- 0 29)))) (= ($generated@@651 ($generated@@412 ($generated@@402 $generated@@712) ($generated@@482 ($generated@@627 $generated@@149) ($generated@@299 ($generated@@8 ($generated@@172 0))))) ($generated@@412 ($generated@@402 $generated@@713) ($generated@@482 ($generated@@627 $generated@@149) ($generated@@299 ($generated@@8 ($generated@@172 0)))))) ($generated@@651 ($generated@@402 $generated@@712) ($generated@@402 $generated@@713)))))))))
(let (($generated@@745  (=> (and (not ($generated@@0 ($generated@@83 ($generated@@402 $generated@@713) ($generated@@299 ($generated@@8 ($generated@@172 0)))))) (= (ControlFlow 0 34) 30)) $generated@@744)))
(let (($generated@@746  (=> ($generated@@0 ($generated@@83 ($generated@@402 $generated@@713) ($generated@@299 ($generated@@8 ($generated@@172 0))))) (=> (and ($generated@@76 ($generated@@8 $generated@@713) $generated@@142 $generated@@714) ($generated@@403 $generated@@713)) (and (=> (= (ControlFlow 0 32) (- 0 33)) ($generated@@145 ($generated@@8 ($generated@@172 0)) $generated@@142)) (=> ($generated@@145 ($generated@@8 ($generated@@172 0)) $generated@@142) (=> ($generated@@76 ($generated@@8 $generated@@713) $generated@@142 $generated@@714) (=> (and ($generated@@403 $generated@@713) (= (ControlFlow 0 32) 30)) $generated@@744))))))))
(let (($generated@@747  (=> (and ($generated@@403 $generated@@712) (=> (not ($generated@@0 ($generated@@83 ($generated@@402 $generated@@712) ($generated@@299 ($generated@@8 ($generated@@172 0)))))) (and ($generated@@403 $generated@@712) ($generated@@403 $generated@@712)))) (and (=> (= (ControlFlow 0 35) (- 0 36)) (=> (not ($generated@@0 ($generated@@83 ($generated@@402 $generated@@712) ($generated@@299 ($generated@@8 ($generated@@172 0)))))) ($generated@@361 ($generated@@402 $generated@@712) ($generated@@412 ($generated@@402 $generated@@712) ($generated@@482 ($generated@@627 $generated@@149) ($generated@@299 ($generated@@8 ($generated@@172 0)))))))) (=> (=> (not ($generated@@0 ($generated@@83 ($generated@@402 $generated@@712) ($generated@@299 ($generated@@8 ($generated@@172 0)))))) ($generated@@361 ($generated@@402 $generated@@712) ($generated@@412 ($generated@@402 $generated@@712) ($generated@@482 ($generated@@627 $generated@@149) ($generated@@299 ($generated@@8 ($generated@@172 0))))))) (=> (and ($generated@@76 ($generated@@8 $generated@@713) $generated@@142 $generated@@714) ($generated@@403 $generated@@713)) (and (=> (= (ControlFlow 0 35) 32) $generated@@746) (=> (= (ControlFlow 0 35) 34) $generated@@745))))))))
(let (($generated@@748  (=> (and ($generated@@0 ($generated@@83 ($generated@@402 $generated@@712) ($generated@@299 ($generated@@8 ($generated@@172 0))))) (= (ControlFlow 0 39) 35)) $generated@@747)))
(let (($generated@@749  (=> (not ($generated@@0 ($generated@@83 ($generated@@402 $generated@@712) ($generated@@299 ($generated@@8 ($generated@@172 0)))))) (=> (and (and ($generated@@76 ($generated@@8 $generated@@712) $generated@@142 $generated@@714) ($generated@@403 $generated@@712)) (and ($generated@@76 ($generated@@8 $generated@@712) $generated@@142 $generated@@714) ($generated@@403 $generated@@712))) (and (=> (= (ControlFlow 0 37) (- 0 38)) ($generated@@145 ($generated@@8 ($generated@@172 0)) $generated@@142)) (=> ($generated@@145 ($generated@@8 ($generated@@172 0)) $generated@@142) (=> (= (ControlFlow 0 37) 35) $generated@@747)))))))
(let (($generated@@750  (=> (and ($generated@@76 ($generated@@8 $generated@@712) $generated@@142 $generated@@714) ($generated@@403 $generated@@712)) (=> (and (and (and ($generated@@145 ($generated@@8 ($generated@@172 0)) $generated@@142) ($generated@@76 ($generated@@8 $generated@@713) $generated@@142 $generated@@714)) (and ($generated@@403 $generated@@713) ($generated@@145 ($generated@@8 ($generated@@172 0)) $generated@@142))) (and (and ($generated@@403 $generated@@712) ($generated@@403 $generated@@713)) (and ($generated@@76 ($generated@@8 $generated@@712) $generated@@142 $generated@@714) ($generated@@403 $generated@@712)))) (and (=> (= (ControlFlow 0 40) 37) $generated@@749) (=> (= (ControlFlow 0 40) 39) $generated@@748))))))
(let (($generated@@751  (=> (= (ControlFlow 0 26) (- 0 25)) (= ($generated@@651 ($generated@@402 $generated@@712) ($generated@@402 $generated@@713))  (not ($generated@@170 ($generated@@134 ($generated@@311 ($generated@@311 $generated@@137)) $generated@@713 $generated@@712)))))))
(let (($generated@@752  (=> (and (=  (not ($generated@@170 ($generated@@134 ($generated@@311 $generated@@137) $generated@@713 $generated@@712))) ($generated@@651 ($generated@@402 $generated@@712) ($generated@@402 $generated@@713))) (= (ControlFlow 0 47) 26)) $generated@@751)))
(let (($generated@@753  (=> (and ($generated@@170 $generated@@713) (not ($generated@@170 $generated@@712))) (and (and (and (=> (= (ControlFlow 0 55) 44) $generated@@743) (=> (= (ControlFlow 0 55) 46) $generated@@742)) (=> (= (ControlFlow 0 55) 54) $generated@@741)) (=> (= (ControlFlow 0 55) 47) $generated@@752)))))
(let (($generated@@754  (=> (and (=  (not ($generated@@170 ($generated@@134 ($generated@@311 $generated@@137) $generated@@713 $generated@@712))) ($generated@@651 ($generated@@402 $generated@@712) ($generated@@402 $generated@@713))) (= (ControlFlow 0 28) 26)) $generated@@751)))
(let (($generated@@755  (=> (and (and (= $generated@@712 ($generated@@172 0)) (= $generated@@713 ($generated@@172 0))) (= (ControlFlow 0 27) 26)) $generated@@751)))
(let (($generated@@756  (=> (and (and ($generated@@145 ($generated@@8 $generated@@718) $generated@@142) ($generated@@76 ($generated@@8 $generated@@718) $generated@@142 $generated@@714)) (and ($generated@@403 $generated@@718) (= $generated@@719 ($generated@@402 $generated@@718)))) (=> (and (and (and ($generated@@76 $generated@@719 ($generated@@151 $generated@@142) $generated@@714) ($generated@@150 ($generated@@402 $generated@@718))) (and ($generated@@145 ($generated@@8 $generated@@720) $generated@@142) ($generated@@76 ($generated@@8 $generated@@720) $generated@@142 $generated@@714))) (and (and ($generated@@403 $generated@@720) (= $generated@@721 ($generated@@402 $generated@@720))) (and ($generated@@76 $generated@@721 ($generated@@151 $generated@@142) $generated@@714) ($generated@@150 ($generated@@402 $generated@@720))))) (=> (and (and (and (and (and ($generated@@403 $generated@@718) ($generated@@150 ($generated@@402 $generated@@718))) (and ($generated@@403 $generated@@720) ($generated@@150 ($generated@@402 $generated@@720)))) (and ($generated@@259 $generated@@722) ($generated@@717 $generated@@722))) (and (and ($generated@@403 $generated@@712) (and ($generated@@403 ($generated@@428 $generated@@712 ($generated@@172 2))) ($generated@@150 ($generated@@402 ($generated@@428 $generated@@712 ($generated@@172 2)))))) (and ($generated@@361 ($generated@@412 ($generated@@402 $generated@@712) ($generated@@482 ($generated@@627 $generated@@149) ($generated@@299 ($generated@@8 ($generated@@172 0))))) ($generated@@148 ($generated@@402 ($generated@@428 $generated@@712 ($generated@@172 2))))) (= $generated@@714 $generated@@722)))) (and (and (and ($generated@@259 $generated@@723) ($generated@@717 $generated@@723)) (and ($generated@@403 $generated@@713) (and ($generated@@403 ($generated@@428 $generated@@713 ($generated@@172 2))) ($generated@@150 ($generated@@402 ($generated@@428 $generated@@713 ($generated@@172 2))))))) (and (and ($generated@@361 ($generated@@412 ($generated@@402 $generated@@713) ($generated@@482 ($generated@@627 $generated@@149) ($generated@@299 ($generated@@8 ($generated@@172 0))))) ($generated@@148 ($generated@@402 ($generated@@428 $generated@@713 ($generated@@172 2))))) (= $generated@@722 $generated@@723)) (and ($generated@@76 ($generated@@8 $generated@@712) $generated@@142 $generated@@723) ($generated@@403 $generated@@712))))) (and (=> (= (ControlFlow 0 22) (- 0 24)) ($generated@@145 ($generated@@8 ($generated@@172 0)) $generated@@142)) (=> ($generated@@145 ($generated@@8 ($generated@@172 0)) $generated@@142) (=> (and ($generated@@76 ($generated@@8 $generated@@713) $generated@@142 $generated@@723) ($generated@@403 $generated@@713)) (and (=> (= (ControlFlow 0 22) (- 0 23)) ($generated@@145 ($generated@@8 ($generated@@172 0)) $generated@@142)) (=> ($generated@@145 ($generated@@8 ($generated@@172 0)) $generated@@142) (=> (and (and ($generated@@403 $generated@@712) ($generated@@403 $generated@@713)) (= (ControlFlow 0 22) (- 0 21))) (= ($generated@@651 ($generated@@148 ($generated@@402 $generated@@718)) ($generated@@148 ($generated@@402 $generated@@720))) ($generated@@651 ($generated@@412 ($generated@@402 $generated@@712) ($generated@@482 ($generated@@627 $generated@@149) ($generated@@299 ($generated@@8 ($generated@@172 0))))) ($generated@@412 ($generated@@402 $generated@@713) ($generated@@482 ($generated@@627 $generated@@149) ($generated@@299 ($generated@@8 ($generated@@172 0))))))))))))))))))
(let (($generated@@757  (=> (and (and (and ($generated@@145 ($generated@@8 $generated@@718) $generated@@142) ($generated@@76 ($generated@@8 $generated@@718) $generated@@142 $generated@@714)) (and ($generated@@403 $generated@@718) ($generated@@145 ($generated@@8 $generated@@720) $generated@@142))) (and (and ($generated@@76 ($generated@@8 $generated@@720) $generated@@142 $generated@@714) ($generated@@403 $generated@@720)) (and ($generated@@403 $generated@@718) ($generated@@403 $generated@@720)))) (and (=> (= (ControlFlow 0 16) (- 0 20)) ($generated@@145 ($generated@@8 $generated@@718) $generated@@142)) (=> ($generated@@145 ($generated@@8 $generated@@718) $generated@@142) (=> (and (and ($generated@@76 ($generated@@8 $generated@@718) $generated@@142 $generated@@714) ($generated@@403 $generated@@718)) (and ($generated@@403 $generated@@718) (= $generated@@724 ($generated@@402 $generated@@718)))) (=> (and (and (and ($generated@@259 $generated@@725) ($generated@@717 $generated@@725)) ($generated@@150 $generated@@724)) (and (forall (($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@758) $generated@@2) true) (= ($generated@@0 ($generated@@83 $generated@@724 ($generated@@299 $generated@@758))) ($generated@@0 ($generated@@83 ($generated@@148 $generated@@724) ($generated@@299 ($generated@@8 (+ ($generated $generated@@758) 1)))))))
 :pattern ( ($generated@@83 $generated@@724 ($generated@@299 $generated@@758)))
)) (= $generated@@714 $generated@@725))) (and (=> (= (ControlFlow 0 16) (- 0 19)) ($generated@@145 ($generated@@8 $generated@@720) $generated@@142)) (=> ($generated@@145 ($generated@@8 $generated@@720) $generated@@142) (=> (and (and ($generated@@76 ($generated@@8 $generated@@720) $generated@@142 $generated@@725) ($generated@@403 $generated@@720)) (and ($generated@@403 $generated@@720) (= $generated@@726 ($generated@@402 $generated@@720)))) (=> (and (and (and ($generated@@259 $generated@@727) ($generated@@717 $generated@@727)) ($generated@@150 $generated@@726)) (and (forall (($generated@@759 T@U) ) (!  (=> (and (= (type $generated@@759) $generated@@2) true) (= ($generated@@0 ($generated@@83 $generated@@726 ($generated@@299 $generated@@759))) ($generated@@0 ($generated@@83 ($generated@@148 $generated@@726) ($generated@@299 ($generated@@8 (+ ($generated $generated@@759) 1)))))))
 :pattern ( ($generated@@83 $generated@@726 ($generated@@299 $generated@@759)))
)) (= $generated@@725 $generated@@727))) (and (=> (= (ControlFlow 0 16) (- 0 18)) ($generated@@145 ($generated@@8 $generated@@718) $generated@@142)) (=> ($generated@@145 ($generated@@8 $generated@@718) $generated@@142) (=> ($generated@@76 ($generated@@8 $generated@@718) $generated@@142 $generated@@727) (=> (and (and ($generated@@403 $generated@@718) (= $generated@@728 ($generated@@402 $generated@@718))) (and ($generated@@76 $generated@@728 ($generated@@151 $generated@@142) $generated@@727) ($generated@@150 ($generated@@402 $generated@@718)))) (and (=> (= (ControlFlow 0 16) (- 0 17)) ($generated@@145 ($generated@@8 $generated@@720) $generated@@142)) (=> ($generated@@145 ($generated@@8 $generated@@720) $generated@@142) (=> ($generated@@76 ($generated@@8 $generated@@720) $generated@@142 $generated@@727) (=> (and (and ($generated@@403 $generated@@720) (= $generated@@729 ($generated@@402 $generated@@720))) (and ($generated@@76 $generated@@729 ($generated@@151 $generated@@142) $generated@@727) ($generated@@150 ($generated@@402 $generated@@720)))) (=> (and (and (and ($generated@@403 $generated@@718) ($generated@@150 ($generated@@402 $generated@@718))) (and ($generated@@403 $generated@@720) ($generated@@150 ($generated@@402 $generated@@720)))) (= (ControlFlow 0 16) (- 0 15))) (= ($generated@@651 ($generated@@402 $generated@@718) ($generated@@402 $generated@@720)) ($generated@@651 ($generated@@148 ($generated@@402 $generated@@718)) ($generated@@148 ($generated@@402 $generated@@720))))))))))))))))))))))))
(let (($generated@@760  (=> (and ($generated@@145 ($generated@@8 $generated@@720) $generated@@142) ($generated@@76 ($generated@@8 $generated@@720) $generated@@142 $generated@@714)) (=> (and (and (and ($generated@@145 ($generated@@8 $generated@@718) $generated@@142) ($generated@@76 ($generated@@8 $generated@@718) $generated@@142 $generated@@714)) (and ($generated@@369 $generated@@720 $generated@@718) (= $generated@@730 ($generated@@134 ($generated@@311 $generated@@137) $generated@@720 $generated@@718)))) (and (and ($generated@@76 ($generated@@8 $generated@@730) $generated@@142 $generated@@714) ($generated@@171 ($generated@@134 ($generated@@311 $generated@@137) $generated@@720 $generated@@718))) (and ($generated@@369 $generated@@720 $generated@@718) ($generated@@171 ($generated@@134 ($generated@@311 $generated@@137) $generated@@720 $generated@@718))))) (and (=> (= (ControlFlow 0 7) (- 0 14)) ($generated@@145 ($generated@@8 $generated@@718) $generated@@142)) (=> ($generated@@145 ($generated@@8 $generated@@718) $generated@@142) (and (=> (= (ControlFlow 0 7) (- 0 13)) ($generated@@145 ($generated@@8 $generated@@720) $generated@@142)) (=> ($generated@@145 ($generated@@8 $generated@@720) $generated@@142) (and (=> (= (ControlFlow 0 7) (- 0 12)) (or (<= 0 $generated@@712) (= $generated@@718 $generated@@712))) (=> (or (<= 0 $generated@@712) (= $generated@@718 $generated@@712)) (and (=> (= (ControlFlow 0 7) (- 0 11)) (or (or (<= 0 $generated@@713) (< $generated@@718 $generated@@712)) (= $generated@@720 $generated@@713))) (=> (or (or (<= 0 $generated@@713) (< $generated@@718 $generated@@712)) (= $generated@@720 $generated@@713)) (and (=> (= (ControlFlow 0 7) (- 0 10)) (or (< $generated@@718 $generated@@712) (and (= $generated@@718 $generated@@712) (< $generated@@720 $generated@@713)))) (=> (or (< $generated@@718 $generated@@712) (and (= $generated@@718 $generated@@712) (< $generated@@720 $generated@@713))) (=> (and ($generated@@259 $generated@@731) ($generated@@717 $generated@@731)) (=> (and (and (and ($generated@@403 $generated@@718) ($generated@@403 $generated@@720)) (and ($generated@@369 $generated@@720 $generated@@718) ($generated@@171 ($generated@@134 ($generated@@311 $generated@@137) $generated@@720 $generated@@718)))) (and (= ($generated@@651 ($generated@@402 $generated@@718) ($generated@@402 $generated@@720))  (not ($generated@@170 ($generated@@134 ($generated@@311 ($generated@@311 $generated@@137)) $generated@@720 $generated@@718)))) (= $generated@@714 $generated@@731))) (and (=> (= (ControlFlow 0 7) (- 0 9)) ($generated@@145 ($generated@@8 $generated@@718) $generated@@142)) (=> ($generated@@145 ($generated@@8 $generated@@718) $generated@@142) (=> (and ($generated@@76 ($generated@@8 $generated@@718) $generated@@142 $generated@@731) ($generated@@403 $generated@@718)) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@145 ($generated@@8 $generated@@720) $generated@@142)) (=> ($generated@@145 ($generated@@8 $generated@@720) $generated@@142) (=> (and ($generated@@76 ($generated@@8 $generated@@720) $generated@@142 $generated@@731) ($generated@@403 $generated@@720)) (=> (and (and ($generated@@403 $generated@@718) ($generated@@403 $generated@@720)) (= (ControlFlow 0 7) (- 0 6))) (=  (not ($generated@@170 ($generated@@134 ($generated@@311 ($generated@@311 $generated@@137)) $generated@@720 $generated@@718))) ($generated@@651 ($generated@@402 $generated@@718) ($generated@@402 $generated@@720))))))))))))))))))))))))))
(let (($generated@@761  (=> (and ($generated@@76 ($generated@@8 $generated@@713) $generated@@142 $generated@@714) ($generated@@76 ($generated@@8 $generated@@712) $generated@@142 $generated@@714)) (=> (and (and ($generated@@369 $generated@@713 $generated@@712) (= $generated@@732 ($generated@@134 ($generated@@311 $generated@@137) $generated@@713 $generated@@712))) (and ($generated@@76 ($generated@@8 $generated@@732) $generated@@142 $generated@@714) ($generated@@171 ($generated@@134 ($generated@@311 $generated@@137) $generated@@713 $generated@@712)))) (=> (and (and (and ($generated@@369 $generated@@713 $generated@@712) ($generated@@171 ($generated@@134 ($generated@@311 $generated@@137) $generated@@713 $generated@@712))) (and ($generated@@259 $generated@@733) ($generated@@717 $generated@@733))) (and (and ($generated@@369 $generated@@713 $generated@@712) (and (and ($generated@@171 $generated@@713) (=> ($generated@@170 $generated@@713) ($generated@@171 $generated@@712))) (=> (not (and ($generated@@170 $generated@@713) (not ($generated@@170 $generated@@712)))) ($generated@@369 ($generated@@428 $generated@@713 ($generated@@172 2)) ($generated@@428 $generated@@712 ($generated@@172 2)))))) (and (= ($generated@@173 ($generated@@134 ($generated@@311 ($generated@@311 $generated@@137)) $generated@@713 $generated@@712) ($generated@@172 2)) (ite  (and ($generated@@170 $generated@@713) (not ($generated@@170 $generated@@712))) 0 ($generated@@173 ($generated@@134 ($generated@@311 ($generated@@311 $generated@@137)) ($generated@@428 $generated@@713 ($generated@@172 2)) ($generated@@428 $generated@@712 ($generated@@172 2))) ($generated@@172 2)))) (= $generated@@714 $generated@@733)))) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@145 ($generated@@8 $generated@@720) $generated@@142)) (=> ($generated@@145 ($generated@@8 $generated@@720) $generated@@142) (=> ($generated@@76 ($generated@@8 $generated@@720) $generated@@142 $generated@@733) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@145 ($generated@@8 $generated@@718) $generated@@142)) (=> ($generated@@145 ($generated@@8 $generated@@718) $generated@@142) (=> ($generated@@76 ($generated@@8 $generated@@718) $generated@@142 $generated@@733) (=> (and (and (and ($generated@@369 $generated@@720 $generated@@718) (= $generated@@734 ($generated@@134 ($generated@@311 $generated@@137) $generated@@720 $generated@@718))) (and ($generated@@76 ($generated@@8 $generated@@734) $generated@@142 $generated@@733) ($generated@@171 ($generated@@134 ($generated@@311 $generated@@137) $generated@@720 $generated@@718)))) (and (and ($generated@@369 $generated@@720 $generated@@718) ($generated@@171 ($generated@@134 ($generated@@311 $generated@@137) $generated@@720 $generated@@718))) (= (ControlFlow 0 3) (- 0 2)))) (=  (not ($generated@@170 ($generated@@134 ($generated@@311 ($generated@@311 $generated@@137)) $generated@@713 $generated@@712)))  (not ($generated@@170 ($generated@@134 ($generated@@311 ($generated@@311 $generated@@137)) $generated@@720 $generated@@718))))))))))))))))
(let (($generated@@762 true))
(let (($generated@@763  (=> (not (and ($generated@@170 $generated@@713) (not ($generated@@170 $generated@@712)))) (and (=> (= (ControlFlow 0 41) (- 0 43)) (not (= ($generated@@172 2) 0))) (=> (not (= ($generated@@172 2) 0)) (=> (= $generated@@718 ($generated@@428 $generated@@712 ($generated@@172 2))) (and (=> (= (ControlFlow 0 41) (- 0 42)) (not (= ($generated@@172 2) 0))) (=> (not (= ($generated@@172 2) 0)) (=> (= $generated@@720 ($generated@@428 $generated@@713 ($generated@@172 2))) (and (and (and (and (and (and (=> (= (ControlFlow 0 41) 1) $generated@@762) (=> (= (ControlFlow 0 41) 3) $generated@@761)) (=> (= (ControlFlow 0 41) 7) $generated@@760)) (=> (= (ControlFlow 0 41) 16) $generated@@757)) (=> (= (ControlFlow 0 41) 22) $generated@@756)) (=> (= (ControlFlow 0 41) 40) $generated@@750)) (=> (= (ControlFlow 0 41) 28) $generated@@754)))))))))))
(let (($generated@@764  (=> (and ($generated@@171 $generated@@713) (=> ($generated@@170 $generated@@713) ($generated@@171 $generated@@712))) (and (=> (= (ControlFlow 0 56) 55) $generated@@753) (=> (= (ControlFlow 0 56) 41) $generated@@763)))))
(let (($generated@@765  (=> (and (not ($generated@@170 $generated@@713)) (= (ControlFlow 0 58) 56)) $generated@@764)))
(let (($generated@@766  (=> (and (and ($generated@@170 $generated@@713) ($generated@@76 ($generated@@8 $generated@@712) $generated@@142 $generated@@714)) (and ($generated@@171 $generated@@712) (= (ControlFlow 0 57) 56))) $generated@@764)))
(let (($generated@@767  (=> (not (and (= $generated@@712 ($generated@@172 0)) (= $generated@@713 ($generated@@172 0)))) (=> (and ($generated@@76 ($generated@@8 $generated@@713) $generated@@142 $generated@@714) ($generated@@171 $generated@@713)) (and (=> (= (ControlFlow 0 59) 57) $generated@@766) (=> (= (ControlFlow 0 59) 58) $generated@@765))))))
(let (($generated@@768  (and (=> (= (ControlFlow 0 60) 27) $generated@@755) (=> (= (ControlFlow 0 60) 59) $generated@@767))))
(let (($generated@@769  (=> (and (not (= $generated@@712 ($generated@@172 0))) (= (ControlFlow 0 62) 60)) $generated@@768)))
(let (($generated@@770  (=> (and (= $generated@@712 ($generated@@172 0)) (= (ControlFlow 0 61) 60)) $generated@@768)))
(let (($generated@@771  (=> (= $generated@@735 ($generated@@181 $generated@@736 $generated@@737 $generated@@60 false)) (=> (and (and ($generated@@259 $generated@@714) ($generated@@717 $generated@@714)) (and (= $generated@@737 $generated@@714) (forall (($generated@@772 Int) ($generated@@773 Int) )  (=> (and (and (and (<= ($generated@@172 0) $generated@@772) (<= ($generated@@172 0) $generated@@773)) ($generated@@0 ($generated@@255 ($generated@@11 true)))) (or (and (<= 0 $generated@@772) (< $generated@@772 $generated@@712)) (and (= $generated@@772 $generated@@712) (and (<= 0 $generated@@773) (< $generated@@773 $generated@@713))))) (= ($generated@@651 ($generated@@402 $generated@@772) ($generated@@402 $generated@@773))  (not ($generated@@170 ($generated@@134 ($generated@@311 $generated@@137) $generated@@773 $generated@@772)))))))) (and (=> (= (ControlFlow 0 63) 61) $generated@@770) (=> (= (ControlFlow 0 63) 62) $generated@@769))))))
(let (($generated@@774  (=> (and ($generated@@259 $generated@@737) ($generated@@717 $generated@@737)) (=> (and (and (<= ($generated@@172 0) $generated@@712) (<= ($generated@@172 0) $generated@@713)) (and (= 4 $generated@@147) (= (ControlFlow 0 64) 63))) $generated@@771))))
$generated@@774))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
