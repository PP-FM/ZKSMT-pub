(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 10))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 (Int) Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@198 (T@T T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@291 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U Int) T@U)
(declare-fun $generated@@360 (T@U Int Int) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@T) T@U)
(declare-fun $generated@@469 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert  (and (and (and (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@142 $generated@@143)) 14)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@139 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@141 ($generated@@139 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@139 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@140 (type $generated@@148))))
(= (type ($generated@@137 $generated@@148)) ($generated@@78 $generated@@149 $generated@@4)))
 :pattern ( ($generated@@137 $generated@@148))
))) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@82 (type $generated@@151))))
(let (($generated@@154 ($generated@@81 (type $generated@@150))))
(= (type ($generated@@138 $generated@@150 $generated@@151 $generated@@152)) ($generated@@139 $generated@@154 $generated@@153))))
 :pattern ( ($generated@@138 $generated@@150 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@82 (type $generated@@156))))
(let (($generated@@159 ($generated@@81 (type $generated@@155))))
 (=> (and (and (= (type $generated@@155) ($generated@@78 $generated@@159 $generated@@4)) (= (type $generated@@156) ($generated@@78 $generated@@159 $generated@@158))) (= (type $generated@@157) $generated@@66)) (= ($generated@@137 ($generated@@138 $generated@@155 $generated@@156 $generated@@157)) $generated@@155))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@155 $generated@@156 $generated@@157)))
)))
(assert (forall (($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@141 (type $generated@@161))))
(let (($generated@@163 ($generated@@140 (type $generated@@161))))
(= (type ($generated@@160 $generated@@161)) ($generated@@78 $generated@@163 $generated@@162))))
 :pattern ( ($generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (let (($generated@@167 ($generated@@82 (type $generated@@165))))
(let (($generated@@168 ($generated@@81 (type $generated@@164))))
 (=> (and (and (= (type $generated@@164) ($generated@@78 $generated@@168 $generated@@4)) (= (type $generated@@165) ($generated@@78 $generated@@168 $generated@@167))) (= (type $generated@@166) $generated@@66)) (= ($generated@@160 ($generated@@138 $generated@@164 $generated@@165 $generated@@166)) $generated@@165))))
 :pattern ( ($generated@@160 ($generated@@138 $generated@@164 $generated@@165 $generated@@166)))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@2) ($generated@@169 $generated@@170 ($generated@@77 0)))
 :pattern ( ($generated@@169 $generated@@170 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@174 $generated@@175)) $generated@@66)
 :pattern ( ($generated@@172 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@66) (= (type $generated@@177) $generated@@66)) (= (type $generated@@178) $generated@@173)) ($generated@@169 $generated@@178 ($generated@@172 $generated@@176 $generated@@177))) ($generated@@171 $generated@@178))
 :pattern ( ($generated@@171 $generated@@178) ($generated@@169 $generated@@178 ($generated@@172 $generated@@176 $generated@@177)))
)))
(assert  (and (and (= ($generated@@1 $generated@@182) 16) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@182)
 :pattern ( ($generated@@181 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@173) (= (type $generated@@186) $generated@@173)) true) (= ($generated@@179 $generated@@185 $generated@@186)  (and (= ($generated@@180 $generated@@185) ($generated@@180 $generated@@186)) (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)))))
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
)))
(assert  (=> (<= 1 $generated@@187) (=> (or $generated@@188 (not (= 1 $generated@@187))) (and (<= ($generated@@189 0) $generated@@190) (< $generated@@190 10)))))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@66)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) ($generated@@78 $generated@@182 $generated@@2)) (= (type $generated@@195) $generated@@66)) ($generated@@169 $generated@@194 ($generated@@191 $generated@@195))) ($generated@@192 $generated@@194))
 :pattern ( ($generated@@169 $generated@@194 ($generated@@191 $generated@@195)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@202 $generated@@203)) 17)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@200 ($generated@@198 $generated@@206 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@198 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@200 (type $generated@@208))))
(= (type ($generated@@196 $generated@@208 $generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@196 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(let (($generated@@217 (type $generated@@213)))
(= (type ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@198 $generated@@217 $generated@@216))))
 :pattern ( ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@200 (type $generated@@218))))
 (=> (= (type $generated@@221) $generated@@222) (= ($generated@@196 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@219 $generated@@220) $generated@@221)))
 :weight 0
))) (and (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@196 ($generated@@201 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@196 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@196 ($generated@@201 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@196 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or true (= ($generated@@196 ($generated@@201 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@196 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@198 $generated@@79 $generated@@4))
 :pattern ( ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@69 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@79) (= (type $generated@@246) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@247) ($generated@@68 $generated@@4))) (= (type $generated@@249) $generated@@79)) (= (type $generated@@250) ($generated@@68 $generated@@251))) (= ($generated@@0 ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@173)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@182)) (= (type $generated@@259) $generated@@182)) (= ($generated@@169 ($generated@@252 $generated@@258 $generated@@259) ($generated@@172 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@169 ($generated@@252 $generated@@258 $generated@@259) ($generated@@172 $generated@@256 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@173) (= (type $generated@@261) $generated@@173)) (= ($generated@@179 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@179 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@66)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@78 $generated@@182 $generated@@4)) (= (type $generated@@265) $generated@@66)) (= ($generated@@169 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@182) ($generated@@0 ($generated@@83 $generated@@264 $generated@@266))) ($generated@@253 $generated@@266 $generated@@265))
 :pattern ( ($generated@@83 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@169 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@66)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@78 $generated@@182 $generated@@4)) (= (type $generated@@270) $generated@@66)) (= ($generated@@169 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@182) ($generated@@0 ($generated@@83 $generated@@269 $generated@@271))) ($generated@@253 $generated@@271 $generated@@270))
 :pattern ( ($generated@@83 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@169 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@189 $generated@@272) $generated@@272)
 :pattern ( ($generated@@189 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@273 $generated@@276) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 18)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 (type $generated@@284)))
(= (type ($generated@@277 $generated@@283 $generated@@284)) ($generated@@279 $generated@@285)))
 :pattern ( ($generated@@277 $generated@@283 $generated@@284))
))) (forall (($generated@@286 T@U) ) (! (= (type ($generated@@278 $generated@@286)) $generated@@66)
 :pattern ( ($generated@@278 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (= (type $generated@@287) ($generated@@279 $generated@@182)) (= (type $generated@@288) $generated@@182)) (= (type $generated@@289) $generated@@66)) (and ($generated@@169 $generated@@287 ($generated@@278 $generated@@289)) ($generated@@253 $generated@@288 $generated@@289))) ($generated@@169 ($generated@@277 $generated@@287 $generated@@288) ($generated@@278 $generated@@289)))
 :pattern ( ($generated@@169 ($generated@@277 $generated@@287 $generated@@288) ($generated@@278 $generated@@289)))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) $generated@@66) (= (type $generated@@293) $generated@@66)) (= (type $generated@@294) $generated@@182)) (= (type $generated@@295) $generated@@182)) (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@290 $generated@@296)) (= ($generated@@76 ($generated@@252 $generated@@294 $generated@@295) ($generated@@172 $generated@@292 $generated@@293) $generated@@296)  (and ($generated@@291 $generated@@294 $generated@@292 $generated@@296) ($generated@@291 $generated@@295 $generated@@293 $generated@@296))))
 :pattern ( ($generated@@76 ($generated@@252 $generated@@294 $generated@@295) ($generated@@172 $generated@@292 $generated@@293) $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@70)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@173) (= ($generated@@171 $generated@@299) (= ($generated@@297 $generated@@299) $generated@@61)))
 :pattern ( ($generated@@171 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@173) ($generated@@171 $generated@@300)) (exists (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (and (and (= (type $generated@@301) $generated@@182) (= (type $generated@@302) $generated@@182)) (= $generated@@300 ($generated@@252 $generated@@301 $generated@@302)))
 :no-pattern (type $generated@@301)
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@171 $generated@@300))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@303 $generated@@305)) ($generated@@279 $generated@@305))
 :pattern ( ($generated@@303 $generated@@305))
)))
(assert (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) 0)
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 (type $generated@@308)))
 (=> (= (type $generated@@307) ($generated@@279 $generated@@309)) (= ($generated@@304 ($generated@@277 $generated@@307 $generated@@308)) (+ 1 ($generated@@304 $generated@@307)))))
 :pattern ( ($generated@@277 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@182)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@66) (= (type $generated@@314) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@291 ($generated@@310 $generated@@312) $generated@@313 $generated@@314) ($generated@@76 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@291 ($generated@@310 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@78 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@81 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@78 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@83 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323)) ($generated@@139 $generated@@322 $generated@@323))
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@137 ($generated@@321 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@137 ($generated@@321 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@78 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@83 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@83 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@81 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@78 $generated@@346 $generated@@2)) (= ($generated@@192 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@83 $generated@@345 $generated@@347))) (<= ($generated ($generated@@83 $generated@@345 $generated@@347)) ($generated@@315 $generated@@345))))
 :pattern ( ($generated@@83 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@192 $generated@@345))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@182) ($generated@@253 $generated@@351 $generated@@134)) (and (= ($generated@@310 ($generated@@348 $generated@@2 $generated@@351)) $generated@@351) ($generated@@169 ($generated@@348 $generated@@2 $generated@@351) $generated@@134)))
 :pattern ( ($generated@@253 $generated@@351 $generated@@134))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 Int) ) (! (let (($generated@@355 ($generated@@280 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@355))
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 Int) ($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
 (=> (= (type $generated@@356) ($generated@@279 $generated@@359)) (and (=> (= $generated@@357 ($generated@@304 $generated@@356)) (= ($generated@@352 ($generated@@277 $generated@@356 $generated@@358) $generated@@357) $generated@@358)) (=> (not (= $generated@@357 ($generated@@304 $generated@@356))) (= ($generated@@352 ($generated@@277 $generated@@356 $generated@@358) $generated@@357) ($generated@@352 $generated@@356 $generated@@357))))))
 :pattern ( ($generated@@352 ($generated@@277 $generated@@356 $generated@@358) $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 Int) ($generated@@363 Int) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362 $generated@@363)) ($generated@@78 $generated@@182 $generated@@4))
 :pattern ( ($generated@@360 $generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 Int) ($generated@@366 Int) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@66) (= (type $generated@@367) $generated@@182)) (= ($generated@@0 ($generated@@83 ($generated@@360 $generated@@364 $generated@@365 $generated@@366) $generated@@367))  (and ($generated@@253 $generated@@367 $generated@@364) (and (<= $generated@@365 ($generated ($generated@@348 $generated@@2 $generated@@367))) (< ($generated ($generated@@348 $generated@@2 $generated@@367)) $generated@@366)))))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@364 $generated@@365 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@141 (type $generated@@368))))
(let (($generated@@370 ($generated@@140 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@139 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@321 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@137 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@141 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@78 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@141 (type $generated@@375))))
(let (($generated@@377 ($generated@@140 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@139 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@321 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@331 (type $generated@@379))))
(let (($generated@@381 ($generated@@330 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@329 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@328 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@83 ($generated@@327 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@327 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@331 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@78 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@331 (type $generated@@386))))
(let (($generated@@388 ($generated@@330 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@329 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@328 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@83 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@78 $generated@@182 $generated@@2)) (= (type $generated@@391) $generated@@66)) (= ($generated@@169 $generated@@390 ($generated@@191 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@182) (< 0 ($generated ($generated@@83 $generated@@390 $generated@@392)))) ($generated@@253 $generated@@392 $generated@@391))
 :pattern ( ($generated@@83 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@169 $generated@@390 ($generated@@191 $generated@@391)))
)))
(assert (forall (($generated@@394 T@U) ) (! (= (type ($generated@@393 $generated@@394)) ($generated@@78 $generated@@182 $generated@@182))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@182) (= (type $generated@@396) $generated@@182)) (= ($generated@@83 ($generated@@393 $generated@@395) $generated@@396) $generated@@395))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@78 $generated@@182 $generated@@4)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@397 ($generated@@262 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@182) ($generated@@0 ($generated@@83 $generated@@397 $generated@@400))) ($generated@@291 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@83 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@397 ($generated@@262 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@401) ($generated@@78 $generated@@182 $generated@@4)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@267 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@182) ($generated@@0 ($generated@@83 $generated@@401 $generated@@404))) ($generated@@291 $generated@@404 $generated@@402 $generated@@403))
 :pattern ( ($generated@@83 $generated@@401 $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@267 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(= ($generated ($generated@@83 ($generated@@316 $generated@@406) $generated@@405)) 0))
 :pattern ( (let (($generated@@406 (type $generated@@405)))
($generated@@83 ($generated@@316 $generated@@406) $generated@@405)))
)))
(assert (forall (($generated@@408 T@U) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@78 $generated@@182 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@139 $generated@@182 $generated@@182)) (= (type $generated@@410) $generated@@182)) (= ($generated@@0 ($generated@@83 ($generated@@407 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@83 ($generated@@137 $generated@@409) ($generated@@180 ($generated@@348 $generated@@173 $generated@@410)))) (= ($generated@@83 ($generated@@160 $generated@@409) ($generated@@180 ($generated@@348 $generated@@173 $generated@@410))) ($generated@@181 ($generated@@348 $generated@@173 $generated@@410))))))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@78 $generated@@182 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@331 (type $generated@@414))))
(let (($generated@@416 ($generated@@330 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@78 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@329 $generated@@182 $generated@@182)) (= (type $generated@@418) $generated@@182)) (= ($generated@@0 ($generated@@83 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@83 ($generated@@327 $generated@@417) ($generated@@180 ($generated@@348 $generated@@173 $generated@@418)))) (= ($generated@@83 ($generated@@412 $generated@@417) ($generated@@180 ($generated@@348 $generated@@173 $generated@@418))) ($generated@@181 ($generated@@348 $generated@@173 $generated@@418))))))
 :pattern ( ($generated@@83 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@140 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@139 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@83 ($generated@@137 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@83 ($generated@@160 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@83 ($generated@@137 $generated@@419) $generated@@423))
 :pattern ( ($generated@@83 ($generated@@160 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@330 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@329 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@83 ($generated@@383 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@83 ($generated@@327 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@83 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@83 ($generated@@327 $generated@@424) $generated@@428))
 :pattern ( ($generated@@83 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@83 ($generated@@383 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@66)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@139 $generated@@182 $generated@@182)) (= (type $generated@@433) $generated@@66)) (= (type $generated@@434) $generated@@66)) (= (type $generated@@435) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@182) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@432) $generated@@436))) (and ($generated@@291 ($generated@@83 ($generated@@160 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@291 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@83 ($generated@@160 $generated@@432) $generated@@436))
 :pattern ( ($generated@@83 ($generated@@137 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@76 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@329 $generated@@182 $generated@@182)) (= (type $generated@@441) $generated@@66)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@182) ($generated@@0 ($generated@@83 ($generated@@327 $generated@@440) $generated@@444))) (and ($generated@@291 ($generated@@83 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@291 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@83 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@83 ($generated@@327 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@76 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@446 T@T) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@78 $generated@@446 $generated@@4))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@331 (type $generated@@447))))
(let (($generated@@449 ($generated@@330 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@329 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@328 $generated@@449 $generated@@448)) (= ($generated@@327 $generated@@447) ($generated@@445 $generated@@449))))))
 :pattern ( ($generated@@327 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@331 (type $generated@@450))))
(let (($generated@@452 ($generated@@330 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@329 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@328 $generated@@452 $generated@@451)) (= ($generated@@383 $generated@@450) ($generated@@445 $generated@@451))))))
 :pattern ( ($generated@@383 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@331 (type $generated@@453))))
(let (($generated@@455 ($generated@@330 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@329 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@328 $generated@@455 $generated@@454)) (= ($generated@@411 $generated@@453) ($generated@@445 $generated@@182))))))
 :pattern ( ($generated@@411 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@141 (type $generated@@456))))
(let (($generated@@458 ($generated@@140 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@139 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@321 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@182) (= (type $generated@@460) $generated@@182)) ($generated@@0 ($generated@@83 ($generated@@407 $generated@@456) ($generated@@310 ($generated@@252 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@407 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@331 (type $generated@@461))))
(let (($generated@@463 ($generated@@330 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@329 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@328 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@182) (= (type $generated@@465) $generated@@182)) ($generated@@0 ($generated@@83 ($generated@@411 $generated@@461) ($generated@@310 ($generated@@252 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@411 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@182) ($generated@@253 $generated@@466 $generated@@46)) (and (= ($generated@@310 ($generated@@348 $generated@@2 $generated@@466)) $generated@@466) ($generated@@169 ($generated@@348 $generated@@2 $generated@@466) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@466 $generated@@46))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@182) ($generated@@253 $generated@@467 $generated@@47)) (and (= ($generated@@310 ($generated@@348 $generated@@3 $generated@@467)) $generated@@467) ($generated@@169 ($generated@@348 $generated@@3 $generated@@467) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@467 $generated@@47))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@182) ($generated@@253 $generated@@468 $generated@@44)) (and (= ($generated@@310 ($generated@@348 $generated@@4 $generated@@468)) $generated@@468) ($generated@@169 ($generated@@348 $generated@@4 $generated@@468) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@468 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@469) 20))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@182) ($generated@@253 $generated@@470 $generated@@45)) (and (= ($generated@@310 ($generated@@348 $generated@@469 $generated@@470)) $generated@@470) ($generated@@169 ($generated@@348 $generated@@469 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@66) (= ($generated@@253 ($generated@@310 $generated@@471) $generated@@472) ($generated@@169 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@253 ($generated@@310 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@81 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@78 $generated@@474 $generated@@2)) (<= 0 ($generated@@315 $generated@@473))))
 :pattern ( ($generated@@315 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@280 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@279 $generated@@476)) (<= 0 ($generated@@304 $generated@@475))))
 :pattern ( ($generated@@304 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@429 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@429 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@429 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@429 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@66) (= (type $generated@@486) $generated@@66)) (= ($generated@@74 ($generated@@429 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@66) (= (type $generated@@490) $generated@@66)) (= ($generated@@487 ($generated@@437 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@437 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@66) (= (type $generated@@494) $generated@@66)) (= ($generated@@491 ($generated@@437 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@437 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@66) (= (type $generated@@496) $generated@@66)) (= ($generated@@74 ($generated@@437 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@182) (= (type $generated@@498) $generated@@182)) (= ($generated@@297 ($generated@@252 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@66) (= (type $generated@@502) $generated@@66)) (= ($generated@@499 ($generated@@172 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@172 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@172 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@172 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@182) (= (type $generated@@508) $generated@@182)) (= ($generated@@180 ($generated@@252 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@252 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@182) (= (type $generated@@510) $generated@@182)) (= ($generated@@181 ($generated@@252 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@252 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@279 $generated@@182)) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@511 ($generated@@278 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@304 $generated@@511))) ($generated@@291 ($generated@@352 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@352 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@76 $generated@@511 ($generated@@278 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 Int) ) (! (= ($generated@@515 ($generated@@77 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@77 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@517 ($generated@@262 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@262 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@74 ($generated@@262 $generated@@520)) $generated@@54))
 :pattern ( ($generated@@262 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@66)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@66) (= ($generated@@521 ($generated@@267 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@267 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@66) (= ($generated@@74 ($generated@@267 $generated@@524)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@66)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@66) (= ($generated@@525 ($generated@@191 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@191 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@66) (= ($generated@@74 ($generated@@191 $generated@@528)) $generated@@56))
 :pattern ( ($generated@@191 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@66) (= ($generated@@529 ($generated@@278 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@278 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@66) (= ($generated@@74 ($generated@@278 $generated@@532)) $generated@@57))
 :pattern ( ($generated@@278 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@348 $generated@@534 ($generated@@310 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@310 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@139 $generated@@182 $generated@@182)) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@66)) (= ($generated@@169 $generated@@535 ($generated@@429 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@182) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@535) $generated@@538))) (and ($generated@@253 ($generated@@83 ($generated@@160 $generated@@535) $generated@@538) $generated@@537) ($generated@@253 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@83 ($generated@@160 $generated@@535) $generated@@538))
 :pattern ( ($generated@@83 ($generated@@137 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@169 $generated@@535 ($generated@@429 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@329 $generated@@182 $generated@@182)) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@66)) (= ($generated@@169 $generated@@539 ($generated@@437 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@182) ($generated@@0 ($generated@@83 ($generated@@327 $generated@@539) $generated@@542))) (and ($generated@@253 ($generated@@83 ($generated@@412 $generated@@539) $generated@@542) $generated@@541) ($generated@@253 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@83 ($generated@@412 $generated@@539) $generated@@542))
 :pattern ( ($generated@@83 ($generated@@327 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@169 $generated@@539 ($generated@@437 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@182) (= (type $generated@@546) $generated@@182)) (< ($generated@@543 $generated@@545) ($generated@@544 ($generated@@252 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@252 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@182) (= (type $generated@@548) $generated@@182)) (< ($generated@@543 $generated@@548) ($generated@@544 ($generated@@252 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@252 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@182) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) $generated@@66)) ($generated@@253 $generated@@549 ($generated@@429 $generated@@550 $generated@@551))) (and (= ($generated@@310 ($generated@@348 ($generated@@139 $generated@@182 $generated@@182) $generated@@549)) $generated@@549) ($generated@@169 ($generated@@348 ($generated@@139 $generated@@182 $generated@@182) $generated@@549) ($generated@@429 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@253 $generated@@549 ($generated@@429 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@182) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) $generated@@66)) ($generated@@253 $generated@@552 ($generated@@437 $generated@@553 $generated@@554))) (and (= ($generated@@310 ($generated@@348 ($generated@@329 $generated@@182 $generated@@182) $generated@@552)) $generated@@552) ($generated@@169 ($generated@@348 ($generated@@329 $generated@@182 $generated@@182) $generated@@552) ($generated@@437 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@253 $generated@@552 ($generated@@437 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@66) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) $generated@@182)) ($generated@@253 $generated@@557 ($generated@@172 $generated@@555 $generated@@556))) (and (= ($generated@@310 ($generated@@348 $generated@@173 $generated@@557)) $generated@@557) ($generated@@169 ($generated@@348 $generated@@173 $generated@@557) ($generated@@172 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@253 $generated@@557 ($generated@@172 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (not ($generated@@0 ($generated@@83 ($generated@@445 $generated@@559) $generated@@558))))
 :pattern ( (let (($generated@@559 (type $generated@@558)))
($generated@@83 ($generated@@445 $generated@@559) $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@560) ($generated@@78 $generated@@182 $generated@@4)) (= (type $generated@@561) ($generated@@78 $generated@@182 $generated@@182))) (= (type $generated@@562) $generated@@66)) (= (type $generated@@563) $generated@@66)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@182) ($generated@@0 ($generated@@83 $generated@@560 $generated@@564))) (and ($generated@@253 $generated@@564 $generated@@562) ($generated@@253 ($generated@@83 $generated@@561 $generated@@564) $generated@@563)))
 :no-pattern (type $generated@@564)
 :no-pattern ($generated $generated@@564)
 :no-pattern ($generated@@0 $generated@@564)
))) ($generated@@169 ($generated@@138 $generated@@560 $generated@@561 ($generated@@429 $generated@@562 $generated@@563)) ($generated@@429 $generated@@562 $generated@@563)))
 :pattern ( ($generated@@138 $generated@@560 $generated@@561 ($generated@@429 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@71)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@66) (= (type $generated@@568) $generated@@66)) (and (= ($generated@@74 ($generated@@172 $generated@@567 $generated@@568)) $generated@@62) (= ($generated@@565 ($generated@@172 $generated@@567 $generated@@568)) $generated@@64)))
 :pattern ( ($generated@@172 $generated@@567 $generated@@568))
)))
(assert  (and (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@280 (type $generated@@571))))
(= (type ($generated@@569 $generated@@571)) ($generated@@279 $generated@@572)))
 :pattern ( ($generated@@569 $generated@@571))
)) (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@280 (type $generated@@573))))
(= (type ($generated@@570 $generated@@573)) $generated@@574))
 :pattern ( ($generated@@570 $generated@@573))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (=> (= (type $generated@@575) ($generated@@279 $generated@@577)) (and (= ($generated@@569 ($generated@@277 $generated@@575 $generated@@576)) $generated@@575) (= ($generated@@570 ($generated@@277 $generated@@575 $generated@@576)) $generated@@576))))
 :pattern ( ($generated@@277 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@173) (= ($generated@@543 ($generated@@310 $generated@@578)) ($generated@@544 $generated@@578)))
 :pattern ( ($generated@@543 ($generated@@310 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@182) ($generated@@253 $generated@@579 ($generated@@77 0))) (and (= ($generated@@310 ($generated@@348 $generated@@2 $generated@@579)) $generated@@579) ($generated@@169 ($generated@@348 ($generated@@78 $generated@@182 $generated@@4) $generated@@579) ($generated@@77 0))))
 :pattern ( ($generated@@253 $generated@@579 ($generated@@77 0)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@182) (= (type $generated@@581) $generated@@66)) ($generated@@253 $generated@@580 ($generated@@262 $generated@@581))) (and (= ($generated@@310 ($generated@@348 ($generated@@78 $generated@@182 $generated@@4) $generated@@580)) $generated@@580) ($generated@@169 ($generated@@348 ($generated@@78 $generated@@182 $generated@@4) $generated@@580) ($generated@@262 $generated@@581))))
 :pattern ( ($generated@@253 $generated@@580 ($generated@@262 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@182) (= (type $generated@@583) $generated@@66)) ($generated@@253 $generated@@582 ($generated@@267 $generated@@583))) (and (= ($generated@@310 ($generated@@348 ($generated@@78 $generated@@182 $generated@@4) $generated@@582)) $generated@@582) ($generated@@169 ($generated@@348 ($generated@@78 $generated@@182 $generated@@4) $generated@@582) ($generated@@267 $generated@@583))))
 :pattern ( ($generated@@253 $generated@@582 ($generated@@267 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@182) (= (type $generated@@585) $generated@@66)) ($generated@@253 $generated@@584 ($generated@@191 $generated@@585))) (and (= ($generated@@310 ($generated@@348 ($generated@@78 $generated@@182 $generated@@2) $generated@@584)) $generated@@584) ($generated@@169 ($generated@@348 ($generated@@78 $generated@@182 $generated@@2) $generated@@584) ($generated@@191 $generated@@585))))
 :pattern ( ($generated@@253 $generated@@584 ($generated@@191 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@182) (= (type $generated@@587) $generated@@66)) ($generated@@253 $generated@@586 ($generated@@278 $generated@@587))) (and (= ($generated@@310 ($generated@@348 ($generated@@279 $generated@@182) $generated@@586)) $generated@@586) ($generated@@169 ($generated@@348 ($generated@@279 $generated@@182) $generated@@586) ($generated@@278 $generated@@587))))
 :pattern ( ($generated@@253 $generated@@586 ($generated@@278 $generated@@587)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@565 $generated@@134) $generated@@65))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@78 $generated@@182 $generated@@2)) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@588 ($generated@@191 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@182) (< 0 ($generated ($generated@@83 $generated@@588 $generated@@591)))) ($generated@@291 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@83 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@76 $generated@@588 ($generated@@191 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@173) (= (type $generated@@593) $generated@@66)) (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@290 $generated@@594) (and ($generated@@171 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@66) ($generated@@76 $generated@@592 ($generated@@172 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@76 $generated@@592 ($generated@@172 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@291 ($generated@@180 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@291 ($generated@@180 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@173) (= (type $generated@@597) $generated@@66)) (= (type $generated@@598) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@290 $generated@@598) (and ($generated@@171 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@66) ($generated@@76 $generated@@596 ($generated@@172 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@76 $generated@@596 ($generated@@172 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@291 ($generated@@181 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@291 ($generated@@181 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) (= ($generated@@169 $generated@@600 $generated@@134)  (and (<= ($generated@@189 0) ($generated $generated@@600)) (< ($generated $generated@@600) 10))))
 :pattern ( ($generated@@169 $generated@@600 $generated@@134))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@182) (= (type $generated@@602) $generated@@182)) (= ($generated@@252 ($generated@@273 $generated@@601) ($generated@@273 $generated@@602)) ($generated@@273 ($generated@@252 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@252 ($generated@@273 $generated@@601) ($generated@@273 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@310 ($generated@@8 ($generated@@189 $generated@@603))) ($generated@@273 ($generated@@310 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@310 ($generated@@8 ($generated@@189 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ) (! (= ($generated@@310 ($generated@@273 $generated@@604)) ($generated@@273 ($generated@@310 $generated@@604)))
 :pattern ( ($generated@@310 ($generated@@273 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@280 (type $generated@@605))))
 (=> (and (= (type $generated@@605) ($generated@@279 $generated@@606)) (= ($generated@@304 $generated@@605) 0)) (= $generated@@605 ($generated@@303 $generated@@606))))
 :pattern ( ($generated@@304 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@608)))
 (=> (and (and (= (type $generated@@607) ($generated@@78 $generated@@610 $generated@@2)) (= (type $generated@@609) $generated@@2)) (<= 0 ($generated $generated@@609))) (= ($generated@@315 ($generated@@84 $generated@@607 $generated@@608 $generated@@609)) (+ (- ($generated@@315 $generated@@607) ($generated ($generated@@83 $generated@@607 $generated@@608))) ($generated $generated@@609)))))
 :pattern ( ($generated@@315 ($generated@@84 $generated@@607 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@612) $generated@@2)) ($generated@@76 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@76 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@614) $generated@@3)) ($generated@@76 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@76 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@616) $generated@@4)) ($generated@@76 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@76 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@618) $generated@@469)) ($generated@@76 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@76 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@620) $generated@@182)) ($generated@@76 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@76 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@279 $generated@@182)) (= (type $generated@@622) $generated@@66)) (= ($generated@@169 $generated@@621 ($generated@@278 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@304 $generated@@621))) ($generated@@253 ($generated@@352 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@352 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@169 $generated@@621 ($generated@@278 $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@279 $generated@@182)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@304 $generated@@625))) (< ($generated@@544 ($generated@@348 $generated@@173 ($generated@@352 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@544 ($generated@@348 $generated@@173 ($generated@@352 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@139 $generated@@182 $generated@@182)) (= (type $generated@@628) $generated@@66)) (= (type $generated@@629) $generated@@66)) ($generated@@169 $generated@@627 ($generated@@429 $generated@@628 $generated@@629))) (and (and ($generated@@169 ($generated@@137 $generated@@627) ($generated@@262 $generated@@628)) ($generated@@169 ($generated@@372 $generated@@627) ($generated@@262 $generated@@629))) ($generated@@169 ($generated@@407 $generated@@627) ($generated@@262 ($generated@@172 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@169 $generated@@627 ($generated@@429 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@329 $generated@@182 $generated@@182)) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) $generated@@66)) ($generated@@169 $generated@@630 ($generated@@437 $generated@@631 $generated@@632))) (and (and ($generated@@169 ($generated@@327 $generated@@630) ($generated@@267 $generated@@631)) ($generated@@169 ($generated@@383 $generated@@630) ($generated@@267 $generated@@632))) ($generated@@169 ($generated@@411 $generated@@630) ($generated@@267 ($generated@@172 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@169 $generated@@630 ($generated@@437 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@169 $generated@@633 $generated@@46))
 :pattern ( ($generated@@169 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@169 $generated@@634 $generated@@47))
 :pattern ( ($generated@@169 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@169 $generated@@635 $generated@@44))
 :pattern ( ($generated@@169 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@469) ($generated@@169 $generated@@636 $generated@@45))
 :pattern ( ($generated@@169 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@182) ($generated@@169 $generated@@637 $generated@@48))
 :pattern ( ($generated@@169 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 (T@U) Bool)
(declare-fun $generated@@643 () T@U)
(assert  (and (and (and (= (type $generated@@639) ($generated@@198 $generated@@79 $generated@@4)) (= (type $generated@@640) $generated@@79)) (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@643) ($generated@@139 $generated@@182 $generated@@182))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@644 true))
(let (($generated@@645  (=> (and (not (and (<= ($generated@@189 0) $generated@@638) (< $generated@@638 5))) (= (ControlFlow 0 5) 2)) $generated@@644)))
(let (($generated@@646  (=> (and (and (<= ($generated@@189 0) $generated@@638) (< $generated@@638 5)) $generated@@188) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 ($generated@@189 0)) (< ($generated@@189 0) ($generated@@304 ($generated@@277 ($generated@@303 $generated@@182) ($generated@@310 ($generated@@8 $generated@@190))))))) (=> (and (<= 0 ($generated@@189 0)) (< ($generated@@189 0) ($generated@@304 ($generated@@277 ($generated@@303 $generated@@182) ($generated@@310 ($generated@@8 $generated@@190)))))) (=> (= (ControlFlow 0 3) 2) $generated@@644))))))
(let (($generated@@647  (=> (< $generated@@638 ($generated@@189 0)) (and (=> (= (ControlFlow 0 7) 3) $generated@@646) (=> (= (ControlFlow 0 7) 5) $generated@@645)))))
(let (($generated@@648  (=> (<= ($generated@@189 0) $generated@@638) (and (=> (= (ControlFlow 0 6) 3) $generated@@646) (=> (= (ControlFlow 0 6) 5) $generated@@645)))))
(let (($generated@@649  (and (=> (= (ControlFlow 0 8) 6) $generated@@648) (=> (= (ControlFlow 0 8) 7) $generated@@647))))
(let (($generated@@650 true))
(let (($generated@@651  (=> (= $generated@@639 ($generated@@197 $generated@@640 $generated@@641 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@649) (=> (= (ControlFlow 0 9) 1) $generated@@650)))))
(let (($generated@@652  (=> (and ($generated@@290 $generated@@641) ($generated@@642 $generated@@641)) (=> (and (and ($generated@@169 $generated@@643 ($generated@@429 $generated@@46 $generated@@134)) ($generated@@76 $generated@@643 ($generated@@429 $generated@@46 $generated@@134) $generated@@641)) (and (= 2 $generated@@187) (= (ControlFlow 0 10) 9))) $generated@@651))))
$generated@@652))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
