(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@313 (T@T T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@T) T@U)
(declare-fun $generated@@418 () T@T)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@461 (T@U Int) T@U)
(declare-fun $generated@@470 (T@U) Int)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@150)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267) ($generated@@76 $generated@@265 $generated@@266 $generated@@267)))
 :pattern ( ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@78 $generated@@270 $generated@@2))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@81 (type $generated@@271))))
 (=> (= (type $generated@@271) ($generated@@78 $generated@@272 $generated@@2)) (and (= (= ($generated@@268 $generated@@271) 0) (= $generated@@271 ($generated@@269 $generated@@272))) (=> (not (= ($generated@@268 $generated@@271) 0)) (exists (($generated@@273 T@U) ) (!  (and (= (type $generated@@273) $generated@@272) (< 0 ($generated ($generated@@83 $generated@@271 $generated@@273))))
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
))))))
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 18)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@78 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@83 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@83 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 19)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@78 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@83 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@83 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@81 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@78 $generated@@311 $generated@@2)) (= ($generated@@156 $generated@@310) (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@311) (and (<= 0 ($generated ($generated@@83 $generated@@310 $generated@@312))) (<= ($generated ($generated@@83 $generated@@310 $generated@@312)) ($generated@@268 $generated@@310))))
 :pattern ( ($generated@@83 $generated@@310 $generated@@312))
)))))
 :pattern ( ($generated@@156 $generated@@310))
)))
(assert (forall (($generated@@314 T@T) ($generated@@315 T@U) ) (! (= (type ($generated@@313 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@313 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@150) ($generated@@217 $generated@@316 $generated@@134)) (and (= ($generated@@263 ($generated@@313 $generated@@2 $generated@@316)) $generated@@316) ($generated@@137 ($generated@@313 $generated@@2 $generated@@316) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@316 $generated@@134))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@278 (type $generated@@317))))
(let (($generated@@319 ($generated@@277 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@276 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@275 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@83 ($generated@@274 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@274 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@278 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@78 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@278 (type $generated@@324))))
(let (($generated@@326 ($generated@@277 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@276 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@275 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@296 (type $generated@@328))))
(let (($generated@@330 ($generated@@295 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@294 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@293 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@292 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@296 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@296 (type $generated@@335))))
(let (($generated@@337 ($generated@@295 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@294 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@293 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@340) $generated@@66)) (= ($generated@@137 $generated@@339 ($generated@@155 $generated@@340)) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@339 $generated@@341)))) ($generated@@217 $generated@@341 $generated@@340))
 :pattern ( ($generated@@83 $generated@@339 $generated@@341))
))))
 :pattern ( ($generated@@137 $generated@@339 ($generated@@155 $generated@@340)))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@343) $generated@@66)) (= (type $generated@@344) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@342 ($generated@@226 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@150) ($generated@@0 ($generated@@83 $generated@@342 $generated@@345))) ($generated@@243 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@83 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@76 $generated@@342 ($generated@@226 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@346) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@347) $generated@@66)) (= (type $generated@@348) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@346 ($generated@@231 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@150) ($generated@@0 ($generated@@83 $generated@@346 $generated@@349))) ($generated@@243 $generated@@349 $generated@@347 $generated@@348))
 :pattern ( ($generated@@83 $generated@@346 $generated@@349))
))))
 :pattern ( ($generated@@76 $generated@@346 ($generated@@231 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= ($generated ($generated@@83 ($generated@@269 $generated@@351) $generated@@350)) 0))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@83 ($generated@@269 $generated@@351) $generated@@350)))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@278 (type $generated@@355))))
(let (($generated@@357 ($generated@@277 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@78 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@359) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@83 ($generated@@274 $generated@@358) ($generated@@148 ($generated@@313 $generated@@141 $generated@@359)))) (= ($generated@@83 ($generated@@353 $generated@@358) ($generated@@148 ($generated@@313 $generated@@141 $generated@@359))) ($generated@@149 ($generated@@313 $generated@@141 $generated@@359))))))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert  (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@362)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@360 $generated@@362))
)) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@296 (type $generated@@363))))
(let (($generated@@365 ($generated@@295 (type $generated@@363))))
(= (type ($generated@@361 $generated@@363)) ($generated@@78 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@361 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@367) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@360 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@83 ($generated@@292 $generated@@366) ($generated@@148 ($generated@@313 $generated@@141 $generated@@367)))) (= ($generated@@83 ($generated@@361 $generated@@366) ($generated@@148 ($generated@@313 $generated@@141 $generated@@367))) ($generated@@149 ($generated@@313 $generated@@141 $generated@@367))))))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@277 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@276 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@83 ($generated@@321 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@83 ($generated@@274 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@83 ($generated@@353 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@83 ($generated@@274 $generated@@368) $generated@@372))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@295 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@294 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@83 ($generated@@332 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@83 ($generated@@292 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@83 ($generated@@361 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@373) $generated@@377))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@83 ($generated@@332 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@66)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@66)) (= (type $generated@@383) $generated@@66)) (= (type $generated@@384) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@274 $generated@@381) $generated@@385))) (and ($generated@@243 ($generated@@83 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@243 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@274 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@76 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@66)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) $generated@@66)) (= (type $generated@@392) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@389) $generated@@393))) (and ($generated@@243 ($generated@@83 ($generated@@361 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@243 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@389) $generated@@393))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@76 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@T) ) (! (= (type ($generated@@394 $generated@@395)) ($generated@@78 $generated@@395 $generated@@4))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@296 (type $generated@@396))))
(let (($generated@@398 ($generated@@295 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@294 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@293 $generated@@398 $generated@@397)) (= ($generated@@292 $generated@@396) ($generated@@394 $generated@@398))))))
 :pattern ( ($generated@@292 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@296 (type $generated@@399))))
(let (($generated@@401 ($generated@@295 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@294 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@293 $generated@@401 $generated@@400)) (= ($generated@@332 $generated@@399) ($generated@@394 $generated@@400))))))
 :pattern ( ($generated@@332 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@296 (type $generated@@402))))
(let (($generated@@404 ($generated@@295 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@294 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@293 $generated@@404 $generated@@403)) (= ($generated@@360 $generated@@402) ($generated@@394 $generated@@150))))))
 :pattern ( ($generated@@360 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@278 (type $generated@@405))))
(let (($generated@@407 ($generated@@277 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@276 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@275 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (and (and (= (type $generated@@408) $generated@@150) (= (type $generated@@409) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@405) ($generated@@263 ($generated@@216 $generated@@408 $generated@@409)))))
 :no-pattern (type $generated@@408)
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@352 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@296 (type $generated@@410))))
(let (($generated@@412 ($generated@@295 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@294 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@293 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@150) (= (type $generated@@414) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@360 $generated@@410) ($generated@@263 ($generated@@216 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@360 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@150) ($generated@@217 $generated@@415 $generated@@46)) (and (= ($generated@@263 ($generated@@313 $generated@@2 $generated@@415)) $generated@@415) ($generated@@137 ($generated@@313 $generated@@2 $generated@@415) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@415 $generated@@46))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@150) ($generated@@217 $generated@@416 $generated@@47)) (and (= ($generated@@263 ($generated@@313 $generated@@3 $generated@@416)) $generated@@416) ($generated@@137 ($generated@@313 $generated@@3 $generated@@416) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@416 $generated@@47))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@150) ($generated@@217 $generated@@417 $generated@@44)) (and (= ($generated@@263 ($generated@@313 $generated@@4 $generated@@417)) $generated@@417) ($generated@@137 ($generated@@313 $generated@@4 $generated@@417) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@417 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@418) 20))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@217 $generated@@419 $generated@@45)) (and (= ($generated@@263 ($generated@@313 $generated@@418 $generated@@419)) $generated@@419) ($generated@@137 ($generated@@313 $generated@@418 $generated@@419) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@419 $generated@@45))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (= (type $generated@@421) $generated@@66) (= ($generated@@217 ($generated@@263 $generated@@420) $generated@@421) ($generated@@137 $generated@@420 $generated@@421)))
 :pattern ( ($generated@@217 ($generated@@263 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@81 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@78 $generated@@423 $generated@@2)) (<= 0 ($generated@@268 $generated@@422))))
 :pattern ( ($generated@@268 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@258 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@257 $generated@@425)) (<= 0 ($generated@@256 $generated@@424))))
 :pattern ( ($generated@@256 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@66)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@66) (= (type $generated@@429) $generated@@66)) (= ($generated@@426 ($generated@@378 $generated@@428 $generated@@429)) $generated@@428))
 :pattern ( ($generated@@378 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@66)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@66) (= (type $generated@@433) $generated@@66)) (= ($generated@@430 ($generated@@378 $generated@@432 $generated@@433)) $generated@@433))
 :pattern ( ($generated@@378 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@66) (= (type $generated@@435) $generated@@66)) (= ($generated@@74 ($generated@@378 $generated@@434 $generated@@435)) $generated@@58))
 :pattern ( ($generated@@378 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@66)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@66) (= (type $generated@@439) $generated@@66)) (= ($generated@@436 ($generated@@386 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@386 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@66)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@66) (= (type $generated@@443) $generated@@66)) (= ($generated@@440 ($generated@@386 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@386 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@74 ($generated@@386 $generated@@444 $generated@@445)) $generated@@59))
 :pattern ( ($generated@@386 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@150) (= (type $generated@@447) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@446 $generated@@447)) $generated@@61))
 :pattern ( ($generated@@216 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@66)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@448 ($generated@@140 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@140 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@140 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@140 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@150) (= (type $generated@@457) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@216 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) (= (type $generated@@459) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@216 $generated@@458 $generated@@459))
)))
(assert  (and (forall (($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@462))
)) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (! (let (($generated@@465 ($generated@@258 (type $generated@@463))))
(= (type ($generated@@461 $generated@@463 $generated@@464)) $generated@@465))
 :pattern ( ($generated@@461 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (= (type $generated@@466) ($generated@@257 $generated@@150)) (= (type $generated@@467) $generated@@66)) (= (type $generated@@468) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@466 ($generated@@460 $generated@@467) $generated@@468) (forall (($generated@@469 Int) ) (!  (=> (and (<= 0 $generated@@469) (< $generated@@469 ($generated@@256 $generated@@466))) ($generated@@243 ($generated@@461 $generated@@466 $generated@@469) $generated@@467 $generated@@468))
 :pattern ( ($generated@@461 $generated@@466 $generated@@469))
))))
 :pattern ( ($generated@@76 $generated@@466 ($generated@@460 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 Int) ) (! (= ($generated@@470 ($generated@@77 $generated@@471)) $generated@@471)
 :pattern ( ($generated@@77 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@66) (= ($generated@@472 ($generated@@226 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@226 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@475)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@66) (= ($generated@@476 ($generated@@231 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@231 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@479)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@66) (= ($generated@@480 ($generated@@155 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@155 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@483)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@66)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@66) (= ($generated@@484 ($generated@@460 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@460 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@66) (= ($generated@@74 ($generated@@460 $generated@@487)) $generated@@57))
 :pattern ( ($generated@@460 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@313 $generated@@489 ($generated@@263 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@263 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@491) $generated@@66)) (= (type $generated@@492) $generated@@66)) (= ($generated@@137 $generated@@490 ($generated@@378 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@274 $generated@@490) $generated@@493))) (and ($generated@@217 ($generated@@83 ($generated@@353 $generated@@490) $generated@@493) $generated@@492) ($generated@@217 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@490) $generated@@493))
 :pattern ( ($generated@@83 ($generated@@274 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@137 $generated@@490 ($generated@@378 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@495) $generated@@66)) (= (type $generated@@496) $generated@@66)) (= ($generated@@137 $generated@@494 ($generated@@386 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@494) $generated@@497))) (and ($generated@@217 ($generated@@83 ($generated@@361 $generated@@494) $generated@@497) $generated@@496) ($generated@@217 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@494) $generated@@497))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@137 $generated@@494 ($generated@@386 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) (= (type $generated@@501) $generated@@150)) (< ($generated@@498 $generated@@500) ($generated@@499 ($generated@@216 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@216 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@150) (= (type $generated@@503) $generated@@150)) (< ($generated@@498 $generated@@503) ($generated@@499 ($generated@@216 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@216 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@150) (= (type $generated@@505) $generated@@66)) (= (type $generated@@506) $generated@@66)) ($generated@@217 $generated@@504 ($generated@@378 $generated@@505 $generated@@506))) (and (= ($generated@@263 ($generated@@313 ($generated@@276 $generated@@150 $generated@@150) $generated@@504)) $generated@@504) ($generated@@137 ($generated@@313 ($generated@@276 $generated@@150 $generated@@150) $generated@@504) ($generated@@378 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@217 $generated@@504 ($generated@@378 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) $generated@@150) (= (type $generated@@508) $generated@@66)) (= (type $generated@@509) $generated@@66)) ($generated@@217 $generated@@507 ($generated@@386 $generated@@508 $generated@@509))) (and (= ($generated@@263 ($generated@@313 ($generated@@294 $generated@@150 $generated@@150) $generated@@507)) $generated@@507) ($generated@@137 ($generated@@313 ($generated@@294 $generated@@150 $generated@@150) $generated@@507) ($generated@@386 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@217 $generated@@507 ($generated@@386 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@150)) ($generated@@217 $generated@@512 ($generated@@140 $generated@@510 $generated@@511))) (and (= ($generated@@263 ($generated@@313 $generated@@141 $generated@@512)) $generated@@512) ($generated@@137 ($generated@@313 $generated@@141 $generated@@512) ($generated@@140 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@217 $generated@@512 ($generated@@140 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
 (not ($generated@@0 ($generated@@83 ($generated@@394 $generated@@514) $generated@@513))))
 :pattern ( (let (($generated@@514 (type $generated@@513)))
($generated@@83 ($generated@@394 $generated@@514) $generated@@513)))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@71)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@66) (= (type $generated@@518) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@517 $generated@@518)) $generated@@62) (= ($generated@@515 ($generated@@140 $generated@@517 $generated@@518)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@141) (= ($generated@@498 ($generated@@263 $generated@@519)) ($generated@@499 $generated@@519)))
 :pattern ( ($generated@@498 ($generated@@263 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@150) ($generated@@217 $generated@@520 ($generated@@77 0))) (and (= ($generated@@263 ($generated@@313 $generated@@2 $generated@@520)) $generated@@520) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@520) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@520 ($generated@@77 0)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@150) (= (type $generated@@522) $generated@@66)) ($generated@@217 $generated@@521 ($generated@@226 $generated@@522))) (and (= ($generated@@263 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@521)) $generated@@521) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@521) ($generated@@226 $generated@@522))))
 :pattern ( ($generated@@217 $generated@@521 ($generated@@226 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@150) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@523 ($generated@@231 $generated@@524))) (and (= ($generated@@263 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@523)) $generated@@523) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@523) ($generated@@231 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@523 ($generated@@231 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@155 $generated@@526))) (and (= ($generated@@263 ($generated@@313 ($generated@@78 $generated@@150 $generated@@2) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@2) $generated@@525) ($generated@@155 $generated@@526))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@155 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@66)) ($generated@@217 $generated@@527 ($generated@@460 $generated@@528))) (and (= ($generated@@263 ($generated@@313 ($generated@@257 $generated@@150) $generated@@527)) $generated@@527) ($generated@@137 ($generated@@313 ($generated@@257 $generated@@150) $generated@@527) ($generated@@460 $generated@@528))))
 :pattern ( ($generated@@217 $generated@@527 ($generated@@460 $generated@@528)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@515 $generated@@134) $generated@@65))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@529 ($generated@@155 $generated@@530) $generated@@531) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@529 $generated@@532)))) ($generated@@243 $generated@@532 $generated@@530 $generated@@531))
 :pattern ( ($generated@@83 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@76 $generated@@529 ($generated@@155 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@141) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@535) (and ($generated@@139 $generated@@533) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@66) ($generated@@76 $generated@@533 ($generated@@140 $generated@@534 $generated@@536) $generated@@535))
 :pattern ( ($generated@@76 $generated@@533 ($generated@@140 $generated@@534 $generated@@536) $generated@@535))
))))) ($generated@@243 ($generated@@148 $generated@@533) $generated@@534 $generated@@535))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@533) $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@141) (= (type $generated@@538) $generated@@66)) (= (type $generated@@539) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@539) (and ($generated@@139 $generated@@537) (exists (($generated@@540 T@U) ) (!  (and (= (type $generated@@540) $generated@@66) ($generated@@76 $generated@@537 ($generated@@140 $generated@@540 $generated@@538) $generated@@539))
 :pattern ( ($generated@@76 $generated@@537 ($generated@@140 $generated@@540 $generated@@538) $generated@@539))
))))) ($generated@@243 ($generated@@149 $generated@@537) $generated@@538 $generated@@539))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@537) $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@2) (= ($generated@@137 $generated@@541 $generated@@134)  (and (<= ($generated@@236 0) ($generated $generated@@541)) (< ($generated $generated@@541) 256))))
 :pattern ( ($generated@@137 $generated@@541 $generated@@134))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@542) ($generated@@238 $generated@@543)) ($generated@@238 ($generated@@216 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@542) ($generated@@238 $generated@@543)))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@263 ($generated@@8 ($generated@@236 $generated@@544))) ($generated@@238 ($generated@@263 ($generated@@8 $generated@@544))))
 :pattern ( ($generated@@263 ($generated@@8 ($generated@@236 $generated@@544))))
)))
(assert (forall (($generated@@545 T@U) ) (! (= ($generated@@263 ($generated@@238 $generated@@545)) ($generated@@238 ($generated@@263 $generated@@545)))
 :pattern ( ($generated@@263 ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@258 (type $generated@@546))))
 (=> (and (= (type $generated@@546) ($generated@@257 $generated@@547)) (= ($generated@@256 $generated@@546) 0)) (= $generated@@546 ($generated@@255 $generated@@547))))
 :pattern ( ($generated@@256 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@549)))
 (=> (and (and (= (type $generated@@548) ($generated@@78 $generated@@551 $generated@@2)) (= (type $generated@@550) $generated@@2)) (<= 0 ($generated $generated@@550))) (= ($generated@@268 ($generated@@84 $generated@@548 $generated@@549 $generated@@550)) (+ (- ($generated@@268 $generated@@548) ($generated ($generated@@83 $generated@@548 $generated@@549))) ($generated $generated@@550)))))
 :pattern ( ($generated@@268 ($generated@@84 $generated@@548 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@553) $generated@@2)) ($generated@@76 $generated@@553 $generated@@46 $generated@@552))
 :pattern ( ($generated@@76 $generated@@553 $generated@@46 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@555) $generated@@3)) ($generated@@76 $generated@@555 $generated@@47 $generated@@554))
 :pattern ( ($generated@@76 $generated@@555 $generated@@47 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@557) $generated@@4)) ($generated@@76 $generated@@557 $generated@@44 $generated@@556))
 :pattern ( ($generated@@76 $generated@@557 $generated@@44 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@559) $generated@@418)) ($generated@@76 $generated@@559 $generated@@45 $generated@@558))
 :pattern ( ($generated@@76 $generated@@559 $generated@@45 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@561) $generated@@150)) ($generated@@76 $generated@@561 $generated@@48 $generated@@560))
 :pattern ( ($generated@@76 $generated@@561 $generated@@48 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@257 $generated@@150)) (= (type $generated@@563) $generated@@66)) (= ($generated@@137 $generated@@562 ($generated@@460 $generated@@563)) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@256 $generated@@562))) ($generated@@217 ($generated@@461 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@461 $generated@@562 $generated@@564))
))))
 :pattern ( ($generated@@137 $generated@@562 ($generated@@460 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (= (type $generated@@566) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@256 $generated@@566))) (< ($generated@@499 ($generated@@313 $generated@@141 ($generated@@461 $generated@@566 $generated@@567))) ($generated@@565 $generated@@566))))
 :pattern ( ($generated@@499 ($generated@@313 $generated@@141 ($generated@@461 $generated@@566 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@66)) ($generated@@137 $generated@@568 ($generated@@378 $generated@@569 $generated@@570))) (and (and ($generated@@137 ($generated@@274 $generated@@568) ($generated@@226 $generated@@569)) ($generated@@137 ($generated@@321 $generated@@568) ($generated@@226 $generated@@570))) ($generated@@137 ($generated@@352 $generated@@568) ($generated@@226 ($generated@@140 $generated@@569 $generated@@570)))))
 :pattern ( ($generated@@137 $generated@@568 ($generated@@378 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@66)) ($generated@@137 $generated@@571 ($generated@@386 $generated@@572 $generated@@573))) (and (and ($generated@@137 ($generated@@292 $generated@@571) ($generated@@231 $generated@@572)) ($generated@@137 ($generated@@332 $generated@@571) ($generated@@231 $generated@@573))) ($generated@@137 ($generated@@360 $generated@@571) ($generated@@231 ($generated@@140 $generated@@572 $generated@@573)))))
 :pattern ( ($generated@@137 $generated@@571 ($generated@@386 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@2) ($generated@@137 $generated@@574 $generated@@46))
 :pattern ( ($generated@@137 $generated@@574 $generated@@46))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@3) ($generated@@137 $generated@@575 $generated@@47))
 :pattern ( ($generated@@137 $generated@@575 $generated@@47))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@4) ($generated@@137 $generated@@576 $generated@@44))
 :pattern ( ($generated@@137 $generated@@576 $generated@@44))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@418) ($generated@@137 $generated@@577 $generated@@45))
 :pattern ( ($generated@@137 $generated@@577 $generated@@45))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@150) ($generated@@137 $generated@@578 $generated@@48))
 :pattern ( ($generated@@137 $generated@@578 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () Int)
(declare-fun $generated@@583 (T@U) Bool)
(declare-fun $generated@@584 () Int)
(declare-fun $generated@@585 () Int)
(assert  (and (and (= (type $generated@@579) ($generated@@162 $generated@@79 $generated@@4)) (= (type $generated@@580) $generated@@79)) (= (type $generated@@581) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@586  (=> (and (= $generated@@579 ($generated@@161 $generated@@580 $generated@@581 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@137 ($generated@@8 (+ $generated@@582 1)) $generated@@134))))
(let (($generated@@587  (=> (and (and ($generated@@242 $generated@@581) ($generated@@583 $generated@@581)) (and (<= ($generated@@236 0) $generated@@582) (< $generated@@582 256))) (=> (and (and (and (<= ($generated@@236 0) $generated@@584) (< $generated@@584 256)) true) (and (= 1 $generated@@585) (= (ControlFlow 0 3) 2))) $generated@@586))))
$generated@@587)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
