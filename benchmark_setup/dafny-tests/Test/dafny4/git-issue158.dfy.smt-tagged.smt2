(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Int Int) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (Int) Int)
(declare-fun $generated@@204 (T@U T@U T@U) T@U)
(declare-fun $generated@@205 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@206 (T@T T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@327 (Real) Real)
(declare-fun $generated@@330 (T@U) Bool)
(declare-fun $generated@@331 (T@U T@U T@U) Bool)
(declare-fun $generated@@342 (T@T) T@U)
(declare-fun $generated@@343 (T@U) Int)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@363 (T@U) Int)
(declare-fun $generated@@364 (T@T) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@T) T@U)
(declare-fun $generated@@374 (T@T T@T) T@T)
(declare-fun $generated@@375 (T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@T T@T) T@U)
(declare-fun $generated@@392 (T@T T@T) T@T)
(declare-fun $generated@@393 (T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@411 (T@T T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@497 (T@U T@U) T@U)
(declare-fun $generated@@505 (T@U T@U) T@U)
(declare-fun $generated@@531 (T@T) T@U)
(declare-fun $generated@@555 () T@T)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@598 (T@U Int) T@U)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@625 (T@U) T@U)
(declare-fun $generated@@642 (T@U T@U T@U) T@U)
(declare-fun $generated@@724 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert  (and (and (= ($generated@@1 $generated@@141) 14) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 Int) ) (! (= (type ($generated@@140 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) $generated@@144)
 :pattern ( ($generated@@140 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Int) ($generated@@154 Int) ) (!  (=> (and (and (= (type $generated@@150) $generated@@85) (= (type $generated@@151) $generated@@141)) (= (type $generated@@152) $generated@@85)) (< ($generated@@142 $generated@@151) ($generated@@143 ($generated@@140 $generated@@150 $generated@@151 $generated@@152 $generated@@153 $generated@@154))))
 :pattern ( ($generated@@140 $generated@@150 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@157) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@155 $generated@@156 $generated@@157)) (forall (($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@85) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@156 $generated@@158) $generated@@60))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@157 $generated@@158) $generated@@60)))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@157 $generated@@158) $generated@@60))
)))
 :pattern ( ($generated@@155 $generated@@156 $generated@@157))
)))
(assert (= (type $generated@@159) $generated@@72))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@2) (= (type $generated@@161) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@160 $generated@@159 $generated@@161))
 :pattern ( ($generated@@82 $generated@@160 $generated@@159 $generated@@161))
)))
(assert  (and (= (type $generated@@162) $generated@@72) (= (type $generated@@163) $generated@@85)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@85) (= (type $generated@@165) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@164 $generated@@162 $generated@@165)  (or (= $generated@@164 $generated@@163) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@165 $generated@@164) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@164 $generated@@162 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@166 $generated@@167 ($generated@@83 0)))
 :pattern ( ($generated@@166 $generated@@167 ($generated@@83 0)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@170 $generated@@171)) $generated@@72)
 :pattern ( ($generated@@169 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@72) (= (type $generated@@173) $generated@@72)) (= (type $generated@@174) $generated@@144)) ($generated@@166 $generated@@174 ($generated@@169 $generated@@172 $generated@@173))) ($generated@@168 $generated@@174))
 :pattern ( ($generated@@168 $generated@@174) ($generated@@166 $generated@@174 ($generated@@169 $generated@@172 $generated@@173)))
)))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@141)
 :pattern ( ($generated@@176 $generated@@178))
)) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@141)
 :pattern ( ($generated@@177 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@144) (= (type $generated@@181) $generated@@144)) true) (= ($generated@@175 $generated@@180 $generated@@181)  (and (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)) (= ($generated@@177 $generated@@180) ($generated@@177 $generated@@181)))))
 :pattern ( ($generated@@175 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@84 $generated@@141 $generated@@2)) (= (type $generated@@186) $generated@@72)) ($generated@@166 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@166 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@72)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@72) (= (type $generated@@191) $generated@@144)) ($generated@@166 $generated@@191 ($generated@@188 $generated@@190))) ($generated@@187 $generated@@191))
 :pattern ( ($generated@@187 $generated@@191) ($generated@@166 $generated@@191 ($generated@@188 $generated@@190)))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@192 $generated@@193)) $generated@@72)
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> (= (type $generated@@194) $generated@@85) (= ($generated@@166 $generated@@194 $generated@@162)  (or (= $generated@@194 $generated@@163) (= ($generated@@192 $generated@@194) $generated@@162))))
 :pattern ( ($generated@@166 $generated@@194 $generated@@162))
)))
(assert (forall (($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(= (type ($generated@@195 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@195 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Int) ($generated@@203 Int) ) (!  (=> (and (and (= (type $generated@@199) $generated@@85) (= (type $generated@@200) $generated@@141)) (= (type $generated@@201) $generated@@85)) (= ($generated@@140 ($generated@@195 $generated@@199) ($generated@@195 $generated@@200) ($generated@@195 $generated@@201) ($generated@@196 $generated@@202) ($generated@@196 $generated@@203)) ($generated@@195 ($generated@@140 $generated@@199 $generated@@200 $generated@@201 $generated@@202 $generated@@203))))
 :pattern ( ($generated@@140 ($generated@@195 $generated@@199) ($generated@@195 $generated@@200) ($generated@@195 $generated@@201) ($generated@@196 $generated@@202) ($generated@@196 $generated@@203)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (= ($generated@@1 ($generated@@206 $generated@@210 $generated@@211)) 16)) (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (! (= ($generated@@207 ($generated@@206 $generated@@212 $generated@@213)) $generated@@212)
 :pattern ( ($generated@@206 $generated@@212 $generated@@213))
))) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@208 ($generated@@206 $generated@@214 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@206 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@208 (type $generated@@216))))
(= (type ($generated@@204 $generated@@216 $generated@@217 $generated@@218)) $generated@@219))
 :pattern ( ($generated@@204 $generated@@216 $generated@@217 $generated@@218))
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 (type $generated@@223)))
(let (($generated@@225 (type $generated@@221)))
(= (type ($generated@@209 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@206 $generated@@225 $generated@@224))))
 :pattern ( ($generated@@209 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@208 (type $generated@@226))))
 (=> (= (type $generated@@229) $generated@@230) (= ($generated@@204 ($generated@@209 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@227 $generated@@228) $generated@@229)))
 :weight 0
))) (and (and (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or (= $generated@@233 $generated@@235) (= ($generated@@204 ($generated@@209 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@204 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or (= $generated@@240 $generated@@242) (= ($generated@@204 ($generated@@209 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@204 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or true (= ($generated@@204 ($generated@@209 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@204 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
)))) (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Bool) ) (! (= (type ($generated@@205 $generated@@249 $generated@@250 $generated@@251 $generated@@252)) ($generated@@206 $generated@@85 $generated@@4))
 :pattern ( ($generated@@205 $generated@@249 $generated@@250 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 Bool) ($generated@@257 T@U) ($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@75 (type $generated@@258))))
 (=> (and (and (and (and (= (type $generated@@253) $generated@@85) (= (type $generated@@254) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@255) ($generated@@74 $generated@@4))) (= (type $generated@@257) $generated@@85)) (= (type $generated@@258) ($generated@@74 $generated@@259))) (= ($generated@@0 ($generated@@204 ($generated@@205 $generated@@253 $generated@@254 $generated@@255 $generated@@256) $generated@@257 $generated@@258))  (=> (and (not (= $generated@@257 $generated@@253)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@254 $generated@@257) $generated@@255))) $generated@@256))))
 :pattern ( ($generated@@204 ($generated@@205 $generated@@253 $generated@@254 $generated@@255 $generated@@256) $generated@@257 $generated@@258))
)))
(assert (= (type $generated@@260) $generated@@72))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@85) (= (type $generated@@262) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@261 $generated@@260 $generated@@262) ($generated@@82 $generated@@261 $generated@@162 $generated@@262)))
 :pattern ( ($generated@@82 $generated@@261 $generated@@260 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (= (type ($generated@@263 $generated@@265 $generated@@266)) $generated@@144)
 :pattern ( ($generated@@263 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) $generated@@72) (= (type $generated@@268) $generated@@72)) (= (type $generated@@269) $generated@@141)) (= (type $generated@@270) $generated@@141)) (= ($generated@@166 ($generated@@263 $generated@@269 $generated@@270) ($generated@@169 $generated@@267 $generated@@268))  (and ($generated@@264 $generated@@269 $generated@@267) ($generated@@264 $generated@@270 $generated@@268))))
 :pattern ( ($generated@@166 ($generated@@263 $generated@@269 $generated@@270) ($generated@@169 $generated@@267 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@144) (= (type $generated@@272) $generated@@144)) (= ($generated@@175 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@175 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@144) (= (type $generated@@275) $generated@@144)) (= ($generated@@273 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@273 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@76)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 Int) ($generated@@282 Int) ) (!  (=> (and (and (= (type $generated@@278) $generated@@85) (= (type $generated@@279) $generated@@141)) (= (type $generated@@280) $generated@@85)) (= ($generated@@276 ($generated@@140 $generated@@278 $generated@@279 $generated@@280 $generated@@281 $generated@@282)) $generated@@66))
 :pattern ( ($generated@@140 $generated@@278 $generated@@279 $generated@@280 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@85)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 Int) ($generated@@289 Int) ) (!  (=> (and (and (= (type $generated@@285) $generated@@85) (= (type $generated@@286) $generated@@141)) (= (type $generated@@287) $generated@@85)) (= ($generated@@283 ($generated@@140 $generated@@285 $generated@@286 $generated@@287 $generated@@288 $generated@@289)) $generated@@285))
 :pattern ( ($generated@@140 $generated@@285 $generated@@286 $generated@@287 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@141)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 Int) ($generated@@296 Int) ) (!  (=> (and (and (= (type $generated@@292) $generated@@85) (= (type $generated@@293) $generated@@141)) (= (type $generated@@294) $generated@@85)) (= ($generated@@290 ($generated@@140 $generated@@292 $generated@@293 $generated@@294 $generated@@295 $generated@@296)) $generated@@293))
 :pattern ( ($generated@@140 $generated@@292 $generated@@293 $generated@@294 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@85)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Int) ($generated@@303 Int) ) (!  (=> (and (and (= (type $generated@@299) $generated@@85) (= (type $generated@@300) $generated@@141)) (= (type $generated@@301) $generated@@85)) (= ($generated@@297 ($generated@@140 $generated@@299 $generated@@300 $generated@@301 $generated@@302 $generated@@303)) $generated@@301))
 :pattern ( ($generated@@140 $generated@@299 $generated@@300 $generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 Int) ($generated@@309 Int) ) (!  (=> (and (and (= (type $generated@@305) $generated@@85) (= (type $generated@@306) $generated@@141)) (= (type $generated@@307) $generated@@85)) (= ($generated@@304 ($generated@@140 $generated@@305 $generated@@306 $generated@@307 $generated@@308 $generated@@309)) $generated@@308))
 :pattern ( ($generated@@140 $generated@@305 $generated@@306 $generated@@307 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 Int) ($generated@@315 Int) ) (!  (=> (and (and (= (type $generated@@311) $generated@@85) (= (type $generated@@312) $generated@@141)) (= (type $generated@@313) $generated@@85)) (= ($generated@@310 ($generated@@140 $generated@@311 $generated@@312 $generated@@313 $generated@@314 $generated@@315)) $generated@@315))
 :pattern ( ($generated@@140 $generated@@311 $generated@@312 $generated@@313 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@72)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) ($generated@@84 $generated@@141 $generated@@4)) (= (type $generated@@319) $generated@@72)) (= ($generated@@166 $generated@@318 ($generated@@316 $generated@@319)) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@141) ($generated@@0 ($generated@@89 $generated@@318 $generated@@320))) ($generated@@264 $generated@@320 $generated@@319))
 :pattern ( ($generated@@89 $generated@@318 $generated@@320))
))))
 :pattern ( ($generated@@166 $generated@@318 ($generated@@316 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@72)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) ($generated@@84 $generated@@141 $generated@@4)) (= (type $generated@@324) $generated@@72)) (= ($generated@@166 $generated@@323 ($generated@@321 $generated@@324)) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@141) ($generated@@0 ($generated@@89 $generated@@323 $generated@@325))) ($generated@@264 $generated@@325 $generated@@324))
 :pattern ( ($generated@@89 $generated@@323 $generated@@325))
))))
 :pattern ( ($generated@@166 $generated@@323 ($generated@@321 $generated@@324)))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@196 $generated@@326) $generated@@326)
 :pattern ( ($generated@@196 $generated@@326))
)))
(assert (forall (($generated@@328 Real) ) (! (= ($generated@@327 $generated@@328) $generated@@328)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (! (= ($generated@@195 $generated@@329) $generated@@329)
 :pattern ( ($generated@@195 $generated@@329))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@332) $generated@@72) (= (type $generated@@333) $generated@@72)) (= (type $generated@@334) $generated@@141)) (= (type $generated@@335) $generated@@141)) (= (type $generated@@336) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@330 $generated@@336)) (= ($generated@@82 ($generated@@263 $generated@@334 $generated@@335) ($generated@@169 $generated@@332 $generated@@333) $generated@@336)  (and ($generated@@331 $generated@@334 $generated@@332 $generated@@336) ($generated@@331 $generated@@335 $generated@@333 $generated@@336))))
 :pattern ( ($generated@@82 ($generated@@263 $generated@@334 $generated@@335) ($generated@@169 $generated@@332 $generated@@333) $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@144) (= ($generated@@168 $generated@@337) (= ($generated@@276 $generated@@337) $generated@@61)))
 :pattern ( ($generated@@168 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@144) (= ($generated@@187 $generated@@338) (= ($generated@@276 $generated@@338) $generated@@66)))
 :pattern ( ($generated@@187 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@144) ($generated@@168 $generated@@339)) (exists (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (and (and (= (type $generated@@340) $generated@@141) (= (type $generated@@341) $generated@@141)) (= $generated@@339 ($generated@@263 $generated@@340 $generated@@341)))
 :no-pattern (type $generated@@340)
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
)))
 :pattern ( ($generated@@168 $generated@@339))
)))
(assert  (and (and (forall (($generated@@346 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@346)) 17)) (forall (($generated@@347 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@347)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347))
))) (forall (($generated@@348 T@T) ) (! (= (type ($generated@@342 $generated@@348)) ($generated@@344 $generated@@348))
 :pattern ( ($generated@@342 $generated@@348))
))))
(assert (forall (($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@349)) 0)
 :pattern ( ($generated@@342 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@141)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@72) (= (type $generated@@354) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@331 ($generated@@350 $generated@@352) $generated@@353 $generated@@354) ($generated@@82 $generated@@352 $generated@@353 $generated@@354)))
 :pattern ( ($generated@@331 ($generated@@350 $generated@@352) $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@355) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@356) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@357) $generated@@141)) (= (type $generated@@358) $generated@@72)) ($generated@@155 $generated@@355 $generated@@356)) ($generated@@331 $generated@@357 $generated@@358 $generated@@355)) ($generated@@331 $generated@@357 $generated@@358 $generated@@356))
 :pattern ( ($generated@@155 $generated@@355 $generated@@356) ($generated@@331 $generated@@357 $generated@@358 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@359) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@360) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@362) $generated@@72)) ($generated@@155 $generated@@359 $generated@@360)) ($generated@@82 $generated@@361 $generated@@362 $generated@@359)) ($generated@@82 $generated@@361 $generated@@362 $generated@@360))
 :pattern ( ($generated@@155 $generated@@359 $generated@@360) ($generated@@82 $generated@@361 $generated@@362 $generated@@359))
)))
(assert (forall (($generated@@365 T@T) ) (! (= (type ($generated@@364 $generated@@365)) ($generated@@84 $generated@@365 $generated@@2))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@87 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@84 $generated@@367 $generated@@2)) (and (= (= ($generated@@363 $generated@@366) 0) (= $generated@@366 ($generated@@364 $generated@@367))) (=> (not (= ($generated@@363 $generated@@366) 0)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (< 0 ($generated ($generated@@89 $generated@@366 $generated@@368))))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@77)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@72) (and (= ($generated@@80 ($generated@@188 $generated@@371)) $generated@@67) (= ($generated@@369 ($generated@@188 $generated@@371)) $generated@@71)))
 :pattern ( ($generated@@188 $generated@@371))
)))
(assert  (and (and (and (and (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (= ($generated@@1 ($generated@@374 $generated@@377 $generated@@378)) 18)) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@375 ($generated@@374 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@374 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= ($generated@@376 ($generated@@374 $generated@@381 $generated@@382)) $generated@@382)
 :pattern ( ($generated@@374 $generated@@381 $generated@@382))
))) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@375 (type $generated@@383))))
(= (type ($generated@@372 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@383))
))) (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (! (= (type ($generated@@373 $generated@@385 $generated@@386)) ($generated@@374 $generated@@385 $generated@@386))
 :pattern ( ($generated@@373 $generated@@385 $generated@@386))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@T) ) (! (let (($generated@@389 (type $generated@@387)))
 (not ($generated@@0 ($generated@@89 ($generated@@372 ($generated@@373 $generated@@389 $generated@@388)) $generated@@387))))
 :pattern ( (let (($generated@@389 (type $generated@@387)))
($generated@@89 ($generated@@372 ($generated@@373 $generated@@389 $generated@@388)) $generated@@387)))
)))
(assert  (and (and (and (and (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (= ($generated@@1 ($generated@@392 $generated@@395 $generated@@396)) 19)) (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (! (= ($generated@@393 ($generated@@392 $generated@@397 $generated@@398)) $generated@@397)
 :pattern ( ($generated@@392 $generated@@397 $generated@@398))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= ($generated@@394 ($generated@@392 $generated@@399 $generated@@400)) $generated@@400)
 :pattern ( ($generated@@392 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@393 (type $generated@@401))))
(= (type ($generated@@390 $generated@@401)) ($generated@@84 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@401))
))) (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (! (= (type ($generated@@391 $generated@@403 $generated@@404)) ($generated@@392 $generated@@403 $generated@@404))
 :pattern ( ($generated@@391 $generated@@403 $generated@@404))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@T) ) (! (let (($generated@@407 (type $generated@@405)))
 (not ($generated@@0 ($generated@@89 ($generated@@390 ($generated@@391 $generated@@407 $generated@@406)) $generated@@405))))
 :pattern ( (let (($generated@@407 (type $generated@@405)))
($generated@@89 ($generated@@390 ($generated@@391 $generated@@407 $generated@@406)) $generated@@405)))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@87 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@84 $generated@@409 $generated@@2)) (= ($generated@@183 $generated@@408) (forall (($generated@@410 T@U) ) (!  (=> (= (type $generated@@410) $generated@@409) (and (<= 0 ($generated ($generated@@89 $generated@@408 $generated@@410))) (<= ($generated ($generated@@89 $generated@@408 $generated@@410)) ($generated@@363 $generated@@408))))
 :pattern ( ($generated@@89 $generated@@408 $generated@@410))
)))))
 :pattern ( ($generated@@183 $generated@@408))
)))
(assert (forall (($generated@@412 T@T) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@412)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@141) ($generated@@264 $generated@@414 $generated@@162)) (and (= ($generated@@350 ($generated@@411 $generated@@85 $generated@@414)) $generated@@414) ($generated@@166 ($generated@@411 $generated@@85 $generated@@414) $generated@@162)))
 :pattern ( ($generated@@264 $generated@@414 $generated@@162))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@141) ($generated@@264 $generated@@415 $generated@@260)) (and (= ($generated@@350 ($generated@@411 $generated@@85 $generated@@415)) $generated@@415) ($generated@@166 ($generated@@411 $generated@@85 $generated@@415) $generated@@260)))
 :pattern ( ($generated@@264 $generated@@415 $generated@@260))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@141) ($generated@@264 $generated@@416 $generated@@159)) (and (= ($generated@@350 ($generated@@411 $generated@@2 $generated@@416)) $generated@@416) ($generated@@166 ($generated@@411 $generated@@2 $generated@@416) $generated@@159)))
 :pattern ( ($generated@@264 $generated@@416 $generated@@159))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@85) (= ($generated@@166 $generated@@417 $generated@@260)  (and ($generated@@166 $generated@@417 $generated@@162) (not (= $generated@@417 $generated@@163)))))
 :pattern ( ($generated@@166 $generated@@417 $generated@@260))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@376 (type $generated@@418))))
(let (($generated@@420 ($generated@@375 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@374 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@373 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@89 ($generated@@372 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@372 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@376 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@84 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@376 (type $generated@@425))))
(let (($generated@@427 ($generated@@375 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@374 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@373 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@89 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@394 (type $generated@@429))))
(let (($generated@@431 ($generated@@393 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@392 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@391 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) ($generated@@0 ($generated@@89 ($generated@@390 $generated@@429) $generated@@432)))
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@390 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@394 (type $generated@@434))))
(= (type ($generated@@433 $generated@@434)) ($generated@@84 $generated@@435 $generated@@4)))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@394 (type $generated@@436))))
(let (($generated@@438 ($generated@@393 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@392 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@391 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@437) ($generated@@0 ($generated@@89 ($generated@@433 $generated@@436) $generated@@439)))
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@433 $generated@@436))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (= (type $generated@@440) $generated@@144) (= (type $generated@@441) $generated@@144)) true) (= ($generated@@273 $generated@@440 $generated@@441)  (and (and (and (and (= ($generated@@283 $generated@@440) ($generated@@283 $generated@@441)) (= ($generated@@290 $generated@@440) ($generated@@290 $generated@@441))) (= ($generated@@297 $generated@@440) ($generated@@297 $generated@@441))) (= ($generated@@304 $generated@@440) ($generated@@304 $generated@@441))) (= ($generated@@310 $generated@@440) ($generated@@310 $generated@@441)))))
 :pattern ( ($generated@@273 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (= (type $generated@@442) $generated@@144) (= (type $generated@@443) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@330 $generated@@443) (and ($generated@@187 $generated@@442) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@72) ($generated@@82 $generated@@442 ($generated@@188 $generated@@444) $generated@@443))
 :pattern ( ($generated@@82 $generated@@442 ($generated@@188 $generated@@444) $generated@@443))
))))) ($generated@@82 ($generated@@8 ($generated@@304 $generated@@442)) $generated@@46 $generated@@443))
 :pattern ( ($generated@@82 ($generated@@8 ($generated@@304 $generated@@442)) $generated@@46 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@84 $generated@@141 $generated@@2)) (= (type $generated@@446) $generated@@72)) (= ($generated@@166 $generated@@445 ($generated@@182 $generated@@446)) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@141) (< 0 ($generated ($generated@@89 $generated@@445 $generated@@447)))) ($generated@@264 $generated@@447 $generated@@446))
 :pattern ( ($generated@@89 $generated@@445 $generated@@447))
))))
 :pattern ( ($generated@@166 $generated@@445 ($generated@@182 $generated@@446)))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 Int) ($generated@@453 Int) ($generated@@454 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@448) $generated@@72) (= (type $generated@@449) $generated@@85)) (= (type $generated@@450) $generated@@141)) (= (type $generated@@451) $generated@@85)) (= (type $generated@@454) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@330 $generated@@454)) (= ($generated@@82 ($generated@@140 $generated@@449 $generated@@450 $generated@@451 $generated@@452 $generated@@453) ($generated@@188 $generated@@448) $generated@@454)  (and (and (and (and ($generated@@82 $generated@@449 $generated@@162 $generated@@454) ($generated@@331 $generated@@450 $generated@@448 $generated@@454)) ($generated@@82 $generated@@451 $generated@@260 $generated@@454)) ($generated@@82 ($generated@@8 $generated@@452) $generated@@46 $generated@@454)) ($generated@@82 ($generated@@8 $generated@@453) $generated@@159 $generated@@454))))
 :pattern ( ($generated@@82 ($generated@@140 $generated@@449 $generated@@450 $generated@@451 $generated@@452 $generated@@453) ($generated@@188 $generated@@448) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (= (type $generated@@455) ($generated@@84 $generated@@141 $generated@@4)) (= (type $generated@@456) $generated@@72)) (= (type $generated@@457) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@455 ($generated@@316 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@141) ($generated@@0 ($generated@@89 $generated@@455 $generated@@458))) ($generated@@331 $generated@@458 $generated@@456 $generated@@457))
 :pattern ( ($generated@@89 $generated@@455 $generated@@458))
))))
 :pattern ( ($generated@@82 $generated@@455 ($generated@@316 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (= (type $generated@@459) ($generated@@84 $generated@@141 $generated@@4)) (= (type $generated@@460) $generated@@72)) (= (type $generated@@461) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@459 ($generated@@321 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@141) ($generated@@0 ($generated@@89 $generated@@459 $generated@@462))) ($generated@@331 $generated@@462 $generated@@460 $generated@@461))
 :pattern ( ($generated@@89 $generated@@459 $generated@@462))
))))
 :pattern ( ($generated@@82 $generated@@459 ($generated@@321 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(= ($generated ($generated@@89 ($generated@@364 $generated@@464) $generated@@463)) 0))
 :pattern ( (let (($generated@@464 (type $generated@@463)))
($generated@@89 ($generated@@364 $generated@@464) $generated@@463)))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 Int) ($generated@@470 Int) ) (!  (=> (and (and (and (= (type $generated@@465) $generated@@72) (= (type $generated@@466) $generated@@85)) (= (type $generated@@467) $generated@@141)) (= (type $generated@@468) $generated@@85)) (= ($generated@@166 ($generated@@140 $generated@@466 $generated@@467 $generated@@468 $generated@@469 $generated@@470) ($generated@@188 $generated@@465))  (and (and (and (and ($generated@@166 $generated@@466 $generated@@162) ($generated@@264 $generated@@467 $generated@@465)) ($generated@@166 $generated@@468 $generated@@260)) ($generated@@166 ($generated@@8 $generated@@469) $generated@@46)) ($generated@@166 ($generated@@8 $generated@@470) $generated@@159))))
 :pattern ( ($generated@@166 ($generated@@140 $generated@@466 $generated@@467 $generated@@468 $generated@@469 $generated@@470) ($generated@@188 $generated@@465)))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) ($generated@@84 $generated@@141 $generated@@4))
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@376 (type $generated@@474))))
(let (($generated@@476 ($generated@@375 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474)) ($generated@@84 $generated@@476 $generated@@475))))
 :pattern ( ($generated@@472 $generated@@474))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) ($generated@@374 $generated@@141 $generated@@141)) (= (type $generated@@478) $generated@@141)) (= ($generated@@0 ($generated@@89 ($generated@@471 $generated@@477) $generated@@478))  (and ($generated@@0 ($generated@@89 ($generated@@372 $generated@@477) ($generated@@176 ($generated@@411 $generated@@144 $generated@@478)))) (= ($generated@@89 ($generated@@472 $generated@@477) ($generated@@176 ($generated@@411 $generated@@144 $generated@@478))) ($generated@@177 ($generated@@411 $generated@@144 $generated@@478))))))
 :pattern ( ($generated@@89 ($generated@@471 $generated@@477) $generated@@478))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) ($generated@@84 $generated@@141 $generated@@4))
 :pattern ( ($generated@@479 $generated@@481))
)) (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@394 (type $generated@@482))))
(let (($generated@@484 ($generated@@393 (type $generated@@482))))
(= (type ($generated@@480 $generated@@482)) ($generated@@84 $generated@@484 $generated@@483))))
 :pattern ( ($generated@@480 $generated@@482))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) ($generated@@392 $generated@@141 $generated@@141)) (= (type $generated@@486) $generated@@141)) (= ($generated@@0 ($generated@@89 ($generated@@479 $generated@@485) $generated@@486))  (and ($generated@@0 ($generated@@89 ($generated@@390 $generated@@485) ($generated@@176 ($generated@@411 $generated@@144 $generated@@486)))) (= ($generated@@89 ($generated@@480 $generated@@485) ($generated@@176 ($generated@@411 $generated@@144 $generated@@486))) ($generated@@177 ($generated@@411 $generated@@144 $generated@@486))))))
 :pattern ( ($generated@@89 ($generated@@479 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(let (($generated@@490 ($generated@@375 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@374 $generated@@490 $generated@@489)) (= ($generated@@0 ($generated@@89 ($generated@@422 $generated@@487) $generated@@488)) (exists (($generated@@491 T@U) ) (!  (and (= (type $generated@@491) $generated@@490) (and ($generated@@0 ($generated@@89 ($generated@@372 $generated@@487) $generated@@491)) (= $generated@@488 ($generated@@89 ($generated@@472 $generated@@487) $generated@@491))))
 :pattern ( ($generated@@89 ($generated@@372 $generated@@487) $generated@@491))
 :pattern ( ($generated@@89 ($generated@@472 $generated@@487) $generated@@491))
))))))
 :pattern ( ($generated@@89 ($generated@@422 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(let (($generated@@495 ($generated@@393 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@392 $generated@@495 $generated@@494)) (= ($generated@@0 ($generated@@89 ($generated@@433 $generated@@492) $generated@@493)) (exists (($generated@@496 T@U) ) (!  (and (= (type $generated@@496) $generated@@495) (and ($generated@@0 ($generated@@89 ($generated@@390 $generated@@492) $generated@@496)) (= $generated@@493 ($generated@@89 ($generated@@480 $generated@@492) $generated@@496))))
 :pattern ( ($generated@@89 ($generated@@390 $generated@@492) $generated@@496))
 :pattern ( ($generated@@89 ($generated@@480 $generated@@492) $generated@@496))
))))))
 :pattern ( ($generated@@89 ($generated@@433 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@498 $generated@@499)) $generated@@72)
 :pattern ( ($generated@@497 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) ($generated@@374 $generated@@141 $generated@@141)) (= (type $generated@@501) $generated@@72)) (= (type $generated@@502) $generated@@72)) (= (type $generated@@503) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@500 ($generated@@497 $generated@@501 $generated@@502) $generated@@503) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@141) ($generated@@0 ($generated@@89 ($generated@@372 $generated@@500) $generated@@504))) (and ($generated@@331 ($generated@@89 ($generated@@472 $generated@@500) $generated@@504) $generated@@502 $generated@@503) ($generated@@331 $generated@@504 $generated@@501 $generated@@503)))
 :pattern ( ($generated@@89 ($generated@@472 $generated@@500) $generated@@504))
 :pattern ( ($generated@@89 ($generated@@372 $generated@@500) $generated@@504))
))))
 :pattern ( ($generated@@82 $generated@@500 ($generated@@497 $generated@@501 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (! (= (type ($generated@@505 $generated@@506 $generated@@507)) $generated@@72)
 :pattern ( ($generated@@505 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) ($generated@@392 $generated@@141 $generated@@141)) (= (type $generated@@509) $generated@@72)) (= (type $generated@@510) $generated@@72)) (= (type $generated@@511) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@508 ($generated@@505 $generated@@509 $generated@@510) $generated@@511) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@141) ($generated@@0 ($generated@@89 ($generated@@390 $generated@@508) $generated@@512))) (and ($generated@@331 ($generated@@89 ($generated@@480 $generated@@508) $generated@@512) $generated@@510 $generated@@511) ($generated@@331 $generated@@512 $generated@@509 $generated@@511)))
 :pattern ( ($generated@@89 ($generated@@480 $generated@@508) $generated@@512))
 :pattern ( ($generated@@89 ($generated@@390 $generated@@508) $generated@@512))
))))
 :pattern ( ($generated@@82 $generated@@508 ($generated@@505 $generated@@509 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@513) $generated@@144) (= (type $generated@@514) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@330 $generated@@514) (and ($generated@@187 $generated@@513) (exists (($generated@@515 T@U) ) (!  (and (= (type $generated@@515) $generated@@72) ($generated@@82 $generated@@513 ($generated@@188 $generated@@515) $generated@@514))
 :pattern ( ($generated@@82 $generated@@513 ($generated@@188 $generated@@515) $generated@@514))
))))) ($generated@@82 ($generated@@283 $generated@@513) $generated@@162 $generated@@514))
 :pattern ( ($generated@@82 ($generated@@283 $generated@@513) $generated@@162 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@516) $generated@@144) (= (type $generated@@517) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@330 $generated@@517) (and ($generated@@187 $generated@@516) (exists (($generated@@518 T@U) ) (!  (and (= (type $generated@@518) $generated@@72) ($generated@@82 $generated@@516 ($generated@@188 $generated@@518) $generated@@517))
 :pattern ( ($generated@@82 $generated@@516 ($generated@@188 $generated@@518) $generated@@517))
))))) ($generated@@82 ($generated@@297 $generated@@516) $generated@@260 $generated@@517))
 :pattern ( ($generated@@82 ($generated@@297 $generated@@516) $generated@@260 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@144) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@330 $generated@@520) (and ($generated@@187 $generated@@519) (exists (($generated@@521 T@U) ) (!  (and (= (type $generated@@521) $generated@@72) ($generated@@82 $generated@@519 ($generated@@188 $generated@@521) $generated@@520))
 :pattern ( ($generated@@82 $generated@@519 ($generated@@188 $generated@@521) $generated@@520))
))))) ($generated@@82 ($generated@@8 ($generated@@310 $generated@@519)) $generated@@159 $generated@@520))
 :pattern ( ($generated@@82 ($generated@@8 ($generated@@310 $generated@@519)) $generated@@159 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@522) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@523) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@524) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@522 $generated@@524))) (and ($generated@@155 $generated@@522 $generated@@523) ($generated@@155 $generated@@523 $generated@@524))) ($generated@@155 $generated@@522 $generated@@524))
 :pattern ( ($generated@@155 $generated@@522 $generated@@523) ($generated@@155 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@144) ($generated@@187 $generated@@525)) (exists (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 Int) ($generated@@530 Int) ) (!  (and (and (and (= (type $generated@@526) $generated@@85) (= (type $generated@@527) $generated@@141)) (= (type $generated@@528) $generated@@85)) (= $generated@@525 ($generated@@140 $generated@@526 $generated@@527 $generated@@528 $generated@@529 $generated@@530)))
 :no-pattern (type $generated@@526)
 :no-pattern (type $generated@@527)
 :no-pattern (type $generated@@528)
 :no-pattern ($generated $generated@@526)
 :no-pattern ($generated@@0 $generated@@526)
 :no-pattern ($generated $generated@@527)
 :no-pattern ($generated@@0 $generated@@527)
 :no-pattern ($generated $generated@@528)
 :no-pattern ($generated@@0 $generated@@528)
)))
 :pattern ( ($generated@@187 $generated@@525))
)))
(assert (forall (($generated@@532 T@T) ) (! (= (type ($generated@@531 $generated@@532)) ($generated@@84 $generated@@532 $generated@@4))
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@394 (type $generated@@533))))
(let (($generated@@535 ($generated@@393 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@392 $generated@@535 $generated@@534)) (= (= $generated@@533 ($generated@@391 $generated@@535 $generated@@534)) (= ($generated@@390 $generated@@533) ($generated@@531 $generated@@535))))))
 :pattern ( ($generated@@390 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@394 (type $generated@@536))))
(let (($generated@@538 ($generated@@393 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@392 $generated@@538 $generated@@537)) (= (= $generated@@536 ($generated@@391 $generated@@538 $generated@@537)) (= ($generated@@433 $generated@@536) ($generated@@531 $generated@@537))))))
 :pattern ( ($generated@@433 $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@394 (type $generated@@539))))
(let (($generated@@541 ($generated@@393 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@392 $generated@@541 $generated@@540)) (= (= $generated@@539 ($generated@@391 $generated@@541 $generated@@540)) (= ($generated@@479 $generated@@539) ($generated@@531 $generated@@141))))))
 :pattern ( ($generated@@479 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@376 (type $generated@@542))))
(let (($generated@@544 ($generated@@375 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@374 $generated@@544 $generated@@543)) (or (= $generated@@542 ($generated@@373 $generated@@544 $generated@@543)) (exists (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (and (and (= (type $generated@@545) $generated@@141) (= (type $generated@@546) $generated@@141)) ($generated@@0 ($generated@@89 ($generated@@471 $generated@@542) ($generated@@350 ($generated@@263 $generated@@545 $generated@@546)))))
 :no-pattern (type $generated@@545)
 :no-pattern (type $generated@@546)
 :no-pattern ($generated $generated@@545)
 :no-pattern ($generated@@0 $generated@@545)
 :no-pattern ($generated $generated@@546)
 :no-pattern ($generated@@0 $generated@@546)
))))))
 :pattern ( ($generated@@471 $generated@@542))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@394 (type $generated@@547))))
(let (($generated@@549 ($generated@@393 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@392 $generated@@549 $generated@@548)) (or (= $generated@@547 ($generated@@391 $generated@@549 $generated@@548)) (exists (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (and (and (= (type $generated@@550) $generated@@141) (= (type $generated@@551) $generated@@141)) ($generated@@0 ($generated@@89 ($generated@@479 $generated@@547) ($generated@@350 ($generated@@263 $generated@@550 $generated@@551)))))
 :no-pattern (type $generated@@550)
 :no-pattern (type $generated@@551)
 :no-pattern ($generated $generated@@550)
 :no-pattern ($generated@@0 $generated@@550)
 :no-pattern ($generated $generated@@551)
 :no-pattern ($generated@@0 $generated@@551)
))))))
 :pattern ( ($generated@@479 $generated@@547))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@141) ($generated@@264 $generated@@552 $generated@@46)) (and (= ($generated@@350 ($generated@@411 $generated@@2 $generated@@552)) $generated@@552) ($generated@@166 ($generated@@411 $generated@@2 $generated@@552) $generated@@46)))
 :pattern ( ($generated@@264 $generated@@552 $generated@@46))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@141) ($generated@@264 $generated@@553 $generated@@47)) (and (= ($generated@@350 ($generated@@411 $generated@@3 $generated@@553)) $generated@@553) ($generated@@166 ($generated@@411 $generated@@3 $generated@@553) $generated@@47)))
 :pattern ( ($generated@@264 $generated@@553 $generated@@47))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@141) ($generated@@264 $generated@@554 $generated@@44)) (and (= ($generated@@350 ($generated@@411 $generated@@4 $generated@@554)) $generated@@554) ($generated@@166 ($generated@@411 $generated@@4 $generated@@554) $generated@@44)))
 :pattern ( ($generated@@264 $generated@@554 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@555) 20))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@141) ($generated@@264 $generated@@556 $generated@@45)) (and (= ($generated@@350 ($generated@@411 $generated@@555 $generated@@556)) $generated@@556) ($generated@@166 ($generated@@411 $generated@@555 $generated@@556) $generated@@45)))
 :pattern ( ($generated@@264 $generated@@556 $generated@@45))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@72) (= ($generated@@264 ($generated@@350 $generated@@557) $generated@@558) ($generated@@166 $generated@@557 $generated@@558)))
 :pattern ( ($generated@@264 ($generated@@350 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@87 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@84 $generated@@560 $generated@@2)) (<= 0 ($generated@@363 $generated@@559))))
 :pattern ( ($generated@@363 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@345 (type $generated@@561))))
 (=> (= (type $generated@@561) ($generated@@344 $generated@@562)) (<= 0 ($generated@@343 $generated@@561))))
 :pattern ( ($generated@@343 $generated@@561))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@72)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@72) (= (type $generated@@566) $generated@@72)) (= ($generated@@563 ($generated@@497 $generated@@565 $generated@@566)) $generated@@565))
 :pattern ( ($generated@@497 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@72)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@72) (= (type $generated@@570) $generated@@72)) (= ($generated@@567 ($generated@@497 $generated@@569 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@497 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (= ($generated@@80 ($generated@@497 $generated@@571 $generated@@572)) $generated@@58))
 :pattern ( ($generated@@497 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@72)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@72) (= (type $generated@@576) $generated@@72)) (= ($generated@@573 ($generated@@505 $generated@@575 $generated@@576)) $generated@@575))
 :pattern ( ($generated@@505 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@72)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@72) (= (type $generated@@580) $generated@@72)) (= ($generated@@577 ($generated@@505 $generated@@579 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@505 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@72) (= (type $generated@@582) $generated@@72)) (= ($generated@@80 ($generated@@505 $generated@@581 $generated@@582)) $generated@@59))
 :pattern ( ($generated@@505 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@141) (= (type $generated@@584) $generated@@141)) (= ($generated@@276 ($generated@@263 $generated@@583 $generated@@584)) $generated@@61))
 :pattern ( ($generated@@263 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@72)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@72) (= (type $generated@@588) $generated@@72)) (= ($generated@@585 ($generated@@169 $generated@@587 $generated@@588)) $generated@@587))
 :pattern ( ($generated@@169 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@72)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@72) (= (type $generated@@592) $generated@@72)) (= ($generated@@589 ($generated@@169 $generated@@591 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@169 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@141) (= (type $generated@@594) $generated@@141)) (= ($generated@@176 ($generated@@263 $generated@@593 $generated@@594)) $generated@@593))
 :pattern ( ($generated@@263 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@141) (= (type $generated@@596) $generated@@141)) (= ($generated@@177 ($generated@@263 $generated@@595 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@263 $generated@@595 $generated@@596))
)))
(assert  (and (forall (($generated@@599 T@U) ) (! (= (type ($generated@@597 $generated@@599)) $generated@@72)
 :pattern ( ($generated@@597 $generated@@599))
)) (forall (($generated@@600 T@U) ($generated@@601 Int) ) (! (let (($generated@@602 ($generated@@345 (type $generated@@600))))
(= (type ($generated@@598 $generated@@600 $generated@@601)) $generated@@602))
 :pattern ( ($generated@@598 $generated@@600 $generated@@601))
))))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@344 $generated@@141)) (= (type $generated@@604) $generated@@72)) (= (type $generated@@605) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@603 ($generated@@597 $generated@@604) $generated@@605) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@343 $generated@@603))) ($generated@@331 ($generated@@598 $generated@@603 $generated@@606) $generated@@604 $generated@@605))
 :pattern ( ($generated@@598 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@82 $generated@@603 ($generated@@597 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@608 Int) ) (! (= ($generated@@607 ($generated@@83 $generated@@608)) $generated@@608)
 :pattern ( ($generated@@83 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@72)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@72) (= ($generated@@609 ($generated@@316 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@316 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@72) (= ($generated@@80 ($generated@@316 $generated@@612)) $generated@@54))
 :pattern ( ($generated@@316 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@72)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@72) (= ($generated@@613 ($generated@@321 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@321 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@72) (= ($generated@@80 ($generated@@321 $generated@@616)) $generated@@55))
 :pattern ( ($generated@@321 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@72)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@72) (= ($generated@@617 ($generated@@182 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@182 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@72) (= ($generated@@80 ($generated@@182 $generated@@620)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@72)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@72) (= ($generated@@621 ($generated@@597 $generated@@623)) $generated@@623))
 :pattern ( ($generated@@597 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@72) (= ($generated@@80 ($generated@@597 $generated@@624)) $generated@@57))
 :pattern ( ($generated@@597 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ) (! (= (type ($generated@@625 $generated@@626)) $generated@@72)
 :pattern ( ($generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@72) (= ($generated@@625 ($generated@@188 $generated@@627)) $generated@@627))
 :pattern ( ($generated@@188 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
(= ($generated@@411 $generated@@629 ($generated@@350 $generated@@628)) $generated@@628))
 :pattern ( ($generated@@350 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@630) ($generated@@374 $generated@@141 $generated@@141)) (= (type $generated@@631) $generated@@72)) (= (type $generated@@632) $generated@@72)) (= ($generated@@166 $generated@@630 ($generated@@497 $generated@@631 $generated@@632)) (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@141) ($generated@@0 ($generated@@89 ($generated@@372 $generated@@630) $generated@@633))) (and ($generated@@264 ($generated@@89 ($generated@@472 $generated@@630) $generated@@633) $generated@@632) ($generated@@264 $generated@@633 $generated@@631)))
 :pattern ( ($generated@@89 ($generated@@472 $generated@@630) $generated@@633))
 :pattern ( ($generated@@89 ($generated@@372 $generated@@630) $generated@@633))
))))
 :pattern ( ($generated@@166 $generated@@630 ($generated@@497 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@634) ($generated@@392 $generated@@141 $generated@@141)) (= (type $generated@@635) $generated@@72)) (= (type $generated@@636) $generated@@72)) (= ($generated@@166 $generated@@634 ($generated@@505 $generated@@635 $generated@@636)) (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@141) ($generated@@0 ($generated@@89 ($generated@@390 $generated@@634) $generated@@637))) (and ($generated@@264 ($generated@@89 ($generated@@480 $generated@@634) $generated@@637) $generated@@636) ($generated@@264 $generated@@637 $generated@@635)))
 :pattern ( ($generated@@89 ($generated@@480 $generated@@634) $generated@@637))
 :pattern ( ($generated@@89 ($generated@@390 $generated@@634) $generated@@637))
))))
 :pattern ( ($generated@@166 $generated@@634 ($generated@@505 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@141) (= (type $generated@@639) $generated@@141)) (< ($generated@@142 $generated@@638) ($generated@@143 ($generated@@263 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@263 $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@141) (= (type $generated@@641) $generated@@141)) (< ($generated@@142 $generated@@641) ($generated@@143 ($generated@@263 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@263 $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@645)))
(let (($generated@@647 (type $generated@@644)))
(= (type ($generated@@642 $generated@@643 $generated@@644 $generated@@645)) ($generated@@374 $generated@@647 $generated@@646))))
 :pattern ( ($generated@@642 $generated@@643 $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@651)))
(let (($generated@@653 (type $generated@@649)))
 (=> (and (= (type $generated@@648) ($generated@@374 $generated@@653 $generated@@652)) (= (type $generated@@650) $generated@@653)) (and (=> (= $generated@@650 $generated@@649) (and ($generated@@0 ($generated@@89 ($generated@@372 ($generated@@642 $generated@@648 $generated@@649 $generated@@651)) $generated@@650)) (= ($generated@@89 ($generated@@472 ($generated@@642 $generated@@648 $generated@@649 $generated@@651)) $generated@@650) $generated@@651))) (=> (not (= $generated@@650 $generated@@649)) (and (= ($generated@@0 ($generated@@89 ($generated@@372 ($generated@@642 $generated@@648 $generated@@649 $generated@@651)) $generated@@650)) ($generated@@0 ($generated@@89 ($generated@@372 $generated@@648) $generated@@650))) (= ($generated@@89 ($generated@@472 ($generated@@642 $generated@@648 $generated@@649 $generated@@651)) $generated@@650) ($generated@@89 ($generated@@472 $generated@@648) $generated@@650))))))))
 :pattern ( ($generated@@89 ($generated@@372 ($generated@@642 $generated@@648 $generated@@649 $generated@@651)) $generated@@650))
 :pattern ( ($generated@@89 ($generated@@472 ($generated@@642 $generated@@648 $generated@@649 $generated@@651)) $generated@@650))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) $generated@@141) (= (type $generated@@655) $generated@@72)) (= (type $generated@@656) $generated@@72)) ($generated@@264 $generated@@654 ($generated@@497 $generated@@655 $generated@@656))) (and (= ($generated@@350 ($generated@@411 ($generated@@374 $generated@@141 $generated@@141) $generated@@654)) $generated@@654) ($generated@@166 ($generated@@411 ($generated@@374 $generated@@141 $generated@@141) $generated@@654) ($generated@@497 $generated@@655 $generated@@656))))
 :pattern ( ($generated@@264 $generated@@654 ($generated@@497 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) $generated@@141) (= (type $generated@@658) $generated@@72)) (= (type $generated@@659) $generated@@72)) ($generated@@264 $generated@@657 ($generated@@505 $generated@@658 $generated@@659))) (and (= ($generated@@350 ($generated@@411 ($generated@@392 $generated@@141 $generated@@141) $generated@@657)) $generated@@657) ($generated@@166 ($generated@@411 ($generated@@392 $generated@@141 $generated@@141) $generated@@657) ($generated@@505 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@264 $generated@@657 ($generated@@505 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) $generated@@72) (= (type $generated@@661) $generated@@72)) (= (type $generated@@662) $generated@@141)) ($generated@@264 $generated@@662 ($generated@@169 $generated@@660 $generated@@661))) (and (= ($generated@@350 ($generated@@411 $generated@@144 $generated@@662)) $generated@@662) ($generated@@166 ($generated@@411 $generated@@144 $generated@@662) ($generated@@169 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@264 $generated@@662 ($generated@@169 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) $generated@@144) (= (type $generated@@664) $generated@@72)) (= (type $generated@@665) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@330 $generated@@665) (and ($generated@@187 $generated@@663) ($generated@@82 $generated@@663 ($generated@@188 $generated@@664) $generated@@665)))) ($generated@@331 ($generated@@290 $generated@@663) $generated@@664 $generated@@665))
 :pattern ( ($generated@@331 ($generated@@290 $generated@@663) $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ) (! (let (($generated@@667 (type $generated@@666)))
 (not ($generated@@0 ($generated@@89 ($generated@@531 $generated@@667) $generated@@666))))
 :pattern ( (let (($generated@@667 (type $generated@@666)))
($generated@@89 ($generated@@531 $generated@@667) $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@72) (= (type $generated@@669) $generated@@72)) (and (= ($generated@@80 ($generated@@169 $generated@@668 $generated@@669)) $generated@@62) (= ($generated@@369 ($generated@@169 $generated@@668 $generated@@669)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@144) (= ($generated@@142 ($generated@@350 $generated@@670)) ($generated@@143 $generated@@670)))
 :pattern ( ($generated@@142 ($generated@@350 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@141) ($generated@@264 $generated@@671 ($generated@@83 0))) (and (= ($generated@@350 ($generated@@411 $generated@@2 $generated@@671)) $generated@@671) ($generated@@166 ($generated@@411 ($generated@@84 $generated@@141 $generated@@4) $generated@@671) ($generated@@83 0))))
 :pattern ( ($generated@@264 $generated@@671 ($generated@@83 0)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (= (type $generated@@672) $generated@@141) (= (type $generated@@673) $generated@@72)) ($generated@@264 $generated@@672 ($generated@@316 $generated@@673))) (and (= ($generated@@350 ($generated@@411 ($generated@@84 $generated@@141 $generated@@4) $generated@@672)) $generated@@672) ($generated@@166 ($generated@@411 ($generated@@84 $generated@@141 $generated@@4) $generated@@672) ($generated@@316 $generated@@673))))
 :pattern ( ($generated@@264 $generated@@672 ($generated@@316 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (= (type $generated@@674) $generated@@141) (= (type $generated@@675) $generated@@72)) ($generated@@264 $generated@@674 ($generated@@321 $generated@@675))) (and (= ($generated@@350 ($generated@@411 ($generated@@84 $generated@@141 $generated@@4) $generated@@674)) $generated@@674) ($generated@@166 ($generated@@411 ($generated@@84 $generated@@141 $generated@@4) $generated@@674) ($generated@@321 $generated@@675))))
 :pattern ( ($generated@@264 $generated@@674 ($generated@@321 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (= (type $generated@@676) $generated@@141) (= (type $generated@@677) $generated@@72)) ($generated@@264 $generated@@676 ($generated@@182 $generated@@677))) (and (= ($generated@@350 ($generated@@411 ($generated@@84 $generated@@141 $generated@@2) $generated@@676)) $generated@@676) ($generated@@166 ($generated@@411 ($generated@@84 $generated@@141 $generated@@2) $generated@@676) ($generated@@182 $generated@@677))))
 :pattern ( ($generated@@264 $generated@@676 ($generated@@182 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (= (type $generated@@678) $generated@@141) (= (type $generated@@679) $generated@@72)) ($generated@@264 $generated@@678 ($generated@@597 $generated@@679))) (and (= ($generated@@350 ($generated@@411 ($generated@@344 $generated@@141) $generated@@678)) $generated@@678) ($generated@@166 ($generated@@411 ($generated@@344 $generated@@141) $generated@@678) ($generated@@597 $generated@@679))))
 :pattern ( ($generated@@264 $generated@@678 ($generated@@597 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@680) $generated@@72) (= (type $generated@@681) $generated@@141)) ($generated@@264 $generated@@681 ($generated@@188 $generated@@680))) (and (= ($generated@@350 ($generated@@411 $generated@@144 $generated@@681)) $generated@@681) ($generated@@166 ($generated@@411 $generated@@144 $generated@@681) ($generated@@188 $generated@@680))))
 :pattern ( ($generated@@264 $generated@@681 ($generated@@188 $generated@@680)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (! (let (($generated@@686 (type $generated@@685)))
 (=> (and (and (and (= (type $generated@@682) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@683) $generated@@85)) (= (type $generated@@684) ($generated@@74 $generated@@686))) ($generated@@330 ($generated@@90 $generated@@682 $generated@@683 ($generated@@92 ($generated@@89 $generated@@682 $generated@@683) $generated@@684 $generated@@685)))) ($generated@@155 $generated@@682 ($generated@@90 $generated@@682 $generated@@683 ($generated@@92 ($generated@@89 $generated@@682 $generated@@683) $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@90 $generated@@682 $generated@@683 ($generated@@92 ($generated@@89 $generated@@682 $generated@@683) $generated@@684 $generated@@685)))
)))
(assert (= ($generated@@80 $generated@@162) $generated@@63))
(assert (= ($generated@@369 $generated@@162) $generated@@69))
(assert (= ($generated@@80 $generated@@260) $generated@@64))
(assert (= ($generated@@369 $generated@@260) $generated@@69))
(assert (= ($generated@@80 $generated@@159) $generated@@65))
(assert (= ($generated@@369 $generated@@159) $generated@@70))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (= (type $generated@@687) ($generated@@84 $generated@@141 $generated@@2)) (= (type $generated@@688) $generated@@72)) (= (type $generated@@689) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@687 ($generated@@182 $generated@@688) $generated@@689) (forall (($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@141) (< 0 ($generated ($generated@@89 $generated@@687 $generated@@690)))) ($generated@@331 $generated@@690 $generated@@688 $generated@@689))
 :pattern ( ($generated@@89 $generated@@687 $generated@@690))
))))
 :pattern ( ($generated@@82 $generated@@687 ($generated@@182 $generated@@688) $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (and (= (type $generated@@691) $generated@@144) (= (type $generated@@692) $generated@@72)) (= (type $generated@@693) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@330 $generated@@693) (and ($generated@@168 $generated@@691) (exists (($generated@@694 T@U) ) (!  (and (= (type $generated@@694) $generated@@72) ($generated@@82 $generated@@691 ($generated@@169 $generated@@692 $generated@@694) $generated@@693))
 :pattern ( ($generated@@82 $generated@@691 ($generated@@169 $generated@@692 $generated@@694) $generated@@693))
))))) ($generated@@331 ($generated@@176 $generated@@691) $generated@@692 $generated@@693))
 :pattern ( ($generated@@331 ($generated@@176 $generated@@691) $generated@@692 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) $generated@@144) (= (type $generated@@696) $generated@@72)) (= (type $generated@@697) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@330 $generated@@697) (and ($generated@@168 $generated@@695) (exists (($generated@@698 T@U) ) (!  (and (= (type $generated@@698) $generated@@72) ($generated@@82 $generated@@695 ($generated@@169 $generated@@698 $generated@@696) $generated@@697))
 :pattern ( ($generated@@82 $generated@@695 ($generated@@169 $generated@@698 $generated@@696) $generated@@697))
))))) ($generated@@331 ($generated@@177 $generated@@695) $generated@@696 $generated@@697))
 :pattern ( ($generated@@331 ($generated@@177 $generated@@695) $generated@@696 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@2) (= ($generated@@166 $generated@@699 $generated@@159)  (and (<= ($generated@@196 0) ($generated $generated@@699)) (< ($generated $generated@@699) 256))))
 :pattern ( ($generated@@166 $generated@@699 $generated@@159))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@700) $generated@@141) (= (type $generated@@701) $generated@@141)) (= ($generated@@263 ($generated@@195 $generated@@700) ($generated@@195 $generated@@701)) ($generated@@195 ($generated@@263 $generated@@700 $generated@@701))))
 :pattern ( ($generated@@263 ($generated@@195 $generated@@700) ($generated@@195 $generated@@701)))
)))
(assert (forall (($generated@@702 Int) ) (! (= ($generated@@350 ($generated@@8 ($generated@@196 $generated@@702))) ($generated@@195 ($generated@@350 ($generated@@8 $generated@@702))))
 :pattern ( ($generated@@350 ($generated@@8 ($generated@@196 $generated@@702))))
)))
(assert (forall (($generated@@703 Real) ) (! (= ($generated@@350 ($generated@@9 ($generated@@327 $generated@@703))) ($generated@@195 ($generated@@350 ($generated@@9 $generated@@703))))
 :pattern ( ($generated@@350 ($generated@@9 ($generated@@327 $generated@@703))))
)))
(assert (forall (($generated@@704 T@U) ) (! (= ($generated@@350 ($generated@@195 $generated@@704)) ($generated@@195 ($generated@@350 $generated@@704)))
 :pattern ( ($generated@@350 ($generated@@195 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ) (! (let (($generated@@706 ($generated@@345 (type $generated@@705))))
 (=> (and (= (type $generated@@705) ($generated@@344 $generated@@706)) (= ($generated@@343 $generated@@705) 0)) (= $generated@@705 ($generated@@342 $generated@@706))))
 :pattern ( ($generated@@343 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (! (let (($generated@@710 (type $generated@@708)))
 (=> (and (and (= (type $generated@@707) ($generated@@84 $generated@@710 $generated@@2)) (= (type $generated@@709) $generated@@2)) (<= 0 ($generated $generated@@709))) (= ($generated@@363 ($generated@@90 $generated@@707 $generated@@708 $generated@@709)) (+ (- ($generated@@363 $generated@@707) ($generated ($generated@@89 $generated@@707 $generated@@708))) ($generated $generated@@709)))))
 :pattern ( ($generated@@363 ($generated@@90 $generated@@707 $generated@@708 $generated@@709)))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@712) $generated@@2)) ($generated@@82 $generated@@712 $generated@@46 $generated@@711))
 :pattern ( ($generated@@82 $generated@@712 $generated@@46 $generated@@711))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@713) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@714) $generated@@3)) ($generated@@82 $generated@@714 $generated@@47 $generated@@713))
 :pattern ( ($generated@@82 $generated@@714 $generated@@47 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@715) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@716) $generated@@4)) ($generated@@82 $generated@@716 $generated@@44 $generated@@715))
 :pattern ( ($generated@@82 $generated@@716 $generated@@44 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@718) $generated@@555)) ($generated@@82 $generated@@718 $generated@@45 $generated@@717))
 :pattern ( ($generated@@82 $generated@@718 $generated@@45 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@719) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@720) $generated@@141)) ($generated@@82 $generated@@720 $generated@@48 $generated@@719))
 :pattern ( ($generated@@82 $generated@@720 $generated@@48 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) ($generated@@344 $generated@@141)) (= (type $generated@@722) $generated@@72)) (= ($generated@@166 $generated@@721 ($generated@@597 $generated@@722)) (forall (($generated@@723 Int) ) (!  (=> (and (<= 0 $generated@@723) (< $generated@@723 ($generated@@343 $generated@@721))) ($generated@@264 ($generated@@598 $generated@@721 $generated@@723) $generated@@722))
 :pattern ( ($generated@@598 $generated@@721 $generated@@723))
))))
 :pattern ( ($generated@@166 $generated@@721 ($generated@@597 $generated@@722)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 Int) ) (!  (=> (= (type $generated@@725) ($generated@@344 $generated@@141)) (=> (and (<= 0 $generated@@726) (< $generated@@726 ($generated@@343 $generated@@725))) (< ($generated@@143 ($generated@@411 $generated@@144 ($generated@@598 $generated@@725 $generated@@726))) ($generated@@724 $generated@@725))))
 :pattern ( ($generated@@143 ($generated@@411 $generated@@144 ($generated@@598 $generated@@725 $generated@@726))))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (and (= (type $generated@@727) ($generated@@374 $generated@@141 $generated@@141)) (= (type $generated@@728) $generated@@72)) (= (type $generated@@729) $generated@@72)) ($generated@@166 $generated@@727 ($generated@@497 $generated@@728 $generated@@729))) (and (and ($generated@@166 ($generated@@372 $generated@@727) ($generated@@316 $generated@@728)) ($generated@@166 ($generated@@422 $generated@@727) ($generated@@316 $generated@@729))) ($generated@@166 ($generated@@471 $generated@@727) ($generated@@316 ($generated@@169 $generated@@728 $generated@@729)))))
 :pattern ( ($generated@@166 $generated@@727 ($generated@@497 $generated@@728 $generated@@729)))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (and (= (type $generated@@730) ($generated@@392 $generated@@141 $generated@@141)) (= (type $generated@@731) $generated@@72)) (= (type $generated@@732) $generated@@72)) ($generated@@166 $generated@@730 ($generated@@505 $generated@@731 $generated@@732))) (and (and ($generated@@166 ($generated@@390 $generated@@730) ($generated@@321 $generated@@731)) ($generated@@166 ($generated@@433 $generated@@730) ($generated@@321 $generated@@732))) ($generated@@166 ($generated@@479 $generated@@730) ($generated@@321 ($generated@@169 $generated@@731 $generated@@732)))))
 :pattern ( ($generated@@166 $generated@@730 ($generated@@505 $generated@@731 $generated@@732)))
)))
(assert (forall (($generated@@733 T@U) ) (!  (=> (= (type $generated@@733) $generated@@2) ($generated@@166 $generated@@733 $generated@@46))
 :pattern ( ($generated@@166 $generated@@733 $generated@@46))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@3) ($generated@@166 $generated@@734 $generated@@47))
 :pattern ( ($generated@@166 $generated@@734 $generated@@47))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@4) ($generated@@166 $generated@@735 $generated@@44))
 :pattern ( ($generated@@166 $generated@@735 $generated@@44))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@555) ($generated@@166 $generated@@736 $generated@@45))
 :pattern ( ($generated@@166 $generated@@736 $generated@@45))
)))
(assert (forall (($generated@@737 T@U) ) (!  (=> (= (type $generated@@737) $generated@@141) ($generated@@166 $generated@@737 $generated@@48))
 :pattern ( ($generated@@166 $generated@@737 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@738 () T@U)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 () Int)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 () Int)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () Int)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () T@U)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 (T@U) Bool)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () T@U)
(declare-fun $generated@@753 () T@U)
(declare-fun $generated@@754 () Int)
(declare-fun $generated@@755 () Int)
(declare-fun $generated@@756 () Int)
(declare-fun $generated@@757 () Bool)
(declare-fun $generated@@758 () T@U)
(declare-fun $generated@@759 () Bool)
(declare-fun $generated@@760 () T@U)
(declare-fun $generated@@761 () Bool)
(declare-fun $generated@@762 () T@U)
(declare-fun $generated@@763 () T@U)
(declare-fun $generated@@764 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@739) $generated@@144) (= (type $generated@@741) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@738) ($generated@@374 $generated@@141 $generated@@141))) (= (type $generated@@742) $generated@@144)) (= (type $generated@@744) $generated@@144)) (= (type $generated@@746) ($generated@@206 $generated@@85 $generated@@4))) (= (type $generated@@747) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@748) $generated@@85)) (= (type $generated@@749) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@751) $generated@@85)) (= (type $generated@@752) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@753) $generated@@85)) (= (type $generated@@758) $generated@@85)) (= (type $generated@@760) $generated@@85)) (= (type $generated@@762) $generated@@85)) (= (type $generated@@763) ($generated@@374 $generated@@141 $generated@@141))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 35) (let (($generated@@765 true))
(let (($generated@@766  (=> (and (not (and ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@739))) (= ($generated@@310 $generated@@739) ($generated@@196 12)))) (= (ControlFlow 0 5) 1)) $generated@@765)))
(let (($generated@@767  (=> (and ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@739))) (= ($generated@@310 $generated@@739) ($generated@@196 12))) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@739)))) (=> (= (ControlFlow 0 3) 1) $generated@@765)))))
(let (($generated@@768  (=> (not ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@739)))) (and (=> (= (ControlFlow 0 8) 3) $generated@@767) (=> (= (ControlFlow 0 8) 5) $generated@@766)))))
(let (($generated@@769  (=> ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@739))) (=> (and ($generated@@187 $generated@@739) (= $generated@@740 ($generated@@196 12))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= ($generated@@196 0) $generated@@740) (< $generated@@740 256))) (=> (and (<= ($generated@@196 0) $generated@@740) (< $generated@@740 256)) (and (=> (= (ControlFlow 0 6) 3) $generated@@767) (=> (= (ControlFlow 0 6) 5) $generated@@766))))))))
(let (($generated@@770  (=> (and ($generated@@166 $generated@@739 ($generated@@188 $generated@@162)) ($generated@@82 $generated@@739 ($generated@@188 $generated@@162) $generated@@741)) (and (=> (= (ControlFlow 0 9) 6) $generated@@769) (=> (= (ControlFlow 0 9) 8) $generated@@768)))))
(let (($generated@@771  (=> (and (not (and ($generated@@166 $generated@@739 ($generated@@188 $generated@@162)) ($generated@@82 $generated@@739 ($generated@@188 $generated@@162) $generated@@741))) (= (ControlFlow 0 2) 1)) $generated@@765)))
(let (($generated@@772  (=> (forall (($generated@@773 T@U) ) (!  (=> (and (and (= (type $generated@@773) $generated@@144) ($generated@@166 $generated@@773 ($generated@@188 $generated@@162))) ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@773)))) ($generated@@187 $generated@@773))
 :pattern ( ($generated@@411 $generated@@3 ($generated@@89 ($generated@@472 $generated@@738) ($generated@@350 $generated@@773))))
 :pattern ( ($generated@@310 $generated@@773))
 :pattern ( ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@773)))
)) (and (=> (= (ControlFlow 0 10) 9) $generated@@770) (=> (= (ControlFlow 0 10) 2) $generated@@771)))))
(let (($generated@@774  (=> (and (not (and ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@742))) (= ($generated@@310 $generated@@742) ($generated@@196 11)))) (= (ControlFlow 0 14) 10)) $generated@@772)))
(let (($generated@@775  (=> (and ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@742))) (= ($generated@@310 $generated@@742) ($generated@@196 11))) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@742)))) (=> (= (ControlFlow 0 12) 10) $generated@@772)))))
(let (($generated@@776  (=> (not ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@742)))) (and (=> (= (ControlFlow 0 17) 12) $generated@@775) (=> (= (ControlFlow 0 17) 14) $generated@@774)))))
(let (($generated@@777  (=> ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@742))) (=> (and ($generated@@187 $generated@@742) (= $generated@@743 ($generated@@196 11))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= ($generated@@196 0) $generated@@743) (< $generated@@743 256))) (=> (and (<= ($generated@@196 0) $generated@@743) (< $generated@@743 256)) (and (=> (= (ControlFlow 0 15) 12) $generated@@775) (=> (= (ControlFlow 0 15) 14) $generated@@774))))))))
(let (($generated@@778  (=> (and ($generated@@166 $generated@@742 ($generated@@188 $generated@@162)) ($generated@@82 $generated@@742 ($generated@@188 $generated@@162) $generated@@741)) (and (=> (= (ControlFlow 0 18) 15) $generated@@777) (=> (= (ControlFlow 0 18) 17) $generated@@776)))))
(let (($generated@@779  (=> (and (not (and ($generated@@166 $generated@@742 ($generated@@188 $generated@@162)) ($generated@@82 $generated@@742 ($generated@@188 $generated@@162) $generated@@741))) (= (ControlFlow 0 11) 10)) $generated@@772)))
(let (($generated@@780  (=> (forall (($generated@@781 T@U) ) (!  (=> (and (and (= (type $generated@@781) $generated@@144) ($generated@@166 $generated@@781 ($generated@@188 $generated@@162))) ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@781)))) ($generated@@187 $generated@@781))
 :pattern ( ($generated@@411 $generated@@3 ($generated@@89 ($generated@@472 $generated@@738) ($generated@@350 $generated@@781))))
 :pattern ( ($generated@@310 $generated@@781))
 :pattern ( ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@781)))
)) (and (=> (= (ControlFlow 0 19) 18) $generated@@778) (=> (= (ControlFlow 0 19) 11) $generated@@779)))))
(let (($generated@@782  (=> (and (not (and ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@744))) (= ($generated@@310 $generated@@744) ($generated@@196 10)))) (= (ControlFlow 0 23) 19)) $generated@@780)))
(let (($generated@@783  (=> (and ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@744))) (= ($generated@@310 $generated@@744) ($generated@@196 10))) (and (=> (= (ControlFlow 0 21) (- 0 22)) ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@744)))) (=> (= (ControlFlow 0 21) 19) $generated@@780)))))
(let (($generated@@784  (=> (not ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@744)))) (and (=> (= (ControlFlow 0 26) 21) $generated@@783) (=> (= (ControlFlow 0 26) 23) $generated@@782)))))
(let (($generated@@785  (=> ($generated@@0 ($generated@@89 ($generated@@372 $generated@@738) ($generated@@350 $generated@@744))) (=> (and ($generated@@187 $generated@@744) (= $generated@@745 ($generated@@196 10))) (and (=> (= (ControlFlow 0 24) (- 0 25)) (and (<= ($generated@@196 0) $generated@@745) (< $generated@@745 256))) (=> (and (<= ($generated@@196 0) $generated@@745) (< $generated@@745 256)) (and (=> (= (ControlFlow 0 24) 21) $generated@@783) (=> (= (ControlFlow 0 24) 23) $generated@@782))))))))
(let (($generated@@786  (=> (and ($generated@@166 $generated@@744 ($generated@@188 $generated@@162)) ($generated@@82 $generated@@744 ($generated@@188 $generated@@162) $generated@@741)) (and (=> (= (ControlFlow 0 27) 24) $generated@@785) (=> (= (ControlFlow 0 27) 26) $generated@@784)))))
(let (($generated@@787  (=> (and (not (and ($generated@@166 $generated@@744 ($generated@@188 $generated@@162)) ($generated@@82 $generated@@744 ($generated@@188 $generated@@162) $generated@@741))) (= (ControlFlow 0 20) 19)) $generated@@780)))
(let (($generated@@788  (=> (= $generated@@746 ($generated@@205 $generated@@163 $generated@@747 $generated@@60 false)) (=> (and (not (= $generated@@748 $generated@@163)) (= ($generated@@192 $generated@@748) $generated@@162)) (=> (and (and (and (and (not ($generated@@0 ($generated@@91 ($generated@@89 $generated@@747 $generated@@748) $generated@@60))) (= $generated@@749 ($generated@@90 $generated@@747 $generated@@748 ($generated@@92 ($generated@@89 $generated@@747 $generated@@748) $generated@@60 ($generated@@11 true))))) (and ($generated@@330 $generated@@749) ($generated@@750 $generated@@749))) (and (and (not (= $generated@@751 $generated@@163)) (= ($generated@@192 $generated@@751) $generated@@162)) (and (not ($generated@@0 ($generated@@91 ($generated@@89 $generated@@749 $generated@@751) $generated@@60))) (= $generated@@752 ($generated@@90 $generated@@749 $generated@@751 ($generated@@92 ($generated@@89 $generated@@749 $generated@@751) $generated@@60 ($generated@@11 true))))))) (and (and (and ($generated@@330 $generated@@752) ($generated@@750 $generated@@752)) (and (not (= $generated@@753 $generated@@163)) (= ($generated@@192 $generated@@753) $generated@@162))) (and (and (not ($generated@@0 ($generated@@91 ($generated@@89 $generated@@752 $generated@@753) $generated@@60))) (= $generated@@741 ($generated@@90 $generated@@752 $generated@@753 ($generated@@92 ($generated@@89 $generated@@752 $generated@@753) $generated@@60 ($generated@@11 true))))) (and ($generated@@330 $generated@@741) ($generated@@750 $generated@@741))))) (and (=> (= (ControlFlow 0 28) (- 0 34)) true) (=> (= $generated@@754 ($generated@@196 10)) (and (=> (= (ControlFlow 0 28) (- 0 33)) (and (<= ($generated@@196 0) $generated@@754) (< $generated@@754 256))) (=> (and (<= ($generated@@196 0) $generated@@754) (< $generated@@754 256)) (and (=> (= (ControlFlow 0 28) (- 0 32)) true) (=> (= $generated@@755 ($generated@@196 11)) (and (=> (= (ControlFlow 0 28) (- 0 31)) (and (<= ($generated@@196 0) $generated@@755) (< $generated@@755 256))) (=> (and (<= ($generated@@196 0) $generated@@755) (< $generated@@755 256)) (and (=> (= (ControlFlow 0 28) (- 0 30)) true) (=> (= $generated@@756 ($generated@@196 12)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (and (<= ($generated@@196 0) $generated@@756) (< $generated@@756 256))) (=> (and (<= ($generated@@196 0) $generated@@756) (< $generated@@756 256)) (=> (= $generated@@738 ($generated@@642 ($generated@@642 ($generated@@642 ($generated@@373 $generated@@141 $generated@@141) ($generated@@350 ($generated@@140 $generated@@163 ($generated@@350 $generated@@163) $generated@@748 ($generated@@196 5) ($generated@@196 10))) ($generated@@350 ($generated@@9 ($generated@@327 0.8)))) ($generated@@350 ($generated@@140 $generated@@163 ($generated@@350 $generated@@163) $generated@@751 ($generated@@196 4) ($generated@@196 11))) ($generated@@350 ($generated@@9 ($generated@@327 0.1)))) ($generated@@350 ($generated@@140 $generated@@163 ($generated@@350 $generated@@163) $generated@@753 ($generated@@196 8) ($generated@@196 12))) ($generated@@350 ($generated@@9 ($generated@@327 0.1))))) (and (=> (= (ControlFlow 0 28) 27) $generated@@786) (=> (= (ControlFlow 0 28) 20) $generated@@787))))))))))))))))))))
(let (($generated@@789  (=> (and (and (and (and ($generated@@330 $generated@@747) ($generated@@750 $generated@@747)) (and (=> $generated@@757 (and ($generated@@166 $generated@@758 $generated@@260) ($generated@@82 $generated@@758 $generated@@260 $generated@@747))) true)) (and (and (=> $generated@@759 (and ($generated@@166 $generated@@760 $generated@@260) ($generated@@82 $generated@@760 $generated@@260 $generated@@747))) true) (and (=> $generated@@761 (and ($generated@@166 $generated@@762 $generated@@260) ($generated@@82 $generated@@762 $generated@@260 $generated@@747))) true))) (and (and (and ($generated@@166 $generated@@763 ($generated@@497 ($generated@@188 $generated@@162) $generated@@47)) ($generated@@82 $generated@@763 ($generated@@497 ($generated@@188 $generated@@162) $generated@@47) $generated@@747)) true) (and (= 2 $generated@@764) (= (ControlFlow 0 35) 28)))) $generated@@788)))
$generated@@789))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@254 (T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (Int) Int)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@295 (T@U T@U) T@U)
(declare-fun $generated@@301 (T@U) Bool)
(declare-fun $generated@@302 (T@U T@U T@U) Bool)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@318 (T@T) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@395 (T@U Int) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@U T@U) T@U)
(declare-fun $generated@@486 (T@T) T@U)
(declare-fun $generated@@510 () T@T)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@685 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@74)) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@63) $generated@@77)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@141 $generated@@142 $generated@@143)) (forall (($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@86) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@142 $generated@@144) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60))
)))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143))
)))
(assert (= ($generated@@1 $generated@@146) 14))
(assert (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@146) ($generated@@145 $generated@@148)) ($generated@@147 $generated@@148))
 :pattern ( ($generated@@145 $generated@@148))
)))
(assert  (and (= (type $generated@@149) $generated@@73) (= (type $generated@@150) $generated@@86)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@86) (= (type $generated@@152) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@151 $generated@@149 $generated@@152)  (or (= $generated@@151 $generated@@150) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@151 $generated@@149 $generated@@152))
)))
(assert (= (type $generated@@153) $generated@@73))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@86) (= (type $generated@@155) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@154 $generated@@153 $generated@@155)  (or (= $generated@@154 $generated@@150) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@155 $generated@@154) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@154 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@84 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@84 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@73) (= (type $generated@@163) $generated@@73)) (= (type $generated@@164) $generated@@146)) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@146) (= (type $generated@@172) $generated@@146)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@86)
 :pattern ( ($generated@@174 $generated@@176))
)) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@168)
 :pattern ( ($generated@@175 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@146) (= (type $generated@@179) $generated@@146)) true) (= ($generated@@173 $generated@@178 $generated@@179)  (and (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)) (= ($generated@@175 $generated@@178) ($generated@@175 $generated@@179)))))
 :pattern ( ($generated@@173 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@73)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@85 $generated@@168 $generated@@2)) (= (type $generated@@184) $generated@@73)) ($generated@@156 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@156 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@185 $generated@@186)) $generated@@73)
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@73) (= (type $generated@@188) $generated@@146)) ($generated@@156 $generated@@188 ($generated@@185 $generated@@187))) ($generated@@147 $generated@@188))
 :pattern ( ($generated@@147 $generated@@188) ($generated@@156 $generated@@188 ($generated@@185 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@189 $generated@@190)) $generated@@73)
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@86) (= ($generated@@156 $generated@@191 $generated@@153)  (or (= $generated@@191 $generated@@150) (= ($generated@@189 $generated@@191) $generated@@153))))
 :pattern ( ($generated@@156 $generated@@191 $generated@@153))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@1 ($generated@@194 $generated@@198 $generated@@199)) 16)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@196 ($generated@@194 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@194 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@196 (type $generated@@204))))
(= (type ($generated@@192 $generated@@204 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(let (($generated@@213 (type $generated@@209)))
(= (type ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@194 $generated@@213 $generated@@212))))
 :pattern ( ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@196 (type $generated@@214))))
 (=> (= (type $generated@@217) $generated@@218) (= ($generated@@192 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@215 $generated@@216) $generated@@217)))
 :weight 0
))) (and (and (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@192 ($generated@@197 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@192 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@192 ($generated@@197 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@192 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or true (= ($generated@@192 ($generated@@197 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@192 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@194 $generated@@86 $generated@@4))
 :pattern ( ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@76 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@86) (= (type $generated@@242) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@243) ($generated@@75 $generated@@4))) (= (type $generated@@245) $generated@@86)) (= (type $generated@@246) ($generated@@75 $generated@@247))) (= ($generated@@0 ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (= (type $generated@@248) $generated@@73))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@86) (= (type $generated@@250) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@249 $generated@@248 $generated@@250) ($generated@@83 $generated@@249 $generated@@149 $generated@@250)))
 :pattern ( ($generated@@83 $generated@@249 $generated@@248 $generated@@250))
)))
(assert (= (type $generated@@251) $generated@@73))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@86) (= (type $generated@@253) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@252 $generated@@251 $generated@@253) ($generated@@83 $generated@@252 $generated@@153 $generated@@253)))
 :pattern ( ($generated@@83 $generated@@252 $generated@@251 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@256 $generated@@257)) $generated@@146)
 :pattern ( ($generated@@254 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@73) (= (type $generated@@259) $generated@@73)) (= (type $generated@@260) $generated@@168)) (= (type $generated@@261) $generated@@168)) (= ($generated@@156 ($generated@@254 $generated@@260 $generated@@261) ($generated@@159 $generated@@258 $generated@@259))  (and ($generated@@255 $generated@@260 $generated@@258) ($generated@@255 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@156 ($generated@@254 $generated@@260 $generated@@261) ($generated@@159 $generated@@258 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@146) (= (type $generated@@263) $generated@@146)) (= ($generated@@165 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@165 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@146) (= (type $generated@@265) $generated@@146)) (= ($generated@@173 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@173 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@73)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@85 $generated@@168 $generated@@4)) (= (type $generated@@269) $generated@@73)) (= ($generated@@156 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@168) ($generated@@0 ($generated@@90 $generated@@268 $generated@@270))) ($generated@@255 $generated@@270 $generated@@269))
 :pattern ( ($generated@@90 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@156 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@73)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@85 $generated@@168 $generated@@4)) (= (type $generated@@274) $generated@@73)) (= ($generated@@156 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@168) ($generated@@0 ($generated@@90 $generated@@273 $generated@@275))) ($generated@@255 $generated@@275 $generated@@274))
 :pattern ( ($generated@@90 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@156 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@276 $generated@@277) $generated@@277)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (and (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
(= (type ($generated@@282 $generated@@288 $generated@@289)) ($generated@@284 $generated@@290)))
 :pattern ( ($generated@@282 $generated@@288 $generated@@289))
))) (forall (($generated@@291 T@U) ) (! (= (type ($generated@@283 $generated@@291)) $generated@@73)
 :pattern ( ($generated@@283 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (= (type $generated@@292) ($generated@@284 $generated@@168)) (= (type $generated@@293) $generated@@168)) (= (type $generated@@294) $generated@@73)) (and ($generated@@156 $generated@@292 ($generated@@283 $generated@@294)) ($generated@@255 $generated@@293 $generated@@294))) ($generated@@156 ($generated@@282 $generated@@292 $generated@@293) ($generated@@283 $generated@@294)))
 :pattern ( ($generated@@156 ($generated@@282 $generated@@292 $generated@@293) ($generated@@283 $generated@@294)))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (= (type ($generated@@295 $generated@@296 $generated@@297)) $generated@@146)
 :pattern ( ($generated@@295 $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (= (type $generated@@298) $generated@@73) (= (type $generated@@299) $generated@@86)) (= (type $generated@@300) $generated@@168)) (= ($generated@@156 ($generated@@295 $generated@@299 $generated@@300) ($generated@@185 $generated@@298))  (and ($generated@@156 $generated@@299 $generated@@149) ($generated@@255 $generated@@300 $generated@@298))))
 :pattern ( ($generated@@156 ($generated@@295 $generated@@299 $generated@@300) ($generated@@185 $generated@@298)))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) $generated@@73) (= (type $generated@@304) $generated@@73)) (= (type $generated@@305) $generated@@168)) (= (type $generated@@306) $generated@@168)) (= (type $generated@@307) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@301 $generated@@307)) (= ($generated@@83 ($generated@@254 $generated@@305 $generated@@306) ($generated@@159 $generated@@303 $generated@@304) $generated@@307)  (and ($generated@@302 $generated@@305 $generated@@303 $generated@@307) ($generated@@302 $generated@@306 $generated@@304 $generated@@307))))
 :pattern ( ($generated@@83 ($generated@@254 $generated@@305 $generated@@306) ($generated@@159 $generated@@303 $generated@@304) $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@77)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@146) (= ($generated@@158 $generated@@310) (= ($generated@@308 $generated@@310) $generated@@63)))
 :pattern ( ($generated@@158 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@146) (= ($generated@@147 $generated@@311) (= ($generated@@308 $generated@@311) $generated@@67)))
 :pattern ( ($generated@@147 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@146) ($generated@@158 $generated@@312)) (exists (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (and (and (= (type $generated@@313) $generated@@168) (= (type $generated@@314) $generated@@168)) (= $generated@@312 ($generated@@254 $generated@@313 $generated@@314)))
 :no-pattern (type $generated@@313)
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@158 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@146) ($generated@@147 $generated@@315)) (exists (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (and (and (= (type $generated@@316) $generated@@86) (= (type $generated@@317) $generated@@168)) (= $generated@@315 ($generated@@295 $generated@@316 $generated@@317)))
 :no-pattern (type $generated@@316)
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@147 $generated@@315))
)))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@318 $generated@@320)) ($generated@@284 $generated@@320))
 :pattern ( ($generated@@318 $generated@@320))
)))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@321)) 0)
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (! (let (($generated@@324 (type $generated@@323)))
 (=> (= (type $generated@@322) ($generated@@284 $generated@@324)) (= ($generated@@319 ($generated@@282 $generated@@322 $generated@@323)) (+ 1 ($generated@@319 $generated@@322)))))
 :pattern ( ($generated@@282 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@168)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@73) (= (type $generated@@329) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@302 ($generated@@325 $generated@@327) $generated@@328 $generated@@329) ($generated@@83 $generated@@327 $generated@@328 $generated@@329)))
 :pattern ( ($generated@@302 ($generated@@325 $generated@@327) $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@330) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@331) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@332) $generated@@168)) (= (type $generated@@333) $generated@@73)) ($generated@@141 $generated@@330 $generated@@331)) ($generated@@302 $generated@@332 $generated@@333 $generated@@330)) ($generated@@302 $generated@@332 $generated@@333 $generated@@331))
 :pattern ( ($generated@@141 $generated@@330 $generated@@331) ($generated@@302 $generated@@332 $generated@@333 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@334) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@335) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@337) $generated@@73)) ($generated@@141 $generated@@334 $generated@@335)) ($generated@@83 $generated@@336 $generated@@337 $generated@@334)) ($generated@@83 $generated@@336 $generated@@337 $generated@@335))
 :pattern ( ($generated@@141 $generated@@334 $generated@@335) ($generated@@83 $generated@@336 $generated@@337 $generated@@334))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@85 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@88 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@85 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@90 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@78)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@73) (and (= ($generated@@81 ($generated@@185 $generated@@346)) $generated@@68) (= ($generated@@344 ($generated@@185 $generated@@346)) $generated@@72)))
 :pattern ( ($generated@@185 $generated@@346))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 18)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@85 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@90 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@90 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 19)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@85 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@90 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@90 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@88 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@85 $generated@@384 $generated@@2)) (= ($generated@@181 $generated@@383) (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@384) (and (<= 0 ($generated ($generated@@90 $generated@@383 $generated@@385))) (<= ($generated ($generated@@90 $generated@@383 $generated@@385)) ($generated@@338 $generated@@383))))
 :pattern ( ($generated@@90 $generated@@383 $generated@@385))
)))))
 :pattern ( ($generated@@181 $generated@@383))
)))
(assert (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@168) ($generated@@255 $generated@@389 $generated@@149)) (and (= ($generated@@325 ($generated@@386 $generated@@86 $generated@@389)) $generated@@389) ($generated@@156 ($generated@@386 $generated@@86 $generated@@389) $generated@@149)))
 :pattern ( ($generated@@255 $generated@@389 $generated@@149))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@168) ($generated@@255 $generated@@390 $generated@@248)) (and (= ($generated@@325 ($generated@@386 $generated@@86 $generated@@390)) $generated@@390) ($generated@@156 ($generated@@386 $generated@@86 $generated@@390) $generated@@248)))
 :pattern ( ($generated@@255 $generated@@390 $generated@@248))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@168) ($generated@@255 $generated@@391 $generated@@153)) (and (= ($generated@@325 ($generated@@386 $generated@@86 $generated@@391)) $generated@@391) ($generated@@156 ($generated@@386 $generated@@86 $generated@@391) $generated@@153)))
 :pattern ( ($generated@@255 $generated@@391 $generated@@153))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@168) ($generated@@255 $generated@@392 $generated@@251)) (and (= ($generated@@325 ($generated@@386 $generated@@86 $generated@@392)) $generated@@392) ($generated@@156 ($generated@@386 $generated@@86 $generated@@392) $generated@@251)))
 :pattern ( ($generated@@255 $generated@@392 $generated@@251))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@86) (= ($generated@@156 $generated@@393 $generated@@248)  (and ($generated@@156 $generated@@393 $generated@@149) (not (= $generated@@393 $generated@@150)))))
 :pattern ( ($generated@@156 $generated@@393 $generated@@248))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@86) (= ($generated@@156 $generated@@394 $generated@@251)  (and ($generated@@156 $generated@@394 $generated@@153) (not (= $generated@@394 $generated@@150)))))
 :pattern ( ($generated@@156 $generated@@394 $generated@@251))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 Int) ) (! (let (($generated@@398 ($generated@@285 (type $generated@@396))))
(= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@398))
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 Int) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
 (=> (= (type $generated@@399) ($generated@@284 $generated@@402)) (and (=> (= $generated@@400 ($generated@@319 $generated@@399)) (= ($generated@@395 ($generated@@282 $generated@@399 $generated@@401) $generated@@400) $generated@@401)) (=> (not (= $generated@@400 ($generated@@319 $generated@@399))) (= ($generated@@395 ($generated@@282 $generated@@399 $generated@@401) $generated@@400) ($generated@@395 $generated@@399 $generated@@400))))))
 :pattern ( ($generated@@395 ($generated@@282 $generated@@399 $generated@@401) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@351 (type $generated@@403))))
(let (($generated@@405 ($generated@@350 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@349 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@348 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) ($generated@@0 ($generated@@90 ($generated@@347 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@347 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@351 (type $generated@@408))))
(= (type ($generated@@407 $generated@@408)) ($generated@@85 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@351 (type $generated@@410))))
(let (($generated@@412 ($generated@@350 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@349 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@348 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@411) ($generated@@0 ($generated@@90 ($generated@@407 $generated@@410) $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@369 (type $generated@@414))))
(let (($generated@@416 ($generated@@368 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@367 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@366 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) ($generated@@0 ($generated@@90 ($generated@@365 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@365 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@369 (type $generated@@419))))
(= (type ($generated@@418 $generated@@419)) ($generated@@85 $generated@@420 $generated@@4)))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@369 (type $generated@@421))))
(let (($generated@@423 ($generated@@368 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@367 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@366 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@422) ($generated@@0 ($generated@@90 ($generated@@418 $generated@@421) $generated@@424)))
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@418 $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@85 $generated@@168 $generated@@2)) (= (type $generated@@426) $generated@@73)) (= ($generated@@156 $generated@@425 ($generated@@180 $generated@@426)) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@168) (< 0 ($generated ($generated@@90 $generated@@425 $generated@@427)))) ($generated@@255 $generated@@427 $generated@@426))
 :pattern ( ($generated@@90 $generated@@425 $generated@@427))
))))
 :pattern ( ($generated@@156 $generated@@425 ($generated@@180 $generated@@426)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@85 $generated@@168 $generated@@4)) (= (type $generated@@429) $generated@@73)) (= (type $generated@@430) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@428 ($generated@@266 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@168) ($generated@@0 ($generated@@90 $generated@@428 $generated@@431))) ($generated@@302 $generated@@431 $generated@@429 $generated@@430))
 :pattern ( ($generated@@90 $generated@@428 $generated@@431))
))))
 :pattern ( ($generated@@83 $generated@@428 ($generated@@266 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@85 $generated@@168 $generated@@4)) (= (type $generated@@433) $generated@@73)) (= (type $generated@@434) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@432 ($generated@@271 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@168) ($generated@@0 ($generated@@90 $generated@@432 $generated@@435))) ($generated@@302 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@90 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@83 $generated@@432 ($generated@@271 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(= ($generated ($generated@@90 ($generated@@339 $generated@@437) $generated@@436)) 0))
 :pattern ( (let (($generated@@437 (type $generated@@436)))
($generated@@90 ($generated@@339 $generated@@437) $generated@@436)))
)))
(assert  (and (forall (($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@440)) ($generated@@85 $generated@@168 $generated@@4))
 :pattern ( ($generated@@438 $generated@@440))
)) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@351 (type $generated@@441))))
(let (($generated@@443 ($generated@@350 (type $generated@@441))))
(= (type ($generated@@439 $generated@@441)) ($generated@@85 $generated@@443 $generated@@442))))
 :pattern ( ($generated@@439 $generated@@441))
))))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@349 $generated@@168 $generated@@168)) (= (type $generated@@445) $generated@@168)) (= ($generated@@0 ($generated@@90 ($generated@@438 $generated@@444) $generated@@445))  (and ($generated@@0 ($generated@@90 ($generated@@347 $generated@@444) ($generated@@166 ($generated@@386 $generated@@146 $generated@@445)))) (= ($generated@@90 ($generated@@439 $generated@@444) ($generated@@166 ($generated@@386 $generated@@146 $generated@@445))) ($generated@@167 ($generated@@386 $generated@@146 $generated@@445))))))
 :pattern ( ($generated@@90 ($generated@@438 $generated@@444) $generated@@445))
)))
(assert  (and (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) ($generated@@85 $generated@@168 $generated@@4))
 :pattern ( ($generated@@446 $generated@@448))
)) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@369 (type $generated@@449))))
(let (($generated@@451 ($generated@@368 (type $generated@@449))))
(= (type ($generated@@447 $generated@@449)) ($generated@@85 $generated@@451 $generated@@450))))
 :pattern ( ($generated@@447 $generated@@449))
))))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) ($generated@@367 $generated@@168 $generated@@168)) (= (type $generated@@453) $generated@@168)) (= ($generated@@0 ($generated@@90 ($generated@@446 $generated@@452) $generated@@453))  (and ($generated@@0 ($generated@@90 ($generated@@365 $generated@@452) ($generated@@166 ($generated@@386 $generated@@146 $generated@@453)))) (= ($generated@@90 ($generated@@447 $generated@@452) ($generated@@166 ($generated@@386 $generated@@146 $generated@@453))) ($generated@@167 ($generated@@386 $generated@@146 $generated@@453))))))
 :pattern ( ($generated@@90 ($generated@@446 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@350 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@349 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@90 ($generated@@407 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@90 ($generated@@347 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@90 ($generated@@439 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@90 ($generated@@347 $generated@@454) $generated@@458))
 :pattern ( ($generated@@90 ($generated@@439 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@90 ($generated@@407 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(let (($generated@@462 ($generated@@368 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@367 $generated@@462 $generated@@461)) (= ($generated@@0 ($generated@@90 ($generated@@418 $generated@@459) $generated@@460)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@462) (and ($generated@@0 ($generated@@90 ($generated@@365 $generated@@459) $generated@@463)) (= $generated@@460 ($generated@@90 ($generated@@447 $generated@@459) $generated@@463))))
 :pattern ( ($generated@@90 ($generated@@365 $generated@@459) $generated@@463))
 :pattern ( ($generated@@90 ($generated@@447 $generated@@459) $generated@@463))
))))))
 :pattern ( ($generated@@90 ($generated@@418 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@465 $generated@@466)) $generated@@73)
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@467) ($generated@@349 $generated@@168 $generated@@168)) (= (type $generated@@468) $generated@@73)) (= (type $generated@@469) $generated@@73)) (= (type $generated@@470) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@168) ($generated@@0 ($generated@@90 ($generated@@347 $generated@@467) $generated@@471))) (and ($generated@@302 ($generated@@90 ($generated@@439 $generated@@467) $generated@@471) $generated@@469 $generated@@470) ($generated@@302 $generated@@471 $generated@@468 $generated@@470)))
 :pattern ( ($generated@@90 ($generated@@439 $generated@@467) $generated@@471))
 :pattern ( ($generated@@90 ($generated@@347 $generated@@467) $generated@@471))
))))
 :pattern ( ($generated@@83 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@473 $generated@@474)) $generated@@73)
 :pattern ( ($generated@@472 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) ($generated@@367 $generated@@168 $generated@@168)) (= (type $generated@@476) $generated@@73)) (= (type $generated@@477) $generated@@73)) (= (type $generated@@478) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@168) ($generated@@0 ($generated@@90 ($generated@@365 $generated@@475) $generated@@479))) (and ($generated@@302 ($generated@@90 ($generated@@447 $generated@@475) $generated@@479) $generated@@477 $generated@@478) ($generated@@302 $generated@@479 $generated@@476 $generated@@478)))
 :pattern ( ($generated@@90 ($generated@@447 $generated@@475) $generated@@479))
 :pattern ( ($generated@@90 ($generated@@365 $generated@@475) $generated@@479))
))))
 :pattern ( ($generated@@83 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@480) $generated@@146) (= (type $generated@@481) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@301 $generated@@481) (and ($generated@@147 $generated@@480) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@73) ($generated@@83 $generated@@480 ($generated@@185 $generated@@482) $generated@@481))
 :pattern ( ($generated@@83 $generated@@480 ($generated@@185 $generated@@482) $generated@@481))
))))) ($generated@@83 ($generated@@174 $generated@@480) $generated@@149 $generated@@481))
 :pattern ( ($generated@@83 ($generated@@174 $generated@@480) $generated@@149 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@483) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@484) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@485) ($generated@@85 $generated@@86 $generated@@87))) (not (= $generated@@483 $generated@@485))) (and ($generated@@141 $generated@@483 $generated@@484) ($generated@@141 $generated@@484 $generated@@485))) ($generated@@141 $generated@@483 $generated@@485))
 :pattern ( ($generated@@141 $generated@@483 $generated@@484) ($generated@@141 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@T) ) (! (= (type ($generated@@486 $generated@@487)) ($generated@@85 $generated@@487 $generated@@4))
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@369 (type $generated@@488))))
(let (($generated@@490 ($generated@@368 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@367 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@366 $generated@@490 $generated@@489)) (= ($generated@@365 $generated@@488) ($generated@@486 $generated@@490))))))
 :pattern ( ($generated@@365 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@369 (type $generated@@491))))
(let (($generated@@493 ($generated@@368 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@367 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@366 $generated@@493 $generated@@492)) (= ($generated@@418 $generated@@491) ($generated@@486 $generated@@492))))))
 :pattern ( ($generated@@418 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@369 (type $generated@@494))))
(let (($generated@@496 ($generated@@368 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@367 $generated@@496 $generated@@495)) (= (= $generated@@494 ($generated@@366 $generated@@496 $generated@@495)) (= ($generated@@446 $generated@@494) ($generated@@486 $generated@@168))))))
 :pattern ( ($generated@@446 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@351 (type $generated@@497))))
(let (($generated@@499 ($generated@@350 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@349 $generated@@499 $generated@@498)) (or (= $generated@@497 ($generated@@348 $generated@@499 $generated@@498)) (exists (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (and (and (= (type $generated@@500) $generated@@168) (= (type $generated@@501) $generated@@168)) ($generated@@0 ($generated@@90 ($generated@@438 $generated@@497) ($generated@@325 ($generated@@254 $generated@@500 $generated@@501)))))
 :no-pattern (type $generated@@500)
 :no-pattern (type $generated@@501)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
))))))
 :pattern ( ($generated@@438 $generated@@497))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@369 (type $generated@@502))))
(let (($generated@@504 ($generated@@368 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@367 $generated@@504 $generated@@503)) (or (= $generated@@502 ($generated@@366 $generated@@504 $generated@@503)) (exists (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (and (and (= (type $generated@@505) $generated@@168) (= (type $generated@@506) $generated@@168)) ($generated@@0 ($generated@@90 ($generated@@446 $generated@@502) ($generated@@325 ($generated@@254 $generated@@505 $generated@@506)))))
 :no-pattern (type $generated@@505)
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
))))))
 :pattern ( ($generated@@446 $generated@@502))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@168) ($generated@@255 $generated@@507 $generated@@46)) (and (= ($generated@@325 ($generated@@386 $generated@@2 $generated@@507)) $generated@@507) ($generated@@156 ($generated@@386 $generated@@2 $generated@@507) $generated@@46)))
 :pattern ( ($generated@@255 $generated@@507 $generated@@46))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@168) ($generated@@255 $generated@@508 $generated@@47)) (and (= ($generated@@325 ($generated@@386 $generated@@3 $generated@@508)) $generated@@508) ($generated@@156 ($generated@@386 $generated@@3 $generated@@508) $generated@@47)))
 :pattern ( ($generated@@255 $generated@@508 $generated@@47))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@168) ($generated@@255 $generated@@509 $generated@@44)) (and (= ($generated@@325 ($generated@@386 $generated@@4 $generated@@509)) $generated@@509) ($generated@@156 ($generated@@386 $generated@@4 $generated@@509) $generated@@44)))
 :pattern ( ($generated@@255 $generated@@509 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@510) 20))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@168) ($generated@@255 $generated@@511 $generated@@45)) (and (= ($generated@@325 ($generated@@386 $generated@@510 $generated@@511)) $generated@@511) ($generated@@156 ($generated@@386 $generated@@510 $generated@@511) $generated@@45)))
 :pattern ( ($generated@@255 $generated@@511 $generated@@45))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@73) (= ($generated@@255 ($generated@@325 $generated@@512) $generated@@513) ($generated@@156 $generated@@512 $generated@@513)))
 :pattern ( ($generated@@255 ($generated@@325 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@88 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@85 $generated@@515 $generated@@2)) (<= 0 ($generated@@338 $generated@@514))))
 :pattern ( ($generated@@338 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@285 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@284 $generated@@517)) (<= 0 ($generated@@319 $generated@@516))))
 :pattern ( ($generated@@319 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@73)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@73) (= (type $generated@@521) $generated@@73)) (= ($generated@@518 ($generated@@464 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@464 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@73)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@73) (= (type $generated@@525) $generated@@73)) (= ($generated@@522 ($generated@@464 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@464 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@73) (= (type $generated@@527) $generated@@73)) (= ($generated@@81 ($generated@@464 $generated@@526 $generated@@527)) $generated@@58))
 :pattern ( ($generated@@464 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@73)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@73) (= (type $generated@@531) $generated@@73)) (= ($generated@@528 ($generated@@472 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@472 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@73)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@73) (= (type $generated@@535) $generated@@73)) (= ($generated@@532 ($generated@@472 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@472 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@73) (= (type $generated@@537) $generated@@73)) (= ($generated@@81 ($generated@@472 $generated@@536 $generated@@537)) $generated@@59))
 :pattern ( ($generated@@472 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@168) (= (type $generated@@539) $generated@@168)) (= ($generated@@308 ($generated@@254 $generated@@538 $generated@@539)) $generated@@63))
 :pattern ( ($generated@@254 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@73)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@73) (= (type $generated@@543) $generated@@73)) (= ($generated@@540 ($generated@@159 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@159 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@73)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@73) (= (type $generated@@547) $generated@@73)) (= ($generated@@544 ($generated@@159 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@159 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@168) (= (type $generated@@549) $generated@@168)) (= ($generated@@166 ($generated@@254 $generated@@548 $generated@@549)) $generated@@548))
 :pattern ( ($generated@@254 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@168) (= (type $generated@@551) $generated@@168)) (= ($generated@@167 ($generated@@254 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@254 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@86) (= (type $generated@@553) $generated@@168)) (= ($generated@@308 ($generated@@295 $generated@@552 $generated@@553)) $generated@@67))
 :pattern ( ($generated@@295 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@86) (= (type $generated@@555) $generated@@168)) (= ($generated@@174 ($generated@@295 $generated@@554 $generated@@555)) $generated@@554))
 :pattern ( ($generated@@295 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@86) (= (type $generated@@557) $generated@@168)) (= ($generated@@175 ($generated@@295 $generated@@556 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@295 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@86) ($generated@@156 $generated@@558 $generated@@149))
 :pattern ( ($generated@@156 $generated@@558 $generated@@149))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@284 $generated@@168)) (= (type $generated@@560) $generated@@73)) (= (type $generated@@561) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@559 ($generated@@283 $generated@@560) $generated@@561) (forall (($generated@@562 Int) ) (!  (=> (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@319 $generated@@559))) ($generated@@302 ($generated@@395 $generated@@559 $generated@@562) $generated@@560 $generated@@561))
 :pattern ( ($generated@@395 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@83 $generated@@559 ($generated@@283 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@563 ($generated@@84 $generated@@564)) $generated@@564)
 :pattern ( ($generated@@84 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@73)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@73) (= ($generated@@565 ($generated@@266 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@266 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@73) (= ($generated@@81 ($generated@@266 $generated@@568)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@73)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@73) (= ($generated@@569 ($generated@@271 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@271 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@73) (= ($generated@@81 ($generated@@271 $generated@@572)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@73)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@73) (= ($generated@@573 ($generated@@180 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@180 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@73) (= ($generated@@81 ($generated@@180 $generated@@576)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@73)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@73) (= ($generated@@577 ($generated@@283 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@283 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@73) (= ($generated@@81 ($generated@@283 $generated@@580)) $generated@@57))
 :pattern ( ($generated@@283 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@73)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@73) (= ($generated@@581 ($generated@@185 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@185 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
(= ($generated@@386 $generated@@585 ($generated@@325 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@325 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@349 $generated@@168 $generated@@168)) (= (type $generated@@587) $generated@@73)) (= (type $generated@@588) $generated@@73)) (= ($generated@@156 $generated@@586 ($generated@@464 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@168) ($generated@@0 ($generated@@90 ($generated@@347 $generated@@586) $generated@@589))) (and ($generated@@255 ($generated@@90 ($generated@@439 $generated@@586) $generated@@589) $generated@@588) ($generated@@255 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@90 ($generated@@439 $generated@@586) $generated@@589))
 :pattern ( ($generated@@90 ($generated@@347 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@156 $generated@@586 ($generated@@464 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@367 $generated@@168 $generated@@168)) (= (type $generated@@591) $generated@@73)) (= (type $generated@@592) $generated@@73)) (= ($generated@@156 $generated@@590 ($generated@@472 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@168) ($generated@@0 ($generated@@90 ($generated@@365 $generated@@590) $generated@@593))) (and ($generated@@255 ($generated@@90 ($generated@@447 $generated@@590) $generated@@593) $generated@@592) ($generated@@255 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@90 ($generated@@447 $generated@@590) $generated@@593))
 :pattern ( ($generated@@90 ($generated@@365 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@156 $generated@@590 ($generated@@472 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@168) (= (type $generated@@597) $generated@@168)) (< ($generated@@594 $generated@@596) ($generated@@595 ($generated@@254 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@254 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@168) (= (type $generated@@599) $generated@@168)) (< ($generated@@594 $generated@@599) ($generated@@595 ($generated@@254 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@254 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@86) (= (type $generated@@601) $generated@@168)) (< ($generated@@594 $generated@@601) ($generated@@595 ($generated@@295 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@295 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@168) (= (type $generated@@603) $generated@@73)) (= (type $generated@@604) $generated@@73)) ($generated@@255 $generated@@602 ($generated@@464 $generated@@603 $generated@@604))) (and (= ($generated@@325 ($generated@@386 ($generated@@349 $generated@@168 $generated@@168) $generated@@602)) $generated@@602) ($generated@@156 ($generated@@386 ($generated@@349 $generated@@168 $generated@@168) $generated@@602) ($generated@@464 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@255 $generated@@602 ($generated@@464 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@168) (= (type $generated@@606) $generated@@73)) (= (type $generated@@607) $generated@@73)) ($generated@@255 $generated@@605 ($generated@@472 $generated@@606 $generated@@607))) (and (= ($generated@@325 ($generated@@386 ($generated@@367 $generated@@168 $generated@@168) $generated@@605)) $generated@@605) ($generated@@156 ($generated@@386 ($generated@@367 $generated@@168 $generated@@168) $generated@@605) ($generated@@472 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@255 $generated@@605 ($generated@@472 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@73) (= (type $generated@@609) $generated@@73)) (= (type $generated@@610) $generated@@168)) ($generated@@255 $generated@@610 ($generated@@159 $generated@@608 $generated@@609))) (and (= ($generated@@325 ($generated@@386 $generated@@146 $generated@@610)) $generated@@610) ($generated@@156 ($generated@@386 $generated@@146 $generated@@610) ($generated@@159 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@255 $generated@@610 ($generated@@159 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@146) (= (type $generated@@612) $generated@@73)) (= (type $generated@@613) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@301 $generated@@613) (and ($generated@@147 $generated@@611) ($generated@@83 $generated@@611 ($generated@@185 $generated@@612) $generated@@613)))) ($generated@@302 ($generated@@175 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@302 ($generated@@175 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (not ($generated@@0 ($generated@@90 ($generated@@486 $generated@@615) $generated@@614))))
 :pattern ( (let (($generated@@615 (type $generated@@614)))
($generated@@90 ($generated@@486 $generated@@615) $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@73) (= (type $generated@@617) $generated@@73)) (and (= ($generated@@81 ($generated@@159 $generated@@616 $generated@@617)) $generated@@64) (= ($generated@@344 ($generated@@159 $generated@@616 $generated@@617)) $generated@@70)))
 :pattern ( ($generated@@159 $generated@@616 $generated@@617))
)))
(assert  (and (forall (($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@285 (type $generated@@620))))
(= (type ($generated@@618 $generated@@620)) ($generated@@284 $generated@@621)))
 :pattern ( ($generated@@618 $generated@@620))
)) (forall (($generated@@622 T@U) ) (! (let (($generated@@623 ($generated@@285 (type $generated@@622))))
(= (type ($generated@@619 $generated@@622)) $generated@@623))
 :pattern ( ($generated@@619 $generated@@622))
))))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@625)))
 (=> (= (type $generated@@624) ($generated@@284 $generated@@626)) (and (= ($generated@@618 ($generated@@282 $generated@@624 $generated@@625)) $generated@@624) (= ($generated@@619 ($generated@@282 $generated@@624 $generated@@625)) $generated@@625))))
 :pattern ( ($generated@@282 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@146) (= ($generated@@594 ($generated@@325 $generated@@627)) ($generated@@595 $generated@@627)))
 :pattern ( ($generated@@594 ($generated@@325 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@168) ($generated@@255 $generated@@628 ($generated@@84 0))) (and (= ($generated@@325 ($generated@@386 $generated@@2 $generated@@628)) $generated@@628) ($generated@@156 ($generated@@386 ($generated@@85 $generated@@168 $generated@@4) $generated@@628) ($generated@@84 0))))
 :pattern ( ($generated@@255 $generated@@628 ($generated@@84 0)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@168) (= (type $generated@@630) $generated@@73)) ($generated@@255 $generated@@629 ($generated@@266 $generated@@630))) (and (= ($generated@@325 ($generated@@386 ($generated@@85 $generated@@168 $generated@@4) $generated@@629)) $generated@@629) ($generated@@156 ($generated@@386 ($generated@@85 $generated@@168 $generated@@4) $generated@@629) ($generated@@266 $generated@@630))))
 :pattern ( ($generated@@255 $generated@@629 ($generated@@266 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@168) (= (type $generated@@632) $generated@@73)) ($generated@@255 $generated@@631 ($generated@@271 $generated@@632))) (and (= ($generated@@325 ($generated@@386 ($generated@@85 $generated@@168 $generated@@4) $generated@@631)) $generated@@631) ($generated@@156 ($generated@@386 ($generated@@85 $generated@@168 $generated@@4) $generated@@631) ($generated@@271 $generated@@632))))
 :pattern ( ($generated@@255 $generated@@631 ($generated@@271 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@168) (= (type $generated@@634) $generated@@73)) ($generated@@255 $generated@@633 ($generated@@180 $generated@@634))) (and (= ($generated@@325 ($generated@@386 ($generated@@85 $generated@@168 $generated@@2) $generated@@633)) $generated@@633) ($generated@@156 ($generated@@386 ($generated@@85 $generated@@168 $generated@@2) $generated@@633) ($generated@@180 $generated@@634))))
 :pattern ( ($generated@@255 $generated@@633 ($generated@@180 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@168) (= (type $generated@@636) $generated@@73)) ($generated@@255 $generated@@635 ($generated@@283 $generated@@636))) (and (= ($generated@@325 ($generated@@386 ($generated@@284 $generated@@168) $generated@@635)) $generated@@635) ($generated@@156 ($generated@@386 ($generated@@284 $generated@@168) $generated@@635) ($generated@@283 $generated@@636))))
 :pattern ( ($generated@@255 $generated@@635 ($generated@@283 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@73) (= (type $generated@@638) $generated@@168)) ($generated@@255 $generated@@638 ($generated@@185 $generated@@637))) (and (= ($generated@@325 ($generated@@386 $generated@@146 $generated@@638)) $generated@@638) ($generated@@156 ($generated@@386 $generated@@146 $generated@@638) ($generated@@185 $generated@@637))))
 :pattern ( ($generated@@255 $generated@@638 ($generated@@185 $generated@@637)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (! (let (($generated@@643 (type $generated@@642)))
 (=> (and (and (and (= (type $generated@@639) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@640) $generated@@86)) (= (type $generated@@641) ($generated@@75 $generated@@643))) ($generated@@301 ($generated@@91 $generated@@639 $generated@@640 ($generated@@93 ($generated@@90 $generated@@639 $generated@@640) $generated@@641 $generated@@642)))) ($generated@@141 $generated@@639 ($generated@@91 $generated@@639 $generated@@640 ($generated@@93 ($generated@@90 $generated@@639 $generated@@640) $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@91 $generated@@639 $generated@@640 ($generated@@93 ($generated@@90 $generated@@639 $generated@@640) $generated@@641 $generated@@642)))
)))
(assert (= ($generated@@81 $generated@@149) $generated@@61))
(assert (= ($generated@@344 $generated@@149) $generated@@69))
(assert (= ($generated@@81 $generated@@248) $generated@@62))
(assert (= ($generated@@344 $generated@@248) $generated@@69))
(assert (= ($generated@@81 $generated@@153) $generated@@65))
(assert (= ($generated@@344 $generated@@153) $generated@@71))
(assert (= ($generated@@81 $generated@@251) $generated@@66))
(assert (= ($generated@@344 $generated@@251) $generated@@71))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@644) ($generated@@85 $generated@@168 $generated@@2)) (= (type $generated@@645) $generated@@73)) (= (type $generated@@646) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@644 ($generated@@180 $generated@@645) $generated@@646) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@168) (< 0 ($generated ($generated@@90 $generated@@644 $generated@@647)))) ($generated@@302 $generated@@647 $generated@@645 $generated@@646))
 :pattern ( ($generated@@90 $generated@@644 $generated@@647))
))))
 :pattern ( ($generated@@83 $generated@@644 ($generated@@180 $generated@@645) $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@146) (= (type $generated@@649) $generated@@73)) (= (type $generated@@650) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@301 $generated@@650) (and ($generated@@158 $generated@@648) (exists (($generated@@651 T@U) ) (!  (and (= (type $generated@@651) $generated@@73) ($generated@@83 $generated@@648 ($generated@@159 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@83 $generated@@648 ($generated@@159 $generated@@649 $generated@@651) $generated@@650))
))))) ($generated@@302 ($generated@@166 $generated@@648) $generated@@649 $generated@@650))
 :pattern ( ($generated@@302 ($generated@@166 $generated@@648) $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@146) (= (type $generated@@653) $generated@@73)) (= (type $generated@@654) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@301 $generated@@654) (and ($generated@@158 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@73) ($generated@@83 $generated@@652 ($generated@@159 $generated@@655 $generated@@653) $generated@@654))
 :pattern ( ($generated@@83 $generated@@652 ($generated@@159 $generated@@655 $generated@@653) $generated@@654))
))))) ($generated@@302 ($generated@@167 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@302 ($generated@@167 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@168) (= (type $generated@@657) $generated@@168)) (= ($generated@@254 ($generated@@278 $generated@@656) ($generated@@278 $generated@@657)) ($generated@@278 ($generated@@254 $generated@@656 $generated@@657))))
 :pattern ( ($generated@@254 ($generated@@278 $generated@@656) ($generated@@278 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@86) (= (type $generated@@659) $generated@@168)) (= ($generated@@295 ($generated@@278 $generated@@658) ($generated@@278 $generated@@659)) ($generated@@278 ($generated@@295 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@295 ($generated@@278 $generated@@658) ($generated@@278 $generated@@659)))
)))
(assert (forall (($generated@@660 Int) ) (! (= ($generated@@325 ($generated@@8 ($generated@@276 $generated@@660))) ($generated@@278 ($generated@@325 ($generated@@8 $generated@@660))))
 :pattern ( ($generated@@325 ($generated@@8 ($generated@@276 $generated@@660))))
)))
(assert (forall (($generated@@661 T@U) ) (! (= ($generated@@325 ($generated@@278 $generated@@661)) ($generated@@278 ($generated@@325 $generated@@661)))
 :pattern ( ($generated@@325 ($generated@@278 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (! (let (($generated@@663 ($generated@@285 (type $generated@@662))))
 (=> (and (= (type $generated@@662) ($generated@@284 $generated@@663)) (= ($generated@@319 $generated@@662) 0)) (= $generated@@662 ($generated@@318 $generated@@663))))
 :pattern ( ($generated@@319 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (! (let (($generated@@667 (type $generated@@665)))
 (=> (and (and (= (type $generated@@664) ($generated@@85 $generated@@667 $generated@@2)) (= (type $generated@@666) $generated@@2)) (<= 0 ($generated $generated@@666))) (= ($generated@@338 ($generated@@91 $generated@@664 $generated@@665 $generated@@666)) (+ (- ($generated@@338 $generated@@664) ($generated ($generated@@90 $generated@@664 $generated@@665))) ($generated $generated@@666)))))
 :pattern ( ($generated@@338 ($generated@@91 $generated@@664 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@669) $generated@@2)) ($generated@@83 $generated@@669 $generated@@46 $generated@@668))
 :pattern ( ($generated@@83 $generated@@669 $generated@@46 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@671) $generated@@3)) ($generated@@83 $generated@@671 $generated@@47 $generated@@670))
 :pattern ( ($generated@@83 $generated@@671 $generated@@47 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@673) $generated@@4)) ($generated@@83 $generated@@673 $generated@@44 $generated@@672))
 :pattern ( ($generated@@83 $generated@@673 $generated@@44 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@675) $generated@@510)) ($generated@@83 $generated@@675 $generated@@45 $generated@@674))
 :pattern ( ($generated@@83 $generated@@675 $generated@@45 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@677) $generated@@168)) ($generated@@83 $generated@@677 $generated@@48 $generated@@676))
 :pattern ( ($generated@@83 $generated@@677 $generated@@48 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@678) $generated@@73) (= (type $generated@@679) $generated@@86)) (= (type $generated@@680) $generated@@168)) (= (type $generated@@681) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@301 $generated@@681)) (= ($generated@@83 ($generated@@295 $generated@@679 $generated@@680) ($generated@@185 $generated@@678) $generated@@681)  (and ($generated@@83 $generated@@679 $generated@@149 $generated@@681) ($generated@@302 $generated@@680 $generated@@678 $generated@@681))))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@679 $generated@@680) ($generated@@185 $generated@@678) $generated@@681))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@284 $generated@@168)) (= (type $generated@@683) $generated@@73)) (= ($generated@@156 $generated@@682 ($generated@@283 $generated@@683)) (forall (($generated@@684 Int) ) (!  (=> (and (<= 0 $generated@@684) (< $generated@@684 ($generated@@319 $generated@@682))) ($generated@@255 ($generated@@395 $generated@@682 $generated@@684) $generated@@683))
 :pattern ( ($generated@@395 $generated@@682 $generated@@684))
))))
 :pattern ( ($generated@@156 $generated@@682 ($generated@@283 $generated@@683)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 Int) ) (!  (=> (= (type $generated@@686) ($generated@@284 $generated@@168)) (=> (and (<= 0 $generated@@687) (< $generated@@687 ($generated@@319 $generated@@686))) (< ($generated@@595 ($generated@@386 $generated@@146 ($generated@@395 $generated@@686 $generated@@687))) ($generated@@685 $generated@@686))))
 :pattern ( ($generated@@595 ($generated@@386 $generated@@146 ($generated@@395 $generated@@686 $generated@@687))))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (and (= (type $generated@@688) ($generated@@349 $generated@@168 $generated@@168)) (= (type $generated@@689) $generated@@73)) (= (type $generated@@690) $generated@@73)) ($generated@@156 $generated@@688 ($generated@@464 $generated@@689 $generated@@690))) (and (and ($generated@@156 ($generated@@347 $generated@@688) ($generated@@266 $generated@@689)) ($generated@@156 ($generated@@407 $generated@@688) ($generated@@266 $generated@@690))) ($generated@@156 ($generated@@438 $generated@@688) ($generated@@266 ($generated@@159 $generated@@689 $generated@@690)))))
 :pattern ( ($generated@@156 $generated@@688 ($generated@@464 $generated@@689 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (and (= (type $generated@@691) ($generated@@367 $generated@@168 $generated@@168)) (= (type $generated@@692) $generated@@73)) (= (type $generated@@693) $generated@@73)) ($generated@@156 $generated@@691 ($generated@@472 $generated@@692 $generated@@693))) (and (and ($generated@@156 ($generated@@365 $generated@@691) ($generated@@271 $generated@@692)) ($generated@@156 ($generated@@418 $generated@@691) ($generated@@271 $generated@@693))) ($generated@@156 ($generated@@446 $generated@@691) ($generated@@271 ($generated@@159 $generated@@692 $generated@@693)))))
 :pattern ( ($generated@@156 $generated@@691 ($generated@@472 $generated@@692 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@2) ($generated@@156 $generated@@694 $generated@@46))
 :pattern ( ($generated@@156 $generated@@694 $generated@@46))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@3) ($generated@@156 $generated@@695 $generated@@47))
 :pattern ( ($generated@@156 $generated@@695 $generated@@47))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@4) ($generated@@156 $generated@@696 $generated@@44))
 :pattern ( ($generated@@156 $generated@@696 $generated@@44))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@510) ($generated@@156 $generated@@697 $generated@@45))
 :pattern ( ($generated@@156 $generated@@697 $generated@@45))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@168) ($generated@@156 $generated@@698 $generated@@48))
 :pattern ( ($generated@@156 $generated@@698 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 (T@U) Bool)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () Bool)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () Bool)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@699) ($generated@@194 $generated@@86 $generated@@4)) (= (type $generated@@700) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@701) $generated@@86)) (= (type $generated@@702) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@704) $generated@@86)) (= (type $generated@@705) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@706) $generated@@146)) (= (type $generated@@707) $generated@@146)) (= (type $generated@@708) ($generated@@284 $generated@@168))) (= (type $generated@@710) $generated@@86)) (= (type $generated@@712) $generated@@86)) (= (type $generated@@713) $generated@@146)) (= (type $generated@@714) $generated@@146)) (= (type $generated@@715) ($generated@@284 $generated@@168))) (= (type $generated@@716) ($generated@@284 $generated@@168))) (= (type $generated@@717) ($generated@@284 $generated@@168))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@719  (=> (= $generated@@699 ($generated@@193 $generated@@150 $generated@@700 $generated@@60 false)) (=> (and (not (= $generated@@701 $generated@@150)) (= ($generated@@189 $generated@@701) $generated@@149)) (=> (and (and (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@700 $generated@@701) $generated@@60))) (= $generated@@702 ($generated@@91 $generated@@700 $generated@@701 ($generated@@93 ($generated@@90 $generated@@700 $generated@@701) $generated@@60 ($generated@@11 true))))) (and ($generated@@301 $generated@@702) ($generated@@703 $generated@@702))) (=> (and (and (and (not (= $generated@@704 $generated@@150)) (= ($generated@@189 $generated@@704) $generated@@153)) (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@702 $generated@@704) $generated@@60)))) (and (and (= $generated@@705 ($generated@@91 $generated@@702 $generated@@704 ($generated@@93 ($generated@@90 $generated@@702 $generated@@704) $generated@@60 ($generated@@11 true)))) ($generated@@301 $generated@@705)) (and ($generated@@703 $generated@@705) (= $generated@@706 ($generated@@295 $generated@@150 ($generated@@325 $generated@@150)))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (=> (= $generated@@707 ($generated@@295 $generated@@701 ($generated@@325 $generated@@704))) (=> (and (and (and ($generated@@145 $generated@@706) ($generated@@145 $generated@@707)) (and ($generated@@145 $generated@@707) ($generated@@145 $generated@@706))) (and (and ($generated@@145 $generated@@706) ($generated@@145 $generated@@706)) (and ($generated@@145 $generated@@707) ($generated@@145 $generated@@707)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (= $generated@@708 ($generated@@282 ($generated@@282 ($generated@@318 $generated@@168) ($generated@@325 $generated@@704)) ($generated@@325 $generated@@150))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))))))))))
(let (($generated@@720  (=> (and ($generated@@301 $generated@@700) ($generated@@703 $generated@@700)) (=> (and (and (=> $generated@@709 (and ($generated@@156 $generated@@710 $generated@@248) ($generated@@83 $generated@@710 $generated@@248 $generated@@700))) true) (and (=> $generated@@711 (and ($generated@@156 $generated@@712 $generated@@251) ($generated@@83 $generated@@712 $generated@@251 $generated@@700))) true)) (=> (and (and (and ($generated@@156 $generated@@713 ($generated@@185 $generated@@153)) ($generated@@83 $generated@@713 ($generated@@185 $generated@@153) $generated@@700)) true) (and (and ($generated@@156 $generated@@714 ($generated@@185 $generated@@153)) ($generated@@83 $generated@@714 ($generated@@185 $generated@@153) $generated@@700)) true)) (=> (and (and (and (and ($generated@@156 $generated@@715 ($generated@@283 $generated@@153)) ($generated@@83 $generated@@715 ($generated@@283 $generated@@153) $generated@@700)) true) (and (and ($generated@@156 $generated@@716 ($generated@@283 $generated@@46)) ($generated@@83 $generated@@716 ($generated@@283 $generated@@46) $generated@@700)) true)) (and (and (and ($generated@@156 $generated@@717 ($generated@@283 $generated@@44)) ($generated@@83 $generated@@717 ($generated@@283 $generated@@44) $generated@@700)) true) (and (= 1 $generated@@718) (= (ControlFlow 0 7) 2)))) $generated@@719))))))
$generated@@720)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@67) (= (type $generated@@255) $generated@@67)) (= (type $generated@@256) $generated@@156)) (= (type $generated@@257) $generated@@156)) (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@252 $generated@@258)) (= ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@71)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@147) (= ($generated@@145 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) ($generated@@145 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@156) (= (type $generated@@264) $generated@@156)) (= $generated@@262 ($generated@@228 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@145 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@156)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@67) (= (type $generated@@277) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@77 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@280) $generated@@156)) (= (type $generated@@281) $generated@@67)) ($generated@@135 $generated@@278 $generated@@279)) ($generated@@253 $generated@@280 $generated@@281 $generated@@278)) ($generated@@253 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@135 $generated@@278 $generated@@279) ($generated@@253 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@285) $generated@@67)) ($generated@@135 $generated@@282 $generated@@283)) ($generated@@77 $generated@@284 $generated@@285 $generated@@282)) ($generated@@77 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@135 $generated@@282 $generated@@283) ($generated@@77 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@79 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@82 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@79 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@84 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@79 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@79 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@82 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@79 $generated@@329 $generated@@2)) (= ($generated@@162 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@84 $generated@@328 $generated@@330))) (<= ($generated ($generated@@84 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@84 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@162 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@156) ($generated@@229 $generated@@334 $generated@@139)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@334)) $generated@@334) ($generated@@143 ($generated@@331 $generated@@80 $generated@@334) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@334 $generated@@139))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@156) ($generated@@229 $generated@@335 $generated@@225)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@335)) $generated@@335) ($generated@@143 ($generated@@331 $generated@@80 $generated@@335) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@335 $generated@@225))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@80) (= ($generated@@143 $generated@@336 $generated@@225)  (and ($generated@@143 $generated@@336 $generated@@139) (not (= $generated@@336 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@336 $generated@@225))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@296 (type $generated@@337))))
(let (($generated@@339 ($generated@@295 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@294 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@293 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@292 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@296 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@79 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@296 (type $generated@@344))))
(let (($generated@@346 ($generated@@295 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@294 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@293 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@84 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@314 (type $generated@@348))))
(let (($generated@@350 ($generated@@313 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@312 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@311 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@310 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@314 (type $generated@@355))))
(let (($generated@@357 ($generated@@313 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@312 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@311 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@360) $generated@@67)) (= ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@359 $generated@@361)))) ($generated@@229 $generated@@361 $generated@@360))
 :pattern ( ($generated@@84 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@156) ($generated@@0 ($generated@@84 $generated@@362 $generated@@365))) ($generated@@253 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@84 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@367) $generated@@67)) (= (type $generated@@368) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@156) ($generated@@0 ($generated@@84 $generated@@366 $generated@@369))) ($generated@@253 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@84 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@84 ($generated@@287 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@84 ($generated@@287 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@296 (type $generated@@375))))
(let (($generated@@377 ($generated@@295 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@79 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@379) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379)))) (= ($generated@@84 ($generated@@373 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@379))))))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@314 (type $generated@@383))))
(let (($generated@@385 ($generated@@313 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@387) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387)))) (= ($generated@@84 ($generated@@381 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@387))))))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@295 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@294 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@84 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@84 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@313 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@312 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@393) $generated@@397))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@67)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))) (and ($generated@@253 ($generated@@84 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@253 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@67)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))) (and ($generated@@253 ($generated@@84 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@253 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@415) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@414 $generated@@416))) (and ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))) ($generated@@135 $generated@@414 $generated@@416))
 :pattern ( ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@79 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@314 (type $generated@@419))))
(let (($generated@@421 ($generated@@313 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@312 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@311 $generated@@421 $generated@@420)) (= ($generated@@310 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@310 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@314 (type $generated@@422))))
(let (($generated@@424 ($generated@@313 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@312 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@311 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@314 (type $generated@@425))))
(let (($generated@@427 ($generated@@313 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@312 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@311 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@156))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@296 (type $generated@@428))))
(let (($generated@@430 ($generated@@295 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@294 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@293 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@156) (= (type $generated@@432) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@372 $generated@@428) ($generated@@273 ($generated@@228 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@314 (type $generated@@433))))
(let (($generated@@435 ($generated@@313 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@312 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@311 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@156) (= (type $generated@@437) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@380 $generated@@433) ($generated@@273 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@229 $generated@@438 $generated@@46)) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@438)) $generated@@438) ($generated@@143 ($generated@@331 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@156) ($generated@@229 $generated@@439 $generated@@47)) (and (= ($generated@@273 ($generated@@331 $generated@@3 $generated@@439)) $generated@@439) ($generated@@143 ($generated@@331 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@229 $generated@@440 $generated@@44)) (and (= ($generated@@273 ($generated@@331 $generated@@4 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@331 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@45)) (and (= ($generated@@273 ($generated@@331 $generated@@441 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@331 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@67) (= ($generated@@229 ($generated@@273 $generated@@443) $generated@@444) ($generated@@143 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@229 ($generated@@273 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@82 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@79 $generated@@446 $generated@@2)) (<= 0 ($generated@@286 $generated@@445))))
 :pattern ( ($generated@@286 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@268 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@267 $generated@@448)) (<= 0 ($generated@@266 $generated@@447))))
 :pattern ( ($generated@@266 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@398 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@398 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@75 ($generated@@398 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@75 ($generated@@406 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@156) (= (type $generated@@470) $generated@@156)) (= ($generated@@259 ($generated@@228 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@146 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@146 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@146 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@156) (= (type $generated@@480) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@228 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@268 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@267 $generated@@156)) (= (type $generated@@490) $generated@@67)) (= (type $generated@@491) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@266 $generated@@489))) ($generated@@253 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@78 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@78 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@238 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@243 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@243 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@503 ($generated@@161 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@161 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@75 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@331 $generated@@512 ($generated@@273 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@273 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) (= ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@84 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))) (and ($generated@@229 ($generated@@84 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@229 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@156) (= (type $generated@@524) $generated@@156)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@228 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@228 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529))) (and (= ($generated@@273 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527)) $generated@@527) ($generated@@143 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527) ($generated@@398 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@156) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532))) (and (= ($generated@@273 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530)) $generated@@530) ($generated@@143 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530) ($generated@@406 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@156)) ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534))) (and (= ($generated@@273 ($generated@@331 $generated@@147 $generated@@535)) $generated@@535) ($generated@@143 ($generated@@331 $generated@@147 $generated@@535) ($generated@@146 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@84 ($generated@@417 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@84 ($generated@@417 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@72)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@146 $generated@@540 $generated@@541)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@147) (= ($generated@@521 ($generated@@273 $generated@@542)) ($generated@@522 $generated@@542)))
 :pattern ( ($generated@@521 ($generated@@273 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@156) ($generated@@229 $generated@@543 ($generated@@78 0))) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@543)) $generated@@543) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@543) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@543 ($generated@@78 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@156) (= (type $generated@@545) $generated@@67)) ($generated@@229 $generated@@544 ($generated@@238 $generated@@545))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544)) $generated@@544) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544) ($generated@@238 $generated@@545))))
 :pattern ( ($generated@@229 $generated@@544 ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) ($generated@@229 $generated@@546 ($generated@@243 $generated@@547))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546) ($generated@@243 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@243 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@229 $generated@@548 ($generated@@161 $generated@@549))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548) ($generated@@161 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@161 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@67)) ($generated@@229 $generated@@550 ($generated@@483 $generated@@551))) (and (= ($generated@@273 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550)) $generated@@550) ($generated@@143 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550) ($generated@@483 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@483 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (=> (and (and (and (= (type $generated@@552) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@553) $generated@@80)) (= (type $generated@@554) ($generated@@69 $generated@@556))) ($generated@@252 ($generated@@85 $generated@@552 $generated@@553 ($generated@@87 ($generated@@84 $generated@@552 $generated@@553) $generated@@554 $generated@@555)))) ($generated@@135 $generated@@552 ($generated@@85 $generated@@552 $generated@@553 ($generated@@87 ($generated@@84 $generated@@552 $generated@@553) $generated@@554 $generated@@555)))))
 :pattern ( ($generated@@85 $generated@@552 $generated@@553 ($generated@@87 ($generated@@84 $generated@@552 $generated@@553) $generated@@554 $generated@@555)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@538 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@538 $generated@@225) $generated@@66))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@557 $generated@@560)))) ($generated@@253 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@84 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@147) (= (type $generated@@562) $generated@@67)) (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@563) (and ($generated@@145 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@67) ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@253 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@253 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@67)) (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@567) (and ($generated@@145 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@67) ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@253 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@156) (= (type $generated@@570) $generated@@156)) (= ($generated@@228 ($generated@@248 $generated@@569) ($generated@@248 $generated@@570)) ($generated@@248 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@569) ($generated@@248 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@273 ($generated@@248 $generated@@571)) ($generated@@248 ($generated@@273 $generated@@571)))
 :pattern ( ($generated@@273 ($generated@@248 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@268 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@267 $generated@@573)) (= ($generated@@266 $generated@@572) 0)) (= $generated@@572 ($generated@@265 $generated@@573))))
 :pattern ( ($generated@@266 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@79 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@286 ($generated@@85 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@286 $generated@@574) ($generated ($generated@@84 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@286 ($generated@@85 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@579) $generated@@2)) ($generated@@77 $generated@@579 $generated@@46 $generated@@578))
 :pattern ( ($generated@@77 $generated@@579 $generated@@46 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@3)) ($generated@@77 $generated@@581 $generated@@47 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@47 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@4)) ($generated@@77 $generated@@583 $generated@@44 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@44 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@441)) ($generated@@77 $generated@@585 $generated@@45 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@45 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@587) $generated@@156)) ($generated@@77 $generated@@587 $generated@@48 $generated@@586))
 :pattern ( ($generated@@77 $generated@@587 $generated@@48 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@267 $generated@@156)) (= (type $generated@@589) $generated@@67)) (= ($generated@@143 $generated@@588 ($generated@@483 $generated@@589)) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@266 $generated@@588))) ($generated@@229 ($generated@@484 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@484 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@143 $generated@@588 ($generated@@483 $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 Int) ) (!  (=> (= (type $generated@@592) ($generated@@267 $generated@@156)) (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@266 $generated@@592))) (< ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@592 $generated@@593))) ($generated@@591 $generated@@592))))
 :pattern ( ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@592 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@595) $generated@@67)) (= (type $generated@@596) $generated@@67)) ($generated@@143 $generated@@594 ($generated@@398 $generated@@595 $generated@@596))) (and (and ($generated@@143 ($generated@@292 $generated@@594) ($generated@@238 $generated@@595)) ($generated@@143 ($generated@@341 $generated@@594) ($generated@@238 $generated@@596))) ($generated@@143 ($generated@@372 $generated@@594) ($generated@@238 ($generated@@146 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@143 $generated@@594 ($generated@@398 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) $generated@@67)) ($generated@@143 $generated@@597 ($generated@@406 $generated@@598 $generated@@599))) (and (and ($generated@@143 ($generated@@310 $generated@@597) ($generated@@243 $generated@@598)) ($generated@@143 ($generated@@352 $generated@@597) ($generated@@243 $generated@@599))) ($generated@@143 ($generated@@380 $generated@@597) ($generated@@243 ($generated@@146 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@143 $generated@@597 ($generated@@406 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) ($generated@@143 $generated@@600 $generated@@46))
 :pattern ( ($generated@@143 $generated@@600 $generated@@46))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@3) ($generated@@143 $generated@@601 $generated@@47))
 :pattern ( ($generated@@143 $generated@@601 $generated@@47))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@4) ($generated@@143 $generated@@602 $generated@@44))
 :pattern ( ($generated@@143 $generated@@602 $generated@@44))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@441) ($generated@@143 $generated@@603 $generated@@45))
 :pattern ( ($generated@@143 $generated@@603 $generated@@45))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@156) ($generated@@143 $generated@@604 $generated@@48))
 :pattern ( ($generated@@143 $generated@@604 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 (T@U) Bool)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Bool)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@605) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@607) $generated@@80)) (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@610) $generated@@80)) (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@612) ($generated@@267 $generated@@156))) (= (type $generated@@613) $generated@@80)) (= (type $generated@@615) $generated@@80)) (= (type $generated@@616) ($generated@@267 $generated@@156))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@618  (=> (= $generated@@605 ($generated@@170 $generated@@140 $generated@@606 $generated@@60 false)) (=> (and (not (= $generated@@607 $generated@@140)) (= ($generated@@166 $generated@@607) $generated@@139)) (=> (and (and (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@606 $generated@@607) $generated@@60))) (= $generated@@608 ($generated@@85 $generated@@606 $generated@@607 ($generated@@87 ($generated@@84 $generated@@606 $generated@@607) $generated@@60 ($generated@@11 true))))) (and ($generated@@252 $generated@@608) ($generated@@609 $generated@@608))) (=> (and (and (and (not (= $generated@@610 $generated@@140)) (= ($generated@@166 $generated@@610) $generated@@139)) (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@608 $generated@@610) $generated@@60)))) (and (and (= $generated@@611 ($generated@@85 $generated@@608 $generated@@610 ($generated@@87 ($generated@@84 $generated@@608 $generated@@610) $generated@@60 ($generated@@11 true)))) ($generated@@252 $generated@@611)) (and ($generated@@609 $generated@@611) (= $generated@@612 ($generated@@248 ($generated@@265 $generated@@156)))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))))))))
(let (($generated@@619  (=> (and ($generated@@252 $generated@@606) ($generated@@609 $generated@@606)) (=> (and (and (and (and ($generated@@143 $generated@@613 $generated@@139) ($generated@@77 $generated@@613 $generated@@139 $generated@@606)) true) (and (=> $generated@@614 (and ($generated@@143 $generated@@615 $generated@@225) ($generated@@77 $generated@@615 $generated@@225 $generated@@606))) true)) (and (and (and ($generated@@143 $generated@@616 ($generated@@483 $generated@@225)) ($generated@@77 $generated@@616 ($generated@@483 $generated@@225) $generated@@606)) true) (and (= 1 $generated@@617) (= (ControlFlow 0 8) 2)))) $generated@@618))))
$generated@@619)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
