(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (Int) Int)
(declare-fun $generated@@85 (Int) Bool)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U Int) T@U)
(declare-fun $generated@@88 (T@U Int) T@U)
(declare-fun $generated@@89 (T@T) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (Int) Int)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@119 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (Int) T@U)
(declare-fun $generated@@121 (T@T T@T) T@T)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@T) T@T)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@186 (T@U T@U) Bool)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@202 (T@U T@U T@U) T@U)
(declare-fun $generated@@203 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@204 (T@T T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@258 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@270 (T@U Int) T@U)
(declare-fun $generated@@278 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) Bool)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@314 (T@U) Bool)
(declare-fun $generated@@315 (T@U T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@351 (T@U) Int)
(declare-fun $generated@@352 (T@T) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@T) T@U)
(declare-fun $generated@@377 (T@T T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@U T@U) T@U)
(declare-fun $generated@@483 (T@T) T@U)
(declare-fun $generated@@507 () T@T)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@554 () T@U)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 11) (forall (($generated@@95 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@95)) 12))) (forall (($generated@@96 T@T) ) (! (= ($generated@@94 ($generated@@78 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@78 $generated@@96))
))) (= ($generated@@1 $generated@@79) 13)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= (type ($generated@@75 $generated@@97 $generated@@98)) ($generated@@78 $generated@@79))
 :pattern ( ($generated@@75 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ) (! (= (type ($generated@@76 $generated@@99)) $generated@@77)
 :pattern ( ($generated@@76 $generated@@99))
))) (forall (($generated@@100 T@U) ) (! (= (type ($generated@@82 $generated@@100)) $generated@@64)
 :pattern ( ($generated@@82 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@U) ) (! (= (type ($generated@@86 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@86 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 Int) ) (! (let (($generated@@105 ($generated@@94 (type $generated@@103))))
(= (type ($generated@@87 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@87 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 Int) ) (! (let (($generated@@108 ($generated@@94 (type $generated@@106))))
(= (type ($generated@@88 $generated@@106 $generated@@107)) ($generated@@78 $generated@@108)))
 :pattern ( ($generated@@88 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@T) ) (! (= (type ($generated@@89 $generated@@109)) ($generated@@78 $generated@@109))
 :pattern ( ($generated@@89 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@94 (type $generated@@110))))
(= (type ($generated@@90 $generated@@110 $generated@@111)) ($generated@@78 $generated@@112)))
 :pattern ( ($generated@@90 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(= (type ($generated@@91 $generated@@113 $generated@@114)) ($generated@@78 $generated@@115)))
 :pattern ( ($generated@@91 $generated@@113 $generated@@114))
))) (forall (($generated@@116 T@U) ) (! (= (type ($generated@@92 $generated@@116)) $generated@@79)
 :pattern ( ($generated@@92 $generated@@116))
))))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and (and (= (type $generated@@117) $generated@@77) (= (type $generated@@118) ($generated@@78 $generated@@79))) (or ($generated@@80 $generated@@118) (and (not (= 1 $generated@@74)) ($generated@@81 $generated@@118 ($generated@@82 $generated@@46))))) (and (=> (not (= ($generated@@83 $generated@@118) ($generated@@84 0))) (and ($generated@@85 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@118 ($generated@@84 0))))) ($generated@@80 ($generated@@88 $generated@@118 ($generated@@84 1))))) (= ($generated@@75 ($generated@@76 $generated@@117) $generated@@118) (ite (= ($generated@@83 $generated@@118) ($generated@@84 0)) ($generated@@89 $generated@@79) ($generated@@90 ($generated@@91 ($generated@@89 $generated@@79) ($generated@@92 ($generated@@8 ($generated@@93 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@118 ($generated@@84 0)))))))) ($generated@@75 $generated@@117 ($generated@@88 $generated@@118 ($generated@@84 1))))))))
 :pattern ( ($generated@@75 ($generated@@76 $generated@@117) $generated@@118))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (= ($generated@@1 ($generated@@121 $generated@@130 $generated@@131)) 14)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (! (= ($generated@@124 ($generated@@121 $generated@@132 $generated@@133)) $generated@@132)
 :pattern ( ($generated@@121 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ) (! (= ($generated@@125 ($generated@@121 $generated@@134 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@121 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@125 (type $generated@@136))))
(= (type ($generated@@126 $generated@@136 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@126 $generated@@136 $generated@@137))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 (type $generated@@141)))
(let (($generated@@143 (type $generated@@140)))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) ($generated@@121 $generated@@143 $generated@@142))))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@125 (type $generated@@144))))
 (=> (= (type $generated@@146) $generated@@147) (= ($generated@@126 ($generated@@127 $generated@@144 $generated@@145 $generated@@146) $generated@@145) $generated@@146)))
 :weight 0
))) (and (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@126 ($generated@@127 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@126 $generated@@149 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or true (= ($generated@@126 ($generated@@127 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@126 $generated@@153 $generated@@155)))
 :weight 0
)))) (= ($generated@@1 $generated@@122) 15)) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@67 (type $generated@@157))))
(= (type ($generated@@128 $generated@@156 $generated@@157)) $generated@@158))
 :pattern ( ($generated@@128 $generated@@156 $generated@@157))
))) (= ($generated@@1 $generated@@123) 16)) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@129 $generated@@159 $generated@@160 $generated@@161)) $generated@@123)
 :pattern ( ($generated@@129 $generated@@159 $generated@@160 $generated@@161))
))) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@67 (type $generated@@163))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@128 ($generated@@129 $generated@@162 $generated@@163 $generated@@164) $generated@@163) $generated@@164)))
 :weight 0
))) (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@168 $generated@@169) (= ($generated@@128 ($generated@@129 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@128 $generated@@167 $generated@@169)))
 :weight 0
)) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or true (= ($generated@@128 ($generated@@129 $generated@@171 $generated@@172 $generated@@170) $generated@@173) ($generated@@128 $generated@@171 $generated@@173)))
 :weight 0
)))) (forall (($generated@@174 Int) ) (! (= (type ($generated@@120 $generated@@174)) $generated@@64)
 :pattern ( ($generated@@120 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@175) $generated@@2) (= (type $generated@@176) ($generated@@121 $generated@@122 $generated@@123))) ($generated@@119 $generated@@175 ($generated@@120 0) $generated@@176))
 :pattern ( ($generated@@119 $generated@@175 ($generated@@120 0) $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@2) ($generated@@81 $generated@@177 ($generated@@120 0)))
 :pattern ( ($generated@@81 $generated@@177 ($generated@@120 0)))
)))
(assert  (and (= ($generated@@1 $generated@@180) 17) (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@181 $generated@@182)) $generated@@64)
 :pattern ( ($generated@@179 $generated@@181 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (and (= (type $generated@@183) $generated@@64) (= (type $generated@@184) $generated@@64)) (= (type $generated@@185) $generated@@180)) ($generated@@81 $generated@@185 ($generated@@179 $generated@@183 $generated@@184))) ($generated@@178 $generated@@185))
 :pattern ( ($generated@@178 $generated@@185) ($generated@@81 $generated@@185 ($generated@@179 $generated@@183 $generated@@184)))
)))
(assert  (and (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@79)
 :pattern ( ($generated@@187 $generated@@189))
)) (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@79)
 :pattern ( ($generated@@188 $generated@@190))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) $generated@@180) (= (type $generated@@192) $generated@@180)) true) (= ($generated@@186 $generated@@191 $generated@@192)  (and (= ($generated@@187 $generated@@191) ($generated@@187 $generated@@192)) (= ($generated@@188 $generated@@191) ($generated@@188 $generated@@192)))))
 :pattern ( ($generated@@186 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Int) ) (! (let (($generated@@196 (type $generated@@194)))
 (=> (= (type $generated@@193) ($generated@@78 $generated@@196)) (=> (and (<= 0 $generated@@195) (<= $generated@@195 ($generated@@83 $generated@@193))) (= ($generated@@88 ($generated@@91 $generated@@193 $generated@@194) $generated@@195) ($generated@@91 ($generated@@88 $generated@@193 $generated@@195) $generated@@194)))))
 :pattern ( ($generated@@88 ($generated@@91 $generated@@193 $generated@@194) $generated@@195))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@64)
 :pattern ( ($generated@@197 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) ($generated@@121 $generated@@79 $generated@@2)) (= (type $generated@@201) $generated@@64)) ($generated@@81 $generated@@200 ($generated@@197 $generated@@201))) ($generated@@198 $generated@@200))
 :pattern ( ($generated@@81 $generated@@200 ($generated@@197 $generated@@201)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (= ($generated@@1 ($generated@@204 $generated@@208 $generated@@209)) 18)) (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (! (= ($generated@@205 ($generated@@204 $generated@@210 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@204 $generated@@210 $generated@@211))
))) (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (! (= ($generated@@206 ($generated@@204 $generated@@212 $generated@@213)) $generated@@213)
 :pattern ( ($generated@@204 $generated@@212 $generated@@213))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@206 (type $generated@@214))))
(= (type ($generated@@202 $generated@@214 $generated@@215 $generated@@216)) $generated@@217))
 :pattern ( ($generated@@202 $generated@@214 $generated@@215 $generated@@216))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 (type $generated@@221)))
(let (($generated@@223 (type $generated@@219)))
(= (type ($generated@@207 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@204 $generated@@223 $generated@@222))))
 :pattern ( ($generated@@207 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@206 (type $generated@@224))))
 (=> (= (type $generated@@227) $generated@@228) (= ($generated@@202 ($generated@@207 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@225 $generated@@226) $generated@@227)))
 :weight 0
))) (and (and (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@202 ($generated@@207 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@202 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or (= $generated@@238 $generated@@240) (= ($generated@@202 ($generated@@207 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@202 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (or true (= ($generated@@202 ($generated@@207 $generated@@242 $generated@@243 $generated@@244 $generated@@241) $generated@@245 $generated@@246) ($generated@@202 $generated@@242 $generated@@245 $generated@@246)))
 :weight 0
)))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ) (! (= (type ($generated@@203 $generated@@247 $generated@@248 $generated@@249 $generated@@250)) ($generated@@204 $generated@@122 $generated@@4))
 :pattern ( ($generated@@203 $generated@@247 $generated@@248 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@67 (type $generated@@256))))
 (=> (and (and (and (and (= (type $generated@@251) $generated@@122) (= (type $generated@@252) ($generated@@121 $generated@@122 $generated@@123))) (= (type $generated@@253) ($generated@@66 $generated@@4))) (= (type $generated@@255) $generated@@122)) (= (type $generated@@256) ($generated@@66 $generated@@257))) (= ($generated@@0 ($generated@@202 ($generated@@203 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))  (=> (and (not (= $generated@@255 $generated@@251)) ($generated@@0 ($generated@@128 ($generated@@126 $generated@@252 $generated@@255) $generated@@253))) $generated@@254))))
 :pattern ( ($generated@@202 ($generated@@203 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Bool) ) (! (= (type ($generated@@258 $generated@@259 $generated@@260 $generated@@261 $generated@@262)) ($generated@@204 $generated@@122 $generated@@4))
 :pattern ( ($generated@@258 $generated@@259 $generated@@260 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 Bool) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@67 (type $generated@@268))))
 (=> (and (and (and (and (= (type $generated@@263) $generated@@122) (= (type $generated@@264) ($generated@@121 $generated@@122 $generated@@123))) (= (type $generated@@265) ($generated@@66 $generated@@4))) (= (type $generated@@267) $generated@@122)) (= (type $generated@@268) ($generated@@66 $generated@@269))) (= ($generated@@0 ($generated@@202 ($generated@@258 $generated@@263 $generated@@264 $generated@@265 $generated@@266) $generated@@267 $generated@@268))  (=> (and (not (= $generated@@267 $generated@@263)) ($generated@@0 ($generated@@128 ($generated@@126 $generated@@264 $generated@@267) $generated@@265))) $generated@@266))))
 :pattern ( ($generated@@202 ($generated@@258 $generated@@263 $generated@@264 $generated@@265 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 Int) ) (! (let (($generated@@273 ($generated@@94 (type $generated@@271))))
(= (type ($generated@@270 $generated@@271 $generated@@272)) ($generated@@78 $generated@@273)))
 :pattern ( ($generated@@270 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 Int) ) (! (let (($generated@@277 ($generated@@94 (type $generated@@274))))
 (=> (and (and (= (type $generated@@274) ($generated@@78 $generated@@277)) (= (type $generated@@275) ($generated@@78 $generated@@277))) (= $generated@@276 ($generated@@83 $generated@@274))) (and (= ($generated@@270 ($generated@@90 $generated@@274 $generated@@275) $generated@@276) $generated@@274) (= ($generated@@88 ($generated@@90 $generated@@274 $generated@@275) $generated@@276) $generated@@275))))
 :pattern ( ($generated@@270 ($generated@@90 $generated@@274 $generated@@275) $generated@@276))
 :pattern ( ($generated@@88 ($generated@@90 $generated@@274 $generated@@275) $generated@@276))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (= (type ($generated@@278 $generated@@280 $generated@@281)) $generated@@180)
 :pattern ( ($generated@@278 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (= (type $generated@@282) $generated@@64) (= (type $generated@@283) $generated@@64)) (= (type $generated@@284) $generated@@79)) (= (type $generated@@285) $generated@@79)) (= ($generated@@81 ($generated@@278 $generated@@284 $generated@@285) ($generated@@179 $generated@@282 $generated@@283))  (and ($generated@@279 $generated@@284 $generated@@282) ($generated@@279 $generated@@285 $generated@@283))))
 :pattern ( ($generated@@81 ($generated@@278 $generated@@284 $generated@@285) ($generated@@179 $generated@@282 $generated@@283)))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@180) (= (type $generated@@287) $generated@@180)) (= ($generated@@186 $generated@@286 $generated@@287) (= $generated@@286 $generated@@287)))
 :pattern ( ($generated@@186 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 Int) ) (! (let (($generated@@290 ($generated@@94 (type $generated@@288))))
 (=> (and (= (type $generated@@288) ($generated@@78 $generated@@290)) (= $generated@@289 0)) (= ($generated@@88 $generated@@288 $generated@@289) $generated@@288)))
 :pattern ( ($generated@@88 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@64)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) ($generated@@121 $generated@@79 $generated@@4)) (= (type $generated@@294) $generated@@64)) (= ($generated@@81 $generated@@293 ($generated@@291 $generated@@294)) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@79) ($generated@@0 ($generated@@126 $generated@@293 $generated@@295))) ($generated@@279 $generated@@295 $generated@@294))
 :pattern ( ($generated@@126 $generated@@293 $generated@@295))
))))
 :pattern ( ($generated@@81 $generated@@293 ($generated@@291 $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@64)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@121 $generated@@79 $generated@@4)) (= (type $generated@@299) $generated@@64)) (= ($generated@@81 $generated@@298 ($generated@@296 $generated@@299)) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@79) ($generated@@0 ($generated@@126 $generated@@298 $generated@@300))) ($generated@@279 $generated@@300 $generated@@299))
 :pattern ( ($generated@@126 $generated@@298 $generated@@300))
))))
 :pattern ( ($generated@@81 $generated@@298 ($generated@@296 $generated@@299)))
)))
(assert (forall (($generated@@301 Int) ) (! (= ($generated@@84 $generated@@301) $generated@@301)
 :pattern ( ($generated@@84 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 (type $generated@@303)))
(= (type ($generated@@302 $generated@@303)) $generated@@304))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= ($generated@@302 $generated@@305) $generated@@305)
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (= (type $generated@@306) ($generated@@78 $generated@@79)) (= (type $generated@@307) $generated@@79)) (= (type $generated@@308) $generated@@64)) (and ($generated@@81 $generated@@306 ($generated@@82 $generated@@308)) ($generated@@279 $generated@@307 $generated@@308))) ($generated@@81 ($generated@@91 $generated@@306 $generated@@307) ($generated@@82 $generated@@308)))
 :pattern ( ($generated@@81 ($generated@@91 $generated@@306 $generated@@307) ($generated@@82 $generated@@308)))
)))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@309 Int) ) (!  (=> (or ($generated@@85 $generated@@309) (not (= 0 $generated@@74))) true)
 :pattern ( ($generated@@93 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 Int) ($generated@@312 Int) ) (! (let (($generated@@313 ($generated@@94 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@78 $generated@@313)) (=> (and (and (<= 0 $generated@@312) (< $generated@@312 $generated@@311)) (< $generated@@312 ($generated@@83 $generated@@310))) (= ($generated@@87 ($generated@@270 $generated@@310 $generated@@311) $generated@@312) ($generated@@87 $generated@@310 $generated@@312)))))
 :weight 25
 :pattern ( ($generated@@87 ($generated@@270 $generated@@310 $generated@@311) $generated@@312))
 :pattern ( ($generated@@87 $generated@@310 $generated@@312) ($generated@@270 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@316) $generated@@64) (= (type $generated@@317) $generated@@64)) (= (type $generated@@318) $generated@@79)) (= (type $generated@@319) $generated@@79)) (= (type $generated@@320) ($generated@@121 $generated@@122 $generated@@123))) ($generated@@314 $generated@@320)) (= ($generated@@119 ($generated@@278 $generated@@318 $generated@@319) ($generated@@179 $generated@@316 $generated@@317) $generated@@320)  (and ($generated@@315 $generated@@318 $generated@@316 $generated@@320) ($generated@@315 $generated@@319 $generated@@317 $generated@@320))))
 :pattern ( ($generated@@119 ($generated@@278 $generated@@318 $generated@@319) ($generated@@179 $generated@@316 $generated@@317) $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 Int) ) (! (let (($generated@@323 ($generated@@94 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@78 $generated@@323)) (=> (and (<= 0 $generated@@322) (<= $generated@@322 ($generated@@83 $generated@@321))) (= ($generated@@83 ($generated@@88 $generated@@321 $generated@@322)) (- ($generated@@83 $generated@@321) $generated@@322)))))
 :pattern ( ($generated@@83 ($generated@@88 $generated@@321 $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@68)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@180) (= ($generated@@178 $generated@@326) (= ($generated@@324 $generated@@326) $generated@@61)))
 :pattern ( ($generated@@178 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@94 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@78 $generated@@330)) (=> (and (<= 0 $generated@@329) (< $generated@@329 ($generated@@83 $generated@@328))) (< ($generated@@327 ($generated@@270 $generated@@328 $generated@@329)) ($generated@@327 $generated@@328)))))
 :pattern ( ($generated@@327 ($generated@@270 $generated@@328 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@180) ($generated@@178 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@79) (= (type $generated@@333) $generated@@79)) (= $generated@@331 ($generated@@278 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@178 $generated@@331))
)))
(assert (forall (($generated@@334 T@T) ) (! (= ($generated@@83 ($generated@@89 $generated@@334)) 0)
 :pattern ( ($generated@@89 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 Int) ) (! (let (($generated@@337 ($generated@@94 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@78 $generated@@337)) (=> (and (< 0 $generated@@336) (<= $generated@@336 ($generated@@83 $generated@@335))) (< ($generated@@327 ($generated@@88 $generated@@335 $generated@@336)) ($generated@@327 $generated@@335)))))
 :pattern ( ($generated@@327 ($generated@@88 $generated@@335 $generated@@336)))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@338) $generated@@77) (= (type $generated@@339) ($generated@@78 $generated@@79))) (or ($generated@@80 $generated@@339) (and (not (= 1 $generated@@74)) ($generated@@81 $generated@@339 ($generated@@82 $generated@@46))))) (and (and (= ($generated@@83 ($generated@@75 $generated@@338 $generated@@339)) ($generated@@83 $generated@@339)) (forall (($generated@@340 Int) ) (!  (=> true (=> (and (<= ($generated@@84 0) $generated@@340) (< $generated@@340 ($generated@@83 $generated@@339))) (= ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@75 $generated@@338 $generated@@339) $generated@@340))) ($generated@@93 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@339 $generated@@340)))))))
 :pattern ( ($generated@@86 $generated@@2 ($generated@@87 $generated@@339 $generated@@340)))
 :pattern ( ($generated@@86 $generated@@2 ($generated@@87 ($generated@@75 $generated@@338 $generated@@339) $generated@@340)))
))) ($generated@@81 ($generated@@75 $generated@@338 $generated@@339) ($generated@@82 $generated@@46))))
 :pattern ( ($generated@@75 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (! (let (($generated@@343 (type $generated@@342)))
 (=> (= (type $generated@@341) ($generated@@78 $generated@@343)) (= ($generated@@83 ($generated@@91 $generated@@341 $generated@@342)) (+ 1 ($generated@@83 $generated@@341)))))
 :pattern ( ($generated@@91 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@64) (= (type $generated@@346) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@315 ($generated@@92 $generated@@344) $generated@@345 $generated@@346) ($generated@@119 $generated@@344 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@315 ($generated@@92 $generated@@344) $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 Int) ($generated@@349 Int) ) (! (let (($generated@@350 ($generated@@94 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@78 $generated@@350)) (=> (and (and (<= 0 $generated@@348) (<= 0 $generated@@349)) (< $generated@@349 (- ($generated@@83 $generated@@347) $generated@@348))) (= ($generated@@87 ($generated@@88 $generated@@347 $generated@@348) $generated@@349) ($generated@@87 $generated@@347 (+ $generated@@349 $generated@@348))))))
 :weight 25
 :pattern ( ($generated@@87 ($generated@@88 $generated@@347 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ) (! (= (type ($generated@@352 $generated@@353)) ($generated@@121 $generated@@353 $generated@@2))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@124 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@121 $generated@@355 $generated@@2)) (and (= (= ($generated@@351 $generated@@354) 0) (= $generated@@354 ($generated@@352 $generated@@355))) (=> (not (= ($generated@@351 $generated@@354) 0)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) (< 0 ($generated ($generated@@126 $generated@@354 $generated@@356))))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert  (and (and (and (and (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (= ($generated@@1 ($generated@@359 $generated@@362 $generated@@363)) 19)) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@359 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@361 ($generated@@359 $generated@@366 $generated@@367)) $generated@@367)
 :pattern ( ($generated@@359 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@360 (type $generated@@368))))
(= (type ($generated@@357 $generated@@368)) ($generated@@121 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@368))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= (type ($generated@@358 $generated@@370 $generated@@371)) ($generated@@359 $generated@@370 $generated@@371))
 :pattern ( ($generated@@358 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@T) ) (! (let (($generated@@374 (type $generated@@372)))
 (not ($generated@@0 ($generated@@126 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372))))
 :pattern ( (let (($generated@@374 (type $generated@@372)))
($generated@@126 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372)))
)))
(assert  (and (and (and (and (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (= ($generated@@1 ($generated@@377 $generated@@380 $generated@@381)) 20)) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@378 ($generated@@377 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@377 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@379 ($generated@@377 $generated@@384 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@377 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@378 (type $generated@@386))))
(= (type ($generated@@375 $generated@@386)) ($generated@@121 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@386))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= (type ($generated@@376 $generated@@388 $generated@@389)) ($generated@@377 $generated@@388 $generated@@389))
 :pattern ( ($generated@@376 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@T) ) (! (let (($generated@@392 (type $generated@@390)))
 (not ($generated@@0 ($generated@@126 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390))))
 :pattern ( (let (($generated@@392 (type $generated@@390)))
($generated@@126 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@94 (type $generated@@393))))
 (=> (and (= (type $generated@@393) ($generated@@78 $generated@@395)) (= (type $generated@@394) ($generated@@78 $generated@@395))) (= ($generated@@83 ($generated@@90 $generated@@393 $generated@@394)) (+ ($generated@@83 $generated@@393) ($generated@@83 $generated@@394)))))
 :pattern ( ($generated@@83 ($generated@@90 $generated@@393 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@124 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@121 $generated@@397 $generated@@2)) (= ($generated@@198 $generated@@396) (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@397) (and (<= 0 ($generated ($generated@@126 $generated@@396 $generated@@398))) (<= ($generated ($generated@@126 $generated@@396 $generated@@398)) ($generated@@351 $generated@@396))))
 :pattern ( ($generated@@126 $generated@@396 $generated@@398))
)))))
 :pattern ( ($generated@@198 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 Int) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
 (=> (= (type $generated@@399) ($generated@@78 $generated@@402)) (and (=> (= $generated@@400 ($generated@@83 $generated@@399)) (= ($generated@@87 ($generated@@91 $generated@@399 $generated@@401) $generated@@400) $generated@@401)) (=> (not (= $generated@@400 ($generated@@83 $generated@@399))) (= ($generated@@87 ($generated@@91 $generated@@399 $generated@@401) $generated@@400) ($generated@@87 $generated@@399 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@91 $generated@@399 $generated@@401) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@361 (type $generated@@403))))
(let (($generated@@405 ($generated@@360 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@359 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@358 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) ($generated@@0 ($generated@@126 ($generated@@357 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@357 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@361 (type $generated@@408))))
(= (type ($generated@@407 $generated@@408)) ($generated@@121 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@361 (type $generated@@410))))
(let (($generated@@412 ($generated@@360 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@359 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@358 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@411) ($generated@@0 ($generated@@126 ($generated@@407 $generated@@410) $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@379 (type $generated@@414))))
(let (($generated@@416 ($generated@@378 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@377 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@376 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) ($generated@@0 ($generated@@126 ($generated@@375 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@375 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@379 (type $generated@@419))))
(= (type ($generated@@418 $generated@@419)) ($generated@@121 $generated@@420 $generated@@4)))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@379 (type $generated@@421))))
(let (($generated@@423 ($generated@@378 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@377 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@376 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@422) ($generated@@0 ($generated@@126 ($generated@@418 $generated@@421) $generated@@424)))
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@418 $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@121 $generated@@79 $generated@@2)) (= (type $generated@@426) $generated@@64)) (= ($generated@@81 $generated@@425 ($generated@@197 $generated@@426)) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@79) (< 0 ($generated ($generated@@126 $generated@@425 $generated@@427)))) ($generated@@279 $generated@@427 $generated@@426))
 :pattern ( ($generated@@126 $generated@@425 $generated@@427))
))))
 :pattern ( ($generated@@81 $generated@@425 ($generated@@197 $generated@@426)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@121 $generated@@79 $generated@@4)) (= (type $generated@@429) $generated@@64)) (= (type $generated@@430) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@428 ($generated@@291 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@79) ($generated@@0 ($generated@@126 $generated@@428 $generated@@431))) ($generated@@315 $generated@@431 $generated@@429 $generated@@430))
 :pattern ( ($generated@@126 $generated@@428 $generated@@431))
))))
 :pattern ( ($generated@@119 $generated@@428 ($generated@@291 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@121 $generated@@79 $generated@@4)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@432 ($generated@@296 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@79) ($generated@@0 ($generated@@126 $generated@@432 $generated@@435))) ($generated@@315 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@126 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@119 $generated@@432 ($generated@@296 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(= ($generated ($generated@@126 ($generated@@352 $generated@@437) $generated@@436)) 0))
 :pattern ( (let (($generated@@437 (type $generated@@436)))
($generated@@126 ($generated@@352 $generated@@437) $generated@@436)))
)))
(assert  (and (forall (($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@440)) ($generated@@121 $generated@@79 $generated@@4))
 :pattern ( ($generated@@438 $generated@@440))
)) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@361 (type $generated@@441))))
(let (($generated@@443 ($generated@@360 (type $generated@@441))))
(= (type ($generated@@439 $generated@@441)) ($generated@@121 $generated@@443 $generated@@442))))
 :pattern ( ($generated@@439 $generated@@441))
))))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@359 $generated@@79 $generated@@79)) (= (type $generated@@445) $generated@@79)) (= ($generated@@0 ($generated@@126 ($generated@@438 $generated@@444) $generated@@445))  (and ($generated@@0 ($generated@@126 ($generated@@357 $generated@@444) ($generated@@187 ($generated@@86 $generated@@180 $generated@@445)))) (= ($generated@@126 ($generated@@439 $generated@@444) ($generated@@187 ($generated@@86 $generated@@180 $generated@@445))) ($generated@@188 ($generated@@86 $generated@@180 $generated@@445))))))
 :pattern ( ($generated@@126 ($generated@@438 $generated@@444) $generated@@445))
)))
(assert  (and (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) ($generated@@121 $generated@@79 $generated@@4))
 :pattern ( ($generated@@446 $generated@@448))
)) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@379 (type $generated@@449))))
(let (($generated@@451 ($generated@@378 (type $generated@@449))))
(= (type ($generated@@447 $generated@@449)) ($generated@@121 $generated@@451 $generated@@450))))
 :pattern ( ($generated@@447 $generated@@449))
))))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) ($generated@@377 $generated@@79 $generated@@79)) (= (type $generated@@453) $generated@@79)) (= ($generated@@0 ($generated@@126 ($generated@@446 $generated@@452) $generated@@453))  (and ($generated@@0 ($generated@@126 ($generated@@375 $generated@@452) ($generated@@187 ($generated@@86 $generated@@180 $generated@@453)))) (= ($generated@@126 ($generated@@447 $generated@@452) ($generated@@187 ($generated@@86 $generated@@180 $generated@@453))) ($generated@@188 ($generated@@86 $generated@@180 $generated@@453))))))
 :pattern ( ($generated@@126 ($generated@@446 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@360 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@359 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@126 ($generated@@407 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@126 ($generated@@357 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@126 ($generated@@439 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@126 ($generated@@357 $generated@@454) $generated@@458))
 :pattern ( ($generated@@126 ($generated@@439 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@126 ($generated@@407 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(let (($generated@@462 ($generated@@378 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@377 $generated@@462 $generated@@461)) (= ($generated@@0 ($generated@@126 ($generated@@418 $generated@@459) $generated@@460)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@462) (and ($generated@@0 ($generated@@126 ($generated@@375 $generated@@459) $generated@@463)) (= $generated@@460 ($generated@@126 ($generated@@447 $generated@@459) $generated@@463))))
 :pattern ( ($generated@@126 ($generated@@375 $generated@@459) $generated@@463))
 :pattern ( ($generated@@126 ($generated@@447 $generated@@459) $generated@@463))
))))))
 :pattern ( ($generated@@126 ($generated@@418 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@467) ($generated@@359 $generated@@79 $generated@@79)) (= (type $generated@@468) $generated@@64)) (= (type $generated@@469) $generated@@64)) (= (type $generated@@470) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@79) ($generated@@0 ($generated@@126 ($generated@@357 $generated@@467) $generated@@471))) (and ($generated@@315 ($generated@@126 ($generated@@439 $generated@@467) $generated@@471) $generated@@469 $generated@@470) ($generated@@315 $generated@@471 $generated@@468 $generated@@470)))
 :pattern ( ($generated@@126 ($generated@@439 $generated@@467) $generated@@471))
 :pattern ( ($generated@@126 ($generated@@357 $generated@@467) $generated@@471))
))))
 :pattern ( ($generated@@119 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) ($generated@@377 $generated@@79 $generated@@79)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@79) ($generated@@0 ($generated@@126 ($generated@@375 $generated@@475) $generated@@479))) (and ($generated@@315 ($generated@@126 ($generated@@447 $generated@@475) $generated@@479) $generated@@477 $generated@@478) ($generated@@315 $generated@@479 $generated@@476 $generated@@478)))
 :pattern ( ($generated@@126 ($generated@@447 $generated@@475) $generated@@479))
 :pattern ( ($generated@@126 ($generated@@375 $generated@@475) $generated@@479))
))))
 :pattern ( ($generated@@119 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 Int) ) (! (let (($generated@@482 ($generated@@94 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@78 $generated@@482)) (=> (and (<= 0 $generated@@481) (<= $generated@@481 ($generated@@83 $generated@@480))) (= ($generated@@83 ($generated@@270 $generated@@480 $generated@@481)) $generated@@481))))
 :pattern ( ($generated@@83 ($generated@@270 $generated@@480 $generated@@481)))
)))
(assert (forall (($generated@@484 T@T) ) (! (= (type ($generated@@483 $generated@@484)) ($generated@@121 $generated@@484 $generated@@4))
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@379 (type $generated@@485))))
(let (($generated@@487 ($generated@@378 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@377 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@376 $generated@@487 $generated@@486)) (= ($generated@@375 $generated@@485) ($generated@@483 $generated@@487))))))
 :pattern ( ($generated@@375 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@379 (type $generated@@488))))
(let (($generated@@490 ($generated@@378 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@377 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@376 $generated@@490 $generated@@489)) (= ($generated@@418 $generated@@488) ($generated@@483 $generated@@489))))))
 :pattern ( ($generated@@418 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@379 (type $generated@@491))))
(let (($generated@@493 ($generated@@378 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@377 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@376 $generated@@493 $generated@@492)) (= ($generated@@446 $generated@@491) ($generated@@483 $generated@@79))))))
 :pattern ( ($generated@@446 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@361 (type $generated@@494))))
(let (($generated@@496 ($generated@@360 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@359 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@358 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@79) (= (type $generated@@498) $generated@@79)) ($generated@@0 ($generated@@126 ($generated@@438 $generated@@494) ($generated@@92 ($generated@@278 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@438 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@379 (type $generated@@499))))
(let (($generated@@501 ($generated@@378 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@377 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@376 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@79) (= (type $generated@@503) $generated@@79)) ($generated@@0 ($generated@@126 ($generated@@446 $generated@@499) ($generated@@92 ($generated@@278 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@446 $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@79) ($generated@@279 $generated@@504 $generated@@46)) (and (= ($generated@@92 ($generated@@86 $generated@@2 $generated@@504)) $generated@@504) ($generated@@81 ($generated@@86 $generated@@2 $generated@@504) $generated@@46)))
 :pattern ( ($generated@@279 $generated@@504 $generated@@46))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@79) ($generated@@279 $generated@@505 $generated@@47)) (and (= ($generated@@92 ($generated@@86 $generated@@3 $generated@@505)) $generated@@505) ($generated@@81 ($generated@@86 $generated@@3 $generated@@505) $generated@@47)))
 :pattern ( ($generated@@279 $generated@@505 $generated@@47))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@79) ($generated@@279 $generated@@506 $generated@@44)) (and (= ($generated@@92 ($generated@@86 $generated@@4 $generated@@506)) $generated@@506) ($generated@@81 ($generated@@86 $generated@@4 $generated@@506) $generated@@44)))
 :pattern ( ($generated@@279 $generated@@506 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@507) 21))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@79) ($generated@@279 $generated@@508 $generated@@45)) (and (= ($generated@@92 ($generated@@86 $generated@@507 $generated@@508)) $generated@@508) ($generated@@81 ($generated@@86 $generated@@507 $generated@@508) $generated@@45)))
 :pattern ( ($generated@@279 $generated@@508 $generated@@45))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@279 ($generated@@92 $generated@@509) $generated@@510) ($generated@@81 $generated@@509 $generated@@510)))
 :pattern ( ($generated@@279 ($generated@@92 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@124 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@121 $generated@@512 $generated@@2)) (<= 0 ($generated@@351 $generated@@511))))
 :pattern ( ($generated@@351 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@94 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@78 $generated@@514)) (<= 0 ($generated@@83 $generated@@513))))
 :pattern ( ($generated@@83 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 Int) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@94 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@78 $generated@@518)) (=> (and (and (<= 0 $generated@@516) (< $generated@@516 $generated@@517)) (<= $generated@@517 ($generated@@83 $generated@@515))) (< ($generated@@327 ($generated@@90 ($generated@@270 $generated@@515 $generated@@516) ($generated@@88 $generated@@515 $generated@@517))) ($generated@@327 $generated@@515)))))
 :pattern ( ($generated@@327 ($generated@@90 ($generated@@270 $generated@@515 $generated@@516) ($generated@@88 $generated@@515 $generated@@517))))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@64) (= (type $generated@@522) $generated@@64)) (= ($generated@@519 ($generated@@464 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@464 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= ($generated@@523 ($generated@@464 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@464 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= ($generated@@72 ($generated@@464 $generated@@527 $generated@@528)) $generated@@58))
 :pattern ( ($generated@@464 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@64)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (= ($generated@@529 ($generated@@472 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@472 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@64)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= ($generated@@533 ($generated@@472 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@472 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@64) (= (type $generated@@538) $generated@@64)) (= ($generated@@72 ($generated@@472 $generated@@537 $generated@@538)) $generated@@59))
 :pattern ( ($generated@@472 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@79) (= (type $generated@@540) $generated@@79)) (= ($generated@@324 ($generated@@278 $generated@@539 $generated@@540)) $generated@@61))
 :pattern ( ($generated@@278 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@64)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (= ($generated@@541 ($generated@@179 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@179 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@64)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (= ($generated@@545 ($generated@@179 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@179 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@79) (= (type $generated@@550) $generated@@79)) (= ($generated@@187 ($generated@@278 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@278 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@79) (= (type $generated@@552) $generated@@79)) (= ($generated@@188 ($generated@@278 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@278 $generated@@551 $generated@@552))
)))
(assert  (and (forall (($generated@@555 T@U) ) (! (= (type ($generated@@553 $generated@@555)) $generated@@77)
 :pattern ( ($generated@@553 $generated@@555))
)) (= (type $generated@@554) $generated@@77)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@77) (= (type $generated@@557) ($generated@@78 $generated@@79))) (= ($generated@@75 $generated@@556 $generated@@557) ($generated@@75 $generated@@554 $generated@@557)))
 :pattern ( ($generated@@75 ($generated@@553 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@78 $generated@@79)) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@558 ($generated@@82 $generated@@559) $generated@@560) (forall (($generated@@561 Int) ) (!  (=> (and (<= 0 $generated@@561) (< $generated@@561 ($generated@@83 $generated@@558))) ($generated@@315 ($generated@@87 $generated@@558 $generated@@561) $generated@@559 $generated@@560))
 :pattern ( ($generated@@87 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@119 $generated@@558 ($generated@@82 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@563 Int) ) (! (= ($generated@@562 ($generated@@120 $generated@@563)) $generated@@563)
 :pattern ( ($generated@@120 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@64)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@64) (= ($generated@@564 ($generated@@291 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@291 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@64) (= ($generated@@72 ($generated@@291 $generated@@567)) $generated@@54))
 :pattern ( ($generated@@291 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@568 ($generated@@296 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@296 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@72 ($generated@@296 $generated@@571)) $generated@@55))
 :pattern ( ($generated@@296 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@64)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@572 ($generated@@197 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@197 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@72 ($generated@@197 $generated@@575)) $generated@@56))
 :pattern ( ($generated@@197 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@64)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@576 ($generated@@82 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@82 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@64) (= ($generated@@72 ($generated@@82 $generated@@579)) $generated@@57))
 :pattern ( ($generated@@82 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
(= ($generated@@86 $generated@@581 ($generated@@92 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@92 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@359 $generated@@79 $generated@@79)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) (= ($generated@@81 $generated@@582 ($generated@@464 $generated@@583 $generated@@584)) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@79) ($generated@@0 ($generated@@126 ($generated@@357 $generated@@582) $generated@@585))) (and ($generated@@279 ($generated@@126 ($generated@@439 $generated@@582) $generated@@585) $generated@@584) ($generated@@279 $generated@@585 $generated@@583)))
 :pattern ( ($generated@@126 ($generated@@439 $generated@@582) $generated@@585))
 :pattern ( ($generated@@126 ($generated@@357 $generated@@582) $generated@@585))
))))
 :pattern ( ($generated@@81 $generated@@582 ($generated@@464 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@377 $generated@@79 $generated@@79)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) (= ($generated@@81 $generated@@586 ($generated@@472 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@79) ($generated@@0 ($generated@@126 ($generated@@375 $generated@@586) $generated@@589))) (and ($generated@@279 ($generated@@126 ($generated@@447 $generated@@586) $generated@@589) $generated@@588) ($generated@@279 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@126 ($generated@@447 $generated@@586) $generated@@589))
 :pattern ( ($generated@@126 ($generated@@375 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@81 $generated@@586 ($generated@@472 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@79) (= (type $generated@@593) $generated@@79)) (< ($generated@@590 $generated@@592) ($generated@@591 ($generated@@278 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@278 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@79) (= (type $generated@@595) $generated@@79)) (< ($generated@@590 $generated@@595) ($generated@@591 ($generated@@278 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@278 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@77) (= (type $generated@@597) ($generated@@78 $generated@@79))) (= ($generated@@75 ($generated@@76 $generated@@596) $generated@@597) ($generated@@75 $generated@@596 $generated@@597)))
 :pattern ( ($generated@@75 ($generated@@76 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@79) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@279 $generated@@598 ($generated@@464 $generated@@599 $generated@@600))) (and (= ($generated@@92 ($generated@@86 ($generated@@359 $generated@@79 $generated@@79) $generated@@598)) $generated@@598) ($generated@@81 ($generated@@86 ($generated@@359 $generated@@79 $generated@@79) $generated@@598) ($generated@@464 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@279 $generated@@598 ($generated@@464 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@79) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@64)) ($generated@@279 $generated@@601 ($generated@@472 $generated@@602 $generated@@603))) (and (= ($generated@@92 ($generated@@86 ($generated@@377 $generated@@79 $generated@@79) $generated@@601)) $generated@@601) ($generated@@81 ($generated@@86 ($generated@@377 $generated@@79 $generated@@79) $generated@@601) ($generated@@472 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@279 $generated@@601 ($generated@@472 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@64) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) $generated@@79)) ($generated@@279 $generated@@606 ($generated@@179 $generated@@604 $generated@@605))) (and (= ($generated@@92 ($generated@@86 $generated@@180 $generated@@606)) $generated@@606) ($generated@@81 ($generated@@86 $generated@@180 $generated@@606) ($generated@@179 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@279 $generated@@606 ($generated@@179 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@126 ($generated@@483 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@126 ($generated@@483 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@69)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@64) (= (type $generated@@612) $generated@@64)) (and (= ($generated@@72 ($generated@@179 $generated@@611 $generated@@612)) $generated@@62) (= ($generated@@609 ($generated@@179 $generated@@611 $generated@@612)) $generated@@63)))
 :pattern ( ($generated@@179 $generated@@611 $generated@@612))
)))
(assert  (and (forall (($generated@@615 T@U) ) (! (let (($generated@@616 ($generated@@94 (type $generated@@615))))
(= (type ($generated@@613 $generated@@615)) ($generated@@78 $generated@@616)))
 :pattern ( ($generated@@613 $generated@@615))
)) (forall (($generated@@617 T@U) ) (! (let (($generated@@618 ($generated@@94 (type $generated@@617))))
(= (type ($generated@@614 $generated@@617)) $generated@@618))
 :pattern ( ($generated@@614 $generated@@617))
))))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@620)))
 (=> (= (type $generated@@619) ($generated@@78 $generated@@621)) (and (= ($generated@@613 ($generated@@91 $generated@@619 $generated@@620)) $generated@@619) (= ($generated@@614 ($generated@@91 $generated@@619 $generated@@620)) $generated@@620))))
 :pattern ( ($generated@@91 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@180) (= ($generated@@590 ($generated@@92 $generated@@622)) ($generated@@591 $generated@@622)))
 :pattern ( ($generated@@590 ($generated@@92 $generated@@622)))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@77) (= (type $generated@@624) ($generated@@78 $generated@@79))) (or ($generated@@80 ($generated@@302 $generated@@624)) (and (not (= 1 $generated@@74)) ($generated@@81 $generated@@624 ($generated@@82 $generated@@46))))) (and (=> (not (= ($generated@@83 ($generated@@302 $generated@@624)) ($generated@@84 0))) (and ($generated@@85 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@302 $generated@@624) ($generated@@84 0))))) ($generated@@80 ($generated@@302 ($generated@@88 ($generated@@302 $generated@@624) ($generated@@84 1)))))) (= ($generated@@75 ($generated@@76 $generated@@623) ($generated@@302 $generated@@624)) (ite (= ($generated@@83 ($generated@@302 $generated@@624)) ($generated@@84 0)) ($generated@@89 $generated@@79) ($generated@@90 ($generated@@91 ($generated@@89 $generated@@79) ($generated@@92 ($generated@@8 ($generated@@93 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@302 $generated@@624) ($generated@@84 0)))))))) ($generated@@75 ($generated@@76 $generated@@623) ($generated@@302 ($generated@@88 ($generated@@302 $generated@@624) ($generated@@84 1)))))))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@623) ($generated@@302 $generated@@624)))
))))
(assert (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@79) ($generated@@279 $generated@@625 ($generated@@120 0))) (and (= ($generated@@92 ($generated@@86 $generated@@2 $generated@@625)) $generated@@625) ($generated@@81 ($generated@@86 ($generated@@121 $generated@@79 $generated@@4) $generated@@625) ($generated@@120 0))))
 :pattern ( ($generated@@279 $generated@@625 ($generated@@120 0)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@79) (= (type $generated@@627) $generated@@64)) ($generated@@279 $generated@@626 ($generated@@291 $generated@@627))) (and (= ($generated@@92 ($generated@@86 ($generated@@121 $generated@@79 $generated@@4) $generated@@626)) $generated@@626) ($generated@@81 ($generated@@86 ($generated@@121 $generated@@79 $generated@@4) $generated@@626) ($generated@@291 $generated@@627))))
 :pattern ( ($generated@@279 $generated@@626 ($generated@@291 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@79) (= (type $generated@@629) $generated@@64)) ($generated@@279 $generated@@628 ($generated@@296 $generated@@629))) (and (= ($generated@@92 ($generated@@86 ($generated@@121 $generated@@79 $generated@@4) $generated@@628)) $generated@@628) ($generated@@81 ($generated@@86 ($generated@@121 $generated@@79 $generated@@4) $generated@@628) ($generated@@296 $generated@@629))))
 :pattern ( ($generated@@279 $generated@@628 ($generated@@296 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@79) (= (type $generated@@631) $generated@@64)) ($generated@@279 $generated@@630 ($generated@@197 $generated@@631))) (and (= ($generated@@92 ($generated@@86 ($generated@@121 $generated@@79 $generated@@2) $generated@@630)) $generated@@630) ($generated@@81 ($generated@@86 ($generated@@121 $generated@@79 $generated@@2) $generated@@630) ($generated@@197 $generated@@631))))
 :pattern ( ($generated@@279 $generated@@630 ($generated@@197 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@79) (= (type $generated@@633) $generated@@64)) ($generated@@279 $generated@@632 ($generated@@82 $generated@@633))) (and (= ($generated@@92 ($generated@@86 ($generated@@78 $generated@@79) $generated@@632)) $generated@@632) ($generated@@81 ($generated@@86 ($generated@@78 $generated@@79) $generated@@632) ($generated@@82 $generated@@633))))
 :pattern ( ($generated@@279 $generated@@632 ($generated@@82 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 Int) ($generated@@636 Int) ) (! (let (($generated@@637 ($generated@@94 (type $generated@@634))))
 (=> (= (type $generated@@634) ($generated@@78 $generated@@637)) (=> (and (and (<= 0 $generated@@635) (<= $generated@@635 $generated@@636)) (< $generated@@636 ($generated@@83 $generated@@634))) (= ($generated@@87 ($generated@@88 $generated@@634 $generated@@635) (- $generated@@636 $generated@@635)) ($generated@@87 $generated@@634 $generated@@636)))))
 :weight 25
 :pattern ( ($generated@@87 $generated@@634 $generated@@636) ($generated@@88 $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@638) ($generated@@121 $generated@@79 $generated@@2)) (= (type $generated@@639) $generated@@64)) (= (type $generated@@640) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@638 ($generated@@197 $generated@@639) $generated@@640) (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@79) (< 0 ($generated ($generated@@126 $generated@@638 $generated@@641)))) ($generated@@315 $generated@@641 $generated@@639 $generated@@640))
 :pattern ( ($generated@@126 $generated@@638 $generated@@641))
))))
 :pattern ( ($generated@@119 $generated@@638 ($generated@@197 $generated@@639) $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 Int) ($generated@@644 Int) ) (! (let (($generated@@645 ($generated@@94 (type $generated@@642))))
 (=> (= (type $generated@@642) ($generated@@78 $generated@@645)) (=> (and (and (<= 0 $generated@@643) (<= 0 $generated@@644)) (<= (+ $generated@@643 $generated@@644) ($generated@@83 $generated@@642))) (= ($generated@@88 ($generated@@88 $generated@@642 $generated@@643) $generated@@644) ($generated@@88 $generated@@642 (+ $generated@@643 $generated@@644))))))
 :pattern ( ($generated@@88 ($generated@@88 $generated@@642 $generated@@643) $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@180) (= (type $generated@@647) $generated@@64)) (= (type $generated@@648) ($generated@@121 $generated@@122 $generated@@123))) (and ($generated@@314 $generated@@648) (and ($generated@@178 $generated@@646) (exists (($generated@@649 T@U) ) (!  (and (= (type $generated@@649) $generated@@64) ($generated@@119 $generated@@646 ($generated@@179 $generated@@647 $generated@@649) $generated@@648))
 :pattern ( ($generated@@119 $generated@@646 ($generated@@179 $generated@@647 $generated@@649) $generated@@648))
))))) ($generated@@315 ($generated@@187 $generated@@646) $generated@@647 $generated@@648))
 :pattern ( ($generated@@315 ($generated@@187 $generated@@646) $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@180) (= (type $generated@@651) $generated@@64)) (= (type $generated@@652) ($generated@@121 $generated@@122 $generated@@123))) (and ($generated@@314 $generated@@652) (and ($generated@@178 $generated@@650) (exists (($generated@@653 T@U) ) (!  (and (= (type $generated@@653) $generated@@64) ($generated@@119 $generated@@650 ($generated@@179 $generated@@653 $generated@@651) $generated@@652))
 :pattern ( ($generated@@119 $generated@@650 ($generated@@179 $generated@@653 $generated@@651) $generated@@652))
))))) ($generated@@315 ($generated@@188 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@315 ($generated@@188 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 Int) ) (! (let (($generated@@657 ($generated@@94 (type $generated@@654))))
 (=> (and (= (type $generated@@654) ($generated@@78 $generated@@657)) (= (type $generated@@655) ($generated@@78 $generated@@657))) (and (=> (< $generated@@656 ($generated@@83 $generated@@654)) (= ($generated@@87 ($generated@@90 $generated@@654 $generated@@655) $generated@@656) ($generated@@87 $generated@@654 $generated@@656))) (=> (<= ($generated@@83 $generated@@654) $generated@@656) (= ($generated@@87 ($generated@@90 $generated@@654 $generated@@655) $generated@@656) ($generated@@87 $generated@@655 (- $generated@@656 ($generated@@83 $generated@@654))))))))
 :pattern ( ($generated@@87 ($generated@@90 $generated@@654 $generated@@655) $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@79) (= (type $generated@@659) $generated@@79)) (= ($generated@@278 ($generated@@302 $generated@@658) ($generated@@302 $generated@@659)) ($generated@@302 ($generated@@278 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@278 ($generated@@302 $generated@@658) ($generated@@302 $generated@@659)))
)))
(assert (forall (($generated@@660 Int) ) (! (= ($generated@@92 ($generated@@8 ($generated@@84 $generated@@660))) ($generated@@302 ($generated@@92 ($generated@@8 $generated@@660))))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@84 $generated@@660))))
)))
(assert (forall (($generated@@661 T@U) ) (! (= ($generated@@92 ($generated@@302 $generated@@661)) ($generated@@302 ($generated@@92 $generated@@661)))
 :pattern ( ($generated@@92 ($generated@@302 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (! (let (($generated@@663 ($generated@@94 (type $generated@@662))))
 (=> (and (= (type $generated@@662) ($generated@@78 $generated@@663)) (= ($generated@@83 $generated@@662) 0)) (= $generated@@662 ($generated@@89 $generated@@663))))
 :pattern ( ($generated@@83 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 Int) ) (! (let (($generated@@666 ($generated@@94 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@78 $generated@@666)) (= $generated@@665 0)) (= ($generated@@270 $generated@@664 $generated@@665) ($generated@@89 $generated@@666))))
 :pattern ( ($generated@@270 $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (! (let (($generated@@670 (type $generated@@668)))
 (=> (and (and (= (type $generated@@667) ($generated@@121 $generated@@670 $generated@@2)) (= (type $generated@@669) $generated@@2)) (<= 0 ($generated $generated@@669))) (= ($generated@@351 ($generated@@127 $generated@@667 $generated@@668 $generated@@669)) (+ (- ($generated@@351 $generated@@667) ($generated ($generated@@126 $generated@@667 $generated@@668))) ($generated $generated@@669)))))
 :pattern ( ($generated@@351 ($generated@@127 $generated@@667 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@121 $generated@@122 $generated@@123)) (= (type $generated@@672) $generated@@2)) ($generated@@119 $generated@@672 $generated@@46 $generated@@671))
 :pattern ( ($generated@@119 $generated@@672 $generated@@46 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@121 $generated@@122 $generated@@123)) (= (type $generated@@674) $generated@@3)) ($generated@@119 $generated@@674 $generated@@47 $generated@@673))
 :pattern ( ($generated@@119 $generated@@674 $generated@@47 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@121 $generated@@122 $generated@@123)) (= (type $generated@@676) $generated@@4)) ($generated@@119 $generated@@676 $generated@@44 $generated@@675))
 :pattern ( ($generated@@119 $generated@@676 $generated@@44 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@121 $generated@@122 $generated@@123)) (= (type $generated@@678) $generated@@507)) ($generated@@119 $generated@@678 $generated@@45 $generated@@677))
 :pattern ( ($generated@@119 $generated@@678 $generated@@45 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@121 $generated@@122 $generated@@123)) (= (type $generated@@680) $generated@@79)) ($generated@@119 $generated@@680 $generated@@48 $generated@@679))
 :pattern ( ($generated@@119 $generated@@680 $generated@@48 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@78 $generated@@79)) (= (type $generated@@682) $generated@@64)) (= ($generated@@81 $generated@@681 ($generated@@82 $generated@@682)) (forall (($generated@@683 Int) ) (!  (=> (and (<= 0 $generated@@683) (< $generated@@683 ($generated@@83 $generated@@681))) ($generated@@279 ($generated@@87 $generated@@681 $generated@@683) $generated@@682))
 :pattern ( ($generated@@87 $generated@@681 $generated@@683))
))))
 :pattern ( ($generated@@81 $generated@@681 ($generated@@82 $generated@@682)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 Int) ) (!  (=> (= (type $generated@@684) ($generated@@78 $generated@@79)) (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@83 $generated@@684))) (< ($generated@@591 ($generated@@86 $generated@@180 ($generated@@87 $generated@@684 $generated@@685))) ($generated@@327 $generated@@684))))
 :pattern ( ($generated@@591 ($generated@@86 $generated@@180 ($generated@@87 $generated@@684 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@359 $generated@@79 $generated@@79)) (= (type $generated@@687) $generated@@64)) (= (type $generated@@688) $generated@@64)) ($generated@@81 $generated@@686 ($generated@@464 $generated@@687 $generated@@688))) (and (and ($generated@@81 ($generated@@357 $generated@@686) ($generated@@291 $generated@@687)) ($generated@@81 ($generated@@407 $generated@@686) ($generated@@291 $generated@@688))) ($generated@@81 ($generated@@438 $generated@@686) ($generated@@291 ($generated@@179 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@81 $generated@@686 ($generated@@464 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@377 $generated@@79 $generated@@79)) (= (type $generated@@690) $generated@@64)) (= (type $generated@@691) $generated@@64)) ($generated@@81 $generated@@689 ($generated@@472 $generated@@690 $generated@@691))) (and (and ($generated@@81 ($generated@@375 $generated@@689) ($generated@@296 $generated@@690)) ($generated@@81 ($generated@@418 $generated@@689) ($generated@@296 $generated@@691))) ($generated@@81 ($generated@@446 $generated@@689) ($generated@@296 ($generated@@179 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@81 $generated@@689 ($generated@@472 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@2) ($generated@@81 $generated@@692 $generated@@46))
 :pattern ( ($generated@@81 $generated@@692 $generated@@46))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@3) ($generated@@81 $generated@@693 $generated@@47))
 :pattern ( ($generated@@81 $generated@@693 $generated@@47))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@4) ($generated@@81 $generated@@694 $generated@@44))
 :pattern ( ($generated@@81 $generated@@694 $generated@@44))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@507) ($generated@@81 $generated@@695 $generated@@45))
 :pattern ( ($generated@@81 $generated@@695 $generated@@45))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@79) ($generated@@81 $generated@@696 $generated@@48))
 :pattern ( ($generated@@81 $generated@@696 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@702) $generated@@77) (= (type $generated@@698) ($generated@@78 $generated@@79))) (= (type $generated@@699) $generated@@77)) (= (type $generated@@700) ($generated@@121 $generated@@122 $generated@@123))) (= (type $generated@@704) ($generated@@78 $generated@@79))) (= (type $generated@@705) ($generated@@204 $generated@@122 $generated@@4))) (= (type $generated@@706) $generated@@122)) (= (type $generated@@707) ($generated@@204 $generated@@122 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@709 true))
(let (($generated@@710  (=> (and (=> (and (<= ($generated@@84 0) $generated@@697) (< $generated@@697 ($generated@@83 $generated@@698))) (= ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@75 $generated@@699 $generated@@698) $generated@@697))) ($generated@@93 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@698 $generated@@697)))))) (= (ControlFlow 0 15) 10)) $generated@@709)))
(let (($generated@@711  (=> (<= ($generated@@84 0) $generated@@697) (=> (and (< $generated@@697 ($generated@@83 $generated@@698)) ($generated@@119 $generated@@698 ($generated@@82 $generated@@46) $generated@@700)) (and (=> (= (ControlFlow 0 11) (- 0 14)) (or (= $generated@@698 $generated@@698) (< ($generated@@327 $generated@@698) ($generated@@327 $generated@@698)))) (=> (or (= $generated@@698 $generated@@698) (< ($generated@@327 $generated@@698) ($generated@@327 $generated@@698))) (=> (or (= $generated@@698 $generated@@698) ($generated@@80 $generated@@698)) (and (=> (= (ControlFlow 0 11) (- 0 13)) (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@83 ($generated@@75 $generated@@699 $generated@@698))))) (=> (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@83 ($generated@@75 $generated@@699 $generated@@698)))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@83 $generated@@698)))) (=> (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@83 $generated@@698))) (=> (= $generated@@701 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@698 $generated@@697)))) (=> (and (and ($generated@@119 ($generated@@8 $generated@@701) $generated@@46 $generated@@700) ($generated@@85 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@698 $generated@@697))))) (and (= ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@75 $generated@@699 $generated@@698) $generated@@697))) ($generated@@93 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@698 $generated@@697))))) (= (ControlFlow 0 11) 10))) $generated@@709)))))))))))))
(let (($generated@@712  (=> (and ($generated@@81 ($generated@@75 $generated@@699 $generated@@698) ($generated@@82 $generated@@46)) ($generated@@119 $generated@@698 ($generated@@82 $generated@@46) $generated@@700)) (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (= $generated@@698 $generated@@698) (< ($generated@@327 $generated@@698) ($generated@@327 $generated@@698)))) (=> (or (= $generated@@698 $generated@@698) (< ($generated@@327 $generated@@698) ($generated@@327 $generated@@698))) (=> (and (or (= $generated@@698 $generated@@698) ($generated@@80 $generated@@698)) (= ($generated@@83 ($generated@@75 $generated@@699 $generated@@698)) ($generated@@83 $generated@@698))) (and (=> (= (ControlFlow 0 16) 11) $generated@@711) (=> (= (ControlFlow 0 16) 15) $generated@@710))))))))
(let (($generated@@713  (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@83 ($generated@@75 $generated@@702 $generated@@698)) ($generated@@83 $generated@@698))) (=> (= ($generated@@83 ($generated@@75 $generated@@702 $generated@@698)) ($generated@@83 $generated@@698)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@714 Int) ) (!  (=> true (=> (and (<= ($generated@@84 0) $generated@@714) (< $generated@@714 ($generated@@83 $generated@@698))) (= ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@75 $generated@@702 $generated@@698) $generated@@714))) ($generated@@93 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@698 $generated@@714)))))))
 :pattern ( ($generated@@86 $generated@@2 ($generated@@87 $generated@@698 $generated@@714)))
 :pattern ( ($generated@@86 $generated@@2 ($generated@@87 ($generated@@75 $generated@@702 $generated@@698) $generated@@714)))
)))))))
(let (($generated@@715  (=> (not (= ($generated@@83 $generated@@698) ($generated@@84 0))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= 0 ($generated@@84 0)) (< ($generated@@84 0) ($generated@@83 $generated@@698)))) (=> (and (<= 0 ($generated@@84 0)) (< ($generated@@84 0) ($generated@@83 $generated@@698))) (=> (= $generated@@703 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@698 ($generated@@84 0))))) (=> (and ($generated@@119 ($generated@@8 $generated@@703) $generated@@46 $generated@@700) ($generated@@85 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@698 ($generated@@84 0)))))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 ($generated@@84 1)) (<= ($generated@@84 1) ($generated@@83 $generated@@698)))) (=> (and (<= 0 ($generated@@84 1)) (<= ($generated@@84 1) ($generated@@83 $generated@@698))) (=> (and (= $generated@@704 ($generated@@88 $generated@@698 ($generated@@84 1))) ($generated@@119 $generated@@704 ($generated@@82 $generated@@46) $generated@@700)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@327 $generated@@704) ($generated@@327 $generated@@698))) (=> (< ($generated@@327 $generated@@704) ($generated@@327 $generated@@698)) (=> (and ($generated@@80 ($generated@@88 $generated@@698 ($generated@@84 1))) (= ($generated@@75 $generated@@699 $generated@@698) ($generated@@90 ($generated@@91 ($generated@@89 $generated@@79) ($generated@@92 ($generated@@8 ($generated@@93 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@698 ($generated@@84 0)))))))) ($generated@@75 $generated@@699 ($generated@@88 $generated@@698 ($generated@@84 1)))))) (=> (and (and ($generated@@85 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@698 ($generated@@84 0))))) ($generated@@80 ($generated@@88 $generated@@698 ($generated@@84 1)))) (and ($generated@@81 ($generated@@75 $generated@@699 $generated@@698) ($generated@@82 $generated@@46)) (= (ControlFlow 0 5) 2))) $generated@@713))))))))))))))
(let (($generated@@716  (=> (and (and (= ($generated@@83 $generated@@698) ($generated@@84 0)) (= ($generated@@75 $generated@@699 $generated@@698) ($generated@@302 ($generated@@89 $generated@@79)))) (and ($generated@@81 ($generated@@75 $generated@@699 $generated@@698) ($generated@@82 $generated@@46)) (= (ControlFlow 0 4) 2))) $generated@@713)))
(let (($generated@@717  (=> (= $generated@@705 ($generated@@258 $generated@@706 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 4) $generated@@716) (=> (= (ControlFlow 0 9) 5) $generated@@715)))))
(let (($generated@@718  (=> (= $generated@@707 ($generated@@203 $generated@@706 $generated@@700 $generated@@60 false)) (=> (and (= ($generated@@553 $generated@@699) $generated@@699) (= ($generated@@553 $generated@@702) $generated@@702)) (and (=> (= (ControlFlow 0 18) 16) $generated@@712) (=> (= (ControlFlow 0 18) 9) $generated@@717))))))
(let (($generated@@719  (=> (and (and (and ($generated@@314 $generated@@700) ($generated@@708 $generated@@700)) ($generated@@81 $generated@@698 ($generated@@82 $generated@@46))) (and (= 1 $generated@@74) (= (ControlFlow 0 19) 18))) $generated@@718)))
$generated@@719)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (Int) Int)
(declare-fun $generated@@85 (Int) Bool)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U Int) T@U)
(declare-fun $generated@@88 (T@U Int) T@U)
(declare-fun $generated@@89 (T@T) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (Int) Int)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@119 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (Int) T@U)
(declare-fun $generated@@121 (T@T T@T) T@T)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@T) T@T)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@209 (T@U T@U T@U) T@U)
(declare-fun $generated@@210 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@265 (T@U Int) T@U)
(declare-fun $generated@@273 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Bool)
(declare-fun $generated@@310 (T@U T@U T@U) Bool)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@322 (T@U T@U) Bool)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@351 (T@U) Int)
(declare-fun $generated@@352 (T@T) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@T) T@U)
(declare-fun $generated@@377 (T@T T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@477 (T@U T@U) T@U)
(declare-fun $generated@@485 (T@U T@U) T@U)
(declare-fun $generated@@499 (T@T) T@U)
(declare-fun $generated@@523 () T@T)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@570 () T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@625 (T@U) T@U)
(declare-fun $generated@@629 (T@U) T@U)
(declare-fun $generated@@630 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 11) (forall (($generated@@95 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@95)) 12))) (forall (($generated@@96 T@T) ) (! (= ($generated@@94 ($generated@@78 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@78 $generated@@96))
))) (= ($generated@@1 $generated@@79) 13)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= (type ($generated@@75 $generated@@97 $generated@@98)) ($generated@@78 $generated@@79))
 :pattern ( ($generated@@75 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ) (! (= (type ($generated@@76 $generated@@99)) $generated@@77)
 :pattern ( ($generated@@76 $generated@@99))
))) (forall (($generated@@100 T@U) ) (! (= (type ($generated@@82 $generated@@100)) $generated@@64)
 :pattern ( ($generated@@82 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@U) ) (! (= (type ($generated@@86 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@86 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 Int) ) (! (let (($generated@@105 ($generated@@94 (type $generated@@103))))
(= (type ($generated@@87 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@87 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 Int) ) (! (let (($generated@@108 ($generated@@94 (type $generated@@106))))
(= (type ($generated@@88 $generated@@106 $generated@@107)) ($generated@@78 $generated@@108)))
 :pattern ( ($generated@@88 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@T) ) (! (= (type ($generated@@89 $generated@@109)) ($generated@@78 $generated@@109))
 :pattern ( ($generated@@89 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@94 (type $generated@@110))))
(= (type ($generated@@90 $generated@@110 $generated@@111)) ($generated@@78 $generated@@112)))
 :pattern ( ($generated@@90 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(= (type ($generated@@91 $generated@@113 $generated@@114)) ($generated@@78 $generated@@115)))
 :pattern ( ($generated@@91 $generated@@113 $generated@@114))
))) (forall (($generated@@116 T@U) ) (! (= (type ($generated@@92 $generated@@116)) $generated@@79)
 :pattern ( ($generated@@92 $generated@@116))
))))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and (and (= (type $generated@@117) $generated@@77) (= (type $generated@@118) ($generated@@78 $generated@@79))) (or ($generated@@80 $generated@@118) (and (not (= 1 $generated@@74)) ($generated@@81 $generated@@118 ($generated@@82 $generated@@46))))) (and (=> (not (= ($generated@@83 $generated@@118) ($generated@@84 0))) (and ($generated@@85 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@118 ($generated@@84 0))))) ($generated@@80 ($generated@@88 $generated@@118 ($generated@@84 1))))) (= ($generated@@75 ($generated@@76 $generated@@117) $generated@@118) (ite (= ($generated@@83 $generated@@118) ($generated@@84 0)) ($generated@@89 $generated@@79) ($generated@@90 ($generated@@91 ($generated@@89 $generated@@79) ($generated@@92 ($generated@@8 ($generated@@93 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@118 ($generated@@84 0)))))))) ($generated@@75 $generated@@117 ($generated@@88 $generated@@118 ($generated@@84 1))))))))
 :pattern ( ($generated@@75 ($generated@@76 $generated@@117) $generated@@118))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (= ($generated@@1 ($generated@@121 $generated@@130 $generated@@131)) 14)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (! (= ($generated@@124 ($generated@@121 $generated@@132 $generated@@133)) $generated@@132)
 :pattern ( ($generated@@121 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ) (! (= ($generated@@125 ($generated@@121 $generated@@134 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@121 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@125 (type $generated@@136))))
(= (type ($generated@@126 $generated@@136 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@126 $generated@@136 $generated@@137))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 (type $generated@@141)))
(let (($generated@@143 (type $generated@@140)))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) ($generated@@121 $generated@@143 $generated@@142))))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@125 (type $generated@@144))))
 (=> (= (type $generated@@146) $generated@@147) (= ($generated@@126 ($generated@@127 $generated@@144 $generated@@145 $generated@@146) $generated@@145) $generated@@146)))
 :weight 0
))) (and (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@126 ($generated@@127 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@126 $generated@@149 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or true (= ($generated@@126 ($generated@@127 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@126 $generated@@153 $generated@@155)))
 :weight 0
)))) (= ($generated@@1 $generated@@122) 15)) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@67 (type $generated@@157))))
(= (type ($generated@@128 $generated@@156 $generated@@157)) $generated@@158))
 :pattern ( ($generated@@128 $generated@@156 $generated@@157))
))) (= ($generated@@1 $generated@@123) 16)) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@129 $generated@@159 $generated@@160 $generated@@161)) $generated@@123)
 :pattern ( ($generated@@129 $generated@@159 $generated@@160 $generated@@161))
))) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@67 (type $generated@@163))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@128 ($generated@@129 $generated@@162 $generated@@163 $generated@@164) $generated@@163) $generated@@164)))
 :weight 0
))) (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@168 $generated@@169) (= ($generated@@128 ($generated@@129 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@128 $generated@@167 $generated@@169)))
 :weight 0
)) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or true (= ($generated@@128 ($generated@@129 $generated@@171 $generated@@172 $generated@@170) $generated@@173) ($generated@@128 $generated@@171 $generated@@173)))
 :weight 0
)))) (forall (($generated@@174 Int) ) (! (= (type ($generated@@120 $generated@@174)) $generated@@64)
 :pattern ( ($generated@@120 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@175) $generated@@2) (= (type $generated@@176) ($generated@@121 $generated@@122 $generated@@123))) ($generated@@119 $generated@@175 ($generated@@120 0) $generated@@176))
 :pattern ( ($generated@@119 $generated@@175 ($generated@@120 0) $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@179)))
 (=> (and (= (type $generated@@178) ($generated@@78 $generated@@181)) (= (type $generated@@180) $generated@@181)) (= ($generated@@177 ($generated@@91 $generated@@178 $generated@@179) $generated@@180)  (or (= $generated@@179 $generated@@180) ($generated@@177 $generated@@178 $generated@@180)))))
 :pattern ( ($generated@@177 ($generated@@91 $generated@@178 $generated@@179) $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@2) ($generated@@81 $generated@@182 ($generated@@120 0)))
 :pattern ( ($generated@@81 $generated@@182 ($generated@@120 0)))
)))
(assert  (and (= ($generated@@1 $generated@@185) 17) (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@64)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@64) (= (type $generated@@189) $generated@@64)) (= (type $generated@@190) $generated@@185)) ($generated@@81 $generated@@190 ($generated@@184 $generated@@188 $generated@@189))) ($generated@@183 $generated@@190))
 :pattern ( ($generated@@183 $generated@@190) ($generated@@81 $generated@@190 ($generated@@184 $generated@@188 $generated@@189)))
)))
(assert  (and (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@79)
 :pattern ( ($generated@@192 $generated@@194))
)) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@79)
 :pattern ( ($generated@@193 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) $generated@@185) (= (type $generated@@197) $generated@@185)) true) (= ($generated@@191 $generated@@196 $generated@@197)  (and (= ($generated@@192 $generated@@196) ($generated@@192 $generated@@197)) (= ($generated@@193 $generated@@196) ($generated@@193 $generated@@197)))))
 :pattern ( ($generated@@191 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
 (not ($generated@@177 ($generated@@89 $generated@@199) $generated@@198)))
 :pattern ( (let (($generated@@199 (type $generated@@198)))
($generated@@177 ($generated@@89 $generated@@199) $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Int) ) (! (let (($generated@@203 (type $generated@@201)))
 (=> (= (type $generated@@200) ($generated@@78 $generated@@203)) (=> (and (<= 0 $generated@@202) (<= $generated@@202 ($generated@@83 $generated@@200))) (= ($generated@@88 ($generated@@91 $generated@@200 $generated@@201) $generated@@202) ($generated@@91 ($generated@@88 $generated@@200 $generated@@202) $generated@@201)))))
 :pattern ( ($generated@@88 ($generated@@91 $generated@@200 $generated@@201) $generated@@202))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@204 $generated@@206)) $generated@@64)
 :pattern ( ($generated@@204 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@207) ($generated@@121 $generated@@79 $generated@@2)) (= (type $generated@@208) $generated@@64)) ($generated@@81 $generated@@207 ($generated@@204 $generated@@208))) ($generated@@205 $generated@@207))
 :pattern ( ($generated@@81 $generated@@207 ($generated@@204 $generated@@208)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (= ($generated@@1 ($generated@@211 $generated@@215 $generated@@216)) 18)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@211 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@213 ($generated@@211 $generated@@219 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@211 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@213 (type $generated@@221))))
(= (type ($generated@@209 $generated@@221 $generated@@222 $generated@@223)) $generated@@224))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222 $generated@@223))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(let (($generated@@230 (type $generated@@226)))
(= (type ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@211 $generated@@230 $generated@@229))))
 :pattern ( ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@213 (type $generated@@231))))
 (=> (= (type $generated@@234) $generated@@235) (= ($generated@@209 ($generated@@214 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@232 $generated@@233) $generated@@234)))
 :weight 0
))) (and (and (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@238 $generated@@240) (= ($generated@@209 ($generated@@214 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@209 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
)) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or (= $generated@@245 $generated@@247) (= ($generated@@209 ($generated@@214 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@209 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (or true (= ($generated@@209 ($generated@@214 $generated@@249 $generated@@250 $generated@@251 $generated@@248) $generated@@252 $generated@@253) ($generated@@209 $generated@@249 $generated@@252 $generated@@253)))
 :weight 0
)))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ) (! (= (type ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@211 $generated@@122 $generated@@4))
 :pattern ( ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@67 (type $generated@@263))))
 (=> (and (and (and (and (= (type $generated@@258) $generated@@122) (= (type $generated@@259) ($generated@@121 $generated@@122 $generated@@123))) (= (type $generated@@260) ($generated@@66 $generated@@4))) (= (type $generated@@262) $generated@@122)) (= (type $generated@@263) ($generated@@66 $generated@@264))) (= ($generated@@0 ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))  (=> (and (not (= $generated@@262 $generated@@258)) ($generated@@0 ($generated@@128 ($generated@@126 $generated@@259 $generated@@262) $generated@@260))) $generated@@261))))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 Int) ) (! (let (($generated@@268 ($generated@@94 (type $generated@@266))))
(= (type ($generated@@265 $generated@@266 $generated@@267)) ($generated@@78 $generated@@268)))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Int) ) (! (let (($generated@@272 ($generated@@94 (type $generated@@269))))
 (=> (and (and (= (type $generated@@269) ($generated@@78 $generated@@272)) (= (type $generated@@270) ($generated@@78 $generated@@272))) (= $generated@@271 ($generated@@83 $generated@@269))) (and (= ($generated@@265 ($generated@@90 $generated@@269 $generated@@270) $generated@@271) $generated@@269) (= ($generated@@88 ($generated@@90 $generated@@269 $generated@@270) $generated@@271) $generated@@270))))
 :pattern ( ($generated@@265 ($generated@@90 $generated@@269 $generated@@270) $generated@@271))
 :pattern ( ($generated@@88 ($generated@@90 $generated@@269 $generated@@270) $generated@@271))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (! (= (type ($generated@@273 $generated@@275 $generated@@276)) $generated@@185)
 :pattern ( ($generated@@273 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) $generated@@64) (= (type $generated@@278) $generated@@64)) (= (type $generated@@279) $generated@@79)) (= (type $generated@@280) $generated@@79)) (= ($generated@@81 ($generated@@273 $generated@@279 $generated@@280) ($generated@@184 $generated@@277 $generated@@278))  (and ($generated@@274 $generated@@279 $generated@@277) ($generated@@274 $generated@@280 $generated@@278))))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@279 $generated@@280) ($generated@@184 $generated@@277 $generated@@278)))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@185) (= (type $generated@@282) $generated@@185)) (= ($generated@@191 $generated@@281 $generated@@282) (= $generated@@281 $generated@@282)))
 :pattern ( ($generated@@191 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 Int) ) (! (let (($generated@@285 ($generated@@94 (type $generated@@283))))
 (=> (and (= (type $generated@@283) ($generated@@78 $generated@@285)) (= $generated@@284 0)) (= ($generated@@88 $generated@@283 $generated@@284) $generated@@283)))
 :pattern ( ($generated@@88 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@64)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) ($generated@@121 $generated@@79 $generated@@4)) (= (type $generated@@289) $generated@@64)) (= ($generated@@81 $generated@@288 ($generated@@286 $generated@@289)) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@79) ($generated@@0 ($generated@@126 $generated@@288 $generated@@290))) ($generated@@274 $generated@@290 $generated@@289))
 :pattern ( ($generated@@126 $generated@@288 $generated@@290))
))))
 :pattern ( ($generated@@81 $generated@@288 ($generated@@286 $generated@@289)))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@64)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) ($generated@@121 $generated@@79 $generated@@4)) (= (type $generated@@294) $generated@@64)) (= ($generated@@81 $generated@@293 ($generated@@291 $generated@@294)) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@79) ($generated@@0 ($generated@@126 $generated@@293 $generated@@295))) ($generated@@274 $generated@@295 $generated@@294))
 :pattern ( ($generated@@126 $generated@@293 $generated@@295))
))))
 :pattern ( ($generated@@81 $generated@@293 ($generated@@291 $generated@@294)))
)))
(assert (forall (($generated@@296 Int) ) (! (= ($generated@@84 $generated@@296) $generated@@296)
 :pattern ( ($generated@@84 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 (type $generated@@298)))
(= (type ($generated@@297 $generated@@298)) $generated@@299))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@297 $generated@@300) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (= (type $generated@@301) ($generated@@78 $generated@@79)) (= (type $generated@@302) $generated@@79)) (= (type $generated@@303) $generated@@64)) (and ($generated@@81 $generated@@301 ($generated@@82 $generated@@303)) ($generated@@274 $generated@@302 $generated@@303))) ($generated@@81 ($generated@@91 $generated@@301 $generated@@302) ($generated@@82 $generated@@303)))
 :pattern ( ($generated@@81 ($generated@@91 $generated@@301 $generated@@302) ($generated@@82 $generated@@303)))
)))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@304 Int) ) (!  (=> (or ($generated@@85 $generated@@304) (not (= 0 $generated@@74))) true)
 :pattern ( ($generated@@93 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 Int) ($generated@@307 Int) ) (! (let (($generated@@308 ($generated@@94 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@78 $generated@@308)) (=> (and (and (<= 0 $generated@@307) (< $generated@@307 $generated@@306)) (< $generated@@307 ($generated@@83 $generated@@305))) (= ($generated@@87 ($generated@@265 $generated@@305 $generated@@306) $generated@@307) ($generated@@87 $generated@@305 $generated@@307)))))
 :weight 25
 :pattern ( ($generated@@87 ($generated@@265 $generated@@305 $generated@@306) $generated@@307))
 :pattern ( ($generated@@87 $generated@@305 $generated@@307) ($generated@@265 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@311) $generated@@64) (= (type $generated@@312) $generated@@64)) (= (type $generated@@313) $generated@@79)) (= (type $generated@@314) $generated@@79)) (= (type $generated@@315) ($generated@@121 $generated@@122 $generated@@123))) ($generated@@309 $generated@@315)) (= ($generated@@119 ($generated@@273 $generated@@313 $generated@@314) ($generated@@184 $generated@@311 $generated@@312) $generated@@315)  (and ($generated@@310 $generated@@313 $generated@@311 $generated@@315) ($generated@@310 $generated@@314 $generated@@312 $generated@@315))))
 :pattern ( ($generated@@119 ($generated@@273 $generated@@313 $generated@@314) ($generated@@184 $generated@@311 $generated@@312) $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 Int) ) (! (let (($generated@@318 ($generated@@94 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@78 $generated@@318)) (=> (and (<= 0 $generated@@317) (<= $generated@@317 ($generated@@83 $generated@@316))) (= ($generated@@83 ($generated@@88 $generated@@316 $generated@@317)) (- ($generated@@83 $generated@@316) $generated@@317)))))
 :pattern ( ($generated@@83 ($generated@@88 $generated@@316 $generated@@317)))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@68)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@185) (= ($generated@@183 $generated@@321) (= ($generated@@319 $generated@@321) $generated@@61)))
 :pattern ( ($generated@@183 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@94 (type $generated@@323))))
 (=> (and (= (type $generated@@323) ($generated@@78 $generated@@325)) (= (type $generated@@324) ($generated@@78 $generated@@325))) (= ($generated@@322 $generated@@323 $generated@@324)  (and (= ($generated@@83 $generated@@323) ($generated@@83 $generated@@324)) (forall (($generated@@326 Int) ) (!  (=> (and (<= 0 $generated@@326) (< $generated@@326 ($generated@@83 $generated@@323))) (= ($generated@@87 $generated@@323 $generated@@326) ($generated@@87 $generated@@324 $generated@@326)))
 :pattern ( ($generated@@87 $generated@@323 $generated@@326))
 :pattern ( ($generated@@87 $generated@@324 $generated@@326))
))))))
 :pattern ( ($generated@@322 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@94 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@78 $generated@@330)) (=> (and (<= 0 $generated@@329) (< $generated@@329 ($generated@@83 $generated@@328))) (< ($generated@@327 ($generated@@265 $generated@@328 $generated@@329)) ($generated@@327 $generated@@328)))))
 :pattern ( ($generated@@327 ($generated@@265 $generated@@328 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@185) ($generated@@183 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@79) (= (type $generated@@333) $generated@@79)) (= $generated@@331 ($generated@@273 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@183 $generated@@331))
)))
(assert (forall (($generated@@334 T@T) ) (! (= ($generated@@83 ($generated@@89 $generated@@334)) 0)
 :pattern ( ($generated@@89 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 Int) ) (! (let (($generated@@337 ($generated@@94 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@78 $generated@@337)) (=> (and (< 0 $generated@@336) (<= $generated@@336 ($generated@@83 $generated@@335))) (< ($generated@@327 ($generated@@88 $generated@@335 $generated@@336)) ($generated@@327 $generated@@335)))))
 :pattern ( ($generated@@327 ($generated@@88 $generated@@335 $generated@@336)))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@338) $generated@@77) (= (type $generated@@339) ($generated@@78 $generated@@79))) (or ($generated@@80 $generated@@339) (and (not (= 1 $generated@@74)) ($generated@@81 $generated@@339 ($generated@@82 $generated@@46))))) (and (and (= ($generated@@83 ($generated@@75 $generated@@338 $generated@@339)) ($generated@@83 $generated@@339)) (forall (($generated@@340 Int) ) (!  (=> true (=> (and (<= ($generated@@84 0) $generated@@340) (< $generated@@340 ($generated@@83 $generated@@339))) (= ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@75 $generated@@338 $generated@@339) $generated@@340))) ($generated@@93 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@339 $generated@@340)))))))
 :pattern ( ($generated@@86 $generated@@2 ($generated@@87 $generated@@339 $generated@@340)))
 :pattern ( ($generated@@86 $generated@@2 ($generated@@87 ($generated@@75 $generated@@338 $generated@@339) $generated@@340)))
))) ($generated@@81 ($generated@@75 $generated@@338 $generated@@339) ($generated@@82 $generated@@46))))
 :pattern ( ($generated@@75 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (! (let (($generated@@343 (type $generated@@342)))
 (=> (= (type $generated@@341) ($generated@@78 $generated@@343)) (= ($generated@@83 ($generated@@91 $generated@@341 $generated@@342)) (+ 1 ($generated@@83 $generated@@341)))))
 :pattern ( ($generated@@91 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@64) (= (type $generated@@346) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@310 ($generated@@92 $generated@@344) $generated@@345 $generated@@346) ($generated@@119 $generated@@344 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@310 ($generated@@92 $generated@@344) $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 Int) ($generated@@349 Int) ) (! (let (($generated@@350 ($generated@@94 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@78 $generated@@350)) (=> (and (and (<= 0 $generated@@348) (<= 0 $generated@@349)) (< $generated@@349 (- ($generated@@83 $generated@@347) $generated@@348))) (= ($generated@@87 ($generated@@88 $generated@@347 $generated@@348) $generated@@349) ($generated@@87 $generated@@347 (+ $generated@@349 $generated@@348))))))
 :weight 25
 :pattern ( ($generated@@87 ($generated@@88 $generated@@347 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ) (! (= (type ($generated@@352 $generated@@353)) ($generated@@121 $generated@@353 $generated@@2))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@124 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@121 $generated@@355 $generated@@2)) (and (= (= ($generated@@351 $generated@@354) 0) (= $generated@@354 ($generated@@352 $generated@@355))) (=> (not (= ($generated@@351 $generated@@354) 0)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) (< 0 ($generated ($generated@@126 $generated@@354 $generated@@356))))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert  (and (and (and (and (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (= ($generated@@1 ($generated@@359 $generated@@362 $generated@@363)) 19)) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@359 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@361 ($generated@@359 $generated@@366 $generated@@367)) $generated@@367)
 :pattern ( ($generated@@359 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@360 (type $generated@@368))))
(= (type ($generated@@357 $generated@@368)) ($generated@@121 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@368))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= (type ($generated@@358 $generated@@370 $generated@@371)) ($generated@@359 $generated@@370 $generated@@371))
 :pattern ( ($generated@@358 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@T) ) (! (let (($generated@@374 (type $generated@@372)))
 (not ($generated@@0 ($generated@@126 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372))))
 :pattern ( (let (($generated@@374 (type $generated@@372)))
($generated@@126 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372)))
)))
(assert  (and (and (and (and (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (= ($generated@@1 ($generated@@377 $generated@@380 $generated@@381)) 20)) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@378 ($generated@@377 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@377 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@379 ($generated@@377 $generated@@384 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@377 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@378 (type $generated@@386))))
(= (type ($generated@@375 $generated@@386)) ($generated@@121 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@386))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= (type ($generated@@376 $generated@@388 $generated@@389)) ($generated@@377 $generated@@388 $generated@@389))
 :pattern ( ($generated@@376 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@T) ) (! (let (($generated@@392 (type $generated@@390)))
 (not ($generated@@0 ($generated@@126 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390))))
 :pattern ( (let (($generated@@392 (type $generated@@390)))
($generated@@126 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@94 (type $generated@@393))))
 (=> (and (= (type $generated@@393) ($generated@@78 $generated@@395)) (= (type $generated@@394) ($generated@@78 $generated@@395))) (= ($generated@@83 ($generated@@90 $generated@@393 $generated@@394)) (+ ($generated@@83 $generated@@393) ($generated@@83 $generated@@394)))))
 :pattern ( ($generated@@83 ($generated@@90 $generated@@393 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@124 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@121 $generated@@397 $generated@@2)) (= ($generated@@205 $generated@@396) (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@397) (and (<= 0 ($generated ($generated@@126 $generated@@396 $generated@@398))) (<= ($generated ($generated@@126 $generated@@396 $generated@@398)) ($generated@@351 $generated@@396))))
 :pattern ( ($generated@@126 $generated@@396 $generated@@398))
)))))
 :pattern ( ($generated@@205 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 Int) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
 (=> (= (type $generated@@399) ($generated@@78 $generated@@402)) (and (=> (= $generated@@400 ($generated@@83 $generated@@399)) (= ($generated@@87 ($generated@@91 $generated@@399 $generated@@401) $generated@@400) $generated@@401)) (=> (not (= $generated@@400 ($generated@@83 $generated@@399))) (= ($generated@@87 ($generated@@91 $generated@@399 $generated@@401) $generated@@400) ($generated@@87 $generated@@399 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@91 $generated@@399 $generated@@401) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@361 (type $generated@@403))))
(let (($generated@@405 ($generated@@360 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@359 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@358 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) ($generated@@0 ($generated@@126 ($generated@@357 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@357 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@361 (type $generated@@408))))
(= (type ($generated@@407 $generated@@408)) ($generated@@121 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@361 (type $generated@@410))))
(let (($generated@@412 ($generated@@360 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@359 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@358 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@411) ($generated@@0 ($generated@@126 ($generated@@407 $generated@@410) $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@379 (type $generated@@414))))
(let (($generated@@416 ($generated@@378 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@377 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@376 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) ($generated@@0 ($generated@@126 ($generated@@375 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@375 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@379 (type $generated@@419))))
(= (type ($generated@@418 $generated@@419)) ($generated@@121 $generated@@420 $generated@@4)))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@379 (type $generated@@421))))
(let (($generated@@423 ($generated@@378 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@377 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@376 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@422) ($generated@@0 ($generated@@126 ($generated@@418 $generated@@421) $generated@@424)))
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@418 $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@121 $generated@@79 $generated@@2)) (= (type $generated@@426) $generated@@64)) (= ($generated@@81 $generated@@425 ($generated@@204 $generated@@426)) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@79) (< 0 ($generated ($generated@@126 $generated@@425 $generated@@427)))) ($generated@@274 $generated@@427 $generated@@426))
 :pattern ( ($generated@@126 $generated@@425 $generated@@427))
))))
 :pattern ( ($generated@@81 $generated@@425 ($generated@@204 $generated@@426)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
 (=> (and (= (type $generated@@428) ($generated@@78 $generated@@431)) (= (type $generated@@429) ($generated@@78 $generated@@431))) (= ($generated@@177 ($generated@@90 $generated@@428 $generated@@429) $generated@@430)  (or ($generated@@177 $generated@@428 $generated@@430) ($generated@@177 $generated@@429 $generated@@430)))))
 :pattern ( ($generated@@177 ($generated@@90 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 Int) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
 (=> (= (type $generated@@432) ($generated@@78 $generated@@435)) (= ($generated@@177 ($generated@@265 $generated@@432 $generated@@433) $generated@@434) (exists (($generated@@436 Int) ) (!  (and (and (and (<= 0 $generated@@436) (< $generated@@436 $generated@@433)) (< $generated@@436 ($generated@@83 $generated@@432))) (= ($generated@@87 $generated@@432 $generated@@436) $generated@@434))
 :pattern ( ($generated@@87 $generated@@432 $generated@@436))
)))))
 :pattern ( ($generated@@177 ($generated@@265 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
 (=> (= (type $generated@@437) ($generated@@78 $generated@@439)) (= ($generated@@177 $generated@@437 $generated@@438) (exists (($generated@@440 Int) ) (!  (and (and (<= 0 $generated@@440) (< $generated@@440 ($generated@@83 $generated@@437))) (= ($generated@@87 $generated@@437 $generated@@440) $generated@@438))
 :pattern ( ($generated@@87 $generated@@437 $generated@@440))
)))))
 :pattern ( ($generated@@177 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (= (type $generated@@441) ($generated@@121 $generated@@79 $generated@@4)) (= (type $generated@@442) $generated@@64)) (= (type $generated@@443) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@441 ($generated@@286 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@79) ($generated@@0 ($generated@@126 $generated@@441 $generated@@444))) ($generated@@310 $generated@@444 $generated@@442 $generated@@443))
 :pattern ( ($generated@@126 $generated@@441 $generated@@444))
))))
 :pattern ( ($generated@@119 $generated@@441 ($generated@@286 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@445) ($generated@@121 $generated@@79 $generated@@4)) (= (type $generated@@446) $generated@@64)) (= (type $generated@@447) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@445 ($generated@@291 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@79) ($generated@@0 ($generated@@126 $generated@@445 $generated@@448))) ($generated@@310 $generated@@448 $generated@@446 $generated@@447))
 :pattern ( ($generated@@126 $generated@@445 $generated@@448))
))))
 :pattern ( ($generated@@119 $generated@@445 ($generated@@291 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 (type $generated@@449)))
(= ($generated ($generated@@126 ($generated@@352 $generated@@450) $generated@@449)) 0))
 :pattern ( (let (($generated@@450 (type $generated@@449)))
($generated@@126 ($generated@@352 $generated@@450) $generated@@449)))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) ($generated@@121 $generated@@79 $generated@@4))
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@361 (type $generated@@454))))
(let (($generated@@456 ($generated@@360 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454)) ($generated@@121 $generated@@456 $generated@@455))))
 :pattern ( ($generated@@452 $generated@@454))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@359 $generated@@79 $generated@@79)) (= (type $generated@@458) $generated@@79)) (= ($generated@@0 ($generated@@126 ($generated@@451 $generated@@457) $generated@@458))  (and ($generated@@0 ($generated@@126 ($generated@@357 $generated@@457) ($generated@@192 ($generated@@86 $generated@@185 $generated@@458)))) (= ($generated@@126 ($generated@@452 $generated@@457) ($generated@@192 ($generated@@86 $generated@@185 $generated@@458))) ($generated@@193 ($generated@@86 $generated@@185 $generated@@458))))))
 :pattern ( ($generated@@126 ($generated@@451 $generated@@457) $generated@@458))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) ($generated@@121 $generated@@79 $generated@@4))
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@379 (type $generated@@462))))
(let (($generated@@464 ($generated@@378 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462)) ($generated@@121 $generated@@464 $generated@@463))))
 :pattern ( ($generated@@460 $generated@@462))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@377 $generated@@79 $generated@@79)) (= (type $generated@@466) $generated@@79)) (= ($generated@@0 ($generated@@126 ($generated@@459 $generated@@465) $generated@@466))  (and ($generated@@0 ($generated@@126 ($generated@@375 $generated@@465) ($generated@@192 ($generated@@86 $generated@@185 $generated@@466)))) (= ($generated@@126 ($generated@@460 $generated@@465) ($generated@@192 ($generated@@86 $generated@@185 $generated@@466))) ($generated@@193 ($generated@@86 $generated@@185 $generated@@466))))))
 :pattern ( ($generated@@126 ($generated@@459 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (let (($generated@@469 (type $generated@@468)))
(let (($generated@@470 ($generated@@360 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@359 $generated@@470 $generated@@469)) (= ($generated@@0 ($generated@@126 ($generated@@407 $generated@@467) $generated@@468)) (exists (($generated@@471 T@U) ) (!  (and (= (type $generated@@471) $generated@@470) (and ($generated@@0 ($generated@@126 ($generated@@357 $generated@@467) $generated@@471)) (= $generated@@468 ($generated@@126 ($generated@@452 $generated@@467) $generated@@471))))
 :pattern ( ($generated@@126 ($generated@@357 $generated@@467) $generated@@471))
 :pattern ( ($generated@@126 ($generated@@452 $generated@@467) $generated@@471))
))))))
 :pattern ( ($generated@@126 ($generated@@407 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 (type $generated@@473)))
(let (($generated@@475 ($generated@@378 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@377 $generated@@475 $generated@@474)) (= ($generated@@0 ($generated@@126 ($generated@@418 $generated@@472) $generated@@473)) (exists (($generated@@476 T@U) ) (!  (and (= (type $generated@@476) $generated@@475) (and ($generated@@0 ($generated@@126 ($generated@@375 $generated@@472) $generated@@476)) (= $generated@@473 ($generated@@126 ($generated@@460 $generated@@472) $generated@@476))))
 :pattern ( ($generated@@126 ($generated@@375 $generated@@472) $generated@@476))
 :pattern ( ($generated@@126 ($generated@@460 $generated@@472) $generated@@476))
))))))
 :pattern ( ($generated@@126 ($generated@@418 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (and (= (type $generated@@480) ($generated@@359 $generated@@79 $generated@@79)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@79) ($generated@@0 ($generated@@126 ($generated@@357 $generated@@480) $generated@@484))) (and ($generated@@310 ($generated@@126 ($generated@@452 $generated@@480) $generated@@484) $generated@@482 $generated@@483) ($generated@@310 $generated@@484 $generated@@481 $generated@@483)))
 :pattern ( ($generated@@126 ($generated@@452 $generated@@480) $generated@@484))
 :pattern ( ($generated@@126 ($generated@@357 $generated@@480) $generated@@484))
))))
 :pattern ( ($generated@@119 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (and (= (type $generated@@488) ($generated@@377 $generated@@79 $generated@@79)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@79) ($generated@@0 ($generated@@126 ($generated@@375 $generated@@488) $generated@@492))) (and ($generated@@310 ($generated@@126 ($generated@@460 $generated@@488) $generated@@492) $generated@@490 $generated@@491) ($generated@@310 $generated@@492 $generated@@489 $generated@@491)))
 :pattern ( ($generated@@126 ($generated@@460 $generated@@488) $generated@@492))
 :pattern ( ($generated@@126 ($generated@@375 $generated@@488) $generated@@492))
))))
 :pattern ( ($generated@@119 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@94 (type $generated@@493))))
 (=> (and (and (= (type $generated@@493) ($generated@@78 $generated@@495)) (= (type $generated@@494) ($generated@@78 $generated@@495))) ($generated@@322 $generated@@493 $generated@@494)) (= $generated@@493 $generated@@494)))
 :pattern ( ($generated@@322 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@94 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@78 $generated@@498)) (=> (and (<= 0 $generated@@497) (<= $generated@@497 ($generated@@83 $generated@@496))) (= ($generated@@83 ($generated@@265 $generated@@496 $generated@@497)) $generated@@497))))
 :pattern ( ($generated@@83 ($generated@@265 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@500 T@T) ) (! (= (type ($generated@@499 $generated@@500)) ($generated@@121 $generated@@500 $generated@@4))
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@379 (type $generated@@501))))
(let (($generated@@503 ($generated@@378 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@377 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@376 $generated@@503 $generated@@502)) (= ($generated@@375 $generated@@501) ($generated@@499 $generated@@503))))))
 :pattern ( ($generated@@375 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@379 (type $generated@@504))))
(let (($generated@@506 ($generated@@378 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@377 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@376 $generated@@506 $generated@@505)) (= ($generated@@418 $generated@@504) ($generated@@499 $generated@@505))))))
 :pattern ( ($generated@@418 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@379 (type $generated@@507))))
(let (($generated@@509 ($generated@@378 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@377 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@376 $generated@@509 $generated@@508)) (= ($generated@@459 $generated@@507) ($generated@@499 $generated@@79))))))
 :pattern ( ($generated@@459 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@361 (type $generated@@510))))
(let (($generated@@512 ($generated@@360 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@359 $generated@@512 $generated@@511)) (or (= $generated@@510 ($generated@@358 $generated@@512 $generated@@511)) (exists (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (and (and (= (type $generated@@513) $generated@@79) (= (type $generated@@514) $generated@@79)) ($generated@@0 ($generated@@126 ($generated@@451 $generated@@510) ($generated@@92 ($generated@@273 $generated@@513 $generated@@514)))))
 :no-pattern (type $generated@@513)
 :no-pattern (type $generated@@514)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
))))))
 :pattern ( ($generated@@451 $generated@@510))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@379 (type $generated@@515))))
(let (($generated@@517 ($generated@@378 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@377 $generated@@517 $generated@@516)) (or (= $generated@@515 ($generated@@376 $generated@@517 $generated@@516)) (exists (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (and (and (= (type $generated@@518) $generated@@79) (= (type $generated@@519) $generated@@79)) ($generated@@0 ($generated@@126 ($generated@@459 $generated@@515) ($generated@@92 ($generated@@273 $generated@@518 $generated@@519)))))
 :no-pattern (type $generated@@518)
 :no-pattern (type $generated@@519)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
))))))
 :pattern ( ($generated@@459 $generated@@515))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@79) ($generated@@274 $generated@@520 $generated@@46)) (and (= ($generated@@92 ($generated@@86 $generated@@2 $generated@@520)) $generated@@520) ($generated@@81 ($generated@@86 $generated@@2 $generated@@520) $generated@@46)))
 :pattern ( ($generated@@274 $generated@@520 $generated@@46))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@79) ($generated@@274 $generated@@521 $generated@@47)) (and (= ($generated@@92 ($generated@@86 $generated@@3 $generated@@521)) $generated@@521) ($generated@@81 ($generated@@86 $generated@@3 $generated@@521) $generated@@47)))
 :pattern ( ($generated@@274 $generated@@521 $generated@@47))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@79) ($generated@@274 $generated@@522 $generated@@44)) (and (= ($generated@@92 ($generated@@86 $generated@@4 $generated@@522)) $generated@@522) ($generated@@81 ($generated@@86 $generated@@4 $generated@@522) $generated@@44)))
 :pattern ( ($generated@@274 $generated@@522 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@523) 21))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@79) ($generated@@274 $generated@@524 $generated@@45)) (and (= ($generated@@92 ($generated@@86 $generated@@523 $generated@@524)) $generated@@524) ($generated@@81 ($generated@@86 $generated@@523 $generated@@524) $generated@@45)))
 :pattern ( ($generated@@274 $generated@@524 $generated@@45))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@274 ($generated@@92 $generated@@525) $generated@@526) ($generated@@81 $generated@@525 $generated@@526)))
 :pattern ( ($generated@@274 ($generated@@92 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@124 (type $generated@@527))))
 (=> (= (type $generated@@527) ($generated@@121 $generated@@528 $generated@@2)) (<= 0 ($generated@@351 $generated@@527))))
 :pattern ( ($generated@@351 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@94 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@78 $generated@@530)) (<= 0 ($generated@@83 $generated@@529))))
 :pattern ( ($generated@@83 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 Int) ($generated@@533 Int) ) (! (let (($generated@@534 ($generated@@94 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@78 $generated@@534)) (=> (and (and (<= 0 $generated@@532) (< $generated@@532 $generated@@533)) (<= $generated@@533 ($generated@@83 $generated@@531))) (< ($generated@@327 ($generated@@90 ($generated@@265 $generated@@531 $generated@@532) ($generated@@88 $generated@@531 $generated@@533))) ($generated@@327 $generated@@531)))))
 :pattern ( ($generated@@327 ($generated@@90 ($generated@@265 $generated@@531 $generated@@532) ($generated@@88 $generated@@531 $generated@@533))))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@64) (= (type $generated@@538) $generated@@64)) (= ($generated@@535 ($generated@@477 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@477 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (= ($generated@@539 ($generated@@477 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@477 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (= ($generated@@72 ($generated@@477 $generated@@543 $generated@@544)) $generated@@58))
 :pattern ( ($generated@@477 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@64)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (= ($generated@@545 ($generated@@485 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@485 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@64)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@64) (= (type $generated@@552) $generated@@64)) (= ($generated@@549 ($generated@@485 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@485 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@64) (= (type $generated@@554) $generated@@64)) (= ($generated@@72 ($generated@@485 $generated@@553 $generated@@554)) $generated@@59))
 :pattern ( ($generated@@485 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@79) (= (type $generated@@556) $generated@@79)) (= ($generated@@319 ($generated@@273 $generated@@555 $generated@@556)) $generated@@61))
 :pattern ( ($generated@@273 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@64) (= (type $generated@@560) $generated@@64)) (= ($generated@@557 ($generated@@184 $generated@@559 $generated@@560)) $generated@@559))
 :pattern ( ($generated@@184 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@64)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@64) (= (type $generated@@564) $generated@@64)) (= ($generated@@561 ($generated@@184 $generated@@563 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@184 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@79) (= (type $generated@@566) $generated@@79)) (= ($generated@@192 ($generated@@273 $generated@@565 $generated@@566)) $generated@@565))
 :pattern ( ($generated@@273 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@79) (= (type $generated@@568) $generated@@79)) (= ($generated@@193 ($generated@@273 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@273 $generated@@567 $generated@@568))
)))
(assert  (and (forall (($generated@@571 T@U) ) (! (= (type ($generated@@569 $generated@@571)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@571))
)) (= (type $generated@@570) $generated@@77)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@77) (= (type $generated@@573) ($generated@@78 $generated@@79))) (= ($generated@@75 $generated@@572 $generated@@573) ($generated@@75 $generated@@570 $generated@@573)))
 :pattern ( ($generated@@75 ($generated@@569 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@78 $generated@@79)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@574 ($generated@@82 $generated@@575) $generated@@576) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@83 $generated@@574))) ($generated@@310 ($generated@@87 $generated@@574 $generated@@577) $generated@@575 $generated@@576))
 :pattern ( ($generated@@87 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@119 $generated@@574 ($generated@@82 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@120 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@120 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@286 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@286 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@286 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@286 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@64)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@584 ($generated@@291 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@291 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@72 ($generated@@291 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@291 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@64)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@588 ($generated@@204 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@204 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@72 ($generated@@204 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@204 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@64)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@592 ($generated@@82 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@82 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@72 ($generated@@82 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@82 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(= ($generated@@86 $generated@@597 ($generated@@92 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@92 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@359 $generated@@79 $generated@@79)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) (= ($generated@@81 $generated@@598 ($generated@@477 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@79) ($generated@@0 ($generated@@126 ($generated@@357 $generated@@598) $generated@@601))) (and ($generated@@274 ($generated@@126 ($generated@@452 $generated@@598) $generated@@601) $generated@@600) ($generated@@274 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@126 ($generated@@452 $generated@@598) $generated@@601))
 :pattern ( ($generated@@126 ($generated@@357 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@81 $generated@@598 ($generated@@477 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@377 $generated@@79 $generated@@79)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) (= ($generated@@81 $generated@@602 ($generated@@485 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@79) ($generated@@0 ($generated@@126 ($generated@@375 $generated@@602) $generated@@605))) (and ($generated@@274 ($generated@@126 ($generated@@460 $generated@@602) $generated@@605) $generated@@604) ($generated@@274 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@126 ($generated@@460 $generated@@602) $generated@@605))
 :pattern ( ($generated@@126 ($generated@@375 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@81 $generated@@602 ($generated@@485 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@79) (= (type $generated@@609) $generated@@79)) (< ($generated@@606 $generated@@608) ($generated@@607 ($generated@@273 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@273 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@79) (= (type $generated@@611) $generated@@79)) (< ($generated@@606 $generated@@611) ($generated@@607 ($generated@@273 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@273 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@77) (= (type $generated@@613) ($generated@@78 $generated@@79))) (= ($generated@@75 ($generated@@76 $generated@@612) $generated@@613) ($generated@@75 $generated@@612 $generated@@613)))
 :pattern ( ($generated@@75 ($generated@@76 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@79) (= (type $generated@@615) $generated@@64)) (= (type $generated@@616) $generated@@64)) ($generated@@274 $generated@@614 ($generated@@477 $generated@@615 $generated@@616))) (and (= ($generated@@92 ($generated@@86 ($generated@@359 $generated@@79 $generated@@79) $generated@@614)) $generated@@614) ($generated@@81 ($generated@@86 ($generated@@359 $generated@@79 $generated@@79) $generated@@614) ($generated@@477 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@274 $generated@@614 ($generated@@477 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@79) (= (type $generated@@618) $generated@@64)) (= (type $generated@@619) $generated@@64)) ($generated@@274 $generated@@617 ($generated@@485 $generated@@618 $generated@@619))) (and (= ($generated@@92 ($generated@@86 ($generated@@377 $generated@@79 $generated@@79) $generated@@617)) $generated@@617) ($generated@@81 ($generated@@86 ($generated@@377 $generated@@79 $generated@@79) $generated@@617) ($generated@@485 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@274 $generated@@617 ($generated@@485 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@64) (= (type $generated@@621) $generated@@64)) (= (type $generated@@622) $generated@@79)) ($generated@@274 $generated@@622 ($generated@@184 $generated@@620 $generated@@621))) (and (= ($generated@@92 ($generated@@86 $generated@@185 $generated@@622)) $generated@@622) ($generated@@81 ($generated@@86 $generated@@185 $generated@@622) ($generated@@184 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@274 $generated@@622 ($generated@@184 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@623)))
 (not ($generated@@0 ($generated@@126 ($generated@@499 $generated@@624) $generated@@623))))
 :pattern ( (let (($generated@@624 (type $generated@@623)))
($generated@@126 ($generated@@499 $generated@@624) $generated@@623)))
)))
(assert (forall (($generated@@626 T@U) ) (! (= (type ($generated@@625 $generated@@626)) $generated@@69)
 :pattern ( ($generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@64) (= (type $generated@@628) $generated@@64)) (and (= ($generated@@72 ($generated@@184 $generated@@627 $generated@@628)) $generated@@62) (= ($generated@@625 ($generated@@184 $generated@@627 $generated@@628)) $generated@@63)))
 :pattern ( ($generated@@184 $generated@@627 $generated@@628))
)))
(assert  (and (forall (($generated@@631 T@U) ) (! (let (($generated@@632 ($generated@@94 (type $generated@@631))))
(= (type ($generated@@629 $generated@@631)) ($generated@@78 $generated@@632)))
 :pattern ( ($generated@@629 $generated@@631))
)) (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@94 (type $generated@@633))))
(= (type ($generated@@630 $generated@@633)) $generated@@634))
 :pattern ( ($generated@@630 $generated@@633))
))))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 (type $generated@@636)))
 (=> (= (type $generated@@635) ($generated@@78 $generated@@637)) (and (= ($generated@@629 ($generated@@91 $generated@@635 $generated@@636)) $generated@@635) (= ($generated@@630 ($generated@@91 $generated@@635 $generated@@636)) $generated@@636))))
 :pattern ( ($generated@@91 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@185) (= ($generated@@606 ($generated@@92 $generated@@638)) ($generated@@607 $generated@@638)))
 :pattern ( ($generated@@606 ($generated@@92 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 Int) ($generated@@641 T@U) ) (! (let (($generated@@642 (type $generated@@641)))
 (=> (= (type $generated@@639) ($generated@@78 $generated@@642)) (= ($generated@@177 ($generated@@88 $generated@@639 $generated@@640) $generated@@641) (exists (($generated@@643 Int) ) (!  (and (and (and (<= 0 $generated@@640) (<= $generated@@640 $generated@@643)) (< $generated@@643 ($generated@@83 $generated@@639))) (= ($generated@@87 $generated@@639 $generated@@643) $generated@@641))
 :pattern ( ($generated@@87 $generated@@639 $generated@@643))
)))))
 :pattern ( ($generated@@177 ($generated@@88 $generated@@639 $generated@@640) $generated@@641))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@77) (= (type $generated@@645) ($generated@@78 $generated@@79))) (or ($generated@@80 ($generated@@297 $generated@@645)) (and (not (= 1 $generated@@74)) ($generated@@81 $generated@@645 ($generated@@82 $generated@@46))))) (and (=> (not (= ($generated@@83 ($generated@@297 $generated@@645)) ($generated@@84 0))) (and ($generated@@85 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@297 $generated@@645) ($generated@@84 0))))) ($generated@@80 ($generated@@297 ($generated@@88 ($generated@@297 $generated@@645) ($generated@@84 1)))))) (= ($generated@@75 ($generated@@76 $generated@@644) ($generated@@297 $generated@@645)) (ite (= ($generated@@83 ($generated@@297 $generated@@645)) ($generated@@84 0)) ($generated@@89 $generated@@79) ($generated@@90 ($generated@@91 ($generated@@89 $generated@@79) ($generated@@92 ($generated@@8 ($generated@@93 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@297 $generated@@645) ($generated@@84 0)))))))) ($generated@@75 ($generated@@76 $generated@@644) ($generated@@297 ($generated@@88 ($generated@@297 $generated@@645) ($generated@@84 1)))))))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@644) ($generated@@297 $generated@@645)))
))))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@79) ($generated@@274 $generated@@646 ($generated@@120 0))) (and (= ($generated@@92 ($generated@@86 $generated@@2 $generated@@646)) $generated@@646) ($generated@@81 ($generated@@86 ($generated@@121 $generated@@79 $generated@@4) $generated@@646) ($generated@@120 0))))
 :pattern ( ($generated@@274 $generated@@646 ($generated@@120 0)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@79) (= (type $generated@@648) $generated@@64)) ($generated@@274 $generated@@647 ($generated@@286 $generated@@648))) (and (= ($generated@@92 ($generated@@86 ($generated@@121 $generated@@79 $generated@@4) $generated@@647)) $generated@@647) ($generated@@81 ($generated@@86 ($generated@@121 $generated@@79 $generated@@4) $generated@@647) ($generated@@286 $generated@@648))))
 :pattern ( ($generated@@274 $generated@@647 ($generated@@286 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@649) $generated@@79) (= (type $generated@@650) $generated@@64)) ($generated@@274 $generated@@649 ($generated@@291 $generated@@650))) (and (= ($generated@@92 ($generated@@86 ($generated@@121 $generated@@79 $generated@@4) $generated@@649)) $generated@@649) ($generated@@81 ($generated@@86 ($generated@@121 $generated@@79 $generated@@4) $generated@@649) ($generated@@291 $generated@@650))))
 :pattern ( ($generated@@274 $generated@@649 ($generated@@291 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@79) (= (type $generated@@652) $generated@@64)) ($generated@@274 $generated@@651 ($generated@@204 $generated@@652))) (and (= ($generated@@92 ($generated@@86 ($generated@@121 $generated@@79 $generated@@2) $generated@@651)) $generated@@651) ($generated@@81 ($generated@@86 ($generated@@121 $generated@@79 $generated@@2) $generated@@651) ($generated@@204 $generated@@652))))
 :pattern ( ($generated@@274 $generated@@651 ($generated@@204 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@79) (= (type $generated@@654) $generated@@64)) ($generated@@274 $generated@@653 ($generated@@82 $generated@@654))) (and (= ($generated@@92 ($generated@@86 ($generated@@78 $generated@@79) $generated@@653)) $generated@@653) ($generated@@81 ($generated@@86 ($generated@@78 $generated@@79) $generated@@653) ($generated@@82 $generated@@654))))
 :pattern ( ($generated@@274 $generated@@653 ($generated@@82 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ($generated@@657 Int) ) (! (let (($generated@@658 ($generated@@94 (type $generated@@655))))
 (=> (= (type $generated@@655) ($generated@@78 $generated@@658)) (=> (and (and (<= 0 $generated@@656) (<= $generated@@656 $generated@@657)) (< $generated@@657 ($generated@@83 $generated@@655))) (= ($generated@@87 ($generated@@88 $generated@@655 $generated@@656) (- $generated@@657 $generated@@656)) ($generated@@87 $generated@@655 $generated@@657)))))
 :weight 25
 :pattern ( ($generated@@87 $generated@@655 $generated@@657) ($generated@@88 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@659) ($generated@@121 $generated@@79 $generated@@2)) (= (type $generated@@660) $generated@@64)) (= (type $generated@@661) ($generated@@121 $generated@@122 $generated@@123))) (= ($generated@@119 $generated@@659 ($generated@@204 $generated@@660) $generated@@661) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@79) (< 0 ($generated ($generated@@126 $generated@@659 $generated@@662)))) ($generated@@310 $generated@@662 $generated@@660 $generated@@661))
 :pattern ( ($generated@@126 $generated@@659 $generated@@662))
))))
 :pattern ( ($generated@@119 $generated@@659 ($generated@@204 $generated@@660) $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 Int) ($generated@@665 Int) ) (! (let (($generated@@666 ($generated@@94 (type $generated@@663))))
 (=> (= (type $generated@@663) ($generated@@78 $generated@@666)) (=> (and (and (<= 0 $generated@@664) (<= 0 $generated@@665)) (<= (+ $generated@@664 $generated@@665) ($generated@@83 $generated@@663))) (= ($generated@@88 ($generated@@88 $generated@@663 $generated@@664) $generated@@665) ($generated@@88 $generated@@663 (+ $generated@@664 $generated@@665))))))
 :pattern ( ($generated@@88 ($generated@@88 $generated@@663 $generated@@664) $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@185) (= (type $generated@@668) $generated@@64)) (= (type $generated@@669) ($generated@@121 $generated@@122 $generated@@123))) (and ($generated@@309 $generated@@669) (and ($generated@@183 $generated@@667) (exists (($generated@@670 T@U) ) (!  (and (= (type $generated@@670) $generated@@64) ($generated@@119 $generated@@667 ($generated@@184 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@119 $generated@@667 ($generated@@184 $generated@@668 $generated@@670) $generated@@669))
))))) ($generated@@310 ($generated@@192 $generated@@667) $generated@@668 $generated@@669))
 :pattern ( ($generated@@310 ($generated@@192 $generated@@667) $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@185) (= (type $generated@@672) $generated@@64)) (= (type $generated@@673) ($generated@@121 $generated@@122 $generated@@123))) (and ($generated@@309 $generated@@673) (and ($generated@@183 $generated@@671) (exists (($generated@@674 T@U) ) (!  (and (= (type $generated@@674) $generated@@64) ($generated@@119 $generated@@671 ($generated@@184 $generated@@674 $generated@@672) $generated@@673))
 :pattern ( ($generated@@119 $generated@@671 ($generated@@184 $generated@@674 $generated@@672) $generated@@673))
))))) ($generated@@310 ($generated@@193 $generated@@671) $generated@@672 $generated@@673))
 :pattern ( ($generated@@310 ($generated@@193 $generated@@671) $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 Int) ) (! (let (($generated@@678 ($generated@@94 (type $generated@@675))))
 (=> (and (= (type $generated@@675) ($generated@@78 $generated@@678)) (= (type $generated@@676) ($generated@@78 $generated@@678))) (and (=> (< $generated@@677 ($generated@@83 $generated@@675)) (= ($generated@@87 ($generated@@90 $generated@@675 $generated@@676) $generated@@677) ($generated@@87 $generated@@675 $generated@@677))) (=> (<= ($generated@@83 $generated@@675) $generated@@677) (= ($generated@@87 ($generated@@90 $generated@@675 $generated@@676) $generated@@677) ($generated@@87 $generated@@676 (- $generated@@677 ($generated@@83 $generated@@675))))))))
 :pattern ( ($generated@@87 ($generated@@90 $generated@@675 $generated@@676) $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@79) (= (type $generated@@680) $generated@@79)) (= ($generated@@273 ($generated@@297 $generated@@679) ($generated@@297 $generated@@680)) ($generated@@297 ($generated@@273 $generated@@679 $generated@@680))))
 :pattern ( ($generated@@273 ($generated@@297 $generated@@679) ($generated@@297 $generated@@680)))
)))
(assert (forall (($generated@@681 Int) ) (! (= ($generated@@92 ($generated@@8 ($generated@@84 $generated@@681))) ($generated@@297 ($generated@@92 ($generated@@8 $generated@@681))))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@84 $generated@@681))))
)))
(assert (forall (($generated@@682 T@U) ) (! (= ($generated@@92 ($generated@@297 $generated@@682)) ($generated@@297 ($generated@@92 $generated@@682)))
 :pattern ( ($generated@@92 ($generated@@297 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (! (let (($generated@@684 ($generated@@94 (type $generated@@683))))
 (=> (and (= (type $generated@@683) ($generated@@78 $generated@@684)) (= ($generated@@83 $generated@@683) 0)) (= $generated@@683 ($generated@@89 $generated@@684))))
 :pattern ( ($generated@@83 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 Int) ) (! (let (($generated@@687 ($generated@@94 (type $generated@@685))))
 (=> (and (= (type $generated@@685) ($generated@@78 $generated@@687)) (= $generated@@686 0)) (= ($generated@@265 $generated@@685 $generated@@686) ($generated@@89 $generated@@687))))
 :pattern ( ($generated@@265 $generated@@685 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ) (! (let (($generated@@691 (type $generated@@689)))
 (=> (and (and (= (type $generated@@688) ($generated@@121 $generated@@691 $generated@@2)) (= (type $generated@@690) $generated@@2)) (<= 0 ($generated $generated@@690))) (= ($generated@@351 ($generated@@127 $generated@@688 $generated@@689 $generated@@690)) (+ (- ($generated@@351 $generated@@688) ($generated ($generated@@126 $generated@@688 $generated@@689))) ($generated $generated@@690)))))
 :pattern ( ($generated@@351 ($generated@@127 $generated@@688 $generated@@689 $generated@@690)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) ($generated@@121 $generated@@122 $generated@@123)) (= (type $generated@@693) $generated@@2)) ($generated@@119 $generated@@693 $generated@@46 $generated@@692))
 :pattern ( ($generated@@119 $generated@@693 $generated@@46 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) ($generated@@121 $generated@@122 $generated@@123)) (= (type $generated@@695) $generated@@3)) ($generated@@119 $generated@@695 $generated@@47 $generated@@694))
 :pattern ( ($generated@@119 $generated@@695 $generated@@47 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) ($generated@@121 $generated@@122 $generated@@123)) (= (type $generated@@697) $generated@@4)) ($generated@@119 $generated@@697 $generated@@44 $generated@@696))
 :pattern ( ($generated@@119 $generated@@697 $generated@@44 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) ($generated@@121 $generated@@122 $generated@@123)) (= (type $generated@@699) $generated@@523)) ($generated@@119 $generated@@699 $generated@@45 $generated@@698))
 :pattern ( ($generated@@119 $generated@@699 $generated@@45 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@700) ($generated@@121 $generated@@122 $generated@@123)) (= (type $generated@@701) $generated@@79)) ($generated@@119 $generated@@701 $generated@@48 $generated@@700))
 :pattern ( ($generated@@119 $generated@@701 $generated@@48 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) ($generated@@78 $generated@@79)) (= (type $generated@@703) $generated@@64)) (= ($generated@@81 $generated@@702 ($generated@@82 $generated@@703)) (forall (($generated@@704 Int) ) (!  (=> (and (<= 0 $generated@@704) (< $generated@@704 ($generated@@83 $generated@@702))) ($generated@@274 ($generated@@87 $generated@@702 $generated@@704) $generated@@703))
 :pattern ( ($generated@@87 $generated@@702 $generated@@704))
))))
 :pattern ( ($generated@@81 $generated@@702 ($generated@@82 $generated@@703)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 Int) ) (!  (=> (= (type $generated@@705) ($generated@@78 $generated@@79)) (=> (and (<= 0 $generated@@706) (< $generated@@706 ($generated@@83 $generated@@705))) (< ($generated@@607 ($generated@@86 $generated@@185 ($generated@@87 $generated@@705 $generated@@706))) ($generated@@327 $generated@@705))))
 :pattern ( ($generated@@607 ($generated@@86 $generated@@185 ($generated@@87 $generated@@705 $generated@@706))))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (and (= (type $generated@@707) ($generated@@359 $generated@@79 $generated@@79)) (= (type $generated@@708) $generated@@64)) (= (type $generated@@709) $generated@@64)) ($generated@@81 $generated@@707 ($generated@@477 $generated@@708 $generated@@709))) (and (and ($generated@@81 ($generated@@357 $generated@@707) ($generated@@286 $generated@@708)) ($generated@@81 ($generated@@407 $generated@@707) ($generated@@286 $generated@@709))) ($generated@@81 ($generated@@451 $generated@@707) ($generated@@286 ($generated@@184 $generated@@708 $generated@@709)))))
 :pattern ( ($generated@@81 $generated@@707 ($generated@@477 $generated@@708 $generated@@709)))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (and (= (type $generated@@710) ($generated@@377 $generated@@79 $generated@@79)) (= (type $generated@@711) $generated@@64)) (= (type $generated@@712) $generated@@64)) ($generated@@81 $generated@@710 ($generated@@485 $generated@@711 $generated@@712))) (and (and ($generated@@81 ($generated@@375 $generated@@710) ($generated@@291 $generated@@711)) ($generated@@81 ($generated@@418 $generated@@710) ($generated@@291 $generated@@712))) ($generated@@81 ($generated@@459 $generated@@710) ($generated@@291 ($generated@@184 $generated@@711 $generated@@712)))))
 :pattern ( ($generated@@81 $generated@@710 ($generated@@485 $generated@@711 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@2) ($generated@@81 $generated@@713 $generated@@46))
 :pattern ( ($generated@@81 $generated@@713 $generated@@46))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@3) ($generated@@81 $generated@@714 $generated@@47))
 :pattern ( ($generated@@81 $generated@@714 $generated@@47))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@4) ($generated@@81 $generated@@715 $generated@@44))
 :pattern ( ($generated@@81 $generated@@715 $generated@@44))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@523) ($generated@@81 $generated@@716 $generated@@45))
 :pattern ( ($generated@@81 $generated@@716 $generated@@45))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@79) ($generated@@81 $generated@@717 $generated@@48))
 :pattern ( ($generated@@81 $generated@@717 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 (T@U) Bool)
(declare-fun $generated@@725 () T@U)
(declare-fun $generated@@726 () T@U)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@718) $generated@@77) (= (type $generated@@719) $generated@@77)) (= (type $generated@@720) ($generated@@211 $generated@@122 $generated@@4))) (= (type $generated@@721) $generated@@122)) (= (type $generated@@722) ($generated@@121 $generated@@122 $generated@@123))) (= (type $generated@@723) ($generated@@121 $generated@@122 $generated@@123))) (= (type $generated@@725) ($generated@@78 $generated@@79))) (= (type $generated@@726) ($generated@@78 $generated@@79))) (= (type $generated@@727) ($generated@@121 $generated@@122 $generated@@123))) (= (type $generated@@728) $generated@@77)) (= (type $generated@@729) ($generated@@121 $generated@@122 $generated@@123))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@730  (=> (= ($generated@@569 $generated@@718) $generated@@718) (=> (and (= ($generated@@569 $generated@@719) $generated@@719) (= $generated@@720 ($generated@@210 $generated@@721 $generated@@722 $generated@@60 false))) (=> (and (and (and (and ($generated@@309 $generated@@723) ($generated@@724 $generated@@723)) (and (= $generated@@722 $generated@@723) (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@731) ($generated@@78 $generated@@79)) (= (type $generated@@732) ($generated@@78 $generated@@79))) (=> (and (and (and ($generated@@81 $generated@@731 ($generated@@82 $generated@@46)) ($generated@@81 $generated@@732 ($generated@@82 $generated@@46))) ($generated@@322 ($generated@@75 $generated@@718 $generated@@731) ($generated@@75 $generated@@718 $generated@@732))) (or (< ($generated@@327 $generated@@731) ($generated@@327 $generated@@725)) (and (= ($generated@@327 $generated@@731) ($generated@@327 $generated@@725)) (< ($generated@@327 $generated@@732) ($generated@@327 $generated@@726))))) (forall (($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@733) $generated@@2) true) (= ($generated@@177 $generated@@731 ($generated@@92 $generated@@733)) ($generated@@177 $generated@@732 ($generated@@92 $generated@@733))))
 :pattern ( ($generated@@177 $generated@@732 ($generated@@92 $generated@@733)))
 :pattern ( ($generated@@177 $generated@@731 ($generated@@92 $generated@@733)))
))))
 :no-pattern (type $generated@@731)
 :no-pattern (type $generated@@732)
 :no-pattern ($generated $generated@@731)
 :no-pattern ($generated@@0 $generated@@731)
 :no-pattern ($generated $generated@@732)
 :no-pattern ($generated@@0 $generated@@732)
)))) (and (and ($generated@@309 $generated@@727) ($generated@@724 $generated@@727)) (and (= $generated@@723 $generated@@727) (= $generated@@718 ($generated@@76 $generated@@728))))) (and (and (and (= $generated@@719 ($generated@@76 ($generated@@76 $generated@@728))) (= ($generated@@569 $generated@@728) $generated@@728)) (and ($generated@@309 $generated@@729) ($generated@@724 $generated@@729))) (and (and (forall (($generated@@734 Int) ($generated@@735 Int) ) (!  (and ($generated@@85 $generated@@734) ($generated@@85 $generated@@735))
 :pattern ( ($generated@@93 $generated@@734) ($generated@@93 $generated@@735))
)) (forall (($generated@@736 Int) ($generated@@737 Int) ) (!  (=> true (=> (= ($generated@@93 $generated@@736) ($generated@@93 $generated@@737)) (= $generated@@736 $generated@@737)))
 :pattern ( ($generated@@93 $generated@@736) ($generated@@93 $generated@@737))
))) (and (= $generated@@727 $generated@@729) (= (ControlFlow 0 2) (- 0 1)))))) (forall (($generated@@738 Int) ) (!  (=> true (= ($generated@@177 $generated@@725 ($generated@@92 ($generated@@8 $generated@@738))) ($generated@@177 $generated@@726 ($generated@@92 ($generated@@8 $generated@@738)))))
 :pattern ( ($generated@@177 $generated@@726 ($generated@@92 ($generated@@8 $generated@@738))))
 :pattern ( ($generated@@177 $generated@@725 ($generated@@92 ($generated@@8 $generated@@738))))
)))))))
(let (($generated@@739  (=> (and (and ($generated@@309 $generated@@722) ($generated@@724 $generated@@722)) (and ($generated@@81 $generated@@725 ($generated@@82 $generated@@46)) ($generated@@119 $generated@@725 ($generated@@82 $generated@@46) $generated@@722))) (=> (and (and (and ($generated@@81 $generated@@726 ($generated@@82 $generated@@46)) ($generated@@119 $generated@@726 ($generated@@82 $generated@@46) $generated@@722)) (= 2 $generated@@74)) (and ($generated@@322 ($generated@@75 $generated@@719 $generated@@725) ($generated@@75 $generated@@719 $generated@@726)) (= (ControlFlow 0 3) 2))) $generated@@730))))
$generated@@739)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
