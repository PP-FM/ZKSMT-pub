(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@74 (Int) Bool)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@223 (Int) Int)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@244 (T@U T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@253 (T@U T@U Int Int) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 () T@T)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@262 (T@U Int Int) Bool)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@T) T@U)
(declare-fun $generated@@444 () T@T)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U Int) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@75 Int) ) (!  (=> (or ($generated@@74 $generated@@75) (not (= 0 $generated@@72))) (= ($generated@@73 $generated@@75) $generated@@75))
 :pattern ( ($generated@@73 $generated@@75))
))))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@65)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@67 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@67 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@64)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@81 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@81) (= (type $generated@@209) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@81)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@224 Int) ) (!  (=> (or ($generated@@74 ($generated@@223 $generated@@224)) (not (= 0 $generated@@72))) (= ($generated@@73 ($generated@@223 $generated@@224)) ($generated@@223 $generated@@224)))
 :weight 3
 :pattern ( ($generated@@73 ($generated@@223 $generated@@224)))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@140) (= (type $generated@@226) $generated@@140)) (= ($generated@@146 $generated@@225 $generated@@226) (= $generated@@225 $generated@@226)))
 :pattern ( ($generated@@146 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@227 $generated@@228)) $generated@@64)
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@230) $generated@@64)) (= ($generated@@136 $generated@@229 ($generated@@227 $generated@@230)) (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@149) ($generated@@0 ($generated@@85 $generated@@229 $generated@@231))) ($generated@@216 $generated@@231 $generated@@230))
 :pattern ( ($generated@@85 $generated@@229 $generated@@231))
))))
 :pattern ( ($generated@@136 $generated@@229 ($generated@@227 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@64)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@235) $generated@@64)) (= ($generated@@136 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@149) ($generated@@0 ($generated@@85 $generated@@234 $generated@@236))) ($generated@@216 $generated@@236 $generated@@235))
 :pattern ( ($generated@@85 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@136 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@223 $generated@@237) $generated@@237)
 :pattern ( ($generated@@223 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@242 Int) ) (!  (=> (or ($generated@@74 $generated@@242) (not (= 0 $generated@@72))) true)
 :pattern ( ($generated@@73 $generated@@242))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) $generated@@64) (= (type $generated@@246) $generated@@64)) (= (type $generated@@247) $generated@@149)) (= (type $generated@@248) $generated@@149)) (= (type $generated@@249) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@243 $generated@@249)) (= ($generated@@78 ($generated@@215 $generated@@247 $generated@@248) ($generated@@139 $generated@@245 $generated@@246) $generated@@249)  (and ($generated@@244 $generated@@247 $generated@@245 $generated@@249) ($generated@@244 $generated@@248 $generated@@246 $generated@@249))))
 :pattern ( ($generated@@78 ($generated@@215 $generated@@247 $generated@@248) ($generated@@139 $generated@@245 $generated@@246) $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@68)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@140) (= ($generated@@138 $generated@@252) (= ($generated@@250 $generated@@252) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@252))
)))
(assert  (and (and (= ($generated@@1 $generated@@255) 17) (forall (($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@257)) $generated@@255)
 :pattern ( ($generated@@254 $generated@@257))
))) (= (type $generated@@256) $generated@@255)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 Int) ($generated@@261 Int) ) (!  (=> (and (= (type $generated@@258) $generated@@255) (= (type $generated@@259) $generated@@149)) (= ($generated@@253 $generated@@258 $generated@@259 $generated@@260 $generated@@261) ($generated@@253 $generated@@256 $generated@@259 $generated@@260 $generated@@261)))
 :pattern ( ($generated@@253 ($generated@@254 $generated@@258) $generated@@259 $generated@@260 $generated@@261))
)))
(assert (= (type $generated@@263) $generated@@64))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 Int) ($generated@@267 Int) ) (!  (=> (and (and (= (type $generated@@264) $generated@@255) (= (type $generated@@265) $generated@@149)) (or ($generated@@262 $generated@@265 $generated@@266 $generated@@267) (and (not (= 1 $generated@@72)) ($generated@@216 $generated@@265 $generated@@263)))) true)
 :pattern ( ($generated@@253 $generated@@264 $generated@@265 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@140) ($generated@@138 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@149) (= (type $generated@@270) $generated@@149)) (= $generated@@268 ($generated@@215 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@138 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 18)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@255)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 Int) ($generated@@284 Int) ) (!  (=> (and (and (= (type $generated@@281) $generated@@255) (= (type $generated@@282) $generated@@149)) (or ($generated@@262 ($generated@@238 $generated@@282) ($generated@@223 $generated@@283) ($generated@@223 $generated@@284)) (and (not (= 1 $generated@@72)) ($generated@@216 $generated@@282 $generated@@263)))) (= ($generated@@253 ($generated@@279 $generated@@281) ($generated@@238 $generated@@282) ($generated@@223 $generated@@283) ($generated@@223 $generated@@284))  (and (<= ($generated@@223 0) ($generated@@223 $generated@@283)) (< $generated@@283 4294967296))))
 :weight 3
 :pattern ( ($generated@@253 ($generated@@279 $generated@@281) ($generated@@238 $generated@@282) ($generated@@223 $generated@@283) ($generated@@223 $generated@@284)))
))))
(assert ($generated@@285 $generated@@263))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@149)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@244 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@78 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@244 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@80 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@83 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@80 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@85 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@80 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@85 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@85 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 20)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@80 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@85 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@85 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@83 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@80 $generated@@334 $generated@@2)) (= ($generated@@155 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@85 $generated@@333 $generated@@335))) (<= ($generated ($generated@@85 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@85 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@155 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(let (($generated@@338 ($generated@@300 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@299 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@298 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@85 ($generated@@297 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@297 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@80 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@301 (type $generated@@343))))
(let (($generated@@345 ($generated@@300 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@299 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@298 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@319 (type $generated@@347))))
(let (($generated@@349 ($generated@@318 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@317 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@316 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@85 ($generated@@315 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@315 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@80 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@319 (type $generated@@354))))
(let (($generated@@356 ($generated@@318 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@317 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@316 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@359) $generated@@64)) (= ($generated@@136 $generated@@358 ($generated@@154 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@358 $generated@@360)))) ($generated@@216 $generated@@360 $generated@@359))
 :pattern ( ($generated@@85 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@136 $generated@@358 ($generated@@154 $generated@@359)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 Int) ($generated@@364 Int) ) (!  (=> (and (and (= (type $generated@@361) $generated@@255) (= (type $generated@@362) $generated@@149)) (or ($generated@@262 $generated@@362 ($generated@@223 $generated@@363) ($generated@@223 $generated@@364)) (and (not (= 1 $generated@@72)) ($generated@@216 $generated@@362 $generated@@263)))) (= ($generated@@253 ($generated@@279 $generated@@361) $generated@@362 ($generated@@223 $generated@@363) ($generated@@223 $generated@@364))  (and (<= ($generated@@223 0) ($generated@@223 $generated@@363)) (< $generated@@363 4294967296))))
 :weight 3
 :pattern ( ($generated@@253 ($generated@@279 $generated@@361) $generated@@362 ($generated@@223 $generated@@363) ($generated@@223 $generated@@364)))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@366) $generated@@64)) (= (type $generated@@367) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@365 ($generated@@227 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@149) ($generated@@0 ($generated@@85 $generated@@365 $generated@@368))) ($generated@@244 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@85 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@78 $generated@@365 ($generated@@227 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@370) $generated@@64)) (= (type $generated@@371) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@369 ($generated@@232 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@149) ($generated@@0 ($generated@@85 $generated@@369 $generated@@372))) ($generated@@244 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@85 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@78 $generated@@369 ($generated@@232 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@85 ($generated@@292 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@85 ($generated@@292 $generated@@374) $generated@@373)))
)))
(assert  (and (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@375 $generated@@378)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@375 $generated@@378))
)) (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@376 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@376 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@301 (type $generated@@381))))
(let (($generated@@383 ($generated@@300 (type $generated@@381))))
(= (type ($generated@@377 $generated@@381)) ($generated@@80 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@377 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@299 $generated@@149 $generated@@149)) (= (type $generated@@385) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@375 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@85 ($generated@@297 $generated@@384) ($generated@@147 ($generated@@376 $generated@@140 $generated@@385)))) (= ($generated@@85 ($generated@@377 $generated@@384) ($generated@@147 ($generated@@376 $generated@@140 $generated@@385))) ($generated@@148 ($generated@@376 $generated@@140 $generated@@385))))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@319 (type $generated@@389))))
(let (($generated@@391 ($generated@@318 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@393) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@315 $generated@@392) ($generated@@147 ($generated@@376 $generated@@140 $generated@@393)))) (= ($generated@@85 ($generated@@387 $generated@@392) ($generated@@147 ($generated@@376 $generated@@140 $generated@@393))) ($generated@@148 ($generated@@376 $generated@@140 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@300 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@299 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@85 ($generated@@340 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@85 ($generated@@297 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@85 ($generated@@377 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@85 ($generated@@297 $generated@@394) $generated@@398))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@318 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@317 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@85 ($generated@@351 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@85 ($generated@@315 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@85 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@85 ($generated@@315 $generated@@399) $generated@@403))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@64)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@299 $generated@@149 $generated@@149)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@297 $generated@@407) $generated@@411))) (and ($generated@@244 ($generated@@85 ($generated@@377 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@244 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@297 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@78 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@64)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@315 $generated@@415) $generated@@419))) (and ($generated@@244 ($generated@@85 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@244 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@315 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@T) ) (! (= (type ($generated@@420 $generated@@421)) ($generated@@80 $generated@@421 $generated@@4))
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@319 (type $generated@@422))))
(let (($generated@@424 ($generated@@318 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@317 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@316 $generated@@424 $generated@@423)) (= ($generated@@315 $generated@@422) ($generated@@420 $generated@@424))))))
 :pattern ( ($generated@@315 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@319 (type $generated@@425))))
(let (($generated@@427 ($generated@@318 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@317 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@316 $generated@@427 $generated@@426)) (= ($generated@@351 $generated@@425) ($generated@@420 $generated@@426))))))
 :pattern ( ($generated@@351 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@319 (type $generated@@428))))
(let (($generated@@430 ($generated@@318 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@317 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@316 $generated@@430 $generated@@429)) (= ($generated@@386 $generated@@428) ($generated@@420 $generated@@149))))))
 :pattern ( ($generated@@386 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@301 (type $generated@@431))))
(let (($generated@@433 ($generated@@300 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@299 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@298 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@149) (= (type $generated@@435) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@431) ($generated@@286 ($generated@@215 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@375 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@319 (type $generated@@436))))
(let (($generated@@438 ($generated@@318 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@317 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@316 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@149) (= (type $generated@@440) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@436) ($generated@@286 ($generated@@215 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@386 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@149) ($generated@@216 $generated@@441 $generated@@46)) (and (= ($generated@@286 ($generated@@376 $generated@@2 $generated@@441)) $generated@@441) ($generated@@136 ($generated@@376 $generated@@2 $generated@@441) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@441 $generated@@46))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@149) ($generated@@216 $generated@@442 $generated@@47)) (and (= ($generated@@286 ($generated@@376 $generated@@3 $generated@@442)) $generated@@442) ($generated@@136 ($generated@@376 $generated@@3 $generated@@442) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@442 $generated@@47))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@149) ($generated@@216 $generated@@443 $generated@@44)) (and (= ($generated@@286 ($generated@@376 $generated@@4 $generated@@443)) $generated@@443) ($generated@@136 ($generated@@376 $generated@@4 $generated@@443) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@443 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@444) 21))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@149) ($generated@@216 $generated@@445 $generated@@45)) (and (= ($generated@@286 ($generated@@376 $generated@@444 $generated@@445)) $generated@@445) ($generated@@136 ($generated@@376 $generated@@444 $generated@@445) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@445 $generated@@45))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (= (type $generated@@447) $generated@@64) (= ($generated@@216 ($generated@@286 $generated@@446) $generated@@447) ($generated@@136 $generated@@446 $generated@@447)))
 :pattern ( ($generated@@216 ($generated@@286 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 Int) ($generated@@451 Int) ) (!  (=> (and (= (type $generated@@448) $generated@@255) (= (type $generated@@449) $generated@@149)) (= ($generated@@253 ($generated@@279 $generated@@448) $generated@@449 $generated@@450 $generated@@451) ($generated@@253 $generated@@448 $generated@@449 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@253 ($generated@@279 $generated@@448) $generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@83 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@80 $generated@@453 $generated@@2)) (<= 0 ($generated@@291 $generated@@452))))
 :pattern ( ($generated@@291 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@274 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@273 $generated@@455)) (<= 0 ($generated@@272 $generated@@454))))
 :pattern ( ($generated@@272 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) ($generated@@285 $generated@@456)) (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@458) $generated@@149)) ($generated@@216 $generated@@458 $generated@@456)) ($generated@@244 $generated@@458 $generated@@456 $generated@@457))
 :pattern ( ($generated@@244 $generated@@458 $generated@@456 $generated@@457))
)))
 :pattern ( ($generated@@285 $generated@@456))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@404 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@404 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@404 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@404 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@76 ($generated@@404 $generated@@467 $generated@@468)) $generated@@58))
 :pattern ( ($generated@@404 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@412 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@412 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@412 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@76 ($generated@@412 $generated@@477 $generated@@478)) $generated@@59))
 :pattern ( ($generated@@412 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@149) (= (type $generated@@480) $generated@@149)) (= ($generated@@250 ($generated@@215 $generated@@479 $generated@@480)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@139 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@139 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@139 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@139 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@149) (= (type $generated@@490) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@215 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@149) (= (type $generated@@492) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@215 $generated@@491 $generated@@492))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@274 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496 $generated@@497)) $generated@@498))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@273 $generated@@149)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@499 ($generated@@493 $generated@@500) $generated@@501) (forall (($generated@@502 Int) ) (!  (=> (and (<= 0 $generated@@502) (< $generated@@502 ($generated@@272 $generated@@499))) ($generated@@244 ($generated@@494 $generated@@499 $generated@@502) $generated@@500 $generated@@501))
 :pattern ( ($generated@@494 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@78 $generated@@499 ($generated@@493 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@503 ($generated@@79 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@79 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@227 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@227 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@76 ($generated@@227 $generated@@508)) $generated@@54))
 :pattern ( ($generated@@227 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@232 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@232 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@76 ($generated@@232 $generated@@512)) $generated@@55))
 :pattern ( ($generated@@232 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@513 ($generated@@154 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@154 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@76 ($generated@@154 $generated@@516)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@517 ($generated@@493 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@493 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@76 ($generated@@493 $generated@@520)) $generated@@57))
 :pattern ( ($generated@@493 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@376 $generated@@522 ($generated@@286 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@286 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@299 $generated@@149 $generated@@149)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) (= ($generated@@136 $generated@@523 ($generated@@404 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@297 $generated@@523) $generated@@526))) (and ($generated@@216 ($generated@@85 ($generated@@377 $generated@@523) $generated@@526) $generated@@525) ($generated@@216 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@523) $generated@@526))
 :pattern ( ($generated@@85 ($generated@@297 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@136 $generated@@523 ($generated@@404 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) (= ($generated@@136 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@315 $generated@@527) $generated@@530))) (and ($generated@@216 ($generated@@85 ($generated@@387 $generated@@527) $generated@@530) $generated@@529) ($generated@@216 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@527) $generated@@530))
 :pattern ( ($generated@@85 ($generated@@315 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@136 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@149) (= (type $generated@@534) $generated@@149)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@215 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@215 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@149) (= (type $generated@@536) $generated@@149)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@215 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@215 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@149) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@216 $generated@@537 ($generated@@404 $generated@@538 $generated@@539))) (and (= ($generated@@286 ($generated@@376 ($generated@@299 $generated@@149 $generated@@149) $generated@@537)) $generated@@537) ($generated@@136 ($generated@@376 ($generated@@299 $generated@@149 $generated@@149) $generated@@537) ($generated@@404 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@216 $generated@@537 ($generated@@404 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@149) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@64)) ($generated@@216 $generated@@540 ($generated@@412 $generated@@541 $generated@@542))) (and (= ($generated@@286 ($generated@@376 ($generated@@317 $generated@@149 $generated@@149) $generated@@540)) $generated@@540) ($generated@@136 ($generated@@376 ($generated@@317 $generated@@149 $generated@@149) $generated@@540) ($generated@@412 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@216 $generated@@540 ($generated@@412 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@149)) ($generated@@216 $generated@@545 ($generated@@139 $generated@@543 $generated@@544))) (and (= ($generated@@286 ($generated@@376 $generated@@140 $generated@@545)) $generated@@545) ($generated@@136 ($generated@@376 $generated@@140 $generated@@545) ($generated@@139 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@216 $generated@@545 ($generated@@139 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (not ($generated@@0 ($generated@@85 ($generated@@420 $generated@@547) $generated@@546))))
 :pattern ( (let (($generated@@547 (type $generated@@546)))
($generated@@85 ($generated@@420 $generated@@547) $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@69)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (and (= ($generated@@76 ($generated@@139 $generated@@550 $generated@@551)) $generated@@62) (= ($generated@@548 ($generated@@139 $generated@@550 $generated@@551)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@140) (= ($generated@@531 ($generated@@286 $generated@@552)) ($generated@@532 $generated@@552)))
 :pattern ( ($generated@@531 ($generated@@286 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@149) ($generated@@216 $generated@@553 ($generated@@79 0))) (and (= ($generated@@286 ($generated@@376 $generated@@2 $generated@@553)) $generated@@553) ($generated@@136 ($generated@@376 ($generated@@80 $generated@@149 $generated@@4) $generated@@553) ($generated@@79 0))))
 :pattern ( ($generated@@216 $generated@@553 ($generated@@79 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@149) (= (type $generated@@555) $generated@@64)) ($generated@@216 $generated@@554 ($generated@@227 $generated@@555))) (and (= ($generated@@286 ($generated@@376 ($generated@@80 $generated@@149 $generated@@4) $generated@@554)) $generated@@554) ($generated@@136 ($generated@@376 ($generated@@80 $generated@@149 $generated@@4) $generated@@554) ($generated@@227 $generated@@555))))
 :pattern ( ($generated@@216 $generated@@554 ($generated@@227 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@149) (= (type $generated@@557) $generated@@64)) ($generated@@216 $generated@@556 ($generated@@232 $generated@@557))) (and (= ($generated@@286 ($generated@@376 ($generated@@80 $generated@@149 $generated@@4) $generated@@556)) $generated@@556) ($generated@@136 ($generated@@376 ($generated@@80 $generated@@149 $generated@@4) $generated@@556) ($generated@@232 $generated@@557))))
 :pattern ( ($generated@@216 $generated@@556 ($generated@@232 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@149) (= (type $generated@@559) $generated@@64)) ($generated@@216 $generated@@558 ($generated@@154 $generated@@559))) (and (= ($generated@@286 ($generated@@376 ($generated@@80 $generated@@149 $generated@@2) $generated@@558)) $generated@@558) ($generated@@136 ($generated@@376 ($generated@@80 $generated@@149 $generated@@2) $generated@@558) ($generated@@154 $generated@@559))))
 :pattern ( ($generated@@216 $generated@@558 ($generated@@154 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@149) (= (type $generated@@561) $generated@@64)) ($generated@@216 $generated@@560 ($generated@@493 $generated@@561))) (and (= ($generated@@286 ($generated@@376 ($generated@@273 $generated@@149) $generated@@560)) $generated@@560) ($generated@@136 ($generated@@376 ($generated@@273 $generated@@149) $generated@@560) ($generated@@493 $generated@@561))))
 :pattern ( ($generated@@216 $generated@@560 ($generated@@493 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@562 ($generated@@154 $generated@@563) $generated@@564) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@562 $generated@@565)))) ($generated@@244 $generated@@565 $generated@@563 $generated@@564))
 :pattern ( ($generated@@85 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@78 $generated@@562 ($generated@@154 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@140) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@243 $generated@@568) (and ($generated@@138 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@64) ($generated@@78 $generated@@566 ($generated@@139 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@78 $generated@@566 ($generated@@139 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@244 ($generated@@147 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@244 ($generated@@147 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@140) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@243 $generated@@572) (and ($generated@@138 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@64) ($generated@@78 $generated@@570 ($generated@@139 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@78 $generated@@570 ($generated@@139 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@244 ($generated@@148 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@244 ($generated@@148 $generated@@570) $generated@@571 $generated@@572))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 Int) ($generated@@577 Int) ) (!  (=> (and (and (= (type $generated@@574) $generated@@255) (= (type $generated@@575) $generated@@149)) (or ($generated@@262 $generated@@575 $generated@@576 $generated@@577) (and (not (= 1 $generated@@72)) ($generated@@216 $generated@@575 $generated@@263)))) (= ($generated@@253 ($generated@@279 $generated@@574) $generated@@575 $generated@@576 $generated@@577)  (and (<= ($generated@@223 0) $generated@@576) (< $generated@@576 4294967296))))
 :pattern ( ($generated@@253 ($generated@@279 $generated@@574) $generated@@575 $generated@@576 $generated@@577))
))))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@149) (= (type $generated@@579) $generated@@149)) (= ($generated@@215 ($generated@@238 $generated@@578) ($generated@@238 $generated@@579)) ($generated@@238 ($generated@@215 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@215 ($generated@@238 $generated@@578) ($generated@@238 $generated@@579)))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@223 $generated@@580))) ($generated@@238 ($generated@@286 ($generated@@8 $generated@@580))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@223 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@286 ($generated@@238 $generated@@581)) ($generated@@238 ($generated@@286 $generated@@581)))
 :pattern ( ($generated@@286 ($generated@@238 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@274 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@273 $generated@@583)) (= ($generated@@272 $generated@@582) 0)) (= $generated@@582 ($generated@@271 $generated@@583))))
 :pattern ( ($generated@@272 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@80 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@291 ($generated@@86 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@291 $generated@@584) ($generated ($generated@@85 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@291 ($generated@@86 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@589) $generated@@2)) ($generated@@78 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@78 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@591) $generated@@3)) ($generated@@78 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@78 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@593) $generated@@4)) ($generated@@78 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@78 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@595) $generated@@444)) ($generated@@78 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@78 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@597) $generated@@149)) ($generated@@78 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@78 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@273 $generated@@149)) (= (type $generated@@599) $generated@@64)) (= ($generated@@136 $generated@@598 ($generated@@493 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@272 $generated@@598))) ($generated@@216 ($generated@@494 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@494 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@136 $generated@@598 ($generated@@493 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@273 $generated@@149)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@272 $generated@@602))) (< ($generated@@532 ($generated@@376 $generated@@140 ($generated@@494 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@532 ($generated@@376 $generated@@140 ($generated@@494 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@299 $generated@@149 $generated@@149)) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) $generated@@64)) ($generated@@136 $generated@@604 ($generated@@404 $generated@@605 $generated@@606))) (and (and ($generated@@136 ($generated@@297 $generated@@604) ($generated@@227 $generated@@605)) ($generated@@136 ($generated@@340 $generated@@604) ($generated@@227 $generated@@606))) ($generated@@136 ($generated@@375 $generated@@604) ($generated@@227 ($generated@@139 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@136 $generated@@604 ($generated@@404 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) $generated@@64)) ($generated@@136 $generated@@607 ($generated@@412 $generated@@608 $generated@@609))) (and (and ($generated@@136 ($generated@@315 $generated@@607) ($generated@@232 $generated@@608)) ($generated@@136 ($generated@@351 $generated@@607) ($generated@@232 $generated@@609))) ($generated@@136 ($generated@@386 $generated@@607) ($generated@@232 ($generated@@139 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@136 $generated@@607 ($generated@@412 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@136 $generated@@610 $generated@@46))
 :pattern ( ($generated@@136 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@136 $generated@@611 $generated@@47))
 :pattern ( ($generated@@136 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@136 $generated@@612 $generated@@44))
 :pattern ( ($generated@@136 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@444) ($generated@@136 $generated@@613 $generated@@45))
 :pattern ( ($generated@@136 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@149) ($generated@@136 $generated@@614 $generated@@48))
 :pattern ( ($generated@@136 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(declare-fun $generated@@622 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@615) $generated@@255) (= (type $generated@@616) $generated@@255)) (= (type $generated@@617) ($generated@@161 $generated@@81 $generated@@4))) (= (type $generated@@618) $generated@@81)) (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@622) $generated@@255)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@623  (=> (= ($generated@@254 $generated@@615) $generated@@615) (=> (and (= ($generated@@254 $generated@@616) $generated@@616) (= $generated@@617 ($generated@@160 $generated@@618 $generated@@619 $generated@@60 false))) (=> (and (and (and ($generated@@243 $generated@@620) ($generated@@621 $generated@@620)) (= $generated@@619 $generated@@620)) (and (and (= $generated@@615 ($generated@@279 $generated@@622)) (= $generated@@616 ($generated@@279 ($generated@@279 $generated@@622)))) (and (= ($generated@@254 $generated@@622) $generated@@622) (= (ControlFlow 0 2) (- 0 1))))) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@149) ($generated@@216 $generated@@624 $generated@@263)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1116352408))) ($generated@@223 1116352408)) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1899447441))) ($generated@@223 1899447441))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3049323471))) ($generated@@223 3049323471))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3921009573))) ($generated@@223 3921009573))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 961987163))) ($generated@@223 961987163))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1508970993))) ($generated@@223 1508970993))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2453635748))) ($generated@@223 2453635748))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2870763221))) ($generated@@223 2870763221))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3624381080))) ($generated@@223 3624381080))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 310598401))) ($generated@@223 310598401))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 607225278))) ($generated@@223 607225278))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1426881987))) ($generated@@223 1426881987))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1925078388))) ($generated@@223 1925078388))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2162078206))) ($generated@@223 2162078206))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2614888103))) ($generated@@223 2614888103))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3248222580))) ($generated@@223 3248222580))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3835390401))) ($generated@@223 3835390401))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 4022224774))) ($generated@@223 4022224774))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 264347078))) ($generated@@223 264347078))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 604807628))) ($generated@@223 604807628))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 770255983))) ($generated@@223 770255983))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1249150122))) ($generated@@223 1249150122))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1555081692))) ($generated@@223 1555081692))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1996064986))) ($generated@@223 1996064986))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2554220882))) ($generated@@223 2554220882))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2821834349))) ($generated@@223 2821834349))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2952996808))) ($generated@@223 2952996808))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3210313671))) ($generated@@223 3210313671))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3336571891))) ($generated@@223 3336571891))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3584528711))) ($generated@@223 3584528711))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 113926993))) ($generated@@223 113926993))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 338241895))) ($generated@@223 338241895))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 666307205))) ($generated@@223 666307205))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 773529912))) ($generated@@223 773529912))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1294757372))) ($generated@@223 1294757372))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1396182291))) ($generated@@223 1396182291))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1695183700))) ($generated@@223 1695183700))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1986661051))) ($generated@@223 1986661051))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2177026350))) ($generated@@223 2177026350))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2456956037))) ($generated@@223 2456956037))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2730485921))) ($generated@@223 2730485921))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2820302411))) ($generated@@223 2820302411))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3259730800))) ($generated@@223 3259730800))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3345764771))) ($generated@@223 3345764771))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3516065817))) ($generated@@223 3516065817))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3600352804))) ($generated@@223 3600352804))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 4094571909))) ($generated@@223 4094571909))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 275423344))) ($generated@@223 275423344))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 430227734))) ($generated@@223 430227734))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 506948616))) ($generated@@223 506948616))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 659060556))) ($generated@@223 659060556))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 883997877))) ($generated@@223 883997877))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 958139571))) ($generated@@223 958139571))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1322822218))) ($generated@@223 1322822218))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1537002063))) ($generated@@223 1537002063))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1747873779))) ($generated@@223 1747873779))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 1955562222))) ($generated@@223 1955562222))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2024104815))) ($generated@@223 2024104815))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2227730452))) ($generated@@223 2227730452))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2361852424))) ($generated@@223 2361852424))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2428436474))) ($generated@@223 2428436474))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 2756734187))) ($generated@@223 2756734187))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3204031479))) ($generated@@223 3204031479))) ($generated@@253 $generated@@616 $generated@@624 ($generated@@223 ($generated@@73 ($generated@@223 3329325298))) ($generated@@223 3329325298))))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3329325298) 3329325298))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3204031479) 3204031479))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2756734187) 2756734187))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2428436474) 2428436474))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2361852424) 2361852424))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2227730452) 2227730452))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2024104815) 2024104815))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1955562222) 1955562222))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1747873779) 1747873779))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1537002063) 1537002063))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1322822218) 1322822218))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 958139571) 958139571))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 883997877) 883997877))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 659060556) 659060556))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 506948616) 506948616))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 430227734) 430227734))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 275423344) 275423344))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 4094571909) 4094571909))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3600352804) 3600352804))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3516065817) 3516065817))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3345764771) 3345764771))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3259730800) 3259730800))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2820302411) 2820302411))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2730485921) 2730485921))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2456956037) 2456956037))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2177026350) 2177026350))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1986661051) 1986661051))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1695183700) 1695183700))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1396182291) 1396182291))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1294757372) 1294757372))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 773529912) 773529912))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 666307205) 666307205))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 338241895) 338241895))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 113926993) 113926993))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3584528711) 3584528711))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3336571891) 3336571891))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3210313671) 3210313671))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2952996808) 2952996808))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2821834349) 2821834349))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2554220882) 2554220882))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1996064986) 1996064986))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1555081692) 1555081692))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1249150122) 1249150122))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 770255983) 770255983))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 604807628) 604807628))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 264347078) 264347078))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 4022224774) 4022224774))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3835390401) 3835390401))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3248222580) 3248222580))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2614888103) 2614888103))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2162078206) 2162078206))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1925078388) 1925078388))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1426881987) 1426881987))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 607225278) 607225278))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 310598401) 310598401))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3624381080) 3624381080))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2870763221) 2870763221))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 2453635748) 2453635748))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1508970993) 1508970993))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 961987163) 961987163))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3921009573) 3921009573))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 3049323471) 3049323471))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1899447441) 1899447441))
 :pattern ( ($generated@@253 $generated@@616 $generated@@624 ($generated@@73 1116352408) 1116352408))
)))))))
(let (($generated@@625  (=> (and (and ($generated@@243 $generated@@619) ($generated@@621 $generated@@619)) (and (= 2 $generated@@72) (= (ControlFlow 0 3) 2))) $generated@@623)))
$generated@@625)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
