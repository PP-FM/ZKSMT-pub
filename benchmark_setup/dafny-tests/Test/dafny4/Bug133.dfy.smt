(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U Int Int) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@231 (T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@239 () Int)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 (Int Int) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@T) T@U)
(declare-fun $generated@@445 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@133 $generated@@136)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@136))
))) (= (type $generated@@135) $generated@@134)))
(assert (forall (($generated@@137 T@U) ($generated@@138 Int) ($generated@@139 Int) ) (!  (=> (= (type $generated@@137) $generated@@134) (= ($generated@@132 $generated@@137 $generated@@138 $generated@@139) ($generated@@132 $generated@@135 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 15) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@64) (= (type $generated@@148) $generated@@64)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 16) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@64)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 17)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@67 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@77) (= (type $generated@@213) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@214) ($generated@@66 $generated@@4))) (= (type $generated@@216) $generated@@77)) (= (type $generated@@217) ($generated@@66 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@67 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@77) (= (type $generated@@225) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@226) ($generated@@66 $generated@@4))) (= (type $generated@@228) $generated@@77)) (= (type $generated@@229) ($generated@@66 $generated@@230))) (= ($generated@@0 ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@231 $generated@@233 $generated@@234)) $generated@@144)
 :pattern ( ($generated@@231 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@64) (= (type $generated@@236) $generated@@64)) (= (type $generated@@237) $generated@@153)) (= (type $generated@@238) $generated@@153)) (= ($generated@@140 ($generated@@231 $generated@@237 $generated@@238) ($generated@@143 $generated@@235 $generated@@236))  (and ($generated@@232 $generated@@237 $generated@@235) ($generated@@232 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@140 ($generated@@231 $generated@@237 $generated@@238) ($generated@@143 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@240 $generated@@242)) $generated@@134)
 :pattern ( ($generated@@240 $generated@@242))
)))
(assert  (=> (<= 0 $generated@@239) (forall (($generated@@243 T@U) ($generated@@244 Int) ($generated@@245 Int) ) (!  (=> (and (= (type $generated@@243) $generated@@134) (or ($generated@@241 $generated@@244 $generated@@245) (and (not (= 0 $generated@@239)) (> $generated@@245 0)))) (and (and (=> (< $generated@@244 0) ($generated@@241 (+ $generated@@244 $generated@@245) $generated@@245)) (=> (<= 0 $generated@@244) (=> (<= $generated@@245 $generated@@244) ($generated@@241 (- $generated@@244 $generated@@245) $generated@@245)))) (= ($generated@@132 ($generated@@240 $generated@@243) $generated@@244 $generated@@245) (ite (< $generated@@244 0) (+ (- 0 1) ($generated@@132 $generated@@243 (+ $generated@@244 $generated@@245) $generated@@245)) (ite (< $generated@@244 $generated@@245) 0 (+ 1 ($generated@@132 $generated@@243 (- $generated@@244 $generated@@245) $generated@@245)))))))
 :pattern ( ($generated@@132 ($generated@@240 $generated@@243) $generated@@244 $generated@@245))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@144) (= (type $generated@@247) $generated@@144)) (= ($generated@@150 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@150 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@64)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@140 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@153) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@232 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@140 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@256) $generated@@64)) (= ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@153) ($generated@@0 ($generated@@81 $generated@@255 $generated@@257))) ($generated@@232 $generated@@257 $generated@@256))
 :pattern ( ($generated@@81 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@64) (= (type $generated@@267) $generated@@64)) (= (type $generated@@268) $generated@@153)) (= (type $generated@@269) $generated@@153)) (= (type $generated@@270) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@264 $generated@@270)) (= ($generated@@74 ($generated@@231 $generated@@268 $generated@@269) ($generated@@143 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@74 ($generated@@231 $generated@@268 $generated@@269) ($generated@@143 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@68)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@144) (= ($generated@@142 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@144) ($generated@@142 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@153) (= (type $generated@@276) $generated@@153)) (= $generated@@274 ($generated@@231 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@142 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 18)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@153)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@64) (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@265 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@74 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@265 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@76 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@79 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@76 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@81 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 19)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@76 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 20)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@79 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@76 $generated@@333 $generated@@2)) (= ($generated@@159 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@81 $generated@@332 $generated@@334))) (<= ($generated ($generated@@81 $generated@@332 $generated@@334)) ($generated@@290 $generated@@332))))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@159 $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@300 (type $generated@@335))))
(let (($generated@@337 ($generated@@299 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@298 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@297 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@296 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@300 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@300 (type $generated@@342))))
(let (($generated@@344 ($generated@@299 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@298 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@297 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@318 (type $generated@@346))))
(let (($generated@@348 ($generated@@317 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@316 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@315 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@314 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@318 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@318 (type $generated@@353))))
(let (($generated@@355 ($generated@@317 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@316 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@315 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 Int) ($generated@@359 Int) ) (!  (=> (= (type $generated@@357) $generated@@134) (= ($generated@@132 ($generated@@240 $generated@@357) $generated@@358 $generated@@359) ($generated@@132 $generated@@357 $generated@@358 $generated@@359)))
 :pattern ( ($generated@@132 ($generated@@240 $generated@@357) $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@361) $generated@@64)) (= ($generated@@140 $generated@@360 ($generated@@158 $generated@@361)) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@153) (< 0 ($generated ($generated@@81 $generated@@360 $generated@@362)))) ($generated@@232 $generated@@362 $generated@@361))
 :pattern ( ($generated@@81 $generated@@360 $generated@@362))
))))
 :pattern ( ($generated@@140 $generated@@360 ($generated@@158 $generated@@361)))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@364) $generated@@64)) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@363 ($generated@@248 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@153) ($generated@@0 ($generated@@81 $generated@@363 $generated@@366))) ($generated@@265 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@81 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@74 $generated@@363 ($generated@@248 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@368) $generated@@64)) (= (type $generated@@369) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@367 ($generated@@253 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@153) ($generated@@0 ($generated@@81 $generated@@367 $generated@@370))) ($generated@@265 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@81 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@74 $generated@@367 ($generated@@253 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(= ($generated ($generated@@81 ($generated@@291 $generated@@372) $generated@@371)) 0))
 :pattern ( (let (($generated@@372 (type $generated@@371)))
($generated@@81 ($generated@@291 $generated@@372) $generated@@371)))
)))
(assert  (and (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@373 $generated@@376)) ($generated@@76 $generated@@153 $generated@@4))
 :pattern ( ($generated@@373 $generated@@376))
)) (forall (($generated@@377 T@T) ($generated@@378 T@U) ) (! (= (type ($generated@@374 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@374 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@300 (type $generated@@379))))
(let (($generated@@381 ($generated@@299 (type $generated@@379))))
(= (type ($generated@@375 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@375 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@298 $generated@@153 $generated@@153)) (= (type $generated@@383) $generated@@153)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@382) ($generated@@151 ($generated@@374 $generated@@144 $generated@@383)))) (= ($generated@@81 ($generated@@375 $generated@@382) ($generated@@151 ($generated@@374 $generated@@144 $generated@@383))) ($generated@@152 ($generated@@374 $generated@@144 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@382) $generated@@383))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@76 $generated@@153 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@318 (type $generated@@387))))
(let (($generated@@389 ($generated@@317 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@316 $generated@@153 $generated@@153)) (= (type $generated@@391) $generated@@153)) (= ($generated@@0 ($generated@@81 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@390) ($generated@@151 ($generated@@374 $generated@@144 $generated@@391)))) (= ($generated@@81 ($generated@@385 $generated@@390) ($generated@@151 ($generated@@374 $generated@@144 $generated@@391))) ($generated@@152 ($generated@@374 $generated@@144 $generated@@391))))))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@299 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@298 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@81 ($generated@@375 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@317 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@316 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@81 ($generated@@385 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@397) $generated@@398))
)))
(assert  (=> (<= 0 $generated@@239) (forall (($generated@@402 T@U) ($generated@@403 Int) ($generated@@404 Int) ) (!  (=> (and (= (type $generated@@402) $generated@@134) (or ($generated@@241 $generated@@403 $generated@@404) (and (not (= 0 $generated@@239)) (> $generated@@404 0)))) true)
 :pattern ( ($generated@@132 $generated@@402 $generated@@403 $generated@@404))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@298 $generated@@153 $generated@@153)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@408) $generated@@412))) (and ($generated@@265 ($generated@@81 ($generated@@375 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@265 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@316 $generated@@153 $generated@@153)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@416) $generated@@420))) (and ($generated@@265 ($generated@@81 ($generated@@385 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@265 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@T) ) (! (= (type ($generated@@421 $generated@@422)) ($generated@@76 $generated@@422 $generated@@4))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@318 (type $generated@@423))))
(let (($generated@@425 ($generated@@317 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@316 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@315 $generated@@425 $generated@@424)) (= ($generated@@314 $generated@@423) ($generated@@421 $generated@@425))))))
 :pattern ( ($generated@@314 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@318 (type $generated@@426))))
(let (($generated@@428 ($generated@@317 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@316 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@315 $generated@@428 $generated@@427)) (= ($generated@@350 $generated@@426) ($generated@@421 $generated@@427))))))
 :pattern ( ($generated@@350 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@318 (type $generated@@429))))
(let (($generated@@431 ($generated@@317 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@316 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@315 $generated@@431 $generated@@430)) (= ($generated@@384 $generated@@429) ($generated@@421 $generated@@153))))))
 :pattern ( ($generated@@384 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@300 (type $generated@@432))))
(let (($generated@@434 ($generated@@299 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@298 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@297 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@153) (= (type $generated@@436) $generated@@153)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@432) ($generated@@285 ($generated@@231 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@373 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@318 (type $generated@@437))))
(let (($generated@@439 ($generated@@317 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@316 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@315 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@153) (= (type $generated@@441) $generated@@153)) ($generated@@0 ($generated@@81 ($generated@@384 $generated@@437) ($generated@@285 ($generated@@231 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@384 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@153) ($generated@@232 $generated@@442 $generated@@46)) (and (= ($generated@@285 ($generated@@374 $generated@@2 $generated@@442)) $generated@@442) ($generated@@140 ($generated@@374 $generated@@2 $generated@@442) $generated@@46)))
 :pattern ( ($generated@@232 $generated@@442 $generated@@46))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@153) ($generated@@232 $generated@@443 $generated@@47)) (and (= ($generated@@285 ($generated@@374 $generated@@3 $generated@@443)) $generated@@443) ($generated@@140 ($generated@@374 $generated@@3 $generated@@443) $generated@@47)))
 :pattern ( ($generated@@232 $generated@@443 $generated@@47))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@153) ($generated@@232 $generated@@444 $generated@@44)) (and (= ($generated@@285 ($generated@@374 $generated@@4 $generated@@444)) $generated@@444) ($generated@@140 ($generated@@374 $generated@@4 $generated@@444) $generated@@44)))
 :pattern ( ($generated@@232 $generated@@444 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@445) 21))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@153) ($generated@@232 $generated@@446 $generated@@45)) (and (= ($generated@@285 ($generated@@374 $generated@@445 $generated@@446)) $generated@@446) ($generated@@140 ($generated@@374 $generated@@445 $generated@@446) $generated@@45)))
 :pattern ( ($generated@@232 $generated@@446 $generated@@45))
)))
(assert  (=> (<= 0 $generated@@239) (forall (($generated@@447 T@U) ($generated@@448 Int) ($generated@@449 Int) ) (!  (=> (and (= (type $generated@@447) $generated@@134) (or ($generated@@241 ($generated@@258 $generated@@448) ($generated@@258 $generated@@449)) (and (not (= 0 $generated@@239)) ($generated@@0 ($generated@@260 ($generated@@11 (> $generated@@449 0))))))) (and (and (=> ($generated@@0 ($generated@@260 ($generated@@11 (< $generated@@448 0)))) ($generated@@241 ($generated@@258 (+ $generated@@448 $generated@@449)) ($generated@@258 $generated@@449))) (=> (not ($generated@@0 ($generated@@260 ($generated@@11 (< $generated@@448 0))))) (=> (not ($generated@@0 ($generated@@260 ($generated@@11 (< $generated@@448 $generated@@449))))) ($generated@@241 ($generated@@258 (- $generated@@448 $generated@@449)) ($generated@@258 $generated@@449))))) (= ($generated@@132 ($generated@@240 $generated@@447) ($generated@@258 $generated@@448) ($generated@@258 $generated@@449)) (ite (< $generated@@448 0) (+ (- 0 1) ($generated@@132 ($generated@@240 $generated@@447) ($generated@@258 (+ $generated@@448 $generated@@449)) ($generated@@258 $generated@@449))) (ite (< $generated@@448 $generated@@449) 0 (+ 1 ($generated@@132 ($generated@@240 $generated@@447) ($generated@@258 (- $generated@@448 $generated@@449)) ($generated@@258 $generated@@449))))))))
 :weight 3
 :pattern ( ($generated@@132 ($generated@@240 $generated@@447) ($generated@@258 $generated@@448) ($generated@@258 $generated@@449)))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@64) (= ($generated@@232 ($generated@@285 $generated@@450) $generated@@451) ($generated@@140 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@232 ($generated@@285 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@79 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@76 $generated@@453 $generated@@2)) (<= 0 ($generated@@290 $generated@@452))))
 :pattern ( ($generated@@290 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@280 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@279 $generated@@455)) (<= 0 ($generated@@278 $generated@@454))))
 :pattern ( ($generated@@278 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@405 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@405 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@405 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@405 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@413 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@413 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@413 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@413 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@72 ($generated@@413 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@153) (= (type $generated@@477) $generated@@153)) (= ($generated@@271 ($generated@@231 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@231 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@143 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@143 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@143 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@143 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@153) (= (type $generated@@487) $generated@@153)) (= ($generated@@151 ($generated@@231 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@231 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@153) (= (type $generated@@489) $generated@@153)) (= ($generated@@152 ($generated@@231 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@231 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@280 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@279 $generated@@153)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@278 $generated@@496))) ($generated@@265 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@74 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@75 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@75 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@248 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@248 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@248 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@253 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@253 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@158 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@158 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@158 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@374 $generated@@519 ($generated@@285 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@285 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@298 $generated@@153 $generated@@153)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@140 $generated@@520 ($generated@@405 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@520) $generated@@523))) (and ($generated@@232 ($generated@@81 ($generated@@375 $generated@@520) $generated@@523) $generated@@522) ($generated@@232 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@520) $generated@@523))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@140 $generated@@520 ($generated@@405 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@316 $generated@@153 $generated@@153)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@140 $generated@@524 ($generated@@413 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@524) $generated@@527))) (and ($generated@@232 ($generated@@81 ($generated@@385 $generated@@524) $generated@@527) $generated@@526) ($generated@@232 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@524) $generated@@527))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@140 $generated@@524 ($generated@@413 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@153) (= (type $generated@@531) $generated@@153)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@231 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@231 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@153) (= (type $generated@@533) $generated@@153)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@231 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@231 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@153) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@232 $generated@@534 ($generated@@405 $generated@@535 $generated@@536))) (and (= ($generated@@285 ($generated@@374 ($generated@@298 $generated@@153 $generated@@153) $generated@@534)) $generated@@534) ($generated@@140 ($generated@@374 ($generated@@298 $generated@@153 $generated@@153) $generated@@534) ($generated@@405 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@232 $generated@@534 ($generated@@405 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@153) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@232 $generated@@537 ($generated@@413 $generated@@538 $generated@@539))) (and (= ($generated@@285 ($generated@@374 ($generated@@316 $generated@@153 $generated@@153) $generated@@537)) $generated@@537) ($generated@@140 ($generated@@374 ($generated@@316 $generated@@153 $generated@@153) $generated@@537) ($generated@@413 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@232 $generated@@537 ($generated@@413 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@153)) ($generated@@232 $generated@@542 ($generated@@143 $generated@@540 $generated@@541))) (and (= ($generated@@285 ($generated@@374 $generated@@144 $generated@@542)) $generated@@542) ($generated@@140 ($generated@@374 $generated@@144 $generated@@542) ($generated@@143 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@232 $generated@@542 ($generated@@143 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@81 ($generated@@421 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@81 ($generated@@421 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@69)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (and (= ($generated@@72 ($generated@@143 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@143 $generated@@547 $generated@@548)) $generated@@63)))
 :pattern ( ($generated@@143 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@144) (= ($generated@@528 ($generated@@285 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@285 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@153) ($generated@@232 $generated@@550 ($generated@@75 0))) (and (= ($generated@@285 ($generated@@374 $generated@@2 $generated@@550)) $generated@@550) ($generated@@140 ($generated@@374 ($generated@@76 $generated@@153 $generated@@4) $generated@@550) ($generated@@75 0))))
 :pattern ( ($generated@@232 $generated@@550 ($generated@@75 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@153) (= (type $generated@@552) $generated@@64)) ($generated@@232 $generated@@551 ($generated@@248 $generated@@552))) (and (= ($generated@@285 ($generated@@374 ($generated@@76 $generated@@153 $generated@@4) $generated@@551)) $generated@@551) ($generated@@140 ($generated@@374 ($generated@@76 $generated@@153 $generated@@4) $generated@@551) ($generated@@248 $generated@@552))))
 :pattern ( ($generated@@232 $generated@@551 ($generated@@248 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@153) (= (type $generated@@554) $generated@@64)) ($generated@@232 $generated@@553 ($generated@@253 $generated@@554))) (and (= ($generated@@285 ($generated@@374 ($generated@@76 $generated@@153 $generated@@4) $generated@@553)) $generated@@553) ($generated@@140 ($generated@@374 ($generated@@76 $generated@@153 $generated@@4) $generated@@553) ($generated@@253 $generated@@554))))
 :pattern ( ($generated@@232 $generated@@553 ($generated@@253 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@153) (= (type $generated@@556) $generated@@64)) ($generated@@232 $generated@@555 ($generated@@158 $generated@@556))) (and (= ($generated@@285 ($generated@@374 ($generated@@76 $generated@@153 $generated@@2) $generated@@555)) $generated@@555) ($generated@@140 ($generated@@374 ($generated@@76 $generated@@153 $generated@@2) $generated@@555) ($generated@@158 $generated@@556))))
 :pattern ( ($generated@@232 $generated@@555 ($generated@@158 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@153) (= (type $generated@@558) $generated@@64)) ($generated@@232 $generated@@557 ($generated@@490 $generated@@558))) (and (= ($generated@@285 ($generated@@374 ($generated@@279 $generated@@153) $generated@@557)) $generated@@557) ($generated@@140 ($generated@@374 ($generated@@279 $generated@@153) $generated@@557) ($generated@@490 $generated@@558))))
 :pattern ( ($generated@@232 $generated@@557 ($generated@@490 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@559 ($generated@@158 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@153) (< 0 ($generated ($generated@@81 $generated@@559 $generated@@562)))) ($generated@@265 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@81 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@158 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@144) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@264 $generated@@565) (and ($generated@@142 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@143 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@143 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@265 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@265 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@144) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@264 $generated@@569) (and ($generated@@142 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@64) ($generated@@74 $generated@@567 ($generated@@143 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@143 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@265 ($generated@@152 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@265 ($generated@@152 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@153) (= (type $generated@@572) $generated@@153)) (= ($generated@@231 ($generated@@260 $generated@@571) ($generated@@260 $generated@@572)) ($generated@@260 ($generated@@231 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@231 ($generated@@260 $generated@@571) ($generated@@260 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@258 $generated@@573))) ($generated@@260 ($generated@@285 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@258 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@285 ($generated@@260 $generated@@574)) ($generated@@260 ($generated@@285 $generated@@574)))
 :pattern ( ($generated@@285 ($generated@@260 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@280 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@279 $generated@@576)) (= ($generated@@278 $generated@@575) 0)) (= $generated@@575 ($generated@@277 $generated@@576))))
 :pattern ( ($generated@@278 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@76 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@290 ($generated@@82 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@290 $generated@@577) ($generated ($generated@@81 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@290 ($generated@@82 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@2)) ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@3)) ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@4)) ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@445)) ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@153)) ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@279 $generated@@153)) (= (type $generated@@592) $generated@@64)) (= ($generated@@140 $generated@@591 ($generated@@490 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@278 $generated@@591))) ($generated@@232 ($generated@@491 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@491 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@140 $generated@@591 ($generated@@490 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@279 $generated@@153)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@278 $generated@@595))) (< ($generated@@529 ($generated@@374 $generated@@144 ($generated@@491 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@529 ($generated@@374 $generated@@144 ($generated@@491 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@298 $generated@@153 $generated@@153)) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) $generated@@64)) ($generated@@140 $generated@@597 ($generated@@405 $generated@@598 $generated@@599))) (and (and ($generated@@140 ($generated@@296 $generated@@597) ($generated@@248 $generated@@598)) ($generated@@140 ($generated@@339 $generated@@597) ($generated@@248 $generated@@599))) ($generated@@140 ($generated@@373 $generated@@597) ($generated@@248 ($generated@@143 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@140 $generated@@597 ($generated@@405 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@316 $generated@@153 $generated@@153)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@140 $generated@@600 ($generated@@413 $generated@@601 $generated@@602))) (and (and ($generated@@140 ($generated@@314 $generated@@600) ($generated@@253 $generated@@601)) ($generated@@140 ($generated@@350 $generated@@600) ($generated@@253 $generated@@602))) ($generated@@140 ($generated@@384 $generated@@600) ($generated@@253 ($generated@@143 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@140 $generated@@600 ($generated@@413 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@140 $generated@@603 $generated@@46))
 :pattern ( ($generated@@140 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@140 $generated@@604 $generated@@47))
 :pattern ( ($generated@@140 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@140 $generated@@605 $generated@@44))
 :pattern ( ($generated@@140 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@445) ($generated@@140 $generated@@606 $generated@@45))
 :pattern ( ($generated@@140 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@153) ($generated@@140 $generated@@607 $generated@@48))
 :pattern ( ($generated@@140 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@611) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@613) ($generated@@165 $generated@@77 $generated@@4))) (= (type $generated@@614) $generated@@77)) (= (type $generated@@615) ($generated@@165 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@617  (=> (and (and (<= $generated@@608 $generated@@609) (= $generated@@610 (- $generated@@609 $generated@@608))) (and ($generated@@74 ($generated@@8 $generated@@610) $generated@@46 $generated@@611) ($generated@@74 ($generated@@8 $generated@@608) $generated@@46 $generated@@611))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (> $generated@@608 0)) (=> (> $generated@@608 0) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (<= 0 (ite (< $generated@@609 0) (- $generated@@608 $generated@@609) $generated@@609)) (= (ite (< $generated@@610 0) (- $generated@@608 $generated@@610) $generated@@610) (ite (< $generated@@609 0) (- $generated@@608 $generated@@609) $generated@@609)))) (=> (or (<= 0 (ite (< $generated@@609 0) (- $generated@@608 $generated@@609) $generated@@609)) (= (ite (< $generated@@610 0) (- $generated@@608 $generated@@610) $generated@@610) (ite (< $generated@@609 0) (- $generated@@608 $generated@@609) $generated@@609))) (=> (= (ControlFlow 0 8) (- 0 7)) (< (ite (< $generated@@610 0) (- $generated@@608 $generated@@610) $generated@@610) (ite (< $generated@@609 0) (- $generated@@608 $generated@@609) $generated@@609))))))))))
(let (($generated@@618 true))
(let (($generated@@619  (=> (<= 0 $generated@@609) (and (=> (= (ControlFlow 0 11) 6) $generated@@618) (=> (= (ControlFlow 0 11) 8) $generated@@617)))))
(let (($generated@@620  (=> (and (and (< $generated@@609 0) (= $generated@@612 (+ $generated@@609 $generated@@608))) (and ($generated@@74 ($generated@@8 $generated@@612) $generated@@46 $generated@@611) ($generated@@74 ($generated@@8 $generated@@608) $generated@@46 $generated@@611))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (> $generated@@608 0)) (=> (> $generated@@608 0) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (<= 0 (ite (< $generated@@609 0) (- $generated@@608 $generated@@609) $generated@@609)) (= (ite (< $generated@@612 0) (- $generated@@608 $generated@@612) $generated@@612) (ite (< $generated@@609 0) (- $generated@@608 $generated@@609) $generated@@609)))) (=> (or (<= 0 (ite (< $generated@@609 0) (- $generated@@608 $generated@@609) $generated@@609)) (= (ite (< $generated@@612 0) (- $generated@@608 $generated@@612) $generated@@612) (ite (< $generated@@609 0) (- $generated@@608 $generated@@609) $generated@@609))) (=> (= (ControlFlow 0 3) (- 0 2)) (< (ite (< $generated@@612 0) (- $generated@@608 $generated@@612) $generated@@612) (ite (< $generated@@609 0) (- $generated@@608 $generated@@609) $generated@@609))))))))))
(let (($generated@@621  (=> (= $generated@@613 ($generated@@219 $generated@@614 $generated@@611 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 3) $generated@@620) (=> (= (ControlFlow 0 12) 11) $generated@@619)))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (<= 0 $generated@@609) (and (=> (= (ControlFlow 0 14) 1) $generated@@622) (=> (= (ControlFlow 0 14) 12) $generated@@621)))))
(let (($generated@@624  (=> (< $generated@@609 0) (and (=> (= (ControlFlow 0 13) 1) $generated@@622) (=> (= (ControlFlow 0 13) 12) $generated@@621)))))
(let (($generated@@625  (=> (and (= $generated@@615 ($generated@@164 $generated@@614 $generated@@611 $generated@@60 false)) (> $generated@@608 0)) (and (=> (= (ControlFlow 0 15) 13) $generated@@624) (=> (= (ControlFlow 0 15) 14) $generated@@623)))))
(let (($generated@@626  (=> (and (and ($generated@@264 $generated@@611) ($generated@@616 $generated@@611)) (and (= 0 $generated@@239) (= (ControlFlow 0 16) 15))) $generated@@625)))
$generated@@626)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
