(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U) Int)
(declare-fun $generated@@212 (T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@T T@T) T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@T) T@T)
(declare-fun $generated@@216 (T@T) T@T)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U T@U) Bool)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@456 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@565 (T@T) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@635 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert  (and (and (and (and (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@217 $generated@@218)) 17)) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@215 ($generated@@213 $generated@@219 $generated@@220)) $generated@@219)
 :pattern ( ($generated@@213 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@216 ($generated@@213 $generated@@221 $generated@@222)) $generated@@222)
 :pattern ( ($generated@@213 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@224)))
(= (type ($generated@@212 $generated@@223 $generated@@224 $generated@@225)) ($generated@@213 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@212 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@215 (type $generated@@228))))
(= (type ($generated@@214 $generated@@228)) ($generated@@76 $generated@@229 $generated@@4)))
 :pattern ( ($generated@@214 $generated@@228))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(let (($generated@@234 (type $generated@@231)))
 (=> (and (= (type $generated@@230) ($generated@@213 $generated@@234 $generated@@233)) ($generated@@0 ($generated@@81 ($generated@@214 $generated@@230) $generated@@231))) (= ($generated@@211 ($generated@@212 $generated@@230 $generated@@231 $generated@@232)) ($generated@@211 $generated@@230)))))
 :pattern ( ($generated@@211 ($generated@@212 $generated@@230 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@136)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= ($generated@@132 ($generated@@235 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@132 ($generated@@235 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@136) (= (type $generated@@244) $generated@@136)) (= ($generated@@142 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@142 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@132 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@145) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@132 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@132 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@145) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@132 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@255 $generated@@256) $generated@@256)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) $generated@@64)) (= (type $generated@@265) $generated@@145)) (= (type $generated@@266) $generated@@145)) (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@261 $generated@@267)) (= ($generated@@74 ($generated@@235 $generated@@265 $generated@@266) ($generated@@135 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@265 $generated@@266) ($generated@@135 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(let (($generated@@272 (type $generated@@269)))
 (=> (and (= (type $generated@@268) ($generated@@213 $generated@@272 $generated@@271)) (not ($generated@@0 ($generated@@81 ($generated@@214 $generated@@268) $generated@@269)))) (= ($generated@@211 ($generated@@212 $generated@@268 $generated@@269 $generated@@270)) (+ ($generated@@211 $generated@@268) 1)))))
 :pattern ( ($generated@@211 ($generated@@212 $generated@@268 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@68)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@136) (= ($generated@@134 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@136) ($generated@@134 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@145) (= (type $generated@@278) $generated@@145)) (= $generated@@276 ($generated@@235 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@134 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 18)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@145)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@64) (= (type $generated@@291) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@262 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@74 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@262 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@76 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@79 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@76 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@81 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@298 $generated@@299 $generated@@300)) ($generated@@213 $generated@@299 $generated@@300))
 :pattern ( ($generated@@298 $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@81 ($generated@@214 ($generated@@298 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@81 ($generated@@214 ($generated@@298 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@323))))
 (=> (and (= (type $generated@@323) ($generated@@76 $generated@@325 $generated@@4)) (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@4))) (= ($generated@@322 $generated@@323 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (= ($generated@@0 ($generated@@81 $generated@@323 $generated@@326)) ($generated@@0 ($generated@@81 $generated@@324 $generated@@326))))
 :pattern ( ($generated@@81 $generated@@323 $generated@@326))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@322 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@151 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@292 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@151 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@216 (type $generated@@330))))
(let (($generated@@332 ($generated@@215 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@213 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@298 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@214 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@214 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@216 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@216 (type $generated@@337))))
(let (($generated@@339 ($generated@@215 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@213 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@298 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@308 (type $generated@@341))))
(let (($generated@@343 ($generated@@307 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@306 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@305 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@304 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@308 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@308 (type $generated@@348))))
(let (($generated@@350 ($generated@@307 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@306 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@305 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@132 $generated@@352 ($generated@@150 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@132 $generated@@352 ($generated@@150 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@216 (type $generated@@355))))
(let (($generated@@357 ($generated@@215 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@213 $generated@@357 $generated@@356)) (= (= ($generated@@211 $generated@@355) 0) (= $generated@@355 ($generated@@298 $generated@@357 $generated@@356))))))
 :pattern ( ($generated@@211 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@245 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@145) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@262 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@245 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@362 ($generated@@250 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@145) ($generated@@0 ($generated@@81 $generated@@362 $generated@@365))) ($generated@@262 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@74 $generated@@362 ($generated@@250 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@81 ($generated@@293 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@81 ($generated@@293 $generated@@367) $generated@@366)))
)))
(assert  (and (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@368 $generated@@371)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@368 $generated@@371))
)) (forall (($generated@@372 T@T) ($generated@@373 T@U) ) (! (= (type ($generated@@369 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@369 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@216 (type $generated@@374))))
(let (($generated@@376 ($generated@@215 (type $generated@@374))))
(= (type ($generated@@370 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@370 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@213 $generated@@145 $generated@@145)) (= (type $generated@@378) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@214 $generated@@377) ($generated@@143 ($generated@@369 $generated@@136 $generated@@378)))) (= ($generated@@81 ($generated@@370 $generated@@377) ($generated@@143 ($generated@@369 $generated@@136 $generated@@378))) ($generated@@144 ($generated@@369 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@308 (type $generated@@382))))
(let (($generated@@384 ($generated@@307 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@386) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@385) ($generated@@143 ($generated@@369 $generated@@136 $generated@@386)))) (= ($generated@@81 ($generated@@380 $generated@@385) ($generated@@143 ($generated@@369 $generated@@136 $generated@@386))) ($generated@@144 ($generated@@369 $generated@@136 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@215 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@213 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@214 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@214 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@307 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@306 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@213 $generated@@145 $generated@@145)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@214 $generated@@400) $generated@@404))) (and ($generated@@262 ($generated@@81 ($generated@@370 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@262 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@214 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@408) $generated@@412))) (and ($generated@@262 ($generated@@81 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@262 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@79 (type $generated@@413))))
 (=> (and (and (= (type $generated@@413) ($generated@@76 $generated@@415 $generated@@4)) (= (type $generated@@414) ($generated@@76 $generated@@415 $generated@@4))) ($generated@@322 $generated@@413 $generated@@414)) (= $generated@@413 $generated@@414)))
 :pattern ( ($generated@@322 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(= (type ($generated@@416 $generated@@417 $generated@@418)) ($generated@@76 $generated@@419 $generated@@4)))
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@421)))
 (=> (and (and (= (type $generated@@420) ($generated@@76 $generated@@423 $generated@@4)) (= (type $generated@@422) $generated@@423)) ($generated@@0 ($generated@@81 $generated@@420 $generated@@422))) ($generated@@0 ($generated@@81 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))))
 :pattern ( ($generated@@416 $generated@@420 $generated@@421) ($generated@@81 $generated@@420 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@425)))
 (=> (and (= (type $generated@@424) ($generated@@76 $generated@@427 $generated@@4)) (= (type $generated@@426) $generated@@427)) (= ($generated@@0 ($generated@@81 ($generated@@416 $generated@@424 $generated@@425) $generated@@426))  (or (= $generated@@426 $generated@@425) ($generated@@0 ($generated@@81 $generated@@424 $generated@@426))))))
 :pattern ( ($generated@@81 ($generated@@416 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@76 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@308 (type $generated@@430))))
(let (($generated@@432 ($generated@@307 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@306 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@305 $generated@@432 $generated@@431)) (= ($generated@@304 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@304 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@308 (type $generated@@433))))
(let (($generated@@435 ($generated@@307 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@306 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@305 $generated@@435 $generated@@434)) (= ($generated@@345 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@345 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@308 (type $generated@@436))))
(let (($generated@@438 ($generated@@307 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@306 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@305 $generated@@438 $generated@@437)) (= ($generated@@379 $generated@@436) ($generated@@428 $generated@@145))))))
 :pattern ( ($generated@@379 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@216 (type $generated@@439))))
(let (($generated@@441 ($generated@@215 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@213 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@298 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@145) (= (type $generated@@443) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@439) ($generated@@287 ($generated@@235 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@368 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@308 (type $generated@@444))))
(let (($generated@@446 ($generated@@307 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@306 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@305 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@145) (= (type $generated@@448) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@444) ($generated@@287 ($generated@@235 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@379 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@145) ($generated@@236 $generated@@449 $generated@@46)) (and (= ($generated@@287 ($generated@@369 $generated@@2 $generated@@449)) $generated@@449) ($generated@@132 ($generated@@369 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) ($generated@@236 $generated@@450 $generated@@47)) (and (= ($generated@@287 ($generated@@369 $generated@@3 $generated@@450)) $generated@@450) ($generated@@132 ($generated@@369 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) ($generated@@236 $generated@@451 $generated@@44)) (and (= ($generated@@287 ($generated@@369 $generated@@4 $generated@@451)) $generated@@451) ($generated@@132 ($generated@@369 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 20))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) ($generated@@236 $generated@@453 $generated@@45)) (and (= ($generated@@287 ($generated@@369 $generated@@452 $generated@@453)) $generated@@453) ($generated@@132 ($generated@@369 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@64) (= ($generated@@236 ($generated@@287 $generated@@454) $generated@@455) ($generated@@132 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@236 ($generated@@287 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@79 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@76 $generated@@458 $generated@@4)) (<= 0 ($generated@@456 $generated@@457))))
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@79 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@76 $generated@@460 $generated@@2)) (<= 0 ($generated@@292 $generated@@459))))
 :pattern ( ($generated@@292 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@282 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@281 $generated@@462)) (<= 0 ($generated@@280 $generated@@461))))
 :pattern ( ($generated@@280 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@216 (type $generated@@463))))
(let (($generated@@465 ($generated@@215 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@213 $generated@@465 $generated@@464)) (<= 0 ($generated@@211 $generated@@463)))))
 :pattern ( ($generated@@211 $generated@@463))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@397 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@397 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@397 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@397 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@405 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@405 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@405 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@405 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@145) (= (type $generated@@487) $generated@@145)) (= ($generated@@273 ($generated@@235 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@135 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@135 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@64) (= (type $generated@@495) $generated@@64)) (= ($generated@@492 ($generated@@135 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@135 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (= ($generated@@143 ($generated@@235 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@235 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@145)) (= ($generated@@144 ($generated@@235 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@235 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@282 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@281 $generated@@145)) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@280 $generated@@506))) ($generated@@262 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@74 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
 (=> (= (type $generated@@510) ($generated@@76 $generated@@512 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@416 $generated@@510 $generated@@511) $generated@@511))))
 :pattern ( ($generated@@416 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
 (=> (and (= (type $generated@@513) ($generated@@76 $generated@@515 $generated@@4)) ($generated@@0 ($generated@@81 $generated@@513 $generated@@514))) (= ($generated@@456 ($generated@@416 $generated@@513 $generated@@514)) ($generated@@456 $generated@@513))))
 :pattern ( ($generated@@456 ($generated@@416 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@517 Int) ) (! (= ($generated@@516 ($generated@@75 $generated@@517)) $generated@@517)
 :pattern ( ($generated@@75 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@518 ($generated@@245 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@245 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@521)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@522 ($generated@@250 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@250 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@525)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@526 ($generated@@150 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@150 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@529)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@64) (= ($generated@@530 ($generated@@500 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@500 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@72 ($generated@@500 $generated@@533)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@369 $generated@@535 ($generated@@287 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@287 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@213 $generated@@145 $generated@@145)) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) (= ($generated@@132 $generated@@536 ($generated@@397 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@214 $generated@@536) $generated@@539))) (and ($generated@@236 ($generated@@81 ($generated@@370 $generated@@536) $generated@@539) $generated@@538) ($generated@@236 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@536) $generated@@539))
 :pattern ( ($generated@@81 ($generated@@214 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@132 $generated@@536 ($generated@@397 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@64)) (= ($generated@@132 $generated@@540 ($generated@@405 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@540) $generated@@543))) (and ($generated@@236 ($generated@@81 ($generated@@380 $generated@@540) $generated@@543) $generated@@542) ($generated@@236 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@540) $generated@@543))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@132 $generated@@540 ($generated@@405 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@145)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@235 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@235 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@145)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@235 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@235 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
(let (($generated@@555 (type $generated@@551)))
 (=> (and (= (type $generated@@550) ($generated@@213 $generated@@555 $generated@@554)) (= (type $generated@@552) $generated@@555)) (and (=> (= $generated@@552 $generated@@551) (and ($generated@@0 ($generated@@81 ($generated@@214 ($generated@@212 $generated@@550 $generated@@551 $generated@@553)) $generated@@552)) (= ($generated@@81 ($generated@@370 ($generated@@212 $generated@@550 $generated@@551 $generated@@553)) $generated@@552) $generated@@553))) (=> (not (= $generated@@552 $generated@@551)) (and (= ($generated@@0 ($generated@@81 ($generated@@214 ($generated@@212 $generated@@550 $generated@@551 $generated@@553)) $generated@@552)) ($generated@@0 ($generated@@81 ($generated@@214 $generated@@550) $generated@@552))) (= ($generated@@81 ($generated@@370 ($generated@@212 $generated@@550 $generated@@551 $generated@@553)) $generated@@552) ($generated@@81 ($generated@@370 $generated@@550) $generated@@552))))))))
 :pattern ( ($generated@@81 ($generated@@214 ($generated@@212 $generated@@550 $generated@@551 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@81 ($generated@@370 ($generated@@212 $generated@@550 $generated@@551 $generated@@553)) $generated@@552))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) $generated@@64)) ($generated@@236 $generated@@556 ($generated@@397 $generated@@557 $generated@@558))) (and (= ($generated@@287 ($generated@@369 ($generated@@213 $generated@@145 $generated@@145) $generated@@556)) $generated@@556) ($generated@@132 ($generated@@369 ($generated@@213 $generated@@145 $generated@@145) $generated@@556) ($generated@@397 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@236 $generated@@556 ($generated@@397 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@145) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) $generated@@64)) ($generated@@236 $generated@@559 ($generated@@405 $generated@@560 $generated@@561))) (and (= ($generated@@287 ($generated@@369 ($generated@@306 $generated@@145 $generated@@145) $generated@@559)) $generated@@559) ($generated@@132 ($generated@@369 ($generated@@306 $generated@@145 $generated@@145) $generated@@559) ($generated@@405 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@236 $generated@@559 ($generated@@405 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@145)) ($generated@@236 $generated@@564 ($generated@@135 $generated@@562 $generated@@563))) (and (= ($generated@@287 ($generated@@369 $generated@@136 $generated@@564)) $generated@@564) ($generated@@132 ($generated@@369 $generated@@136 $generated@@564) ($generated@@135 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@236 $generated@@564 ($generated@@135 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@566 T@T) ) (! (= (type ($generated@@565 $generated@@566)) ($generated@@76 $generated@@566 $generated@@4))
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@81 ($generated@@565 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@81 ($generated@@565 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
 (not ($generated@@0 ($generated@@81 ($generated@@428 $generated@@570) $generated@@569))))
 :pattern ( (let (($generated@@570 (type $generated@@569)))
($generated@@81 ($generated@@428 $generated@@570) $generated@@569)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@69)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@64) (= (type $generated@@574) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@573 $generated@@574)) $generated@@62) (= ($generated@@571 ($generated@@135 $generated@@573 $generated@@574)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@136) (= ($generated@@544 ($generated@@287 $generated@@575)) ($generated@@545 $generated@@575)))
 :pattern ( ($generated@@544 ($generated@@287 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@216 (type $generated@@576))))
(let (($generated@@578 ($generated@@215 (type $generated@@576))))
 (=> (= (type $generated@@576) ($generated@@213 $generated@@578 $generated@@577)) (= ($generated@@456 ($generated@@214 $generated@@576)) ($generated@@211 $generated@@576)))))
 :pattern ( ($generated@@456 ($generated@@214 $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@216 (type $generated@@579))))
(let (($generated@@581 ($generated@@215 (type $generated@@579))))
 (=> (= (type $generated@@579) ($generated@@213 $generated@@581 $generated@@580)) (= ($generated@@456 ($generated@@368 $generated@@579)) ($generated@@211 $generated@@579)))))
 :pattern ( ($generated@@456 ($generated@@368 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@216 (type $generated@@582))))
(let (($generated@@584 ($generated@@215 (type $generated@@582))))
 (=> (= (type $generated@@582) ($generated@@213 $generated@@584 $generated@@583)) (<= ($generated@@456 ($generated@@334 $generated@@582)) ($generated@@211 $generated@@582)))))
 :pattern ( ($generated@@456 ($generated@@334 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@145) ($generated@@236 $generated@@585 ($generated@@75 0))) (and (= ($generated@@287 ($generated@@369 $generated@@2 $generated@@585)) $generated@@585) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@585) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@585 ($generated@@75 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@145) (= (type $generated@@587) $generated@@64)) ($generated@@236 $generated@@586 ($generated@@245 $generated@@587))) (and (= ($generated@@287 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@586)) $generated@@586) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@586) ($generated@@245 $generated@@587))))
 :pattern ( ($generated@@236 $generated@@586 ($generated@@245 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@145) (= (type $generated@@589) $generated@@64)) ($generated@@236 $generated@@588 ($generated@@250 $generated@@589))) (and (= ($generated@@287 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@588)) $generated@@588) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@588) ($generated@@250 $generated@@589))))
 :pattern ( ($generated@@236 $generated@@588 ($generated@@250 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@145) (= (type $generated@@591) $generated@@64)) ($generated@@236 $generated@@590 ($generated@@150 $generated@@591))) (and (= ($generated@@287 ($generated@@369 ($generated@@76 $generated@@145 $generated@@2) $generated@@590)) $generated@@590) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@2) $generated@@590) ($generated@@150 $generated@@591))))
 :pattern ( ($generated@@236 $generated@@590 ($generated@@150 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@145) (= (type $generated@@593) $generated@@64)) ($generated@@236 $generated@@592 ($generated@@500 $generated@@593))) (and (= ($generated@@287 ($generated@@369 ($generated@@281 $generated@@145) $generated@@592)) $generated@@592) ($generated@@132 ($generated@@369 ($generated@@281 $generated@@145) $generated@@592) ($generated@@500 $generated@@593))))
 :pattern ( ($generated@@236 $generated@@592 ($generated@@500 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@79 (type $generated@@594))))
 (=> (= (type $generated@@594) ($generated@@76 $generated@@595 $generated@@4)) (and (= (= ($generated@@456 $generated@@594) 0) (= $generated@@594 ($generated@@565 $generated@@595))) (=> (not (= ($generated@@456 $generated@@594) 0)) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@595) ($generated@@0 ($generated@@81 $generated@@594 $generated@@596)))
 :no-pattern (type $generated@@596)
 :no-pattern ($generated $generated@@596)
 :no-pattern ($generated@@0 $generated@@596)
))))))
 :pattern ( ($generated@@456 $generated@@594))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@597 ($generated@@150 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@597 $generated@@600)))) ($generated@@262 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@81 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@74 $generated@@597 ($generated@@150 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (=> (and (= (type $generated@@601) ($generated@@76 $generated@@603 $generated@@4)) (not ($generated@@0 ($generated@@81 $generated@@601 $generated@@602)))) (= ($generated@@456 ($generated@@416 $generated@@601 $generated@@602)) (+ ($generated@@456 $generated@@601) 1))))
 :pattern ( ($generated@@456 ($generated@@416 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@136) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@261 $generated@@606) (and ($generated@@134 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@64) ($generated@@74 $generated@@604 ($generated@@135 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@74 $generated@@604 ($generated@@135 $generated@@605 $generated@@607) $generated@@606))
))))) ($generated@@262 ($generated@@143 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@262 ($generated@@143 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@136) (= (type $generated@@609) $generated@@64)) (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@261 $generated@@610) (and ($generated@@134 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@64) ($generated@@74 $generated@@608 ($generated@@135 $generated@@611 $generated@@609) $generated@@610))
 :pattern ( ($generated@@74 $generated@@608 ($generated@@135 $generated@@611 $generated@@609) $generated@@610))
))))) ($generated@@262 ($generated@@144 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@262 ($generated@@144 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@145) (= (type $generated@@613) $generated@@145)) (= ($generated@@235 ($generated@@257 $generated@@612) ($generated@@257 $generated@@613)) ($generated@@257 ($generated@@235 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@235 ($generated@@257 $generated@@612) ($generated@@257 $generated@@613)))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@255 $generated@@614))) ($generated@@257 ($generated@@287 ($generated@@8 $generated@@614))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@255 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ) (! (= ($generated@@287 ($generated@@257 $generated@@615)) ($generated@@257 ($generated@@287 $generated@@615)))
 :pattern ( ($generated@@287 ($generated@@257 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@282 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@281 $generated@@617)) (= ($generated@@280 $generated@@616) 0)) (= $generated@@616 ($generated@@279 $generated@@617))))
 :pattern ( ($generated@@280 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@76 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@292 ($generated@@82 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@292 $generated@@618) ($generated ($generated@@81 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@292 ($generated@@82 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@623) $generated@@2)) ($generated@@74 $generated@@623 $generated@@46 $generated@@622))
 :pattern ( ($generated@@74 $generated@@623 $generated@@46 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@625) $generated@@3)) ($generated@@74 $generated@@625 $generated@@47 $generated@@624))
 :pattern ( ($generated@@74 $generated@@625 $generated@@47 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@627) $generated@@4)) ($generated@@74 $generated@@627 $generated@@44 $generated@@626))
 :pattern ( ($generated@@74 $generated@@627 $generated@@44 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@629) $generated@@452)) ($generated@@74 $generated@@629 $generated@@45 $generated@@628))
 :pattern ( ($generated@@74 $generated@@629 $generated@@45 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@631) $generated@@145)) ($generated@@74 $generated@@631 $generated@@48 $generated@@630))
 :pattern ( ($generated@@74 $generated@@631 $generated@@48 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@281 $generated@@145)) (= (type $generated@@633) $generated@@64)) (= ($generated@@132 $generated@@632 ($generated@@500 $generated@@633)) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@280 $generated@@632))) ($generated@@236 ($generated@@501 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@501 $generated@@632 $generated@@634))
))))
 :pattern ( ($generated@@132 $generated@@632 ($generated@@500 $generated@@633)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 Int) ) (!  (=> (= (type $generated@@636) ($generated@@281 $generated@@145)) (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@280 $generated@@636))) (< ($generated@@545 ($generated@@369 $generated@@136 ($generated@@501 $generated@@636 $generated@@637))) ($generated@@635 $generated@@636))))
 :pattern ( ($generated@@545 ($generated@@369 $generated@@136 ($generated@@501 $generated@@636 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@213 $generated@@145 $generated@@145)) (= (type $generated@@639) $generated@@64)) (= (type $generated@@640) $generated@@64)) ($generated@@132 $generated@@638 ($generated@@397 $generated@@639 $generated@@640))) (and (and ($generated@@132 ($generated@@214 $generated@@638) ($generated@@245 $generated@@639)) ($generated@@132 ($generated@@334 $generated@@638) ($generated@@245 $generated@@640))) ($generated@@132 ($generated@@368 $generated@@638) ($generated@@245 ($generated@@135 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@132 $generated@@638 ($generated@@397 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@642) $generated@@64)) (= (type $generated@@643) $generated@@64)) ($generated@@132 $generated@@641 ($generated@@405 $generated@@642 $generated@@643))) (and (and ($generated@@132 ($generated@@304 $generated@@641) ($generated@@250 $generated@@642)) ($generated@@132 ($generated@@345 $generated@@641) ($generated@@250 $generated@@643))) ($generated@@132 ($generated@@379 $generated@@641) ($generated@@250 ($generated@@135 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@132 $generated@@641 ($generated@@405 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@2) ($generated@@132 $generated@@644 $generated@@46))
 :pattern ( ($generated@@132 $generated@@644 $generated@@46))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@3) ($generated@@132 $generated@@645 $generated@@47))
 :pattern ( ($generated@@132 $generated@@645 $generated@@47))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@4) ($generated@@132 $generated@@646 $generated@@44))
 :pattern ( ($generated@@132 $generated@@646 $generated@@44))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@452) ($generated@@132 $generated@@647 $generated@@45))
 :pattern ( ($generated@@132 $generated@@647 $generated@@45))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@145) ($generated@@132 $generated@@648 $generated@@48))
 :pattern ( ($generated@@132 $generated@@648 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 (T@U) Bool)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(assert  (and (and (and (and (= (type $generated@@649) ($generated@@213 $generated@@145 $generated@@145)) (= (type $generated@@650) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@651) $generated@@77)) (= (type $generated@@652) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@654) ($generated@@213 $generated@@145 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@656  (and (=> (= (ControlFlow 0 2) (- 0 6)) (= ($generated@@211 $generated@@649) ($generated@@456 ($generated@@334 $generated@@649)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= ($generated@@456 ($generated@@334 $generated@@649)) ($generated@@255 1))) (=> (and (= ($generated@@211 $generated@@649) ($generated@@456 ($generated@@334 $generated@@649))) (= ($generated@@456 ($generated@@334 $generated@@649)) ($generated@@255 1))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@255 1) ($generated@@255 2))) (=> (= ($generated@@255 1) ($generated@@255 2)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@257 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@257 ($generated@@11 false))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@257 ($generated@@11 false)))))))))))))
(let (($generated@@657  (=> (and (not (= ($generated@@211 $generated@@649) ($generated@@456 ($generated@@334 $generated@@649)))) (= (ControlFlow 0 8) 2)) $generated@@656)))
(let (($generated@@658  (=> (and (= ($generated@@211 $generated@@649) ($generated@@456 ($generated@@334 $generated@@649))) (= (ControlFlow 0 7) 2)) $generated@@656)))
(let (($generated@@659  (and (=> (= (ControlFlow 0 9) (- 0 11)) (= ($generated@@211 $generated@@649) ($generated@@456 ($generated@@214 $generated@@649)))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (= ($generated@@456 ($generated@@214 $generated@@649)) ($generated@@255 2))) (=> (and (= ($generated@@211 $generated@@649) ($generated@@456 ($generated@@214 $generated@@649))) (= ($generated@@456 ($generated@@214 $generated@@649)) ($generated@@255 2))) (and (=> (= (ControlFlow 0 9) 7) $generated@@658) (=> (= (ControlFlow 0 9) 8) $generated@@657)))))))
(let (($generated@@660  (=> (and (not (= ($generated@@211 $generated@@649) ($generated@@456 ($generated@@214 $generated@@649)))) (= (ControlFlow 0 13) 9)) $generated@@659)))
(let (($generated@@661  (=> (and (= ($generated@@211 $generated@@649) ($generated@@456 ($generated@@214 $generated@@649))) (= (ControlFlow 0 12) 9)) $generated@@659)))
(let (($generated@@662  (=> (and (= $generated@@650 ($generated@@156 $generated@@651 $generated@@652 $generated@@60 false)) (= $generated@@649 ($generated@@257 ($generated@@212 ($generated@@212 ($generated@@298 $generated@@145 $generated@@145) ($generated@@287 ($generated@@8 ($generated@@255 1))) ($generated@@287 ($generated@@8 ($generated@@255 1)))) ($generated@@287 ($generated@@8 ($generated@@255 2))) ($generated@@287 ($generated@@8 ($generated@@255 1))))))) (and (=> (= (ControlFlow 0 14) (- 0 16)) ($generated@@322 ($generated@@214 $generated@@649) ($generated@@416 ($generated@@416 ($generated@@565 $generated@@145) ($generated@@287 ($generated@@8 ($generated@@255 1)))) ($generated@@287 ($generated@@8 ($generated@@255 2)))))) (=> ($generated@@322 ($generated@@214 $generated@@649) ($generated@@416 ($generated@@416 ($generated@@565 $generated@@145) ($generated@@287 ($generated@@8 ($generated@@255 1)))) ($generated@@287 ($generated@@8 ($generated@@255 2))))) (and (=> (= (ControlFlow 0 14) (- 0 15)) ($generated@@322 ($generated@@334 $generated@@649) ($generated@@416 ($generated@@565 $generated@@145) ($generated@@287 ($generated@@8 ($generated@@255 1)))))) (=> ($generated@@322 ($generated@@334 $generated@@649) ($generated@@416 ($generated@@565 $generated@@145) ($generated@@287 ($generated@@8 ($generated@@255 1))))) (and (=> (= (ControlFlow 0 14) 12) $generated@@661) (=> (= (ControlFlow 0 14) 13) $generated@@660)))))))))
(let (($generated@@663  (=> (and ($generated@@261 $generated@@652) ($generated@@653 $generated@@652)) (=> (and (and (and ($generated@@132 $generated@@654 ($generated@@397 $generated@@46 $generated@@46)) ($generated@@74 $generated@@654 ($generated@@397 $generated@@46 $generated@@46) $generated@@652)) true) (and (= 0 $generated@@655) (= (ControlFlow 0 17) 14))) $generated@@662))))
$generated@@663)))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 6))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
