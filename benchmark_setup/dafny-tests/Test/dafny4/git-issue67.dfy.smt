(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 (T@U T@U T@U) Bool)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@T) T@U)
(declare-fun $generated@@217 (T@U) Int)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Int)
(declare-fun $generated@@238 (T@T) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (T@T T@T) T@U)
(declare-fun $generated@@245 (T@T T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@247 (T@T) T@T)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@T T@T) T@U)
(declare-fun $generated@@263 (T@T T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@282 (T@T T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@349 (T@U T@U) T@U)
(declare-fun $generated@@357 (T@U T@U) T@U)
(declare-fun $generated@@368 (T@T) T@U)
(declare-fun $generated@@392 () T@T)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@U Int) T@U)
(declare-fun $generated@@444 (T@U) Int)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@473 (T@U) Int)
(declare-fun $generated@@489 (T@U T@U T@U) T@U)
(declare-fun $generated@@490 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@491 (T@T T@T) T@T)
(declare-fun $generated@@492 (T@T) T@T)
(declare-fun $generated@@493 (T@T) T@T)
(declare-fun $generated@@494 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert (= (type $generated@@148) $generated@@67))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@80) (or ($generated@@147 $generated@@149) (and (not (= 1 $generated@@145)) ($generated@@143 $generated@@149 $generated@@148)))) true)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@80) (or ($generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) ($generated@@143 $generated@@152 $generated@@148)))) true)
 :pattern ( ($generated@@150 $generated@@152))
))))
(assert  (and (= ($generated@@1 $generated@@155) 14) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@67)) (= (type $generated@@160) $generated@@155)) ($generated@@143 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@143 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@67)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@79 $generated@@164 $generated@@2)) (= (type $generated@@173) $generated@@67)) ($generated@@143 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@143 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@174 $generated@@175)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@80) (= ($generated@@143 $generated@@176 $generated@@139)  (or (= $generated@@176 $generated@@140) (= ($generated@@174 $generated@@176) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@176 $generated@@139))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (= (type $generated@@177) $generated@@80) (= (type $generated@@178) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@177 $generated@@148 $generated@@178) ($generated@@77 $generated@@177 $generated@@139 $generated@@178)))
 :pattern ( ($generated@@77 $generated@@177 $generated@@148 $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@181 $generated@@182)) $generated@@155)
 :pattern ( ($generated@@179 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (and (= (type $generated@@183) $generated@@67) (= (type $generated@@184) $generated@@67)) (= (type $generated@@185) $generated@@164)) (= (type $generated@@186) $generated@@164)) (= ($generated@@143 ($generated@@179 $generated@@185 $generated@@186) ($generated@@154 $generated@@183 $generated@@184))  (and ($generated@@180 $generated@@185 $generated@@183) ($generated@@180 $generated@@186 $generated@@184))))
 :pattern ( ($generated@@143 ($generated@@179 $generated@@185 $generated@@186) ($generated@@154 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (= (type $generated@@187) $generated@@155) (= (type $generated@@188) $generated@@155)) (= ($generated@@161 $generated@@187 $generated@@188) (= $generated@@187 $generated@@188)))
 :pattern ( ($generated@@161 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@189 $generated@@190)) $generated@@67)
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) ($generated@@79 $generated@@164 $generated@@4)) (= (type $generated@@192) $generated@@67)) (= ($generated@@143 $generated@@191 ($generated@@189 $generated@@192)) (forall (($generated@@193 T@U) ) (!  (=> (and (= (type $generated@@193) $generated@@164) ($generated@@0 ($generated@@84 $generated@@191 $generated@@193))) ($generated@@180 $generated@@193 $generated@@192))
 :pattern ( ($generated@@84 $generated@@191 $generated@@193))
))))
 :pattern ( ($generated@@143 $generated@@191 ($generated@@189 $generated@@192)))
)))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@194 $generated@@195)) $generated@@67)
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@196) ($generated@@79 $generated@@164 $generated@@4)) (= (type $generated@@197) $generated@@67)) (= ($generated@@143 $generated@@196 ($generated@@194 $generated@@197)) (forall (($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@198) $generated@@164) ($generated@@0 ($generated@@84 $generated@@196 $generated@@198))) ($generated@@180 $generated@@198 $generated@@197))
 :pattern ( ($generated@@84 $generated@@196 $generated@@198))
))))
 :pattern ( ($generated@@143 $generated@@196 ($generated@@194 $generated@@197)))
)))
(assert (forall (($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(= (type ($generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@199 $generated@@202) $generated@@202)
 :pattern ( ($generated@@199 $generated@@202))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@205) $generated@@67) (= (type $generated@@206) $generated@@67)) (= (type $generated@@207) $generated@@164)) (= (type $generated@@208) $generated@@164)) (= (type $generated@@209) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@203 $generated@@209)) (= ($generated@@77 ($generated@@179 $generated@@207 $generated@@208) ($generated@@154 $generated@@205 $generated@@206) $generated@@209)  (and ($generated@@204 $generated@@207 $generated@@205 $generated@@209) ($generated@@204 $generated@@208 $generated@@206 $generated@@209))))
 :pattern ( ($generated@@77 ($generated@@179 $generated@@207 $generated@@208) ($generated@@154 $generated@@205 $generated@@206) $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@71)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> (= (type $generated@@212) $generated@@155) (= ($generated@@153 $generated@@212) (= ($generated@@210 $generated@@212) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@155) ($generated@@153 $generated@@213)) (exists (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (and (and (= (type $generated@@214) $generated@@164) (= (type $generated@@215) $generated@@164)) (= $generated@@213 ($generated@@179 $generated@@214 $generated@@215)))
 :no-pattern (type $generated@@214)
 :no-pattern (type $generated@@215)
 :no-pattern ($generated $generated@@214)
 :no-pattern ($generated@@0 $generated@@214)
 :no-pattern ($generated $generated@@215)
 :no-pattern ($generated@@0 $generated@@215)
)))
 :pattern ( ($generated@@153 $generated@@213))
)))
(assert  (and (and (forall (($generated@@220 T@T) ) (= ($generated@@1 ($generated@@218 $generated@@220)) 16)) (forall (($generated@@221 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@218 $generated@@221))
))) (forall (($generated@@222 T@T) ) (! (= (type ($generated@@216 $generated@@222)) ($generated@@218 $generated@@222))
 :pattern ( ($generated@@216 $generated@@222))
))))
(assert (forall (($generated@@223 T@T) ) (! (= ($generated@@217 ($generated@@216 $generated@@223)) 0)
 :pattern ( ($generated@@216 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@224 $generated@@225)) $generated@@164)
 :pattern ( ($generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@67) (= (type $generated@@228) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@204 ($generated@@224 $generated@@226) $generated@@227 $generated@@228) ($generated@@77 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@204 ($generated@@224 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@229) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@230) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@231) $generated@@164)) (= (type $generated@@232) $generated@@67)) ($generated@@135 $generated@@229 $generated@@230)) ($generated@@204 $generated@@231 $generated@@232 $generated@@229)) ($generated@@204 $generated@@231 $generated@@232 $generated@@230))
 :pattern ( ($generated@@135 $generated@@229 $generated@@230) ($generated@@204 $generated@@231 $generated@@232 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@233) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@234) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@236) $generated@@67)) ($generated@@135 $generated@@233 $generated@@234)) ($generated@@77 $generated@@235 $generated@@236 $generated@@233)) ($generated@@77 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@135 $generated@@233 $generated@@234) ($generated@@77 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@239 T@T) ) (! (= (type ($generated@@238 $generated@@239)) ($generated@@79 $generated@@239 $generated@@2))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@82 (type $generated@@240))))
 (=> (= (type $generated@@240) ($generated@@79 $generated@@241 $generated@@2)) (and (= (= ($generated@@237 $generated@@240) 0) (= $generated@@240 ($generated@@238 $generated@@241))) (=> (not (= ($generated@@237 $generated@@240) 0)) (exists (($generated@@242 T@U) ) (!  (and (= (type $generated@@242) $generated@@241) (< 0 ($generated ($generated@@84 $generated@@240 $generated@@242))))
 :no-pattern (type $generated@@242)
 :no-pattern ($generated $generated@@242)
 :no-pattern ($generated@@0 $generated@@242)
))))))
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert  (and (and (and (and (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (= ($generated@@1 ($generated@@245 $generated@@248 $generated@@249)) 17)) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@246 ($generated@@245 $generated@@250 $generated@@251)) $generated@@250)
 :pattern ( ($generated@@245 $generated@@250 $generated@@251))
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@247 ($generated@@245 $generated@@252 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@245 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@246 (type $generated@@254))))
(= (type ($generated@@243 $generated@@254)) ($generated@@79 $generated@@255 $generated@@4)))
 :pattern ( ($generated@@243 $generated@@254))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= (type ($generated@@244 $generated@@256 $generated@@257)) ($generated@@245 $generated@@256 $generated@@257))
 :pattern ( ($generated@@244 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@T) ) (! (let (($generated@@260 (type $generated@@258)))
 (not ($generated@@0 ($generated@@84 ($generated@@243 ($generated@@244 $generated@@260 $generated@@259)) $generated@@258))))
 :pattern ( (let (($generated@@260 (type $generated@@258)))
($generated@@84 ($generated@@243 ($generated@@244 $generated@@260 $generated@@259)) $generated@@258)))
)))
(assert  (and (and (and (and (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@266 $generated@@267)) 18)) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@263 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@263 $generated@@270 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@263 $generated@@270 $generated@@271))
))) (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@264 (type $generated@@272))))
(= (type ($generated@@261 $generated@@272)) ($generated@@79 $generated@@273 $generated@@4)))
 :pattern ( ($generated@@261 $generated@@272))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= (type ($generated@@262 $generated@@274 $generated@@275)) ($generated@@263 $generated@@274 $generated@@275))
 :pattern ( ($generated@@262 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@T) ) (! (let (($generated@@278 (type $generated@@276)))
 (not ($generated@@0 ($generated@@84 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276))))
 :pattern ( (let (($generated@@278 (type $generated@@276)))
($generated@@84 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@82 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@79 $generated@@280 $generated@@2)) (= ($generated@@170 $generated@@279) (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@280) (and (<= 0 ($generated ($generated@@84 $generated@@279 $generated@@281))) (<= ($generated ($generated@@84 $generated@@279 $generated@@281)) ($generated@@237 $generated@@279))))
 :pattern ( ($generated@@84 $generated@@279 $generated@@281))
)))))
 :pattern ( ($generated@@170 $generated@@279))
)))
(assert (forall (($generated@@283 T@T) ($generated@@284 T@U) ) (! (= (type ($generated@@282 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@282 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@164) ($generated@@180 $generated@@285 $generated@@139)) (and (= ($generated@@224 ($generated@@282 $generated@@80 $generated@@285)) $generated@@285) ($generated@@143 ($generated@@282 $generated@@80 $generated@@285) $generated@@139)))
 :pattern ( ($generated@@180 $generated@@285 $generated@@139))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@164) ($generated@@180 $generated@@286 $generated@@148)) (and (= ($generated@@224 ($generated@@282 $generated@@80 $generated@@286)) $generated@@286) ($generated@@143 ($generated@@282 $generated@@80 $generated@@286) $generated@@148)))
 :pattern ( ($generated@@180 $generated@@286 $generated@@148))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@80) (= ($generated@@143 $generated@@287 $generated@@148)  (and ($generated@@143 $generated@@287 $generated@@139) (not (= $generated@@287 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@287 $generated@@148))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@247 (type $generated@@288))))
(let (($generated@@290 ($generated@@246 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@245 $generated@@290 $generated@@289)) (or (= $generated@@288 ($generated@@244 $generated@@290 $generated@@289)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) ($generated@@0 ($generated@@84 ($generated@@243 $generated@@288) $generated@@291)))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@243 $generated@@288))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@247 (type $generated@@293))))
(= (type ($generated@@292 $generated@@293)) ($generated@@79 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@247 (type $generated@@295))))
(let (($generated@@297 ($generated@@246 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@245 $generated@@297 $generated@@296)) (or (= $generated@@295 ($generated@@244 $generated@@297 $generated@@296)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@296) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@295) $generated@@298)))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@265 (type $generated@@299))))
(let (($generated@@301 ($generated@@264 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@263 $generated@@301 $generated@@300)) (or (= $generated@@299 ($generated@@262 $generated@@301 $generated@@300)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) ($generated@@0 ($generated@@84 ($generated@@261 $generated@@299) $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@261 $generated@@299))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@265 (type $generated@@304))))
(= (type ($generated@@303 $generated@@304)) ($generated@@79 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@265 (type $generated@@306))))
(let (($generated@@308 ($generated@@264 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@263 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@262 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@307) ($generated@@0 ($generated@@84 ($generated@@303 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@79 $generated@@164 $generated@@2)) (= (type $generated@@311) $generated@@67)) (= ($generated@@143 $generated@@310 ($generated@@169 $generated@@311)) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@164) (< 0 ($generated ($generated@@84 $generated@@310 $generated@@312)))) ($generated@@180 $generated@@312 $generated@@311))
 :pattern ( ($generated@@84 $generated@@310 $generated@@312))
))))
 :pattern ( ($generated@@143 $generated@@310 ($generated@@169 $generated@@311)))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (= (type $generated@@313) ($generated@@79 $generated@@164 $generated@@4)) (= (type $generated@@314) $generated@@67)) (= (type $generated@@315) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@313 ($generated@@189 $generated@@314) $generated@@315) (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@164) ($generated@@0 ($generated@@84 $generated@@313 $generated@@316))) ($generated@@204 $generated@@316 $generated@@314 $generated@@315))
 :pattern ( ($generated@@84 $generated@@313 $generated@@316))
))))
 :pattern ( ($generated@@77 $generated@@313 ($generated@@189 $generated@@314) $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@79 $generated@@164 $generated@@4)) (= (type $generated@@318) $generated@@67)) (= (type $generated@@319) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@317 ($generated@@194 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@164) ($generated@@0 ($generated@@84 $generated@@317 $generated@@320))) ($generated@@204 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@84 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@77 $generated@@317 ($generated@@194 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 (type $generated@@321)))
(= ($generated ($generated@@84 ($generated@@238 $generated@@322) $generated@@321)) 0))
 :pattern ( (let (($generated@@322 (type $generated@@321)))
($generated@@84 ($generated@@238 $generated@@322) $generated@@321)))
)))
(assert  (and (forall (($generated@@325 T@U) ) (! (= (type ($generated@@323 $generated@@325)) ($generated@@79 $generated@@164 $generated@@4))
 :pattern ( ($generated@@323 $generated@@325))
)) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@247 (type $generated@@326))))
(let (($generated@@328 ($generated@@246 (type $generated@@326))))
(= (type ($generated@@324 $generated@@326)) ($generated@@79 $generated@@328 $generated@@327))))
 :pattern ( ($generated@@324 $generated@@326))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) ($generated@@245 $generated@@164 $generated@@164)) (= (type $generated@@330) $generated@@164)) (= ($generated@@0 ($generated@@84 ($generated@@323 $generated@@329) $generated@@330))  (and ($generated@@0 ($generated@@84 ($generated@@243 $generated@@329) ($generated@@162 ($generated@@282 $generated@@155 $generated@@330)))) (= ($generated@@84 ($generated@@324 $generated@@329) ($generated@@162 ($generated@@282 $generated@@155 $generated@@330))) ($generated@@163 ($generated@@282 $generated@@155 $generated@@330))))))
 :pattern ( ($generated@@84 ($generated@@323 $generated@@329) $generated@@330))
)))
(assert  (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@333)) ($generated@@79 $generated@@164 $generated@@4))
 :pattern ( ($generated@@331 $generated@@333))
)) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@265 (type $generated@@334))))
(let (($generated@@336 ($generated@@264 (type $generated@@334))))
(= (type ($generated@@332 $generated@@334)) ($generated@@79 $generated@@336 $generated@@335))))
 :pattern ( ($generated@@332 $generated@@334))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@337) ($generated@@263 $generated@@164 $generated@@164)) (= (type $generated@@338) $generated@@164)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@337) $generated@@338))  (and ($generated@@0 ($generated@@84 ($generated@@261 $generated@@337) ($generated@@162 ($generated@@282 $generated@@155 $generated@@338)))) (= ($generated@@84 ($generated@@332 $generated@@337) ($generated@@162 ($generated@@282 $generated@@155 $generated@@338))) ($generated@@163 ($generated@@282 $generated@@155 $generated@@338))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (! (let (($generated@@341 (type $generated@@340)))
(let (($generated@@342 ($generated@@246 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@245 $generated@@342 $generated@@341)) (= ($generated@@0 ($generated@@84 ($generated@@292 $generated@@339) $generated@@340)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (and ($generated@@0 ($generated@@84 ($generated@@243 $generated@@339) $generated@@343)) (= $generated@@340 ($generated@@84 ($generated@@324 $generated@@339) $generated@@343))))
 :pattern ( ($generated@@84 ($generated@@243 $generated@@339) $generated@@343))
 :pattern ( ($generated@@84 ($generated@@324 $generated@@339) $generated@@343))
))))))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(let (($generated@@347 ($generated@@264 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@263 $generated@@347 $generated@@346)) (= ($generated@@0 ($generated@@84 ($generated@@303 $generated@@344) $generated@@345)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) (and ($generated@@0 ($generated@@84 ($generated@@261 $generated@@344) $generated@@348)) (= $generated@@345 ($generated@@84 ($generated@@332 $generated@@344) $generated@@348))))
 :pattern ( ($generated@@84 ($generated@@261 $generated@@344) $generated@@348))
 :pattern ( ($generated@@84 ($generated@@332 $generated@@344) $generated@@348))
))))))
 :pattern ( ($generated@@84 ($generated@@303 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@350 $generated@@351)) $generated@@67)
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (and (= (type $generated@@352) ($generated@@245 $generated@@164 $generated@@164)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) $generated@@67)) (= (type $generated@@355) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@349 $generated@@353 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@164) ($generated@@0 ($generated@@84 ($generated@@243 $generated@@352) $generated@@356))) (and ($generated@@204 ($generated@@84 ($generated@@324 $generated@@352) $generated@@356) $generated@@354 $generated@@355) ($generated@@204 $generated@@356 $generated@@353 $generated@@355)))
 :pattern ( ($generated@@84 ($generated@@324 $generated@@352) $generated@@356))
 :pattern ( ($generated@@84 ($generated@@243 $generated@@352) $generated@@356))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@349 $generated@@353 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@67)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (and (= (type $generated@@360) ($generated@@263 $generated@@164 $generated@@164)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) $generated@@67)) (= (type $generated@@363) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@360 ($generated@@357 $generated@@361 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@164) ($generated@@0 ($generated@@84 ($generated@@261 $generated@@360) $generated@@364))) (and ($generated@@204 ($generated@@84 ($generated@@332 $generated@@360) $generated@@364) $generated@@362 $generated@@363) ($generated@@204 $generated@@364 $generated@@361 $generated@@363)))
 :pattern ( ($generated@@84 ($generated@@332 $generated@@360) $generated@@364))
 :pattern ( ($generated@@84 ($generated@@261 $generated@@360) $generated@@364))
))))
 :pattern ( ($generated@@77 $generated@@360 ($generated@@357 $generated@@361 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@365) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@366) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@367) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@365 $generated@@367))) (and ($generated@@135 $generated@@365 $generated@@366) ($generated@@135 $generated@@366 $generated@@367))) ($generated@@135 $generated@@365 $generated@@367))
 :pattern ( ($generated@@135 $generated@@365 $generated@@366) ($generated@@135 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@T) ) (! (= (type ($generated@@368 $generated@@369)) ($generated@@79 $generated@@369 $generated@@4))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@265 (type $generated@@370))))
(let (($generated@@372 ($generated@@264 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@263 $generated@@372 $generated@@371)) (= (= $generated@@370 ($generated@@262 $generated@@372 $generated@@371)) (= ($generated@@261 $generated@@370) ($generated@@368 $generated@@372))))))
 :pattern ( ($generated@@261 $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@265 (type $generated@@373))))
(let (($generated@@375 ($generated@@264 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@263 $generated@@375 $generated@@374)) (= (= $generated@@373 ($generated@@262 $generated@@375 $generated@@374)) (= ($generated@@303 $generated@@373) ($generated@@368 $generated@@374))))))
 :pattern ( ($generated@@303 $generated@@373))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@265 (type $generated@@376))))
(let (($generated@@378 ($generated@@264 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@263 $generated@@378 $generated@@377)) (= (= $generated@@376 ($generated@@262 $generated@@378 $generated@@377)) (= ($generated@@331 $generated@@376) ($generated@@368 $generated@@164))))))
 :pattern ( ($generated@@331 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@247 (type $generated@@379))))
(let (($generated@@381 ($generated@@246 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@245 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@244 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (and (and (= (type $generated@@382) $generated@@164) (= (type $generated@@383) $generated@@164)) ($generated@@0 ($generated@@84 ($generated@@323 $generated@@379) ($generated@@224 ($generated@@179 $generated@@382 $generated@@383)))))
 :no-pattern (type $generated@@382)
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@323 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@265 (type $generated@@384))))
(let (($generated@@386 ($generated@@264 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@263 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@262 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (and (and (= (type $generated@@387) $generated@@164) (= (type $generated@@388) $generated@@164)) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@384) ($generated@@224 ($generated@@179 $generated@@387 $generated@@388)))))
 :no-pattern (type $generated@@387)
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@331 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@164) ($generated@@180 $generated@@389 $generated@@46)) (and (= ($generated@@224 ($generated@@282 $generated@@2 $generated@@389)) $generated@@389) ($generated@@143 ($generated@@282 $generated@@2 $generated@@389) $generated@@46)))
 :pattern ( ($generated@@180 $generated@@389 $generated@@46))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@164) ($generated@@180 $generated@@390 $generated@@47)) (and (= ($generated@@224 ($generated@@282 $generated@@3 $generated@@390)) $generated@@390) ($generated@@143 ($generated@@282 $generated@@3 $generated@@390) $generated@@47)))
 :pattern ( ($generated@@180 $generated@@390 $generated@@47))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@164) ($generated@@180 $generated@@391 $generated@@44)) (and (= ($generated@@224 ($generated@@282 $generated@@4 $generated@@391)) $generated@@391) ($generated@@143 ($generated@@282 $generated@@4 $generated@@391) $generated@@44)))
 :pattern ( ($generated@@180 $generated@@391 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@392) 19))
(assert (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@164) ($generated@@180 $generated@@393 $generated@@45)) (and (= ($generated@@224 ($generated@@282 $generated@@392 $generated@@393)) $generated@@393) ($generated@@143 ($generated@@282 $generated@@392 $generated@@393) $generated@@45)))
 :pattern ( ($generated@@180 $generated@@393 $generated@@45))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@67) (= ($generated@@180 ($generated@@224 $generated@@394) $generated@@395) ($generated@@143 $generated@@394 $generated@@395)))
 :pattern ( ($generated@@180 ($generated@@224 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@82 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@79 $generated@@397 $generated@@2)) (<= 0 ($generated@@237 $generated@@396))))
 :pattern ( ($generated@@237 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@219 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@218 $generated@@399)) (<= 0 ($generated@@217 $generated@@398))))
 :pattern ( ($generated@@217 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (= (type ($generated@@400 $generated@@401)) $generated@@67)
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@67) (= (type $generated@@403) $generated@@67)) (= ($generated@@400 ($generated@@349 $generated@@402 $generated@@403)) $generated@@402))
 :pattern ( ($generated@@349 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (= (type ($generated@@404 $generated@@405)) $generated@@67)
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@67) (= (type $generated@@407) $generated@@67)) (= ($generated@@404 ($generated@@349 $generated@@406 $generated@@407)) $generated@@407))
 :pattern ( ($generated@@349 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@67) (= (type $generated@@409) $generated@@67)) (= ($generated@@75 ($generated@@349 $generated@@408 $generated@@409)) $generated@@58))
 :pattern ( ($generated@@349 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (= (type ($generated@@410 $generated@@411)) $generated@@67)
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@67) (= (type $generated@@413) $generated@@67)) (= ($generated@@410 ($generated@@357 $generated@@412 $generated@@413)) $generated@@412))
 :pattern ( ($generated@@357 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (= (type ($generated@@414 $generated@@415)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@67) (= (type $generated@@417) $generated@@67)) (= ($generated@@414 ($generated@@357 $generated@@416 $generated@@417)) $generated@@417))
 :pattern ( ($generated@@357 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@67) (= (type $generated@@419) $generated@@67)) (= ($generated@@75 ($generated@@357 $generated@@418 $generated@@419)) $generated@@59))
 :pattern ( ($generated@@357 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@164) (= (type $generated@@421) $generated@@164)) (= ($generated@@210 ($generated@@179 $generated@@420 $generated@@421)) $generated@@61))
 :pattern ( ($generated@@179 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@67) (= (type $generated@@425) $generated@@67)) (= ($generated@@422 ($generated@@154 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@154 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@67)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@67) (= (type $generated@@429) $generated@@67)) (= ($generated@@426 ($generated@@154 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@154 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@164) (= (type $generated@@431) $generated@@164)) (= ($generated@@162 ($generated@@179 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@179 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@164) (= (type $generated@@433) $generated@@164)) (= ($generated@@163 ($generated@@179 $generated@@432 $generated@@433)) $generated@@433))
 :pattern ( ($generated@@179 $generated@@432 $generated@@433))
)))
(assert  (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@436))
)) (forall (($generated@@437 T@U) ($generated@@438 Int) ) (! (let (($generated@@439 ($generated@@219 (type $generated@@437))))
(= (type ($generated@@435 $generated@@437 $generated@@438)) $generated@@439))
 :pattern ( ($generated@@435 $generated@@437 $generated@@438))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@440) ($generated@@218 $generated@@164)) (= (type $generated@@441) $generated@@67)) (= (type $generated@@442) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@440 ($generated@@434 $generated@@441) $generated@@442) (forall (($generated@@443 Int) ) (!  (=> (and (<= 0 $generated@@443) (< $generated@@443 ($generated@@217 $generated@@440))) ($generated@@204 ($generated@@435 $generated@@440 $generated@@443) $generated@@441 $generated@@442))
 :pattern ( ($generated@@435 $generated@@440 $generated@@443))
))))
 :pattern ( ($generated@@77 $generated@@440 ($generated@@434 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 Int) ) (! (= ($generated@@444 ($generated@@78 $generated@@445)) $generated@@445)
 :pattern ( ($generated@@78 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@67) (= ($generated@@446 ($generated@@189 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@189 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@67) (= ($generated@@75 ($generated@@189 $generated@@449)) $generated@@54))
 :pattern ( ($generated@@189 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@67) (= ($generated@@450 ($generated@@194 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@194 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (= (type $generated@@453) $generated@@67) (= ($generated@@75 ($generated@@194 $generated@@453)) $generated@@55))
 :pattern ( ($generated@@194 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@454 ($generated@@169 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@169 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@67) (= ($generated@@75 ($generated@@169 $generated@@457)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@458 ($generated@@434 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@434 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@67) (= ($generated@@75 ($generated@@434 $generated@@461)) $generated@@57))
 :pattern ( ($generated@@434 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(= ($generated@@282 $generated@@463 ($generated@@224 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@224 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@245 $generated@@164 $generated@@164)) (= (type $generated@@465) $generated@@67)) (= (type $generated@@466) $generated@@67)) (= ($generated@@143 $generated@@464 ($generated@@349 $generated@@465 $generated@@466)) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@164) ($generated@@0 ($generated@@84 ($generated@@243 $generated@@464) $generated@@467))) (and ($generated@@180 ($generated@@84 ($generated@@324 $generated@@464) $generated@@467) $generated@@466) ($generated@@180 $generated@@467 $generated@@465)))
 :pattern ( ($generated@@84 ($generated@@324 $generated@@464) $generated@@467))
 :pattern ( ($generated@@84 ($generated@@243 $generated@@464) $generated@@467))
))))
 :pattern ( ($generated@@143 $generated@@464 ($generated@@349 $generated@@465 $generated@@466)))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@263 $generated@@164 $generated@@164)) (= (type $generated@@469) $generated@@67)) (= (type $generated@@470) $generated@@67)) (= ($generated@@143 $generated@@468 ($generated@@357 $generated@@469 $generated@@470)) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@164) ($generated@@0 ($generated@@84 ($generated@@261 $generated@@468) $generated@@471))) (and ($generated@@180 ($generated@@84 ($generated@@332 $generated@@468) $generated@@471) $generated@@470) ($generated@@180 $generated@@471 $generated@@469)))
 :pattern ( ($generated@@84 ($generated@@332 $generated@@468) $generated@@471))
 :pattern ( ($generated@@84 ($generated@@261 $generated@@468) $generated@@471))
))))
 :pattern ( ($generated@@143 $generated@@468 ($generated@@357 $generated@@469 $generated@@470)))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@164) (= (type $generated@@475) $generated@@164)) (< ($generated@@472 $generated@@474) ($generated@@473 ($generated@@179 $generated@@474 $generated@@475))))
 :pattern ( ($generated@@179 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@164) (= (type $generated@@477) $generated@@164)) (< ($generated@@472 $generated@@477) ($generated@@473 ($generated@@179 $generated@@476 $generated@@477))))
 :pattern ( ($generated@@179 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (and (= (type $generated@@478) $generated@@164) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) $generated@@67)) ($generated@@180 $generated@@478 ($generated@@349 $generated@@479 $generated@@480))) (and (= ($generated@@224 ($generated@@282 ($generated@@245 $generated@@164 $generated@@164) $generated@@478)) $generated@@478) ($generated@@143 ($generated@@282 ($generated@@245 $generated@@164 $generated@@164) $generated@@478) ($generated@@349 $generated@@479 $generated@@480))))
 :pattern ( ($generated@@180 $generated@@478 ($generated@@349 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (and (= (type $generated@@481) $generated@@164) (= (type $generated@@482) $generated@@67)) (= (type $generated@@483) $generated@@67)) ($generated@@180 $generated@@481 ($generated@@357 $generated@@482 $generated@@483))) (and (= ($generated@@224 ($generated@@282 ($generated@@263 $generated@@164 $generated@@164) $generated@@481)) $generated@@481) ($generated@@143 ($generated@@282 ($generated@@263 $generated@@164 $generated@@164) $generated@@481) ($generated@@357 $generated@@482 $generated@@483))))
 :pattern ( ($generated@@180 $generated@@481 ($generated@@357 $generated@@482 $generated@@483)))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= (type $generated@@486) $generated@@164)) ($generated@@180 $generated@@486 ($generated@@154 $generated@@484 $generated@@485))) (and (= ($generated@@224 ($generated@@282 $generated@@155 $generated@@486)) $generated@@486) ($generated@@143 ($generated@@282 $generated@@155 $generated@@486) ($generated@@154 $generated@@484 $generated@@485))))
 :pattern ( ($generated@@180 $generated@@486 ($generated@@154 $generated@@484 $generated@@485)))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
 (not ($generated@@0 ($generated@@84 ($generated@@368 $generated@@488) $generated@@487))))
 :pattern ( (let (($generated@@488 (type $generated@@487)))
($generated@@84 ($generated@@368 $generated@@488) $generated@@487)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@495 T@T) ($generated@@496 T@T) ) (= ($generated@@1 ($generated@@491 $generated@@495 $generated@@496)) 20)) (forall (($generated@@497 T@T) ($generated@@498 T@T) ) (! (= ($generated@@492 ($generated@@491 $generated@@497 $generated@@498)) $generated@@497)
 :pattern ( ($generated@@491 $generated@@497 $generated@@498))
))) (forall (($generated@@499 T@T) ($generated@@500 T@T) ) (! (= ($generated@@493 ($generated@@491 $generated@@499 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@491 $generated@@499 $generated@@500))
))) (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@493 (type $generated@@501))))
(= (type ($generated@@489 $generated@@501 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@489 $generated@@501 $generated@@502 $generated@@503))
))) (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(let (($generated@@510 (type $generated@@506)))
(= (type ($generated@@494 $generated@@505 $generated@@506 $generated@@507 $generated@@508)) ($generated@@491 $generated@@510 $generated@@509))))
 :pattern ( ($generated@@494 $generated@@505 $generated@@506 $generated@@507 $generated@@508))
))) (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@493 (type $generated@@511))))
 (=> (= (type $generated@@514) $generated@@515) (= ($generated@@489 ($generated@@494 $generated@@511 $generated@@512 $generated@@513 $generated@@514) $generated@@512 $generated@@513) $generated@@514)))
 :weight 0
))) (and (and (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (or (= $generated@@518 $generated@@520) (= ($generated@@489 ($generated@@494 $generated@@517 $generated@@518 $generated@@519 $generated@@516) $generated@@520 $generated@@521) ($generated@@489 $generated@@517 $generated@@520 $generated@@521)))
 :weight 0
)) (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (or (= $generated@@525 $generated@@527) (= ($generated@@489 ($generated@@494 $generated@@523 $generated@@524 $generated@@525 $generated@@522) $generated@@526 $generated@@527) ($generated@@489 $generated@@523 $generated@@526 $generated@@527)))
 :weight 0
))) (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (or true (= ($generated@@489 ($generated@@494 $generated@@529 $generated@@530 $generated@@531 $generated@@528) $generated@@532 $generated@@533) ($generated@@489 $generated@@529 $generated@@532 $generated@@533)))
 :weight 0
)))) (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (! (= (type ($generated@@490 $generated@@534 $generated@@535 $generated@@536 $generated@@537)) ($generated@@491 $generated@@80 $generated@@4))
 :pattern ( ($generated@@490 $generated@@534 $generated@@535 $generated@@536 $generated@@537))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 ($generated@@70 (type $generated@@543))))
 (=> (and (and (and (and (and (= (type $generated@@538) $generated@@80) (= (type $generated@@539) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@540) ($generated@@69 $generated@@4))) (= (type $generated@@541) $generated@@80)) (= (type $generated@@542) $generated@@80)) (= (type $generated@@543) ($generated@@69 $generated@@544))) (= ($generated@@0 ($generated@@489 ($generated@@490 $generated@@538 $generated@@539 $generated@@540 $generated@@541) $generated@@542 $generated@@543))  (=> (and (not (= $generated@@542 $generated@@538)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@539 $generated@@542) $generated@@540))) (= $generated@@542 $generated@@541)))))
 :pattern ( ($generated@@489 ($generated@@490 $generated@@538 $generated@@539 $generated@@540 $generated@@541) $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@72)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@67) (= (type $generated@@548) $generated@@67)) (and (= ($generated@@75 ($generated@@154 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@154 $generated@@547 $generated@@548)) $generated@@65)))
 :pattern ( ($generated@@154 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@155) (= ($generated@@472 ($generated@@224 $generated@@549)) ($generated@@473 $generated@@549)))
 :pattern ( ($generated@@472 ($generated@@224 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@164) ($generated@@180 $generated@@550 ($generated@@78 0))) (and (= ($generated@@224 ($generated@@282 $generated@@2 $generated@@550)) $generated@@550) ($generated@@143 ($generated@@282 ($generated@@79 $generated@@164 $generated@@4) $generated@@550) ($generated@@78 0))))
 :pattern ( ($generated@@180 $generated@@550 ($generated@@78 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@164) (= (type $generated@@552) $generated@@67)) ($generated@@180 $generated@@551 ($generated@@189 $generated@@552))) (and (= ($generated@@224 ($generated@@282 ($generated@@79 $generated@@164 $generated@@4) $generated@@551)) $generated@@551) ($generated@@143 ($generated@@282 ($generated@@79 $generated@@164 $generated@@4) $generated@@551) ($generated@@189 $generated@@552))))
 :pattern ( ($generated@@180 $generated@@551 ($generated@@189 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@164) (= (type $generated@@554) $generated@@67)) ($generated@@180 $generated@@553 ($generated@@194 $generated@@554))) (and (= ($generated@@224 ($generated@@282 ($generated@@79 $generated@@164 $generated@@4) $generated@@553)) $generated@@553) ($generated@@143 ($generated@@282 ($generated@@79 $generated@@164 $generated@@4) $generated@@553) ($generated@@194 $generated@@554))))
 :pattern ( ($generated@@180 $generated@@553 ($generated@@194 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@164) (= (type $generated@@556) $generated@@67)) ($generated@@180 $generated@@555 ($generated@@169 $generated@@556))) (and (= ($generated@@224 ($generated@@282 ($generated@@79 $generated@@164 $generated@@2) $generated@@555)) $generated@@555) ($generated@@143 ($generated@@282 ($generated@@79 $generated@@164 $generated@@2) $generated@@555) ($generated@@169 $generated@@556))))
 :pattern ( ($generated@@180 $generated@@555 ($generated@@169 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@164) (= (type $generated@@558) $generated@@67)) ($generated@@180 $generated@@557 ($generated@@434 $generated@@558))) (and (= ($generated@@224 ($generated@@282 ($generated@@218 $generated@@164) $generated@@557)) $generated@@557) ($generated@@143 ($generated@@282 ($generated@@218 $generated@@164) $generated@@557) ($generated@@434 $generated@@558))))
 :pattern ( ($generated@@180 $generated@@557 ($generated@@434 $generated@@558)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@545 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@148) $generated@@64))
(assert (= ($generated@@545 $generated@@148) $generated@@66))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@79 $generated@@164 $generated@@2)) (= (type $generated@@560) $generated@@67)) (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@559 ($generated@@169 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@164) (< 0 ($generated ($generated@@84 $generated@@559 $generated@@562)))) ($generated@@204 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@84 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@77 $generated@@559 ($generated@@169 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@155) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@203 $generated@@565) (and ($generated@@153 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@67) ($generated@@77 $generated@@563 ($generated@@154 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@77 $generated@@563 ($generated@@154 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@204 ($generated@@162 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@204 ($generated@@162 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@155) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@203 $generated@@569) (and ($generated@@153 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@67) ($generated@@77 $generated@@567 ($generated@@154 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@77 $generated@@567 ($generated@@154 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@204 ($generated@@163 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@204 ($generated@@163 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@164) (= (type $generated@@572) $generated@@164)) (= ($generated@@179 ($generated@@199 $generated@@571) ($generated@@199 $generated@@572)) ($generated@@199 ($generated@@179 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@179 ($generated@@199 $generated@@571) ($generated@@199 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@224 ($generated@@199 $generated@@573)) ($generated@@199 ($generated@@224 $generated@@573)))
 :pattern ( ($generated@@224 ($generated@@199 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@219 (type $generated@@574))))
 (=> (and (= (type $generated@@574) ($generated@@218 $generated@@575)) (= ($generated@@217 $generated@@574) 0)) (= $generated@@574 ($generated@@216 $generated@@575))))
 :pattern ( ($generated@@217 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@577)))
 (=> (and (and (= (type $generated@@576) ($generated@@79 $generated@@579 $generated@@2)) (= (type $generated@@578) $generated@@2)) (<= 0 ($generated $generated@@578))) (= ($generated@@237 ($generated@@85 $generated@@576 $generated@@577 $generated@@578)) (+ (- ($generated@@237 $generated@@576) ($generated ($generated@@84 $generated@@576 $generated@@577))) ($generated $generated@@578)))))
 :pattern ( ($generated@@237 ($generated@@85 $generated@@576 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@2)) ($generated@@77 $generated@@581 $generated@@46 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@46 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@3)) ($generated@@77 $generated@@583 $generated@@47 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@47 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@4)) ($generated@@77 $generated@@585 $generated@@44 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@44 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@587) $generated@@392)) ($generated@@77 $generated@@587 $generated@@45 $generated@@586))
 :pattern ( ($generated@@77 $generated@@587 $generated@@45 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@589) $generated@@164)) ($generated@@77 $generated@@589 $generated@@48 $generated@@588))
 :pattern ( ($generated@@77 $generated@@589 $generated@@48 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@218 $generated@@164)) (= (type $generated@@591) $generated@@67)) (= ($generated@@143 $generated@@590 ($generated@@434 $generated@@591)) (forall (($generated@@592 Int) ) (!  (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@217 $generated@@590))) ($generated@@180 ($generated@@435 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@435 $generated@@590 $generated@@592))
))))
 :pattern ( ($generated@@143 $generated@@590 ($generated@@434 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ) (!  (=> (= (type $generated@@594) ($generated@@218 $generated@@164)) (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@217 $generated@@594))) (< ($generated@@473 ($generated@@282 $generated@@155 ($generated@@435 $generated@@594 $generated@@595))) ($generated@@593 $generated@@594))))
 :pattern ( ($generated@@473 ($generated@@282 $generated@@155 ($generated@@435 $generated@@594 $generated@@595))))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@245 $generated@@164 $generated@@164)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) $generated@@67)) ($generated@@143 $generated@@596 ($generated@@349 $generated@@597 $generated@@598))) (and (and ($generated@@143 ($generated@@243 $generated@@596) ($generated@@189 $generated@@597)) ($generated@@143 ($generated@@292 $generated@@596) ($generated@@189 $generated@@598))) ($generated@@143 ($generated@@323 $generated@@596) ($generated@@189 ($generated@@154 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@143 $generated@@596 ($generated@@349 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@263 $generated@@164 $generated@@164)) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) $generated@@67)) ($generated@@143 $generated@@599 ($generated@@357 $generated@@600 $generated@@601))) (and (and ($generated@@143 ($generated@@261 $generated@@599) ($generated@@194 $generated@@600)) ($generated@@143 ($generated@@303 $generated@@599) ($generated@@194 $generated@@601))) ($generated@@143 ($generated@@331 $generated@@599) ($generated@@194 ($generated@@154 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@143 $generated@@599 ($generated@@357 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@2) ($generated@@143 $generated@@602 $generated@@46))
 :pattern ( ($generated@@143 $generated@@602 $generated@@46))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@3) ($generated@@143 $generated@@603 $generated@@47))
 :pattern ( ($generated@@143 $generated@@603 $generated@@47))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@4) ($generated@@143 $generated@@604 $generated@@44))
 :pattern ( ($generated@@143 $generated@@604 $generated@@44))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@392) ($generated@@143 $generated@@605 $generated@@45))
 :pattern ( ($generated@@143 $generated@@605 $generated@@45))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@164) ($generated@@143 $generated@@606 $generated@@48))
 :pattern ( ($generated@@143 $generated@@606 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@609) $generated@@80) (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@607) $generated@@80)) (= (type $generated@@610) ($generated@@491 $generated@@80 $generated@@4))) (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@612) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@614  (=> (and ($generated@@0 ($generated@@199 ($generated@@11 false))) (= (ControlFlow 0 10) (- 0 9))) ($generated@@150 $generated@@607))))
(let (($generated@@615 true))
(let (($generated@@616  (=> ($generated@@143 $generated@@607 $generated@@148) (=> (and (and ($generated@@77 $generated@@607 $generated@@148 $generated@@608) ($generated@@147 $generated@@607)) (and ($generated@@147 $generated@@607) ($generated@@146 $generated@@607))) (and (=> (= (ControlFlow 0 11) 8) $generated@@615) (=> (= (ControlFlow 0 11) 10) $generated@@614))))))
(let (($generated@@617  (=> (and (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@80) ($generated@@143 $generated@@618 $generated@@148)) (and ($generated@@147 $generated@@618) (=> ($generated@@146 $generated@@618) ($generated@@151 $generated@@618))))
 :pattern ( ($generated@@150 $generated@@618))
 :pattern ( ($generated@@146 $generated@@618))
)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@80) ($generated@@143 $generated@@619 $generated@@148)) ($generated@@146 $generated@@619)) ($generated@@150 $generated@@619))
 :pattern ( ($generated@@150 $generated@@619))
 :pattern ( ($generated@@146 $generated@@619))
)))))
(let (($generated@@620  (=> (and (not ($generated@@146 $generated@@609)) (= (ControlFlow 0 5) 2)) $generated@@617)))
(let (($generated@@621  (=> (and (and ($generated@@146 $generated@@609) ($generated@@77 $generated@@609 $generated@@148 $generated@@608)) (and ($generated@@151 $generated@@609) (= (ControlFlow 0 4) 2))) $generated@@617)))
(let (($generated@@622  (=> (and (and ($generated@@143 $generated@@609 $generated@@148) ($generated@@77 $generated@@609 $generated@@148 $generated@@608)) (and ($generated@@77 $generated@@609 $generated@@148 $generated@@608) ($generated@@147 $generated@@609))) (and (=> (= (ControlFlow 0 6) 4) $generated@@621) (=> (= (ControlFlow 0 6) 5) $generated@@620)))))
(let (($generated@@623  (=> (and (not (and ($generated@@143 $generated@@609 $generated@@148) ($generated@@77 $generated@@609 $generated@@148 $generated@@608))) (= (ControlFlow 0 3) 2)) $generated@@617)))
(let (($generated@@624  (=> (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@80) (=> (and ($generated@@143 $generated@@625 $generated@@148) ($generated@@146 $generated@@625)) ($generated@@150 $generated@@625)))
 :pattern ( ($generated@@150 $generated@@625))
 :pattern ( ($generated@@146 $generated@@625))
)) (and (=> (= (ControlFlow 0 7) 6) $generated@@622) (=> (= (ControlFlow 0 7) 3) $generated@@623)))))
(let (($generated@@626  (=> (= $generated@@610 ($generated@@490 $generated@@140 $generated@@611 $generated@@60 $generated@@612)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@70 (type $generated@@628))))
 (=> (and (= (type $generated@@627) $generated@@80) (= (type $generated@@628) ($generated@@69 $generated@@629))) (=> (and (and (not (= $generated@@627 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@611 $generated@@627) $generated@@60))) (= $generated@@627 $generated@@612)) ($generated@@0 ($generated@@489 $generated@@610 $generated@@627 $generated@@628)))))
 :no-pattern (type $generated@@627)
 :no-pattern (type $generated@@628)
 :no-pattern ($generated $generated@@627)
 :no-pattern ($generated@@0 $generated@@627)
 :no-pattern ($generated $generated@@628)
 :no-pattern ($generated@@0 $generated@@628)
))) (=> (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 ($generated@@70 (type $generated@@631))))
 (=> (and (= (type $generated@@630) $generated@@80) (= (type $generated@@631) ($generated@@69 $generated@@632))) (=> (and (and (not (= $generated@@630 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@611 $generated@@630) $generated@@60))) (= $generated@@630 $generated@@612)) ($generated@@0 ($generated@@489 $generated@@610 $generated@@630 $generated@@631)))))
 :no-pattern (type $generated@@630)
 :no-pattern (type $generated@@631)
 :no-pattern ($generated $generated@@630)
 :no-pattern ($generated@@0 $generated@@630)
 :no-pattern ($generated $generated@@631)
 :no-pattern ($generated@@0 $generated@@631)
)) (=> (and (and ($generated@@203 $generated@@608) ($generated@@613 $generated@@608)) (and (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@80) (=> (and (not (= $generated@@633 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@611 $generated@@633) $generated@@60))) (or (= ($generated@@84 $generated@@608 $generated@@633) ($generated@@84 $generated@@611 $generated@@633)) (= $generated@@633 $generated@@612))))
 :pattern ( ($generated@@84 $generated@@608 $generated@@633))
)) ($generated@@135 $generated@@611 $generated@@608))) (and (=> (= (ControlFlow 0 12) 11) $generated@@616) (=> (= (ControlFlow 0 12) 7) $generated@@624))))))))
(let (($generated@@634  (=> (and ($generated@@203 $generated@@611) ($generated@@613 $generated@@611)) (=> (and (and ($generated@@143 $generated@@612 $generated@@148) ($generated@@77 $generated@@612 $generated@@148 $generated@@611)) (and (= 2 $generated@@145) (= (ControlFlow 0 14) 12))) $generated@@626))))
$generated@@634))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
