(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@T T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@286 (T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@308 (T@U T@U T@U) Bool)
(declare-fun $generated@@323 (T@T) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 () T@U)
(declare-fun $generated@@342 (T@U) Int)
(declare-fun $generated@@343 (T@T) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@T T@T) T@U)
(declare-fun $generated@@353 (T@T T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@T T@T) T@U)
(declare-fun $generated@@371 (T@T T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@T) T@U)
(declare-fun $generated@@497 () T@T)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@546 (T@U Int) T@U)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@587 (T@U) Int)
(declare-fun $generated@@677 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@140) 14) (= ($generated@@1 $generated@@141) 15)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@139 $generated@@145 $generated@@146 $generated@@147 $generated@@148)) $generated@@141)
 :pattern ( ($generated@@139 $generated@@145 $generated@@146 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@143 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@143 $generated@@149))
))) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@144 $generated@@150 $generated@@151)) $generated@@68)
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
))))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@152) $generated@@68) (= (type $generated@@153) $generated@@68)) (= (type $generated@@154) $generated@@140)) (= (type $generated@@155) $generated@@141)) (or ($generated@@142 $generated@@152 $generated@@153 $generated@@155) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@155 ($generated@@143 ($generated@@144 $generated@@152 $generated@@153)))))) ($generated@@136 ($generated@@139 $generated@@152 $generated@@153 $generated@@154 $generated@@155) ($generated@@144 ($generated@@143 $generated@@152) ($generated@@143 $generated@@153))))
 :pattern ( ($generated@@139 $generated@@152 $generated@@153 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@141)) ($generated@@136 $generated@@159 ($generated@@144 $generated@@157 $generated@@158))) ($generated@@156 $generated@@159))
 :pattern ( ($generated@@156 $generated@@159) ($generated@@136 $generated@@159 ($generated@@144 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@141) (= (type $generated@@167) $generated@@141)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@141)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@136 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@136 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 17)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@81) (= (type $generated@@226) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@81)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@178 $generated@@81 $generated@@4))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@71 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@81) (= (type $generated@@238) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@239) ($generated@@70 $generated@@4))) (= (type $generated@@241) $generated@@81)) (= (type $generated@@242) ($generated@@70 $generated@@243))) (= ($generated@@0 ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (= (type $generated@@245) $generated@@68) (= (type $generated@@246) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@246)) ($generated@@78 $generated@@169 ($generated@@143 $generated@@245) $generated@@246))
 :pattern ( ($generated@@78 $generated@@169 ($generated@@143 $generated@@245) $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@141)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@68) (= (type $generated@@252) $generated@@68)) (= (type $generated@@253) $generated@@163)) (= (type $generated@@254) $generated@@163)) (= ($generated@@136 ($generated@@247 $generated@@253 $generated@@254) ($generated@@144 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@136 ($generated@@247 $generated@@253 $generated@@254) ($generated@@144 $generated@@251 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@68) ($generated@@136 $generated@@169 ($generated@@143 $generated@@255)))
 :pattern ( ($generated@@136 $generated@@169 ($generated@@143 $generated@@255)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@264 T@U) ) (! (= (type ($generated@@256 $generated@@264)) $generated@@140)
 :pattern ( ($generated@@256 $generated@@264))
)) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 (type $generated@@265)))
(= (type ($generated@@257 $generated@@265)) $generated@@266))
 :pattern ( ($generated@@257 $generated@@265))
))) (forall (($generated@@267 T@U) ) (! (= (type ($generated@@259 $generated@@267)) $generated@@141)
 :pattern ( ($generated@@259 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@U) ) (! (= (type ($generated@@260 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@260 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ) (! (= (type ($generated@@261 $generated@@270)) $generated@@163)
 :pattern ( ($generated@@261 $generated@@270))
))) (forall (($generated@@271 T@U) ) (! (= (type ($generated@@262 $generated@@271)) $generated@@163)
 :pattern ( ($generated@@262 $generated@@271))
))) (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@263 $generated@@272 $generated@@273)) $generated@@141)
 :pattern ( ($generated@@263 $generated@@272 $generated@@273))
))))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@274) $generated@@68) (= (type $generated@@275) $generated@@68)) (= (type $generated@@276) $generated@@140)) (= (type $generated@@277) $generated@@141)) (or ($generated@@142 $generated@@274 $generated@@275 ($generated@@257 $generated@@277)) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@277 ($generated@@143 ($generated@@144 $generated@@274 $generated@@275)))))) (and (=> (not ($generated@@0 ($generated@@257 ($generated@@11 ($generated@@258 ($generated@@257 $generated@@277)))))) (let (($generated@@278 ($generated@@257 ($generated@@259 ($generated@@257 $generated@@277)))))
 (and ($generated@@156 ($generated@@257 ($generated@@260 $generated@@141 ($generated@@261 ($generated@@257 $generated@@277))))) (and ($generated@@156 ($generated@@257 ($generated@@260 $generated@@141 ($generated@@261 ($generated@@257 $generated@@277))))) ($generated@@142 $generated@@274 $generated@@275 $generated@@278))))) (= ($generated@@139 $generated@@274 $generated@@275 ($generated@@256 $generated@@276) ($generated@@257 $generated@@277)) (ite ($generated@@258 ($generated@@257 $generated@@277)) ($generated@@247 ($generated@@262 ($generated@@257 $generated@@169)) ($generated@@262 ($generated@@257 $generated@@169))) (let (($generated@@279 ($generated@@257 ($generated@@259 ($generated@@257 $generated@@277)))))
(let (($generated@@280 ($generated@@257 ($generated@@162 ($generated@@257 ($generated@@260 $generated@@141 ($generated@@261 ($generated@@257 $generated@@277))))))))
(let (($generated@@281 ($generated@@257 ($generated@@161 ($generated@@257 ($generated@@260 $generated@@141 ($generated@@261 ($generated@@257 $generated@@277))))))))
(let (($generated@@282 ($generated@@260 $generated@@141 ($generated@@162 ($generated@@257 ($generated@@139 $generated@@274 $generated@@275 ($generated@@256 $generated@@276) $generated@@279))))))
(let (($generated@@283 ($generated@@260 $generated@@141 ($generated@@161 ($generated@@257 ($generated@@139 $generated@@274 $generated@@275 ($generated@@256 $generated@@276) $generated@@279))))))
($generated@@247 ($generated@@262 ($generated@@263 $generated@@281 $generated@@283)) ($generated@@262 ($generated@@263 $generated@@280 $generated@@282))))))))))))
 :weight 3
 :pattern ( ($generated@@139 $generated@@274 $generated@@275 ($generated@@256 $generated@@276) ($generated@@257 $generated@@277)))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@141) (= (type $generated@@285) $generated@@141)) (= ($generated@@160 $generated@@284 $generated@@285) (= $generated@@284 $generated@@285)))
 :pattern ( ($generated@@160 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@141) (= (type $generated@@288) $generated@@141)) (= ($generated@@286 $generated@@287 $generated@@288) (= $generated@@287 $generated@@288)))
 :pattern ( ($generated@@286 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@141) (= (type $generated@@291) $generated@@141)) (and ($generated@@289 $generated@@290) ($generated@@289 $generated@@291))) (= ($generated@@286 $generated@@290 $generated@@291)  (and (= ($generated@@261 $generated@@290) ($generated@@261 $generated@@291)) ($generated@@286 ($generated@@259 $generated@@290) ($generated@@259 $generated@@291)))))
 :pattern ( ($generated@@286 $generated@@290 $generated@@291) ($generated@@289 $generated@@290))
 :pattern ( ($generated@@286 $generated@@290 $generated@@291) ($generated@@289 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@68)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@295) $generated@@68)) (= ($generated@@136 $generated@@294 ($generated@@292 $generated@@295)) (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@163) ($generated@@0 ($generated@@85 $generated@@294 $generated@@296))) ($generated@@248 $generated@@296 $generated@@295))
 :pattern ( ($generated@@85 $generated@@294 $generated@@296))
))))
 :pattern ( ($generated@@136 $generated@@294 ($generated@@292 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@68)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@300) $generated@@68)) (= ($generated@@136 $generated@@299 ($generated@@297 $generated@@300)) (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@163) ($generated@@0 ($generated@@85 $generated@@299 $generated@@301))) ($generated@@248 $generated@@301 $generated@@300))
 :pattern ( ($generated@@85 $generated@@299 $generated@@301))
))))
 :pattern ( ($generated@@136 $generated@@299 ($generated@@297 $generated@@300)))
)))
(assert (forall (($generated@@302 T@U) ) (! (= ($generated@@257 $generated@@302) $generated@@302)
 :pattern ( ($generated@@257 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (= (type $generated@@303) $generated@@141) (= (type $generated@@304) $generated@@141)) (and ($generated@@258 $generated@@303) ($generated@@258 $generated@@304))) (= ($generated@@286 $generated@@303 $generated@@304) true))
 :pattern ( ($generated@@286 $generated@@303 $generated@@304) ($generated@@258 $generated@@303))
 :pattern ( ($generated@@286 $generated@@303 $generated@@304) ($generated@@258 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (= (type $generated@@305) $generated@@68) (= (type $generated@@306) $generated@@163)) (= (type $generated@@307) $generated@@141)) (= ($generated@@136 ($generated@@263 $generated@@306 $generated@@307) ($generated@@143 $generated@@305))  (and ($generated@@248 $generated@@306 $generated@@305) ($generated@@136 $generated@@307 ($generated@@143 $generated@@305)))))
 :pattern ( ($generated@@136 ($generated@@263 $generated@@306 $generated@@307) ($generated@@143 $generated@@305)))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@309) $generated@@68) (= (type $generated@@310) $generated@@68)) (= (type $generated@@311) $generated@@163)) (= (type $generated@@312) $generated@@163)) (= (type $generated@@313) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@313)) (= ($generated@@78 ($generated@@247 $generated@@311 $generated@@312) ($generated@@144 $generated@@309 $generated@@310) $generated@@313)  (and ($generated@@308 $generated@@311 $generated@@309 $generated@@313) ($generated@@308 $generated@@312 $generated@@310 $generated@@313))))
 :pattern ( ($generated@@78 ($generated@@247 $generated@@311 $generated@@312) ($generated@@144 $generated@@309 $generated@@310) $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@141) (= ($generated@@156 $generated@@314) (= ($generated@@168 $generated@@314) $generated@@61)))
 :pattern ( ($generated@@156 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@141) (= ($generated@@258 $generated@@315) (= ($generated@@168 $generated@@315) $generated@@63)))
 :pattern ( ($generated@@258 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@141) (= ($generated@@289 $generated@@316) (= ($generated@@168 $generated@@316) $generated@@65)))
 :pattern ( ($generated@@289 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@141) ($generated@@156 $generated@@317)) (exists (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (and (and (= (type $generated@@318) $generated@@163) (= (type $generated@@319) $generated@@163)) (= $generated@@317 ($generated@@247 $generated@@318 $generated@@319)))
 :no-pattern (type $generated@@318)
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
)))
 :pattern ( ($generated@@156 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@141) ($generated@@289 $generated@@320)) (exists (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (and (and (= (type $generated@@321) $generated@@163) (= (type $generated@@322) $generated@@141)) (= $generated@@320 ($generated@@263 $generated@@321 $generated@@322)))
 :no-pattern (type $generated@@321)
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@289 $generated@@320))
)))
(assert  (and (and (forall (($generated@@327 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@327)) 18)) (forall (($generated@@328 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@325 $generated@@328))
))) (forall (($generated@@329 T@T) ) (! (= (type ($generated@@323 $generated@@329)) ($generated@@325 $generated@@329))
 :pattern ( ($generated@@323 $generated@@329))
))))
(assert (forall (($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@330)) 0)
 :pattern ( ($generated@@323 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@141) ($generated@@258 $generated@@331)) (= $generated@@331 $generated@@169))
 :pattern ( ($generated@@258 $generated@@331))
)))
(assert  (and (forall (($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@334)) $generated@@140)
 :pattern ( ($generated@@332 $generated@@334))
)) (= (type $generated@@333) $generated@@140)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (= (type $generated@@335) $generated@@68) (= (type $generated@@336) $generated@@68)) (= (type $generated@@337) $generated@@140)) (= (type $generated@@338) $generated@@141)) (= ($generated@@139 $generated@@335 $generated@@336 $generated@@337 $generated@@338) ($generated@@139 $generated@@335 $generated@@336 $generated@@333 $generated@@338)))
 :pattern ( ($generated@@139 $generated@@335 $generated@@336 ($generated@@332 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@68) (= (type $generated@@341) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@308 ($generated@@262 $generated@@339) $generated@@340 $generated@@341) ($generated@@78 $generated@@339 $generated@@340 $generated@@341)))
 :pattern ( ($generated@@308 ($generated@@262 $generated@@339) $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@344 T@T) ) (! (= (type ($generated@@343 $generated@@344)) ($generated@@80 $generated@@344 $generated@@2))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@83 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@80 $generated@@346 $generated@@2)) (and (= (= ($generated@@342 $generated@@345) 0) (= $generated@@345 ($generated@@343 $generated@@346))) (=> (not (= ($generated@@342 $generated@@345) 0)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) (< 0 ($generated ($generated@@85 $generated@@345 $generated@@347))))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ) (! (= (type ($generated@@348 $generated@@349)) $generated@@73)
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@68) (and (= ($generated@@76 ($generated@@143 $generated@@350)) $generated@@64) (= ($generated@@348 ($generated@@143 $generated@@350)) $generated@@67)))
 :pattern ( ($generated@@143 $generated@@350))
)))
(assert  (and (and (and (and (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (= ($generated@@1 ($generated@@353 $generated@@356 $generated@@357)) 19)) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@353 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@355 ($generated@@353 $generated@@360 $generated@@361)) $generated@@361)
 :pattern ( ($generated@@353 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@354 (type $generated@@362))))
(= (type ($generated@@351 $generated@@362)) ($generated@@80 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@362))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= (type ($generated@@352 $generated@@364 $generated@@365)) ($generated@@353 $generated@@364 $generated@@365))
 :pattern ( ($generated@@352 $generated@@364 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@T) ) (! (let (($generated@@368 (type $generated@@366)))
 (not ($generated@@0 ($generated@@85 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366))))
 :pattern ( (let (($generated@@368 (type $generated@@366)))
($generated@@85 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366)))
)))
(assert  (and (and (and (and (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (= ($generated@@1 ($generated@@371 $generated@@374 $generated@@375)) 20)) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= ($generated@@372 ($generated@@371 $generated@@376 $generated@@377)) $generated@@376)
 :pattern ( ($generated@@371 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= ($generated@@373 ($generated@@371 $generated@@378 $generated@@379)) $generated@@379)
 :pattern ( ($generated@@371 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@372 (type $generated@@380))))
(= (type ($generated@@369 $generated@@380)) ($generated@@80 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@380))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= (type ($generated@@370 $generated@@382 $generated@@383)) ($generated@@371 $generated@@382 $generated@@383))
 :pattern ( ($generated@@370 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@T) ) (! (let (($generated@@386 (type $generated@@384)))
 (not ($generated@@0 ($generated@@85 ($generated@@369 ($generated@@370 $generated@@386 $generated@@385)) $generated@@384))))
 :pattern ( (let (($generated@@386 (type $generated@@384)))
($generated@@85 ($generated@@369 ($generated@@370 $generated@@386 $generated@@385)) $generated@@384)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) $generated@@68) (= (type $generated@@388) $generated@@68)) (= (type $generated@@389) $generated@@140)) (= (type $generated@@390) $generated@@141)) (= ($generated@@139 $generated@@387 $generated@@388 ($generated@@256 $generated@@389) $generated@@390) ($generated@@139 $generated@@387 $generated@@388 $generated@@389 $generated@@390)))
 :pattern ( ($generated@@139 $generated@@387 $generated@@388 ($generated@@256 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@83 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@80 $generated@@392 $generated@@2)) (= ($generated@@172 $generated@@391) (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@392) (and (<= 0 ($generated ($generated@@85 $generated@@391 $generated@@393))) (<= ($generated ($generated@@85 $generated@@391 $generated@@393)) ($generated@@342 $generated@@391))))
 :pattern ( ($generated@@85 $generated@@391 $generated@@393))
)))))
 :pattern ( ($generated@@172 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@355 (type $generated@@394))))
(let (($generated@@396 ($generated@@354 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@353 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@352 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@351 $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@355 (type $generated@@399))))
(= (type ($generated@@398 $generated@@399)) ($generated@@80 $generated@@400 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@355 (type $generated@@401))))
(let (($generated@@403 ($generated@@354 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@353 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@352 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@402) ($generated@@0 ($generated@@85 ($generated@@398 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@398 $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@373 (type $generated@@405))))
(let (($generated@@407 ($generated@@372 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@371 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@370 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) ($generated@@0 ($generated@@85 ($generated@@369 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@369 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@373 (type $generated@@410))))
(= (type ($generated@@409 $generated@@410)) ($generated@@80 $generated@@411 $generated@@4)))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@373 (type $generated@@412))))
(let (($generated@@414 ($generated@@372 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@371 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@370 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@413) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@409 $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@417) $generated@@68)) (= ($generated@@136 $generated@@416 ($generated@@171 $generated@@417)) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@416 $generated@@418)))) ($generated@@248 $generated@@418 $generated@@417))
 :pattern ( ($generated@@85 $generated@@416 $generated@@418))
))))
 :pattern ( ($generated@@136 $generated@@416 ($generated@@171 $generated@@417)))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (= (type $generated@@419) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@420) $generated@@68)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@419 ($generated@@292 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@163) ($generated@@0 ($generated@@85 $generated@@419 $generated@@422))) ($generated@@308 $generated@@422 $generated@@420 $generated@@421))
 :pattern ( ($generated@@85 $generated@@419 $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@419 ($generated@@292 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@297 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@163) ($generated@@0 ($generated@@85 $generated@@423 $generated@@426))) ($generated@@308 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@85 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@297 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(= ($generated ($generated@@85 ($generated@@343 $generated@@428) $generated@@427)) 0))
 :pattern ( (let (($generated@@428 (type $generated@@427)))
($generated@@85 ($generated@@343 $generated@@428) $generated@@427)))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@355 (type $generated@@432))))
(let (($generated@@434 ($generated@@354 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@80 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@353 $generated@@163 $generated@@163)) (= (type $generated@@436) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@85 ($generated@@351 $generated@@435) ($generated@@161 ($generated@@260 $generated@@141 $generated@@436)))) (= ($generated@@85 ($generated@@430 $generated@@435) ($generated@@161 ($generated@@260 $generated@@141 $generated@@436))) ($generated@@162 ($generated@@260 $generated@@141 $generated@@436))))))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert  (and (forall (($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@439)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@437 $generated@@439))
)) (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@373 (type $generated@@440))))
(let (($generated@@442 ($generated@@372 (type $generated@@440))))
(= (type ($generated@@438 $generated@@440)) ($generated@@80 $generated@@442 $generated@@441))))
 :pattern ( ($generated@@438 $generated@@440))
))))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) ($generated@@371 $generated@@163 $generated@@163)) (= (type $generated@@444) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@437 $generated@@443) $generated@@444))  (and ($generated@@0 ($generated@@85 ($generated@@369 $generated@@443) ($generated@@161 ($generated@@260 $generated@@141 $generated@@444)))) (= ($generated@@85 ($generated@@438 $generated@@443) ($generated@@161 ($generated@@260 $generated@@141 $generated@@444))) ($generated@@162 ($generated@@260 $generated@@141 $generated@@444))))))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@354 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@353 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@85 ($generated@@398 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@85 ($generated@@351 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@85 ($generated@@430 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@445) $generated@@449))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(let (($generated@@453 ($generated@@372 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@371 $generated@@453 $generated@@452)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@450) $generated@@451)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) (and ($generated@@0 ($generated@@85 ($generated@@369 $generated@@450) $generated@@454)) (= $generated@@451 ($generated@@85 ($generated@@438 $generated@@450) $generated@@454))))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@450) $generated@@454))
 :pattern ( ($generated@@85 ($generated@@438 $generated@@450) $generated@@454))
))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@68)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@353 $generated@@163 $generated@@163)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) $generated@@68)) (= (type $generated@@461) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@458) $generated@@462))) (and ($generated@@308 ($generated@@85 ($generated@@430 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@308 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@458) $generated@@462))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@463 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (= (type $generated@@466) ($generated@@371 $generated@@163 $generated@@163)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) $generated@@68)) (= (type $generated@@469) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@369 $generated@@466) $generated@@470))) (and ($generated@@308 ($generated@@85 ($generated@@438 $generated@@466) $generated@@470) $generated@@468 $generated@@469) ($generated@@308 $generated@@470 $generated@@467 $generated@@469)))
 :pattern ( ($generated@@85 ($generated@@438 $generated@@466) $generated@@470))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@466) $generated@@470))
))))
 :pattern ( ($generated@@78 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@141)) ($generated@@136 $generated@@472 ($generated@@143 $generated@@471))) (or ($generated@@258 $generated@@472) ($generated@@289 $generated@@472)))
 :pattern ( ($generated@@289 $generated@@472) ($generated@@136 $generated@@472 ($generated@@143 $generated@@471)))
 :pattern ( ($generated@@258 $generated@@472) ($generated@@136 $generated@@472 ($generated@@143 $generated@@471)))
)))
(assert (forall (($generated@@474 T@T) ) (! (= (type ($generated@@473 $generated@@474)) ($generated@@80 $generated@@474 $generated@@4))
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@373 (type $generated@@475))))
(let (($generated@@477 ($generated@@372 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@371 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@370 $generated@@477 $generated@@476)) (= ($generated@@369 $generated@@475) ($generated@@473 $generated@@477))))))
 :pattern ( ($generated@@369 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@373 (type $generated@@478))))
(let (($generated@@480 ($generated@@372 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@371 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@370 $generated@@480 $generated@@479)) (= ($generated@@409 $generated@@478) ($generated@@473 $generated@@479))))))
 :pattern ( ($generated@@409 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@373 (type $generated@@481))))
(let (($generated@@483 ($generated@@372 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@371 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@370 $generated@@483 $generated@@482)) (= ($generated@@437 $generated@@481) ($generated@@473 $generated@@163))))))
 :pattern ( ($generated@@437 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@355 (type $generated@@484))))
(let (($generated@@486 ($generated@@354 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@353 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@352 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@163) (= (type $generated@@488) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@429 $generated@@484) ($generated@@262 ($generated@@247 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@429 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@373 (type $generated@@489))))
(let (($generated@@491 ($generated@@372 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@371 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@370 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@163) (= (type $generated@@493) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@437 $generated@@489) ($generated@@262 ($generated@@247 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@437 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@163) ($generated@@248 $generated@@494 $generated@@46)) (and (= ($generated@@262 ($generated@@260 $generated@@2 $generated@@494)) $generated@@494) ($generated@@136 ($generated@@260 $generated@@2 $generated@@494) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@494 $generated@@46))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) ($generated@@248 $generated@@495 $generated@@47)) (and (= ($generated@@262 ($generated@@260 $generated@@3 $generated@@495)) $generated@@495) ($generated@@136 ($generated@@260 $generated@@3 $generated@@495) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@495 $generated@@47))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@163) ($generated@@248 $generated@@496 $generated@@44)) (and (= ($generated@@262 ($generated@@260 $generated@@4 $generated@@496)) $generated@@496) ($generated@@136 ($generated@@260 $generated@@4 $generated@@496) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@496 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@497) 21))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@163) ($generated@@248 $generated@@498 $generated@@45)) (and (= ($generated@@262 ($generated@@260 $generated@@497 $generated@@498)) $generated@@498) ($generated@@136 ($generated@@260 $generated@@497 $generated@@498) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@498 $generated@@45))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@68) (= ($generated@@248 ($generated@@262 $generated@@499) $generated@@500) ($generated@@136 $generated@@499 $generated@@500)))
 :pattern ( ($generated@@248 ($generated@@262 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@83 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@80 $generated@@502 $generated@@2)) (<= 0 ($generated@@342 $generated@@501))))
 :pattern ( ($generated@@342 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@326 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@325 $generated@@504)) (<= 0 ($generated@@324 $generated@@503))))
 :pattern ( ($generated@@324 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@455 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@455 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@455 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@455 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@76 ($generated@@455 $generated@@513 $generated@@514)) $generated@@58))
 :pattern ( ($generated@@455 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@515 ($generated@@463 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@463 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@68) (= (type $generated@@522) $generated@@68)) (= ($generated@@519 ($generated@@463 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@463 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@76 ($generated@@463 $generated@@523 $generated@@524)) $generated@@59))
 :pattern ( ($generated@@463 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@163) (= (type $generated@@526) $generated@@163)) (= ($generated@@168 ($generated@@247 $generated@@525 $generated@@526)) $generated@@61))
 :pattern ( ($generated@@247 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@527 ($generated@@144 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@144 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@163) (= (type $generated@@536) $generated@@163)) (= ($generated@@161 ($generated@@247 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@247 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) (= (type $generated@@538) $generated@@163)) (= ($generated@@162 ($generated@@247 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@247 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@141)) (= ($generated@@168 ($generated@@263 $generated@@539 $generated@@540)) $generated@@65))
 :pattern ( ($generated@@263 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@141)) (= ($generated@@261 ($generated@@263 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@263 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@141)) (= ($generated@@259 ($generated@@263 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@263 $generated@@543 $generated@@544))
)))
(assert  (and (forall (($generated@@547 T@U) ) (! (= (type ($generated@@545 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@547))
)) (forall (($generated@@548 T@U) ($generated@@549 Int) ) (! (let (($generated@@550 ($generated@@326 (type $generated@@548))))
(= (type ($generated@@546 $generated@@548 $generated@@549)) $generated@@550))
 :pattern ( ($generated@@546 $generated@@548 $generated@@549))
))))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@325 $generated@@163)) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@551 ($generated@@545 $generated@@552) $generated@@553) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@324 $generated@@551))) ($generated@@308 ($generated@@546 $generated@@551 $generated@@554) $generated@@552 $generated@@553))
 :pattern ( ($generated@@546 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@78 $generated@@551 ($generated@@545 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@556 Int) ) (! (= ($generated@@555 ($generated@@79 $generated@@556)) $generated@@556)
 :pattern ( ($generated@@79 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@68)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@557 ($generated@@292 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@292 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@76 ($generated@@292 $generated@@560)) $generated@@54))
 :pattern ( ($generated@@292 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@68)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@561 ($generated@@297 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@297 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@76 ($generated@@297 $generated@@564)) $generated@@55))
 :pattern ( ($generated@@297 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@68)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@565 ($generated@@171 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@171 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@76 ($generated@@171 $generated@@568)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@68)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@569 ($generated@@545 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@545 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@76 ($generated@@545 $generated@@572)) $generated@@57))
 :pattern ( ($generated@@545 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@68)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@68) (= ($generated@@573 ($generated@@143 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@143 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
(= ($generated@@260 $generated@@577 ($generated@@262 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@262 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@353 $generated@@163 $generated@@163)) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@68)) (= ($generated@@136 $generated@@578 ($generated@@455 $generated@@579 $generated@@580)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@578) $generated@@581))) (and ($generated@@248 ($generated@@85 ($generated@@430 $generated@@578) $generated@@581) $generated@@580) ($generated@@248 $generated@@581 $generated@@579)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@578) $generated@@581))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@578) $generated@@581))
))))
 :pattern ( ($generated@@136 $generated@@578 ($generated@@455 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@371 $generated@@163 $generated@@163)) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) $generated@@68)) (= ($generated@@136 $generated@@582 ($generated@@463 $generated@@583 $generated@@584)) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@369 $generated@@582) $generated@@585))) (and ($generated@@248 ($generated@@85 ($generated@@438 $generated@@582) $generated@@585) $generated@@584) ($generated@@248 $generated@@585 $generated@@583)))
 :pattern ( ($generated@@85 ($generated@@438 $generated@@582) $generated@@585))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@582) $generated@@585))
))))
 :pattern ( ($generated@@136 $generated@@582 ($generated@@463 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@163) (= (type $generated@@589) $generated@@163)) (< ($generated@@586 $generated@@588) ($generated@@587 ($generated@@247 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@247 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@163) (= (type $generated@@591) $generated@@163)) (< ($generated@@586 $generated@@591) ($generated@@587 ($generated@@247 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@247 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@163) (= (type $generated@@593) $generated@@141)) (< ($generated@@586 $generated@@592) ($generated@@587 ($generated@@263 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@263 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@163) (= (type $generated@@595) $generated@@141)) (< ($generated@@587 $generated@@595) ($generated@@587 ($generated@@263 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@263 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@163) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) ($generated@@248 $generated@@596 ($generated@@455 $generated@@597 $generated@@598))) (and (= ($generated@@262 ($generated@@260 ($generated@@353 $generated@@163 $generated@@163) $generated@@596)) $generated@@596) ($generated@@136 ($generated@@260 ($generated@@353 $generated@@163 $generated@@163) $generated@@596) ($generated@@455 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@248 $generated@@596 ($generated@@455 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@163) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) $generated@@68)) ($generated@@248 $generated@@599 ($generated@@463 $generated@@600 $generated@@601))) (and (= ($generated@@262 ($generated@@260 ($generated@@371 $generated@@163 $generated@@163) $generated@@599)) $generated@@599) ($generated@@136 ($generated@@260 ($generated@@371 $generated@@163 $generated@@163) $generated@@599) ($generated@@463 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@248 $generated@@599 ($generated@@463 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@68) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) $generated@@163)) ($generated@@248 $generated@@604 ($generated@@144 $generated@@602 $generated@@603))) (and (= ($generated@@262 ($generated@@260 $generated@@141 $generated@@604)) $generated@@604) ($generated@@136 ($generated@@260 $generated@@141 $generated@@604) ($generated@@144 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@248 $generated@@604 ($generated@@144 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@141) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@607) (and ($generated@@289 $generated@@605) ($generated@@78 $generated@@605 ($generated@@143 $generated@@606) $generated@@607)))) ($generated@@308 ($generated@@261 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@308 ($generated@@261 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@85 ($generated@@473 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@85 ($generated@@473 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@68) (= (type $generated@@611) $generated@@68)) (and (= ($generated@@76 ($generated@@144 $generated@@610 $generated@@611)) $generated@@62) (= ($generated@@348 ($generated@@144 $generated@@610 $generated@@611)) $generated@@66)))
 :pattern ( ($generated@@144 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@141) (= ($generated@@586 ($generated@@262 $generated@@612)) ($generated@@587 $generated@@612)))
 :pattern ( ($generated@@586 ($generated@@262 $generated@@612)))
)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@613) $generated@@68) (= (type $generated@@614) $generated@@68)) (= (type $generated@@615) $generated@@140)) (= (type $generated@@616) $generated@@141)) (or ($generated@@142 $generated@@613 $generated@@614 $generated@@616) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@616 ($generated@@143 ($generated@@144 $generated@@613 $generated@@614)))))) (and (=> (not ($generated@@258 $generated@@616)) (let (($generated@@617 ($generated@@259 $generated@@616)))
 (and ($generated@@156 ($generated@@260 $generated@@141 ($generated@@261 $generated@@616))) (and ($generated@@156 ($generated@@260 $generated@@141 ($generated@@261 $generated@@616))) ($generated@@142 $generated@@613 $generated@@614 $generated@@617))))) (= ($generated@@139 $generated@@613 $generated@@614 ($generated@@256 $generated@@615) $generated@@616) (ite ($generated@@258 $generated@@616) ($generated@@247 ($generated@@262 ($generated@@257 $generated@@169)) ($generated@@262 ($generated@@257 $generated@@169))) (let (($generated@@618 ($generated@@259 $generated@@616)))
(let (($generated@@619 ($generated@@162 ($generated@@260 $generated@@141 ($generated@@261 $generated@@616)))))
(let (($generated@@620 ($generated@@161 ($generated@@260 $generated@@141 ($generated@@261 $generated@@616)))))
(let (($generated@@621 ($generated@@260 $generated@@141 ($generated@@162 ($generated@@139 $generated@@613 $generated@@614 $generated@@615 $generated@@618)))))
(let (($generated@@622 ($generated@@260 $generated@@141 ($generated@@161 ($generated@@139 $generated@@613 $generated@@614 $generated@@615 $generated@@618)))))
($generated@@247 ($generated@@262 ($generated@@263 $generated@@620 $generated@@622)) ($generated@@262 ($generated@@263 $generated@@619 $generated@@621))))))))))))
 :pattern ( ($generated@@139 $generated@@613 $generated@@614 ($generated@@256 $generated@@615) $generated@@616))
))))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@163) ($generated@@248 $generated@@623 ($generated@@79 0))) (and (= ($generated@@262 ($generated@@260 $generated@@2 $generated@@623)) $generated@@623) ($generated@@136 ($generated@@260 ($generated@@80 $generated@@163 $generated@@4) $generated@@623) ($generated@@79 0))))
 :pattern ( ($generated@@248 $generated@@623 ($generated@@79 0)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@163) (= (type $generated@@625) $generated@@68)) ($generated@@248 $generated@@624 ($generated@@292 $generated@@625))) (and (= ($generated@@262 ($generated@@260 ($generated@@80 $generated@@163 $generated@@4) $generated@@624)) $generated@@624) ($generated@@136 ($generated@@260 ($generated@@80 $generated@@163 $generated@@4) $generated@@624) ($generated@@292 $generated@@625))))
 :pattern ( ($generated@@248 $generated@@624 ($generated@@292 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@163) (= (type $generated@@627) $generated@@68)) ($generated@@248 $generated@@626 ($generated@@297 $generated@@627))) (and (= ($generated@@262 ($generated@@260 ($generated@@80 $generated@@163 $generated@@4) $generated@@626)) $generated@@626) ($generated@@136 ($generated@@260 ($generated@@80 $generated@@163 $generated@@4) $generated@@626) ($generated@@297 $generated@@627))))
 :pattern ( ($generated@@248 $generated@@626 ($generated@@297 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@163) (= (type $generated@@629) $generated@@68)) ($generated@@248 $generated@@628 ($generated@@171 $generated@@629))) (and (= ($generated@@262 ($generated@@260 ($generated@@80 $generated@@163 $generated@@2) $generated@@628)) $generated@@628) ($generated@@136 ($generated@@260 ($generated@@80 $generated@@163 $generated@@2) $generated@@628) ($generated@@171 $generated@@629))))
 :pattern ( ($generated@@248 $generated@@628 ($generated@@171 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@163) (= (type $generated@@631) $generated@@68)) ($generated@@248 $generated@@630 ($generated@@545 $generated@@631))) (and (= ($generated@@262 ($generated@@260 ($generated@@325 $generated@@163) $generated@@630)) $generated@@630) ($generated@@136 ($generated@@260 ($generated@@325 $generated@@163) $generated@@630) ($generated@@545 $generated@@631))))
 :pattern ( ($generated@@248 $generated@@630 ($generated@@545 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@68) (= (type $generated@@633) $generated@@163)) ($generated@@248 $generated@@633 ($generated@@143 $generated@@632))) (and (= ($generated@@262 ($generated@@260 $generated@@141 $generated@@633)) $generated@@633) ($generated@@136 ($generated@@260 $generated@@141 $generated@@633) ($generated@@143 $generated@@632))))
 :pattern ( ($generated@@248 $generated@@633 ($generated@@143 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@141) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@636) (and ($generated@@289 $generated@@634) ($generated@@78 $generated@@634 ($generated@@143 $generated@@635) $generated@@636)))) ($generated@@78 ($generated@@259 $generated@@634) ($generated@@143 $generated@@635) $generated@@636))
 :pattern ( ($generated@@78 ($generated@@259 $generated@@634) ($generated@@143 $generated@@635) $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@637) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@638) $generated@@68)) (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@637 ($generated@@171 $generated@@638) $generated@@639) (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@637 $generated@@640)))) ($generated@@308 $generated@@640 $generated@@638 $generated@@639))
 :pattern ( ($generated@@85 $generated@@637 $generated@@640))
))))
 :pattern ( ($generated@@78 $generated@@637 ($generated@@171 $generated@@638) $generated@@639))
)))
(assert (= $generated@@169 ($generated@@257 $generated@@169)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@141) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@643) (and ($generated@@156 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@68) ($generated@@78 $generated@@641 ($generated@@144 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@78 $generated@@641 ($generated@@144 $generated@@642 $generated@@644) $generated@@643))
))))) ($generated@@308 ($generated@@161 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@308 ($generated@@161 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) $generated@@141) (= (type $generated@@646) $generated@@68)) (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@647) (and ($generated@@156 $generated@@645) (exists (($generated@@648 T@U) ) (!  (and (= (type $generated@@648) $generated@@68) ($generated@@78 $generated@@645 ($generated@@144 $generated@@648 $generated@@646) $generated@@647))
 :pattern ( ($generated@@78 $generated@@645 ($generated@@144 $generated@@648 $generated@@646) $generated@@647))
))))) ($generated@@308 ($generated@@162 $generated@@645) $generated@@646 $generated@@647))
 :pattern ( ($generated@@308 ($generated@@162 $generated@@645) $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@163) (= (type $generated@@650) $generated@@163)) (= ($generated@@247 ($generated@@257 $generated@@649) ($generated@@257 $generated@@650)) ($generated@@257 ($generated@@247 $generated@@649 $generated@@650))))
 :pattern ( ($generated@@247 ($generated@@257 $generated@@649) ($generated@@257 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@163) (= (type $generated@@652) $generated@@141)) (= ($generated@@263 ($generated@@257 $generated@@651) ($generated@@257 $generated@@652)) ($generated@@257 ($generated@@263 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@263 ($generated@@257 $generated@@651) ($generated@@257 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (! (= ($generated@@262 ($generated@@257 $generated@@653)) ($generated@@257 ($generated@@262 $generated@@653)))
 :pattern ( ($generated@@262 ($generated@@257 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (! (let (($generated@@655 ($generated@@326 (type $generated@@654))))
 (=> (and (= (type $generated@@654) ($generated@@325 $generated@@655)) (= ($generated@@324 $generated@@654) 0)) (= $generated@@654 ($generated@@323 $generated@@655))))
 :pattern ( ($generated@@324 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (! (let (($generated@@659 (type $generated@@657)))
 (=> (and (and (= (type $generated@@656) ($generated@@80 $generated@@659 $generated@@2)) (= (type $generated@@658) $generated@@2)) (<= 0 ($generated $generated@@658))) (= ($generated@@342 ($generated@@86 $generated@@656 $generated@@657 $generated@@658)) (+ (- ($generated@@342 $generated@@656) ($generated ($generated@@85 $generated@@656 $generated@@657))) ($generated $generated@@658)))))
 :pattern ( ($generated@@342 ($generated@@86 $generated@@656 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@661) $generated@@2)) ($generated@@78 $generated@@661 $generated@@46 $generated@@660))
 :pattern ( ($generated@@78 $generated@@661 $generated@@46 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@663) $generated@@3)) ($generated@@78 $generated@@663 $generated@@47 $generated@@662))
 :pattern ( ($generated@@78 $generated@@663 $generated@@47 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@665) $generated@@4)) ($generated@@78 $generated@@665 $generated@@44 $generated@@664))
 :pattern ( ($generated@@78 $generated@@665 $generated@@44 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@667) $generated@@497)) ($generated@@78 $generated@@667 $generated@@45 $generated@@666))
 :pattern ( ($generated@@78 $generated@@667 $generated@@45 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@669) $generated@@163)) ($generated@@78 $generated@@669 $generated@@48 $generated@@668))
 :pattern ( ($generated@@78 $generated@@669 $generated@@48 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@670) $generated@@68) (= (type $generated@@671) $generated@@163)) (= (type $generated@@672) $generated@@141)) (= (type $generated@@673) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@673)) (= ($generated@@78 ($generated@@263 $generated@@671 $generated@@672) ($generated@@143 $generated@@670) $generated@@673)  (and ($generated@@308 $generated@@671 $generated@@670 $generated@@673) ($generated@@78 $generated@@672 ($generated@@143 $generated@@670) $generated@@673))))
 :pattern ( ($generated@@78 ($generated@@263 $generated@@671 $generated@@672) ($generated@@143 $generated@@670) $generated@@673))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@325 $generated@@163)) (= (type $generated@@675) $generated@@68)) (= ($generated@@136 $generated@@674 ($generated@@545 $generated@@675)) (forall (($generated@@676 Int) ) (!  (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@324 $generated@@674))) ($generated@@248 ($generated@@546 $generated@@674 $generated@@676) $generated@@675))
 :pattern ( ($generated@@546 $generated@@674 $generated@@676))
))))
 :pattern ( ($generated@@136 $generated@@674 ($generated@@545 $generated@@675)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 Int) ) (!  (=> (= (type $generated@@678) ($generated@@325 $generated@@163)) (=> (and (<= 0 $generated@@679) (< $generated@@679 ($generated@@324 $generated@@678))) (< ($generated@@587 ($generated@@260 $generated@@141 ($generated@@546 $generated@@678 $generated@@679))) ($generated@@677 $generated@@678))))
 :pattern ( ($generated@@587 ($generated@@260 $generated@@141 ($generated@@546 $generated@@678 $generated@@679))))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@353 $generated@@163 $generated@@163)) (= (type $generated@@681) $generated@@68)) (= (type $generated@@682) $generated@@68)) ($generated@@136 $generated@@680 ($generated@@455 $generated@@681 $generated@@682))) (and (and ($generated@@136 ($generated@@351 $generated@@680) ($generated@@292 $generated@@681)) ($generated@@136 ($generated@@398 $generated@@680) ($generated@@292 $generated@@682))) ($generated@@136 ($generated@@429 $generated@@680) ($generated@@292 ($generated@@144 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@136 $generated@@680 ($generated@@455 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) ($generated@@371 $generated@@163 $generated@@163)) (= (type $generated@@684) $generated@@68)) (= (type $generated@@685) $generated@@68)) ($generated@@136 $generated@@683 ($generated@@463 $generated@@684 $generated@@685))) (and (and ($generated@@136 ($generated@@369 $generated@@683) ($generated@@297 $generated@@684)) ($generated@@136 ($generated@@409 $generated@@683) ($generated@@297 $generated@@685))) ($generated@@136 ($generated@@437 $generated@@683) ($generated@@297 ($generated@@144 $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@136 $generated@@683 ($generated@@463 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@2) ($generated@@136 $generated@@686 $generated@@46))
 :pattern ( ($generated@@136 $generated@@686 $generated@@46))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@3) ($generated@@136 $generated@@687 $generated@@47))
 :pattern ( ($generated@@136 $generated@@687 $generated@@47))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@4) ($generated@@136 $generated@@688 $generated@@44))
 :pattern ( ($generated@@136 $generated@@688 $generated@@44))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@497) ($generated@@136 $generated@@689 $generated@@45))
 :pattern ( ($generated@@136 $generated@@689 $generated@@45))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@163) ($generated@@136 $generated@@690 $generated@@48))
 :pattern ( ($generated@@136 $generated@@690 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@691) $generated@@141) (= (type $generated@@692) $generated@@163)) (= (type $generated@@693) $generated@@163)) (= (type $generated@@694) $generated@@68)) (= (type $generated@@695) $generated@@68)) (= (type $generated@@696) $generated@@141)) (= (type $generated@@697) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@698) $generated@@141)) (= (type $generated@@699) $generated@@141)) (= (type $generated@@700) $generated@@163)) (= (type $generated@@701) $generated@@163)) (= (type $generated@@702) $generated@@163)) (= (type $generated@@703) $generated@@163)) (= (type $generated@@704) $generated@@141)) (= (type $generated@@705) $generated@@141)) (= (type $generated@@706) $generated@@141)) (= (type $generated@@707) ($generated@@178 $generated@@81 $generated@@4))) (= (type $generated@@708) $generated@@81)) (= (type $generated@@709) ($generated@@178 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@711 true))
(let (($generated@@712  (=> (= $generated@@691 ($generated@@247 $generated@@692 $generated@@693)) (=> (and ($generated@@248 $generated@@692 $generated@@694) ($generated@@248 $generated@@693 $generated@@695)) (=> (and (and (and (and (and ($generated@@136 $generated@@696 ($generated@@143 ($generated@@144 $generated@@694 $generated@@695))) ($generated@@78 $generated@@696 ($generated@@143 ($generated@@144 $generated@@694 $generated@@695)) $generated@@697)) (= $generated@@698 $generated@@699)) (and ($generated@@136 $generated@@698 ($generated@@143 ($generated@@144 $generated@@694 $generated@@695))) (= $generated@@696 $generated@@698))) (and (and (and ($generated@@248 $generated@@700 $generated@@695) ($generated@@308 $generated@@700 $generated@@695 $generated@@697)) (= $generated@@701 $generated@@693)) (and ($generated@@248 $generated@@701 $generated@@695) (= $generated@@700 $generated@@701)))) (and (and (and (and ($generated@@248 $generated@@702 $generated@@694) ($generated@@308 $generated@@702 $generated@@694 $generated@@697)) (= $generated@@703 $generated@@692)) (and ($generated@@248 $generated@@703 $generated@@694) (= $generated@@702 $generated@@703))) (and (and (and ($generated@@136 $generated@@704 ($generated@@143 $generated@@694)) ($generated@@78 $generated@@704 ($generated@@143 $generated@@694) $generated@@697)) (and ($generated@@136 $generated@@705 ($generated@@143 $generated@@695)) ($generated@@78 $generated@@705 ($generated@@143 $generated@@695) $generated@@697))) (and ($generated@@78 $generated@@696 ($generated@@143 ($generated@@144 $generated@@694 $generated@@695)) $generated@@697) (= (ControlFlow 0 5) (- 0 4)))))) (< ($generated@@587 $generated@@696) ($generated@@587 $generated@@706)))))))
(let (($generated@@713  (=> (= $generated@@706 ($generated@@263 ($generated@@262 $generated@@691) $generated@@699)) (=> (and ($generated@@136 $generated@@691 ($generated@@144 $generated@@694 $generated@@695)) ($generated@@136 $generated@@699 ($generated@@143 ($generated@@144 $generated@@694 $generated@@695)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@712) (=> (= (ControlFlow 0 7) 6) $generated@@711))))))
(let (($generated@@714 true))
(let (($generated@@715  (=> (not (= $generated@@706 $generated@@169)) (and (=> (= (ControlFlow 0 8) 7) $generated@@713) (=> (= (ControlFlow 0 8) 3) $generated@@714)))))
(let (($generated@@716 true))
(let (($generated@@717  (=> (= $generated@@707 ($generated@@232 $generated@@708 $generated@@697 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 2) $generated@@716) (=> (= (ControlFlow 0 9) 8) $generated@@715)))))
(let (($generated@@718 true))
(let (($generated@@719  (=> (= $generated@@709 ($generated@@177 $generated@@708 $generated@@697 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@718) (=> (= (ControlFlow 0 10) 9) $generated@@717)))))
(let (($generated@@720  (=> (and (and (and ($generated@@244 $generated@@697) ($generated@@710 $generated@@697)) ($generated@@136 $generated@@706 ($generated@@143 ($generated@@144 $generated@@694 $generated@@695)))) (and (= 1 $generated@@138) (= (ControlFlow 0 11) 10))) $generated@@719)))
$generated@@720)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
