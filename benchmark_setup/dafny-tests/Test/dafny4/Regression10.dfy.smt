(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@333 (T@U) Int)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@T) T@U)
(declare-fun $generated@@416 () T@T)
(declare-fun $generated@@420 (T@U) Int)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@465 (T@U Int) T@U)
(declare-fun $generated@@474 (T@U) Int)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@517 (T@T) T@U)
(declare-fun $generated@@523 (Int Int) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@273 (type $generated@@334))))
(let (($generated@@336 ($generated@@272 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@271 $generated@@336 $generated@@335)) (= (= ($generated@@333 $generated@@334) 0) (= $generated@@334 ($generated@@270 $generated@@336 $generated@@335))))))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@221 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@221 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@342) $generated@@64)) (= (type $generated@@343) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@341 ($generated@@226 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) ($generated@@0 ($generated@@81 $generated@@341 $generated@@344))) ($generated@@238 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@81 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@74 $generated@@341 ($generated@@226 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@346) $generated@@345)) 0))
 :pattern ( (let (($generated@@346 (type $generated@@345)))
($generated@@81 ($generated@@264 $generated@@346) $generated@@345)))
)))
(assert  (and (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@347 $generated@@350)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@347 $generated@@350))
)) (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@348 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@348 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@273 (type $generated@@353))))
(let (($generated@@355 ($generated@@272 (type $generated@@353))))
(= (type ($generated@@349 $generated@@353)) ($generated@@76 $generated@@355 $generated@@354))))
 :pattern ( ($generated@@349 $generated@@353))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@357) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@356) $generated@@357))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@356) ($generated@@143 ($generated@@348 $generated@@136 $generated@@357)))) (= ($generated@@81 ($generated@@349 $generated@@356) ($generated@@143 ($generated@@348 $generated@@136 $generated@@357))) ($generated@@144 ($generated@@348 $generated@@136 $generated@@357))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@356) $generated@@357))
)))
(assert  (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@360)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@358 $generated@@360))
)) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@291 (type $generated@@361))))
(let (($generated@@363 ($generated@@290 (type $generated@@361))))
(= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@359 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@365) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@364) ($generated@@143 ($generated@@348 $generated@@136 $generated@@365)))) (= ($generated@@81 ($generated@@359 $generated@@364) ($generated@@143 ($generated@@348 $generated@@136 $generated@@365))) ($generated@@144 ($generated@@348 $generated@@136 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(let (($generated@@369 ($generated@@272 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@271 $generated@@369 $generated@@368)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@366) $generated@@367)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@366) $generated@@370)) (= $generated@@367 ($generated@@81 ($generated@@349 $generated@@366) $generated@@370))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@366) $generated@@370))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@366) $generated@@370))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(let (($generated@@374 ($generated@@290 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@289 $generated@@374 $generated@@373)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@371) $generated@@372)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@371) $generated@@375)) (= $generated@@372 ($generated@@81 ($generated@@359 $generated@@371) $generated@@375))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@371) $generated@@375))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@371) $generated@@375))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@377 $generated@@378)) $generated@@64)
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@379) $generated@@383))) (and ($generated@@238 ($generated@@81 ($generated@@349 $generated@@379) $generated@@383) $generated@@381 $generated@@382) ($generated@@238 $generated@@383 $generated@@380 $generated@@382)))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@379) $generated@@383))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@387) $generated@@391))) (and ($generated@@238 ($generated@@81 ($generated@@359 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@238 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@T) ) (! (= (type ($generated@@392 $generated@@393)) ($generated@@76 $generated@@393 $generated@@4))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@291 (type $generated@@394))))
(let (($generated@@396 ($generated@@290 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@289 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@288 $generated@@396 $generated@@395)) (= ($generated@@287 $generated@@394) ($generated@@392 $generated@@396))))))
 :pattern ( ($generated@@287 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@291 (type $generated@@397))))
(let (($generated@@399 ($generated@@290 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@289 $generated@@399 $generated@@398)) (= (= $generated@@397 ($generated@@288 $generated@@399 $generated@@398)) (= ($generated@@323 $generated@@397) ($generated@@392 $generated@@398))))))
 :pattern ( ($generated@@323 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@291 (type $generated@@400))))
(let (($generated@@402 ($generated@@290 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@289 $generated@@402 $generated@@401)) (= (= $generated@@400 ($generated@@288 $generated@@402 $generated@@401)) (= ($generated@@358 $generated@@400) ($generated@@392 $generated@@145))))))
 :pattern ( ($generated@@358 $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@273 (type $generated@@403))))
(let (($generated@@405 ($generated@@272 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@271 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@270 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (and (and (= (type $generated@@406) $generated@@145) (= (type $generated@@407) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@403) ($generated@@258 ($generated@@211 $generated@@406 $generated@@407)))))
 :no-pattern (type $generated@@406)
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@347 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@291 (type $generated@@408))))
(let (($generated@@410 ($generated@@290 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@289 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@288 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (and (and (= (type $generated@@411) $generated@@145) (= (type $generated@@412) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@408) ($generated@@258 ($generated@@211 $generated@@411 $generated@@412)))))
 :no-pattern (type $generated@@411)
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@358 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@46)) (and (= ($generated@@258 ($generated@@348 $generated@@2 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@348 $generated@@2 $generated@@413) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@46))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@212 $generated@@414 $generated@@47)) (and (= ($generated@@258 ($generated@@348 $generated@@3 $generated@@414)) $generated@@414) ($generated@@132 ($generated@@348 $generated@@3 $generated@@414) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@414 $generated@@47))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@212 $generated@@415 $generated@@44)) (and (= ($generated@@258 ($generated@@348 $generated@@4 $generated@@415)) $generated@@415) ($generated@@132 ($generated@@348 $generated@@4 $generated@@415) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@415 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@416) 20))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@45)) (and (= ($generated@@258 ($generated@@348 $generated@@416 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@348 $generated@@416 $generated@@417) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@45))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@418) $generated@@419) ($generated@@132 $generated@@418 $generated@@419)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@79 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@76 $generated@@422 $generated@@4)) (<= 0 ($generated@@420 $generated@@421))))
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@79 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@76 $generated@@424 $generated@@2)) (<= 0 ($generated@@263 $generated@@423))))
 :pattern ( ($generated@@263 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@253 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@252 $generated@@426)) (<= 0 ($generated@@251 $generated@@425))))
 :pattern ( ($generated@@251 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@273 (type $generated@@427))))
(let (($generated@@429 ($generated@@272 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@271 $generated@@429 $generated@@428)) (<= 0 ($generated@@333 $generated@@427)))))
 :pattern ( ($generated@@333 $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@376 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@376 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@376 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@376 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@376 $generated@@438 $generated@@439)) $generated@@58))
 :pattern ( ($generated@@376 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@384 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@384 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@384 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@384 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@448 $generated@@449)) $generated@@59))
 :pattern ( ($generated@@384 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@450 $generated@@451)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@135 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@135 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@135 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@135 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@145) (= (type $generated@@463) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@211 $generated@@462 $generated@@463))
)))
(assert  (and (forall (($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@466))
)) (forall (($generated@@467 T@U) ($generated@@468 Int) ) (! (let (($generated@@469 ($generated@@253 (type $generated@@467))))
(= (type ($generated@@465 $generated@@467 $generated@@468)) $generated@@469))
 :pattern ( ($generated@@465 $generated@@467 $generated@@468))
))))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (= (type $generated@@470) ($generated@@252 $generated@@145)) (= (type $generated@@471) $generated@@64)) (= (type $generated@@472) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@470 ($generated@@464 $generated@@471) $generated@@472) (forall (($generated@@473 Int) ) (!  (=> (and (<= 0 $generated@@473) (< $generated@@473 ($generated@@251 $generated@@470))) ($generated@@238 ($generated@@465 $generated@@470 $generated@@473) $generated@@471 $generated@@472))
 :pattern ( ($generated@@465 $generated@@470 $generated@@473))
))))
 :pattern ( ($generated@@74 $generated@@470 ($generated@@464 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@475 Int) ) (! (= ($generated@@474 ($generated@@75 $generated@@475)) $generated@@475)
 :pattern ( ($generated@@75 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@221 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@221 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@479)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@226 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@226 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@483)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@150 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@150 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@487)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@464 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@464 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@464 $generated@@491)) $generated@@57))
 :pattern ( ($generated@@464 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
(= ($generated@@348 $generated@@493 ($generated@@258 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@258 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= ($generated@@132 $generated@@494 ($generated@@376 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@494) $generated@@497))) (and ($generated@@212 ($generated@@81 ($generated@@349 $generated@@494) $generated@@497) $generated@@496) ($generated@@212 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@494) $generated@@497))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@132 $generated@@494 ($generated@@376 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) (= ($generated@@132 $generated@@498 ($generated@@384 $generated@@499 $generated@@500)) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@498) $generated@@501))) (and ($generated@@212 ($generated@@81 ($generated@@359 $generated@@498) $generated@@501) $generated@@500) ($generated@@212 $generated@@501 $generated@@499)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@498) $generated@@501))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@498) $generated@@501))
))))
 :pattern ( ($generated@@132 $generated@@498 ($generated@@384 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@145)) (< ($generated@@502 $generated@@504) ($generated@@503 ($generated@@211 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@211 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@145)) (< ($generated@@502 $generated@@507) ($generated@@503 ($generated@@211 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@211 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) ($generated@@212 $generated@@508 ($generated@@376 $generated@@509 $generated@@510))) (and (= ($generated@@258 ($generated@@348 ($generated@@271 $generated@@145 $generated@@145) $generated@@508)) $generated@@508) ($generated@@132 ($generated@@348 ($generated@@271 $generated@@145 $generated@@145) $generated@@508) ($generated@@376 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@212 $generated@@508 ($generated@@376 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@145) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) ($generated@@212 $generated@@511 ($generated@@384 $generated@@512 $generated@@513))) (and (= ($generated@@258 ($generated@@348 ($generated@@289 $generated@@145 $generated@@145) $generated@@511)) $generated@@511) ($generated@@132 ($generated@@348 ($generated@@289 $generated@@145 $generated@@145) $generated@@511) ($generated@@384 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@511 ($generated@@384 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@145)) ($generated@@212 $generated@@516 ($generated@@135 $generated@@514 $generated@@515))) (and (= ($generated@@258 ($generated@@348 $generated@@136 $generated@@516)) $generated@@516) ($generated@@132 ($generated@@348 $generated@@136 $generated@@516) ($generated@@135 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@212 $generated@@516 ($generated@@135 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@518 T@T) ) (! (= (type ($generated@@517 $generated@@518)) ($generated@@76 $generated@@518 $generated@@4))
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
 (not ($generated@@0 ($generated@@81 ($generated@@517 $generated@@520) $generated@@519))))
 :pattern ( (let (($generated@@520 (type $generated@@519)))
($generated@@81 ($generated@@517 $generated@@520) $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
 (not ($generated@@0 ($generated@@81 ($generated@@392 $generated@@522) $generated@@521))))
 :pattern ( (let (($generated@@522 (type $generated@@521)))
($generated@@81 ($generated@@392 $generated@@522) $generated@@521)))
)))
(assert (forall (($generated@@524 Int) ($generated@@525 Int) ) (! (= ($generated@@523 $generated@@524 $generated@@525) (mod $generated@@524 $generated@@525))
 :pattern ( ($generated@@523 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@528 $generated@@529)) $generated@@62) (= ($generated@@526 ($generated@@135 $generated@@528 $generated@@529)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@136) (= ($generated@@502 ($generated@@258 $generated@@530)) ($generated@@503 $generated@@530)))
 :pattern ( ($generated@@502 ($generated@@258 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@273 (type $generated@@531))))
(let (($generated@@533 ($generated@@272 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@271 $generated@@533 $generated@@532)) (= ($generated@@420 ($generated@@269 $generated@@531)) ($generated@@333 $generated@@531)))))
 :pattern ( ($generated@@420 ($generated@@269 $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@273 (type $generated@@534))))
(let (($generated@@536 ($generated@@272 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@271 $generated@@536 $generated@@535)) (= ($generated@@420 ($generated@@347 $generated@@534)) ($generated@@333 $generated@@534)))))
 :pattern ( ($generated@@420 ($generated@@347 $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@273 (type $generated@@537))))
(let (($generated@@539 ($generated@@272 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@271 $generated@@539 $generated@@538)) (<= ($generated@@420 ($generated@@312 $generated@@537)) ($generated@@333 $generated@@537)))))
 :pattern ( ($generated@@420 ($generated@@312 $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@145) ($generated@@212 $generated@@540 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@348 $generated@@2 $generated@@540)) $generated@@540) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@540 ($generated@@75 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@212 $generated@@541 ($generated@@221 $generated@@542))) (and (= ($generated@@258 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@541) ($generated@@221 $generated@@542))))
 :pattern ( ($generated@@212 $generated@@541 ($generated@@221 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@64)) ($generated@@212 $generated@@543 ($generated@@226 $generated@@544))) (and (= ($generated@@258 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@543)) $generated@@543) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@543) ($generated@@226 $generated@@544))))
 :pattern ( ($generated@@212 $generated@@543 ($generated@@226 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@145) (= (type $generated@@546) $generated@@64)) ($generated@@212 $generated@@545 ($generated@@150 $generated@@546))) (and (= ($generated@@258 ($generated@@348 ($generated@@76 $generated@@145 $generated@@2) $generated@@545)) $generated@@545) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@2) $generated@@545) ($generated@@150 $generated@@546))))
 :pattern ( ($generated@@212 $generated@@545 ($generated@@150 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@64)) ($generated@@212 $generated@@547 ($generated@@464 $generated@@548))) (and (= ($generated@@258 ($generated@@348 ($generated@@252 $generated@@145) $generated@@547)) $generated@@547) ($generated@@132 ($generated@@348 ($generated@@252 $generated@@145) $generated@@547) ($generated@@464 $generated@@548))))
 :pattern ( ($generated@@212 $generated@@547 ($generated@@464 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 ($generated@@79 (type $generated@@549))))
 (=> (= (type $generated@@549) ($generated@@76 $generated@@550 $generated@@4)) (and (= (= ($generated@@420 $generated@@549) 0) (= $generated@@549 ($generated@@517 $generated@@550))) (=> (not (= ($generated@@420 $generated@@549) 0)) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@550) ($generated@@0 ($generated@@81 $generated@@549 $generated@@551)))
 :no-pattern (type $generated@@551)
 :no-pattern ($generated $generated@@551)
 :no-pattern ($generated@@0 $generated@@551)
))))))
 :pattern ( ($generated@@420 $generated@@549))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@552 ($generated@@150 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@552 $generated@@555)))) ($generated@@238 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@81 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@150 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@136) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@558) (and ($generated@@134 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@135 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@135 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@238 ($generated@@143 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@562) (and ($generated@@134 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@74 $generated@@560 ($generated@@135 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@135 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@238 ($generated@@144 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@564) ($generated@@233 $generated@@565)) ($generated@@233 ($generated@@211 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@564) ($generated@@233 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@566))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@567)) ($generated@@233 ($generated@@258 $generated@@567)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@253 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@252 $generated@@569)) (= ($generated@@251 $generated@@568) 0)) (= $generated@@568 ($generated@@250 $generated@@569))))
 :pattern ( ($generated@@251 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@76 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@263 ($generated@@82 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@263 $generated@@570) ($generated ($generated@@81 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@2)) ($generated@@74 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@3)) ($generated@@74 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@4)) ($generated@@74 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@416)) ($generated@@74 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@145)) ($generated@@74 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@252 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= ($generated@@132 $generated@@584 ($generated@@464 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@251 $generated@@584))) ($generated@@212 ($generated@@465 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@465 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@464 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@251 $generated@@588))) (< ($generated@@503 ($generated@@348 $generated@@136 ($generated@@465 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@503 ($generated@@348 $generated@@136 ($generated@@465 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) ($generated@@132 $generated@@590 ($generated@@376 $generated@@591 $generated@@592))) (and (and ($generated@@132 ($generated@@269 $generated@@590) ($generated@@221 $generated@@591)) ($generated@@132 ($generated@@312 $generated@@590) ($generated@@221 $generated@@592))) ($generated@@132 ($generated@@347 $generated@@590) ($generated@@221 ($generated@@135 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@132 $generated@@590 ($generated@@376 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) $generated@@64)) ($generated@@132 $generated@@593 ($generated@@384 $generated@@594 $generated@@595))) (and (and ($generated@@132 ($generated@@287 $generated@@593) ($generated@@226 $generated@@594)) ($generated@@132 ($generated@@323 $generated@@593) ($generated@@226 $generated@@595))) ($generated@@132 ($generated@@358 $generated@@593) ($generated@@226 ($generated@@135 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@132 $generated@@593 ($generated@@384 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@132 $generated@@596 $generated@@46))
 :pattern ( ($generated@@132 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@132 $generated@@597 $generated@@47))
 :pattern ( ($generated@@132 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@132 $generated@@598 $generated@@44))
 :pattern ( ($generated@@132 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@416) ($generated@@132 $generated@@599 $generated@@45))
 :pattern ( ($generated@@132 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@145) ($generated@@132 $generated@@600 $generated@@48))
 :pattern ( ($generated@@132 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 (T@U) Bool)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(assert  (and (and (and (and (= (type $generated@@601) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@602) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@603) $generated@@77)) (= (type $generated@@604) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@606) $generated@@64)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@608  (=> (and (not (= ($generated@@420 $generated@@601) ($generated@@231 0))) (= (ControlFlow 0 5) (- 0 4))) (not (= ($generated@@231 2) 0)))))
(let (($generated@@609 true))
(let (($generated@@610  (=> (= (ControlFlow 0 2) (- 0 1)) (or (= ($generated@@420 ($generated@@233 ($generated@@517 $generated@@145))) ($generated@@231 0)) (= ($generated@@523 ($generated@@420 ($generated@@233 ($generated@@517 $generated@@145))) ($generated@@231 2)) ($generated@@231 0))))))
(let (($generated@@611  (=> (= $generated@@602 ($generated@@156 $generated@@603 $generated@@604 $generated@@60 false)) (and (and (=> (= (ControlFlow 0 6) 2) $generated@@610) (=> (= (ControlFlow 0 6) 3) $generated@@609)) (=> (= (ControlFlow 0 6) 5) $generated@@608)))))
(let (($generated@@612  (=> (and (and (and ($generated@@237 $generated@@604) ($generated@@605 $generated@@604)) ($generated@@132 $generated@@601 ($generated@@221 $generated@@606))) (and (= 0 $generated@@607) (= (ControlFlow 0 7) 6))) $generated@@611)))
$generated@@612))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@257 (T@T) T@U)
(declare-fun $generated@@258 (T@U) Int)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@343 (T@U) Int)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@442 (T@U) Int)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U Int) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@548 (T@T) T@U)
(declare-fun $generated@@554 (Int Int) Int)
(declare-fun $generated@@623 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> (= (type $generated@@135) $generated@@2) ($generated@@134 $generated@@135 ($generated@@77 0)))
 :pattern ( ($generated@@134 $generated@@135 ($generated@@77 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@137) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@136 $generated@@139)) $generated@@66)
 :pattern ( ($generated@@136 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (= (type ($generated@@138 $generated@@140)) $generated@@66)
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@141) $generated@@66) (= (type $generated@@142) ($generated@@78 $generated@@137 $generated@@4))) (= (type $generated@@143) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@142 ($generated@@136 $generated@@141) $generated@@143) ($generated@@76 $generated@@142 ($generated@@138 $generated@@141) $generated@@143)))
 :pattern ( ($generated@@76 $generated@@142 ($generated@@136 $generated@@141) $generated@@143))
)))
(assert  (and (= ($generated@@1 $generated@@146) 15) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@66)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@66) (= (type $generated@@150) $generated@@66)) (= (type $generated@@151) $generated@@146)) ($generated@@134 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@134 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@137)
 :pattern ( ($generated@@153 $generated@@155))
)) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@137)
 :pattern ( ($generated@@154 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@146) (= (type $generated@@158) $generated@@146)) true) (= ($generated@@152 $generated@@157 $generated@@158)  (and (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)) (= ($generated@@154 $generated@@157) ($generated@@154 $generated@@158)))))
 :pattern ( ($generated@@152 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@134 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@134 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@146)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@137)) (= (type $generated@@227) $generated@@137)) (= ($generated@@134 ($generated@@220 $generated@@226 $generated@@227) ($generated@@145 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@134 ($generated@@220 $generated@@226 $generated@@227) ($generated@@145 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@146) (= (type $generated@@229) $generated@@146)) (= ($generated@@152 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@152 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@231) $generated@@66)) (= ($generated@@134 $generated@@230 ($generated@@138 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@137) ($generated@@0 ($generated@@83 $generated@@230 $generated@@232))) ($generated@@221 $generated@@232 $generated@@231))
 :pattern ( ($generated@@83 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@134 $generated@@230 ($generated@@138 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@66)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@236) $generated@@66)) (= ($generated@@134 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@137) ($generated@@0 ($generated@@83 $generated@@235 $generated@@237))) ($generated@@221 $generated@@237 $generated@@236))
 :pattern ( ($generated@@83 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@134 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 Int) ) (! (= ($generated@@238 $generated@@239) $generated@@239)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (let (($generated@@242 (type $generated@@241)))
(= (type ($generated@@240 $generated@@241)) $generated@@242))
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@240 $generated@@243) $generated@@243)
 :pattern ( ($generated@@240 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) $generated@@66) (= (type $generated@@247) $generated@@66)) (= (type $generated@@248) $generated@@137)) (= (type $generated@@249) $generated@@137)) (= (type $generated@@250) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@244 $generated@@250)) (= ($generated@@76 ($generated@@220 $generated@@248 $generated@@249) ($generated@@145 $generated@@246 $generated@@247) $generated@@250)  (and ($generated@@245 $generated@@248 $generated@@246 $generated@@250) ($generated@@245 $generated@@249 $generated@@247 $generated@@250))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@248 $generated@@249) ($generated@@145 $generated@@246 $generated@@247) $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@146) (= ($generated@@144 $generated@@253) (= ($generated@@251 $generated@@253) $generated@@61)))
 :pattern ( ($generated@@144 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@146) ($generated@@144 $generated@@254)) (exists (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (and (and (= (type $generated@@255) $generated@@137) (= (type $generated@@256) $generated@@137)) (= $generated@@254 ($generated@@220 $generated@@255 $generated@@256)))
 :no-pattern (type $generated@@255)
 :no-pattern (type $generated@@256)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
)))
 :pattern ( ($generated@@144 $generated@@254))
)))
(assert  (and (and (forall (($generated@@261 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@261)) 17)) (forall (($generated@@262 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@262)) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
))) (forall (($generated@@263 T@T) ) (! (= (type ($generated@@257 $generated@@263)) ($generated@@259 $generated@@263))
 :pattern ( ($generated@@257 $generated@@263))
))))
(assert (forall (($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@264)) 0)
 :pattern ( ($generated@@257 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@137)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@66) (= (type $generated@@269) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269) ($generated@@76 $generated@@267 $generated@@268 $generated@@269)))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@272 T@T) ) (! (= (type ($generated@@271 $generated@@272)) ($generated@@78 $generated@@272 $generated@@2))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@81 (type $generated@@273))))
 (=> (= (type $generated@@273) ($generated@@78 $generated@@274 $generated@@2)) (and (= (= ($generated@@270 $generated@@273) 0) (= $generated@@273 ($generated@@271 $generated@@274))) (=> (not (= ($generated@@270 $generated@@273) 0)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) (< 0 ($generated ($generated@@83 $generated@@273 $generated@@275))))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@71)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@66) (and (= ($generated@@74 ($generated@@136 $generated@@278)) $generated@@63) (= ($generated@@276 ($generated@@136 $generated@@278)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@78 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@83 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@83 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@78 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@81 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@78 $generated@@316 $generated@@2)) (= ($generated@@160 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (and (<= 0 ($generated ($generated@@83 $generated@@315 $generated@@317))) (<= ($generated ($generated@@83 $generated@@315 $generated@@317)) ($generated@@270 $generated@@315))))
 :pattern ( ($generated@@83 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@160 $generated@@315))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@283 (type $generated@@318))))
(let (($generated@@320 ($generated@@282 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@281 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@280 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@83 ($generated@@279 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@279 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@283 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@78 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@283 (type $generated@@325))))
(let (($generated@@327 ($generated@@282 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@281 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@280 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@301 (type $generated@@329))))
(let (($generated@@331 ($generated@@300 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@299 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@298 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@297 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@301 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(let (($generated@@338 ($generated@@300 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@299 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@298 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@341) $generated@@66)) (= ($generated@@134 $generated@@340 ($generated@@159 $generated@@341)) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@137) (< 0 ($generated ($generated@@83 $generated@@340 $generated@@342)))) ($generated@@221 $generated@@342 $generated@@341))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
))))
 :pattern ( ($generated@@134 $generated@@340 ($generated@@159 $generated@@341)))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@283 (type $generated@@344))))
(let (($generated@@346 ($generated@@282 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@281 $generated@@346 $generated@@345)) (= (= ($generated@@343 $generated@@344) 0) (= $generated@@344 ($generated@@280 $generated@@346 $generated@@345))))))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@348) $generated@@66)) (= (type $generated@@349) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@347 ($generated@@138 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@137) ($generated@@0 ($generated@@83 $generated@@347 $generated@@350))) ($generated@@245 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@76 $generated@@347 ($generated@@138 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@352) $generated@@66)) (= (type $generated@@353) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@351 ($generated@@233 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@137) ($generated@@0 ($generated@@83 $generated@@351 $generated@@354))) ($generated@@245 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@83 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@76 $generated@@351 ($generated@@233 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@83 ($generated@@271 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@83 ($generated@@271 $generated@@356) $generated@@355)))
)))
(assert  (and (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@357 $generated@@360)) ($generated@@78 $generated@@137 $generated@@4))
 :pattern ( ($generated@@357 $generated@@360))
)) (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@358 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@283 (type $generated@@363))))
(let (($generated@@365 ($generated@@282 (type $generated@@363))))
(= (type ($generated@@359 $generated@@363)) ($generated@@78 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@359 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@281 $generated@@137 $generated@@137)) (= (type $generated@@367) $generated@@137)) (= ($generated@@0 ($generated@@83 ($generated@@357 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@83 ($generated@@279 $generated@@366) ($generated@@153 ($generated@@358 $generated@@146 $generated@@367)))) (= ($generated@@83 ($generated@@359 $generated@@366) ($generated@@153 ($generated@@358 $generated@@146 $generated@@367))) ($generated@@154 ($generated@@358 $generated@@146 $generated@@367))))))
 :pattern ( ($generated@@83 ($generated@@357 $generated@@366) $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@137 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@301 (type $generated@@371))))
(let (($generated@@373 ($generated@@300 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@78 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@299 $generated@@137 $generated@@137)) (= (type $generated@@375) $generated@@137)) (= ($generated@@0 ($generated@@83 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@374) ($generated@@153 ($generated@@358 $generated@@146 $generated@@375)))) (= ($generated@@83 ($generated@@369 $generated@@374) ($generated@@153 ($generated@@358 $generated@@146 $generated@@375))) ($generated@@154 ($generated@@358 $generated@@146 $generated@@375))))))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@282 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@281 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@83 ($generated@@322 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@83 ($generated@@279 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@83 ($generated@@359 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@83 ($generated@@279 $generated@@376) $generated@@380))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@300 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@299 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@369 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@66)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@281 $generated@@137 $generated@@137)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) $generated@@66)) (= (type $generated@@392) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@279 $generated@@389) $generated@@393))) (and ($generated@@245 ($generated@@83 ($generated@@359 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@245 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@389) $generated@@393))
 :pattern ( ($generated@@83 ($generated@@279 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@76 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@66)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@299 $generated@@137 $generated@@137)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) $generated@@66)) (= (type $generated@@400) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@397) $generated@@401))) (and ($generated@@245 ($generated@@83 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@245 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@76 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= (type ($generated@@402 $generated@@403 $generated@@404)) ($generated@@78 $generated@@405 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@407)))
 (=> (and (and (= (type $generated@@406) ($generated@@78 $generated@@409 $generated@@4)) (= (type $generated@@408) $generated@@409)) ($generated@@0 ($generated@@83 $generated@@406 $generated@@408))) ($generated@@0 ($generated@@83 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))))
 :pattern ( ($generated@@402 $generated@@406 $generated@@407) ($generated@@83 $generated@@406 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@411)))
 (=> (and (= (type $generated@@410) ($generated@@78 $generated@@413 $generated@@4)) (= (type $generated@@412) $generated@@413)) (= ($generated@@0 ($generated@@83 ($generated@@402 $generated@@410 $generated@@411) $generated@@412))  (or (= $generated@@412 $generated@@411) ($generated@@0 ($generated@@83 $generated@@410 $generated@@412))))))
 :pattern ( ($generated@@83 ($generated@@402 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@78 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@301 (type $generated@@416))))
(let (($generated@@418 ($generated@@300 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@299 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@298 $generated@@418 $generated@@417)) (= ($generated@@297 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@297 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@301 (type $generated@@419))))
(let (($generated@@421 ($generated@@300 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@299 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@298 $generated@@421 $generated@@420)) (= ($generated@@333 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@333 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@301 (type $generated@@422))))
(let (($generated@@424 ($generated@@300 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@299 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@298 $generated@@424 $generated@@423)) (= ($generated@@368 $generated@@422) ($generated@@414 $generated@@137))))))
 :pattern ( ($generated@@368 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@283 (type $generated@@425))))
(let (($generated@@427 ($generated@@282 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@281 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@280 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@137) (= (type $generated@@429) $generated@@137)) ($generated@@0 ($generated@@83 ($generated@@357 $generated@@425) ($generated@@265 ($generated@@220 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@357 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@301 (type $generated@@430))))
(let (($generated@@432 ($generated@@300 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@299 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@298 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@137) (= (type $generated@@434) $generated@@137)) ($generated@@0 ($generated@@83 ($generated@@368 $generated@@430) ($generated@@265 ($generated@@220 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@368 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@137) ($generated@@221 $generated@@435 $generated@@46)) (and (= ($generated@@265 ($generated@@358 $generated@@2 $generated@@435)) $generated@@435) ($generated@@134 ($generated@@358 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@137) ($generated@@221 $generated@@436 $generated@@47)) (and (= ($generated@@265 ($generated@@358 $generated@@3 $generated@@436)) $generated@@436) ($generated@@134 ($generated@@358 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@137) ($generated@@221 $generated@@437 $generated@@44)) (and (= ($generated@@265 ($generated@@358 $generated@@4 $generated@@437)) $generated@@437) ($generated@@134 ($generated@@358 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@137) ($generated@@221 $generated@@439 $generated@@45)) (and (= ($generated@@265 ($generated@@358 $generated@@438 $generated@@439)) $generated@@439) ($generated@@134 ($generated@@358 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@66) (= ($generated@@221 ($generated@@265 $generated@@440) $generated@@441) ($generated@@134 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@221 ($generated@@265 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@81 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@78 $generated@@444 $generated@@4)) (<= 0 ($generated@@442 $generated@@443))))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@81 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@78 $generated@@446 $generated@@2)) (<= 0 ($generated@@270 $generated@@445))))
 :pattern ( ($generated@@270 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@260 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@259 $generated@@448)) (<= 0 ($generated@@258 $generated@@447))))
 :pattern ( ($generated@@258 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@283 (type $generated@@449))))
(let (($generated@@451 ($generated@@282 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@281 $generated@@451 $generated@@450)) (<= 0 ($generated@@343 $generated@@449)))))
 :pattern ( ($generated@@343 $generated@@449))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@386 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@386 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@386 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@386 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@386 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@386 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@66)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@462 ($generated@@394 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@394 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@394 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@394 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@74 ($generated@@394 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@394 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@137) (= (type $generated@@473) $generated@@137)) (= ($generated@@251 ($generated@@220 $generated@@472 $generated@@473)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@145 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@145 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@478 ($generated@@145 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@145 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@137) (= (type $generated@@483) $generated@@137)) (= ($generated@@153 ($generated@@220 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@220 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@137) (= (type $generated@@485) $generated@@137)) (= ($generated@@154 ($generated@@220 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@220 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 ($generated@@260 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489 $generated@@490)) $generated@@491))
 :pattern ( ($generated@@487 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@259 $generated@@137)) (= (type $generated@@493) $generated@@66)) (= (type $generated@@494) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@492 ($generated@@486 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@258 $generated@@492))) ($generated@@245 ($generated@@487 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@487 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@76 $generated@@492 ($generated@@486 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
 (=> (= (type $generated@@496) ($generated@@78 $generated@@498 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@402 $generated@@496 $generated@@497) $generated@@497))))
 :pattern ( ($generated@@402 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
 (=> (and (= (type $generated@@499) ($generated@@78 $generated@@501 $generated@@4)) ($generated@@0 ($generated@@83 $generated@@499 $generated@@500))) (= ($generated@@442 ($generated@@402 $generated@@499 $generated@@500)) ($generated@@442 $generated@@499))))
 :pattern ( ($generated@@442 ($generated@@402 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@77 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@77 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@138 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@138 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@138 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@138 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@508 ($generated@@233 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@233 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@74 ($generated@@233 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@233 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@159 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@159 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@516 ($generated@@486 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@486 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@74 ($generated@@486 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@486 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@66) (= ($generated@@520 ($generated@@136 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@136 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@358 $generated@@524 ($generated@@265 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@265 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@281 $generated@@137 $generated@@137)) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) (= ($generated@@134 $generated@@525 ($generated@@386 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@279 $generated@@525) $generated@@528))) (and ($generated@@221 ($generated@@83 ($generated@@359 $generated@@525) $generated@@528) $generated@@527) ($generated@@221 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@525) $generated@@528))
 :pattern ( ($generated@@83 ($generated@@279 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@134 $generated@@525 ($generated@@386 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@299 $generated@@137 $generated@@137)) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) $generated@@66)) (= ($generated@@134 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@529) $generated@@532))) (and ($generated@@221 ($generated@@83 ($generated@@369 $generated@@529) $generated@@532) $generated@@531) ($generated@@221 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@529) $generated@@532))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@134 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@137) (= (type $generated@@536) $generated@@137)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@220 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@220 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@137) (= (type $generated@@538) $generated@@137)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@220 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@220 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@137) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@386 $generated@@540 $generated@@541))) (and (= ($generated@@265 ($generated@@358 ($generated@@281 $generated@@137 $generated@@137) $generated@@539)) $generated@@539) ($generated@@134 ($generated@@358 ($generated@@281 $generated@@137 $generated@@137) $generated@@539) ($generated@@386 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@386 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@137) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@542 ($generated@@394 $generated@@543 $generated@@544))) (and (= ($generated@@265 ($generated@@358 ($generated@@299 $generated@@137 $generated@@137) $generated@@542)) $generated@@542) ($generated@@134 ($generated@@358 ($generated@@299 $generated@@137 $generated@@137) $generated@@542) ($generated@@394 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@394 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@66) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) $generated@@137)) ($generated@@221 $generated@@547 ($generated@@145 $generated@@545 $generated@@546))) (and (= ($generated@@265 ($generated@@358 $generated@@146 $generated@@547)) $generated@@547) ($generated@@134 ($generated@@358 $generated@@146 $generated@@547) ($generated@@145 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@221 $generated@@547 ($generated@@145 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@549 T@T) ) (! (= (type ($generated@@548 $generated@@549)) ($generated@@78 $generated@@549 $generated@@4))
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@83 ($generated@@548 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@83 ($generated@@548 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@83 ($generated@@414 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@83 ($generated@@414 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 Int) ($generated@@556 Int) ) (! (= ($generated@@554 $generated@@555 $generated@@556) (mod $generated@@555 $generated@@556))
 :pattern ( ($generated@@554 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@66) (= (type $generated@@558) $generated@@66)) (and (= ($generated@@74 ($generated@@145 $generated@@557 $generated@@558)) $generated@@62) (= ($generated@@276 ($generated@@145 $generated@@557 $generated@@558)) $generated@@64)))
 :pattern ( ($generated@@145 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@66) (= (type $generated@@560) ($generated@@78 $generated@@137 $generated@@4))) (= ($generated@@134 $generated@@560 ($generated@@136 $generated@@559))  (and ($generated@@134 $generated@@560 ($generated@@138 $generated@@559)) (or (= ($generated@@442 $generated@@560) ($generated@@238 0)) (= ($generated@@554 ($generated@@442 $generated@@560) ($generated@@238 2)) ($generated@@238 0))))))
 :pattern ( ($generated@@134 $generated@@560 ($generated@@136 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@146) (= ($generated@@533 ($generated@@265 $generated@@561)) ($generated@@534 $generated@@561)))
 :pattern ( ($generated@@533 ($generated@@265 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@283 (type $generated@@562))))
(let (($generated@@564 ($generated@@282 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@281 $generated@@564 $generated@@563)) (= ($generated@@442 ($generated@@279 $generated@@562)) ($generated@@343 $generated@@562)))))
 :pattern ( ($generated@@442 ($generated@@279 $generated@@562)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@283 (type $generated@@565))))
(let (($generated@@567 ($generated@@282 (type $generated@@565))))
 (=> (= (type $generated@@565) ($generated@@281 $generated@@567 $generated@@566)) (= ($generated@@442 ($generated@@357 $generated@@565)) ($generated@@343 $generated@@565)))))
 :pattern ( ($generated@@442 ($generated@@357 $generated@@565)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@283 (type $generated@@568))))
(let (($generated@@570 ($generated@@282 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@281 $generated@@570 $generated@@569)) (<= ($generated@@442 ($generated@@322 $generated@@568)) ($generated@@343 $generated@@568)))))
 :pattern ( ($generated@@442 ($generated@@322 $generated@@568)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@137) ($generated@@221 $generated@@571 ($generated@@77 0))) (and (= ($generated@@265 ($generated@@358 $generated@@2 $generated@@571)) $generated@@571) ($generated@@134 ($generated@@358 ($generated@@78 $generated@@137 $generated@@4) $generated@@571) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@571 ($generated@@77 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@137) (= (type $generated@@573) $generated@@66)) ($generated@@221 $generated@@572 ($generated@@138 $generated@@573))) (and (= ($generated@@265 ($generated@@358 ($generated@@78 $generated@@137 $generated@@4) $generated@@572)) $generated@@572) ($generated@@134 ($generated@@358 ($generated@@78 $generated@@137 $generated@@4) $generated@@572) ($generated@@138 $generated@@573))))
 :pattern ( ($generated@@221 $generated@@572 ($generated@@138 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@137) (= (type $generated@@575) $generated@@66)) ($generated@@221 $generated@@574 ($generated@@233 $generated@@575))) (and (= ($generated@@265 ($generated@@358 ($generated@@78 $generated@@137 $generated@@4) $generated@@574)) $generated@@574) ($generated@@134 ($generated@@358 ($generated@@78 $generated@@137 $generated@@4) $generated@@574) ($generated@@233 $generated@@575))))
 :pattern ( ($generated@@221 $generated@@574 ($generated@@233 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@137) (= (type $generated@@577) $generated@@66)) ($generated@@221 $generated@@576 ($generated@@159 $generated@@577))) (and (= ($generated@@265 ($generated@@358 ($generated@@78 $generated@@137 $generated@@2) $generated@@576)) $generated@@576) ($generated@@134 ($generated@@358 ($generated@@78 $generated@@137 $generated@@2) $generated@@576) ($generated@@159 $generated@@577))))
 :pattern ( ($generated@@221 $generated@@576 ($generated@@159 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@137) (= (type $generated@@579) $generated@@66)) ($generated@@221 $generated@@578 ($generated@@486 $generated@@579))) (and (= ($generated@@265 ($generated@@358 ($generated@@259 $generated@@137) $generated@@578)) $generated@@578) ($generated@@134 ($generated@@358 ($generated@@259 $generated@@137) $generated@@578) ($generated@@486 $generated@@579))))
 :pattern ( ($generated@@221 $generated@@578 ($generated@@486 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@66) (= (type $generated@@581) $generated@@137)) ($generated@@221 $generated@@581 ($generated@@136 $generated@@580))) (and (= ($generated@@265 ($generated@@358 ($generated@@78 $generated@@137 $generated@@4) $generated@@581)) $generated@@581) ($generated@@134 ($generated@@358 ($generated@@78 $generated@@137 $generated@@4) $generated@@581) ($generated@@136 $generated@@580))))
 :pattern ( ($generated@@221 $generated@@581 ($generated@@136 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@81 (type $generated@@582))))
 (=> (= (type $generated@@582) ($generated@@78 $generated@@583 $generated@@4)) (and (= (= ($generated@@442 $generated@@582) 0) (= $generated@@582 ($generated@@548 $generated@@583))) (=> (not (= ($generated@@442 $generated@@582) 0)) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@583) ($generated@@0 ($generated@@83 $generated@@582 $generated@@584)))
 :no-pattern (type $generated@@584)
 :no-pattern ($generated $generated@@584)
 :no-pattern ($generated@@0 $generated@@584)
))))))
 :pattern ( ($generated@@442 $generated@@582))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@585 ($generated@@159 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@137) (< 0 ($generated ($generated@@83 $generated@@585 $generated@@588)))) ($generated@@245 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@83 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@76 $generated@@585 ($generated@@159 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (=> (and (= (type $generated@@589) ($generated@@78 $generated@@591 $generated@@4)) (not ($generated@@0 ($generated@@83 $generated@@589 $generated@@590)))) (= ($generated@@442 ($generated@@402 $generated@@589 $generated@@590)) (+ ($generated@@442 $generated@@589) 1))))
 :pattern ( ($generated@@442 ($generated@@402 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@146) (= (type $generated@@593) $generated@@66)) (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@244 $generated@@594) (and ($generated@@144 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@66) ($generated@@76 $generated@@592 ($generated@@145 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@76 $generated@@592 ($generated@@145 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@245 ($generated@@153 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@245 ($generated@@153 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@146) (= (type $generated@@597) $generated@@66)) (= (type $generated@@598) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@244 $generated@@598) (and ($generated@@144 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@66) ($generated@@76 $generated@@596 ($generated@@145 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@76 $generated@@596 ($generated@@145 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@245 ($generated@@154 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@245 ($generated@@154 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@137) (= (type $generated@@601) $generated@@137)) (= ($generated@@220 ($generated@@240 $generated@@600) ($generated@@240 $generated@@601)) ($generated@@240 ($generated@@220 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@220 ($generated@@240 $generated@@600) ($generated@@240 $generated@@601)))
)))
(assert (forall (($generated@@602 Int) ) (! (= ($generated@@265 ($generated@@8 ($generated@@238 $generated@@602))) ($generated@@240 ($generated@@265 ($generated@@8 $generated@@602))))
 :pattern ( ($generated@@265 ($generated@@8 ($generated@@238 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ) (! (= ($generated@@265 ($generated@@240 $generated@@603)) ($generated@@240 ($generated@@265 $generated@@603)))
 :pattern ( ($generated@@265 ($generated@@240 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@260 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@259 $generated@@605)) (= ($generated@@258 $generated@@604) 0)) (= $generated@@604 ($generated@@257 $generated@@605))))
 :pattern ( ($generated@@258 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@607)))
 (=> (and (and (= (type $generated@@606) ($generated@@78 $generated@@609 $generated@@2)) (= (type $generated@@608) $generated@@2)) (<= 0 ($generated $generated@@608))) (= ($generated@@270 ($generated@@84 $generated@@606 $generated@@607 $generated@@608)) (+ (- ($generated@@270 $generated@@606) ($generated ($generated@@83 $generated@@606 $generated@@607))) ($generated $generated@@608)))))
 :pattern ( ($generated@@270 ($generated@@84 $generated@@606 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@611) $generated@@2)) ($generated@@76 $generated@@611 $generated@@46 $generated@@610))
 :pattern ( ($generated@@76 $generated@@611 $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@613) $generated@@3)) ($generated@@76 $generated@@613 $generated@@47 $generated@@612))
 :pattern ( ($generated@@76 $generated@@613 $generated@@47 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@615) $generated@@4)) ($generated@@76 $generated@@615 $generated@@44 $generated@@614))
 :pattern ( ($generated@@76 $generated@@615 $generated@@44 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@617) $generated@@438)) ($generated@@76 $generated@@617 $generated@@45 $generated@@616))
 :pattern ( ($generated@@76 $generated@@617 $generated@@45 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@619) $generated@@137)) ($generated@@76 $generated@@619 $generated@@48 $generated@@618))
 :pattern ( ($generated@@76 $generated@@619 $generated@@48 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@259 $generated@@137)) (= (type $generated@@621) $generated@@66)) (= ($generated@@134 $generated@@620 ($generated@@486 $generated@@621)) (forall (($generated@@622 Int) ) (!  (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@258 $generated@@620))) ($generated@@221 ($generated@@487 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@487 $generated@@620 $generated@@622))
))))
 :pattern ( ($generated@@134 $generated@@620 ($generated@@486 $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 Int) ) (!  (=> (= (type $generated@@624) ($generated@@259 $generated@@137)) (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@258 $generated@@624))) (< ($generated@@534 ($generated@@358 $generated@@146 ($generated@@487 $generated@@624 $generated@@625))) ($generated@@623 $generated@@624))))
 :pattern ( ($generated@@534 ($generated@@358 $generated@@146 ($generated@@487 $generated@@624 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@281 $generated@@137 $generated@@137)) (= (type $generated@@627) $generated@@66)) (= (type $generated@@628) $generated@@66)) ($generated@@134 $generated@@626 ($generated@@386 $generated@@627 $generated@@628))) (and (and ($generated@@134 ($generated@@279 $generated@@626) ($generated@@138 $generated@@627)) ($generated@@134 ($generated@@322 $generated@@626) ($generated@@138 $generated@@628))) ($generated@@134 ($generated@@357 $generated@@626) ($generated@@138 ($generated@@145 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@134 $generated@@626 ($generated@@386 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@299 $generated@@137 $generated@@137)) (= (type $generated@@630) $generated@@66)) (= (type $generated@@631) $generated@@66)) ($generated@@134 $generated@@629 ($generated@@394 $generated@@630 $generated@@631))) (and (and ($generated@@134 ($generated@@297 $generated@@629) ($generated@@233 $generated@@630)) ($generated@@134 ($generated@@333 $generated@@629) ($generated@@233 $generated@@631))) ($generated@@134 ($generated@@368 $generated@@629) ($generated@@233 ($generated@@145 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@134 $generated@@629 ($generated@@394 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@2) ($generated@@134 $generated@@632 $generated@@46))
 :pattern ( ($generated@@134 $generated@@632 $generated@@46))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@3) ($generated@@134 $generated@@633 $generated@@47))
 :pattern ( ($generated@@134 $generated@@633 $generated@@47))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@4) ($generated@@134 $generated@@634 $generated@@44))
 :pattern ( ($generated@@134 $generated@@634 $generated@@44))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@438) ($generated@@134 $generated@@635 $generated@@45))
 :pattern ( ($generated@@134 $generated@@635 $generated@@45))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@137) ($generated@@134 $generated@@636 $generated@@48))
 :pattern ( ($generated@@134 $generated@@636 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(assert  (and (and (and (and (and (= (type $generated@@637) ($generated@@166 $generated@@79 $generated@@4)) (= (type $generated@@638) $generated@@79)) (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@640) ($generated@@78 $generated@@137 $generated@@4))) (= (type $generated@@642) ($generated@@78 $generated@@137 $generated@@4))) (= (type $generated@@643) ($generated@@78 $generated@@137 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@645  (=> (= $generated@@637 ($generated@@165 $generated@@638 $generated@@639 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@134 ($generated@@240 ($generated@@402 ($generated@@402 ($generated@@402 ($generated@@548 $generated@@137) ($generated@@265 ($generated@@8 ($generated@@238 36)))) ($generated@@265 ($generated@@8 ($generated@@238 24)))) ($generated@@265 ($generated@@8 ($generated@@238 36))))) ($generated@@136 $generated@@46))) (=> ($generated@@134 ($generated@@240 ($generated@@402 ($generated@@402 ($generated@@402 ($generated@@548 $generated@@137) ($generated@@265 ($generated@@8 ($generated@@238 36)))) ($generated@@265 ($generated@@8 ($generated@@238 24)))) ($generated@@265 ($generated@@8 ($generated@@238 36))))) ($generated@@136 $generated@@46)) (=> (and (= $generated@@640 ($generated@@240 ($generated@@402 ($generated@@402 ($generated@@402 ($generated@@548 $generated@@137) ($generated@@265 ($generated@@8 ($generated@@238 36)))) ($generated@@265 ($generated@@8 ($generated@@238 24)))) ($generated@@265 ($generated@@8 ($generated@@238 36)))))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@134 ($generated@@240 ($generated@@402 ($generated@@548 $generated@@137) ($generated@@265 ($generated@@8 ($generated@@238 12))))) ($generated@@136 $generated@@46))))))))
(let (($generated@@646  (=> (and ($generated@@244 $generated@@639) ($generated@@641 $generated@@639)) (=> (and (and ($generated@@134 $generated@@642 ($generated@@136 $generated@@46)) ($generated@@76 $generated@@642 ($generated@@136 $generated@@46) $generated@@639)) true) (=> (and (and (and ($generated@@134 $generated@@643 ($generated@@136 $generated@@46)) ($generated@@76 $generated@@643 ($generated@@136 $generated@@46) $generated@@639)) true) (and (= 1 $generated@@644) (= (ControlFlow 0 4) 2))) $generated@@645)))))
$generated@@646)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
