(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (Int) T@U)
(declare-fun $generated@@98 (T@T T@T) T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@187 (T@T T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (Int) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U T@U) Bool)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 () T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@344 (T@U) Int)
(declare-fun $generated@@345 (T@T) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@T) T@U)
(declare-fun $generated@@355 (T@T T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@T) T@U)
(declare-fun $generated@@373 (T@T T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@375 (T@T) T@T)
(declare-fun $generated@@392 (T@T T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@U T@U) T@U)
(declare-fun $generated@@485 (T@T) T@U)
(declare-fun $generated@@509 () T@T)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@558 (T@U Int) T@U)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@599 (T@U) Int)
(declare-fun $generated@@684 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (= ($generated@@1 $generated@@80) 11) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= (type ($generated@@79 $generated@@85 $generated@@86 $generated@@87 $generated@@88)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@85 $generated@@86 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@84 $generated@@89)) $generated@@70)
 :pattern ( ($generated@@84 $generated@@89))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@90) $generated@@70) (= (type $generated@@91) $generated@@80)) (= (type $generated@@92) $generated@@81)) (= (type $generated@@93) $generated@@81)) (or ($generated@@82 $generated@@90 $generated@@92 $generated@@93) (and (not (= 1 $generated@@78)) (and ($generated@@83 $generated@@92 ($generated@@84 $generated@@90)) ($generated@@83 $generated@@93 ($generated@@84 $generated@@90)))))) ($generated@@83 ($generated@@79 $generated@@90 $generated@@91 $generated@@92 $generated@@93) ($generated@@84 $generated@@90)))
 :pattern ( ($generated@@79 $generated@@90 $generated@@91 $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@95 T@U) ) (! (= (type ($generated@@94 $generated@@95)) $generated@@71)
 :pattern ( ($generated@@94 $generated@@95))
)))
(assert (= ($generated@@94 $generated@@44) $generated@@49))
(assert (= ($generated@@94 $generated@@45) $generated@@50))
(assert (= ($generated@@94 $generated@@46) $generated@@51))
(assert (= ($generated@@94 $generated@@47) $generated@@52))
(assert (= ($generated@@94 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@98 $generated@@107 $generated@@108)) 13)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@101 ($generated@@98 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@98 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@102 ($generated@@98 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@98 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@102 (type $generated@@113))))
(= (type ($generated@@103 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@103 $generated@@113 $generated@@114))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 (type $generated@@118)))
(let (($generated@@120 (type $generated@@117)))
(= (type ($generated@@104 $generated@@116 $generated@@117 $generated@@118)) ($generated@@98 $generated@@120 $generated@@119))))
 :pattern ( ($generated@@104 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@102 (type $generated@@121))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@103 ($generated@@104 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@103 ($generated@@104 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@103 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@103 ($generated@@104 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@103 $generated@@130 $generated@@132)))
 :weight 0
)))) (= ($generated@@1 $generated@@99) 14)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@73 (type $generated@@134))))
(= (type ($generated@@105 $generated@@133 $generated@@134)) $generated@@135))
 :pattern ( ($generated@@105 $generated@@133 $generated@@134))
))) (= ($generated@@1 $generated@@100) 15)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@106 $generated@@136 $generated@@137 $generated@@138)) $generated@@100)
 :pattern ( ($generated@@106 $generated@@136 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@73 (type $generated@@140))))
 (=> (= (type $generated@@141) $generated@@142) (= ($generated@@105 ($generated@@106 $generated@@139 $generated@@140 $generated@@141) $generated@@140) $generated@@141)))
 :weight 0
))) (and (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@145 $generated@@146) (= ($generated@@105 ($generated@@106 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@105 $generated@@144 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@105 ($generated@@106 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@105 $generated@@148 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 Int) ) (! (= (type ($generated@@97 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@97 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@98 $generated@@99 $generated@@100))) ($generated@@96 $generated@@152 ($generated@@97 0) $generated@@153))
 :pattern ( ($generated@@96 $generated@@152 ($generated@@97 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@98 $generated@@99 $generated@@100)) (= (type $generated@@156) ($generated@@98 $generated@@99 $generated@@100))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@99) ($generated@@0 ($generated@@105 ($generated@@103 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@105 ($generated@@103 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@105 ($generated@@103 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@98 $generated@@99 $generated@@100))) ($generated@@96 $generated@@159 $generated@@158 $generated@@160))
 :pattern ( ($generated@@96 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@83 $generated@@161 ($generated@@97 0)))
 :pattern ( ($generated@@83 $generated@@161 ($generated@@97 0)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@164 $generated@@165)) $generated@@70)
 :pattern ( ($generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@70) (= (type $generated@@167) $generated@@70)) (= (type $generated@@168) $generated@@81)) ($generated@@83 $generated@@168 ($generated@@163 $generated@@166 $generated@@167))) ($generated@@162 $generated@@168))
 :pattern ( ($generated@@162 $generated@@168) ($generated@@83 $generated@@168 ($generated@@163 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 16) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@81) (= (type $generated@@176) $generated@@81)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert  (and (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@74)
 :pattern ( ($generated@@177 $generated@@179))
)) (= (type $generated@@178) $generated@@81)))
(assert (= ($generated@@177 $generated@@178) $generated@@64))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@70)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@98 $generated@@172 $generated@@2)) (= (type $generated@@184) $generated@@70)) ($generated@@83 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@83 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (= ($generated@@1 ($generated@@187 $generated@@191 $generated@@192)) 17)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@188 ($generated@@187 $generated@@193 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@187 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@189 ($generated@@187 $generated@@195 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@187 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@189 (type $generated@@197))))
(= (type ($generated@@185 $generated@@197 $generated@@198 $generated@@199)) $generated@@200))
 :pattern ( ($generated@@185 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 (type $generated@@204)))
(let (($generated@@206 (type $generated@@202)))
(= (type ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204)) ($generated@@187 $generated@@206 $generated@@205))))
 :pattern ( ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@189 (type $generated@@207))))
 (=> (= (type $generated@@210) $generated@@211) (= ($generated@@185 ($generated@@190 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@208 $generated@@209) $generated@@210)))
 :weight 0
))) (and (and (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@185 ($generated@@190 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@185 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@185 ($generated@@190 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@185 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or true (= ($generated@@185 ($generated@@190 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@185 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@187 $generated@@99 $generated@@4))
 :pattern ( ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@73 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@99) (= (type $generated@@235) ($generated@@98 $generated@@99 $generated@@100))) (= (type $generated@@236) ($generated@@72 $generated@@4))) (= (type $generated@@238) $generated@@99)) (= (type $generated@@239) ($generated@@72 $generated@@240))) (= ($generated@@0 ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@105 ($generated@@103 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@70) (= (type $generated@@243) ($generated@@98 $generated@@99 $generated@@100))) ($generated@@241 $generated@@243)) ($generated@@96 $generated@@178 ($generated@@84 $generated@@242) $generated@@243))
 :pattern ( ($generated@@96 $generated@@178 ($generated@@84 $generated@@242) $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@81)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@70) (= (type $generated@@249) $generated@@70)) (= (type $generated@@250) $generated@@172)) (= (type $generated@@251) $generated@@172)) (= ($generated@@83 ($generated@@244 $generated@@250 $generated@@251) ($generated@@163 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@83 ($generated@@244 $generated@@250 $generated@@251) ($generated@@163 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@70) ($generated@@83 $generated@@178 ($generated@@84 $generated@@252)))
 :pattern ( ($generated@@83 $generated@@178 ($generated@@84 $generated@@252)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@81) (= (type $generated@@254) $generated@@81)) (= ($generated@@169 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@169 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@81) (= (type $generated@@257) $generated@@81)) (= ($generated@@255 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert  (and (forall (($generated@@261 T@U) ) (! (= (type ($generated@@259 $generated@@261)) $generated@@172)
 :pattern ( ($generated@@259 $generated@@261))
)) (forall (($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@262)) $generated@@81)
 :pattern ( ($generated@@260 $generated@@262))
))))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@81) (= (type $generated@@264) $generated@@81)) (and ($generated@@258 $generated@@263) ($generated@@258 $generated@@264))) (= ($generated@@255 $generated@@263 $generated@@264)  (and (= ($generated@@259 $generated@@263) ($generated@@259 $generated@@264)) ($generated@@255 ($generated@@260 $generated@@263) ($generated@@260 $generated@@264)))))
 :pattern ( ($generated@@255 $generated@@263 $generated@@264) ($generated@@258 $generated@@263))
 :pattern ( ($generated@@255 $generated@@263 $generated@@264) ($generated@@258 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@98 $generated@@172 $generated@@4)) (= (type $generated@@268) $generated@@70)) (= ($generated@@83 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@172) ($generated@@0 ($generated@@103 $generated@@267 $generated@@269))) ($generated@@245 $generated@@269 $generated@@268))
 :pattern ( ($generated@@103 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@83 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@70)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@98 $generated@@172 $generated@@4)) (= (type $generated@@273) $generated@@70)) (= ($generated@@83 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@172) ($generated@@0 ($generated@@103 $generated@@272 $generated@@274))) ($generated@@245 $generated@@274 $generated@@273))
 :pattern ( ($generated@@103 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@83 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@275 $generated@@276) $generated@@276)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(= (type ($generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@277 $generated@@280) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@81) (= (type $generated@@283) $generated@@81)) (and ($generated@@281 $generated@@282) ($generated@@281 $generated@@283))) (= ($generated@@255 $generated@@282 $generated@@283) true))
 :pattern ( ($generated@@255 $generated@@282 $generated@@283) ($generated@@281 $generated@@282))
 :pattern ( ($generated@@255 $generated@@282 $generated@@283) ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@284 $generated@@285 $generated@@286)) $generated@@81)
 :pattern ( ($generated@@284 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@287) $generated@@70) (= (type $generated@@288) $generated@@172)) (= (type $generated@@289) $generated@@81)) (= ($generated@@83 ($generated@@284 $generated@@288 $generated@@289) ($generated@@84 $generated@@287))  (and ($generated@@245 $generated@@288 $generated@@287) ($generated@@83 $generated@@289 ($generated@@84 $generated@@287)))))
 :pattern ( ($generated@@83 ($generated@@284 $generated@@288 $generated@@289) ($generated@@84 $generated@@287)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) $generated@@70) (= (type $generated@@292) $generated@@70)) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@172)) (= (type $generated@@295) ($generated@@98 $generated@@99 $generated@@100))) ($generated@@241 $generated@@295)) (= ($generated@@96 ($generated@@244 $generated@@293 $generated@@294) ($generated@@163 $generated@@291 $generated@@292) $generated@@295)  (and ($generated@@290 $generated@@293 $generated@@291 $generated@@295) ($generated@@290 $generated@@294 $generated@@292 $generated@@295))))
 :pattern ( ($generated@@96 ($generated@@244 $generated@@293 $generated@@294) ($generated@@163 $generated@@291 $generated@@292) $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@81) (= ($generated@@162 $generated@@296) (= ($generated@@177 $generated@@296) $generated@@62)))
 :pattern ( ($generated@@162 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@81) (= ($generated@@281 $generated@@297) (= ($generated@@177 $generated@@297) $generated@@64)))
 :pattern ( ($generated@@281 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@81) (= ($generated@@258 $generated@@298) (= ($generated@@177 $generated@@298) $generated@@66)))
 :pattern ( ($generated@@258 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@80)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) $generated@@70) (= (type $generated@@302) $generated@@80)) (= (type $generated@@303) $generated@@81)) (= (type $generated@@304) $generated@@81)) (or ($generated@@82 $generated@@301 ($generated@@277 $generated@@303) ($generated@@277 $generated@@304)) (and (not (= 1 $generated@@78)) (and ($generated@@83 $generated@@303 ($generated@@84 $generated@@301)) ($generated@@83 $generated@@304 ($generated@@84 $generated@@301)))))) (and (=> (not ($generated@@0 ($generated@@277 ($generated@@11 ($generated@@281 ($generated@@277 $generated@@303)))))) (let (($generated@@305 ($generated@@277 ($generated@@260 ($generated@@277 $generated@@303)))))
($generated@@82 $generated@@301 $generated@@305 ($generated@@277 $generated@@304)))) (= ($generated@@79 $generated@@301 ($generated@@299 $generated@@302) ($generated@@277 $generated@@303) ($generated@@277 $generated@@304)) (ite ($generated@@281 ($generated@@277 $generated@@303)) $generated@@304 (let (($generated@@306 ($generated@@277 ($generated@@260 ($generated@@277 $generated@@303)))))
(let (($generated@@307 ($generated@@277 ($generated@@259 ($generated@@277 $generated@@303)))))
($generated@@277 ($generated@@284 $generated@@307 ($generated@@277 ($generated@@79 $generated@@301 ($generated@@299 $generated@@302) $generated@@306 ($generated@@277 $generated@@304)))))))))))
 :weight 3
 :pattern ( ($generated@@79 $generated@@301 ($generated@@299 $generated@@302) ($generated@@277 $generated@@303) ($generated@@277 $generated@@304)))
))))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@81) ($generated@@162 $generated@@308)) (exists (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (and (and (= (type $generated@@309) $generated@@172) (= (type $generated@@310) $generated@@172)) (= $generated@@308 ($generated@@244 $generated@@309 $generated@@310)))
 :no-pattern (type $generated@@309)
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
)))
 :pattern ( ($generated@@162 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@81) ($generated@@258 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@172) (= (type $generated@@313) $generated@@81)) (= $generated@@311 ($generated@@284 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@258 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 18)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@81) ($generated@@281 $generated@@322)) (= $generated@@322 $generated@@178))
 :pattern ( ($generated@@281 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@2) (= ($generated@@83 $generated@@323 $generated@@158) (<= ($generated@@275 0) ($generated $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@158))
)))
(assert  (and (forall (($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@326)) $generated@@80)
 :pattern ( ($generated@@324 $generated@@326))
)) (= (type $generated@@325) $generated@@80)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (and (= (type $generated@@327) $generated@@70) (= (type $generated@@328) $generated@@80)) (= (type $generated@@329) $generated@@81)) (= (type $generated@@330) $generated@@81)) (= ($generated@@79 $generated@@327 $generated@@328 $generated@@329 $generated@@330) ($generated@@79 $generated@@327 $generated@@325 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@79 $generated@@327 ($generated@@324 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@172)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@70) (= (type $generated@@335) ($generated@@98 $generated@@99 $generated@@100))) (= ($generated@@290 ($generated@@331 $generated@@333) $generated@@334 $generated@@335) ($generated@@96 $generated@@333 $generated@@334 $generated@@335)))
 :pattern ( ($generated@@290 ($generated@@331 $generated@@333) $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@336) ($generated@@98 $generated@@99 $generated@@100)) (= (type $generated@@337) ($generated@@98 $generated@@99 $generated@@100))) (= (type $generated@@338) $generated@@172)) (= (type $generated@@339) $generated@@70)) ($generated@@154 $generated@@336 $generated@@337)) ($generated@@290 $generated@@338 $generated@@339 $generated@@336)) ($generated@@290 $generated@@338 $generated@@339 $generated@@337))
 :pattern ( ($generated@@154 $generated@@336 $generated@@337) ($generated@@290 $generated@@338 $generated@@339 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@340) ($generated@@98 $generated@@99 $generated@@100)) (= (type $generated@@341) ($generated@@98 $generated@@99 $generated@@100))) (= (type $generated@@343) $generated@@70)) ($generated@@154 $generated@@340 $generated@@341)) ($generated@@96 $generated@@342 $generated@@343 $generated@@340)) ($generated@@96 $generated@@342 $generated@@343 $generated@@341))
 :pattern ( ($generated@@154 $generated@@340 $generated@@341) ($generated@@96 $generated@@342 $generated@@343 $generated@@340))
)))
(assert (forall (($generated@@346 T@T) ) (! (= (type ($generated@@345 $generated@@346)) ($generated@@98 $generated@@346 $generated@@2))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@101 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@98 $generated@@348 $generated@@2)) (and (= (= ($generated@@344 $generated@@347) 0) (= $generated@@347 ($generated@@345 $generated@@348))) (=> (not (= ($generated@@344 $generated@@347) 0)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) (< 0 ($generated ($generated@@103 $generated@@347 $generated@@349))))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@75)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@70) (and (= ($generated@@94 ($generated@@84 $generated@@352)) $generated@@65) (= ($generated@@350 ($generated@@84 $generated@@352)) $generated@@69)))
 :pattern ( ($generated@@84 $generated@@352))
)))
(assert  (and (and (and (and (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@358 $generated@@359)) 19)) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@355 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@355 $generated@@362 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@355 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@356 (type $generated@@364))))
(= (type ($generated@@353 $generated@@364)) ($generated@@98 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@364))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= (type ($generated@@354 $generated@@366 $generated@@367)) ($generated@@355 $generated@@366 $generated@@367))
 :pattern ( ($generated@@354 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (let (($generated@@370 (type $generated@@368)))
 (not ($generated@@0 ($generated@@103 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368))))
 :pattern ( (let (($generated@@370 (type $generated@@368)))
($generated@@103 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368)))
)))
(assert  (and (and (and (and (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (= ($generated@@1 ($generated@@373 $generated@@376 $generated@@377)) 20)) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= ($generated@@374 ($generated@@373 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@373 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@375 ($generated@@373 $generated@@380 $generated@@381)) $generated@@381)
 :pattern ( ($generated@@373 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@374 (type $generated@@382))))
(= (type ($generated@@371 $generated@@382)) ($generated@@98 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@382))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= (type ($generated@@372 $generated@@384 $generated@@385)) ($generated@@373 $generated@@384 $generated@@385))
 :pattern ( ($generated@@372 $generated@@384 $generated@@385))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@T) ) (! (let (($generated@@388 (type $generated@@386)))
 (not ($generated@@0 ($generated@@103 ($generated@@371 ($generated@@372 $generated@@388 $generated@@387)) $generated@@386))))
 :pattern ( (let (($generated@@388 (type $generated@@386)))
($generated@@103 ($generated@@371 ($generated@@372 $generated@@388 $generated@@387)) $generated@@386)))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@101 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@98 $generated@@390 $generated@@2)) (= ($generated@@181 $generated@@389) (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@390) (and (<= 0 ($generated ($generated@@103 $generated@@389 $generated@@391))) (<= ($generated ($generated@@103 $generated@@389 $generated@@391)) ($generated@@344 $generated@@389))))
 :pattern ( ($generated@@103 $generated@@389 $generated@@391))
)))))
 :pattern ( ($generated@@181 $generated@@389))
)))
(assert (forall (($generated@@393 T@T) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@172) ($generated@@245 $generated@@395 $generated@@158)) (and (= ($generated@@331 ($generated@@392 $generated@@2 $generated@@395)) $generated@@395) ($generated@@83 ($generated@@392 $generated@@2 $generated@@395) $generated@@158)))
 :pattern ( ($generated@@245 $generated@@395 $generated@@158))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@357 (type $generated@@396))))
(let (($generated@@398 ($generated@@356 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@355 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@354 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) ($generated@@0 ($generated@@103 ($generated@@353 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@353 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@357 (type $generated@@401))))
(= (type ($generated@@400 $generated@@401)) ($generated@@98 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@357 (type $generated@@403))))
(let (($generated@@405 ($generated@@356 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@355 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@354 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@404) ($generated@@0 ($generated@@103 ($generated@@400 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@400 $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@375 (type $generated@@407))))
(let (($generated@@409 ($generated@@374 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@373 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@372 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@103 ($generated@@371 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@371 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@375 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@98 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@375 (type $generated@@414))))
(let (($generated@@416 ($generated@@374 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@373 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@372 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@103 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@98 $generated@@172 $generated@@2)) (= (type $generated@@419) $generated@@70)) (= ($generated@@83 $generated@@418 ($generated@@180 $generated@@419)) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@172) (< 0 ($generated ($generated@@103 $generated@@418 $generated@@420)))) ($generated@@245 $generated@@420 $generated@@419))
 :pattern ( ($generated@@103 $generated@@418 $generated@@420))
))))
 :pattern ( ($generated@@83 $generated@@418 ($generated@@180 $generated@@419)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@421) $generated@@70) (= (type $generated@@422) $generated@@80)) (= (type $generated@@423) $generated@@81)) (= (type $generated@@424) $generated@@81)) (or ($generated@@82 $generated@@421 $generated@@423 $generated@@424) (and (not (= 1 $generated@@78)) (and ($generated@@83 $generated@@423 ($generated@@84 $generated@@421)) ($generated@@83 $generated@@424 ($generated@@84 $generated@@421)))))) (and (=> (not ($generated@@281 $generated@@423)) (let (($generated@@425 ($generated@@260 $generated@@423)))
($generated@@82 $generated@@421 $generated@@425 $generated@@424))) (= ($generated@@79 $generated@@421 ($generated@@299 $generated@@422) $generated@@423 $generated@@424) (ite ($generated@@281 $generated@@423) $generated@@424 (let (($generated@@426 ($generated@@260 $generated@@423)))
(let (($generated@@427 ($generated@@259 $generated@@423)))
($generated@@284 $generated@@427 ($generated@@79 $generated@@421 $generated@@422 $generated@@426 $generated@@424))))))))
 :pattern ( ($generated@@79 $generated@@421 ($generated@@299 $generated@@422) $generated@@423 $generated@@424))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@98 $generated@@172 $generated@@4)) (= (type $generated@@429) $generated@@70)) (= (type $generated@@430) ($generated@@98 $generated@@99 $generated@@100))) (= ($generated@@96 $generated@@428 ($generated@@265 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@172) ($generated@@0 ($generated@@103 $generated@@428 $generated@@431))) ($generated@@290 $generated@@431 $generated@@429 $generated@@430))
 :pattern ( ($generated@@103 $generated@@428 $generated@@431))
))))
 :pattern ( ($generated@@96 $generated@@428 ($generated@@265 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@98 $generated@@172 $generated@@4)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) ($generated@@98 $generated@@99 $generated@@100))) (= ($generated@@96 $generated@@432 ($generated@@270 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@172) ($generated@@0 ($generated@@103 $generated@@432 $generated@@435))) ($generated@@290 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@103 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@96 $generated@@432 ($generated@@270 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(= ($generated ($generated@@103 ($generated@@345 $generated@@437) $generated@@436)) 0))
 :pattern ( (let (($generated@@437 (type $generated@@436)))
($generated@@103 ($generated@@345 $generated@@437) $generated@@436)))
)))
(assert  (and (forall (($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@440)) ($generated@@98 $generated@@172 $generated@@4))
 :pattern ( ($generated@@438 $generated@@440))
)) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@357 (type $generated@@441))))
(let (($generated@@443 ($generated@@356 (type $generated@@441))))
(= (type ($generated@@439 $generated@@441)) ($generated@@98 $generated@@443 $generated@@442))))
 :pattern ( ($generated@@439 $generated@@441))
))))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@445) $generated@@172)) (= ($generated@@0 ($generated@@103 ($generated@@438 $generated@@444) $generated@@445))  (and ($generated@@0 ($generated@@103 ($generated@@353 $generated@@444) ($generated@@170 ($generated@@392 $generated@@81 $generated@@445)))) (= ($generated@@103 ($generated@@439 $generated@@444) ($generated@@170 ($generated@@392 $generated@@81 $generated@@445))) ($generated@@171 ($generated@@392 $generated@@81 $generated@@445))))))
 :pattern ( ($generated@@103 ($generated@@438 $generated@@444) $generated@@445))
)))
(assert  (and (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) ($generated@@98 $generated@@172 $generated@@4))
 :pattern ( ($generated@@446 $generated@@448))
)) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@375 (type $generated@@449))))
(let (($generated@@451 ($generated@@374 (type $generated@@449))))
(= (type ($generated@@447 $generated@@449)) ($generated@@98 $generated@@451 $generated@@450))))
 :pattern ( ($generated@@447 $generated@@449))
))))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) ($generated@@373 $generated@@172 $generated@@172)) (= (type $generated@@453) $generated@@172)) (= ($generated@@0 ($generated@@103 ($generated@@446 $generated@@452) $generated@@453))  (and ($generated@@0 ($generated@@103 ($generated@@371 $generated@@452) ($generated@@170 ($generated@@392 $generated@@81 $generated@@453)))) (= ($generated@@103 ($generated@@447 $generated@@452) ($generated@@170 ($generated@@392 $generated@@81 $generated@@453))) ($generated@@171 ($generated@@392 $generated@@81 $generated@@453))))))
 :pattern ( ($generated@@103 ($generated@@446 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@356 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@355 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@103 ($generated@@400 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@103 ($generated@@353 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@103 ($generated@@439 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@103 ($generated@@353 $generated@@454) $generated@@458))
 :pattern ( ($generated@@103 ($generated@@439 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@103 ($generated@@400 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(let (($generated@@462 ($generated@@374 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@373 $generated@@462 $generated@@461)) (= ($generated@@0 ($generated@@103 ($generated@@411 $generated@@459) $generated@@460)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@462) (and ($generated@@0 ($generated@@103 ($generated@@371 $generated@@459) $generated@@463)) (= $generated@@460 ($generated@@103 ($generated@@447 $generated@@459) $generated@@463))))
 :pattern ( ($generated@@103 ($generated@@371 $generated@@459) $generated@@463))
 :pattern ( ($generated@@103 ($generated@@447 $generated@@459) $generated@@463))
))))))
 :pattern ( ($generated@@103 ($generated@@411 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@467) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@468) $generated@@70)) (= (type $generated@@469) $generated@@70)) (= (type $generated@@470) ($generated@@98 $generated@@99 $generated@@100))) (= ($generated@@96 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@172) ($generated@@0 ($generated@@103 ($generated@@353 $generated@@467) $generated@@471))) (and ($generated@@290 ($generated@@103 ($generated@@439 $generated@@467) $generated@@471) $generated@@469 $generated@@470) ($generated@@290 $generated@@471 $generated@@468 $generated@@470)))
 :pattern ( ($generated@@103 ($generated@@439 $generated@@467) $generated@@471))
 :pattern ( ($generated@@103 ($generated@@353 $generated@@467) $generated@@471))
))))
 :pattern ( ($generated@@96 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) ($generated@@373 $generated@@172 $generated@@172)) (= (type $generated@@476) $generated@@70)) (= (type $generated@@477) $generated@@70)) (= (type $generated@@478) ($generated@@98 $generated@@99 $generated@@100))) (= ($generated@@96 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@172) ($generated@@0 ($generated@@103 ($generated@@371 $generated@@475) $generated@@479))) (and ($generated@@290 ($generated@@103 ($generated@@447 $generated@@475) $generated@@479) $generated@@477 $generated@@478) ($generated@@290 $generated@@479 $generated@@476 $generated@@478)))
 :pattern ( ($generated@@103 ($generated@@447 $generated@@475) $generated@@479))
 :pattern ( ($generated@@103 ($generated@@371 $generated@@475) $generated@@479))
))))
 :pattern ( ($generated@@96 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@81)) ($generated@@83 $generated@@481 ($generated@@84 $generated@@480))) (or ($generated@@281 $generated@@481) ($generated@@258 $generated@@481)))
 :pattern ( ($generated@@258 $generated@@481) ($generated@@83 $generated@@481 ($generated@@84 $generated@@480)))
 :pattern ( ($generated@@281 $generated@@481) ($generated@@83 $generated@@481 ($generated@@84 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@482) ($generated@@98 $generated@@99 $generated@@100)) (= (type $generated@@483) ($generated@@98 $generated@@99 $generated@@100))) (= (type $generated@@484) ($generated@@98 $generated@@99 $generated@@100))) (not (= $generated@@482 $generated@@484))) (and ($generated@@154 $generated@@482 $generated@@483) ($generated@@154 $generated@@483 $generated@@484))) ($generated@@154 $generated@@482 $generated@@484))
 :pattern ( ($generated@@154 $generated@@482 $generated@@483) ($generated@@154 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@T) ) (! (= (type ($generated@@485 $generated@@486)) ($generated@@98 $generated@@486 $generated@@4))
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@375 (type $generated@@487))))
(let (($generated@@489 ($generated@@374 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@373 $generated@@489 $generated@@488)) (= (= $generated@@487 ($generated@@372 $generated@@489 $generated@@488)) (= ($generated@@371 $generated@@487) ($generated@@485 $generated@@489))))))
 :pattern ( ($generated@@371 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@375 (type $generated@@490))))
(let (($generated@@492 ($generated@@374 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@373 $generated@@492 $generated@@491)) (= (= $generated@@490 ($generated@@372 $generated@@492 $generated@@491)) (= ($generated@@411 $generated@@490) ($generated@@485 $generated@@491))))))
 :pattern ( ($generated@@411 $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@375 (type $generated@@493))))
(let (($generated@@495 ($generated@@374 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@373 $generated@@495 $generated@@494)) (= (= $generated@@493 ($generated@@372 $generated@@495 $generated@@494)) (= ($generated@@446 $generated@@493) ($generated@@485 $generated@@172))))))
 :pattern ( ($generated@@446 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@357 (type $generated@@496))))
(let (($generated@@498 ($generated@@356 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@355 $generated@@498 $generated@@497)) (or (= $generated@@496 ($generated@@354 $generated@@498 $generated@@497)) (exists (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (and (and (= (type $generated@@499) $generated@@172) (= (type $generated@@500) $generated@@172)) ($generated@@0 ($generated@@103 ($generated@@438 $generated@@496) ($generated@@331 ($generated@@244 $generated@@499 $generated@@500)))))
 :no-pattern (type $generated@@499)
 :no-pattern (type $generated@@500)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
))))))
 :pattern ( ($generated@@438 $generated@@496))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@375 (type $generated@@501))))
(let (($generated@@503 ($generated@@374 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@373 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@372 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@172) (= (type $generated@@505) $generated@@172)) ($generated@@0 ($generated@@103 ($generated@@446 $generated@@501) ($generated@@331 ($generated@@244 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@446 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@172) ($generated@@245 $generated@@506 $generated@@46)) (and (= ($generated@@331 ($generated@@392 $generated@@2 $generated@@506)) $generated@@506) ($generated@@83 ($generated@@392 $generated@@2 $generated@@506) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@506 $generated@@46))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@172) ($generated@@245 $generated@@507 $generated@@47)) (and (= ($generated@@331 ($generated@@392 $generated@@3 $generated@@507)) $generated@@507) ($generated@@83 ($generated@@392 $generated@@3 $generated@@507) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@507 $generated@@47))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@172) ($generated@@245 $generated@@508 $generated@@44)) (and (= ($generated@@331 ($generated@@392 $generated@@4 $generated@@508)) $generated@@508) ($generated@@83 ($generated@@392 $generated@@4 $generated@@508) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@508 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@509) 21))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@172) ($generated@@245 $generated@@510 $generated@@45)) (and (= ($generated@@331 ($generated@@392 $generated@@509 $generated@@510)) $generated@@510) ($generated@@83 ($generated@@392 $generated@@509 $generated@@510) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@510 $generated@@45))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@245 ($generated@@331 $generated@@511) $generated@@512) ($generated@@83 $generated@@511 $generated@@512)))
 :pattern ( ($generated@@245 ($generated@@331 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@101 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@98 $generated@@514 $generated@@2)) (<= 0 ($generated@@344 $generated@@513))))
 :pattern ( ($generated@@344 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@317 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@316 $generated@@516)) (<= 0 ($generated@@315 $generated@@515))))
 :pattern ( ($generated@@315 $generated@@515))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@70) (= (type $generated@@520) $generated@@70)) (= ($generated@@517 ($generated@@464 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@464 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@70) (= (type $generated@@524) $generated@@70)) (= ($generated@@521 ($generated@@464 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@464 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@70) (= (type $generated@@526) $generated@@70)) (= ($generated@@94 ($generated@@464 $generated@@525 $generated@@526)) $generated@@58))
 :pattern ( ($generated@@464 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@70)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@70) (= (type $generated@@530) $generated@@70)) (= ($generated@@527 ($generated@@472 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@472 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@70) (= (type $generated@@534) $generated@@70)) (= ($generated@@531 ($generated@@472 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@472 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@70) (= (type $generated@@536) $generated@@70)) (= ($generated@@94 ($generated@@472 $generated@@535 $generated@@536)) $generated@@59))
 :pattern ( ($generated@@472 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@172) (= (type $generated@@538) $generated@@172)) (= ($generated@@177 ($generated@@244 $generated@@537 $generated@@538)) $generated@@62))
 :pattern ( ($generated@@244 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (= ($generated@@539 ($generated@@163 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@163 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@70) (= (type $generated@@546) $generated@@70)) (= ($generated@@543 ($generated@@163 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@163 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@172) (= (type $generated@@548) $generated@@172)) (= ($generated@@170 ($generated@@244 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@244 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@172) (= (type $generated@@550) $generated@@172)) (= ($generated@@171 ($generated@@244 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@244 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@172) (= (type $generated@@552) $generated@@81)) (= ($generated@@177 ($generated@@284 $generated@@551 $generated@@552)) $generated@@66))
 :pattern ( ($generated@@284 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@81)) (= ($generated@@259 ($generated@@284 $generated@@553 $generated@@554)) $generated@@553))
 :pattern ( ($generated@@284 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@172) (= (type $generated@@556) $generated@@81)) (= ($generated@@260 ($generated@@284 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@284 $generated@@555 $generated@@556))
)))
(assert  (and (forall (($generated@@559 T@U) ) (! (= (type ($generated@@557 $generated@@559)) $generated@@70)
 :pattern ( ($generated@@557 $generated@@559))
)) (forall (($generated@@560 T@U) ($generated@@561 Int) ) (! (let (($generated@@562 ($generated@@317 (type $generated@@560))))
(= (type ($generated@@558 $generated@@560 $generated@@561)) $generated@@562))
 :pattern ( ($generated@@558 $generated@@560 $generated@@561))
))))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@316 $generated@@172)) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) ($generated@@98 $generated@@99 $generated@@100))) (= ($generated@@96 $generated@@563 ($generated@@557 $generated@@564) $generated@@565) (forall (($generated@@566 Int) ) (!  (=> (and (<= 0 $generated@@566) (< $generated@@566 ($generated@@315 $generated@@563))) ($generated@@290 ($generated@@558 $generated@@563 $generated@@566) $generated@@564 $generated@@565))
 :pattern ( ($generated@@558 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@96 $generated@@563 ($generated@@557 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@567 ($generated@@97 $generated@@568)) $generated@@568)
 :pattern ( ($generated@@97 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@70)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@70) (= ($generated@@569 ($generated@@265 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@265 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@70) (= ($generated@@94 ($generated@@265 $generated@@572)) $generated@@54))
 :pattern ( ($generated@@265 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@70)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@70) (= ($generated@@573 ($generated@@270 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@270 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@70) (= ($generated@@94 ($generated@@270 $generated@@576)) $generated@@55))
 :pattern ( ($generated@@270 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@70)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@70) (= ($generated@@577 ($generated@@180 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@180 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@70) (= ($generated@@94 ($generated@@180 $generated@@580)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@70)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@70) (= ($generated@@581 ($generated@@557 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@557 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@70) (= ($generated@@94 ($generated@@557 $generated@@584)) $generated@@57))
 :pattern ( ($generated@@557 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@70)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@70) (= ($generated@@585 ($generated@@84 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@84 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
(= ($generated@@392 $generated@@589 ($generated@@331 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@331 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) $generated@@70)) (= ($generated@@83 $generated@@590 ($generated@@464 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@172) ($generated@@0 ($generated@@103 ($generated@@353 $generated@@590) $generated@@593))) (and ($generated@@245 ($generated@@103 ($generated@@439 $generated@@590) $generated@@593) $generated@@592) ($generated@@245 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@103 ($generated@@439 $generated@@590) $generated@@593))
 :pattern ( ($generated@@103 ($generated@@353 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@83 $generated@@590 ($generated@@464 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@373 $generated@@172 $generated@@172)) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) $generated@@70)) (= ($generated@@83 $generated@@594 ($generated@@472 $generated@@595 $generated@@596)) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@172) ($generated@@0 ($generated@@103 ($generated@@371 $generated@@594) $generated@@597))) (and ($generated@@245 ($generated@@103 ($generated@@447 $generated@@594) $generated@@597) $generated@@596) ($generated@@245 $generated@@597 $generated@@595)))
 :pattern ( ($generated@@103 ($generated@@447 $generated@@594) $generated@@597))
 :pattern ( ($generated@@103 ($generated@@371 $generated@@594) $generated@@597))
))))
 :pattern ( ($generated@@83 $generated@@594 ($generated@@472 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@172) (= (type $generated@@601) $generated@@172)) (< ($generated@@598 $generated@@600) ($generated@@599 ($generated@@244 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@244 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@172) (= (type $generated@@603) $generated@@172)) (< ($generated@@598 $generated@@603) ($generated@@599 ($generated@@244 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@244 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@172) (= (type $generated@@605) $generated@@81)) (< ($generated@@598 $generated@@604) ($generated@@599 ($generated@@284 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@284 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@172) (= (type $generated@@607) $generated@@81)) (< ($generated@@599 $generated@@607) ($generated@@599 ($generated@@284 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@284 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@172) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) $generated@@70)) ($generated@@245 $generated@@608 ($generated@@464 $generated@@609 $generated@@610))) (and (= ($generated@@331 ($generated@@392 ($generated@@355 $generated@@172 $generated@@172) $generated@@608)) $generated@@608) ($generated@@83 ($generated@@392 ($generated@@355 $generated@@172 $generated@@172) $generated@@608) ($generated@@464 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@245 $generated@@608 ($generated@@464 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@172) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@245 $generated@@611 ($generated@@472 $generated@@612 $generated@@613))) (and (= ($generated@@331 ($generated@@392 ($generated@@373 $generated@@172 $generated@@172) $generated@@611)) $generated@@611) ($generated@@83 ($generated@@392 ($generated@@373 $generated@@172 $generated@@172) $generated@@611) ($generated@@472 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@245 $generated@@611 ($generated@@472 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@70) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@172)) ($generated@@245 $generated@@616 ($generated@@163 $generated@@614 $generated@@615))) (and (= ($generated@@331 ($generated@@392 $generated@@81 $generated@@616)) $generated@@616) ($generated@@83 ($generated@@392 $generated@@81 $generated@@616) ($generated@@163 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@245 $generated@@616 ($generated@@163 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@81) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) ($generated@@98 $generated@@99 $generated@@100))) (and ($generated@@241 $generated@@619) (and ($generated@@258 $generated@@617) ($generated@@96 $generated@@617 ($generated@@84 $generated@@618) $generated@@619)))) ($generated@@290 ($generated@@259 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@290 ($generated@@259 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@620)))
 (not ($generated@@0 ($generated@@103 ($generated@@485 $generated@@621) $generated@@620))))
 :pattern ( (let (($generated@@621 (type $generated@@620)))
($generated@@103 ($generated@@485 $generated@@621) $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@70) (= (type $generated@@623) $generated@@70)) (and (= ($generated@@94 ($generated@@163 $generated@@622 $generated@@623)) $generated@@63) (= ($generated@@350 ($generated@@163 $generated@@622 $generated@@623)) $generated@@68)))
 :pattern ( ($generated@@163 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@81) (= ($generated@@598 ($generated@@331 $generated@@624)) ($generated@@599 $generated@@624)))
 :pattern ( ($generated@@598 ($generated@@331 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@70) (= (type $generated@@626) $generated@@80)) (= (type $generated@@627) $generated@@81)) (= (type $generated@@628) $generated@@81)) (= ($generated@@79 $generated@@625 ($generated@@299 $generated@@626) $generated@@627 $generated@@628) ($generated@@79 $generated@@625 $generated@@626 $generated@@627 $generated@@628)))
 :pattern ( ($generated@@79 $generated@@625 ($generated@@299 $generated@@626) $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@172) ($generated@@245 $generated@@629 ($generated@@97 0))) (and (= ($generated@@331 ($generated@@392 $generated@@2 $generated@@629)) $generated@@629) ($generated@@83 ($generated@@392 ($generated@@98 $generated@@172 $generated@@4) $generated@@629) ($generated@@97 0))))
 :pattern ( ($generated@@245 $generated@@629 ($generated@@97 0)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@172) (= (type $generated@@631) $generated@@70)) ($generated@@245 $generated@@630 ($generated@@265 $generated@@631))) (and (= ($generated@@331 ($generated@@392 ($generated@@98 $generated@@172 $generated@@4) $generated@@630)) $generated@@630) ($generated@@83 ($generated@@392 ($generated@@98 $generated@@172 $generated@@4) $generated@@630) ($generated@@265 $generated@@631))))
 :pattern ( ($generated@@245 $generated@@630 ($generated@@265 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@172) (= (type $generated@@633) $generated@@70)) ($generated@@245 $generated@@632 ($generated@@270 $generated@@633))) (and (= ($generated@@331 ($generated@@392 ($generated@@98 $generated@@172 $generated@@4) $generated@@632)) $generated@@632) ($generated@@83 ($generated@@392 ($generated@@98 $generated@@172 $generated@@4) $generated@@632) ($generated@@270 $generated@@633))))
 :pattern ( ($generated@@245 $generated@@632 ($generated@@270 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@172) (= (type $generated@@635) $generated@@70)) ($generated@@245 $generated@@634 ($generated@@180 $generated@@635))) (and (= ($generated@@331 ($generated@@392 ($generated@@98 $generated@@172 $generated@@2) $generated@@634)) $generated@@634) ($generated@@83 ($generated@@392 ($generated@@98 $generated@@172 $generated@@2) $generated@@634) ($generated@@180 $generated@@635))))
 :pattern ( ($generated@@245 $generated@@634 ($generated@@180 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@172) (= (type $generated@@637) $generated@@70)) ($generated@@245 $generated@@636 ($generated@@557 $generated@@637))) (and (= ($generated@@331 ($generated@@392 ($generated@@316 $generated@@172) $generated@@636)) $generated@@636) ($generated@@83 ($generated@@392 ($generated@@316 $generated@@172) $generated@@636) ($generated@@557 $generated@@637))))
 :pattern ( ($generated@@245 $generated@@636 ($generated@@557 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@70) (= (type $generated@@639) $generated@@172)) ($generated@@245 $generated@@639 ($generated@@84 $generated@@638))) (and (= ($generated@@331 ($generated@@392 $generated@@81 $generated@@639)) $generated@@639) ($generated@@83 ($generated@@392 $generated@@81 $generated@@639) ($generated@@84 $generated@@638))))
 :pattern ( ($generated@@245 $generated@@639 ($generated@@84 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@81) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) ($generated@@98 $generated@@99 $generated@@100))) (and ($generated@@241 $generated@@642) (and ($generated@@258 $generated@@640) ($generated@@96 $generated@@640 ($generated@@84 $generated@@641) $generated@@642)))) ($generated@@96 ($generated@@260 $generated@@640) ($generated@@84 $generated@@641) $generated@@642))
 :pattern ( ($generated@@96 ($generated@@260 $generated@@640) ($generated@@84 $generated@@641) $generated@@642))
)))
(assert (= ($generated@@94 $generated@@158) $generated@@61))
(assert (= ($generated@@350 $generated@@158) $generated@@67))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@643) ($generated@@98 $generated@@172 $generated@@2)) (= (type $generated@@644) $generated@@70)) (= (type $generated@@645) ($generated@@98 $generated@@99 $generated@@100))) (= ($generated@@96 $generated@@643 ($generated@@180 $generated@@644) $generated@@645) (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@172) (< 0 ($generated ($generated@@103 $generated@@643 $generated@@646)))) ($generated@@290 $generated@@646 $generated@@644 $generated@@645))
 :pattern ( ($generated@@103 $generated@@643 $generated@@646))
))))
 :pattern ( ($generated@@96 $generated@@643 ($generated@@180 $generated@@644) $generated@@645))
)))
(assert (= $generated@@178 ($generated@@277 $generated@@178)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@81) (= (type $generated@@648) $generated@@70)) (= (type $generated@@649) ($generated@@98 $generated@@99 $generated@@100))) (and ($generated@@241 $generated@@649) (and ($generated@@162 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@70) ($generated@@96 $generated@@647 ($generated@@163 $generated@@648 $generated@@650) $generated@@649))
 :pattern ( ($generated@@96 $generated@@647 ($generated@@163 $generated@@648 $generated@@650) $generated@@649))
))))) ($generated@@290 ($generated@@170 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@290 ($generated@@170 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) $generated@@81) (= (type $generated@@652) $generated@@70)) (= (type $generated@@653) ($generated@@98 $generated@@99 $generated@@100))) (and ($generated@@241 $generated@@653) (and ($generated@@162 $generated@@651) (exists (($generated@@654 T@U) ) (!  (and (= (type $generated@@654) $generated@@70) ($generated@@96 $generated@@651 ($generated@@163 $generated@@654 $generated@@652) $generated@@653))
 :pattern ( ($generated@@96 $generated@@651 ($generated@@163 $generated@@654 $generated@@652) $generated@@653))
))))) ($generated@@290 ($generated@@171 $generated@@651) $generated@@652 $generated@@653))
 :pattern ( ($generated@@290 ($generated@@171 $generated@@651) $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@172) (= (type $generated@@656) $generated@@172)) (= ($generated@@244 ($generated@@277 $generated@@655) ($generated@@277 $generated@@656)) ($generated@@277 ($generated@@244 $generated@@655 $generated@@656))))
 :pattern ( ($generated@@244 ($generated@@277 $generated@@655) ($generated@@277 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@172) (= (type $generated@@658) $generated@@81)) (= ($generated@@284 ($generated@@277 $generated@@657) ($generated@@277 $generated@@658)) ($generated@@277 ($generated@@284 $generated@@657 $generated@@658))))
 :pattern ( ($generated@@284 ($generated@@277 $generated@@657) ($generated@@277 $generated@@658)))
)))
(assert (forall (($generated@@659 Int) ) (! (= ($generated@@331 ($generated@@8 ($generated@@275 $generated@@659))) ($generated@@277 ($generated@@331 ($generated@@8 $generated@@659))))
 :pattern ( ($generated@@331 ($generated@@8 ($generated@@275 $generated@@659))))
)))
(assert (forall (($generated@@660 T@U) ) (! (= ($generated@@331 ($generated@@277 $generated@@660)) ($generated@@277 ($generated@@331 $generated@@660)))
 :pattern ( ($generated@@331 ($generated@@277 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (! (let (($generated@@662 ($generated@@317 (type $generated@@661))))
 (=> (and (= (type $generated@@661) ($generated@@316 $generated@@662)) (= ($generated@@315 $generated@@661) 0)) (= $generated@@661 ($generated@@314 $generated@@662))))
 :pattern ( ($generated@@315 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (! (let (($generated@@666 (type $generated@@664)))
 (=> (and (and (= (type $generated@@663) ($generated@@98 $generated@@666 $generated@@2)) (= (type $generated@@665) $generated@@2)) (<= 0 ($generated $generated@@665))) (= ($generated@@344 ($generated@@104 $generated@@663 $generated@@664 $generated@@665)) (+ (- ($generated@@344 $generated@@663) ($generated ($generated@@103 $generated@@663 $generated@@664))) ($generated $generated@@665)))))
 :pattern ( ($generated@@344 ($generated@@104 $generated@@663 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@98 $generated@@99 $generated@@100)) (= (type $generated@@668) $generated@@2)) ($generated@@96 $generated@@668 $generated@@46 $generated@@667))
 :pattern ( ($generated@@96 $generated@@668 $generated@@46 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@98 $generated@@99 $generated@@100)) (= (type $generated@@670) $generated@@3)) ($generated@@96 $generated@@670 $generated@@47 $generated@@669))
 :pattern ( ($generated@@96 $generated@@670 $generated@@47 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@98 $generated@@99 $generated@@100)) (= (type $generated@@672) $generated@@4)) ($generated@@96 $generated@@672 $generated@@44 $generated@@671))
 :pattern ( ($generated@@96 $generated@@672 $generated@@44 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@98 $generated@@99 $generated@@100)) (= (type $generated@@674) $generated@@509)) ($generated@@96 $generated@@674 $generated@@45 $generated@@673))
 :pattern ( ($generated@@96 $generated@@674 $generated@@45 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@98 $generated@@99 $generated@@100)) (= (type $generated@@676) $generated@@172)) ($generated@@96 $generated@@676 $generated@@48 $generated@@675))
 :pattern ( ($generated@@96 $generated@@676 $generated@@48 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@677) $generated@@70) (= (type $generated@@678) $generated@@172)) (= (type $generated@@679) $generated@@81)) (= (type $generated@@680) ($generated@@98 $generated@@99 $generated@@100))) ($generated@@241 $generated@@680)) (= ($generated@@96 ($generated@@284 $generated@@678 $generated@@679) ($generated@@84 $generated@@677) $generated@@680)  (and ($generated@@290 $generated@@678 $generated@@677 $generated@@680) ($generated@@96 $generated@@679 ($generated@@84 $generated@@677) $generated@@680))))
 :pattern ( ($generated@@96 ($generated@@284 $generated@@678 $generated@@679) ($generated@@84 $generated@@677) $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@316 $generated@@172)) (= (type $generated@@682) $generated@@70)) (= ($generated@@83 $generated@@681 ($generated@@557 $generated@@682)) (forall (($generated@@683 Int) ) (!  (=> (and (<= 0 $generated@@683) (< $generated@@683 ($generated@@315 $generated@@681))) ($generated@@245 ($generated@@558 $generated@@681 $generated@@683) $generated@@682))
 :pattern ( ($generated@@558 $generated@@681 $generated@@683))
))))
 :pattern ( ($generated@@83 $generated@@681 ($generated@@557 $generated@@682)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 Int) ) (!  (=> (= (type $generated@@685) ($generated@@316 $generated@@172)) (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@315 $generated@@685))) (< ($generated@@599 ($generated@@392 $generated@@81 ($generated@@558 $generated@@685 $generated@@686))) ($generated@@684 $generated@@685))))
 :pattern ( ($generated@@599 ($generated@@392 $generated@@81 ($generated@@558 $generated@@685 $generated@@686))))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@688) $generated@@70)) (= (type $generated@@689) $generated@@70)) ($generated@@83 $generated@@687 ($generated@@464 $generated@@688 $generated@@689))) (and (and ($generated@@83 ($generated@@353 $generated@@687) ($generated@@265 $generated@@688)) ($generated@@83 ($generated@@400 $generated@@687) ($generated@@265 $generated@@689))) ($generated@@83 ($generated@@438 $generated@@687) ($generated@@265 ($generated@@163 $generated@@688 $generated@@689)))))
 :pattern ( ($generated@@83 $generated@@687 ($generated@@464 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@373 $generated@@172 $generated@@172)) (= (type $generated@@691) $generated@@70)) (= (type $generated@@692) $generated@@70)) ($generated@@83 $generated@@690 ($generated@@472 $generated@@691 $generated@@692))) (and (and ($generated@@83 ($generated@@371 $generated@@690) ($generated@@270 $generated@@691)) ($generated@@83 ($generated@@411 $generated@@690) ($generated@@270 $generated@@692))) ($generated@@83 ($generated@@446 $generated@@690) ($generated@@270 ($generated@@163 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@83 $generated@@690 ($generated@@472 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@2) ($generated@@83 $generated@@693 $generated@@46))
 :pattern ( ($generated@@83 $generated@@693 $generated@@46))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@3) ($generated@@83 $generated@@694 $generated@@47))
 :pattern ( ($generated@@83 $generated@@694 $generated@@47))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@4) ($generated@@83 $generated@@695 $generated@@44))
 :pattern ( ($generated@@83 $generated@@695 $generated@@44))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@509) ($generated@@83 $generated@@696 $generated@@45))
 :pattern ( ($generated@@83 $generated@@696 $generated@@45))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@172) ($generated@@83 $generated@@697 $generated@@48))
 :pattern ( ($generated@@83 $generated@@697 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 (T@U) Bool)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 (T@U) Bool)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@698) ($generated@@187 $generated@@99 $generated@@4)) (= (type $generated@@699) $generated@@99)) (= (type $generated@@700) ($generated@@98 $generated@@99 $generated@@100))) (= (type $generated@@701) $generated@@81)) (= (type $generated@@702) $generated@@81)) (= (type $generated@@704) $generated@@81)) (= (type $generated@@705) $generated@@81)) (= (type $generated@@708) $generated@@81)) (= (type $generated@@709) $generated@@81)) (= (type $generated@@710) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@711  (=> (and (= $generated@@698 ($generated@@186 $generated@@699 $generated@@700 $generated@@60 false)) (= $generated@@701 ($generated@@277 $generated@@178))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@83 ($generated@@8 ($generated@@275 4)) $generated@@158)) (=> ($generated@@83 ($generated@@8 ($generated@@275 4)) $generated@@158) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@83 ($generated@@277 ($generated@@284 ($generated@@331 ($generated@@8 ($generated@@275 10))) ($generated@@277 $generated@@178))) ($generated@@84 $generated@@158))) (=> ($generated@@83 ($generated@@277 ($generated@@284 ($generated@@331 ($generated@@8 ($generated@@275 10))) ($generated@@277 $generated@@178))) ($generated@@84 $generated@@158)) (=> (and (= $generated@@702 ($generated@@277 ($generated@@284 ($generated@@331 ($generated@@8 ($generated@@275 4))) ($generated@@277 ($generated@@284 ($generated@@331 ($generated@@8 ($generated@@275 10))) ($generated@@277 $generated@@178)))))) ($generated@@96 $generated@@702 ($generated@@84 $generated@@158) $generated@@700)) (=> (and (and ($generated@@703 $generated@@702) ($generated@@703 $generated@@702)) (and (= $generated@@704 ($generated@@277 ($generated@@284 ($generated@@331 ($generated@@8 ($generated@@275 20))) ($generated@@277 $generated@@178)))) ($generated@@96 $generated@@702 ($generated@@84 $generated@@158) $generated@@700))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@83 $generated@@704 ($generated@@84 $generated@@158))) (=> ($generated@@83 $generated@@704 ($generated@@84 $generated@@158)) (=> ($generated@@96 $generated@@704 ($generated@@84 $generated@@158) $generated@@700) (=> (and (and (and ($generated@@82 $generated@@158 $generated@@702 $generated@@704) ($generated@@82 $generated@@158 $generated@@702 $generated@@704)) (and (= $generated@@705 ($generated@@79 $generated@@158 ($generated@@299 $generated@@325) $generated@@702 $generated@@704)) ($generated@@96 $generated@@705 ($generated@@84 $generated@@158) $generated@@700))) (and (and ($generated@@703 $generated@@705) ($generated@@703 $generated@@705)) (and (= $generated@@706 ($generated@@275 (- 0 12))) (= (ControlFlow 0 2) (- 0 1))))) (<= $generated@@706 ($generated@@275 0)))))))))))))))
(let (($generated@@712  (=> (and ($generated@@241 $generated@@700) ($generated@@707 $generated@@700)) (=> (and (and (and (and ($generated@@83 $generated@@708 ($generated@@84 $generated@@158)) ($generated@@96 $generated@@708 ($generated@@84 $generated@@158) $generated@@700)) true) (and (and ($generated@@83 $generated@@709 ($generated@@84 $generated@@46)) ($generated@@96 $generated@@709 ($generated@@84 $generated@@46) $generated@@700)) true)) (and (and (and ($generated@@83 $generated@@710 ($generated@@84 $generated@@158)) ($generated@@96 $generated@@710 ($generated@@84 $generated@@158) $generated@@700)) true) (and (= 4 $generated@@78) (= (ControlFlow 0 6) 2)))) $generated@@711))))
$generated@@712)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (Int) Int)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U) T@U)
(declare-fun $generated@@286 (T@U T@U T@U) Bool)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@364 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@471 () T@T)
(declare-fun $generated@@479 () Int)
(declare-fun $generated@@480 (T@U T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 () T@T)
(declare-fun $generated@@483 (T@U) Bool)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@531 () T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@536 (T@U Int) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@667 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@81 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@70)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@70) (= (type $generated@@149) $generated@@70)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@74)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@64))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@141 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@141 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@73 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@83) (= (type $generated@@229) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@230) ($generated@@72 $generated@@4))) (= (type $generated@@232) $generated@@83)) (= (type $generated@@233) ($generated@@72 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@235 $generated@@237)) $generated@@70)
 :pattern ( ($generated@@235 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@70) (= (type $generated@@239) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@236 $generated@@239)) ($generated@@80 $generated@@160 ($generated@@235 $generated@@238) $generated@@239))
 :pattern ( ($generated@@80 $generated@@160 ($generated@@235 $generated@@238) $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@145)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@70) (= (type $generated@@245) $generated@@70)) (= (type $generated@@246) $generated@@154)) (= (type $generated@@247) $generated@@154)) (= ($generated@@141 ($generated@@240 $generated@@246 $generated@@247) ($generated@@144 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@141 ($generated@@240 $generated@@246 $generated@@247) ($generated@@144 $generated@@244 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (!  (=> (= (type $generated@@248) $generated@@70) ($generated@@141 $generated@@160 ($generated@@235 $generated@@248)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@235 $generated@@248)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@145) (= (type $generated@@250) $generated@@145)) (= ($generated@@151 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@151 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@145) (= (type $generated@@253) $generated@@145)) (= ($generated@@251 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253))
)))
(assert  (and (forall (($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@257)) $generated@@154)
 :pattern ( ($generated@@255 $generated@@257))
)) (forall (($generated@@258 T@U) ) (! (= (type ($generated@@256 $generated@@258)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (= (type $generated@@259) $generated@@145) (= (type $generated@@260) $generated@@145)) (and ($generated@@254 $generated@@259) ($generated@@254 $generated@@260))) (= ($generated@@251 $generated@@259 $generated@@260)  (and (= ($generated@@255 $generated@@259) ($generated@@255 $generated@@260)) ($generated@@251 ($generated@@256 $generated@@259) ($generated@@256 $generated@@260)))))
 :pattern ( ($generated@@251 $generated@@259 $generated@@260) ($generated@@254 $generated@@259))
 :pattern ( ($generated@@251 $generated@@259 $generated@@260) ($generated@@254 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@141 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@154) ($generated@@0 ($generated@@87 $generated@@263 $generated@@265))) ($generated@@241 $generated@@265 $generated@@264))
 :pattern ( ($generated@@87 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@141 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@141 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@154) ($generated@@0 ($generated@@87 $generated@@268 $generated@@270))) ($generated@@241 $generated@@270 $generated@@269))
 :pattern ( ($generated@@87 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@141 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@273 $generated@@276) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@145) (= (type $generated@@279) $generated@@145)) (and ($generated@@277 $generated@@278) ($generated@@277 $generated@@279))) (= ($generated@@251 $generated@@278 $generated@@279) true))
 :pattern ( ($generated@@251 $generated@@278 $generated@@279) ($generated@@277 $generated@@278))
 :pattern ( ($generated@@251 $generated@@278 $generated@@279) ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (= (type ($generated@@280 $generated@@281 $generated@@282)) $generated@@145)
 :pattern ( ($generated@@280 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@70) (= (type $generated@@284) $generated@@154)) (= (type $generated@@285) $generated@@145)) (= ($generated@@141 ($generated@@280 $generated@@284 $generated@@285) ($generated@@235 $generated@@283))  (and ($generated@@241 $generated@@284 $generated@@283) ($generated@@141 $generated@@285 ($generated@@235 $generated@@283)))))
 :pattern ( ($generated@@141 ($generated@@280 $generated@@284 $generated@@285) ($generated@@235 $generated@@283)))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) $generated@@70) (= (type $generated@@288) $generated@@70)) (= (type $generated@@289) $generated@@154)) (= (type $generated@@290) $generated@@154)) (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@236 $generated@@291)) (= ($generated@@80 ($generated@@240 $generated@@289 $generated@@290) ($generated@@144 $generated@@287 $generated@@288) $generated@@291)  (and ($generated@@286 $generated@@289 $generated@@287 $generated@@291) ($generated@@286 $generated@@290 $generated@@288 $generated@@291))))
 :pattern ( ($generated@@80 ($generated@@240 $generated@@289 $generated@@290) ($generated@@144 $generated@@287 $generated@@288) $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@145) (= ($generated@@143 $generated@@292) (= ($generated@@159 $generated@@292) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@145) (= ($generated@@277 $generated@@293) (= ($generated@@159 $generated@@293) $generated@@64)))
 :pattern ( ($generated@@277 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@145) (= ($generated@@254 $generated@@294) (= ($generated@@159 $generated@@294) $generated@@66)))
 :pattern ( ($generated@@254 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@145) ($generated@@143 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@154) (= (type $generated@@297) $generated@@154)) (= $generated@@295 ($generated@@240 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@143 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@145) ($generated@@254 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@154) (= (type $generated@@300) $generated@@145)) (= $generated@@298 ($generated@@280 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@254 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 17)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@145) ($generated@@277 $generated@@309)) (= $generated@@309 $generated@@160))
 :pattern ( ($generated@@277 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@2) (= ($generated@@141 $generated@@310 $generated@@138) (<= ($generated@@271 0) ($generated $generated@@310))))
 :pattern ( ($generated@@141 $generated@@310 $generated@@138))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@154)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@70) (= (type $generated@@315) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@286 ($generated@@311 $generated@@313) $generated@@314 $generated@@315) ($generated@@80 $generated@@313 $generated@@314 $generated@@315)))
 :pattern ( ($generated@@286 ($generated@@311 $generated@@313) $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@82 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@85 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@82 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@87 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@75)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@70) (and (= ($generated@@78 ($generated@@235 $generated@@324)) $generated@@65) (= ($generated@@322 ($generated@@235 $generated@@324)) $generated@@69)))
 :pattern ( ($generated@@235 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 18)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@82 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@87 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@87 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@82 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@87 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@87 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@85 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@82 $generated@@362 $generated@@2)) (= ($generated@@163 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@87 $generated@@361 $generated@@363))) (<= ($generated ($generated@@87 $generated@@361 $generated@@363)) ($generated@@316 $generated@@361))))
 :pattern ( ($generated@@87 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@163 $generated@@361))
)))
(assert (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@154) ($generated@@241 $generated@@367 $generated@@138)) (and (= ($generated@@311 ($generated@@364 $generated@@2 $generated@@367)) $generated@@367) ($generated@@141 ($generated@@364 $generated@@2 $generated@@367) $generated@@138)))
 :pattern ( ($generated@@241 $generated@@367 $generated@@138))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@329 (type $generated@@368))))
(let (($generated@@370 ($generated@@328 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@327 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@326 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@325 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@325 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@329 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@82 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@329 (type $generated@@375))))
(let (($generated@@377 ($generated@@328 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@327 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@326 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@87 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@347 (type $generated@@379))))
(let (($generated@@381 ($generated@@346 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@345 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@344 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@87 ($generated@@343 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@343 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@347 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@82 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@347 (type $generated@@386))))
(let (($generated@@388 ($generated@@346 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@345 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@344 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@87 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@391) $generated@@70)) (= ($generated@@141 $generated@@390 ($generated@@162 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@390 $generated@@392)))) ($generated@@241 $generated@@392 $generated@@391))
 :pattern ( ($generated@@87 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@141 $generated@@390 ($generated@@162 $generated@@391)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@394) $generated@@70)) (= (type $generated@@395) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@393 ($generated@@261 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@154) ($generated@@0 ($generated@@87 $generated@@393 $generated@@396))) ($generated@@286 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@87 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@80 $generated@@393 ($generated@@261 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@398) $generated@@70)) (= (type $generated@@399) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@397 ($generated@@266 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@154) ($generated@@0 ($generated@@87 $generated@@397 $generated@@400))) ($generated@@286 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@87 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@80 $generated@@397 ($generated@@266 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@87 ($generated@@317 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@87 ($generated@@317 $generated@@402) $generated@@401)))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@329 (type $generated@@406))))
(let (($generated@@408 ($generated@@328 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@327 $generated@@154 $generated@@154)) (= (type $generated@@410) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@87 ($generated@@325 $generated@@409) ($generated@@152 ($generated@@364 $generated@@145 $generated@@410)))) (= ($generated@@87 ($generated@@404 $generated@@409) ($generated@@152 ($generated@@364 $generated@@145 $generated@@410))) ($generated@@153 ($generated@@364 $generated@@145 $generated@@410))))))
 :pattern ( ($generated@@87 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@347 (type $generated@@414))))
(let (($generated@@416 ($generated@@346 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@82 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@345 $generated@@154 $generated@@154)) (= (type $generated@@418) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@87 ($generated@@343 $generated@@417) ($generated@@152 ($generated@@364 $generated@@145 $generated@@418)))) (= ($generated@@87 ($generated@@412 $generated@@417) ($generated@@152 ($generated@@364 $generated@@145 $generated@@418))) ($generated@@153 ($generated@@364 $generated@@145 $generated@@418))))))
 :pattern ( ($generated@@87 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@328 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@327 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@87 ($generated@@372 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@87 ($generated@@325 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@87 ($generated@@404 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@87 ($generated@@325 $generated@@419) $generated@@423))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@87 ($generated@@372 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@346 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@345 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@87 ($generated@@383 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@87 ($generated@@343 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@87 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@87 ($generated@@343 $generated@@424) $generated@@428))
 :pattern ( ($generated@@87 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@70)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@327 $generated@@154 $generated@@154)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@325 $generated@@432) $generated@@436))) (and ($generated@@286 ($generated@@87 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@286 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@87 ($generated@@325 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@80 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@345 $generated@@154 $generated@@154)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) $generated@@70)) (= (type $generated@@443) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@343 $generated@@440) $generated@@444))) (and ($generated@@286 ($generated@@87 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@286 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@87 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@87 ($generated@@343 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@80 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@445) $generated@@70) (= (type $generated@@446) $generated@@145)) ($generated@@141 $generated@@446 ($generated@@235 $generated@@445))) (or ($generated@@277 $generated@@446) ($generated@@254 $generated@@446)))
 :pattern ( ($generated@@254 $generated@@446) ($generated@@141 $generated@@446 ($generated@@235 $generated@@445)))
 :pattern ( ($generated@@277 $generated@@446) ($generated@@141 $generated@@446 ($generated@@235 $generated@@445)))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@82 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@347 (type $generated@@449))))
(let (($generated@@451 ($generated@@346 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@345 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@344 $generated@@451 $generated@@450)) (= ($generated@@343 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@343 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@347 (type $generated@@452))))
(let (($generated@@454 ($generated@@346 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@345 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@344 $generated@@454 $generated@@453)) (= ($generated@@383 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@383 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@347 (type $generated@@455))))
(let (($generated@@457 ($generated@@346 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@345 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@344 $generated@@457 $generated@@456)) (= ($generated@@411 $generated@@455) ($generated@@447 $generated@@154))))))
 :pattern ( ($generated@@411 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@329 (type $generated@@458))))
(let (($generated@@460 ($generated@@328 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@327 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@326 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@154) (= (type $generated@@462) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@403 $generated@@458) ($generated@@311 ($generated@@240 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@403 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@347 (type $generated@@463))))
(let (($generated@@465 ($generated@@346 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@345 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@344 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@154) (= (type $generated@@467) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@411 $generated@@463) ($generated@@311 ($generated@@240 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@411 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@154) ($generated@@241 $generated@@468 $generated@@46)) (and (= ($generated@@311 ($generated@@364 $generated@@2 $generated@@468)) $generated@@468) ($generated@@141 ($generated@@364 $generated@@2 $generated@@468) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@468 $generated@@46))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@154) ($generated@@241 $generated@@469 $generated@@47)) (and (= ($generated@@311 ($generated@@364 $generated@@3 $generated@@469)) $generated@@469) ($generated@@141 ($generated@@364 $generated@@3 $generated@@469) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@469 $generated@@47))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@154) ($generated@@241 $generated@@470 $generated@@44)) (and (= ($generated@@311 ($generated@@364 $generated@@4 $generated@@470)) $generated@@470) ($generated@@141 ($generated@@364 $generated@@4 $generated@@470) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@470 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@471) 20))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) ($generated@@241 $generated@@472 $generated@@45)) (and (= ($generated@@311 ($generated@@364 $generated@@471 $generated@@472)) $generated@@472) ($generated@@141 ($generated@@364 $generated@@471 $generated@@472) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@472 $generated@@45))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@70) (= ($generated@@241 ($generated@@311 $generated@@473) $generated@@474) ($generated@@141 $generated@@473 $generated@@474)))
 :pattern ( ($generated@@241 ($generated@@311 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@85 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@82 $generated@@476 $generated@@2)) (<= 0 ($generated@@316 $generated@@475))))
 :pattern ( ($generated@@316 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@304 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@303 $generated@@478)) (<= 0 ($generated@@302 $generated@@477))))
 :pattern ( ($generated@@302 $generated@@477))
)))
(assert  (and (= ($generated@@1 $generated@@482) 21) (forall (($generated@@484 T@U) ) (! (= (type ($generated@@481 $generated@@484)) $generated@@482)
 :pattern ( ($generated@@481 $generated@@484))
))))
(assert  (=> (<= 1 $generated@@479) (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@485) $generated@@482) (= (type $generated@@486) $generated@@145)) (or ($generated@@483 $generated@@486) (and (not (= 1 $generated@@479)) ($generated@@141 $generated@@486 ($generated@@235 $generated@@138))))) (and (=> (not ($generated@@277 $generated@@486)) (let (($generated@@487 ($generated@@256 $generated@@486)))
($generated@@483 $generated@@487))) (= ($generated@@480 ($generated@@481 $generated@@485) $generated@@486) (ite ($generated@@277 $generated@@486) 0 (let (($generated@@488 ($generated@@256 $generated@@486)))
(let (($generated@@489 ($generated ($generated@@364 $generated@@2 ($generated@@255 $generated@@486)))))
(+ $generated@@489 ($generated@@480 $generated@@485 $generated@@488))))))))
 :pattern ( ($generated@@480 ($generated@@481 $generated@@485) $generated@@486))
))))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@490 ($generated@@429 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@429 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@494 ($generated@@429 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@429 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@78 ($generated@@429 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@437 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@437 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@504 ($generated@@437 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@437 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= ($generated@@78 ($generated@@437 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@154) (= (type $generated@@511) $generated@@154)) (= ($generated@@159 ($generated@@240 $generated@@510 $generated@@511)) $generated@@62))
 :pattern ( ($generated@@240 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@70) (= (type $generated@@515) $generated@@70)) (= ($generated@@512 ($generated@@144 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@144 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@70) (= (type $generated@@519) $generated@@70)) (= ($generated@@516 ($generated@@144 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@144 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@154)) (= ($generated@@152 ($generated@@240 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@240 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@154) (= (type $generated@@523) $generated@@154)) (= ($generated@@153 ($generated@@240 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@240 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@154) (= (type $generated@@525) $generated@@145)) (= ($generated@@159 ($generated@@280 $generated@@524 $generated@@525)) $generated@@66))
 :pattern ( ($generated@@280 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@154) (= (type $generated@@527) $generated@@145)) (= ($generated@@255 ($generated@@280 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@280 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@154) (= (type $generated@@529) $generated@@145)) (= ($generated@@256 ($generated@@280 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@280 $generated@@528 $generated@@529))
)))
(assert  (and (forall (($generated@@532 T@U) ) (! (= (type ($generated@@530 $generated@@532)) $generated@@482)
 :pattern ( ($generated@@530 $generated@@532))
)) (= (type $generated@@531) $generated@@482)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@482) (= (type $generated@@534) $generated@@145)) (= ($generated@@480 $generated@@533 $generated@@534) ($generated@@480 $generated@@531 $generated@@534)))
 :pattern ( ($generated@@480 ($generated@@530 $generated@@533) $generated@@534))
)))
(assert  (and (forall (($generated@@537 T@U) ) (! (= (type ($generated@@535 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@537))
)) (forall (($generated@@538 T@U) ($generated@@539 Int) ) (! (let (($generated@@540 ($generated@@304 (type $generated@@538))))
(= (type ($generated@@536 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@536 $generated@@538 $generated@@539))
))))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@303 $generated@@154)) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@541 ($generated@@535 $generated@@542) $generated@@543) (forall (($generated@@544 Int) ) (!  (=> (and (<= 0 $generated@@544) (< $generated@@544 ($generated@@302 $generated@@541))) ($generated@@286 ($generated@@536 $generated@@541 $generated@@544) $generated@@542 $generated@@543))
 :pattern ( ($generated@@536 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@80 $generated@@541 ($generated@@535 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@545 ($generated@@81 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@81 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@70)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@70) (= ($generated@@547 ($generated@@261 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@261 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@70) (= ($generated@@78 ($generated@@261 $generated@@550)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@70)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@70) (= ($generated@@551 ($generated@@266 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@266 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@70) (= ($generated@@78 ($generated@@266 $generated@@554)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@70)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@70) (= ($generated@@555 ($generated@@162 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@162 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@558)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@70)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@70) (= ($generated@@559 ($generated@@535 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@535 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@70) (= ($generated@@78 ($generated@@535 $generated@@562)) $generated@@57))
 :pattern ( ($generated@@535 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@70)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@70) (= ($generated@@563 ($generated@@235 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@235 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
(= ($generated@@364 $generated@@567 ($generated@@311 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@311 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@327 $generated@@154 $generated@@154)) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) $generated@@70)) (= ($generated@@141 $generated@@568 ($generated@@429 $generated@@569 $generated@@570)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@325 $generated@@568) $generated@@571))) (and ($generated@@241 ($generated@@87 ($generated@@404 $generated@@568) $generated@@571) $generated@@570) ($generated@@241 $generated@@571 $generated@@569)))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@568) $generated@@571))
 :pattern ( ($generated@@87 ($generated@@325 $generated@@568) $generated@@571))
))))
 :pattern ( ($generated@@141 $generated@@568 ($generated@@429 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@345 $generated@@154 $generated@@154)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) $generated@@70)) (= ($generated@@141 $generated@@572 ($generated@@437 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@343 $generated@@572) $generated@@575))) (and ($generated@@241 ($generated@@87 ($generated@@412 $generated@@572) $generated@@575) $generated@@574) ($generated@@241 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@87 ($generated@@412 $generated@@572) $generated@@575))
 :pattern ( ($generated@@87 ($generated@@343 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@141 $generated@@572 ($generated@@437 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@154) (= (type $generated@@579) $generated@@154)) (< ($generated@@576 $generated@@578) ($generated@@577 ($generated@@240 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@240 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@154) (= (type $generated@@581) $generated@@154)) (< ($generated@@576 $generated@@581) ($generated@@577 ($generated@@240 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@240 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@145)) (< ($generated@@576 $generated@@582) ($generated@@577 ($generated@@280 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@280 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@145)) (< ($generated@@577 $generated@@585) ($generated@@577 ($generated@@280 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@280 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@482) (= (type $generated@@587) $generated@@145)) (= ($generated@@480 ($generated@@481 $generated@@586) $generated@@587) ($generated@@480 $generated@@586 $generated@@587)))
 :pattern ( ($generated@@480 ($generated@@481 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@154) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) $generated@@70)) ($generated@@241 $generated@@588 ($generated@@429 $generated@@589 $generated@@590))) (and (= ($generated@@311 ($generated@@364 ($generated@@327 $generated@@154 $generated@@154) $generated@@588)) $generated@@588) ($generated@@141 ($generated@@364 ($generated@@327 $generated@@154 $generated@@154) $generated@@588) ($generated@@429 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@241 $generated@@588 ($generated@@429 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@154) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) $generated@@70)) ($generated@@241 $generated@@591 ($generated@@437 $generated@@592 $generated@@593))) (and (= ($generated@@311 ($generated@@364 ($generated@@345 $generated@@154 $generated@@154) $generated@@591)) $generated@@591) ($generated@@141 ($generated@@364 ($generated@@345 $generated@@154 $generated@@154) $generated@@591) ($generated@@437 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@241 $generated@@591 ($generated@@437 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@70) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) $generated@@154)) ($generated@@241 $generated@@596 ($generated@@144 $generated@@594 $generated@@595))) (and (= ($generated@@311 ($generated@@364 $generated@@145 $generated@@596)) $generated@@596) ($generated@@141 ($generated@@364 $generated@@145 $generated@@596) ($generated@@144 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@241 $generated@@596 ($generated@@144 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@145) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@236 $generated@@599) (and ($generated@@254 $generated@@597) ($generated@@80 $generated@@597 ($generated@@235 $generated@@598) $generated@@599)))) ($generated@@286 ($generated@@255 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@286 ($generated@@255 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
 (not ($generated@@0 ($generated@@87 ($generated@@447 $generated@@601) $generated@@600))))
 :pattern ( (let (($generated@@601 (type $generated@@600)))
($generated@@87 ($generated@@447 $generated@@601) $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@70) (= (type $generated@@603) $generated@@70)) (and (= ($generated@@78 ($generated@@144 $generated@@602 $generated@@603)) $generated@@63) (= ($generated@@322 ($generated@@144 $generated@@602 $generated@@603)) $generated@@68)))
 :pattern ( ($generated@@144 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@145) (= ($generated@@576 ($generated@@311 $generated@@604)) ($generated@@577 $generated@@604)))
 :pattern ( ($generated@@576 ($generated@@311 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@154) ($generated@@241 $generated@@605 ($generated@@81 0))) (and (= ($generated@@311 ($generated@@364 $generated@@2 $generated@@605)) $generated@@605) ($generated@@141 ($generated@@364 ($generated@@82 $generated@@154 $generated@@4) $generated@@605) ($generated@@81 0))))
 :pattern ( ($generated@@241 $generated@@605 ($generated@@81 0)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@154) (= (type $generated@@607) $generated@@70)) ($generated@@241 $generated@@606 ($generated@@261 $generated@@607))) (and (= ($generated@@311 ($generated@@364 ($generated@@82 $generated@@154 $generated@@4) $generated@@606)) $generated@@606) ($generated@@141 ($generated@@364 ($generated@@82 $generated@@154 $generated@@4) $generated@@606) ($generated@@261 $generated@@607))))
 :pattern ( ($generated@@241 $generated@@606 ($generated@@261 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@154) (= (type $generated@@609) $generated@@70)) ($generated@@241 $generated@@608 ($generated@@266 $generated@@609))) (and (= ($generated@@311 ($generated@@364 ($generated@@82 $generated@@154 $generated@@4) $generated@@608)) $generated@@608) ($generated@@141 ($generated@@364 ($generated@@82 $generated@@154 $generated@@4) $generated@@608) ($generated@@266 $generated@@609))))
 :pattern ( ($generated@@241 $generated@@608 ($generated@@266 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@154) (= (type $generated@@611) $generated@@70)) ($generated@@241 $generated@@610 ($generated@@162 $generated@@611))) (and (= ($generated@@311 ($generated@@364 ($generated@@82 $generated@@154 $generated@@2) $generated@@610)) $generated@@610) ($generated@@141 ($generated@@364 ($generated@@82 $generated@@154 $generated@@2) $generated@@610) ($generated@@162 $generated@@611))))
 :pattern ( ($generated@@241 $generated@@610 ($generated@@162 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@154) (= (type $generated@@613) $generated@@70)) ($generated@@241 $generated@@612 ($generated@@535 $generated@@613))) (and (= ($generated@@311 ($generated@@364 ($generated@@303 $generated@@154) $generated@@612)) $generated@@612) ($generated@@141 ($generated@@364 ($generated@@303 $generated@@154) $generated@@612) ($generated@@535 $generated@@613))))
 :pattern ( ($generated@@241 $generated@@612 ($generated@@535 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@70) (= (type $generated@@615) $generated@@154)) ($generated@@241 $generated@@615 ($generated@@235 $generated@@614))) (and (= ($generated@@311 ($generated@@364 $generated@@145 $generated@@615)) $generated@@615) ($generated@@141 ($generated@@364 $generated@@145 $generated@@615) ($generated@@235 $generated@@614))))
 :pattern ( ($generated@@241 $generated@@615 ($generated@@235 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@145) (= (type $generated@@617) $generated@@70)) (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@236 $generated@@618) (and ($generated@@254 $generated@@616) ($generated@@80 $generated@@616 ($generated@@235 $generated@@617) $generated@@618)))) ($generated@@80 ($generated@@256 $generated@@616) ($generated@@235 $generated@@617) $generated@@618))
 :pattern ( ($generated@@80 ($generated@@256 $generated@@616) ($generated@@235 $generated@@617) $generated@@618))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@322 $generated@@138) $generated@@67))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@619) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@620) $generated@@70)) (= (type $generated@@621) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@619 ($generated@@162 $generated@@620) $generated@@621) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@619 $generated@@622)))) ($generated@@286 $generated@@622 $generated@@620 $generated@@621))
 :pattern ( ($generated@@87 $generated@@619 $generated@@622))
))))
 :pattern ( ($generated@@80 $generated@@619 ($generated@@162 $generated@@620) $generated@@621))
)))
(assert (= $generated@@160 ($generated@@273 $generated@@160)))
(assert  (=> (<= 1 $generated@@479) (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@482) (= (type $generated@@624) $generated@@145)) (or ($generated@@483 ($generated@@273 $generated@@624)) (and (not (= 1 $generated@@479)) ($generated@@141 $generated@@624 ($generated@@235 $generated@@138))))) (and (=> (not ($generated@@0 ($generated@@273 ($generated@@11 ($generated@@277 ($generated@@273 $generated@@624)))))) (let (($generated@@625 ($generated@@273 ($generated@@256 ($generated@@273 $generated@@624)))))
($generated@@483 $generated@@625))) (= ($generated@@480 ($generated@@481 $generated@@623) ($generated@@273 $generated@@624)) (ite ($generated@@277 ($generated@@273 $generated@@624)) 0 (let (($generated@@626 ($generated@@273 ($generated@@256 ($generated@@273 $generated@@624)))))
(let (($generated@@627 ($generated@@271 ($generated ($generated@@364 $generated@@2 ($generated@@255 ($generated@@273 $generated@@624)))))))
($generated@@271 (+ $generated@@627 ($generated@@480 ($generated@@481 $generated@@623) $generated@@626)))))))))
 :weight 3
 :pattern ( ($generated@@480 ($generated@@481 $generated@@623) ($generated@@273 $generated@@624)))
))))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@145) (= (type $generated@@629) $generated@@70)) (= (type $generated@@630) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@236 $generated@@630) (and ($generated@@143 $generated@@628) (exists (($generated@@631 T@U) ) (!  (and (= (type $generated@@631) $generated@@70) ($generated@@80 $generated@@628 ($generated@@144 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@80 $generated@@628 ($generated@@144 $generated@@629 $generated@@631) $generated@@630))
))))) ($generated@@286 ($generated@@152 $generated@@628) $generated@@629 $generated@@630))
 :pattern ( ($generated@@286 ($generated@@152 $generated@@628) $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@145) (= (type $generated@@633) $generated@@70)) (= (type $generated@@634) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@236 $generated@@634) (and ($generated@@143 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@70) ($generated@@80 $generated@@632 ($generated@@144 $generated@@635 $generated@@633) $generated@@634))
 :pattern ( ($generated@@80 $generated@@632 ($generated@@144 $generated@@635 $generated@@633) $generated@@634))
))))) ($generated@@286 ($generated@@153 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@286 ($generated@@153 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@154) (= (type $generated@@637) $generated@@154)) (= ($generated@@240 ($generated@@273 $generated@@636) ($generated@@273 $generated@@637)) ($generated@@273 ($generated@@240 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@240 ($generated@@273 $generated@@636) ($generated@@273 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@154) (= (type $generated@@639) $generated@@145)) (= ($generated@@280 ($generated@@273 $generated@@638) ($generated@@273 $generated@@639)) ($generated@@273 ($generated@@280 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@280 ($generated@@273 $generated@@638) ($generated@@273 $generated@@639)))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@311 ($generated@@8 ($generated@@271 $generated@@640))) ($generated@@273 ($generated@@311 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@311 ($generated@@8 ($generated@@271 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@311 ($generated@@273 $generated@@641)) ($generated@@273 ($generated@@311 $generated@@641)))
 :pattern ( ($generated@@311 ($generated@@273 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@304 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@303 $generated@@643)) (= ($generated@@302 $generated@@642) 0)) (= $generated@@642 ($generated@@301 $generated@@643))))
 :pattern ( ($generated@@302 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@82 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@316 ($generated@@88 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@316 $generated@@644) ($generated ($generated@@87 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@316 ($generated@@88 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert  (=> (<= 1 $generated@@479) (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) $generated@@482) (= (type $generated@@649) $generated@@145)) (or ($generated@@483 $generated@@649) (and (not (= 1 $generated@@479)) ($generated@@141 $generated@@649 ($generated@@235 $generated@@138))))) (<= ($generated@@271 0) ($generated@@480 $generated@@648 $generated@@649)))
 :pattern ( ($generated@@480 $generated@@648 $generated@@649))
))))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@651) $generated@@2)) ($generated@@80 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@80 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@653) $generated@@3)) ($generated@@80 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@80 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@655) $generated@@4)) ($generated@@80 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@80 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@657) $generated@@471)) ($generated@@80 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@80 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@659) $generated@@154)) ($generated@@80 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@80 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@660) $generated@@70) (= (type $generated@@661) $generated@@154)) (= (type $generated@@662) $generated@@145)) (= (type $generated@@663) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@236 $generated@@663)) (= ($generated@@80 ($generated@@280 $generated@@661 $generated@@662) ($generated@@235 $generated@@660) $generated@@663)  (and ($generated@@286 $generated@@661 $generated@@660 $generated@@663) ($generated@@80 $generated@@662 ($generated@@235 $generated@@660) $generated@@663))))
 :pattern ( ($generated@@80 ($generated@@280 $generated@@661 $generated@@662) ($generated@@235 $generated@@660) $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@303 $generated@@154)) (= (type $generated@@665) $generated@@70)) (= ($generated@@141 $generated@@664 ($generated@@535 $generated@@665)) (forall (($generated@@666 Int) ) (!  (=> (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@302 $generated@@664))) ($generated@@241 ($generated@@536 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@536 $generated@@664 $generated@@666))
))))
 :pattern ( ($generated@@141 $generated@@664 ($generated@@535 $generated@@665)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@303 $generated@@154)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@302 $generated@@668))) (< ($generated@@577 ($generated@@364 $generated@@145 ($generated@@536 $generated@@668 $generated@@669))) ($generated@@667 $generated@@668))))
 :pattern ( ($generated@@577 ($generated@@364 $generated@@145 ($generated@@536 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@327 $generated@@154 $generated@@154)) (= (type $generated@@671) $generated@@70)) (= (type $generated@@672) $generated@@70)) ($generated@@141 $generated@@670 ($generated@@429 $generated@@671 $generated@@672))) (and (and ($generated@@141 ($generated@@325 $generated@@670) ($generated@@261 $generated@@671)) ($generated@@141 ($generated@@372 $generated@@670) ($generated@@261 $generated@@672))) ($generated@@141 ($generated@@403 $generated@@670) ($generated@@261 ($generated@@144 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@141 $generated@@670 ($generated@@429 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@345 $generated@@154 $generated@@154)) (= (type $generated@@674) $generated@@70)) (= (type $generated@@675) $generated@@70)) ($generated@@141 $generated@@673 ($generated@@437 $generated@@674 $generated@@675))) (and (and ($generated@@141 ($generated@@343 $generated@@673) ($generated@@266 $generated@@674)) ($generated@@141 ($generated@@383 $generated@@673) ($generated@@266 $generated@@675))) ($generated@@141 ($generated@@411 $generated@@673) ($generated@@266 ($generated@@144 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@141 $generated@@673 ($generated@@437 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@141 $generated@@676 $generated@@46))
 :pattern ( ($generated@@141 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@141 $generated@@677 $generated@@47))
 :pattern ( ($generated@@141 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@141 $generated@@678 $generated@@44))
 :pattern ( ($generated@@141 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@471) ($generated@@141 $generated@@679 $generated@@45))
 :pattern ( ($generated@@141 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@154) ($generated@@141 $generated@@680 $generated@@48))
 :pattern ( ($generated@@141 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@681) $generated@@145) (= (type $generated@@683) $generated@@145)) (= (type $generated@@684) $generated@@145)) (= (type $generated@@685) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@686) $generated@@145)) (= (type $generated@@689) ($generated@@169 $generated@@83 $generated@@4))) (= (type $generated@@690) $generated@@83)) (= (type $generated@@691) ($generated@@169 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@693 true))
(let (($generated@@694  (=> (= $generated@@681 ($generated@@280 ($generated@@311 ($generated@@8 $generated@@682)) $generated@@683)) (=> (and (and (<= ($generated@@271 0) $generated@@682) ($generated@@141 $generated@@683 ($generated@@235 $generated@@138))) (and ($generated@@141 $generated@@684 ($generated@@235 $generated@@138)) ($generated@@80 $generated@@684 ($generated@@235 $generated@@138) $generated@@685))) (=> (and (and (and (= $generated@@686 $generated@@683) ($generated@@141 $generated@@686 ($generated@@235 $generated@@138))) (and (= $generated@@684 $generated@@686) (<= ($generated@@271 0) $generated@@687))) (and (and (= $generated@@688 $generated@@682) ($generated@@141 ($generated@@8 $generated@@688) $generated@@138)) (and (= $generated@@687 $generated@@688) ($generated@@80 $generated@@684 ($generated@@235 $generated@@138) $generated@@685)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@577 $generated@@684) ($generated@@577 $generated@@681))) (=> (< ($generated@@577 $generated@@684) ($generated@@577 $generated@@681)) (=> (and ($generated@@483 $generated@@684) (= (ControlFlow 0 5) (- 0 4))) ($generated@@141 ($generated@@8 (+ $generated@@687 ($generated@@480 ($generated@@481 $generated@@531) $generated@@684))) $generated@@138)))))))))
(let (($generated@@695  (=> (not (= $generated@@681 $generated@@160)) (and (=> (= (ControlFlow 0 8) 5) $generated@@694) (=> (= (ControlFlow 0 8) 7) $generated@@693)))))
(let (($generated@@696  (=> (and (= $generated@@681 $generated@@160) (= (ControlFlow 0 3) (- 0 2))) ($generated@@141 ($generated@@8 ($generated@@271 0)) $generated@@138))))
(let (($generated@@697  (=> (= $generated@@689 ($generated@@223 $generated@@690 $generated@@685 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 3) $generated@@696) (=> (= (ControlFlow 0 9) 8) $generated@@695)))))
(let (($generated@@698 true))
(let (($generated@@699  (=> (= $generated@@691 ($generated@@168 $generated@@690 $generated@@685 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@698) (=> (= (ControlFlow 0 10) 9) $generated@@697)))))
(let (($generated@@700  (=> (and (and (and ($generated@@236 $generated@@685) ($generated@@692 $generated@@685)) ($generated@@141 $generated@@681 ($generated@@235 $generated@@138))) (and (= 1 $generated@@479) (= (ControlFlow 0 11) 10))) $generated@@699)))
$generated@@700)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@95 (Int) T@U)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@291 (T@U T@U T@U) Bool)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 () T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Int)
(declare-fun $generated@@337 (T@T) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@427 (T@T T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@T) T@U)
(declare-fun $generated@@497 () T@T)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@546 (T@U Int) T@U)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@587 (T@U) Int)
(declare-fun $generated@@671 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (and (= ($generated@@1 $generated@@78) 11) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@U) ) (! (= (type ($generated@@82 $generated@@87)) $generated@@68)
 :pattern ( ($generated@@82 $generated@@87))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@88) $generated@@68) (= (type $generated@@89) $generated@@78)) (= (type $generated@@90) $generated@@79)) (= (type $generated@@91) $generated@@79)) (or ($generated@@80 $generated@@88 $generated@@90 $generated@@91) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@90 ($generated@@82 $generated@@88)) ($generated@@81 $generated@@91 ($generated@@82 $generated@@88)))))) ($generated@@81 ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91) ($generated@@82 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@93 T@U) ) (! (= (type ($generated@@92 $generated@@93)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (= ($generated@@92 $generated@@44) $generated@@49))
(assert (= ($generated@@92 $generated@@45) $generated@@50))
(assert (= ($generated@@92 $generated@@46) $generated@@51))
(assert (= ($generated@@92 $generated@@47) $generated@@52))
(assert (= ($generated@@92 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (= ($generated@@1 ($generated@@96 $generated@@105 $generated@@106)) 13)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@96 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@96 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@100 (type $generated@@111))))
(= (type ($generated@@101 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@101 $generated@@111 $generated@@112))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 (type $generated@@116)))
(let (($generated@@118 (type $generated@@115)))
(= (type ($generated@@102 $generated@@114 $generated@@115 $generated@@116)) ($generated@@96 $generated@@118 $generated@@117))))
 :pattern ( ($generated@@102 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@100 (type $generated@@119))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@101 ($generated@@102 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@101 ($generated@@102 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@101 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@101 $generated@@128 $generated@@130)))
 :weight 0
)))) (= ($generated@@1 $generated@@97) 14)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@71 (type $generated@@132))))
(= (type ($generated@@103 $generated@@131 $generated@@132)) $generated@@133))
 :pattern ( ($generated@@103 $generated@@131 $generated@@132))
))) (= ($generated@@1 $generated@@98) 15)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= (type ($generated@@104 $generated@@134 $generated@@135 $generated@@136)) $generated@@98)
 :pattern ( ($generated@@104 $generated@@134 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@71 (type $generated@@138))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@103 ($generated@@104 $generated@@137 $generated@@138 $generated@@139) $generated@@138) $generated@@139)))
 :weight 0
))) (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@103 ($generated@@104 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@103 $generated@@142 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or true (= ($generated@@103 ($generated@@104 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@103 $generated@@146 $generated@@148)))
 :weight 0
)))) (forall (($generated@@149 Int) ) (! (= (type ($generated@@95 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@95 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
 :pattern ( ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@81 $generated@@152 ($generated@@95 0)))
 :pattern ( ($generated@@81 $generated@@152 ($generated@@95 0)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@79)) ($generated@@81 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@81 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@79) (= (type $generated@@167) $generated@@79)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@79)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@81 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@81 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 17)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@97 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@97) (= (type $generated@@226) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@97)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@178 $generated@@97 $generated@@4))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@71 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@97) (= (type $generated@@238) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@239) ($generated@@70 $generated@@4))) (= (type $generated@@241) $generated@@97)) (= (type $generated@@242) ($generated@@70 $generated@@243))) (= ($generated@@0 ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (= (type $generated@@245) $generated@@68) (= (type $generated@@246) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@244 $generated@@246)) ($generated@@94 $generated@@169 ($generated@@82 $generated@@245) $generated@@246))
 :pattern ( ($generated@@94 $generated@@169 ($generated@@82 $generated@@245) $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@79)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@68) (= (type $generated@@252) $generated@@68)) (= (type $generated@@253) $generated@@163)) (= (type $generated@@254) $generated@@163)) (= ($generated@@81 ($generated@@247 $generated@@253 $generated@@254) ($generated@@154 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@81 ($generated@@247 $generated@@253 $generated@@254) ($generated@@154 $generated@@251 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@68) ($generated@@81 $generated@@169 ($generated@@82 $generated@@255)))
 :pattern ( ($generated@@81 $generated@@169 ($generated@@82 $generated@@255)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@79) (= (type $generated@@257) $generated@@79)) (= ($generated@@160 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@160 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@79) (= (type $generated@@260) $generated@@79)) (= ($generated@@258 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert  (and (forall (($generated@@264 T@U) ) (! (= (type ($generated@@262 $generated@@264)) $generated@@163)
 :pattern ( ($generated@@262 $generated@@264))
)) (forall (($generated@@265 T@U) ) (! (= (type ($generated@@263 $generated@@265)) $generated@@79)
 :pattern ( ($generated@@263 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@79) (= (type $generated@@267) $generated@@79)) (and ($generated@@261 $generated@@266) ($generated@@261 $generated@@267))) (= ($generated@@258 $generated@@266 $generated@@267)  (and (= ($generated@@262 $generated@@266) ($generated@@262 $generated@@267)) ($generated@@258 ($generated@@263 $generated@@266) ($generated@@263 $generated@@267)))))
 :pattern ( ($generated@@258 $generated@@266 $generated@@267) ($generated@@261 $generated@@266))
 :pattern ( ($generated@@258 $generated@@266 $generated@@267) ($generated@@261 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@271) $generated@@68)) (= ($generated@@81 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@163) ($generated@@0 ($generated@@101 $generated@@270 $generated@@272))) ($generated@@248 $generated@@272 $generated@@271))
 :pattern ( ($generated@@101 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@81 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@68)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@276) $generated@@68)) (= ($generated@@81 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@163) ($generated@@0 ($generated@@101 $generated@@275 $generated@@277))) ($generated@@248 $generated@@277 $generated@@276))
 :pattern ( ($generated@@101 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@81 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@79) (= (type $generated@@284) $generated@@79)) (and ($generated@@282 $generated@@283) ($generated@@282 $generated@@284))) (= ($generated@@258 $generated@@283 $generated@@284) true))
 :pattern ( ($generated@@258 $generated@@283 $generated@@284) ($generated@@282 $generated@@283))
 :pattern ( ($generated@@258 $generated@@283 $generated@@284) ($generated@@282 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@79)
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@68) (= (type $generated@@289) $generated@@163)) (= (type $generated@@290) $generated@@79)) (= ($generated@@81 ($generated@@285 $generated@@289 $generated@@290) ($generated@@82 $generated@@288))  (and ($generated@@248 $generated@@289 $generated@@288) ($generated@@81 $generated@@290 ($generated@@82 $generated@@288)))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@289 $generated@@290) ($generated@@82 $generated@@288)))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) $generated@@68) (= (type $generated@@293) $generated@@68)) (= (type $generated@@294) $generated@@163)) (= (type $generated@@295) $generated@@163)) (= (type $generated@@296) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@244 $generated@@296)) (= ($generated@@94 ($generated@@247 $generated@@294 $generated@@295) ($generated@@154 $generated@@292 $generated@@293) $generated@@296)  (and ($generated@@291 $generated@@294 $generated@@292 $generated@@296) ($generated@@291 $generated@@295 $generated@@293 $generated@@296))))
 :pattern ( ($generated@@94 ($generated@@247 $generated@@294 $generated@@295) ($generated@@154 $generated@@292 $generated@@293) $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@79) (= ($generated@@153 $generated@@297) (= ($generated@@168 $generated@@297) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@79) (= ($generated@@282 $generated@@298) (= ($generated@@168 $generated@@298) $generated@@63)))
 :pattern ( ($generated@@282 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@79) (= ($generated@@261 $generated@@299) (= ($generated@@168 $generated@@299) $generated@@65)))
 :pattern ( ($generated@@261 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@78)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@302) $generated@@68) (= (type $generated@@303) $generated@@78)) (= (type $generated@@304) $generated@@79)) (= (type $generated@@305) $generated@@79)) (or ($generated@@80 $generated@@302 ($generated@@278 $generated@@304) ($generated@@278 $generated@@305)) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@304 ($generated@@82 $generated@@302)) ($generated@@81 $generated@@305 ($generated@@82 $generated@@302)))))) (and (=> (not ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@282 ($generated@@278 $generated@@304)))))) (let (($generated@@306 ($generated@@278 ($generated@@263 ($generated@@278 $generated@@304)))))
($generated@@80 $generated@@302 $generated@@306 ($generated@@278 $generated@@305)))) (= ($generated@@77 $generated@@302 ($generated@@300 $generated@@303) ($generated@@278 $generated@@304) ($generated@@278 $generated@@305)) (ite ($generated@@282 ($generated@@278 $generated@@304)) $generated@@305 (let (($generated@@307 ($generated@@278 ($generated@@263 ($generated@@278 $generated@@304)))))
(let (($generated@@308 ($generated@@278 ($generated@@262 ($generated@@278 $generated@@304)))))
($generated@@278 ($generated@@285 $generated@@308 ($generated@@278 ($generated@@77 $generated@@302 ($generated@@300 $generated@@303) $generated@@307 ($generated@@278 $generated@@305)))))))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@302 ($generated@@300 $generated@@303) ($generated@@278 $generated@@304) ($generated@@278 $generated@@305)))
))))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@79) ($generated@@153 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@163) (= (type $generated@@311) $generated@@163)) (= $generated@@309 ($generated@@247 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@153 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@79) ($generated@@261 $generated@@312)) (exists (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (and (and (= (type $generated@@313) $generated@@163) (= (type $generated@@314) $generated@@79)) (= $generated@@312 ($generated@@285 $generated@@313 $generated@@314)))
 :no-pattern (type $generated@@313)
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@261 $generated@@312))
)))
(assert  (and (and (forall (($generated@@319 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@319)) 18)) (forall (($generated@@320 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@317 $generated@@320))
))) (forall (($generated@@321 T@T) ) (! (= (type ($generated@@315 $generated@@321)) ($generated@@317 $generated@@321))
 :pattern ( ($generated@@315 $generated@@321))
))))
(assert (forall (($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@322)) 0)
 :pattern ( ($generated@@315 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@79) ($generated@@282 $generated@@323)) (= $generated@@323 $generated@@169))
 :pattern ( ($generated@@282 $generated@@323))
)))
(assert  (and (forall (($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@326)) $generated@@78)
 :pattern ( ($generated@@324 $generated@@326))
)) (= (type $generated@@325) $generated@@78)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (and (= (type $generated@@327) $generated@@68) (= (type $generated@@328) $generated@@78)) (= (type $generated@@329) $generated@@79)) (= (type $generated@@330) $generated@@79)) (= ($generated@@77 $generated@@327 $generated@@328 $generated@@329 $generated@@330) ($generated@@77 $generated@@327 $generated@@325 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@77 $generated@@327 ($generated@@324 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@163)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@68) (= (type $generated@@335) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@291 ($generated@@331 $generated@@333) $generated@@334 $generated@@335) ($generated@@94 $generated@@333 $generated@@334 $generated@@335)))
 :pattern ( ($generated@@291 ($generated@@331 $generated@@333) $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@T) ) (! (= (type ($generated@@337 $generated@@338)) ($generated@@96 $generated@@338 $generated@@2))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@99 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@96 $generated@@340 $generated@@2)) (and (= (= ($generated@@336 $generated@@339) 0) (= $generated@@339 ($generated@@337 $generated@@340))) (=> (not (= ($generated@@336 $generated@@339) 0)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) (< 0 ($generated ($generated@@101 $generated@@339 $generated@@341))))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@73)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@68) (and (= ($generated@@92 ($generated@@82 $generated@@344)) $generated@@64) (= ($generated@@342 ($generated@@82 $generated@@344)) $generated@@67)))
 :pattern ( ($generated@@82 $generated@@344))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@96 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@101 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@101 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 20)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@96 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@101 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@101 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@99 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@96 $generated@@382 $generated@@2)) (= ($generated@@172 $generated@@381) (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@382) (and (<= 0 ($generated ($generated@@101 $generated@@381 $generated@@383))) (<= ($generated ($generated@@101 $generated@@381 $generated@@383)) ($generated@@336 $generated@@381))))
 :pattern ( ($generated@@101 $generated@@381 $generated@@383))
)))))
 :pattern ( ($generated@@172 $generated@@381))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@101 ($generated@@345 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@345 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@349 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@96 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@349 (type $generated@@391))))
(let (($generated@@393 ($generated@@348 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@347 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@346 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@101 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@367 (type $generated@@395))))
(let (($generated@@397 ($generated@@366 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@365 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@364 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) ($generated@@0 ($generated@@101 ($generated@@363 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@363 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@367 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400)) ($generated@@96 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@367 (type $generated@@402))))
(let (($generated@@404 ($generated@@366 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@365 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@364 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@403) ($generated@@0 ($generated@@101 ($generated@@399 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@399 $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@407) $generated@@68)) (= ($generated@@81 $generated@@406 ($generated@@171 $generated@@407)) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@163) (< 0 ($generated ($generated@@101 $generated@@406 $generated@@408)))) ($generated@@248 $generated@@408 $generated@@407))
 :pattern ( ($generated@@101 $generated@@406 $generated@@408))
))))
 :pattern ( ($generated@@81 $generated@@406 ($generated@@171 $generated@@407)))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@409) $generated@@68) (= (type $generated@@410) $generated@@78)) (= (type $generated@@411) $generated@@79)) (= (type $generated@@412) $generated@@79)) (or ($generated@@80 $generated@@409 $generated@@411 $generated@@412) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@411 ($generated@@82 $generated@@409)) ($generated@@81 $generated@@412 ($generated@@82 $generated@@409)))))) (and (=> (not ($generated@@282 $generated@@411)) (let (($generated@@413 ($generated@@263 $generated@@411)))
($generated@@80 $generated@@409 $generated@@413 $generated@@412))) (= ($generated@@77 $generated@@409 ($generated@@300 $generated@@410) $generated@@411 $generated@@412) (ite ($generated@@282 $generated@@411) $generated@@412 (let (($generated@@414 ($generated@@263 $generated@@411)))
(let (($generated@@415 ($generated@@262 $generated@@411)))
($generated@@285 $generated@@415 ($generated@@77 $generated@@409 $generated@@410 $generated@@414 $generated@@412))))))))
 :pattern ( ($generated@@77 $generated@@409 ($generated@@300 $generated@@410) $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@416 ($generated@@268 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@163) ($generated@@0 ($generated@@101 $generated@@416 $generated@@419))) ($generated@@291 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@101 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@94 $generated@@416 ($generated@@268 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@420) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@421) $generated@@68)) (= (type $generated@@422) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@420 ($generated@@273 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@163) ($generated@@0 ($generated@@101 $generated@@420 $generated@@423))) ($generated@@291 $generated@@423 $generated@@421 $generated@@422))
 :pattern ( ($generated@@101 $generated@@420 $generated@@423))
))))
 :pattern ( ($generated@@94 $generated@@420 ($generated@@273 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(= ($generated ($generated@@101 ($generated@@337 $generated@@425) $generated@@424)) 0))
 :pattern ( (let (($generated@@425 (type $generated@@424)))
($generated@@101 ($generated@@337 $generated@@425) $generated@@424)))
)))
(assert  (and (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@426 $generated@@429)) ($generated@@96 $generated@@163 $generated@@4))
 :pattern ( ($generated@@426 $generated@@429))
)) (forall (($generated@@430 T@T) ($generated@@431 T@U) ) (! (= (type ($generated@@427 $generated@@430 $generated@@431)) $generated@@430)
 :pattern ( ($generated@@427 $generated@@430 $generated@@431))
))) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@349 (type $generated@@432))))
(let (($generated@@434 ($generated@@348 (type $generated@@432))))
(= (type ($generated@@428 $generated@@432)) ($generated@@96 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@428 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@347 $generated@@163 $generated@@163)) (= (type $generated@@436) $generated@@163)) (= ($generated@@0 ($generated@@101 ($generated@@426 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@101 ($generated@@345 $generated@@435) ($generated@@161 ($generated@@427 $generated@@79 $generated@@436)))) (= ($generated@@101 ($generated@@428 $generated@@435) ($generated@@161 ($generated@@427 $generated@@79 $generated@@436))) ($generated@@162 ($generated@@427 $generated@@79 $generated@@436))))))
 :pattern ( ($generated@@101 ($generated@@426 $generated@@435) $generated@@436))
)))
(assert  (and (forall (($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@439)) ($generated@@96 $generated@@163 $generated@@4))
 :pattern ( ($generated@@437 $generated@@439))
)) (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@367 (type $generated@@440))))
(let (($generated@@442 ($generated@@366 (type $generated@@440))))
(= (type ($generated@@438 $generated@@440)) ($generated@@96 $generated@@442 $generated@@441))))
 :pattern ( ($generated@@438 $generated@@440))
))))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) ($generated@@365 $generated@@163 $generated@@163)) (= (type $generated@@444) $generated@@163)) (= ($generated@@0 ($generated@@101 ($generated@@437 $generated@@443) $generated@@444))  (and ($generated@@0 ($generated@@101 ($generated@@363 $generated@@443) ($generated@@161 ($generated@@427 $generated@@79 $generated@@444)))) (= ($generated@@101 ($generated@@438 $generated@@443) ($generated@@161 ($generated@@427 $generated@@79 $generated@@444))) ($generated@@162 ($generated@@427 $generated@@79 $generated@@444))))))
 :pattern ( ($generated@@101 ($generated@@437 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@348 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@347 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@101 ($generated@@388 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@101 ($generated@@345 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@101 ($generated@@428 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@101 ($generated@@345 $generated@@445) $generated@@449))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@101 ($generated@@388 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(let (($generated@@453 ($generated@@366 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@365 $generated@@453 $generated@@452)) (= ($generated@@0 ($generated@@101 ($generated@@399 $generated@@450) $generated@@451)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) (and ($generated@@0 ($generated@@101 ($generated@@363 $generated@@450) $generated@@454)) (= $generated@@451 ($generated@@101 ($generated@@438 $generated@@450) $generated@@454))))
 :pattern ( ($generated@@101 ($generated@@363 $generated@@450) $generated@@454))
 :pattern ( ($generated@@101 ($generated@@438 $generated@@450) $generated@@454))
))))))
 :pattern ( ($generated@@101 ($generated@@399 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@68)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@347 $generated@@163 $generated@@163)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) $generated@@68)) (= (type $generated@@461) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@345 $generated@@458) $generated@@462))) (and ($generated@@291 ($generated@@101 ($generated@@428 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@291 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@458) $generated@@462))
 :pattern ( ($generated@@101 ($generated@@345 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@94 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@463 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (= (type $generated@@466) ($generated@@365 $generated@@163 $generated@@163)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) $generated@@68)) (= (type $generated@@469) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@363 $generated@@466) $generated@@470))) (and ($generated@@291 ($generated@@101 ($generated@@438 $generated@@466) $generated@@470) $generated@@468 $generated@@469) ($generated@@291 $generated@@470 $generated@@467 $generated@@469)))
 :pattern ( ($generated@@101 ($generated@@438 $generated@@466) $generated@@470))
 :pattern ( ($generated@@101 ($generated@@363 $generated@@466) $generated@@470))
))))
 :pattern ( ($generated@@94 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@79)) ($generated@@81 $generated@@472 ($generated@@82 $generated@@471))) (or ($generated@@282 $generated@@472) ($generated@@261 $generated@@472)))
 :pattern ( ($generated@@261 $generated@@472) ($generated@@81 $generated@@472 ($generated@@82 $generated@@471)))
 :pattern ( ($generated@@282 $generated@@472) ($generated@@81 $generated@@472 ($generated@@82 $generated@@471)))
)))
(assert (forall (($generated@@474 T@T) ) (! (= (type ($generated@@473 $generated@@474)) ($generated@@96 $generated@@474 $generated@@4))
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@367 (type $generated@@475))))
(let (($generated@@477 ($generated@@366 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@365 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@364 $generated@@477 $generated@@476)) (= ($generated@@363 $generated@@475) ($generated@@473 $generated@@477))))))
 :pattern ( ($generated@@363 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@367 (type $generated@@478))))
(let (($generated@@480 ($generated@@366 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@365 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@364 $generated@@480 $generated@@479)) (= ($generated@@399 $generated@@478) ($generated@@473 $generated@@479))))))
 :pattern ( ($generated@@399 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@367 (type $generated@@481))))
(let (($generated@@483 ($generated@@366 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@365 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@364 $generated@@483 $generated@@482)) (= ($generated@@437 $generated@@481) ($generated@@473 $generated@@163))))))
 :pattern ( ($generated@@437 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@349 (type $generated@@484))))
(let (($generated@@486 ($generated@@348 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@347 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@346 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@163) (= (type $generated@@488) $generated@@163)) ($generated@@0 ($generated@@101 ($generated@@426 $generated@@484) ($generated@@331 ($generated@@247 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@426 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@367 (type $generated@@489))))
(let (($generated@@491 ($generated@@366 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@365 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@364 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@163) (= (type $generated@@493) $generated@@163)) ($generated@@0 ($generated@@101 ($generated@@437 $generated@@489) ($generated@@331 ($generated@@247 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@437 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@163) ($generated@@248 $generated@@494 $generated@@46)) (and (= ($generated@@331 ($generated@@427 $generated@@2 $generated@@494)) $generated@@494) ($generated@@81 ($generated@@427 $generated@@2 $generated@@494) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@494 $generated@@46))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) ($generated@@248 $generated@@495 $generated@@47)) (and (= ($generated@@331 ($generated@@427 $generated@@3 $generated@@495)) $generated@@495) ($generated@@81 ($generated@@427 $generated@@3 $generated@@495) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@495 $generated@@47))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@163) ($generated@@248 $generated@@496 $generated@@44)) (and (= ($generated@@331 ($generated@@427 $generated@@4 $generated@@496)) $generated@@496) ($generated@@81 ($generated@@427 $generated@@4 $generated@@496) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@496 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@497) 21))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@163) ($generated@@248 $generated@@498 $generated@@45)) (and (= ($generated@@331 ($generated@@427 $generated@@497 $generated@@498)) $generated@@498) ($generated@@81 ($generated@@427 $generated@@497 $generated@@498) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@498 $generated@@45))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@68) (= ($generated@@248 ($generated@@331 $generated@@499) $generated@@500) ($generated@@81 $generated@@499 $generated@@500)))
 :pattern ( ($generated@@248 ($generated@@331 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@99 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@96 $generated@@502 $generated@@2)) (<= 0 ($generated@@336 $generated@@501))))
 :pattern ( ($generated@@336 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@318 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@317 $generated@@504)) (<= 0 ($generated@@316 $generated@@503))))
 :pattern ( ($generated@@316 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@455 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@455 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@455 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@455 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@92 ($generated@@455 $generated@@513 $generated@@514)) $generated@@58))
 :pattern ( ($generated@@455 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@515 ($generated@@463 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@463 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@68) (= (type $generated@@522) $generated@@68)) (= ($generated@@519 ($generated@@463 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@463 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@92 ($generated@@463 $generated@@523 $generated@@524)) $generated@@59))
 :pattern ( ($generated@@463 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@163) (= (type $generated@@526) $generated@@163)) (= ($generated@@168 ($generated@@247 $generated@@525 $generated@@526)) $generated@@61))
 :pattern ( ($generated@@247 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@527 ($generated@@154 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@154 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@531 ($generated@@154 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@154 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@163) (= (type $generated@@536) $generated@@163)) (= ($generated@@161 ($generated@@247 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@247 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) (= (type $generated@@538) $generated@@163)) (= ($generated@@162 ($generated@@247 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@247 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@79)) (= ($generated@@168 ($generated@@285 $generated@@539 $generated@@540)) $generated@@65))
 :pattern ( ($generated@@285 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@79)) (= ($generated@@262 ($generated@@285 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@285 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@79)) (= ($generated@@263 ($generated@@285 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@285 $generated@@543 $generated@@544))
)))
(assert  (and (forall (($generated@@547 T@U) ) (! (= (type ($generated@@545 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@547))
)) (forall (($generated@@548 T@U) ($generated@@549 Int) ) (! (let (($generated@@550 ($generated@@318 (type $generated@@548))))
(= (type ($generated@@546 $generated@@548 $generated@@549)) $generated@@550))
 :pattern ( ($generated@@546 $generated@@548 $generated@@549))
))))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@317 $generated@@163)) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@551 ($generated@@545 $generated@@552) $generated@@553) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@316 $generated@@551))) ($generated@@291 ($generated@@546 $generated@@551 $generated@@554) $generated@@552 $generated@@553))
 :pattern ( ($generated@@546 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@94 $generated@@551 ($generated@@545 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@556 Int) ) (! (= ($generated@@555 ($generated@@95 $generated@@556)) $generated@@556)
 :pattern ( ($generated@@95 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@68)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@557 ($generated@@268 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@268 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@92 ($generated@@268 $generated@@560)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@68)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@561 ($generated@@273 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@273 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@92 ($generated@@273 $generated@@564)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@68)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@565 ($generated@@171 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@171 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@92 ($generated@@171 $generated@@568)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@68)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@569 ($generated@@545 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@545 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@92 ($generated@@545 $generated@@572)) $generated@@57))
 :pattern ( ($generated@@545 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@68)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@68) (= ($generated@@573 ($generated@@82 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@82 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
(= ($generated@@427 $generated@@577 ($generated@@331 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@331 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@347 $generated@@163 $generated@@163)) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@68)) (= ($generated@@81 $generated@@578 ($generated@@455 $generated@@579 $generated@@580)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@345 $generated@@578) $generated@@581))) (and ($generated@@248 ($generated@@101 ($generated@@428 $generated@@578) $generated@@581) $generated@@580) ($generated@@248 $generated@@581 $generated@@579)))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@578) $generated@@581))
 :pattern ( ($generated@@101 ($generated@@345 $generated@@578) $generated@@581))
))))
 :pattern ( ($generated@@81 $generated@@578 ($generated@@455 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@365 $generated@@163 $generated@@163)) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) $generated@@68)) (= ($generated@@81 $generated@@582 ($generated@@463 $generated@@583 $generated@@584)) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@363 $generated@@582) $generated@@585))) (and ($generated@@248 ($generated@@101 ($generated@@438 $generated@@582) $generated@@585) $generated@@584) ($generated@@248 $generated@@585 $generated@@583)))
 :pattern ( ($generated@@101 ($generated@@438 $generated@@582) $generated@@585))
 :pattern ( ($generated@@101 ($generated@@363 $generated@@582) $generated@@585))
))))
 :pattern ( ($generated@@81 $generated@@582 ($generated@@463 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@163) (= (type $generated@@589) $generated@@163)) (< ($generated@@586 $generated@@588) ($generated@@587 ($generated@@247 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@247 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@163) (= (type $generated@@591) $generated@@163)) (< ($generated@@586 $generated@@591) ($generated@@587 ($generated@@247 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@247 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@163) (= (type $generated@@593) $generated@@79)) (< ($generated@@586 $generated@@592) ($generated@@587 ($generated@@285 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@285 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@163) (= (type $generated@@595) $generated@@79)) (< ($generated@@587 $generated@@595) ($generated@@587 ($generated@@285 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@285 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@163) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) ($generated@@248 $generated@@596 ($generated@@455 $generated@@597 $generated@@598))) (and (= ($generated@@331 ($generated@@427 ($generated@@347 $generated@@163 $generated@@163) $generated@@596)) $generated@@596) ($generated@@81 ($generated@@427 ($generated@@347 $generated@@163 $generated@@163) $generated@@596) ($generated@@455 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@248 $generated@@596 ($generated@@455 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@163) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) $generated@@68)) ($generated@@248 $generated@@599 ($generated@@463 $generated@@600 $generated@@601))) (and (= ($generated@@331 ($generated@@427 ($generated@@365 $generated@@163 $generated@@163) $generated@@599)) $generated@@599) ($generated@@81 ($generated@@427 ($generated@@365 $generated@@163 $generated@@163) $generated@@599) ($generated@@463 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@248 $generated@@599 ($generated@@463 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@68) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) $generated@@163)) ($generated@@248 $generated@@604 ($generated@@154 $generated@@602 $generated@@603))) (and (= ($generated@@331 ($generated@@427 $generated@@79 $generated@@604)) $generated@@604) ($generated@@81 ($generated@@427 $generated@@79 $generated@@604) ($generated@@154 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@248 $generated@@604 ($generated@@154 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@79) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@244 $generated@@607) (and ($generated@@261 $generated@@605) ($generated@@94 $generated@@605 ($generated@@82 $generated@@606) $generated@@607)))) ($generated@@291 ($generated@@262 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@291 ($generated@@262 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@101 ($generated@@473 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@101 ($generated@@473 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@68) (= (type $generated@@611) $generated@@68)) (and (= ($generated@@92 ($generated@@154 $generated@@610 $generated@@611)) $generated@@62) (= ($generated@@342 ($generated@@154 $generated@@610 $generated@@611)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@79) (= ($generated@@586 ($generated@@331 $generated@@612)) ($generated@@587 $generated@@612)))
 :pattern ( ($generated@@586 ($generated@@331 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@68) (= (type $generated@@614) $generated@@78)) (= (type $generated@@615) $generated@@79)) (= (type $generated@@616) $generated@@79)) (= ($generated@@77 $generated@@613 ($generated@@300 $generated@@614) $generated@@615 $generated@@616) ($generated@@77 $generated@@613 $generated@@614 $generated@@615 $generated@@616)))
 :pattern ( ($generated@@77 $generated@@613 ($generated@@300 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@163) ($generated@@248 $generated@@617 ($generated@@95 0))) (and (= ($generated@@331 ($generated@@427 $generated@@2 $generated@@617)) $generated@@617) ($generated@@81 ($generated@@427 ($generated@@96 $generated@@163 $generated@@4) $generated@@617) ($generated@@95 0))))
 :pattern ( ($generated@@248 $generated@@617 ($generated@@95 0)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@163) (= (type $generated@@619) $generated@@68)) ($generated@@248 $generated@@618 ($generated@@268 $generated@@619))) (and (= ($generated@@331 ($generated@@427 ($generated@@96 $generated@@163 $generated@@4) $generated@@618)) $generated@@618) ($generated@@81 ($generated@@427 ($generated@@96 $generated@@163 $generated@@4) $generated@@618) ($generated@@268 $generated@@619))))
 :pattern ( ($generated@@248 $generated@@618 ($generated@@268 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@163) (= (type $generated@@621) $generated@@68)) ($generated@@248 $generated@@620 ($generated@@273 $generated@@621))) (and (= ($generated@@331 ($generated@@427 ($generated@@96 $generated@@163 $generated@@4) $generated@@620)) $generated@@620) ($generated@@81 ($generated@@427 ($generated@@96 $generated@@163 $generated@@4) $generated@@620) ($generated@@273 $generated@@621))))
 :pattern ( ($generated@@248 $generated@@620 ($generated@@273 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@163) (= (type $generated@@623) $generated@@68)) ($generated@@248 $generated@@622 ($generated@@171 $generated@@623))) (and (= ($generated@@331 ($generated@@427 ($generated@@96 $generated@@163 $generated@@2) $generated@@622)) $generated@@622) ($generated@@81 ($generated@@427 ($generated@@96 $generated@@163 $generated@@2) $generated@@622) ($generated@@171 $generated@@623))))
 :pattern ( ($generated@@248 $generated@@622 ($generated@@171 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@163) (= (type $generated@@625) $generated@@68)) ($generated@@248 $generated@@624 ($generated@@545 $generated@@625))) (and (= ($generated@@331 ($generated@@427 ($generated@@317 $generated@@163) $generated@@624)) $generated@@624) ($generated@@81 ($generated@@427 ($generated@@317 $generated@@163) $generated@@624) ($generated@@545 $generated@@625))))
 :pattern ( ($generated@@248 $generated@@624 ($generated@@545 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@68) (= (type $generated@@627) $generated@@163)) ($generated@@248 $generated@@627 ($generated@@82 $generated@@626))) (and (= ($generated@@331 ($generated@@427 $generated@@79 $generated@@627)) $generated@@627) ($generated@@81 ($generated@@427 $generated@@79 $generated@@627) ($generated@@82 $generated@@626))))
 :pattern ( ($generated@@248 $generated@@627 ($generated@@82 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@79) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@244 $generated@@630) (and ($generated@@261 $generated@@628) ($generated@@94 $generated@@628 ($generated@@82 $generated@@629) $generated@@630)))) ($generated@@94 ($generated@@263 $generated@@628) ($generated@@82 $generated@@629) $generated@@630))
 :pattern ( ($generated@@94 ($generated@@263 $generated@@628) ($generated@@82 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@631 ($generated@@171 $generated@@632) $generated@@633) (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@163) (< 0 ($generated ($generated@@101 $generated@@631 $generated@@634)))) ($generated@@291 $generated@@634 $generated@@632 $generated@@633))
 :pattern ( ($generated@@101 $generated@@631 $generated@@634))
))))
 :pattern ( ($generated@@94 $generated@@631 ($generated@@171 $generated@@632) $generated@@633))
)))
(assert (= $generated@@169 ($generated@@278 $generated@@169)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@79) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@244 $generated@@637) (and ($generated@@153 $generated@@635) (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) $generated@@68) ($generated@@94 $generated@@635 ($generated@@154 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@94 $generated@@635 ($generated@@154 $generated@@636 $generated@@638) $generated@@637))
))))) ($generated@@291 ($generated@@161 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@291 ($generated@@161 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@79) (= (type $generated@@640) $generated@@68)) (= (type $generated@@641) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@244 $generated@@641) (and ($generated@@153 $generated@@639) (exists (($generated@@642 T@U) ) (!  (and (= (type $generated@@642) $generated@@68) ($generated@@94 $generated@@639 ($generated@@154 $generated@@642 $generated@@640) $generated@@641))
 :pattern ( ($generated@@94 $generated@@639 ($generated@@154 $generated@@642 $generated@@640) $generated@@641))
))))) ($generated@@291 ($generated@@162 $generated@@639) $generated@@640 $generated@@641))
 :pattern ( ($generated@@291 ($generated@@162 $generated@@639) $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@163) (= (type $generated@@644) $generated@@163)) (= ($generated@@247 ($generated@@278 $generated@@643) ($generated@@278 $generated@@644)) ($generated@@278 ($generated@@247 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@247 ($generated@@278 $generated@@643) ($generated@@278 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@163) (= (type $generated@@646) $generated@@79)) (= ($generated@@285 ($generated@@278 $generated@@645) ($generated@@278 $generated@@646)) ($generated@@278 ($generated@@285 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@285 ($generated@@278 $generated@@645) ($generated@@278 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (! (= ($generated@@331 ($generated@@278 $generated@@647)) ($generated@@278 ($generated@@331 $generated@@647)))
 :pattern ( ($generated@@331 ($generated@@278 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (! (let (($generated@@649 ($generated@@318 (type $generated@@648))))
 (=> (and (= (type $generated@@648) ($generated@@317 $generated@@649)) (= ($generated@@316 $generated@@648) 0)) (= $generated@@648 ($generated@@315 $generated@@649))))
 :pattern ( ($generated@@316 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@651)))
 (=> (and (and (= (type $generated@@650) ($generated@@96 $generated@@653 $generated@@2)) (= (type $generated@@652) $generated@@2)) (<= 0 ($generated $generated@@652))) (= ($generated@@336 ($generated@@102 $generated@@650 $generated@@651 $generated@@652)) (+ (- ($generated@@336 $generated@@650) ($generated ($generated@@101 $generated@@650 $generated@@651))) ($generated $generated@@652)))))
 :pattern ( ($generated@@336 ($generated@@102 $generated@@650 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@655) $generated@@2)) ($generated@@94 $generated@@655 $generated@@46 $generated@@654))
 :pattern ( ($generated@@94 $generated@@655 $generated@@46 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@657) $generated@@3)) ($generated@@94 $generated@@657 $generated@@47 $generated@@656))
 :pattern ( ($generated@@94 $generated@@657 $generated@@47 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@659) $generated@@4)) ($generated@@94 $generated@@659 $generated@@44 $generated@@658))
 :pattern ( ($generated@@94 $generated@@659 $generated@@44 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@661) $generated@@497)) ($generated@@94 $generated@@661 $generated@@45 $generated@@660))
 :pattern ( ($generated@@94 $generated@@661 $generated@@45 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@663) $generated@@163)) ($generated@@94 $generated@@663 $generated@@48 $generated@@662))
 :pattern ( ($generated@@94 $generated@@663 $generated@@48 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@664) $generated@@68) (= (type $generated@@665) $generated@@163)) (= (type $generated@@666) $generated@@79)) (= (type $generated@@667) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@244 $generated@@667)) (= ($generated@@94 ($generated@@285 $generated@@665 $generated@@666) ($generated@@82 $generated@@664) $generated@@667)  (and ($generated@@291 $generated@@665 $generated@@664 $generated@@667) ($generated@@94 $generated@@666 ($generated@@82 $generated@@664) $generated@@667))))
 :pattern ( ($generated@@94 ($generated@@285 $generated@@665 $generated@@666) ($generated@@82 $generated@@664) $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@317 $generated@@163)) (= (type $generated@@669) $generated@@68)) (= ($generated@@81 $generated@@668 ($generated@@545 $generated@@669)) (forall (($generated@@670 Int) ) (!  (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@316 $generated@@668))) ($generated@@248 ($generated@@546 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@546 $generated@@668 $generated@@670))
))))
 :pattern ( ($generated@@81 $generated@@668 ($generated@@545 $generated@@669)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (= (type $generated@@672) ($generated@@317 $generated@@163)) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@316 $generated@@672))) (< ($generated@@587 ($generated@@427 $generated@@79 ($generated@@546 $generated@@672 $generated@@673))) ($generated@@671 $generated@@672))))
 :pattern ( ($generated@@587 ($generated@@427 $generated@@79 ($generated@@546 $generated@@672 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@347 $generated@@163 $generated@@163)) (= (type $generated@@675) $generated@@68)) (= (type $generated@@676) $generated@@68)) ($generated@@81 $generated@@674 ($generated@@455 $generated@@675 $generated@@676))) (and (and ($generated@@81 ($generated@@345 $generated@@674) ($generated@@268 $generated@@675)) ($generated@@81 ($generated@@388 $generated@@674) ($generated@@268 $generated@@676))) ($generated@@81 ($generated@@426 $generated@@674) ($generated@@268 ($generated@@154 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@81 $generated@@674 ($generated@@455 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@365 $generated@@163 $generated@@163)) (= (type $generated@@678) $generated@@68)) (= (type $generated@@679) $generated@@68)) ($generated@@81 $generated@@677 ($generated@@463 $generated@@678 $generated@@679))) (and (and ($generated@@81 ($generated@@363 $generated@@677) ($generated@@273 $generated@@678)) ($generated@@81 ($generated@@399 $generated@@677) ($generated@@273 $generated@@679))) ($generated@@81 ($generated@@437 $generated@@677) ($generated@@273 ($generated@@154 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@81 $generated@@677 ($generated@@463 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@2) ($generated@@81 $generated@@680 $generated@@46))
 :pattern ( ($generated@@81 $generated@@680 $generated@@46))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@3) ($generated@@81 $generated@@681 $generated@@47))
 :pattern ( ($generated@@81 $generated@@681 $generated@@47))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@4) ($generated@@81 $generated@@682 $generated@@44))
 :pattern ( ($generated@@81 $generated@@682 $generated@@44))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@497) ($generated@@81 $generated@@683 $generated@@45))
 :pattern ( ($generated@@81 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@163) ($generated@@81 $generated@@684 $generated@@48))
 :pattern ( ($generated@@81 $generated@@684 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@685) $generated@@79) (= (type $generated@@686) $generated@@163)) (= (type $generated@@687) $generated@@79)) (= (type $generated@@688) $generated@@68)) (= (type $generated@@689) $generated@@79)) (= (type $generated@@690) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@691) $generated@@79)) (= (type $generated@@692) $generated@@163)) (= (type $generated@@693) $generated@@163)) (= (type $generated@@694) $generated@@79)) (= (type $generated@@695) ($generated@@178 $generated@@97 $generated@@4))) (= (type $generated@@696) $generated@@97)) (= (type $generated@@697) ($generated@@178 $generated@@97 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@699 true))
(let (($generated@@700  (=> (= $generated@@685 ($generated@@285 $generated@@686 $generated@@687)) (=> (and ($generated@@248 $generated@@686 $generated@@688) ($generated@@81 $generated@@687 ($generated@@82 $generated@@688))) (=> (and (and (and (and ($generated@@81 $generated@@689 ($generated@@82 $generated@@688)) ($generated@@94 $generated@@689 ($generated@@82 $generated@@688) $generated@@690)) (= $generated@@691 $generated@@687)) (and ($generated@@81 $generated@@691 ($generated@@82 $generated@@688)) (= $generated@@689 $generated@@691))) (and (and (and ($generated@@248 $generated@@692 $generated@@688) ($generated@@291 $generated@@692 $generated@@688 $generated@@690)) (and (= $generated@@693 $generated@@686) ($generated@@248 $generated@@693 $generated@@688))) (and (and (= $generated@@692 $generated@@693) ($generated@@94 $generated@@689 ($generated@@82 $generated@@688) $generated@@690)) (and ($generated@@94 $generated@@694 ($generated@@82 $generated@@688) $generated@@690) (= (ControlFlow 0 4) (- 0 3)))))) (or (< ($generated@@587 $generated@@689) ($generated@@587 $generated@@685)) (and (= ($generated@@587 $generated@@689) ($generated@@587 $generated@@685)) (< ($generated@@587 $generated@@694) ($generated@@587 $generated@@694)))))))))
(let (($generated@@701  (=> (not (= $generated@@685 $generated@@169)) (and (=> (= (ControlFlow 0 6) 4) $generated@@700) (=> (= (ControlFlow 0 6) 5) $generated@@699)))))
(let (($generated@@702 true))
(let (($generated@@703  (=> (= $generated@@695 ($generated@@232 $generated@@696 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@702) (=> (= (ControlFlow 0 7) 6) $generated@@701)))))
(let (($generated@@704 true))
(let (($generated@@705  (=> (= $generated@@697 ($generated@@177 $generated@@696 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@704) (=> (= (ControlFlow 0 8) 7) $generated@@703)))))
(let (($generated@@706  (=> (and ($generated@@244 $generated@@690) ($generated@@698 $generated@@690)) (=> (and (and ($generated@@81 $generated@@685 ($generated@@82 $generated@@688)) ($generated@@81 $generated@@694 ($generated@@82 $generated@@688))) (and (= 1 $generated@@76) (= (ControlFlow 0 9) 8))) $generated@@705))))
$generated@@706)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (Int) Int)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@275 () Int)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 () T@T)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U T@U T@U) Bool)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@T T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) T@U)
(declare-fun $generated@@455 (T@T) T@U)
(declare-fun $generated@@479 () T@T)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@528 () T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@533 (T@U Int) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@662 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@68)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@140)))
(assert (= ($generated@@154 $generated@@155) $generated@@63))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@161) $generated@@68)) ($generated@@136 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@136 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@81 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@71 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@81) (= (type $generated@@212) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@213) ($generated@@70 $generated@@4))) (= (type $generated@@215) $generated@@81)) (= (type $generated@@216) ($generated@@70 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@81 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@71 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@81) (= (type $generated@@224) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@225) ($generated@@70 $generated@@4))) (= (type $generated@@227) $generated@@81)) (= (type $generated@@228) ($generated@@70 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@68)
 :pattern ( ($generated@@230 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@231 $generated@@234)) ($generated@@78 $generated@@155 ($generated@@230 $generated@@233) $generated@@234))
 :pattern ( ($generated@@78 $generated@@155 ($generated@@230 $generated@@233) $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@140)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@68) (= (type $generated@@240) $generated@@68)) (= (type $generated@@241) $generated@@149)) (= (type $generated@@242) $generated@@149)) (= ($generated@@136 ($generated@@235 $generated@@241 $generated@@242) ($generated@@139 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@136 ($generated@@235 $generated@@241 $generated@@242) ($generated@@139 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (!  (=> (= (type $generated@@243) $generated@@68) ($generated@@136 $generated@@155 ($generated@@230 $generated@@243)))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@230 $generated@@243)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@140) (= (type $generated@@245) $generated@@140)) (= ($generated@@146 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@146 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@140) (= (type $generated@@248) $generated@@140)) (= ($generated@@246 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@246 $generated@@247 $generated@@248))
)))
(assert  (and (forall (($generated@@252 T@U) ) (! (= (type ($generated@@250 $generated@@252)) $generated@@149)
 :pattern ( ($generated@@250 $generated@@252))
)) (forall (($generated@@253 T@U) ) (! (= (type ($generated@@251 $generated@@253)) $generated@@140)
 :pattern ( ($generated@@251 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (= (type $generated@@254) $generated@@140) (= (type $generated@@255) $generated@@140)) (and ($generated@@249 $generated@@254) ($generated@@249 $generated@@255))) (= ($generated@@246 $generated@@254 $generated@@255)  (and (= ($generated@@250 $generated@@254) ($generated@@250 $generated@@255)) ($generated@@246 ($generated@@251 $generated@@254) ($generated@@251 $generated@@255)))))
 :pattern ( ($generated@@246 $generated@@254 $generated@@255) ($generated@@249 $generated@@254))
 :pattern ( ($generated@@246 $generated@@254 $generated@@255) ($generated@@249 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@259) $generated@@68)) (= ($generated@@136 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@149) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@236 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@136 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@264) $generated@@68)) (= ($generated@@136 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@149) ($generated@@0 ($generated@@85 $generated@@263 $generated@@265))) ($generated@@236 $generated@@265 $generated@@264))
 :pattern ( ($generated@@85 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@136 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@266 $generated@@267) $generated@@267)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@140) (= (type $generated@@274) $generated@@140)) (and ($generated@@272 $generated@@273) ($generated@@272 $generated@@274))) (= ($generated@@246 $generated@@273 $generated@@274) true))
 :pattern ( ($generated@@246 $generated@@273 $generated@@274) ($generated@@272 $generated@@273))
 :pattern ( ($generated@@246 $generated@@273 $generated@@274) ($generated@@272 $generated@@274))
)))
(assert  (and (= ($generated@@1 $generated@@277) 17) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@276 $generated@@279 $generated@@280)) $generated@@140)
 :pattern ( ($generated@@276 $generated@@279 $generated@@280))
))))
(assert  (=> (<= 1 $generated@@275) (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (= (type $generated@@281) $generated@@277) (= (type $generated@@282) $generated@@140)) (or ($generated@@278 $generated@@282) (and (not (= 1 $generated@@275)) ($generated@@136 $generated@@282 ($generated@@230 $generated@@46))))) ($generated@@136 ($generated@@276 $generated@@281 $generated@@282) ($generated@@230 $generated@@46)))
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@283 $generated@@284 $generated@@285)) $generated@@140)
 :pattern ( ($generated@@283 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (= (type $generated@@286) $generated@@68) (= (type $generated@@287) $generated@@149)) (= (type $generated@@288) $generated@@140)) (= ($generated@@136 ($generated@@283 $generated@@287 $generated@@288) ($generated@@230 $generated@@286))  (and ($generated@@236 $generated@@287 $generated@@286) ($generated@@136 $generated@@288 ($generated@@230 $generated@@286)))))
 :pattern ( ($generated@@136 ($generated@@283 $generated@@287 $generated@@288) ($generated@@230 $generated@@286)))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) $generated@@68) (= (type $generated@@291) $generated@@68)) (= (type $generated@@292) $generated@@149)) (= (type $generated@@293) $generated@@149)) (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@231 $generated@@294)) (= ($generated@@78 ($generated@@235 $generated@@292 $generated@@293) ($generated@@139 $generated@@290 $generated@@291) $generated@@294)  (and ($generated@@289 $generated@@292 $generated@@290 $generated@@294) ($generated@@289 $generated@@293 $generated@@291 $generated@@294))))
 :pattern ( ($generated@@78 ($generated@@235 $generated@@292 $generated@@293) ($generated@@139 $generated@@290 $generated@@291) $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@140) (= ($generated@@138 $generated@@295) (= ($generated@@154 $generated@@295) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@140) (= ($generated@@272 $generated@@296) (= ($generated@@154 $generated@@296) $generated@@63)))
 :pattern ( ($generated@@272 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@140) (= ($generated@@249 $generated@@297) (= ($generated@@154 $generated@@297) $generated@@65)))
 :pattern ( ($generated@@249 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@140) ($generated@@138 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@149) (= (type $generated@@300) $generated@@149)) (= $generated@@298 ($generated@@235 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@138 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@140) ($generated@@249 $generated@@301)) (exists (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (and (and (= (type $generated@@302) $generated@@149) (= (type $generated@@303) $generated@@140)) (= $generated@@301 ($generated@@283 $generated@@302 $generated@@303)))
 :no-pattern (type $generated@@302)
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
)))
 :pattern ( ($generated@@249 $generated@@301))
)))
(assert  (and (and (forall (($generated@@308 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@308)) 18)) (forall (($generated@@309 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@306 $generated@@309))
))) (forall (($generated@@310 T@T) ) (! (= (type ($generated@@304 $generated@@310)) ($generated@@306 $generated@@310))
 :pattern ( ($generated@@304 $generated@@310))
))))
(assert (forall (($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@311)) 0)
 :pattern ( ($generated@@304 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@140) ($generated@@272 $generated@@312)) (= $generated@@312 $generated@@155))
 :pattern ( ($generated@@272 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@149)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@68) (= (type $generated@@317) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@289 ($generated@@313 $generated@@315) $generated@@316 $generated@@317) ($generated@@78 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@289 ($generated@@313 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@319 $generated@@320)) ($generated@@80 $generated@@320 $generated@@2))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@83 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@80 $generated@@322 $generated@@2)) (and (= (= ($generated@@318 $generated@@321) 0) (= $generated@@321 ($generated@@319 $generated@@322))) (=> (not (= ($generated@@318 $generated@@321) 0)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) (< 0 ($generated ($generated@@85 $generated@@321 $generated@@323))))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@73)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@68) (and (= ($generated@@76 ($generated@@230 $generated@@326)) $generated@@64) (= ($generated@@324 ($generated@@230 $generated@@326)) $generated@@67)))
 :pattern ( ($generated@@230 $generated@@326))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@80 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@85 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@85 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 20)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@83 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@80 $generated@@364 $generated@@2)) (= ($generated@@158 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@85 $generated@@363 $generated@@365))) (<= ($generated ($generated@@85 $generated@@363 $generated@@365)) ($generated@@318 $generated@@363))))
 :pattern ( ($generated@@85 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@158 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(let (($generated@@368 ($generated@@330 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@329 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@328 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@327 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@331 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@80 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(let (($generated@@375 ($generated@@330 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@329 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@328 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@349 (type $generated@@377))))
(let (($generated@@379 ($generated@@348 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@347 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@346 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@345 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@349 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@389) $generated@@68)) (= ($generated@@136 $generated@@388 ($generated@@157 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@236 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@136 $generated@@388 ($generated@@157 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@256 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@149) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@289 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@256 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@261 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@149) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@289 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@261 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@85 ($generated@@319 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@85 ($generated@@319 $generated@@400) $generated@@399)))
)))
(assert  (and (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@401 $generated@@404)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@401 $generated@@404))
)) (forall (($generated@@405 T@T) ($generated@@406 T@U) ) (! (= (type ($generated@@402 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@402 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@331 (type $generated@@407))))
(let (($generated@@409 ($generated@@330 (type $generated@@407))))
(= (type ($generated@@403 $generated@@407)) ($generated@@80 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@403 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@329 $generated@@149 $generated@@149)) (= (type $generated@@411) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@85 ($generated@@327 $generated@@410) ($generated@@147 ($generated@@402 $generated@@140 $generated@@411)))) (= ($generated@@85 ($generated@@403 $generated@@410) ($generated@@147 ($generated@@402 $generated@@140 $generated@@411))) ($generated@@148 ($generated@@402 $generated@@140 $generated@@411))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@349 (type $generated@@415))))
(let (($generated@@417 ($generated@@348 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@80 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@347 $generated@@149 $generated@@149)) (= (type $generated@@419) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@418) ($generated@@147 ($generated@@402 $generated@@140 $generated@@419)))) (= ($generated@@85 ($generated@@413 $generated@@418) ($generated@@147 ($generated@@402 $generated@@140 $generated@@419))) ($generated@@148 ($generated@@402 $generated@@140 $generated@@419))))))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@330 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@329 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@85 ($generated@@327 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@85 ($generated@@403 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@348 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@347 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@85 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@425) $generated@@429))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@277)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert  (=> (<= 1 $generated@@275) (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@432) $generated@@277) (= (type $generated@@433) $generated@@140)) (or ($generated@@278 ($generated@@268 $generated@@433)) (and (not (= 1 $generated@@275)) ($generated@@136 $generated@@433 ($generated@@230 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@268 ($generated@@11 ($generated@@272 ($generated@@268 $generated@@433)))))) (let (($generated@@434 ($generated@@268 ($generated@@251 ($generated@@268 $generated@@433)))))
($generated@@278 $generated@@434))) (= ($generated@@276 ($generated@@430 $generated@@432) ($generated@@268 $generated@@433)) (ite ($generated@@272 ($generated@@268 $generated@@433)) $generated@@155 (let (($generated@@435 ($generated@@268 ($generated@@251 ($generated@@268 $generated@@433)))))
(let (($generated@@436 ($generated@@266 ($generated ($generated@@402 $generated@@2 ($generated@@250 ($generated@@268 $generated@@433)))))))
($generated@@268 ($generated@@283 ($generated@@313 ($generated@@8 ($generated@@266 (- 0 $generated@@436)))) ($generated@@268 ($generated@@276 ($generated@@430 $generated@@432) $generated@@435))))))))))
 :weight 3
 :pattern ( ($generated@@276 ($generated@@430 $generated@@432) ($generated@@268 $generated@@433)))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@68)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@329 $generated@@149 $generated@@149)) (= (type $generated@@441) $generated@@68)) (= (type $generated@@442) $generated@@68)) (= (type $generated@@443) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@440) $generated@@444))) (and ($generated@@289 ($generated@@85 ($generated@@403 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@289 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@440) $generated@@444))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@78 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@446 $generated@@447)) $generated@@68)
 :pattern ( ($generated@@445 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@448) ($generated@@347 $generated@@149 $generated@@149)) (= (type $generated@@449) $generated@@68)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@448) $generated@@452))) (and ($generated@@289 ($generated@@85 ($generated@@413 $generated@@448) $generated@@452) $generated@@450 $generated@@451) ($generated@@289 $generated@@452 $generated@@449 $generated@@451)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@448) $generated@@452))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@448) $generated@@452))
))))
 :pattern ( ($generated@@78 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (= (type $generated@@453) $generated@@68) (= (type $generated@@454) $generated@@140)) ($generated@@136 $generated@@454 ($generated@@230 $generated@@453))) (or ($generated@@272 $generated@@454) ($generated@@249 $generated@@454)))
 :pattern ( ($generated@@249 $generated@@454) ($generated@@136 $generated@@454 ($generated@@230 $generated@@453)))
 :pattern ( ($generated@@272 $generated@@454) ($generated@@136 $generated@@454 ($generated@@230 $generated@@453)))
)))
(assert (forall (($generated@@456 T@T) ) (! (= (type ($generated@@455 $generated@@456)) ($generated@@80 $generated@@456 $generated@@4))
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@349 (type $generated@@457))))
(let (($generated@@459 ($generated@@348 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@347 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@346 $generated@@459 $generated@@458)) (= ($generated@@345 $generated@@457) ($generated@@455 $generated@@459))))))
 :pattern ( ($generated@@345 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@349 (type $generated@@460))))
(let (($generated@@462 ($generated@@348 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@347 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@346 $generated@@462 $generated@@461)) (= ($generated@@381 $generated@@460) ($generated@@455 $generated@@461))))))
 :pattern ( ($generated@@381 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@349 (type $generated@@463))))
(let (($generated@@465 ($generated@@348 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@347 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@346 $generated@@465 $generated@@464)) (= ($generated@@412 $generated@@463) ($generated@@455 $generated@@149))))))
 :pattern ( ($generated@@412 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@331 (type $generated@@466))))
(let (($generated@@468 ($generated@@330 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@329 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@328 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (and (and (= (type $generated@@469) $generated@@149) (= (type $generated@@470) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@466) ($generated@@313 ($generated@@235 $generated@@469 $generated@@470)))))
 :no-pattern (type $generated@@469)
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@401 $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@349 (type $generated@@471))))
(let (($generated@@473 ($generated@@348 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@347 $generated@@473 $generated@@472)) (or (= $generated@@471 ($generated@@346 $generated@@473 $generated@@472)) (exists (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (and (and (= (type $generated@@474) $generated@@149) (= (type $generated@@475) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@412 $generated@@471) ($generated@@313 ($generated@@235 $generated@@474 $generated@@475)))))
 :no-pattern (type $generated@@474)
 :no-pattern (type $generated@@475)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
))))))
 :pattern ( ($generated@@412 $generated@@471))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@149) ($generated@@236 $generated@@476 $generated@@46)) (and (= ($generated@@313 ($generated@@402 $generated@@2 $generated@@476)) $generated@@476) ($generated@@136 ($generated@@402 $generated@@2 $generated@@476) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@476 $generated@@46))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@149) ($generated@@236 $generated@@477 $generated@@47)) (and (= ($generated@@313 ($generated@@402 $generated@@3 $generated@@477)) $generated@@477) ($generated@@136 ($generated@@402 $generated@@3 $generated@@477) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@477 $generated@@47))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@149) ($generated@@236 $generated@@478 $generated@@44)) (and (= ($generated@@313 ($generated@@402 $generated@@4 $generated@@478)) $generated@@478) ($generated@@136 ($generated@@402 $generated@@4 $generated@@478) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@478 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@479) 21))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@149) ($generated@@236 $generated@@480 $generated@@45)) (and (= ($generated@@313 ($generated@@402 $generated@@479 $generated@@480)) $generated@@480) ($generated@@136 ($generated@@402 $generated@@479 $generated@@480) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@480 $generated@@45))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@68) (= ($generated@@236 ($generated@@313 $generated@@481) $generated@@482) ($generated@@136 $generated@@481 $generated@@482)))
 :pattern ( ($generated@@236 ($generated@@313 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@83 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@80 $generated@@484 $generated@@2)) (<= 0 ($generated@@318 $generated@@483))))
 :pattern ( ($generated@@318 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@307 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@306 $generated@@486)) (<= 0 ($generated@@305 $generated@@485))))
 :pattern ( ($generated@@305 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@437 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@437 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@491 ($generated@@437 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@437 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@76 ($generated@@437 $generated@@495 $generated@@496)) $generated@@58))
 :pattern ( ($generated@@437 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@68) (= (type $generated@@500) $generated@@68)) (= ($generated@@497 ($generated@@445 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@445 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@501 ($generated@@445 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@445 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@68) (= (type $generated@@506) $generated@@68)) (= ($generated@@76 ($generated@@445 $generated@@505 $generated@@506)) $generated@@59))
 :pattern ( ($generated@@445 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@149) (= (type $generated@@508) $generated@@149)) (= ($generated@@154 ($generated@@235 $generated@@507 $generated@@508)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@139 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@139 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@513 ($generated@@139 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@139 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@149) (= (type $generated@@518) $generated@@149)) (= ($generated@@147 ($generated@@235 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@235 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@149) (= (type $generated@@520) $generated@@149)) (= ($generated@@148 ($generated@@235 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@235 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@149) (= (type $generated@@522) $generated@@140)) (= ($generated@@154 ($generated@@283 $generated@@521 $generated@@522)) $generated@@65))
 :pattern ( ($generated@@283 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@149) (= (type $generated@@524) $generated@@140)) (= ($generated@@250 ($generated@@283 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@283 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@149) (= (type $generated@@526) $generated@@140)) (= ($generated@@251 ($generated@@283 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@283 $generated@@525 $generated@@526))
)))
(assert  (and (forall (($generated@@529 T@U) ) (! (= (type ($generated@@527 $generated@@529)) $generated@@277)
 :pattern ( ($generated@@527 $generated@@529))
)) (= (type $generated@@528) $generated@@277)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@277) (= (type $generated@@531) $generated@@140)) (= ($generated@@276 $generated@@530 $generated@@531) ($generated@@276 $generated@@528 $generated@@531)))
 :pattern ( ($generated@@276 ($generated@@527 $generated@@530) $generated@@531))
)))
(assert  (and (forall (($generated@@534 T@U) ) (! (= (type ($generated@@532 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@534))
)) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (! (let (($generated@@537 ($generated@@307 (type $generated@@535))))
(= (type ($generated@@533 $generated@@535 $generated@@536)) $generated@@537))
 :pattern ( ($generated@@533 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@306 $generated@@149)) (= (type $generated@@539) $generated@@68)) (= (type $generated@@540) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@538 ($generated@@532 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@305 $generated@@538))) ($generated@@289 ($generated@@533 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@533 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@78 $generated@@538 ($generated@@532 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@79 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@79 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@544 ($generated@@256 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@256 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@76 ($generated@@256 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@548 ($generated@@261 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@261 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@76 ($generated@@261 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@552 ($generated@@157 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@157 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@68) (= ($generated@@76 ($generated@@157 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@532 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@532 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@76 ($generated@@532 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@532 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@560 ($generated@@230 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@230 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
(= ($generated@@402 $generated@@564 ($generated@@313 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@313 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@329 $generated@@149 $generated@@149)) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) $generated@@68)) (= ($generated@@136 $generated@@565 ($generated@@437 $generated@@566 $generated@@567)) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@565) $generated@@568))) (and ($generated@@236 ($generated@@85 ($generated@@403 $generated@@565) $generated@@568) $generated@@567) ($generated@@236 $generated@@568 $generated@@566)))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@565) $generated@@568))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@565) $generated@@568))
))))
 :pattern ( ($generated@@136 $generated@@565 ($generated@@437 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@347 $generated@@149 $generated@@149)) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) $generated@@68)) (= ($generated@@136 $generated@@569 ($generated@@445 $generated@@570 $generated@@571)) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@569) $generated@@572))) (and ($generated@@236 ($generated@@85 ($generated@@413 $generated@@569) $generated@@572) $generated@@571) ($generated@@236 $generated@@572 $generated@@570)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@569) $generated@@572))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@569) $generated@@572))
))))
 :pattern ( ($generated@@136 $generated@@569 ($generated@@445 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@149)) (< ($generated@@573 $generated@@575) ($generated@@574 ($generated@@235 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@235 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@149) (= (type $generated@@578) $generated@@149)) (< ($generated@@573 $generated@@578) ($generated@@574 ($generated@@235 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@235 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@149) (= (type $generated@@580) $generated@@140)) (< ($generated@@573 $generated@@579) ($generated@@574 ($generated@@283 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@283 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@149) (= (type $generated@@582) $generated@@140)) (< ($generated@@574 $generated@@582) ($generated@@574 ($generated@@283 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@283 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@277) (= (type $generated@@584) $generated@@140)) (= ($generated@@276 ($generated@@430 $generated@@583) $generated@@584) ($generated@@276 $generated@@583 $generated@@584)))
 :pattern ( ($generated@@276 ($generated@@430 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@149) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@68)) ($generated@@236 $generated@@585 ($generated@@437 $generated@@586 $generated@@587))) (and (= ($generated@@313 ($generated@@402 ($generated@@329 $generated@@149 $generated@@149) $generated@@585)) $generated@@585) ($generated@@136 ($generated@@402 ($generated@@329 $generated@@149 $generated@@149) $generated@@585) ($generated@@437 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@236 $generated@@585 ($generated@@437 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@149) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) $generated@@68)) ($generated@@236 $generated@@588 ($generated@@445 $generated@@589 $generated@@590))) (and (= ($generated@@313 ($generated@@402 ($generated@@347 $generated@@149 $generated@@149) $generated@@588)) $generated@@588) ($generated@@136 ($generated@@402 ($generated@@347 $generated@@149 $generated@@149) $generated@@588) ($generated@@445 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@236 $generated@@588 ($generated@@445 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@68) (= (type $generated@@592) $generated@@68)) (= (type $generated@@593) $generated@@149)) ($generated@@236 $generated@@593 ($generated@@139 $generated@@591 $generated@@592))) (and (= ($generated@@313 ($generated@@402 $generated@@140 $generated@@593)) $generated@@593) ($generated@@136 ($generated@@402 $generated@@140 $generated@@593) ($generated@@139 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@236 $generated@@593 ($generated@@139 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@140) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@231 $generated@@596) (and ($generated@@249 $generated@@594) ($generated@@78 $generated@@594 ($generated@@230 $generated@@595) $generated@@596)))) ($generated@@289 ($generated@@250 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@289 ($generated@@250 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
 (not ($generated@@0 ($generated@@85 ($generated@@455 $generated@@598) $generated@@597))))
 :pattern ( (let (($generated@@598 (type $generated@@597)))
($generated@@85 ($generated@@455 $generated@@598) $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@68) (= (type $generated@@600) $generated@@68)) (and (= ($generated@@76 ($generated@@139 $generated@@599 $generated@@600)) $generated@@62) (= ($generated@@324 ($generated@@139 $generated@@599 $generated@@600)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@140) (= ($generated@@573 ($generated@@313 $generated@@601)) ($generated@@574 $generated@@601)))
 :pattern ( ($generated@@573 ($generated@@313 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@149) ($generated@@236 $generated@@602 ($generated@@79 0))) (and (= ($generated@@313 ($generated@@402 $generated@@2 $generated@@602)) $generated@@602) ($generated@@136 ($generated@@402 ($generated@@80 $generated@@149 $generated@@4) $generated@@602) ($generated@@79 0))))
 :pattern ( ($generated@@236 $generated@@602 ($generated@@79 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@149) (= (type $generated@@604) $generated@@68)) ($generated@@236 $generated@@603 ($generated@@256 $generated@@604))) (and (= ($generated@@313 ($generated@@402 ($generated@@80 $generated@@149 $generated@@4) $generated@@603)) $generated@@603) ($generated@@136 ($generated@@402 ($generated@@80 $generated@@149 $generated@@4) $generated@@603) ($generated@@256 $generated@@604))))
 :pattern ( ($generated@@236 $generated@@603 ($generated@@256 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@149) (= (type $generated@@606) $generated@@68)) ($generated@@236 $generated@@605 ($generated@@261 $generated@@606))) (and (= ($generated@@313 ($generated@@402 ($generated@@80 $generated@@149 $generated@@4) $generated@@605)) $generated@@605) ($generated@@136 ($generated@@402 ($generated@@80 $generated@@149 $generated@@4) $generated@@605) ($generated@@261 $generated@@606))))
 :pattern ( ($generated@@236 $generated@@605 ($generated@@261 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@149) (= (type $generated@@608) $generated@@68)) ($generated@@236 $generated@@607 ($generated@@157 $generated@@608))) (and (= ($generated@@313 ($generated@@402 ($generated@@80 $generated@@149 $generated@@2) $generated@@607)) $generated@@607) ($generated@@136 ($generated@@402 ($generated@@80 $generated@@149 $generated@@2) $generated@@607) ($generated@@157 $generated@@608))))
 :pattern ( ($generated@@236 $generated@@607 ($generated@@157 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@149) (= (type $generated@@610) $generated@@68)) ($generated@@236 $generated@@609 ($generated@@532 $generated@@610))) (and (= ($generated@@313 ($generated@@402 ($generated@@306 $generated@@149) $generated@@609)) $generated@@609) ($generated@@136 ($generated@@402 ($generated@@306 $generated@@149) $generated@@609) ($generated@@532 $generated@@610))))
 :pattern ( ($generated@@236 $generated@@609 ($generated@@532 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@68) (= (type $generated@@612) $generated@@149)) ($generated@@236 $generated@@612 ($generated@@230 $generated@@611))) (and (= ($generated@@313 ($generated@@402 $generated@@140 $generated@@612)) $generated@@612) ($generated@@136 ($generated@@402 $generated@@140 $generated@@612) ($generated@@230 $generated@@611))))
 :pattern ( ($generated@@236 $generated@@612 ($generated@@230 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@140) (= (type $generated@@614) $generated@@68)) (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@231 $generated@@615) (and ($generated@@249 $generated@@613) ($generated@@78 $generated@@613 ($generated@@230 $generated@@614) $generated@@615)))) ($generated@@78 ($generated@@251 $generated@@613) ($generated@@230 $generated@@614) $generated@@615))
 :pattern ( ($generated@@78 ($generated@@251 $generated@@613) ($generated@@230 $generated@@614) $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@616) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@617) $generated@@68)) (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@616 ($generated@@157 $generated@@617) $generated@@618) (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@616 $generated@@619)))) ($generated@@289 $generated@@619 $generated@@617 $generated@@618))
 :pattern ( ($generated@@85 $generated@@616 $generated@@619))
))))
 :pattern ( ($generated@@78 $generated@@616 ($generated@@157 $generated@@617) $generated@@618))
)))
(assert (= $generated@@155 ($generated@@268 $generated@@155)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@140) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@231 $generated@@622) (and ($generated@@138 $generated@@620) (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@68) ($generated@@78 $generated@@620 ($generated@@139 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@78 $generated@@620 ($generated@@139 $generated@@621 $generated@@623) $generated@@622))
))))) ($generated@@289 ($generated@@147 $generated@@620) $generated@@621 $generated@@622))
 :pattern ( ($generated@@289 ($generated@@147 $generated@@620) $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@140) (= (type $generated@@625) $generated@@68)) (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@231 $generated@@626) (and ($generated@@138 $generated@@624) (exists (($generated@@627 T@U) ) (!  (and (= (type $generated@@627) $generated@@68) ($generated@@78 $generated@@624 ($generated@@139 $generated@@627 $generated@@625) $generated@@626))
 :pattern ( ($generated@@78 $generated@@624 ($generated@@139 $generated@@627 $generated@@625) $generated@@626))
))))) ($generated@@289 ($generated@@148 $generated@@624) $generated@@625 $generated@@626))
 :pattern ( ($generated@@289 ($generated@@148 $generated@@624) $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@149) (= (type $generated@@629) $generated@@149)) (= ($generated@@235 ($generated@@268 $generated@@628) ($generated@@268 $generated@@629)) ($generated@@268 ($generated@@235 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@235 ($generated@@268 $generated@@628) ($generated@@268 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@149) (= (type $generated@@631) $generated@@140)) (= ($generated@@283 ($generated@@268 $generated@@630) ($generated@@268 $generated@@631)) ($generated@@268 ($generated@@283 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@283 ($generated@@268 $generated@@630) ($generated@@268 $generated@@631)))
)))
(assert (forall (($generated@@632 Int) ) (! (= ($generated@@313 ($generated@@8 ($generated@@266 $generated@@632))) ($generated@@268 ($generated@@313 ($generated@@8 $generated@@632))))
 :pattern ( ($generated@@313 ($generated@@8 ($generated@@266 $generated@@632))))
)))
(assert (forall (($generated@@633 T@U) ) (! (= ($generated@@313 ($generated@@268 $generated@@633)) ($generated@@268 ($generated@@313 $generated@@633)))
 :pattern ( ($generated@@313 ($generated@@268 $generated@@633)))
)))
(assert  (=> (<= 1 $generated@@275) (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@277) (= (type $generated@@635) $generated@@140)) (or ($generated@@278 $generated@@635) (and (not (= 1 $generated@@275)) ($generated@@136 $generated@@635 ($generated@@230 $generated@@46))))) (and (=> (not ($generated@@272 $generated@@635)) (let (($generated@@636 ($generated@@251 $generated@@635)))
($generated@@278 $generated@@636))) (= ($generated@@276 ($generated@@430 $generated@@634) $generated@@635) (ite ($generated@@272 $generated@@635) $generated@@155 (let (($generated@@637 ($generated@@251 $generated@@635)))
(let (($generated@@638 ($generated ($generated@@402 $generated@@2 ($generated@@250 $generated@@635)))))
($generated@@283 ($generated@@313 ($generated@@8 (- 0 $generated@@638))) ($generated@@276 $generated@@634 $generated@@637))))))))
 :pattern ( ($generated@@276 ($generated@@430 $generated@@634) $generated@@635))
))))
(assert (forall (($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@307 (type $generated@@639))))
 (=> (and (= (type $generated@@639) ($generated@@306 $generated@@640)) (= ($generated@@305 $generated@@639) 0)) (= $generated@@639 ($generated@@304 $generated@@640))))
 :pattern ( ($generated@@305 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@642)))
 (=> (and (and (= (type $generated@@641) ($generated@@80 $generated@@644 $generated@@2)) (= (type $generated@@643) $generated@@2)) (<= 0 ($generated $generated@@643))) (= ($generated@@318 ($generated@@86 $generated@@641 $generated@@642 $generated@@643)) (+ (- ($generated@@318 $generated@@641) ($generated ($generated@@85 $generated@@641 $generated@@642))) ($generated $generated@@643)))))
 :pattern ( ($generated@@318 ($generated@@86 $generated@@641 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@646) $generated@@2)) ($generated@@78 $generated@@646 $generated@@46 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@46 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@648) $generated@@3)) ($generated@@78 $generated@@648 $generated@@47 $generated@@647))
 :pattern ( ($generated@@78 $generated@@648 $generated@@47 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@650) $generated@@4)) ($generated@@78 $generated@@650 $generated@@44 $generated@@649))
 :pattern ( ($generated@@78 $generated@@650 $generated@@44 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@652) $generated@@479)) ($generated@@78 $generated@@652 $generated@@45 $generated@@651))
 :pattern ( ($generated@@78 $generated@@652 $generated@@45 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@654) $generated@@149)) ($generated@@78 $generated@@654 $generated@@48 $generated@@653))
 :pattern ( ($generated@@78 $generated@@654 $generated@@48 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@655) $generated@@68) (= (type $generated@@656) $generated@@149)) (= (type $generated@@657) $generated@@140)) (= (type $generated@@658) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@231 $generated@@658)) (= ($generated@@78 ($generated@@283 $generated@@656 $generated@@657) ($generated@@230 $generated@@655) $generated@@658)  (and ($generated@@289 $generated@@656 $generated@@655 $generated@@658) ($generated@@78 $generated@@657 ($generated@@230 $generated@@655) $generated@@658))))
 :pattern ( ($generated@@78 ($generated@@283 $generated@@656 $generated@@657) ($generated@@230 $generated@@655) $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@306 $generated@@149)) (= (type $generated@@660) $generated@@68)) (= ($generated@@136 $generated@@659 ($generated@@532 $generated@@660)) (forall (($generated@@661 Int) ) (!  (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@305 $generated@@659))) ($generated@@236 ($generated@@533 $generated@@659 $generated@@661) $generated@@660))
 :pattern ( ($generated@@533 $generated@@659 $generated@@661))
))))
 :pattern ( ($generated@@136 $generated@@659 ($generated@@532 $generated@@660)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 Int) ) (!  (=> (= (type $generated@@663) ($generated@@306 $generated@@149)) (=> (and (<= 0 $generated@@664) (< $generated@@664 ($generated@@305 $generated@@663))) (< ($generated@@574 ($generated@@402 $generated@@140 ($generated@@533 $generated@@663 $generated@@664))) ($generated@@662 $generated@@663))))
 :pattern ( ($generated@@574 ($generated@@402 $generated@@140 ($generated@@533 $generated@@663 $generated@@664))))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) ($generated@@329 $generated@@149 $generated@@149)) (= (type $generated@@666) $generated@@68)) (= (type $generated@@667) $generated@@68)) ($generated@@136 $generated@@665 ($generated@@437 $generated@@666 $generated@@667))) (and (and ($generated@@136 ($generated@@327 $generated@@665) ($generated@@256 $generated@@666)) ($generated@@136 ($generated@@370 $generated@@665) ($generated@@256 $generated@@667))) ($generated@@136 ($generated@@401 $generated@@665) ($generated@@256 ($generated@@139 $generated@@666 $generated@@667)))))
 :pattern ( ($generated@@136 $generated@@665 ($generated@@437 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (and (= (type $generated@@668) ($generated@@347 $generated@@149 $generated@@149)) (= (type $generated@@669) $generated@@68)) (= (type $generated@@670) $generated@@68)) ($generated@@136 $generated@@668 ($generated@@445 $generated@@669 $generated@@670))) (and (and ($generated@@136 ($generated@@345 $generated@@668) ($generated@@261 $generated@@669)) ($generated@@136 ($generated@@381 $generated@@668) ($generated@@261 $generated@@670))) ($generated@@136 ($generated@@412 $generated@@668) ($generated@@261 ($generated@@139 $generated@@669 $generated@@670)))))
 :pattern ( ($generated@@136 $generated@@668 ($generated@@445 $generated@@669 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@2) ($generated@@136 $generated@@671 $generated@@46))
 :pattern ( ($generated@@136 $generated@@671 $generated@@46))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@3) ($generated@@136 $generated@@672 $generated@@47))
 :pattern ( ($generated@@136 $generated@@672 $generated@@47))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@4) ($generated@@136 $generated@@673 $generated@@44))
 :pattern ( ($generated@@136 $generated@@673 $generated@@44))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@479) ($generated@@136 $generated@@674 $generated@@45))
 :pattern ( ($generated@@136 $generated@@674 $generated@@45))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@149) ($generated@@136 $generated@@675 $generated@@48))
 :pattern ( ($generated@@136 $generated@@675 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@676) $generated@@140) (= (type $generated@@678) $generated@@140)) (= (type $generated@@679) $generated@@140)) (= (type $generated@@680) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@681) $generated@@140)) (= (type $generated@@684) ($generated@@164 $generated@@81 $generated@@4))) (= (type $generated@@685) $generated@@81)) (= (type $generated@@686) ($generated@@164 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@688 true))
(let (($generated@@689  (=> (and (and (= $generated@@676 ($generated@@283 ($generated@@313 ($generated@@8 $generated@@677)) $generated@@678)) ($generated@@136 $generated@@678 ($generated@@230 $generated@@46))) (and ($generated@@136 $generated@@679 ($generated@@230 $generated@@46)) ($generated@@78 $generated@@679 ($generated@@230 $generated@@46) $generated@@680))) (=> (and (and (and (= $generated@@681 $generated@@678) ($generated@@136 $generated@@681 ($generated@@230 $generated@@46))) (and (= $generated@@679 $generated@@681) (= $generated@@682 $generated@@677))) (and (and ($generated@@136 ($generated@@8 $generated@@682) $generated@@46) (= $generated@@683 $generated@@682)) (and ($generated@@78 $generated@@679 ($generated@@230 $generated@@46) $generated@@680) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@574 $generated@@679) ($generated@@574 $generated@@676))))))
(let (($generated@@690  (=> (not (= $generated@@676 $generated@@155)) (and (=> (= (ControlFlow 0 6) 4) $generated@@689) (=> (= (ControlFlow 0 6) 5) $generated@@688)))))
(let (($generated@@691 true))
(let (($generated@@692  (=> (= $generated@@684 ($generated@@218 $generated@@685 $generated@@680 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@691) (=> (= (ControlFlow 0 7) 6) $generated@@690)))))
(let (($generated@@693 true))
(let (($generated@@694  (=> (= $generated@@686 ($generated@@163 $generated@@685 $generated@@680 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@693) (=> (= (ControlFlow 0 8) 7) $generated@@692)))))
(let (($generated@@695  (=> (and (and (and ($generated@@231 $generated@@680) ($generated@@687 $generated@@680)) ($generated@@136 $generated@@676 ($generated@@230 $generated@@46))) (and (= 1 $generated@@275) (= (ControlFlow 0 9) 8))) $generated@@694)))
$generated@@695)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 () Int)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 () T@T)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@379 (T@U) Bool)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@T) T@U)
(declare-fun $generated@@469 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@518 () T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@523 (T@U Int) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@652 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@68)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@140)))
(assert (= ($generated@@154 $generated@@155) $generated@@63))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@161) $generated@@68)) ($generated@@136 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@136 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@81 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@71 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@81) (= (type $generated@@212) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@213) ($generated@@70 $generated@@4))) (= (type $generated@@215) $generated@@81)) (= (type $generated@@216) ($generated@@70 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@68)
 :pattern ( ($generated@@218 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) $generated@@68) (= (type $generated@@222) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@222)) ($generated@@78 $generated@@155 ($generated@@218 $generated@@221) $generated@@222))
 :pattern ( ($generated@@78 $generated@@155 ($generated@@218 $generated@@221) $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@140)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) $generated@@68)) (= (type $generated@@229) $generated@@149)) (= (type $generated@@230) $generated@@149)) (= ($generated@@136 ($generated@@223 $generated@@229 $generated@@230) ($generated@@139 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@136 ($generated@@223 $generated@@229 $generated@@230) ($generated@@139 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@68) ($generated@@136 $generated@@155 ($generated@@218 $generated@@231)))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@218 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@140) (= (type $generated@@233) $generated@@140)) (= ($generated@@146 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@146 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@140) (= (type $generated@@236) $generated@@140)) (= ($generated@@234 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert  (and (forall (($generated@@240 T@U) ) (! (= (type ($generated@@238 $generated@@240)) $generated@@149)
 :pattern ( ($generated@@238 $generated@@240))
)) (forall (($generated@@241 T@U) ) (! (= (type ($generated@@239 $generated@@241)) $generated@@140)
 :pattern ( ($generated@@239 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@140) (= (type $generated@@243) $generated@@140)) (and ($generated@@237 $generated@@242) ($generated@@237 $generated@@243))) (= ($generated@@234 $generated@@242 $generated@@243)  (and (= ($generated@@238 $generated@@242) ($generated@@238 $generated@@243)) ($generated@@234 ($generated@@239 $generated@@242) ($generated@@239 $generated@@243)))))
 :pattern ( ($generated@@234 $generated@@242 $generated@@243) ($generated@@237 $generated@@242))
 :pattern ( ($generated@@234 $generated@@242 $generated@@243) ($generated@@237 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@247) $generated@@68)) (= ($generated@@136 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@149) ($generated@@0 ($generated@@85 $generated@@246 $generated@@248))) ($generated@@224 $generated@@248 $generated@@247))
 :pattern ( ($generated@@85 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@136 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@252) $generated@@68)) (= ($generated@@136 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@149) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@224 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@136 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@254 $generated@@255) $generated@@255)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@140) (= (type $generated@@262) $generated@@140)) (and ($generated@@260 $generated@@261) ($generated@@260 $generated@@262))) (= ($generated@@234 $generated@@261 $generated@@262) true))
 :pattern ( ($generated@@234 $generated@@261 $generated@@262) ($generated@@260 $generated@@261))
 :pattern ( ($generated@@234 $generated@@261 $generated@@262) ($generated@@260 $generated@@262))
)))
(assert  (and (= ($generated@@1 $generated@@265) 17) (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@264 $generated@@267 $generated@@268)) $generated@@140)
 :pattern ( ($generated@@264 $generated@@267 $generated@@268))
))))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@265) (= (type $generated@@270) $generated@@140)) (or ($generated@@266 $generated@@270) (and (not (= 1 $generated@@263)) ($generated@@136 $generated@@270 ($generated@@218 $generated@@46))))) ($generated@@136 ($generated@@264 $generated@@269 $generated@@270) ($generated@@218 $generated@@46)))
 :pattern ( ($generated@@264 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@271 $generated@@272 $generated@@273)) $generated@@140)
 :pattern ( ($generated@@271 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@68) (= (type $generated@@275) $generated@@149)) (= (type $generated@@276) $generated@@140)) (= ($generated@@136 ($generated@@271 $generated@@275 $generated@@276) ($generated@@218 $generated@@274))  (and ($generated@@224 $generated@@275 $generated@@274) ($generated@@136 $generated@@276 ($generated@@218 $generated@@274)))))
 :pattern ( ($generated@@136 ($generated@@271 $generated@@275 $generated@@276) ($generated@@218 $generated@@274)))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@68) (= (type $generated@@279) $generated@@68)) (= (type $generated@@280) $generated@@149)) (= (type $generated@@281) $generated@@149)) (= (type $generated@@282) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@282)) (= ($generated@@78 ($generated@@223 $generated@@280 $generated@@281) ($generated@@139 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@78 ($generated@@223 $generated@@280 $generated@@281) ($generated@@139 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@140) (= ($generated@@138 $generated@@283) (= ($generated@@154 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@140) (= ($generated@@260 $generated@@284) (= ($generated@@154 $generated@@284) $generated@@63)))
 :pattern ( ($generated@@260 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@140) (= ($generated@@237 $generated@@285) (= ($generated@@154 $generated@@285) $generated@@65)))
 :pattern ( ($generated@@237 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@140) ($generated@@138 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@149) (= (type $generated@@288) $generated@@149)) (= $generated@@286 ($generated@@223 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@138 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@140) ($generated@@237 $generated@@289)) (exists (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (and (and (= (type $generated@@290) $generated@@149) (= (type $generated@@291) $generated@@140)) (= $generated@@289 ($generated@@271 $generated@@290 $generated@@291)))
 :no-pattern (type $generated@@290)
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@237 $generated@@289))
)))
(assert  (and (and (forall (($generated@@296 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@296)) 18)) (forall (($generated@@297 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
))) (forall (($generated@@298 T@T) ) (! (= (type ($generated@@292 $generated@@298)) ($generated@@294 $generated@@298))
 :pattern ( ($generated@@292 $generated@@298))
))))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@299)) 0)
 :pattern ( ($generated@@292 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@140) ($generated@@260 $generated@@300)) (= $generated@@300 $generated@@155))
 :pattern ( ($generated@@260 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@149)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@68) (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@277 ($generated@@301 $generated@@303) $generated@@304 $generated@@305) ($generated@@78 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@277 ($generated@@301 $generated@@303) $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@80 $generated@@308 $generated@@2))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@83 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@80 $generated@@310 $generated@@2)) (and (= (= ($generated@@306 $generated@@309) 0) (= $generated@@309 ($generated@@307 $generated@@310))) (=> (not (= ($generated@@306 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@85 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@73)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@68) (and (= ($generated@@76 ($generated@@218 $generated@@314)) $generated@@64) (= ($generated@@312 ($generated@@218 $generated@@314)) $generated@@67)))
 :pattern ( ($generated@@218 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@80 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@85 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@85 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 20)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@80 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@85 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@85 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@83 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@80 $generated@@352 $generated@@2)) (= ($generated@@158 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@85 $generated@@351 $generated@@353))) (<= ($generated ($generated@@85 $generated@@351 $generated@@353)) ($generated@@306 $generated@@351))))
 :pattern ( ($generated@@85 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@158 $generated@@351))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@319 (type $generated@@354))))
(let (($generated@@356 ($generated@@318 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@317 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@316 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@315 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@315 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@319 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@80 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@319 (type $generated@@361))))
(let (($generated@@363 ($generated@@318 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@317 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@316 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@337 (type $generated@@365))))
(let (($generated@@367 ($generated@@336 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@335 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@334 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@333 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@333 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@337 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@80 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@337 (type $generated@@372))))
(let (($generated@@374 ($generated@@336 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@335 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@334 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@377) $generated@@68)) (= ($generated@@136 $generated@@376 ($generated@@157 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@376 $generated@@378)))) ($generated@@224 $generated@@378 $generated@@377))
 :pattern ( ($generated@@85 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@136 $generated@@376 ($generated@@157 $generated@@377)))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@140) ($generated@@379 $generated@@380)) (or ($generated@@260 $generated@@380) ($generated@@237 $generated@@380)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@382) $generated@@68)) (= (type $generated@@383) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@381 ($generated@@244 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@149) ($generated@@0 ($generated@@85 $generated@@381 $generated@@384))) ($generated@@277 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@85 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@78 $generated@@381 ($generated@@244 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@386) $generated@@68)) (= (type $generated@@387) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@385 ($generated@@249 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@149) ($generated@@0 ($generated@@85 $generated@@385 $generated@@388))) ($generated@@277 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@85 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@78 $generated@@385 ($generated@@249 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(= ($generated ($generated@@85 ($generated@@307 $generated@@390) $generated@@389)) 0))
 :pattern ( (let (($generated@@390 (type $generated@@389)))
($generated@@85 ($generated@@307 $generated@@390) $generated@@389)))
)))
(assert  (and (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@391 $generated@@394)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@391 $generated@@394))
)) (forall (($generated@@395 T@T) ($generated@@396 T@U) ) (! (= (type ($generated@@392 $generated@@395 $generated@@396)) $generated@@395)
 :pattern ( ($generated@@392 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@319 (type $generated@@397))))
(let (($generated@@399 ($generated@@318 (type $generated@@397))))
(= (type ($generated@@393 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@393 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@401) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@391 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@315 $generated@@400) ($generated@@147 ($generated@@392 $generated@@140 $generated@@401)))) (= ($generated@@85 ($generated@@393 $generated@@400) ($generated@@147 ($generated@@392 $generated@@140 $generated@@401))) ($generated@@148 ($generated@@392 $generated@@140 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@391 $generated@@400) $generated@@401))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@337 (type $generated@@405))))
(let (($generated@@407 ($generated@@336 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@80 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@335 $generated@@149 $generated@@149)) (= (type $generated@@409) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@85 ($generated@@333 $generated@@408) ($generated@@147 ($generated@@392 $generated@@140 $generated@@409)))) (= ($generated@@85 ($generated@@403 $generated@@408) ($generated@@147 ($generated@@392 $generated@@140 $generated@@409))) ($generated@@148 ($generated@@392 $generated@@140 $generated@@409))))))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@318 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@317 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@358 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@315 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@393 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@315 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@336 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@335 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@85 ($generated@@369 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@85 ($generated@@333 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@85 ($generated@@403 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@85 ($generated@@333 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@265)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@422) $generated@@265) (= (type $generated@@423) $generated@@140)) (or ($generated@@266 ($generated@@256 $generated@@423)) (and (not (= 1 $generated@@263)) ($generated@@136 $generated@@423 ($generated@@218 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@256 ($generated@@11 ($generated@@260 ($generated@@256 $generated@@423)))))) (let (($generated@@424 ($generated@@256 ($generated@@239 ($generated@@256 $generated@@423)))))
($generated@@266 $generated@@424))) (= ($generated@@264 ($generated@@420 $generated@@422) ($generated@@256 $generated@@423)) (ite ($generated@@260 ($generated@@256 $generated@@423)) $generated@@155 (let (($generated@@425 ($generated@@256 ($generated@@239 ($generated@@256 $generated@@423)))))
(let (($generated@@426 ($generated@@254 ($generated ($generated@@392 $generated@@2 ($generated@@238 ($generated@@256 $generated@@423)))))))
($generated@@256 ($generated@@271 ($generated@@301 ($generated@@8 ($generated@@254 (- 0 $generated@@426)))) ($generated@@256 ($generated@@264 ($generated@@420 $generated@@422) $generated@@425))))))))))
 :weight 3
 :pattern ( ($generated@@264 ($generated@@420 $generated@@422) ($generated@@256 $generated@@423)))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@68)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@431) $generated@@68)) (= (type $generated@@432) $generated@@68)) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@315 $generated@@430) $generated@@434))) (and ($generated@@277 ($generated@@85 ($generated@@393 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@277 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@430) $generated@@434))
 :pattern ( ($generated@@85 ($generated@@315 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@78 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@335 $generated@@149 $generated@@149)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@333 $generated@@438) $generated@@442))) (and ($generated@@277 ($generated@@85 ($generated@@403 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@277 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@438) $generated@@442))
 :pattern ( ($generated@@85 ($generated@@333 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@443) $generated@@68) (= (type $generated@@444) $generated@@140)) ($generated@@136 $generated@@444 ($generated@@218 $generated@@443))) (or ($generated@@260 $generated@@444) ($generated@@237 $generated@@444)))
 :pattern ( ($generated@@237 $generated@@444) ($generated@@136 $generated@@444 ($generated@@218 $generated@@443)))
 :pattern ( ($generated@@260 $generated@@444) ($generated@@136 $generated@@444 ($generated@@218 $generated@@443)))
)))
(assert (forall (($generated@@446 T@T) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@80 $generated@@446 $generated@@4))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@337 (type $generated@@447))))
(let (($generated@@449 ($generated@@336 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@335 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@334 $generated@@449 $generated@@448)) (= ($generated@@333 $generated@@447) ($generated@@445 $generated@@449))))))
 :pattern ( ($generated@@333 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@337 (type $generated@@450))))
(let (($generated@@452 ($generated@@336 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@335 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@334 $generated@@452 $generated@@451)) (= ($generated@@369 $generated@@450) ($generated@@445 $generated@@451))))))
 :pattern ( ($generated@@369 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@337 (type $generated@@453))))
(let (($generated@@455 ($generated@@336 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@335 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@334 $generated@@455 $generated@@454)) (= ($generated@@402 $generated@@453) ($generated@@445 $generated@@149))))))
 :pattern ( ($generated@@402 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@319 (type $generated@@456))))
(let (($generated@@458 ($generated@@318 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@317 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@316 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@149) (= (type $generated@@460) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@391 $generated@@456) ($generated@@301 ($generated@@223 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@391 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@337 (type $generated@@461))))
(let (($generated@@463 ($generated@@336 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@335 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@334 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@149) (= (type $generated@@465) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@402 $generated@@461) ($generated@@301 ($generated@@223 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@402 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@149) ($generated@@224 $generated@@466 $generated@@46)) (and (= ($generated@@301 ($generated@@392 $generated@@2 $generated@@466)) $generated@@466) ($generated@@136 ($generated@@392 $generated@@2 $generated@@466) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@466 $generated@@46))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) ($generated@@224 $generated@@467 $generated@@47)) (and (= ($generated@@301 ($generated@@392 $generated@@3 $generated@@467)) $generated@@467) ($generated@@136 ($generated@@392 $generated@@3 $generated@@467) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@467 $generated@@47))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@149) ($generated@@224 $generated@@468 $generated@@44)) (and (= ($generated@@301 ($generated@@392 $generated@@4 $generated@@468)) $generated@@468) ($generated@@136 ($generated@@392 $generated@@4 $generated@@468) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@468 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@469) 21))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@149) ($generated@@224 $generated@@470 $generated@@45)) (and (= ($generated@@301 ($generated@@392 $generated@@469 $generated@@470)) $generated@@470) ($generated@@136 ($generated@@392 $generated@@469 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@68) (= ($generated@@224 ($generated@@301 $generated@@471) $generated@@472) ($generated@@136 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@224 ($generated@@301 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@83 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@80 $generated@@474 $generated@@2)) (<= 0 ($generated@@306 $generated@@473))))
 :pattern ( ($generated@@306 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@295 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@294 $generated@@476)) (<= 0 ($generated@@293 $generated@@475))))
 :pattern ( ($generated@@293 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@68)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@68) (= (type $generated@@480) $generated@@68)) (= ($generated@@477 ($generated@@427 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@427 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@481 ($generated@@427 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@427 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@76 ($generated@@427 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@435 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@435 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@491 ($generated@@435 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@435 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@76 ($generated@@435 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@149) (= (type $generated@@498) $generated@@149)) (= ($generated@@154 ($generated@@223 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@139 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@139 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@68) (= (type $generated@@506) $generated@@68)) (= ($generated@@503 ($generated@@139 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@139 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@149) (= (type $generated@@508) $generated@@149)) (= ($generated@@147 ($generated@@223 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@223 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@149) (= (type $generated@@510) $generated@@149)) (= ($generated@@148 ($generated@@223 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@223 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) (= (type $generated@@512) $generated@@140)) (= ($generated@@154 ($generated@@271 $generated@@511 $generated@@512)) $generated@@65))
 :pattern ( ($generated@@271 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@149) (= (type $generated@@514) $generated@@140)) (= ($generated@@238 ($generated@@271 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@271 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@149) (= (type $generated@@516) $generated@@140)) (= ($generated@@239 ($generated@@271 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@271 $generated@@515 $generated@@516))
)))
(assert  (and (forall (($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@519)) $generated@@265)
 :pattern ( ($generated@@517 $generated@@519))
)) (= (type $generated@@518) $generated@@265)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@265) (= (type $generated@@521) $generated@@140)) (= ($generated@@264 $generated@@520 $generated@@521) ($generated@@264 $generated@@518 $generated@@521)))
 :pattern ( ($generated@@264 ($generated@@517 $generated@@520) $generated@@521))
)))
(assert  (and (forall (($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@524))
)) (forall (($generated@@525 T@U) ($generated@@526 Int) ) (! (let (($generated@@527 ($generated@@295 (type $generated@@525))))
(= (type ($generated@@523 $generated@@525 $generated@@526)) $generated@@527))
 :pattern ( ($generated@@523 $generated@@525 $generated@@526))
))))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@294 $generated@@149)) (= (type $generated@@529) $generated@@68)) (= (type $generated@@530) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@528 ($generated@@522 $generated@@529) $generated@@530) (forall (($generated@@531 Int) ) (!  (=> (and (<= 0 $generated@@531) (< $generated@@531 ($generated@@293 $generated@@528))) ($generated@@277 ($generated@@523 $generated@@528 $generated@@531) $generated@@529 $generated@@530))
 :pattern ( ($generated@@523 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@78 $generated@@528 ($generated@@522 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@532 ($generated@@79 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@79 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@244 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@244 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@244 $generated@@537)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@249 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@249 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@249 $generated@@541)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@157 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@157 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@76 ($generated@@157 $generated@@545)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@546 ($generated@@522 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@522 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@76 ($generated@@522 $generated@@549)) $generated@@57))
 :pattern ( ($generated@@522 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@68)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@550 ($generated@@218 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@218 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
(= ($generated@@392 $generated@@554 ($generated@@301 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@301 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) (= ($generated@@136 $generated@@555 ($generated@@427 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@315 $generated@@555) $generated@@558))) (and ($generated@@224 ($generated@@85 ($generated@@393 $generated@@555) $generated@@558) $generated@@557) ($generated@@224 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@555) $generated@@558))
 :pattern ( ($generated@@85 ($generated@@315 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@136 $generated@@555 ($generated@@427 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@335 $generated@@149 $generated@@149)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) (= ($generated@@136 $generated@@559 ($generated@@435 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@333 $generated@@559) $generated@@562))) (and ($generated@@224 ($generated@@85 ($generated@@403 $generated@@559) $generated@@562) $generated@@561) ($generated@@224 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@559) $generated@@562))
 :pattern ( ($generated@@85 ($generated@@333 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@136 $generated@@559 ($generated@@435 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@149)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@223 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@223 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@149) (= (type $generated@@568) $generated@@149)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@223 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@223 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@149) (= (type $generated@@570) $generated@@140)) (< ($generated@@563 $generated@@569) ($generated@@564 ($generated@@271 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@271 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@149) (= (type $generated@@572) $generated@@140)) (< ($generated@@564 $generated@@572) ($generated@@564 ($generated@@271 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@271 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@265) (= (type $generated@@574) $generated@@140)) (= ($generated@@264 ($generated@@420 $generated@@573) $generated@@574) ($generated@@264 $generated@@573 $generated@@574)))
 :pattern ( ($generated@@264 ($generated@@420 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) $generated@@68)) ($generated@@224 $generated@@575 ($generated@@427 $generated@@576 $generated@@577))) (and (= ($generated@@301 ($generated@@392 ($generated@@317 $generated@@149 $generated@@149) $generated@@575)) $generated@@575) ($generated@@136 ($generated@@392 ($generated@@317 $generated@@149 $generated@@149) $generated@@575) ($generated@@427 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@224 $generated@@575 ($generated@@427 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@149) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@68)) ($generated@@224 $generated@@578 ($generated@@435 $generated@@579 $generated@@580))) (and (= ($generated@@301 ($generated@@392 ($generated@@335 $generated@@149 $generated@@149) $generated@@578)) $generated@@578) ($generated@@136 ($generated@@392 ($generated@@335 $generated@@149 $generated@@149) $generated@@578) ($generated@@435 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@224 $generated@@578 ($generated@@435 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@68) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@149)) ($generated@@224 $generated@@583 ($generated@@139 $generated@@581 $generated@@582))) (and (= ($generated@@301 ($generated@@392 $generated@@140 $generated@@583)) $generated@@583) ($generated@@136 ($generated@@392 $generated@@140 $generated@@583) ($generated@@139 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@224 $generated@@583 ($generated@@139 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@140) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@586) (and ($generated@@237 $generated@@584) ($generated@@78 $generated@@584 ($generated@@218 $generated@@585) $generated@@586)))) ($generated@@277 ($generated@@238 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@277 ($generated@@238 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@587)))
 (not ($generated@@0 ($generated@@85 ($generated@@445 $generated@@588) $generated@@587))))
 :pattern ( (let (($generated@@588 (type $generated@@587)))
($generated@@85 ($generated@@445 $generated@@588) $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@68) (= (type $generated@@590) $generated@@68)) (and (= ($generated@@76 ($generated@@139 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@312 ($generated@@139 $generated@@589 $generated@@590)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@140) (= ($generated@@563 ($generated@@301 $generated@@591)) ($generated@@564 $generated@@591)))
 :pattern ( ($generated@@563 ($generated@@301 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@149) ($generated@@224 $generated@@592 ($generated@@79 0))) (and (= ($generated@@301 ($generated@@392 $generated@@2 $generated@@592)) $generated@@592) ($generated@@136 ($generated@@392 ($generated@@80 $generated@@149 $generated@@4) $generated@@592) ($generated@@79 0))))
 :pattern ( ($generated@@224 $generated@@592 ($generated@@79 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@149) (= (type $generated@@594) $generated@@68)) ($generated@@224 $generated@@593 ($generated@@244 $generated@@594))) (and (= ($generated@@301 ($generated@@392 ($generated@@80 $generated@@149 $generated@@4) $generated@@593)) $generated@@593) ($generated@@136 ($generated@@392 ($generated@@80 $generated@@149 $generated@@4) $generated@@593) ($generated@@244 $generated@@594))))
 :pattern ( ($generated@@224 $generated@@593 ($generated@@244 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@149) (= (type $generated@@596) $generated@@68)) ($generated@@224 $generated@@595 ($generated@@249 $generated@@596))) (and (= ($generated@@301 ($generated@@392 ($generated@@80 $generated@@149 $generated@@4) $generated@@595)) $generated@@595) ($generated@@136 ($generated@@392 ($generated@@80 $generated@@149 $generated@@4) $generated@@595) ($generated@@249 $generated@@596))))
 :pattern ( ($generated@@224 $generated@@595 ($generated@@249 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@149) (= (type $generated@@598) $generated@@68)) ($generated@@224 $generated@@597 ($generated@@157 $generated@@598))) (and (= ($generated@@301 ($generated@@392 ($generated@@80 $generated@@149 $generated@@2) $generated@@597)) $generated@@597) ($generated@@136 ($generated@@392 ($generated@@80 $generated@@149 $generated@@2) $generated@@597) ($generated@@157 $generated@@598))))
 :pattern ( ($generated@@224 $generated@@597 ($generated@@157 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@149) (= (type $generated@@600) $generated@@68)) ($generated@@224 $generated@@599 ($generated@@522 $generated@@600))) (and (= ($generated@@301 ($generated@@392 ($generated@@294 $generated@@149) $generated@@599)) $generated@@599) ($generated@@136 ($generated@@392 ($generated@@294 $generated@@149) $generated@@599) ($generated@@522 $generated@@600))))
 :pattern ( ($generated@@224 $generated@@599 ($generated@@522 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@68) (= (type $generated@@602) $generated@@149)) ($generated@@224 $generated@@602 ($generated@@218 $generated@@601))) (and (= ($generated@@301 ($generated@@392 $generated@@140 $generated@@602)) $generated@@602) ($generated@@136 ($generated@@392 $generated@@140 $generated@@602) ($generated@@218 $generated@@601))))
 :pattern ( ($generated@@224 $generated@@602 ($generated@@218 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@140) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@605) (and ($generated@@237 $generated@@603) ($generated@@78 $generated@@603 ($generated@@218 $generated@@604) $generated@@605)))) ($generated@@78 ($generated@@239 $generated@@603) ($generated@@218 $generated@@604) $generated@@605))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@603) ($generated@@218 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@607) $generated@@68)) (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@606 ($generated@@157 $generated@@607) $generated@@608) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@606 $generated@@609)))) ($generated@@277 $generated@@609 $generated@@607 $generated@@608))
 :pattern ( ($generated@@85 $generated@@606 $generated@@609))
))))
 :pattern ( ($generated@@78 $generated@@606 ($generated@@157 $generated@@607) $generated@@608))
)))
(assert (= $generated@@155 ($generated@@256 $generated@@155)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@140) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@612) (and ($generated@@138 $generated@@610) (exists (($generated@@613 T@U) ) (!  (and (= (type $generated@@613) $generated@@68) ($generated@@78 $generated@@610 ($generated@@139 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@78 $generated@@610 ($generated@@139 $generated@@611 $generated@@613) $generated@@612))
))))) ($generated@@277 ($generated@@147 $generated@@610) $generated@@611 $generated@@612))
 :pattern ( ($generated@@277 ($generated@@147 $generated@@610) $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@140) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@616) (and ($generated@@138 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@68) ($generated@@78 $generated@@614 ($generated@@139 $generated@@617 $generated@@615) $generated@@616))
 :pattern ( ($generated@@78 $generated@@614 ($generated@@139 $generated@@617 $generated@@615) $generated@@616))
))))) ($generated@@277 ($generated@@148 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@277 ($generated@@148 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@149) (= (type $generated@@619) $generated@@149)) (= ($generated@@223 ($generated@@256 $generated@@618) ($generated@@256 $generated@@619)) ($generated@@256 ($generated@@223 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@223 ($generated@@256 $generated@@618) ($generated@@256 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@149) (= (type $generated@@621) $generated@@140)) (= ($generated@@271 ($generated@@256 $generated@@620) ($generated@@256 $generated@@621)) ($generated@@256 ($generated@@271 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@271 ($generated@@256 $generated@@620) ($generated@@256 $generated@@621)))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@301 ($generated@@8 ($generated@@254 $generated@@622))) ($generated@@256 ($generated@@301 ($generated@@8 $generated@@622))))
 :pattern ( ($generated@@301 ($generated@@8 ($generated@@254 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ) (! (= ($generated@@301 ($generated@@256 $generated@@623)) ($generated@@256 ($generated@@301 $generated@@623)))
 :pattern ( ($generated@@301 ($generated@@256 $generated@@623)))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@265) (= (type $generated@@625) $generated@@140)) (or ($generated@@266 $generated@@625) (and (not (= 1 $generated@@263)) ($generated@@136 $generated@@625 ($generated@@218 $generated@@46))))) (and (=> (not ($generated@@260 $generated@@625)) (let (($generated@@626 ($generated@@239 $generated@@625)))
($generated@@266 $generated@@626))) (= ($generated@@264 ($generated@@420 $generated@@624) $generated@@625) (ite ($generated@@260 $generated@@625) $generated@@155 (let (($generated@@627 ($generated@@239 $generated@@625)))
(let (($generated@@628 ($generated ($generated@@392 $generated@@2 ($generated@@238 $generated@@625)))))
($generated@@271 ($generated@@301 ($generated@@8 (- 0 $generated@@628))) ($generated@@264 $generated@@624 $generated@@627))))))))
 :pattern ( ($generated@@264 ($generated@@420 $generated@@624) $generated@@625))
))))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 ($generated@@295 (type $generated@@629))))
 (=> (and (= (type $generated@@629) ($generated@@294 $generated@@630)) (= ($generated@@293 $generated@@629) 0)) (= $generated@@629 ($generated@@292 $generated@@630))))
 :pattern ( ($generated@@293 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@632)))
 (=> (and (and (= (type $generated@@631) ($generated@@80 $generated@@634 $generated@@2)) (= (type $generated@@633) $generated@@2)) (<= 0 ($generated $generated@@633))) (= ($generated@@306 ($generated@@86 $generated@@631 $generated@@632 $generated@@633)) (+ (- ($generated@@306 $generated@@631) ($generated ($generated@@85 $generated@@631 $generated@@632))) ($generated $generated@@633)))))
 :pattern ( ($generated@@306 ($generated@@86 $generated@@631 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@636) $generated@@2)) ($generated@@78 $generated@@636 $generated@@46 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@46 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@638) $generated@@3)) ($generated@@78 $generated@@638 $generated@@47 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@47 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@640) $generated@@4)) ($generated@@78 $generated@@640 $generated@@44 $generated@@639))
 :pattern ( ($generated@@78 $generated@@640 $generated@@44 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@642) $generated@@469)) ($generated@@78 $generated@@642 $generated@@45 $generated@@641))
 :pattern ( ($generated@@78 $generated@@642 $generated@@45 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@644) $generated@@149)) ($generated@@78 $generated@@644 $generated@@48 $generated@@643))
 :pattern ( ($generated@@78 $generated@@644 $generated@@48 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@645) $generated@@68) (= (type $generated@@646) $generated@@149)) (= (type $generated@@647) $generated@@140)) (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@648)) (= ($generated@@78 ($generated@@271 $generated@@646 $generated@@647) ($generated@@218 $generated@@645) $generated@@648)  (and ($generated@@277 $generated@@646 $generated@@645 $generated@@648) ($generated@@78 $generated@@647 ($generated@@218 $generated@@645) $generated@@648))))
 :pattern ( ($generated@@78 ($generated@@271 $generated@@646 $generated@@647) ($generated@@218 $generated@@645) $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@294 $generated@@149)) (= (type $generated@@650) $generated@@68)) (= ($generated@@136 $generated@@649 ($generated@@522 $generated@@650)) (forall (($generated@@651 Int) ) (!  (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@293 $generated@@649))) ($generated@@224 ($generated@@523 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@523 $generated@@649 $generated@@651))
))))
 :pattern ( ($generated@@136 $generated@@649 ($generated@@522 $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@294 $generated@@149)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@293 $generated@@653))) (< ($generated@@564 ($generated@@392 $generated@@140 ($generated@@523 $generated@@653 $generated@@654))) ($generated@@652 $generated@@653))))
 :pattern ( ($generated@@564 ($generated@@392 $generated@@140 ($generated@@523 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@656) $generated@@68)) (= (type $generated@@657) $generated@@68)) ($generated@@136 $generated@@655 ($generated@@427 $generated@@656 $generated@@657))) (and (and ($generated@@136 ($generated@@315 $generated@@655) ($generated@@244 $generated@@656)) ($generated@@136 ($generated@@358 $generated@@655) ($generated@@244 $generated@@657))) ($generated@@136 ($generated@@391 $generated@@655) ($generated@@244 ($generated@@139 $generated@@656 $generated@@657)))))
 :pattern ( ($generated@@136 $generated@@655 ($generated@@427 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@335 $generated@@149 $generated@@149)) (= (type $generated@@659) $generated@@68)) (= (type $generated@@660) $generated@@68)) ($generated@@136 $generated@@658 ($generated@@435 $generated@@659 $generated@@660))) (and (and ($generated@@136 ($generated@@333 $generated@@658) ($generated@@249 $generated@@659)) ($generated@@136 ($generated@@369 $generated@@658) ($generated@@249 $generated@@660))) ($generated@@136 ($generated@@402 $generated@@658) ($generated@@249 ($generated@@139 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@136 $generated@@658 ($generated@@435 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@2) ($generated@@136 $generated@@661 $generated@@46))
 :pattern ( ($generated@@136 $generated@@661 $generated@@46))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@3) ($generated@@136 $generated@@662 $generated@@47))
 :pattern ( ($generated@@136 $generated@@662 $generated@@47))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@4) ($generated@@136 $generated@@663 $generated@@44))
 :pattern ( ($generated@@136 $generated@@663 $generated@@44))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@469) ($generated@@136 $generated@@664 $generated@@45))
 :pattern ( ($generated@@136 $generated@@664 $generated@@45))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@149) ($generated@@136 $generated@@665 $generated@@48))
 :pattern ( ($generated@@136 $generated@@665 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@666) ($generated@@164 $generated@@81 $generated@@4)) (= (type $generated@@667) $generated@@81)) (= (type $generated@@668) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@669) $generated@@140)) (= (type $generated@@670) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@672  (=> (and (= $generated@@666 ($generated@@163 $generated@@667 $generated@@668 $generated@@60 false)) ($generated@@379 $generated@@669)) (=> (and (and (and ($generated@@219 $generated@@670) ($generated@@671 $generated@@670)) (= $generated@@668 $generated@@670)) (and (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@140) (=> (and (and ($generated@@136 $generated@@673 ($generated@@218 $generated@@46)) ($generated@@0 ($generated@@256 ($generated@@11 true)))) (< ($generated@@564 $generated@@673) ($generated@@564 $generated@@669))) ($generated@@234 ($generated@@264 ($generated@@420 $generated@@518) ($generated@@264 ($generated@@420 $generated@@518) $generated@@673)) $generated@@673)))
 :no-pattern (type $generated@@673)
 :no-pattern ($generated $generated@@673)
 :no-pattern ($generated@@0 $generated@@673)
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@234 ($generated@@264 ($generated@@420 ($generated@@420 $generated@@518)) ($generated@@264 ($generated@@420 ($generated@@420 $generated@@518)) $generated@@669)) $generated@@669)))))
(let (($generated@@674  (=> (and ($generated@@219 $generated@@668) ($generated@@671 $generated@@668)) (=> (and (and (and ($generated@@136 $generated@@669 ($generated@@218 $generated@@46)) ($generated@@78 $generated@@669 ($generated@@218 $generated@@46) $generated@@668)) ($generated@@379 $generated@@669)) (and (= 2 $generated@@263) (= (ControlFlow 0 3) 2))) $generated@@672))))
$generated@@674)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (Int) Int)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) Bool)
(declare-fun $generated@@107 (Int) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@113 (T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@U T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@198 (T@T T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@272 (T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@301 (T@U T@U) T@U)
(declare-fun $generated@@302 (T@U) Bool)
(declare-fun $generated@@307 (T@U T@U) T@U)
(declare-fun $generated@@313 (T@U T@U T@U) Bool)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@329 (T@U) Int)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@349 (T@U) Int)
(declare-fun $generated@@350 (T@T) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@T) T@U)
(declare-fun $generated@@378 (T@T T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@380 (T@T) T@T)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@423 (T@U) Bool)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@466 (T@U T@U) T@U)
(declare-fun $generated@@474 (T@U T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 () T@U)
(declare-fun $generated@@491 (T@T) T@U)
(declare-fun $generated@@515 () T@T)
(declare-fun $generated@@527 (T@U T@U) Int)
(declare-fun $generated@@528 (T@U) Bool)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@579 (T@U Int) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@619 (T@U) Int)
(declare-fun $generated@@620 (T@U) Int)
(declare-fun $generated@@717 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@80 $generated@@92)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@85 $generated@@93)) $generated@@70)
 :pattern ( ($generated@@85 $generated@@93))
))) (forall (($generated@@94 T@U) ) (! (= (type ($generated@@87 $generated@@94)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@U) ) (! (= (type ($generated@@88 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@88 $generated@@95 $generated@@96))
))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@97 T@U) ) (! (= (type ($generated@@89 $generated@@97)) $generated@@91)
 :pattern ( ($generated@@89 $generated@@97))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@98) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
(let (($generated@@101 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
 (=> (<= $generated@@101 ($generated@@90 0)) ($generated@@83 $generated@@100))))) (= ($generated@@79 ($generated@@80 $generated@@98) $generated@@99) (ite ($generated@@86 $generated@@99) true (let (($generated@@102 ($generated@@87 $generated@@99)))
(let (($generated@@103 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
 (and (<= $generated@@103 ($generated@@90 0)) ($generated@@79 $generated@@98 $generated@@102))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@98) $generated@@99))
))))
(assert (forall (($generated@@105 T@U) ) (! (= (type ($generated@@104 $generated@@105)) $generated@@71)
 :pattern ( ($generated@@104 $generated@@105))
)))
(assert (= ($generated@@104 $generated@@44) $generated@@49))
(assert (= ($generated@@104 $generated@@45) $generated@@50))
(assert (= ($generated@@104 $generated@@46) $generated@@51))
(assert (= ($generated@@104 $generated@@47) $generated@@52))
(assert (= ($generated@@104 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@117 $generated@@118)) 14)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@111 ($generated@@108 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@108 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (! (= ($generated@@112 ($generated@@108 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@108 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@112 (type $generated@@123))))
(= (type ($generated@@113 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@113 $generated@@123 $generated@@124))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 (type $generated@@128)))
(let (($generated@@130 (type $generated@@127)))
(= (type ($generated@@114 $generated@@126 $generated@@127 $generated@@128)) ($generated@@108 $generated@@130 $generated@@129))))
 :pattern ( ($generated@@114 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@112 (type $generated@@131))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@113 ($generated@@114 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@113 ($generated@@114 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@113 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@113 ($generated@@114 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@113 $generated@@140 $generated@@142)))
 :weight 0
)))) (= ($generated@@1 $generated@@109) 15)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (let (($generated@@145 ($generated@@73 (type $generated@@144))))
(= (type ($generated@@115 $generated@@143 $generated@@144)) $generated@@145))
 :pattern ( ($generated@@115 $generated@@143 $generated@@144))
))) (= ($generated@@1 $generated@@110) 16)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@116 $generated@@146 $generated@@147 $generated@@148)) $generated@@110)
 :pattern ( ($generated@@116 $generated@@146 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 ($generated@@73 (type $generated@@150))))
 (=> (= (type $generated@@151) $generated@@152) (= ($generated@@115 ($generated@@116 $generated@@149 $generated@@150 $generated@@151) $generated@@150) $generated@@151)))
 :weight 0
))) (and (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@155 $generated@@156) (= ($generated@@115 ($generated@@116 $generated@@154 $generated@@155 $generated@@153) $generated@@156) ($generated@@115 $generated@@154 $generated@@156)))
 :weight 0
)) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or true (= ($generated@@115 ($generated@@116 $generated@@158 $generated@@159 $generated@@157) $generated@@160) ($generated@@115 $generated@@158 $generated@@160)))
 :weight 0
)))) (forall (($generated@@161 Int) ) (! (= (type ($generated@@107 $generated@@161)) $generated@@70)
 :pattern ( ($generated@@107 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@2) (= (type $generated@@163) ($generated@@108 $generated@@109 $generated@@110))) ($generated@@106 $generated@@162 ($generated@@107 0) $generated@@163))
 :pattern ( ($generated@@106 $generated@@162 ($generated@@107 0) $generated@@163))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@81) (= (type $generated@@167) $generated@@82)) (or ($generated@@165 $generated@@167) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@167 ($generated@@85 $generated@@46))))) true)
 :pattern ( ($generated@@164 $generated@@166 $generated@@167))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@81) (= (type $generated@@169) $generated@@82)) (or ($generated@@83 $generated@@169) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@169 ($generated@@85 $generated@@46))))) true)
 :pattern ( ($generated@@79 $generated@@168 $generated@@169))
))))
(assert (= (type $generated@@170) $generated@@70))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@2) (= (type $generated@@172) ($generated@@108 $generated@@109 $generated@@110))) ($generated@@106 $generated@@171 $generated@@170 $generated@@172))
 :pattern ( ($generated@@106 $generated@@171 $generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@2) ($generated@@84 $generated@@173 ($generated@@107 0)))
 :pattern ( ($generated@@84 $generated@@173 ($generated@@107 0)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@176 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@70) (= (type $generated@@179) $generated@@70)) (= (type $generated@@180) $generated@@82)) ($generated@@84 $generated@@180 ($generated@@175 $generated@@178 $generated@@179))) ($generated@@174 $generated@@180))
 :pattern ( ($generated@@174 $generated@@180) ($generated@@84 $generated@@180 ($generated@@175 $generated@@178 $generated@@179)))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@91)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@91)
 :pattern ( ($generated@@183 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@82) (= (type $generated@@187) $generated@@82)) true) (= ($generated@@181 $generated@@186 $generated@@187)  (and (= ($generated@@182 $generated@@186) ($generated@@182 $generated@@187)) (= ($generated@@183 $generated@@186) ($generated@@183 $generated@@187)))))
 :pattern ( ($generated@@181 $generated@@186 $generated@@187))
)))
(assert  (and (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@74)
 :pattern ( ($generated@@188 $generated@@190))
)) (= (type $generated@@189) $generated@@82)))
(assert (= ($generated@@188 $generated@@189) $generated@@64))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@70)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) ($generated@@108 $generated@@91 $generated@@2)) (= (type $generated@@195) $generated@@70)) ($generated@@84 $generated@@194 ($generated@@191 $generated@@195))) ($generated@@192 $generated@@194))
 :pattern ( ($generated@@84 $generated@@194 ($generated@@191 $generated@@195)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@202 $generated@@203)) 17)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@200 ($generated@@198 $generated@@206 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@198 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@200 (type $generated@@208))))
(= (type ($generated@@196 $generated@@208 $generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@196 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(let (($generated@@217 (type $generated@@213)))
(= (type ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@198 $generated@@217 $generated@@216))))
 :pattern ( ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@200 (type $generated@@218))))
 (=> (= (type $generated@@221) $generated@@222) (= ($generated@@196 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@219 $generated@@220) $generated@@221)))
 :weight 0
))) (and (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@196 ($generated@@201 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@196 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@196 ($generated@@201 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@196 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or true (= ($generated@@196 ($generated@@201 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@196 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@198 $generated@@109 $generated@@4))
 :pattern ( ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@73 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@109) (= (type $generated@@246) ($generated@@108 $generated@@109 $generated@@110))) (= (type $generated@@247) ($generated@@72 $generated@@4))) (= (type $generated@@249) $generated@@109)) (= (type $generated@@250) ($generated@@72 $generated@@251))) (= ($generated@@0 ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@115 ($generated@@113 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) $generated@@81) (= (type $generated@@253) $generated@@82)) (or ($generated@@165 $generated@@253) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@253 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@253)) (let (($generated@@254 ($generated@@87 $generated@@253)))
(let (($generated@@255 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@253)))))
 (=> (<= ($generated@@90 0) $generated@@255) ($generated@@165 $generated@@254))))) (= ($generated@@164 ($generated@@80 $generated@@252) $generated@@253) (ite ($generated@@86 $generated@@253) true (let (($generated@@256 ($generated@@87 $generated@@253)))
(let (($generated@@257 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@253)))))
 (and (<= ($generated@@90 0) $generated@@257) ($generated@@164 $generated@@252 $generated@@256))))))))
 :pattern ( ($generated@@164 ($generated@@80 $generated@@252) $generated@@253))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (= (type $generated@@259) $generated@@70) (= (type $generated@@260) ($generated@@108 $generated@@109 $generated@@110))) ($generated@@258 $generated@@260)) ($generated@@106 $generated@@189 ($generated@@85 $generated@@259) $generated@@260))
 :pattern ( ($generated@@106 $generated@@189 ($generated@@85 $generated@@259) $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (= (type ($generated@@261 $generated@@263 $generated@@264)) $generated@@82)
 :pattern ( ($generated@@261 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (= (type $generated@@265) $generated@@70) (= (type $generated@@266) $generated@@70)) (= (type $generated@@267) $generated@@91)) (= (type $generated@@268) $generated@@91)) (= ($generated@@84 ($generated@@261 $generated@@267 $generated@@268) ($generated@@175 $generated@@265 $generated@@266))  (and ($generated@@262 $generated@@267 $generated@@265) ($generated@@262 $generated@@268 $generated@@266))))
 :pattern ( ($generated@@84 ($generated@@261 $generated@@267 $generated@@268) ($generated@@175 $generated@@265 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@70) ($generated@@84 $generated@@189 ($generated@@85 $generated@@269)))
 :pattern ( ($generated@@84 $generated@@189 ($generated@@85 $generated@@269)))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@82) (= (type $generated@@271) $generated@@82)) (= ($generated@@181 $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@181 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@82) (= (type $generated@@274) $generated@@82)) (= ($generated@@272 $generated@@273 $generated@@274) (= $generated@@273 $generated@@274)))
 :pattern ( ($generated@@272 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (= (type $generated@@276) $generated@@82) (= (type $generated@@277) $generated@@82)) (and ($generated@@275 $generated@@276) ($generated@@275 $generated@@277))) (= ($generated@@272 $generated@@276 $generated@@277)  (and (= ($generated@@89 $generated@@276) ($generated@@89 $generated@@277)) ($generated@@272 ($generated@@87 $generated@@276) ($generated@@87 $generated@@277)))))
 :pattern ( ($generated@@272 $generated@@276 $generated@@277) ($generated@@275 $generated@@276))
 :pattern ( ($generated@@272 $generated@@276 $generated@@277) ($generated@@275 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (= (type $generated@@281) $generated@@81) (= (type $generated@@282) $generated@@82)) (or ($generated@@83 ($generated@@278 $generated@@282)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@282 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@86 ($generated@@278 $generated@@282)))))) (let (($generated@@283 ($generated@@278 ($generated@@87 ($generated@@278 $generated@@282)))))
(let (($generated@@284 ($generated@@90 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@278 $generated@@282)))))))
 (=> (<= $generated@@284 ($generated@@90 0)) ($generated@@83 $generated@@283))))) (= ($generated@@79 ($generated@@80 $generated@@281) ($generated@@278 $generated@@282)) (ite ($generated@@86 ($generated@@278 $generated@@282)) true (let (($generated@@285 ($generated@@278 ($generated@@87 ($generated@@278 $generated@@282)))))
(let (($generated@@286 ($generated@@90 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@278 $generated@@282)))))))
 (and (<= $generated@@286 ($generated@@90 0)) ($generated@@79 ($generated@@80 $generated@@281) $generated@@285))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@281) ($generated@@278 $generated@@282)))
))))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@70)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) ($generated@@108 $generated@@91 $generated@@4)) (= (type $generated@@290) $generated@@70)) (= ($generated@@84 $generated@@289 ($generated@@287 $generated@@290)) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@91) ($generated@@0 ($generated@@113 $generated@@289 $generated@@291))) ($generated@@262 $generated@@291 $generated@@290))
 :pattern ( ($generated@@113 $generated@@289 $generated@@291))
))))
 :pattern ( ($generated@@84 $generated@@289 ($generated@@287 $generated@@290)))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@70)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) ($generated@@108 $generated@@91 $generated@@4)) (= (type $generated@@295) $generated@@70)) (= ($generated@@84 $generated@@294 ($generated@@292 $generated@@295)) (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@91) ($generated@@0 ($generated@@113 $generated@@294 $generated@@296))) ($generated@@262 $generated@@296 $generated@@295))
 :pattern ( ($generated@@113 $generated@@294 $generated@@296))
))))
 :pattern ( ($generated@@84 $generated@@294 ($generated@@292 $generated@@295)))
)))
(assert (forall (($generated@@297 Int) ) (! (= ($generated@@90 $generated@@297) $generated@@297)
 :pattern ( ($generated@@90 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (= ($generated@@278 $generated@@298) $generated@@298)
 :pattern ( ($generated@@278 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (= (type $generated@@299) $generated@@82) (= (type $generated@@300) $generated@@82)) (and ($generated@@86 $generated@@299) ($generated@@86 $generated@@300))) (= ($generated@@272 $generated@@299 $generated@@300) true))
 :pattern ( ($generated@@272 $generated@@299 $generated@@300) ($generated@@86 $generated@@299))
 :pattern ( ($generated@@272 $generated@@299 $generated@@300) ($generated@@86 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (= (type ($generated@@301 $generated@@303 $generated@@304)) $generated@@82)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (= (type $generated@@305) $generated@@81) (= (type $generated@@306) $generated@@82)) (or ($generated@@302 $generated@@306) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@306 ($generated@@85 $generated@@46))))) ($generated@@84 ($generated@@301 $generated@@305 $generated@@306) ($generated@@85 $generated@@46)))
 :pattern ( ($generated@@301 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (= (type ($generated@@307 $generated@@308 $generated@@309)) $generated@@82)
 :pattern ( ($generated@@307 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (= (type $generated@@310) $generated@@70) (= (type $generated@@311) $generated@@91)) (= (type $generated@@312) $generated@@82)) (= ($generated@@84 ($generated@@307 $generated@@311 $generated@@312) ($generated@@85 $generated@@310))  (and ($generated@@262 $generated@@311 $generated@@310) ($generated@@84 $generated@@312 ($generated@@85 $generated@@310)))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@311 $generated@@312) ($generated@@85 $generated@@310)))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@314) $generated@@70) (= (type $generated@@315) $generated@@70)) (= (type $generated@@316) $generated@@91)) (= (type $generated@@317) $generated@@91)) (= (type $generated@@318) ($generated@@108 $generated@@109 $generated@@110))) ($generated@@258 $generated@@318)) (= ($generated@@106 ($generated@@261 $generated@@316 $generated@@317) ($generated@@175 $generated@@314 $generated@@315) $generated@@318)  (and ($generated@@313 $generated@@316 $generated@@314 $generated@@318) ($generated@@313 $generated@@317 $generated@@315 $generated@@318))))
 :pattern ( ($generated@@106 ($generated@@261 $generated@@316 $generated@@317) ($generated@@175 $generated@@314 $generated@@315) $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@82) (= ($generated@@174 $generated@@319) (= ($generated@@188 $generated@@319) $generated@@62)))
 :pattern ( ($generated@@174 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@82) (= ($generated@@86 $generated@@320) (= ($generated@@188 $generated@@320) $generated@@64)))
 :pattern ( ($generated@@86 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@82) (= ($generated@@275 $generated@@321) (= ($generated@@188 $generated@@321) $generated@@66)))
 :pattern ( ($generated@@275 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@82) ($generated@@174 $generated@@322)) (exists (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (and (and (= (type $generated@@323) $generated@@91) (= (type $generated@@324) $generated@@91)) (= $generated@@322 ($generated@@261 $generated@@323 $generated@@324)))
 :no-pattern (type $generated@@323)
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
)))
 :pattern ( ($generated@@174 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@82) ($generated@@275 $generated@@325)) (exists (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (and (and (= (type $generated@@326) $generated@@91) (= (type $generated@@327) $generated@@82)) (= $generated@@325 ($generated@@307 $generated@@326 $generated@@327)))
 :no-pattern (type $generated@@326)
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
)))
 :pattern ( ($generated@@275 $generated@@325))
)))
(assert  (and (and (forall (($generated@@332 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@332)) 18)) (forall (($generated@@333 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@330 $generated@@333))
))) (forall (($generated@@334 T@T) ) (! (= (type ($generated@@328 $generated@@334)) ($generated@@330 $generated@@334))
 :pattern ( ($generated@@328 $generated@@334))
))))
(assert (forall (($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@335)) 0)
 :pattern ( ($generated@@328 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@82) ($generated@@86 $generated@@336)) (= $generated@@336 $generated@@189))
 :pattern ( ($generated@@86 $generated@@336))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@337) $generated@@81) (= (type $generated@@338) $generated@@82)) (or ($generated@@165 ($generated@@278 $generated@@338)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@338 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@86 ($generated@@278 $generated@@338)))))) (let (($generated@@339 ($generated@@278 ($generated@@87 ($generated@@278 $generated@@338)))))
(let (($generated@@340 ($generated@@90 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@278 $generated@@338)))))))
 (=> (<= ($generated@@90 0) $generated@@340) ($generated@@165 $generated@@339))))) (= ($generated@@164 ($generated@@80 $generated@@337) ($generated@@278 $generated@@338)) (ite ($generated@@86 ($generated@@278 $generated@@338)) true (let (($generated@@341 ($generated@@278 ($generated@@87 ($generated@@278 $generated@@338)))))
(let (($generated@@342 ($generated@@90 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@278 $generated@@338)))))))
 (and (<= ($generated@@90 0) $generated@@342) ($generated@@164 ($generated@@80 $generated@@337) $generated@@341))))))))
 :weight 3
 :pattern ( ($generated@@164 ($generated@@80 $generated@@337) ($generated@@278 $generated@@338)))
))))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@2) (= ($generated@@84 $generated@@343 $generated@@170) (<= ($generated@@90 0) ($generated $generated@@343))))
 :pattern ( ($generated@@84 $generated@@343 $generated@@170))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@91)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@70) (= (type $generated@@348) ($generated@@108 $generated@@109 $generated@@110))) (= ($generated@@313 ($generated@@344 $generated@@346) $generated@@347 $generated@@348) ($generated@@106 $generated@@346 $generated@@347 $generated@@348)))
 :pattern ( ($generated@@313 ($generated@@344 $generated@@346) $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@351 T@T) ) (! (= (type ($generated@@350 $generated@@351)) ($generated@@108 $generated@@351 $generated@@2))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@111 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@108 $generated@@353 $generated@@2)) (and (= (= ($generated@@349 $generated@@352) 0) (= $generated@@352 ($generated@@350 $generated@@353))) (=> (not (= ($generated@@349 $generated@@352) 0)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) (< 0 ($generated ($generated@@113 $generated@@352 $generated@@354))))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@75)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@70) (and (= ($generated@@104 ($generated@@85 $generated@@357)) $generated@@65) (= ($generated@@355 ($generated@@85 $generated@@357)) $generated@@69)))
 :pattern ( ($generated@@85 $generated@@357))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 19)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@108 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@113 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@113 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert  (and (and (and (and (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (= ($generated@@1 ($generated@@378 $generated@@381 $generated@@382)) 20)) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= ($generated@@379 ($generated@@378 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@378 $generated@@383 $generated@@384))
))) (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (! (= ($generated@@380 ($generated@@378 $generated@@385 $generated@@386)) $generated@@386)
 :pattern ( ($generated@@378 $generated@@385 $generated@@386))
))) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@379 (type $generated@@387))))
(= (type ($generated@@376 $generated@@387)) ($generated@@108 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@387))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= (type ($generated@@377 $generated@@389 $generated@@390)) ($generated@@378 $generated@@389 $generated@@390))
 :pattern ( ($generated@@377 $generated@@389 $generated@@390))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@T) ) (! (let (($generated@@393 (type $generated@@391)))
 (not ($generated@@0 ($generated@@113 ($generated@@376 ($generated@@377 $generated@@393 $generated@@392)) $generated@@391))))
 :pattern ( (let (($generated@@393 (type $generated@@391)))
($generated@@113 ($generated@@376 ($generated@@377 $generated@@393 $generated@@392)) $generated@@391)))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@111 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@108 $generated@@395 $generated@@2)) (= ($generated@@192 $generated@@394) (forall (($generated@@396 T@U) ) (!  (=> (= (type $generated@@396) $generated@@395) (and (<= 0 ($generated ($generated@@113 $generated@@394 $generated@@396))) (<= ($generated ($generated@@113 $generated@@394 $generated@@396)) ($generated@@349 $generated@@394))))
 :pattern ( ($generated@@113 $generated@@394 $generated@@396))
)))))
 :pattern ( ($generated@@192 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@91) ($generated@@262 $generated@@397 $generated@@170)) (and (= ($generated@@344 ($generated@@88 $generated@@2 $generated@@397)) $generated@@397) ($generated@@84 ($generated@@88 $generated@@2 $generated@@397) $generated@@170)))
 :pattern ( ($generated@@262 $generated@@397 $generated@@170))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@362 (type $generated@@398))))
(let (($generated@@400 ($generated@@361 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@360 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@359 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@113 ($generated@@358 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@358 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@362 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@108 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@362 (type $generated@@405))))
(let (($generated@@407 ($generated@@361 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@360 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@359 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@113 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@380 (type $generated@@409))))
(let (($generated@@411 ($generated@@379 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@378 $generated@@411 $generated@@410)) (or (= $generated@@409 ($generated@@377 $generated@@411 $generated@@410)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) ($generated@@0 ($generated@@113 ($generated@@376 $generated@@409) $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@376 $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@380 (type $generated@@414))))
(= (type ($generated@@413 $generated@@414)) ($generated@@108 $generated@@415 $generated@@4)))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@380 (type $generated@@416))))
(let (($generated@@418 ($generated@@379 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@378 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@377 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@417) ($generated@@0 ($generated@@113 ($generated@@413 $generated@@416) $generated@@419)))
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@413 $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@108 $generated@@91 $generated@@2)) (= (type $generated@@421) $generated@@70)) (= ($generated@@84 $generated@@420 ($generated@@191 $generated@@421)) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@91) (< 0 ($generated ($generated@@113 $generated@@420 $generated@@422)))) ($generated@@262 $generated@@422 $generated@@421))
 :pattern ( ($generated@@113 $generated@@420 $generated@@422))
))))
 :pattern ( ($generated@@84 $generated@@420 ($generated@@191 $generated@@421)))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@82) ($generated@@423 $generated@@424)) (or ($generated@@86 $generated@@424) ($generated@@275 $generated@@424)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (= (type $generated@@425) ($generated@@108 $generated@@91 $generated@@4)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) ($generated@@108 $generated@@109 $generated@@110))) (= ($generated@@106 $generated@@425 ($generated@@287 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@91) ($generated@@0 ($generated@@113 $generated@@425 $generated@@428))) ($generated@@313 $generated@@428 $generated@@426 $generated@@427))
 :pattern ( ($generated@@113 $generated@@425 $generated@@428))
))))
 :pattern ( ($generated@@106 $generated@@425 ($generated@@287 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@108 $generated@@91 $generated@@4)) (= (type $generated@@430) $generated@@70)) (= (type $generated@@431) ($generated@@108 $generated@@109 $generated@@110))) (= ($generated@@106 $generated@@429 ($generated@@292 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@91) ($generated@@0 ($generated@@113 $generated@@429 $generated@@432))) ($generated@@313 $generated@@432 $generated@@430 $generated@@431))
 :pattern ( ($generated@@113 $generated@@429 $generated@@432))
))))
 :pattern ( ($generated@@106 $generated@@429 ($generated@@292 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(= ($generated ($generated@@113 ($generated@@350 $generated@@434) $generated@@433)) 0))
 :pattern ( (let (($generated@@434 (type $generated@@433)))
($generated@@113 ($generated@@350 $generated@@434) $generated@@433)))
)))
(assert  (and (forall (($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@437)) ($generated@@108 $generated@@91 $generated@@4))
 :pattern ( ($generated@@435 $generated@@437))
)) (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@362 (type $generated@@438))))
(let (($generated@@440 ($generated@@361 (type $generated@@438))))
(= (type ($generated@@436 $generated@@438)) ($generated@@108 $generated@@440 $generated@@439))))
 :pattern ( ($generated@@436 $generated@@438))
))))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@360 $generated@@91 $generated@@91)) (= (type $generated@@442) $generated@@91)) (= ($generated@@0 ($generated@@113 ($generated@@435 $generated@@441) $generated@@442))  (and ($generated@@0 ($generated@@113 ($generated@@358 $generated@@441) ($generated@@182 ($generated@@88 $generated@@82 $generated@@442)))) (= ($generated@@113 ($generated@@436 $generated@@441) ($generated@@182 ($generated@@88 $generated@@82 $generated@@442))) ($generated@@183 ($generated@@88 $generated@@82 $generated@@442))))))
 :pattern ( ($generated@@113 ($generated@@435 $generated@@441) $generated@@442))
)))
(assert  (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@445)) ($generated@@108 $generated@@91 $generated@@4))
 :pattern ( ($generated@@443 $generated@@445))
)) (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@380 (type $generated@@446))))
(let (($generated@@448 ($generated@@379 (type $generated@@446))))
(= (type ($generated@@444 $generated@@446)) ($generated@@108 $generated@@448 $generated@@447))))
 :pattern ( ($generated@@444 $generated@@446))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@378 $generated@@91 $generated@@91)) (= (type $generated@@450) $generated@@91)) (= ($generated@@0 ($generated@@113 ($generated@@443 $generated@@449) $generated@@450))  (and ($generated@@0 ($generated@@113 ($generated@@376 $generated@@449) ($generated@@182 ($generated@@88 $generated@@82 $generated@@450)))) (= ($generated@@113 ($generated@@444 $generated@@449) ($generated@@182 ($generated@@88 $generated@@82 $generated@@450))) ($generated@@183 ($generated@@88 $generated@@82 $generated@@450))))))
 :pattern ( ($generated@@113 ($generated@@443 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(let (($generated@@454 ($generated@@361 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@360 $generated@@454 $generated@@453)) (= ($generated@@0 ($generated@@113 ($generated@@402 $generated@@451) $generated@@452)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@454) (and ($generated@@0 ($generated@@113 ($generated@@358 $generated@@451) $generated@@455)) (= $generated@@452 ($generated@@113 ($generated@@436 $generated@@451) $generated@@455))))
 :pattern ( ($generated@@113 ($generated@@358 $generated@@451) $generated@@455))
 :pattern ( ($generated@@113 ($generated@@436 $generated@@451) $generated@@455))
))))))
 :pattern ( ($generated@@113 ($generated@@402 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
(let (($generated@@459 ($generated@@379 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@378 $generated@@459 $generated@@458)) (= ($generated@@0 ($generated@@113 ($generated@@413 $generated@@456) $generated@@457)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@459) (and ($generated@@0 ($generated@@113 ($generated@@376 $generated@@456) $generated@@460)) (= $generated@@457 ($generated@@113 ($generated@@444 $generated@@456) $generated@@460))))
 :pattern ( ($generated@@113 ($generated@@376 $generated@@456) $generated@@460))
 :pattern ( ($generated@@113 ($generated@@444 $generated@@456) $generated@@460))
))))))
 :pattern ( ($generated@@113 ($generated@@413 $generated@@456) $generated@@457))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@461) $generated@@81) (= (type $generated@@462) $generated@@82)) (or ($generated@@302 ($generated@@278 $generated@@462)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@462 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@86 ($generated@@278 $generated@@462)))))) (let (($generated@@463 ($generated@@278 ($generated@@87 ($generated@@278 $generated@@462)))))
($generated@@302 $generated@@463))) (= ($generated@@301 ($generated@@80 $generated@@461) ($generated@@278 $generated@@462)) (ite ($generated@@86 ($generated@@278 $generated@@462)) $generated@@189 (let (($generated@@464 ($generated@@278 ($generated@@87 ($generated@@278 $generated@@462)))))
(let (($generated@@465 ($generated@@90 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@278 $generated@@462)))))))
($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 $generated@@465)))) ($generated@@278 ($generated@@301 ($generated@@80 $generated@@461) $generated@@464))))))))))
 :weight 3
 :pattern ( ($generated@@301 ($generated@@80 $generated@@461) ($generated@@278 $generated@@462)))
))))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@466 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (and (= (type $generated@@469) ($generated@@360 $generated@@91 $generated@@91)) (= (type $generated@@470) $generated@@70)) (= (type $generated@@471) $generated@@70)) (= (type $generated@@472) ($generated@@108 $generated@@109 $generated@@110))) (= ($generated@@106 $generated@@469 ($generated@@466 $generated@@470 $generated@@471) $generated@@472) (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@91) ($generated@@0 ($generated@@113 ($generated@@358 $generated@@469) $generated@@473))) (and ($generated@@313 ($generated@@113 ($generated@@436 $generated@@469) $generated@@473) $generated@@471 $generated@@472) ($generated@@313 $generated@@473 $generated@@470 $generated@@472)))
 :pattern ( ($generated@@113 ($generated@@436 $generated@@469) $generated@@473))
 :pattern ( ($generated@@113 ($generated@@358 $generated@@469) $generated@@473))
))))
 :pattern ( ($generated@@106 $generated@@469 ($generated@@466 $generated@@470 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (and (= (type $generated@@477) ($generated@@378 $generated@@91 $generated@@91)) (= (type $generated@@478) $generated@@70)) (= (type $generated@@479) $generated@@70)) (= (type $generated@@480) ($generated@@108 $generated@@109 $generated@@110))) (= ($generated@@106 $generated@@477 ($generated@@474 $generated@@478 $generated@@479) $generated@@480) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@91) ($generated@@0 ($generated@@113 ($generated@@376 $generated@@477) $generated@@481))) (and ($generated@@313 ($generated@@113 ($generated@@444 $generated@@477) $generated@@481) $generated@@479 $generated@@480) ($generated@@313 $generated@@481 $generated@@478 $generated@@480)))
 :pattern ( ($generated@@113 ($generated@@444 $generated@@477) $generated@@481))
 :pattern ( ($generated@@113 ($generated@@376 $generated@@477) $generated@@481))
))))
 :pattern ( ($generated@@106 $generated@@477 ($generated@@474 $generated@@478 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@82)) ($generated@@84 $generated@@483 ($generated@@85 $generated@@482))) (or ($generated@@86 $generated@@483) ($generated@@275 $generated@@483)))
 :pattern ( ($generated@@275 $generated@@483) ($generated@@84 $generated@@483 ($generated@@85 $generated@@482)))
 :pattern ( ($generated@@86 $generated@@483) ($generated@@84 $generated@@483 ($generated@@85 $generated@@482)))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) $generated@@81)
 :pattern ( ($generated@@484 $generated@@486))
)) (= (type $generated@@485) $generated@@81)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@81) (= (type $generated@@488) $generated@@82)) (= ($generated@@164 $generated@@487 $generated@@488) ($generated@@164 $generated@@485 $generated@@488)))
 :pattern ( ($generated@@164 ($generated@@484 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@81) (= (type $generated@@490) $generated@@82)) (= ($generated@@79 $generated@@489 $generated@@490) ($generated@@79 $generated@@485 $generated@@490)))
 :pattern ( ($generated@@79 ($generated@@484 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@492 T@T) ) (! (= (type ($generated@@491 $generated@@492)) ($generated@@108 $generated@@492 $generated@@4))
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@380 (type $generated@@493))))
(let (($generated@@495 ($generated@@379 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@378 $generated@@495 $generated@@494)) (= (= $generated@@493 ($generated@@377 $generated@@495 $generated@@494)) (= ($generated@@376 $generated@@493) ($generated@@491 $generated@@495))))))
 :pattern ( ($generated@@376 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@380 (type $generated@@496))))
(let (($generated@@498 ($generated@@379 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@378 $generated@@498 $generated@@497)) (= (= $generated@@496 ($generated@@377 $generated@@498 $generated@@497)) (= ($generated@@413 $generated@@496) ($generated@@491 $generated@@497))))))
 :pattern ( ($generated@@413 $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@380 (type $generated@@499))))
(let (($generated@@501 ($generated@@379 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@378 $generated@@501 $generated@@500)) (= (= $generated@@499 ($generated@@377 $generated@@501 $generated@@500)) (= ($generated@@443 $generated@@499) ($generated@@491 $generated@@91))))))
 :pattern ( ($generated@@443 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@362 (type $generated@@502))))
(let (($generated@@504 ($generated@@361 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@360 $generated@@504 $generated@@503)) (or (= $generated@@502 ($generated@@359 $generated@@504 $generated@@503)) (exists (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (and (and (= (type $generated@@505) $generated@@91) (= (type $generated@@506) $generated@@91)) ($generated@@0 ($generated@@113 ($generated@@435 $generated@@502) ($generated@@344 ($generated@@261 $generated@@505 $generated@@506)))))
 :no-pattern (type $generated@@505)
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
))))))
 :pattern ( ($generated@@435 $generated@@502))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@380 (type $generated@@507))))
(let (($generated@@509 ($generated@@379 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@378 $generated@@509 $generated@@508)) (or (= $generated@@507 ($generated@@377 $generated@@509 $generated@@508)) (exists (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (and (and (= (type $generated@@510) $generated@@91) (= (type $generated@@511) $generated@@91)) ($generated@@0 ($generated@@113 ($generated@@443 $generated@@507) ($generated@@344 ($generated@@261 $generated@@510 $generated@@511)))))
 :no-pattern (type $generated@@510)
 :no-pattern (type $generated@@511)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
 :no-pattern ($generated $generated@@511)
 :no-pattern ($generated@@0 $generated@@511)
))))))
 :pattern ( ($generated@@443 $generated@@507))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@91) ($generated@@262 $generated@@512 $generated@@46)) (and (= ($generated@@344 ($generated@@88 $generated@@2 $generated@@512)) $generated@@512) ($generated@@84 ($generated@@88 $generated@@2 $generated@@512) $generated@@46)))
 :pattern ( ($generated@@262 $generated@@512 $generated@@46))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@91) ($generated@@262 $generated@@513 $generated@@47)) (and (= ($generated@@344 ($generated@@88 $generated@@3 $generated@@513)) $generated@@513) ($generated@@84 ($generated@@88 $generated@@3 $generated@@513) $generated@@47)))
 :pattern ( ($generated@@262 $generated@@513 $generated@@47))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@91) ($generated@@262 $generated@@514 $generated@@44)) (and (= ($generated@@344 ($generated@@88 $generated@@4 $generated@@514)) $generated@@514) ($generated@@84 ($generated@@88 $generated@@4 $generated@@514) $generated@@44)))
 :pattern ( ($generated@@262 $generated@@514 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@515) 21))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@91) ($generated@@262 $generated@@516 $generated@@45)) (and (= ($generated@@344 ($generated@@88 $generated@@515 $generated@@516)) $generated@@516) ($generated@@84 ($generated@@88 $generated@@515 $generated@@516) $generated@@45)))
 :pattern ( ($generated@@262 $generated@@516 $generated@@45))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@81) (= (type $generated@@518) $generated@@82)) (= ($generated@@164 ($generated@@80 $generated@@517) $generated@@518) ($generated@@164 $generated@@517 $generated@@518)))
 :pattern ( ($generated@@164 ($generated@@80 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@81) (= (type $generated@@520) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@519) $generated@@520) ($generated@@79 $generated@@519 $generated@@520)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@262 ($generated@@344 $generated@@521) $generated@@522) ($generated@@84 $generated@@521 $generated@@522)))
 :pattern ( ($generated@@262 ($generated@@344 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@111 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@108 $generated@@524 $generated@@2)) (<= 0 ($generated@@349 $generated@@523))))
 :pattern ( ($generated@@349 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@331 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@330 $generated@@526)) (<= 0 ($generated@@329 $generated@@525))))
 :pattern ( ($generated@@329 $generated@@525))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@81) (= (type $generated@@530) $generated@@82)) (or ($generated@@528 $generated@@530) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@530 ($generated@@85 $generated@@170))))) (and (=> (not ($generated@@86 $generated@@530)) (let (($generated@@531 ($generated@@87 $generated@@530)))
($generated@@528 $generated@@531))) (= ($generated@@527 ($generated@@80 $generated@@529) $generated@@530) (ite ($generated@@86 $generated@@530) 0 (let (($generated@@532 ($generated@@87 $generated@@530)))
(let (($generated@@533 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@530)))))
(+ $generated@@533 ($generated@@527 $generated@@529 $generated@@532))))))))
 :pattern ( ($generated@@527 ($generated@@80 $generated@@529) $generated@@530))
))))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@70) (= (type $generated@@537) $generated@@70)) (= ($generated@@534 ($generated@@466 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@466 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@70)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@70) (= (type $generated@@541) $generated@@70)) (= ($generated@@538 ($generated@@466 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@466 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@70) (= (type $generated@@543) $generated@@70)) (= ($generated@@104 ($generated@@466 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@466 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@70)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@70) (= (type $generated@@547) $generated@@70)) (= ($generated@@544 ($generated@@474 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@474 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@70)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@70) (= (type $generated@@551) $generated@@70)) (= ($generated@@548 ($generated@@474 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@474 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@70) (= (type $generated@@553) $generated@@70)) (= ($generated@@104 ($generated@@474 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@474 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@91) (= (type $generated@@555) $generated@@91)) (= ($generated@@188 ($generated@@261 $generated@@554 $generated@@555)) $generated@@62))
 :pattern ( ($generated@@261 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@70)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (= ($generated@@556 ($generated@@175 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@175 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@70)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@70) (= (type $generated@@563) $generated@@70)) (= ($generated@@560 ($generated@@175 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@175 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@91) (= (type $generated@@565) $generated@@91)) (= ($generated@@182 ($generated@@261 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@261 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@91) (= (type $generated@@567) $generated@@91)) (= ($generated@@183 ($generated@@261 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@261 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@91) (= (type $generated@@569) $generated@@82)) (= ($generated@@188 ($generated@@307 $generated@@568 $generated@@569)) $generated@@66))
 :pattern ( ($generated@@307 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@91) (= (type $generated@@571) $generated@@82)) (= ($generated@@89 ($generated@@307 $generated@@570 $generated@@571)) $generated@@570))
 :pattern ( ($generated@@307 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@91) (= (type $generated@@573) $generated@@82)) (= ($generated@@87 ($generated@@307 $generated@@572 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@307 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@81) (= (type $generated@@575) $generated@@82)) (= ($generated@@527 $generated@@574 $generated@@575) ($generated@@527 $generated@@485 $generated@@575)))
 :pattern ( ($generated@@527 ($generated@@484 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@81) (= (type $generated@@577) $generated@@82)) (= ($generated@@301 $generated@@576 $generated@@577) ($generated@@301 $generated@@485 $generated@@577)))
 :pattern ( ($generated@@301 ($generated@@484 $generated@@576) $generated@@577))
)))
(assert  (and (forall (($generated@@580 T@U) ) (! (= (type ($generated@@578 $generated@@580)) $generated@@70)
 :pattern ( ($generated@@578 $generated@@580))
)) (forall (($generated@@581 T@U) ($generated@@582 Int) ) (! (let (($generated@@583 ($generated@@331 (type $generated@@581))))
(= (type ($generated@@579 $generated@@581 $generated@@582)) $generated@@583))
 :pattern ( ($generated@@579 $generated@@581 $generated@@582))
))))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@330 $generated@@91)) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) ($generated@@108 $generated@@109 $generated@@110))) (= ($generated@@106 $generated@@584 ($generated@@578 $generated@@585) $generated@@586) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@329 $generated@@584))) ($generated@@313 ($generated@@579 $generated@@584 $generated@@587) $generated@@585 $generated@@586))
 :pattern ( ($generated@@579 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@106 $generated@@584 ($generated@@578 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@589 Int) ) (! (= ($generated@@588 ($generated@@107 $generated@@589)) $generated@@589)
 :pattern ( ($generated@@107 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@70)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@70) (= ($generated@@590 ($generated@@287 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@287 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@70) (= ($generated@@104 ($generated@@287 $generated@@593)) $generated@@54))
 :pattern ( ($generated@@287 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@70)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@70) (= ($generated@@594 ($generated@@292 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@292 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@70) (= ($generated@@104 ($generated@@292 $generated@@597)) $generated@@55))
 :pattern ( ($generated@@292 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@70)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@70) (= ($generated@@598 ($generated@@191 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@191 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@70) (= ($generated@@104 ($generated@@191 $generated@@601)) $generated@@56))
 :pattern ( ($generated@@191 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@70)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@70) (= ($generated@@602 ($generated@@578 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@578 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@70) (= ($generated@@104 ($generated@@578 $generated@@605)) $generated@@57))
 :pattern ( ($generated@@578 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@70)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@70) (= ($generated@@606 ($generated@@85 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@85 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
(= ($generated@@88 $generated@@610 ($generated@@344 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@344 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@360 $generated@@91 $generated@@91)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) (= ($generated@@84 $generated@@611 ($generated@@466 $generated@@612 $generated@@613)) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@91) ($generated@@0 ($generated@@113 ($generated@@358 $generated@@611) $generated@@614))) (and ($generated@@262 ($generated@@113 ($generated@@436 $generated@@611) $generated@@614) $generated@@613) ($generated@@262 $generated@@614 $generated@@612)))
 :pattern ( ($generated@@113 ($generated@@436 $generated@@611) $generated@@614))
 :pattern ( ($generated@@113 ($generated@@358 $generated@@611) $generated@@614))
))))
 :pattern ( ($generated@@84 $generated@@611 ($generated@@466 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@615) ($generated@@378 $generated@@91 $generated@@91)) (= (type $generated@@616) $generated@@70)) (= (type $generated@@617) $generated@@70)) (= ($generated@@84 $generated@@615 ($generated@@474 $generated@@616 $generated@@617)) (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@91) ($generated@@0 ($generated@@113 ($generated@@376 $generated@@615) $generated@@618))) (and ($generated@@262 ($generated@@113 ($generated@@444 $generated@@615) $generated@@618) $generated@@617) ($generated@@262 $generated@@618 $generated@@616)))
 :pattern ( ($generated@@113 ($generated@@444 $generated@@615) $generated@@618))
 :pattern ( ($generated@@113 ($generated@@376 $generated@@615) $generated@@618))
))))
 :pattern ( ($generated@@84 $generated@@615 ($generated@@474 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@91) (= (type $generated@@622) $generated@@91)) (< ($generated@@619 $generated@@621) ($generated@@620 ($generated@@261 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@261 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@91) (= (type $generated@@624) $generated@@91)) (< ($generated@@619 $generated@@624) ($generated@@620 ($generated@@261 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@261 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@91) (= (type $generated@@626) $generated@@82)) (< ($generated@@619 $generated@@625) ($generated@@620 ($generated@@307 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@307 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@91) (= (type $generated@@628) $generated@@82)) (< ($generated@@620 $generated@@628) ($generated@@620 ($generated@@307 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@307 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@81) (= (type $generated@@630) $generated@@82)) (= ($generated@@527 ($generated@@80 $generated@@629) $generated@@630) ($generated@@527 $generated@@629 $generated@@630)))
 :pattern ( ($generated@@527 ($generated@@80 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@81) (= (type $generated@@632) $generated@@82)) (= ($generated@@301 ($generated@@80 $generated@@631) $generated@@632) ($generated@@301 $generated@@631 $generated@@632)))
 :pattern ( ($generated@@301 ($generated@@80 $generated@@631) $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@91) (= (type $generated@@634) $generated@@70)) (= (type $generated@@635) $generated@@70)) ($generated@@262 $generated@@633 ($generated@@466 $generated@@634 $generated@@635))) (and (= ($generated@@344 ($generated@@88 ($generated@@360 $generated@@91 $generated@@91) $generated@@633)) $generated@@633) ($generated@@84 ($generated@@88 ($generated@@360 $generated@@91 $generated@@91) $generated@@633) ($generated@@466 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@262 $generated@@633 ($generated@@466 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@91) (= (type $generated@@637) $generated@@70)) (= (type $generated@@638) $generated@@70)) ($generated@@262 $generated@@636 ($generated@@474 $generated@@637 $generated@@638))) (and (= ($generated@@344 ($generated@@88 ($generated@@378 $generated@@91 $generated@@91) $generated@@636)) $generated@@636) ($generated@@84 ($generated@@88 ($generated@@378 $generated@@91 $generated@@91) $generated@@636) ($generated@@474 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@262 $generated@@636 ($generated@@474 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@70) (= (type $generated@@640) $generated@@70)) (= (type $generated@@641) $generated@@91)) ($generated@@262 $generated@@641 ($generated@@175 $generated@@639 $generated@@640))) (and (= ($generated@@344 ($generated@@88 $generated@@82 $generated@@641)) $generated@@641) ($generated@@84 ($generated@@88 $generated@@82 $generated@@641) ($generated@@175 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@262 $generated@@641 ($generated@@175 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) $generated@@82) (= (type $generated@@643) $generated@@70)) (= (type $generated@@644) ($generated@@108 $generated@@109 $generated@@110))) (and ($generated@@258 $generated@@644) (and ($generated@@275 $generated@@642) ($generated@@106 $generated@@642 ($generated@@85 $generated@@643) $generated@@644)))) ($generated@@313 ($generated@@89 $generated@@642) $generated@@643 $generated@@644))
 :pattern ( ($generated@@313 ($generated@@89 $generated@@642) $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@645)))
 (not ($generated@@0 ($generated@@113 ($generated@@491 $generated@@646) $generated@@645))))
 :pattern ( (let (($generated@@646 (type $generated@@645)))
($generated@@113 ($generated@@491 $generated@@646) $generated@@645)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@70) (= (type $generated@@648) $generated@@70)) (and (= ($generated@@104 ($generated@@175 $generated@@647 $generated@@648)) $generated@@63) (= ($generated@@355 ($generated@@175 $generated@@647 $generated@@648)) $generated@@68)))
 :pattern ( ($generated@@175 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@82) (= ($generated@@619 ($generated@@344 $generated@@649)) ($generated@@620 $generated@@649)))
 :pattern ( ($generated@@619 ($generated@@344 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@91) ($generated@@262 $generated@@650 ($generated@@107 0))) (and (= ($generated@@344 ($generated@@88 $generated@@2 $generated@@650)) $generated@@650) ($generated@@84 ($generated@@88 ($generated@@108 $generated@@91 $generated@@4) $generated@@650) ($generated@@107 0))))
 :pattern ( ($generated@@262 $generated@@650 ($generated@@107 0)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@91) (= (type $generated@@652) $generated@@70)) ($generated@@262 $generated@@651 ($generated@@287 $generated@@652))) (and (= ($generated@@344 ($generated@@88 ($generated@@108 $generated@@91 $generated@@4) $generated@@651)) $generated@@651) ($generated@@84 ($generated@@88 ($generated@@108 $generated@@91 $generated@@4) $generated@@651) ($generated@@287 $generated@@652))))
 :pattern ( ($generated@@262 $generated@@651 ($generated@@287 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@91) (= (type $generated@@654) $generated@@70)) ($generated@@262 $generated@@653 ($generated@@292 $generated@@654))) (and (= ($generated@@344 ($generated@@88 ($generated@@108 $generated@@91 $generated@@4) $generated@@653)) $generated@@653) ($generated@@84 ($generated@@88 ($generated@@108 $generated@@91 $generated@@4) $generated@@653) ($generated@@292 $generated@@654))))
 :pattern ( ($generated@@262 $generated@@653 ($generated@@292 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@655) $generated@@91) (= (type $generated@@656) $generated@@70)) ($generated@@262 $generated@@655 ($generated@@191 $generated@@656))) (and (= ($generated@@344 ($generated@@88 ($generated@@108 $generated@@91 $generated@@2) $generated@@655)) $generated@@655) ($generated@@84 ($generated@@88 ($generated@@108 $generated@@91 $generated@@2) $generated@@655) ($generated@@191 $generated@@656))))
 :pattern ( ($generated@@262 $generated@@655 ($generated@@191 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@91) (= (type $generated@@658) $generated@@70)) ($generated@@262 $generated@@657 ($generated@@578 $generated@@658))) (and (= ($generated@@344 ($generated@@88 ($generated@@330 $generated@@91) $generated@@657)) $generated@@657) ($generated@@84 ($generated@@88 ($generated@@330 $generated@@91) $generated@@657) ($generated@@578 $generated@@658))))
 :pattern ( ($generated@@262 $generated@@657 ($generated@@578 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@659) $generated@@70) (= (type $generated@@660) $generated@@91)) ($generated@@262 $generated@@660 ($generated@@85 $generated@@659))) (and (= ($generated@@344 ($generated@@88 $generated@@82 $generated@@660)) $generated@@660) ($generated@@84 ($generated@@88 $generated@@82 $generated@@660) ($generated@@85 $generated@@659))))
 :pattern ( ($generated@@262 $generated@@660 ($generated@@85 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) $generated@@82) (= (type $generated@@662) $generated@@70)) (= (type $generated@@663) ($generated@@108 $generated@@109 $generated@@110))) (and ($generated@@258 $generated@@663) (and ($generated@@275 $generated@@661) ($generated@@106 $generated@@661 ($generated@@85 $generated@@662) $generated@@663)))) ($generated@@106 ($generated@@87 $generated@@661) ($generated@@85 $generated@@662) $generated@@663))
 :pattern ( ($generated@@106 ($generated@@87 $generated@@661) ($generated@@85 $generated@@662) $generated@@663))
)))
(assert (= ($generated@@104 $generated@@170) $generated@@61))
(assert (= ($generated@@355 $generated@@170) $generated@@67))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@664) ($generated@@108 $generated@@91 $generated@@2)) (= (type $generated@@665) $generated@@70)) (= (type $generated@@666) ($generated@@108 $generated@@109 $generated@@110))) (= ($generated@@106 $generated@@664 ($generated@@191 $generated@@665) $generated@@666) (forall (($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@91) (< 0 ($generated ($generated@@113 $generated@@664 $generated@@667)))) ($generated@@313 $generated@@667 $generated@@665 $generated@@666))
 :pattern ( ($generated@@113 $generated@@664 $generated@@667))
))))
 :pattern ( ($generated@@106 $generated@@664 ($generated@@191 $generated@@665) $generated@@666))
)))
(assert (= $generated@@189 ($generated@@278 $generated@@189)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) $generated@@81) (= (type $generated@@669) $generated@@82)) (or ($generated@@528 ($generated@@278 $generated@@669)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@669 ($generated@@85 $generated@@170))))) (and (=> (not ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@86 ($generated@@278 $generated@@669)))))) (let (($generated@@670 ($generated@@278 ($generated@@87 ($generated@@278 $generated@@669)))))
($generated@@528 $generated@@670))) (= ($generated@@527 ($generated@@80 $generated@@668) ($generated@@278 $generated@@669)) (ite ($generated@@86 ($generated@@278 $generated@@669)) 0 (let (($generated@@671 ($generated@@278 ($generated@@87 ($generated@@278 $generated@@669)))))
(let (($generated@@672 ($generated@@90 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@278 $generated@@669)))))))
($generated@@90 (+ $generated@@672 ($generated@@527 ($generated@@80 $generated@@668) $generated@@671)))))))))
 :weight 3
 :pattern ( ($generated@@527 ($generated@@80 $generated@@668) ($generated@@278 $generated@@669)))
))))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) $generated@@82) (= (type $generated@@674) $generated@@70)) (= (type $generated@@675) ($generated@@108 $generated@@109 $generated@@110))) (and ($generated@@258 $generated@@675) (and ($generated@@174 $generated@@673) (exists (($generated@@676 T@U) ) (!  (and (= (type $generated@@676) $generated@@70) ($generated@@106 $generated@@673 ($generated@@175 $generated@@674 $generated@@676) $generated@@675))
 :pattern ( ($generated@@106 $generated@@673 ($generated@@175 $generated@@674 $generated@@676) $generated@@675))
))))) ($generated@@313 ($generated@@182 $generated@@673) $generated@@674 $generated@@675))
 :pattern ( ($generated@@313 ($generated@@182 $generated@@673) $generated@@674 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) $generated@@82) (= (type $generated@@678) $generated@@70)) (= (type $generated@@679) ($generated@@108 $generated@@109 $generated@@110))) (and ($generated@@258 $generated@@679) (and ($generated@@174 $generated@@677) (exists (($generated@@680 T@U) ) (!  (and (= (type $generated@@680) $generated@@70) ($generated@@106 $generated@@677 ($generated@@175 $generated@@680 $generated@@678) $generated@@679))
 :pattern ( ($generated@@106 $generated@@677 ($generated@@175 $generated@@680 $generated@@678) $generated@@679))
))))) ($generated@@313 ($generated@@183 $generated@@677) $generated@@678 $generated@@679))
 :pattern ( ($generated@@313 ($generated@@183 $generated@@677) $generated@@678 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@91) (= (type $generated@@682) $generated@@91)) (= ($generated@@261 ($generated@@278 $generated@@681) ($generated@@278 $generated@@682)) ($generated@@278 ($generated@@261 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@261 ($generated@@278 $generated@@681) ($generated@@278 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@91) (= (type $generated@@684) $generated@@82)) (= ($generated@@307 ($generated@@278 $generated@@683) ($generated@@278 $generated@@684)) ($generated@@278 ($generated@@307 $generated@@683 $generated@@684))))
 :pattern ( ($generated@@307 ($generated@@278 $generated@@683) ($generated@@278 $generated@@684)))
)))
(assert (forall (($generated@@685 Int) ) (! (= ($generated@@344 ($generated@@8 ($generated@@90 $generated@@685))) ($generated@@278 ($generated@@344 ($generated@@8 $generated@@685))))
 :pattern ( ($generated@@344 ($generated@@8 ($generated@@90 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ) (! (= ($generated@@344 ($generated@@278 $generated@@686)) ($generated@@278 ($generated@@344 $generated@@686)))
 :pattern ( ($generated@@344 ($generated@@278 $generated@@686)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) $generated@@81) (= (type $generated@@688) $generated@@82)) (or ($generated@@302 $generated@@688) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@688 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@688)) (let (($generated@@689 ($generated@@87 $generated@@688)))
($generated@@302 $generated@@689))) (= ($generated@@301 ($generated@@80 $generated@@687) $generated@@688) (ite ($generated@@86 $generated@@688) $generated@@189 (let (($generated@@690 ($generated@@87 $generated@@688)))
(let (($generated@@691 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@688)))))
($generated@@307 ($generated@@344 ($generated@@8 (- 0 $generated@@691))) ($generated@@301 $generated@@687 $generated@@690))))))))
 :pattern ( ($generated@@301 ($generated@@80 $generated@@687) $generated@@688))
))))
(assert (forall (($generated@@692 T@U) ) (! (let (($generated@@693 ($generated@@331 (type $generated@@692))))
 (=> (and (= (type $generated@@692) ($generated@@330 $generated@@693)) (= ($generated@@329 $generated@@692) 0)) (= $generated@@692 ($generated@@328 $generated@@693))))
 :pattern ( ($generated@@329 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ) (! (let (($generated@@697 (type $generated@@695)))
 (=> (and (and (= (type $generated@@694) ($generated@@108 $generated@@697 $generated@@2)) (= (type $generated@@696) $generated@@2)) (<= 0 ($generated $generated@@696))) (= ($generated@@349 ($generated@@114 $generated@@694 $generated@@695 $generated@@696)) (+ (- ($generated@@349 $generated@@694) ($generated ($generated@@113 $generated@@694 $generated@@695))) ($generated $generated@@696)))))
 :pattern ( ($generated@@349 ($generated@@114 $generated@@694 $generated@@695 $generated@@696)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (= (type $generated@@698) $generated@@81) (= (type $generated@@699) $generated@@82)) (or ($generated@@528 $generated@@699) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@699 ($generated@@85 $generated@@170))))) (<= ($generated@@90 0) ($generated@@527 $generated@@698 $generated@@699)))
 :pattern ( ($generated@@527 $generated@@698 $generated@@699))
))))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@700) ($generated@@108 $generated@@109 $generated@@110)) (= (type $generated@@701) $generated@@2)) ($generated@@106 $generated@@701 $generated@@46 $generated@@700))
 :pattern ( ($generated@@106 $generated@@701 $generated@@46 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) ($generated@@108 $generated@@109 $generated@@110)) (= (type $generated@@703) $generated@@3)) ($generated@@106 $generated@@703 $generated@@47 $generated@@702))
 :pattern ( ($generated@@106 $generated@@703 $generated@@47 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) ($generated@@108 $generated@@109 $generated@@110)) (= (type $generated@@705) $generated@@4)) ($generated@@106 $generated@@705 $generated@@44 $generated@@704))
 :pattern ( ($generated@@106 $generated@@705 $generated@@44 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) ($generated@@108 $generated@@109 $generated@@110)) (= (type $generated@@707) $generated@@515)) ($generated@@106 $generated@@707 $generated@@45 $generated@@706))
 :pattern ( ($generated@@106 $generated@@707 $generated@@45 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) ($generated@@108 $generated@@109 $generated@@110)) (= (type $generated@@709) $generated@@91)) ($generated@@106 $generated@@709 $generated@@48 $generated@@708))
 :pattern ( ($generated@@106 $generated@@709 $generated@@48 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@710) $generated@@70) (= (type $generated@@711) $generated@@91)) (= (type $generated@@712) $generated@@82)) (= (type $generated@@713) ($generated@@108 $generated@@109 $generated@@110))) ($generated@@258 $generated@@713)) (= ($generated@@106 ($generated@@307 $generated@@711 $generated@@712) ($generated@@85 $generated@@710) $generated@@713)  (and ($generated@@313 $generated@@711 $generated@@710 $generated@@713) ($generated@@106 $generated@@712 ($generated@@85 $generated@@710) $generated@@713))))
 :pattern ( ($generated@@106 ($generated@@307 $generated@@711 $generated@@712) ($generated@@85 $generated@@710) $generated@@713))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) ($generated@@330 $generated@@91)) (= (type $generated@@715) $generated@@70)) (= ($generated@@84 $generated@@714 ($generated@@578 $generated@@715)) (forall (($generated@@716 Int) ) (!  (=> (and (<= 0 $generated@@716) (< $generated@@716 ($generated@@329 $generated@@714))) ($generated@@262 ($generated@@579 $generated@@714 $generated@@716) $generated@@715))
 :pattern ( ($generated@@579 $generated@@714 $generated@@716))
))))
 :pattern ( ($generated@@84 $generated@@714 ($generated@@578 $generated@@715)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 Int) ) (!  (=> (= (type $generated@@718) ($generated@@330 $generated@@91)) (=> (and (<= 0 $generated@@719) (< $generated@@719 ($generated@@329 $generated@@718))) (< ($generated@@620 ($generated@@88 $generated@@82 ($generated@@579 $generated@@718 $generated@@719))) ($generated@@717 $generated@@718))))
 :pattern ( ($generated@@620 ($generated@@88 $generated@@82 ($generated@@579 $generated@@718 $generated@@719))))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) ($generated@@360 $generated@@91 $generated@@91)) (= (type $generated@@721) $generated@@70)) (= (type $generated@@722) $generated@@70)) ($generated@@84 $generated@@720 ($generated@@466 $generated@@721 $generated@@722))) (and (and ($generated@@84 ($generated@@358 $generated@@720) ($generated@@287 $generated@@721)) ($generated@@84 ($generated@@402 $generated@@720) ($generated@@287 $generated@@722))) ($generated@@84 ($generated@@435 $generated@@720) ($generated@@287 ($generated@@175 $generated@@721 $generated@@722)))))
 :pattern ( ($generated@@84 $generated@@720 ($generated@@466 $generated@@721 $generated@@722)))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (and (= (type $generated@@723) ($generated@@378 $generated@@91 $generated@@91)) (= (type $generated@@724) $generated@@70)) (= (type $generated@@725) $generated@@70)) ($generated@@84 $generated@@723 ($generated@@474 $generated@@724 $generated@@725))) (and (and ($generated@@84 ($generated@@376 $generated@@723) ($generated@@292 $generated@@724)) ($generated@@84 ($generated@@413 $generated@@723) ($generated@@292 $generated@@725))) ($generated@@84 ($generated@@443 $generated@@723) ($generated@@292 ($generated@@175 $generated@@724 $generated@@725)))))
 :pattern ( ($generated@@84 $generated@@723 ($generated@@474 $generated@@724 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@2) ($generated@@84 $generated@@726 $generated@@46))
 :pattern ( ($generated@@84 $generated@@726 $generated@@46))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@3) ($generated@@84 $generated@@727 $generated@@47))
 :pattern ( ($generated@@84 $generated@@727 $generated@@47))
)))
(assert (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@4) ($generated@@84 $generated@@728 $generated@@44))
 :pattern ( ($generated@@84 $generated@@728 $generated@@44))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@515) ($generated@@84 $generated@@729 $generated@@45))
 :pattern ( ($generated@@84 $generated@@729 $generated@@45))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@91) ($generated@@84 $generated@@730 $generated@@48))
 :pattern ( ($generated@@84 $generated@@730 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () T@U)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () T@U)
(declare-fun $generated@@738 (T@U) Bool)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 () Int)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 () Int)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () T@U)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () T@U)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () T@U)
(declare-fun $generated@@753 () Int)
(declare-fun $generated@@754 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@731) ($generated@@198 $generated@@109 $generated@@4)) (= (type $generated@@732) $generated@@109)) (= (type $generated@@733) ($generated@@108 $generated@@109 $generated@@110))) (= (type $generated@@734) $generated@@82)) (= (type $generated@@735) $generated@@82)) (= (type $generated@@736) $generated@@82)) (= (type $generated@@737) ($generated@@108 $generated@@109 $generated@@110))) (= (type $generated@@739) $generated@@82)) (= (type $generated@@740) $generated@@82)) (= (type $generated@@742) $generated@@82)) (= (type $generated@@744) $generated@@82)) (= (type $generated@@745) ($generated@@108 $generated@@109 $generated@@110))) (= (type $generated@@746) $generated@@82)) (= (type $generated@@747) $generated@@82)) (= (type $generated@@748) ($generated@@108 $generated@@109 $generated@@110))) (= (type $generated@@749) $generated@@82)) (= (type $generated@@750) $generated@@82)) (= (type $generated@@751) $generated@@82)) (= (type $generated@@752) $generated@@82)) (= (type $generated@@754) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@755  (=> (and (= $generated@@731 ($generated@@197 $generated@@732 $generated@@733 $generated@@60 false)) ($generated@@106 $generated@@734 ($generated@@85 $generated@@46) $generated@@733)) (=> (and (and ($generated@@302 $generated@@734) (= $generated@@735 ($generated@@301 ($generated@@80 $generated@@485) $generated@@734))) (and ($generated@@106 $generated@@735 ($generated@@85 $generated@@46) $generated@@733) ($generated@@302 ($generated@@301 ($generated@@80 $generated@@485) $generated@@734)))) (=> (and (and (and (and ($generated@@302 $generated@@734) ($generated@@302 ($generated@@301 ($generated@@80 $generated@@485) $generated@@734))) (= $generated@@736 ($generated@@301 ($generated@@80 $generated@@485) ($generated@@301 ($generated@@80 $generated@@485) $generated@@734)))) (and ($generated@@258 $generated@@737) ($generated@@738 $generated@@737))) (and (and (and ($generated@@423 ($generated@@301 ($generated@@80 $generated@@485) ($generated@@301 ($generated@@80 $generated@@485) $generated@@734))) ($generated@@423 $generated@@734)) (and ($generated@@302 $generated@@734) ($generated@@302 ($generated@@301 ($generated@@80 $generated@@485) $generated@@734)))) (and ($generated@@272 ($generated@@301 ($generated@@80 ($generated@@80 $generated@@485)) ($generated@@301 ($generated@@80 ($generated@@80 $generated@@485)) $generated@@734)) $generated@@734) (= $generated@@733 $generated@@737)))) (and (=> (= (ControlFlow 0 2) (- 0 13)) ($generated@@84 $generated@@736 ($generated@@85 $generated@@170))) (=> ($generated@@84 $generated@@736 ($generated@@85 $generated@@170)) (=> (and ($generated@@106 $generated@@736 ($generated@@85 $generated@@170) $generated@@737) ($generated@@528 $generated@@736)) (=> (and (and ($generated@@528 $generated@@736) (= $generated@@739 ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 3)))) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 0))) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189))))))))) (and ($generated@@106 $generated@@739 ($generated@@85 $generated@@46) $generated@@737) ($generated@@302 $generated@@739))) (and (=> (= (ControlFlow 0 2) (- 0 12)) ($generated@@84 ($generated@@301 ($generated@@80 $generated@@485) $generated@@739) ($generated@@85 $generated@@170))) (=> ($generated@@84 ($generated@@301 ($generated@@80 $generated@@485) $generated@@739) ($generated@@85 $generated@@170)) (=> (= $generated@@740 ($generated@@301 ($generated@@80 $generated@@485) $generated@@739)) (=> (and ($generated@@106 $generated@@740 ($generated@@85 $generated@@170) $generated@@737) ($generated@@528 ($generated@@301 ($generated@@80 $generated@@485) $generated@@739))) (=> (and (and (and ($generated@@302 $generated@@739) ($generated@@528 ($generated@@301 ($generated@@80 $generated@@485) $generated@@739))) (and (= $generated@@741 ($generated@@527 ($generated@@80 $generated@@485) ($generated@@301 ($generated@@80 $generated@@485) $generated@@739))) (= $generated@@742 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 3)))) ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189)))))))) (and (and (= $generated@@744 ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189))))) ($generated@@106 $generated@@744 ($generated@@85 $generated@@46) $generated@@737)) (and ($generated@@83 ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189))))) ($generated@@83 ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189)))))))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (=> ($generated@@83 ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189))))) (or ($generated@@79 ($generated@@80 $generated@@485) ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189))))) (=> ($generated@@86 ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189))))) ($generated@@0 ($generated@@278 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (=> ($generated@@83 ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189))))) (or ($generated@@79 ($generated@@80 $generated@@485) ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189))))) (=> (not ($generated@@86 ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189)))))) (let (($generated@@756 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189)))))))))
(<= $generated@@756 ($generated@@90 0))))))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (=> ($generated@@83 ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189))))) (or ($generated@@79 ($generated@@80 $generated@@485) ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189))))) (=> (not ($generated@@86 ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189)))))) (let (($generated@@757 ($generated@@87 ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189)))))))
($generated@@79 ($generated@@80 ($generated@@80 $generated@@485)) $generated@@757)))))) (=> ($generated@@79 ($generated@@80 $generated@@485) ($generated@@307 ($generated@@344 ($generated@@8 $generated@@743)) ($generated@@278 ($generated@@307 ($generated@@344 ($generated@@8 ($generated@@90 (- 0 2)))) ($generated@@278 $generated@@189))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (=> ($generated@@83 $generated@@742) (or ($generated@@79 ($generated@@80 $generated@@485) $generated@@742) (=> ($generated@@86 $generated@@742) ($generated@@0 ($generated@@278 ($generated@@11 true))))))) (=> (=> ($generated@@83 $generated@@742) (or ($generated@@79 ($generated@@80 $generated@@485) $generated@@742) (=> ($generated@@86 $generated@@742) ($generated@@0 ($generated@@278 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (=> ($generated@@83 $generated@@742) (or ($generated@@79 ($generated@@80 $generated@@485) $generated@@742) (=> (not ($generated@@86 $generated@@742)) (let (($generated@@758 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@742)))))
(<= $generated@@758 ($generated@@90 0))))))) (=> (=> ($generated@@83 $generated@@742) (or ($generated@@79 ($generated@@80 $generated@@485) $generated@@742) (=> (not ($generated@@86 $generated@@742)) (let (($generated@@759 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@742)))))
(<= $generated@@759 ($generated@@90 0)))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@83 $generated@@742) (or ($generated@@79 ($generated@@80 $generated@@485) $generated@@742) (=> (not ($generated@@86 $generated@@742)) (let (($generated@@760 ($generated@@87 $generated@@742)))
($generated@@79 ($generated@@80 ($generated@@80 $generated@@485)) $generated@@760)))))) (=> (=> ($generated@@83 $generated@@742) (or ($generated@@79 ($generated@@80 $generated@@485) $generated@@742) (=> (not ($generated@@86 $generated@@742)) (let (($generated@@761 ($generated@@87 $generated@@742)))
($generated@@79 ($generated@@80 ($generated@@80 $generated@@485)) $generated@@761))))) (=> (and (and ($generated@@258 $generated@@745) ($generated@@738 $generated@@745)) (and ($generated@@302 $generated@@742) ($generated@@165 ($generated@@301 ($generated@@80 $generated@@485) $generated@@742)))) (=> (and (and (and (and ($generated@@165 ($generated@@301 ($generated@@80 $generated@@485) $generated@@742)) (and ($generated@@164 ($generated@@80 $generated@@485) ($generated@@301 ($generated@@80 $generated@@485) $generated@@742)) (ite ($generated@@86 ($generated@@301 ($generated@@80 $generated@@485) $generated@@742)) true (let (($generated@@762 ($generated@@87 ($generated@@301 ($generated@@80 $generated@@485) $generated@@742))))
(let (($generated@@763 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@301 ($generated@@80 $generated@@485) $generated@@742))))))
 (and (<= ($generated@@90 0) $generated@@763) ($generated@@164 ($generated@@80 $generated@@485) $generated@@762))))))) (= $generated@@737 $generated@@745)) (and ($generated@@106 $generated@@742 ($generated@@85 $generated@@46) $generated@@745) ($generated@@302 $generated@@742))) (and (and ($generated@@302 $generated@@742) (= $generated@@746 ($generated@@301 ($generated@@80 $generated@@485) $generated@@742))) (and ($generated@@84 $generated@@747 ($generated@@85 $generated@@170)) ($generated@@106 $generated@@747 ($generated@@85 $generated@@170) $generated@@733)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@165 $generated@@746) (or ($generated@@164 ($generated@@80 $generated@@485) $generated@@746) (=> ($generated@@86 $generated@@746) ($generated@@0 ($generated@@278 ($generated@@11 true))))))) (=> (=> ($generated@@165 $generated@@746) (or ($generated@@164 ($generated@@80 $generated@@485) $generated@@746) (=> ($generated@@86 $generated@@746) ($generated@@0 ($generated@@278 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@165 $generated@@746) (or ($generated@@164 ($generated@@80 $generated@@485) $generated@@746) (=> (not ($generated@@86 $generated@@746)) (let (($generated@@764 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@746)))))
(<= ($generated@@90 0) $generated@@764)))))) (=> (=> ($generated@@165 $generated@@746) (or ($generated@@164 ($generated@@80 $generated@@485) $generated@@746) (=> (not ($generated@@86 $generated@@746)) (let (($generated@@765 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@746)))))
(<= ($generated@@90 0) $generated@@765))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@165 $generated@@746) (or ($generated@@164 ($generated@@80 $generated@@485) $generated@@746) (=> (not ($generated@@86 $generated@@746)) (let (($generated@@766 ($generated@@87 $generated@@746)))
($generated@@164 ($generated@@80 ($generated@@80 $generated@@485)) $generated@@766)))))) (=> (=> ($generated@@165 $generated@@746) (or ($generated@@164 ($generated@@80 $generated@@485) $generated@@746) (=> (not ($generated@@86 $generated@@746)) (let (($generated@@767 ($generated@@87 $generated@@746)))
($generated@@164 ($generated@@80 ($generated@@80 $generated@@485)) $generated@@767))))) (=> (and (and ($generated@@258 $generated@@748) ($generated@@738 $generated@@748)) (and ($generated@@84 $generated@@749 ($generated@@85 $generated@@170)) ($generated@@106 $generated@@749 ($generated@@85 $generated@@170) $generated@@748))) (=> (and (and (and ($generated@@423 $generated@@746) ($generated@@423 $generated@@749)) ($generated@@272 $generated@@746 $generated@@749)) (and (and (= $generated@@745 $generated@@748) ($generated@@106 $generated@@742 ($generated@@85 $generated@@46) $generated@@748)) (and ($generated@@302 $generated@@742) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@84 ($generated@@301 ($generated@@80 $generated@@485) $generated@@742) ($generated@@85 $generated@@170))))))))))))))))))))))))))))))))))))
(let (($generated@@768  (=> (and ($generated@@258 $generated@@733) ($generated@@738 $generated@@733)) (=> (and (and ($generated@@84 $generated@@734 ($generated@@85 $generated@@170)) ($generated@@106 $generated@@734 ($generated@@85 $generated@@170) $generated@@733)) ($generated@@423 $generated@@734)) (=> (and (and (and (and (and ($generated@@84 $generated@@750 ($generated@@85 $generated@@46)) ($generated@@106 $generated@@750 ($generated@@85 $generated@@46) $generated@@733)) true) (and (and ($generated@@84 $generated@@751 ($generated@@85 $generated@@170)) ($generated@@106 $generated@@751 ($generated@@85 $generated@@170) $generated@@733)) true)) (and (and (and ($generated@@84 $generated@@752 ($generated@@85 $generated@@46)) ($generated@@106 $generated@@752 ($generated@@85 $generated@@46) $generated@@733)) true) (and (<= ($generated@@90 0) $generated@@753) true))) (and (and (and (and ($generated@@84 $generated@@754 ($generated@@85 $generated@@170)) ($generated@@106 $generated@@754 ($generated@@85 $generated@@170) $generated@@733)) true) (= 3 $generated@@78)) (and (<= $generated@@743 ($generated@@90 0)) (= (ControlFlow 0 14) 2)))) $generated@@755)))))
$generated@@768)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@381 (T@U) Bool)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@81 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@70)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@70) (= (type $generated@@149) $generated@@70)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@74)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@64))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@141 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@141 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@70)
 :pattern ( ($generated@@223 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (= (type $generated@@226) $generated@@70) (= (type $generated@@227) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@227)) ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
 :pattern ( ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@145)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@70) (= (type $generated@@233) $generated@@70)) (= (type $generated@@234) $generated@@154)) (= (type $generated@@235) $generated@@154)) (= ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@70) ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) (= (type $generated@@238) $generated@@145)) (= ($generated@@151 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@151 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@145) (= (type $generated@@241) $generated@@145)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert  (and (forall (($generated@@245 T@U) ) (! (= (type ($generated@@243 $generated@@245)) $generated@@154)
 :pattern ( ($generated@@243 $generated@@245))
)) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@246)) $generated@@145)
 :pattern ( ($generated@@244 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@145) (= (type $generated@@248) $generated@@145)) (and ($generated@@242 $generated@@247) ($generated@@242 $generated@@248))) (= ($generated@@239 $generated@@247 $generated@@248)  (and (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)) ($generated@@239 ($generated@@244 $generated@@247) ($generated@@244 $generated@@248)))))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@247))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@154) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@229 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@154) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@229 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@239 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@268 $generated@@269 $generated@@270)) $generated@@145)
 :pattern ( ($generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@70) (= (type $generated@@272) $generated@@154)) (= (type $generated@@273) $generated@@145)) (= ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271))  (and ($generated@@229 $generated@@272 $generated@@271) ($generated@@141 $generated@@273 ($generated@@223 $generated@@271)))))
 :pattern ( ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@70) (= (type $generated@@276) $generated@@70)) (= (type $generated@@277) $generated@@154)) (= (type $generated@@278) $generated@@154)) (= (type $generated@@279) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@279)) (= ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@145) (= ($generated@@143 $generated@@280) (= ($generated@@159 $generated@@280) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@145) (= ($generated@@265 $generated@@281) (= ($generated@@159 $generated@@281) $generated@@64)))
 :pattern ( ($generated@@265 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@145) (= ($generated@@242 $generated@@282) (= ($generated@@159 $generated@@282) $generated@@66)))
 :pattern ( ($generated@@242 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@145) ($generated@@143 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@154) (= (type $generated@@285) $generated@@154)) (= $generated@@283 ($generated@@228 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@143 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@145) ($generated@@242 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@154) (= (type $generated@@288) $generated@@145)) (= $generated@@286 ($generated@@268 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@242 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@145) ($generated@@265 $generated@@297)) (= $generated@@297 $generated@@160))
 :pattern ( ($generated@@265 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@2) (= ($generated@@141 $generated@@298 $generated@@138) (<= ($generated@@259 0) ($generated $generated@@298))))
 :pattern ( ($generated@@141 $generated@@298 $generated@@138))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@154)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@70) (= (type $generated@@303) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@80 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@82 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@85 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@82 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@87 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@75)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@70) (and (= ($generated@@78 ($generated@@223 $generated@@312)) $generated@@65) (= ($generated@@310 ($generated@@223 $generated@@312)) $generated@@69)))
 :pattern ( ($generated@@223 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@82 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@82 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@85 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@82 $generated@@350 $generated@@2)) (= ($generated@@163 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@87 $generated@@349 $generated@@351))) (<= ($generated ($generated@@87 $generated@@349 $generated@@351)) ($generated@@304 $generated@@349))))
 :pattern ( ($generated@@87 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@163 $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@154) ($generated@@229 $generated@@355 $generated@@138)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@355)) $generated@@355) ($generated@@141 ($generated@@352 $generated@@2 $generated@@355) $generated@@138)))
 :pattern ( ($generated@@229 $generated@@355 $generated@@138))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@317 (type $generated@@356))))
(let (($generated@@358 ($generated@@316 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@315 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@314 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@313 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@82 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@317 (type $generated@@363))))
(let (($generated@@365 ($generated@@316 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@315 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@314 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@335 (type $generated@@367))))
(let (($generated@@369 ($generated@@334 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@333 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@332 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@331 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@335 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@82 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@335 (type $generated@@374))))
(let (($generated@@376 ($generated@@334 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@333 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@332 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@379) $generated@@70)) (= ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@378 $generated@@380)))) ($generated@@229 $generated@@380 $generated@@379))
 :pattern ( ($generated@@87 $generated@@378 $generated@@380))
))))
 :pattern ( ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@381 $generated@@382)) (or ($generated@@265 $generated@@382) ($generated@@242 $generated@@382)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@154) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@274 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@154) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@274 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= ($generated ($generated@@87 ($generated@@305 $generated@@392) $generated@@391)) 0))
 :pattern ( (let (($generated@@392 (type $generated@@391)))
($generated@@87 ($generated@@305 $generated@@392) $generated@@391)))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@317 (type $generated@@396))))
(let (($generated@@398 ($generated@@316 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@400) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@335 (type $generated@@404))))
(let (($generated@@406 ($generated@@334 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@408) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408)))) (= ($generated@@87 ($generated@@402 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@408))))))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@316 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@315 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@360 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@360 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@334 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@333 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@87 ($generated@@371 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@87 ($generated@@371 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))) (and ($generated@@274 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@274 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))) (and ($generated@@274 ($generated@@87 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@274 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@435) $generated@@70) (= (type $generated@@436) $generated@@145)) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435))) (or ($generated@@265 $generated@@436) ($generated@@242 $generated@@436)))
 :pattern ( ($generated@@242 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
 :pattern ( ($generated@@265 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@82 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@335 (type $generated@@439))))
(let (($generated@@441 ($generated@@334 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@333 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@332 $generated@@441 $generated@@440)) (= ($generated@@331 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@331 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@335 (type $generated@@442))))
(let (($generated@@444 ($generated@@334 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@333 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@332 $generated@@444 $generated@@443)) (= ($generated@@371 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@371 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@335 (type $generated@@445))))
(let (($generated@@447 ($generated@@334 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@333 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@332 $generated@@447 $generated@@446)) (= ($generated@@401 $generated@@445) ($generated@@437 $generated@@154))))))
 :pattern ( ($generated@@401 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@317 (type $generated@@448))))
(let (($generated@@450 ($generated@@316 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@315 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@314 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@154) (= (type $generated@@452) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@448) ($generated@@299 ($generated@@228 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@393 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@335 (type $generated@@453))))
(let (($generated@@455 ($generated@@334 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@333 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@332 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@154) (= (type $generated@@457) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@401 $generated@@453) ($generated@@299 ($generated@@228 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@401 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@154) ($generated@@229 $generated@@458 $generated@@46)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@458)) $generated@@458) ($generated@@141 ($generated@@352 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@229 $generated@@459 $generated@@47)) (and (= ($generated@@299 ($generated@@352 $generated@@3 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@352 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@154) ($generated@@229 $generated@@460 $generated@@44)) (and (= ($generated@@299 ($generated@@352 $generated@@4 $generated@@460)) $generated@@460) ($generated@@141 ($generated@@352 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) ($generated@@229 $generated@@462 $generated@@45)) (and (= ($generated@@299 ($generated@@352 $generated@@461 $generated@@462)) $generated@@462) ($generated@@141 ($generated@@352 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@70) (= ($generated@@229 ($generated@@299 $generated@@463) $generated@@464) ($generated@@141 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@229 ($generated@@299 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@85 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@82 $generated@@466 $generated@@2)) (<= 0 ($generated@@304 $generated@@465))))
 :pattern ( ($generated@@304 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@292 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@291 $generated@@468)) (<= 0 ($generated@@290 $generated@@467))))
 :pattern ( ($generated@@290 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@419 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@419 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@427 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@427 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@427 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@427 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@78 ($generated@@427 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@427 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@154) (= (type $generated@@490) $generated@@154)) (= ($generated@@159 ($generated@@228 $generated@@489 $generated@@490)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@144 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@144 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@144 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@144 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@154) (= (type $generated@@500) $generated@@154)) (= ($generated@@152 ($generated@@228 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@228 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@154) (= (type $generated@@502) $generated@@154)) (= ($generated@@153 ($generated@@228 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@228 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@154) (= (type $generated@@504) $generated@@145)) (= ($generated@@159 ($generated@@268 $generated@@503 $generated@@504)) $generated@@66))
 :pattern ( ($generated@@268 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@154) (= (type $generated@@506) $generated@@145)) (= ($generated@@243 ($generated@@268 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@268 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) (= (type $generated@@508) $generated@@145)) (= ($generated@@244 ($generated@@268 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@268 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@292 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@291 $generated@@154)) (= (type $generated@@516) $generated@@70)) (= (type $generated@@517) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@290 $generated@@515))) ($generated@@274 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@81 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@81 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@249 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@249 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@525 ($generated@@254 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@254 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@529 ($generated@@162 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@162 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@78 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@223 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@223 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@352 $generated@@541 ($generated@@299 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@299 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))) (and ($generated@@229 ($generated@@87 ($generated@@394 $generated@@542) $generated@@545) $generated@@544) ($generated@@229 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))) (and ($generated@@229 ($generated@@87 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@229 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@154) (= (type $generated@@553) $generated@@154)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@228 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@228 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@154)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@228 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@228 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@154) (= (type $generated@@557) $generated@@145)) (< ($generated@@550 $generated@@556) ($generated@@551 ($generated@@268 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@268 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) (= (type $generated@@559) $generated@@145)) (< ($generated@@551 $generated@@559) ($generated@@551 ($generated@@268 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@268 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@70)) ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562))) (and (= ($generated@@299 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560)) $generated@@560) ($generated@@141 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560) ($generated@@419 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565))) (and (= ($generated@@299 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563)) $generated@@563) ($generated@@141 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563) ($generated@@427 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@70) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@154)) ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@568)) $generated@@568) ($generated@@141 ($generated@@352 $generated@@145 $generated@@568) ($generated@@144 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@571) (and ($generated@@242 $generated@@569) ($generated@@80 $generated@@569 ($generated@@223 $generated@@570) $generated@@571)))) ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@87 ($generated@@437 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@87 ($generated@@437 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@70) (= (type $generated@@575) $generated@@70)) (and (= ($generated@@78 ($generated@@144 $generated@@574 $generated@@575)) $generated@@63) (= ($generated@@310 ($generated@@144 $generated@@574 $generated@@575)) $generated@@68)))
 :pattern ( ($generated@@144 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@145) (= ($generated@@550 ($generated@@299 $generated@@576)) ($generated@@551 $generated@@576)))
 :pattern ( ($generated@@550 ($generated@@299 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@154) ($generated@@229 $generated@@577 ($generated@@81 0))) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@577)) $generated@@577) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@577) ($generated@@81 0))))
 :pattern ( ($generated@@229 $generated@@577 ($generated@@81 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@154) (= (type $generated@@579) $generated@@70)) ($generated@@229 $generated@@578 ($generated@@249 $generated@@579))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578)) $generated@@578) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578) ($generated@@249 $generated@@579))))
 :pattern ( ($generated@@229 $generated@@578 ($generated@@249 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@154) (= (type $generated@@581) $generated@@70)) ($generated@@229 $generated@@580 ($generated@@254 $generated@@581))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580)) $generated@@580) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580) ($generated@@254 $generated@@581))))
 :pattern ( ($generated@@229 $generated@@580 ($generated@@254 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@70)) ($generated@@229 $generated@@582 ($generated@@162 $generated@@583))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582)) $generated@@582) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582) ($generated@@162 $generated@@583))))
 :pattern ( ($generated@@229 $generated@@582 ($generated@@162 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@70)) ($generated@@229 $generated@@584 ($generated@@509 $generated@@585))) (and (= ($generated@@299 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584)) $generated@@584) ($generated@@141 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584) ($generated@@509 $generated@@585))))
 :pattern ( ($generated@@229 $generated@@584 ($generated@@509 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@154)) ($generated@@229 $generated@@587 ($generated@@223 $generated@@586))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@587)) $generated@@587) ($generated@@141 ($generated@@352 $generated@@145 $generated@@587) ($generated@@223 $generated@@586))))
 :pattern ( ($generated@@229 $generated@@587 ($generated@@223 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@145) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@590) (and ($generated@@242 $generated@@588) ($generated@@80 $generated@@588 ($generated@@223 $generated@@589) $generated@@590)))) ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@310 $generated@@138) $generated@@67))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@591 $generated@@594)))) ($generated@@274 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@87 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593))
)))
(assert (= $generated@@160 ($generated@@261 $generated@@160)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@145) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@597) (and ($generated@@143 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@70) ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@601) (and ($generated@@143 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@70) ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@154) (= (type $generated@@604) $generated@@154)) (= ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)) ($generated@@261 ($generated@@228 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@154) (= (type $generated@@606) $generated@@145)) (= ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)) ($generated@@261 ($generated@@268 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))) ($generated@@261 ($generated@@299 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@299 ($generated@@261 $generated@@608)) ($generated@@261 ($generated@@299 $generated@@608)))
 :pattern ( ($generated@@299 ($generated@@261 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@292 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@291 $generated@@610)) (= ($generated@@290 $generated@@609) 0)) (= $generated@@609 ($generated@@289 $generated@@610))))
 :pattern ( ($generated@@290 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@82 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@304 $generated@@611) ($generated ($generated@@87 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@616) $generated@@2)) ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@618) $generated@@3)) ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@620) $generated@@4)) ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@622) $generated@@461)) ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@624) $generated@@154)) ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@625) $generated@@70) (= (type $generated@@626) $generated@@154)) (= (type $generated@@627) $generated@@145)) (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@628)) (= ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628)  (and ($generated@@274 $generated@@626 $generated@@625 $generated@@628) ($generated@@80 $generated@@627 ($generated@@223 $generated@@625) $generated@@628))))
 :pattern ( ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@291 $generated@@154)) (= (type $generated@@630) $generated@@70)) (= ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@290 $generated@@629))) ($generated@@229 ($generated@@510 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@510 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@291 $generated@@154)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@290 $generated@@633))) (< ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@636) $generated@@70)) (= (type $generated@@637) $generated@@70)) ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637))) (and (and ($generated@@141 ($generated@@313 $generated@@635) ($generated@@249 $generated@@636)) ($generated@@141 ($generated@@360 $generated@@635) ($generated@@249 $generated@@637))) ($generated@@141 ($generated@@393 $generated@@635) ($generated@@249 ($generated@@144 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@639) $generated@@70)) (= (type $generated@@640) $generated@@70)) ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640))) (and (and ($generated@@141 ($generated@@331 $generated@@638) ($generated@@254 $generated@@639)) ($generated@@141 ($generated@@371 $generated@@638) ($generated@@254 $generated@@640))) ($generated@@141 ($generated@@401 $generated@@638) ($generated@@254 ($generated@@144 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@141 $generated@@641 $generated@@46))
 :pattern ( ($generated@@141 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@141 $generated@@642 $generated@@47))
 :pattern ( ($generated@@141 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@141 $generated@@643 $generated@@44))
 :pattern ( ($generated@@141 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@461) ($generated@@141 $generated@@644 $generated@@45))
 :pattern ( ($generated@@141 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@154) ($generated@@141 $generated@@645 $generated@@48))
 :pattern ( ($generated@@141 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 (T@U) Bool)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(assert  (and (and (and (and (= (type $generated@@646) ($generated@@169 $generated@@83 $generated@@4)) (= (type $generated@@647) $generated@@83)) (= (type $generated@@648) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@649) $generated@@145)) (= (type $generated@@651) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@653  (=> (and (= $generated@@646 ($generated@@168 $generated@@647 $generated@@648 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@239 $generated@@649 $generated@@649))))
(let (($generated@@654  (=> (and ($generated@@224 $generated@@648) ($generated@@650 $generated@@648)) (=> (and (and (and ($generated@@141 $generated@@649 ($generated@@223 $generated@@138)) ($generated@@80 $generated@@649 ($generated@@223 $generated@@138) $generated@@648)) ($generated@@381 $generated@@649)) (and (and ($generated@@141 $generated@@651 ($generated@@223 $generated@@46)) ($generated@@80 $generated@@651 ($generated@@223 $generated@@46) $generated@@648)) (and (= 1 $generated@@652) (= (ControlFlow 0 3) 2)))) $generated@@653))))
$generated@@654)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 (T@T T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@298 (T@U T@U T@U) Bool)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@333 (T@U) Int)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@T) T@U)
(declare-fun $generated@@362 (T@T T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@461 () T@U)
(declare-fun $generated@@465 (T@T) T@U)
(declare-fun $generated@@489 () T@T)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@540 (T@U Int) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@581 (T@U) Int)
(declare-fun $generated@@662 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@142 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@142 $generated@@143))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@138) (= (type $generated@@145) $generated@@139)) (or ($generated@@140 $generated@@145) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@145 ($generated@@142 $generated@@46))))) true)
 :pattern ( ($generated@@137 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@141 $generated@@146 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@146 ($generated@@79 0)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@139)) ($generated@@141 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@141 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@139) (= (type $generated@@161) $generated@@139)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@164))
)) (= (type $generated@@163) $generated@@139)))
(assert (= ($generated@@162 $generated@@163) $generated@@63))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@68)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@169) $generated@@68)) ($generated@@141 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@141 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 17)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@71 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@81) (= (type $generated@@220) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@221) ($generated@@70 $generated@@4))) (= (type $generated@@223) $generated@@81)) (= (type $generated@@224) ($generated@@70 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@71 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@81) (= (type $generated@@232) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@233) ($generated@@70 $generated@@4))) (= (type $generated@@235) $generated@@81)) (= (type $generated@@236) ($generated@@70 $generated@@237))) (= ($generated@@0 ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert  (and (and (and (forall (($generated@@244 T@U) ) (! (= (type ($generated@@238 $generated@@244)) $generated@@138)
 :pattern ( ($generated@@238 $generated@@244))
)) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@240 $generated@@245)) $generated@@139)
 :pattern ( ($generated@@240 $generated@@245))
))) (forall (($generated@@246 T@T) ($generated@@247 T@U) ) (! (= (type ($generated@@241 $generated@@246 $generated@@247)) $generated@@246)
 :pattern ( ($generated@@241 $generated@@246 $generated@@247))
))) (forall (($generated@@248 T@U) ) (! (= (type ($generated@@242 $generated@@248)) $generated@@157)
 :pattern ( ($generated@@242 $generated@@248))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (= (type $generated@@249) $generated@@138) (= (type $generated@@250) $generated@@139)) (or ($generated@@140 $generated@@250) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@250 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@239 $generated@@250)) (let (($generated@@251 ($generated@@240 $generated@@250)))
(let (($generated@@252 ($generated ($generated@@241 $generated@@2 ($generated@@242 $generated@@250)))))
 (=> (<= ($generated@@243 0) $generated@@252) ($generated@@140 $generated@@251))))) (= ($generated@@137 ($generated@@238 $generated@@249) $generated@@250) (ite ($generated@@239 $generated@@250) true (let (($generated@@253 ($generated@@240 $generated@@250)))
(let (($generated@@254 ($generated ($generated@@241 $generated@@2 ($generated@@242 $generated@@250)))))
 (and (<= ($generated@@243 0) $generated@@254) ($generated@@137 $generated@@249 $generated@@253))))))))
 :pattern ( ($generated@@137 ($generated@@238 $generated@@249) $generated@@250))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) $generated@@68) (= (type $generated@@257) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@255 $generated@@257)) ($generated@@78 $generated@@163 ($generated@@142 $generated@@256) $generated@@257))
 :pattern ( ($generated@@78 $generated@@163 ($generated@@142 $generated@@256) $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@139)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@68) (= (type $generated@@263) $generated@@68)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) $generated@@157)) (= ($generated@@141 ($generated@@258 $generated@@264 $generated@@265) ($generated@@148 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@141 ($generated@@258 $generated@@264 $generated@@265) ($generated@@148 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@68) ($generated@@141 $generated@@163 ($generated@@142 $generated@@266)))
 :pattern ( ($generated@@141 $generated@@163 ($generated@@142 $generated@@266)))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@139) (= (type $generated@@268) $generated@@139)) (= ($generated@@154 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@154 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@139) (= (type $generated@@271) $generated@@139)) (= ($generated@@269 $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@269 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@139) (= (type $generated@@274) $generated@@139)) (and ($generated@@272 $generated@@273) ($generated@@272 $generated@@274))) (= ($generated@@269 $generated@@273 $generated@@274)  (and (= ($generated@@242 $generated@@273) ($generated@@242 $generated@@274)) ($generated@@269 ($generated@@240 $generated@@273) ($generated@@240 $generated@@274)))))
 :pattern ( ($generated@@269 $generated@@273 $generated@@274) ($generated@@272 $generated@@273))
 :pattern ( ($generated@@269 $generated@@273 $generated@@274) ($generated@@272 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@68)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@278) $generated@@68)) (= ($generated@@141 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@157) ($generated@@0 ($generated@@85 $generated@@277 $generated@@279))) ($generated@@259 $generated@@279 $generated@@278))
 :pattern ( ($generated@@85 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@141 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@68)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@283) $generated@@68)) (= ($generated@@141 $generated@@282 ($generated@@280 $generated@@283)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@157) ($generated@@0 ($generated@@85 $generated@@282 $generated@@284))) ($generated@@259 $generated@@284 $generated@@283))
 :pattern ( ($generated@@85 $generated@@282 $generated@@284))
))))
 :pattern ( ($generated@@141 $generated@@282 ($generated@@280 $generated@@283)))
)))
(assert (forall (($generated@@285 Int) ) (! (= ($generated@@243 $generated@@285) $generated@@285)
 :pattern ( ($generated@@243 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
(= (type ($generated@@286 $generated@@287)) $generated@@288))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= ($generated@@286 $generated@@289) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@139) (= (type $generated@@291) $generated@@139)) (and ($generated@@239 $generated@@290) ($generated@@239 $generated@@291))) (= ($generated@@269 $generated@@290 $generated@@291) true))
 :pattern ( ($generated@@269 $generated@@290 $generated@@291) ($generated@@239 $generated@@290))
 :pattern ( ($generated@@269 $generated@@290 $generated@@291) ($generated@@239 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@292 $generated@@293 $generated@@294)) $generated@@139)
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@68) (= (type $generated@@296) $generated@@157)) (= (type $generated@@297) $generated@@139)) (= ($generated@@141 ($generated@@292 $generated@@296 $generated@@297) ($generated@@142 $generated@@295))  (and ($generated@@259 $generated@@296 $generated@@295) ($generated@@141 $generated@@297 ($generated@@142 $generated@@295)))))
 :pattern ( ($generated@@141 ($generated@@292 $generated@@296 $generated@@297) ($generated@@142 $generated@@295)))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) $generated@@68) (= (type $generated@@300) $generated@@68)) (= (type $generated@@301) $generated@@157)) (= (type $generated@@302) $generated@@157)) (= (type $generated@@303) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@255 $generated@@303)) (= ($generated@@78 ($generated@@258 $generated@@301 $generated@@302) ($generated@@148 $generated@@299 $generated@@300) $generated@@303)  (and ($generated@@298 $generated@@301 $generated@@299 $generated@@303) ($generated@@298 $generated@@302 $generated@@300 $generated@@303))))
 :pattern ( ($generated@@78 ($generated@@258 $generated@@301 $generated@@302) ($generated@@148 $generated@@299 $generated@@300) $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@139) (= ($generated@@147 $generated@@304) (= ($generated@@162 $generated@@304) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@139) (= ($generated@@239 $generated@@305) (= ($generated@@162 $generated@@305) $generated@@63)))
 :pattern ( ($generated@@239 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@139) (= ($generated@@272 $generated@@306) (= ($generated@@162 $generated@@306) $generated@@65)))
 :pattern ( ($generated@@272 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@139) ($generated@@147 $generated@@307)) (exists (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (and (and (= (type $generated@@308) $generated@@157) (= (type $generated@@309) $generated@@157)) (= $generated@@307 ($generated@@258 $generated@@308 $generated@@309)))
 :no-pattern (type $generated@@308)
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@147 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@139) ($generated@@272 $generated@@310)) (exists (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (and (and (= (type $generated@@311) $generated@@157) (= (type $generated@@312) $generated@@139)) (= $generated@@310 ($generated@@292 $generated@@311 $generated@@312)))
 :no-pattern (type $generated@@311)
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
)))
 :pattern ( ($generated@@272 $generated@@310))
)))
(assert  (and (and (forall (($generated@@317 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@317)) 18)) (forall (($generated@@318 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@315 $generated@@318))
))) (forall (($generated@@319 T@T) ) (! (= (type ($generated@@313 $generated@@319)) ($generated@@315 $generated@@319))
 :pattern ( ($generated@@313 $generated@@319))
))))
(assert (forall (($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@320)) 0)
 :pattern ( ($generated@@313 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@139) ($generated@@239 $generated@@321)) (= $generated@@321 $generated@@163))
 :pattern ( ($generated@@239 $generated@@321))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@322) $generated@@138) (= (type $generated@@323) $generated@@139)) (or ($generated@@140 ($generated@@286 $generated@@323)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@323 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@286 ($generated@@11 ($generated@@239 ($generated@@286 $generated@@323)))))) (let (($generated@@324 ($generated@@286 ($generated@@240 ($generated@@286 $generated@@323)))))
(let (($generated@@325 ($generated@@243 ($generated ($generated@@241 $generated@@2 ($generated@@242 ($generated@@286 $generated@@323)))))))
 (=> (<= ($generated@@243 0) $generated@@325) ($generated@@140 $generated@@324))))) (= ($generated@@137 ($generated@@238 $generated@@322) ($generated@@286 $generated@@323)) (ite ($generated@@239 ($generated@@286 $generated@@323)) true (let (($generated@@326 ($generated@@286 ($generated@@240 ($generated@@286 $generated@@323)))))
(let (($generated@@327 ($generated@@243 ($generated ($generated@@241 $generated@@2 ($generated@@242 ($generated@@286 $generated@@323)))))))
 (and (<= ($generated@@243 0) $generated@@327) ($generated@@137 ($generated@@238 $generated@@322) $generated@@326))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@238 $generated@@322) ($generated@@286 $generated@@323)))
))))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@157)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@68) (= (type $generated@@332) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@298 ($generated@@328 $generated@@330) $generated@@331 $generated@@332) ($generated@@78 $generated@@330 $generated@@331 $generated@@332)))
 :pattern ( ($generated@@298 ($generated@@328 $generated@@330) $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@335 T@T) ) (! (= (type ($generated@@334 $generated@@335)) ($generated@@80 $generated@@335 $generated@@2))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@83 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@80 $generated@@337 $generated@@2)) (and (= (= ($generated@@333 $generated@@336) 0) (= $generated@@336 ($generated@@334 $generated@@337))) (=> (not (= ($generated@@333 $generated@@336) 0)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) (< 0 ($generated ($generated@@85 $generated@@336 $generated@@338))))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@73)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@68) (and (= ($generated@@76 ($generated@@142 $generated@@341)) $generated@@64) (= ($generated@@339 ($generated@@142 $generated@@341)) $generated@@67)))
 :pattern ( ($generated@@142 $generated@@341))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 19)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@80 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@85 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@85 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert  (and (and (and (and (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (= ($generated@@1 ($generated@@362 $generated@@365 $generated@@366)) 20)) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@363 ($generated@@362 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@362 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@364 ($generated@@362 $generated@@369 $generated@@370)) $generated@@370)
 :pattern ( ($generated@@362 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@363 (type $generated@@371))))
(= (type ($generated@@360 $generated@@371)) ($generated@@80 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@371))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= (type ($generated@@361 $generated@@373 $generated@@374)) ($generated@@362 $generated@@373 $generated@@374))
 :pattern ( ($generated@@361 $generated@@373 $generated@@374))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@T) ) (! (let (($generated@@377 (type $generated@@375)))
 (not ($generated@@0 ($generated@@85 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375))))
 :pattern ( (let (($generated@@377 (type $generated@@375)))
($generated@@85 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375)))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@83 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@80 $generated@@379 $generated@@2)) (= ($generated@@166 $generated@@378) (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@379) (and (<= 0 ($generated ($generated@@85 $generated@@378 $generated@@380))) (<= ($generated ($generated@@85 $generated@@378 $generated@@380)) ($generated@@333 $generated@@378))))
 :pattern ( ($generated@@85 $generated@@378 $generated@@380))
)))))
 :pattern ( ($generated@@166 $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@346 (type $generated@@381))))
(let (($generated@@383 ($generated@@345 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@344 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@343 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@85 ($generated@@342 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@342 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@346 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@80 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@346 (type $generated@@388))))
(let (($generated@@390 ($generated@@345 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@344 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@343 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@85 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@364 (type $generated@@392))))
(let (($generated@@394 ($generated@@363 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@362 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@361 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@85 ($generated@@360 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@360 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@364 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@80 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@364 (type $generated@@399))))
(let (($generated@@401 ($generated@@363 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@362 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@361 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@85 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@404) $generated@@68)) (= ($generated@@141 $generated@@403 ($generated@@165 $generated@@404)) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@403 $generated@@405)))) ($generated@@259 $generated@@405 $generated@@404))
 :pattern ( ($generated@@85 $generated@@403 $generated@@405))
))))
 :pattern ( ($generated@@141 $generated@@403 ($generated@@165 $generated@@404)))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@407) $generated@@68)) (= (type $generated@@408) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@406 ($generated@@275 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@85 $generated@@406 $generated@@409))) ($generated@@298 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@85 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@78 $generated@@406 ($generated@@275 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@410 ($generated@@280 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@157) ($generated@@0 ($generated@@85 $generated@@410 $generated@@413))) ($generated@@298 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@85 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@78 $generated@@410 ($generated@@280 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(= ($generated ($generated@@85 ($generated@@334 $generated@@415) $generated@@414)) 0))
 :pattern ( (let (($generated@@415 (type $generated@@414)))
($generated@@85 ($generated@@334 $generated@@415) $generated@@414)))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@346 (type $generated@@419))))
(let (($generated@@421 ($generated@@345 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@80 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@423) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@85 ($generated@@342 $generated@@422) ($generated@@155 ($generated@@241 $generated@@139 $generated@@423)))) (= ($generated@@85 ($generated@@417 $generated@@422) ($generated@@155 ($generated@@241 $generated@@139 $generated@@423))) ($generated@@156 ($generated@@241 $generated@@139 $generated@@423))))))
 :pattern ( ($generated@@85 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@364 (type $generated@@427))))
(let (($generated@@429 ($generated@@363 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@80 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@431) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@85 ($generated@@360 $generated@@430) ($generated@@155 ($generated@@241 $generated@@139 $generated@@431)))) (= ($generated@@85 ($generated@@425 $generated@@430) ($generated@@155 ($generated@@241 $generated@@139 $generated@@431))) ($generated@@156 ($generated@@241 $generated@@139 $generated@@431))))))
 :pattern ( ($generated@@85 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(let (($generated@@435 ($generated@@345 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@344 $generated@@435 $generated@@434)) (= ($generated@@0 ($generated@@85 ($generated@@385 $generated@@432) $generated@@433)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) (and ($generated@@0 ($generated@@85 ($generated@@342 $generated@@432) $generated@@436)) (= $generated@@433 ($generated@@85 ($generated@@417 $generated@@432) $generated@@436))))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@432) $generated@@436))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@432) $generated@@436))
))))))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@363 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@362 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@85 ($generated@@396 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@85 ($generated@@360 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@85 ($generated@@425 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@85 ($generated@@360 $generated@@437) $generated@@441))
 :pattern ( ($generated@@85 ($generated@@425 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@68)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@446) $generated@@68)) (= (type $generated@@447) $generated@@68)) (= (type $generated@@448) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@342 $generated@@445) $generated@@449))) (and ($generated@@298 ($generated@@85 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@298 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@454) $generated@@68)) (= (type $generated@@455) $generated@@68)) (= (type $generated@@456) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@360 $generated@@453) $generated@@457))) (and ($generated@@298 ($generated@@85 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@298 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@85 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@85 ($generated@@360 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@78 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@458) $generated@@68) (= (type $generated@@459) $generated@@139)) ($generated@@141 $generated@@459 ($generated@@142 $generated@@458))) (or ($generated@@239 $generated@@459) ($generated@@272 $generated@@459)))
 :pattern ( ($generated@@272 $generated@@459) ($generated@@141 $generated@@459 ($generated@@142 $generated@@458)))
 :pattern ( ($generated@@239 $generated@@459) ($generated@@141 $generated@@459 ($generated@@142 $generated@@458)))
)))
(assert  (and (forall (($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@462)) $generated@@138)
 :pattern ( ($generated@@460 $generated@@462))
)) (= (type $generated@@461) $generated@@138)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@138) (= (type $generated@@464) $generated@@139)) (= ($generated@@137 $generated@@463 $generated@@464) ($generated@@137 $generated@@461 $generated@@464)))
 :pattern ( ($generated@@137 ($generated@@460 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@T) ) (! (= (type ($generated@@465 $generated@@466)) ($generated@@80 $generated@@466 $generated@@4))
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@364 (type $generated@@467))))
(let (($generated@@469 ($generated@@363 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@362 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@361 $generated@@469 $generated@@468)) (= ($generated@@360 $generated@@467) ($generated@@465 $generated@@469))))))
 :pattern ( ($generated@@360 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@364 (type $generated@@470))))
(let (($generated@@472 ($generated@@363 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@362 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@361 $generated@@472 $generated@@471)) (= ($generated@@396 $generated@@470) ($generated@@465 $generated@@471))))))
 :pattern ( ($generated@@396 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@364 (type $generated@@473))))
(let (($generated@@475 ($generated@@363 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@362 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@361 $generated@@475 $generated@@474)) (= ($generated@@424 $generated@@473) ($generated@@465 $generated@@157))))))
 :pattern ( ($generated@@424 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@346 (type $generated@@476))))
(let (($generated@@478 ($generated@@345 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@344 $generated@@478 $generated@@477)) (or (= $generated@@476 ($generated@@343 $generated@@478 $generated@@477)) (exists (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (and (and (= (type $generated@@479) $generated@@157) (= (type $generated@@480) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@416 $generated@@476) ($generated@@328 ($generated@@258 $generated@@479 $generated@@480)))))
 :no-pattern (type $generated@@479)
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@416 $generated@@476))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@364 (type $generated@@481))))
(let (($generated@@483 ($generated@@363 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@362 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@361 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@157) (= (type $generated@@485) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@424 $generated@@481) ($generated@@328 ($generated@@258 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@424 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@157) ($generated@@259 $generated@@486 $generated@@46)) (and (= ($generated@@328 ($generated@@241 $generated@@2 $generated@@486)) $generated@@486) ($generated@@141 ($generated@@241 $generated@@2 $generated@@486) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@486 $generated@@46))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@157) ($generated@@259 $generated@@487 $generated@@47)) (and (= ($generated@@328 ($generated@@241 $generated@@3 $generated@@487)) $generated@@487) ($generated@@141 ($generated@@241 $generated@@3 $generated@@487) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@487 $generated@@47))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@157) ($generated@@259 $generated@@488 $generated@@44)) (and (= ($generated@@328 ($generated@@241 $generated@@4 $generated@@488)) $generated@@488) ($generated@@141 ($generated@@241 $generated@@4 $generated@@488) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@488 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@489) 21))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@157) ($generated@@259 $generated@@490 $generated@@45)) (and (= ($generated@@328 ($generated@@241 $generated@@489 $generated@@490)) $generated@@490) ($generated@@141 ($generated@@241 $generated@@489 $generated@@490) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@490 $generated@@45))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@138) (= (type $generated@@492) $generated@@139)) (= ($generated@@137 ($generated@@238 $generated@@491) $generated@@492) ($generated@@137 $generated@@491 $generated@@492)))
 :pattern ( ($generated@@137 ($generated@@238 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@68) (= ($generated@@259 ($generated@@328 $generated@@493) $generated@@494) ($generated@@141 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@259 ($generated@@328 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@83 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@80 $generated@@496 $generated@@2)) (<= 0 ($generated@@333 $generated@@495))))
 :pattern ( ($generated@@333 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@316 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@315 $generated@@498)) (<= 0 ($generated@@314 $generated@@497))))
 :pattern ( ($generated@@314 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@442 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@442 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@68) (= (type $generated@@506) $generated@@68)) (= ($generated@@503 ($generated@@442 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@442 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@76 ($generated@@442 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@442 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@450 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@450 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@513 ($generated@@450 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@450 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@76 ($generated@@450 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@450 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@157) (= (type $generated@@520) $generated@@157)) (= ($generated@@162 ($generated@@258 $generated@@519 $generated@@520)) $generated@@61))
 :pattern ( ($generated@@258 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@148 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@148 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@148 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@148 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@157)) (= ($generated@@155 ($generated@@258 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@258 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@157) (= (type $generated@@532) $generated@@157)) (= ($generated@@156 ($generated@@258 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@258 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@157) (= (type $generated@@534) $generated@@139)) (= ($generated@@162 ($generated@@292 $generated@@533 $generated@@534)) $generated@@65))
 :pattern ( ($generated@@292 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@157) (= (type $generated@@536) $generated@@139)) (= ($generated@@242 ($generated@@292 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@292 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@157) (= (type $generated@@538) $generated@@139)) (= ($generated@@240 ($generated@@292 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@292 $generated@@537 $generated@@538))
)))
(assert  (and (forall (($generated@@541 T@U) ) (! (= (type ($generated@@539 $generated@@541)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@541))
)) (forall (($generated@@542 T@U) ($generated@@543 Int) ) (! (let (($generated@@544 ($generated@@316 (type $generated@@542))))
(= (type ($generated@@540 $generated@@542 $generated@@543)) $generated@@544))
 :pattern ( ($generated@@540 $generated@@542 $generated@@543))
))))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@315 $generated@@157)) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@545 ($generated@@539 $generated@@546) $generated@@547) (forall (($generated@@548 Int) ) (!  (=> (and (<= 0 $generated@@548) (< $generated@@548 ($generated@@314 $generated@@545))) ($generated@@298 ($generated@@540 $generated@@545 $generated@@548) $generated@@546 $generated@@547))
 :pattern ( ($generated@@540 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@78 $generated@@545 ($generated@@539 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@549 ($generated@@79 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@79 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@275 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@275 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@76 ($generated@@275 $generated@@554)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@280 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@280 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@76 ($generated@@280 $generated@@558)) $generated@@55))
 :pattern ( ($generated@@280 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@165 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@165 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@76 ($generated@@165 $generated@@562)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@539 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@539 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@76 ($generated@@539 $generated@@566)) $generated@@57))
 :pattern ( ($generated@@539 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@567 ($generated@@142 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@142 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
(= ($generated@@241 $generated@@571 ($generated@@328 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@328 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@68)) (= ($generated@@141 $generated@@572 ($generated@@442 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@342 $generated@@572) $generated@@575))) (and ($generated@@259 ($generated@@85 ($generated@@417 $generated@@572) $generated@@575) $generated@@574) ($generated@@259 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@572) $generated@@575))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@141 $generated@@572 ($generated@@442 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@577) $generated@@68)) (= (type $generated@@578) $generated@@68)) (= ($generated@@141 $generated@@576 ($generated@@450 $generated@@577 $generated@@578)) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@360 $generated@@576) $generated@@579))) (and ($generated@@259 ($generated@@85 ($generated@@425 $generated@@576) $generated@@579) $generated@@578) ($generated@@259 $generated@@579 $generated@@577)))
 :pattern ( ($generated@@85 ($generated@@425 $generated@@576) $generated@@579))
 :pattern ( ($generated@@85 ($generated@@360 $generated@@576) $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@576 ($generated@@450 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@157) (= (type $generated@@583) $generated@@157)) (< ($generated@@580 $generated@@582) ($generated@@581 ($generated@@258 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@258 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@157) (= (type $generated@@585) $generated@@157)) (< ($generated@@580 $generated@@585) ($generated@@581 ($generated@@258 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@258 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@157) (= (type $generated@@587) $generated@@139)) (< ($generated@@580 $generated@@586) ($generated@@581 ($generated@@292 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@292 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@157) (= (type $generated@@589) $generated@@139)) (< ($generated@@581 $generated@@589) ($generated@@581 ($generated@@292 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@292 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@157) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) ($generated@@259 $generated@@590 ($generated@@442 $generated@@591 $generated@@592))) (and (= ($generated@@328 ($generated@@241 ($generated@@344 $generated@@157 $generated@@157) $generated@@590)) $generated@@590) ($generated@@141 ($generated@@241 ($generated@@344 $generated@@157 $generated@@157) $generated@@590) ($generated@@442 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@259 $generated@@590 ($generated@@442 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@157) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) $generated@@68)) ($generated@@259 $generated@@593 ($generated@@450 $generated@@594 $generated@@595))) (and (= ($generated@@328 ($generated@@241 ($generated@@362 $generated@@157 $generated@@157) $generated@@593)) $generated@@593) ($generated@@141 ($generated@@241 ($generated@@362 $generated@@157 $generated@@157) $generated@@593) ($generated@@450 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@259 $generated@@593 ($generated@@450 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@68) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@157)) ($generated@@259 $generated@@598 ($generated@@148 $generated@@596 $generated@@597))) (and (= ($generated@@328 ($generated@@241 $generated@@139 $generated@@598)) $generated@@598) ($generated@@141 ($generated@@241 $generated@@139 $generated@@598) ($generated@@148 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@259 $generated@@598 ($generated@@148 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@139) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@255 $generated@@601) (and ($generated@@272 $generated@@599) ($generated@@78 $generated@@599 ($generated@@142 $generated@@600) $generated@@601)))) ($generated@@298 ($generated@@242 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@298 ($generated@@242 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (not ($generated@@0 ($generated@@85 ($generated@@465 $generated@@603) $generated@@602))))
 :pattern ( (let (($generated@@603 (type $generated@@602)))
($generated@@85 ($generated@@465 $generated@@603) $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@604 $generated@@605)) $generated@@62) (= ($generated@@339 ($generated@@148 $generated@@604 $generated@@605)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@139) (= ($generated@@580 ($generated@@328 $generated@@606)) ($generated@@581 $generated@@606)))
 :pattern ( ($generated@@580 ($generated@@328 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@157) ($generated@@259 $generated@@607 ($generated@@79 0))) (and (= ($generated@@328 ($generated@@241 $generated@@2 $generated@@607)) $generated@@607) ($generated@@141 ($generated@@241 ($generated@@80 $generated@@157 $generated@@4) $generated@@607) ($generated@@79 0))))
 :pattern ( ($generated@@259 $generated@@607 ($generated@@79 0)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@157) (= (type $generated@@609) $generated@@68)) ($generated@@259 $generated@@608 ($generated@@275 $generated@@609))) (and (= ($generated@@328 ($generated@@241 ($generated@@80 $generated@@157 $generated@@4) $generated@@608)) $generated@@608) ($generated@@141 ($generated@@241 ($generated@@80 $generated@@157 $generated@@4) $generated@@608) ($generated@@275 $generated@@609))))
 :pattern ( ($generated@@259 $generated@@608 ($generated@@275 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@157) (= (type $generated@@611) $generated@@68)) ($generated@@259 $generated@@610 ($generated@@280 $generated@@611))) (and (= ($generated@@328 ($generated@@241 ($generated@@80 $generated@@157 $generated@@4) $generated@@610)) $generated@@610) ($generated@@141 ($generated@@241 ($generated@@80 $generated@@157 $generated@@4) $generated@@610) ($generated@@280 $generated@@611))))
 :pattern ( ($generated@@259 $generated@@610 ($generated@@280 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@157) (= (type $generated@@613) $generated@@68)) ($generated@@259 $generated@@612 ($generated@@165 $generated@@613))) (and (= ($generated@@328 ($generated@@241 ($generated@@80 $generated@@157 $generated@@2) $generated@@612)) $generated@@612) ($generated@@141 ($generated@@241 ($generated@@80 $generated@@157 $generated@@2) $generated@@612) ($generated@@165 $generated@@613))))
 :pattern ( ($generated@@259 $generated@@612 ($generated@@165 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@157) (= (type $generated@@615) $generated@@68)) ($generated@@259 $generated@@614 ($generated@@539 $generated@@615))) (and (= ($generated@@328 ($generated@@241 ($generated@@315 $generated@@157) $generated@@614)) $generated@@614) ($generated@@141 ($generated@@241 ($generated@@315 $generated@@157) $generated@@614) ($generated@@539 $generated@@615))))
 :pattern ( ($generated@@259 $generated@@614 ($generated@@539 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@68) (= (type $generated@@617) $generated@@157)) ($generated@@259 $generated@@617 ($generated@@142 $generated@@616))) (and (= ($generated@@328 ($generated@@241 $generated@@139 $generated@@617)) $generated@@617) ($generated@@141 ($generated@@241 $generated@@139 $generated@@617) ($generated@@142 $generated@@616))))
 :pattern ( ($generated@@259 $generated@@617 ($generated@@142 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@139) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@255 $generated@@620) (and ($generated@@272 $generated@@618) ($generated@@78 $generated@@618 ($generated@@142 $generated@@619) $generated@@620)))) ($generated@@78 ($generated@@240 $generated@@618) ($generated@@142 $generated@@619) $generated@@620))
 :pattern ( ($generated@@78 ($generated@@240 $generated@@618) ($generated@@142 $generated@@619) $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@621 ($generated@@165 $generated@@622) $generated@@623) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@621 $generated@@624)))) ($generated@@298 $generated@@624 $generated@@622 $generated@@623))
 :pattern ( ($generated@@85 $generated@@621 $generated@@624))
))))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@165 $generated@@622) $generated@@623))
)))
(assert (= $generated@@163 ($generated@@286 $generated@@163)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@139) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@255 $generated@@627) (and ($generated@@147 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@68) ($generated@@78 $generated@@625 ($generated@@148 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@78 $generated@@625 ($generated@@148 $generated@@626 $generated@@628) $generated@@627))
))))) ($generated@@298 ($generated@@155 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@298 ($generated@@155 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@139) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@255 $generated@@631) (and ($generated@@147 $generated@@629) (exists (($generated@@632 T@U) ) (!  (and (= (type $generated@@632) $generated@@68) ($generated@@78 $generated@@629 ($generated@@148 $generated@@632 $generated@@630) $generated@@631))
 :pattern ( ($generated@@78 $generated@@629 ($generated@@148 $generated@@632 $generated@@630) $generated@@631))
))))) ($generated@@298 ($generated@@156 $generated@@629) $generated@@630 $generated@@631))
 :pattern ( ($generated@@298 ($generated@@156 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@157) (= (type $generated@@634) $generated@@157)) (= ($generated@@258 ($generated@@286 $generated@@633) ($generated@@286 $generated@@634)) ($generated@@286 ($generated@@258 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@258 ($generated@@286 $generated@@633) ($generated@@286 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@157) (= (type $generated@@636) $generated@@139)) (= ($generated@@292 ($generated@@286 $generated@@635) ($generated@@286 $generated@@636)) ($generated@@286 ($generated@@292 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@292 ($generated@@286 $generated@@635) ($generated@@286 $generated@@636)))
)))
(assert (forall (($generated@@637 Int) ) (! (= ($generated@@328 ($generated@@8 ($generated@@243 $generated@@637))) ($generated@@286 ($generated@@328 ($generated@@8 $generated@@637))))
 :pattern ( ($generated@@328 ($generated@@8 ($generated@@243 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ) (! (= ($generated@@328 ($generated@@286 $generated@@638)) ($generated@@286 ($generated@@328 $generated@@638)))
 :pattern ( ($generated@@328 ($generated@@286 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@316 (type $generated@@639))))
 (=> (and (= (type $generated@@639) ($generated@@315 $generated@@640)) (= ($generated@@314 $generated@@639) 0)) (= $generated@@639 ($generated@@313 $generated@@640))))
 :pattern ( ($generated@@314 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@642)))
 (=> (and (and (= (type $generated@@641) ($generated@@80 $generated@@644 $generated@@2)) (= (type $generated@@643) $generated@@2)) (<= 0 ($generated $generated@@643))) (= ($generated@@333 ($generated@@86 $generated@@641 $generated@@642 $generated@@643)) (+ (- ($generated@@333 $generated@@641) ($generated ($generated@@85 $generated@@641 $generated@@642))) ($generated $generated@@643)))))
 :pattern ( ($generated@@333 ($generated@@86 $generated@@641 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@646) $generated@@2)) ($generated@@78 $generated@@646 $generated@@46 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@46 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@648) $generated@@3)) ($generated@@78 $generated@@648 $generated@@47 $generated@@647))
 :pattern ( ($generated@@78 $generated@@648 $generated@@47 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@650) $generated@@4)) ($generated@@78 $generated@@650 $generated@@44 $generated@@649))
 :pattern ( ($generated@@78 $generated@@650 $generated@@44 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@652) $generated@@489)) ($generated@@78 $generated@@652 $generated@@45 $generated@@651))
 :pattern ( ($generated@@78 $generated@@652 $generated@@45 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@654) $generated@@157)) ($generated@@78 $generated@@654 $generated@@48 $generated@@653))
 :pattern ( ($generated@@78 $generated@@654 $generated@@48 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@655) $generated@@68) (= (type $generated@@656) $generated@@157)) (= (type $generated@@657) $generated@@139)) (= (type $generated@@658) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@255 $generated@@658)) (= ($generated@@78 ($generated@@292 $generated@@656 $generated@@657) ($generated@@142 $generated@@655) $generated@@658)  (and ($generated@@298 $generated@@656 $generated@@655 $generated@@658) ($generated@@78 $generated@@657 ($generated@@142 $generated@@655) $generated@@658))))
 :pattern ( ($generated@@78 ($generated@@292 $generated@@656 $generated@@657) ($generated@@142 $generated@@655) $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@315 $generated@@157)) (= (type $generated@@660) $generated@@68)) (= ($generated@@141 $generated@@659 ($generated@@539 $generated@@660)) (forall (($generated@@661 Int) ) (!  (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@314 $generated@@659))) ($generated@@259 ($generated@@540 $generated@@659 $generated@@661) $generated@@660))
 :pattern ( ($generated@@540 $generated@@659 $generated@@661))
))))
 :pattern ( ($generated@@141 $generated@@659 ($generated@@539 $generated@@660)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 Int) ) (!  (=> (= (type $generated@@663) ($generated@@315 $generated@@157)) (=> (and (<= 0 $generated@@664) (< $generated@@664 ($generated@@314 $generated@@663))) (< ($generated@@581 ($generated@@241 $generated@@139 ($generated@@540 $generated@@663 $generated@@664))) ($generated@@662 $generated@@663))))
 :pattern ( ($generated@@581 ($generated@@241 $generated@@139 ($generated@@540 $generated@@663 $generated@@664))))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@666) $generated@@68)) (= (type $generated@@667) $generated@@68)) ($generated@@141 $generated@@665 ($generated@@442 $generated@@666 $generated@@667))) (and (and ($generated@@141 ($generated@@342 $generated@@665) ($generated@@275 $generated@@666)) ($generated@@141 ($generated@@385 $generated@@665) ($generated@@275 $generated@@667))) ($generated@@141 ($generated@@416 $generated@@665) ($generated@@275 ($generated@@148 $generated@@666 $generated@@667)))))
 :pattern ( ($generated@@141 $generated@@665 ($generated@@442 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (and (= (type $generated@@668) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@669) $generated@@68)) (= (type $generated@@670) $generated@@68)) ($generated@@141 $generated@@668 ($generated@@450 $generated@@669 $generated@@670))) (and (and ($generated@@141 ($generated@@360 $generated@@668) ($generated@@280 $generated@@669)) ($generated@@141 ($generated@@396 $generated@@668) ($generated@@280 $generated@@670))) ($generated@@141 ($generated@@424 $generated@@668) ($generated@@280 ($generated@@148 $generated@@669 $generated@@670)))))
 :pattern ( ($generated@@141 $generated@@668 ($generated@@450 $generated@@669 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@2) ($generated@@141 $generated@@671 $generated@@46))
 :pattern ( ($generated@@141 $generated@@671 $generated@@46))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@3) ($generated@@141 $generated@@672 $generated@@47))
 :pattern ( ($generated@@141 $generated@@672 $generated@@47))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@4) ($generated@@141 $generated@@673 $generated@@44))
 :pattern ( ($generated@@141 $generated@@673 $generated@@44))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@489) ($generated@@141 $generated@@674 $generated@@45))
 :pattern ( ($generated@@141 $generated@@674 $generated@@45))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@157) ($generated@@141 $generated@@675 $generated@@48))
 :pattern ( ($generated@@141 $generated@@675 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@677) $generated@@139) (= (type $generated@@678) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@679) $generated@@139)) (= (type $generated@@681) $generated@@139)) (= (type $generated@@682) $generated@@139)) (= (type $generated@@684) ($generated@@172 $generated@@81 $generated@@4))) (= (type $generated@@685) $generated@@81)) (= (type $generated@@686) ($generated@@172 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@688 true))
(let (($generated@@689  (=> (and (< $generated@@676 ($generated@@243 0)) (= (ControlFlow 0 7) 4)) $generated@@688)))
(let (($generated@@690  (=> (and (<= ($generated@@243 0) $generated@@676) ($generated@@78 $generated@@677 ($generated@@142 $generated@@46) $generated@@678)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@581 $generated@@677) ($generated@@581 $generated@@679))) (=> (< ($generated@@581 $generated@@677) ($generated@@581 $generated@@679)) (=> (and ($generated@@140 $generated@@677) (= (ControlFlow 0 5) 4)) $generated@@688))))))
(let (($generated@@691  (=> (and (= $generated@@679 ($generated@@292 ($generated@@328 ($generated@@8 $generated@@680)) $generated@@681)) ($generated@@141 $generated@@681 ($generated@@142 $generated@@46))) (=> (and (and (and ($generated@@141 $generated@@677 ($generated@@142 $generated@@46)) ($generated@@78 $generated@@677 ($generated@@142 $generated@@46) $generated@@678)) (and (= $generated@@682 $generated@@681) ($generated@@141 $generated@@682 ($generated@@142 $generated@@46)))) (and (and (= $generated@@677 $generated@@682) (= $generated@@683 $generated@@680)) (and ($generated@@141 ($generated@@8 $generated@@683) $generated@@46) (= $generated@@676 $generated@@683)))) (and (=> (= (ControlFlow 0 8) 5) $generated@@690) (=> (= (ControlFlow 0 8) 7) $generated@@689))))))
(let (($generated@@692 true))
(let (($generated@@693  (=> (not (= $generated@@679 $generated@@163)) (and (=> (= (ControlFlow 0 9) 8) $generated@@691) (=> (= (ControlFlow 0 9) 3) $generated@@692)))))
(let (($generated@@694 true))
(let (($generated@@695  (=> (= $generated@@684 ($generated@@226 $generated@@685 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 2) $generated@@694) (=> (= (ControlFlow 0 10) 9) $generated@@693)))))
(let (($generated@@696 true))
(let (($generated@@697  (=> (= $generated@@686 ($generated@@171 $generated@@685 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@696) (=> (= (ControlFlow 0 11) 10) $generated@@695)))))
(let (($generated@@698  (=> (and (and (and ($generated@@255 $generated@@678) ($generated@@687 $generated@@678)) ($generated@@141 $generated@@679 ($generated@@142 $generated@@46))) (and (= 1 $generated@@136) (= (ControlFlow 0 12) 11))) $generated@@697)))
$generated@@698))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (Int) Int)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (Int) T@U)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@298 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U T@U T@U) Bool)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@320 (T@U) Int)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@333 (T@U) Int)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@T) T@U)
(declare-fun $generated@@362 (T@T T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@461 () T@U)
(declare-fun $generated@@465 (T@T) T@U)
(declare-fun $generated@@489 () T@T)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@540 (T@U Int) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@581 (T@U) Int)
(declare-fun $generated@@662 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 11) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@78 $generated@@90)) $generated@@79)
 :pattern ( ($generated@@78 $generated@@90))
))) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@83 $generated@@91)) $generated@@68)
 :pattern ( ($generated@@83 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@80)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@U) ) (! (= (type ($generated@@86 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@86 $generated@@93 $generated@@94))
))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@95 T@U) ) (! (= (type ($generated@@87 $generated@@95)) $generated@@89)
 :pattern ( ($generated@@87 $generated@@95))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and (and (= (type $generated@@96) $generated@@79) (= (type $generated@@97) $generated@@80)) (or ($generated@@81 $generated@@97) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@97 ($generated@@83 $generated@@46))))) (and (=> (not ($generated@@84 $generated@@97)) (let (($generated@@98 ($generated@@85 $generated@@97)))
(let (($generated@@99 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@97)))))
 (=> (<= $generated@@99 ($generated@@88 0)) ($generated@@81 $generated@@98))))) (= ($generated@@77 ($generated@@78 $generated@@96) $generated@@97) (ite ($generated@@84 $generated@@97) true (let (($generated@@100 ($generated@@85 $generated@@97)))
(let (($generated@@101 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@97)))))
 (and (<= $generated@@101 ($generated@@88 0)) ($generated@@77 $generated@@96 $generated@@100))))))))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@96) $generated@@97))
))))
(assert (forall (($generated@@103 T@U) ) (! (= (type ($generated@@102 $generated@@103)) $generated@@69)
 :pattern ( ($generated@@102 $generated@@103))
)))
(assert (= ($generated@@102 $generated@@44) $generated@@49))
(assert (= ($generated@@102 $generated@@45) $generated@@50))
(assert (= ($generated@@102 $generated@@46) $generated@@51))
(assert (= ($generated@@102 $generated@@47) $generated@@52))
(assert (= ($generated@@102 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (= ($generated@@1 ($generated@@106 $generated@@115 $generated@@116)) 14)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@106 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@106 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@110 (type $generated@@121))))
(= (type ($generated@@111 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@111 $generated@@121 $generated@@122))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 (type $generated@@126)))
(let (($generated@@128 (type $generated@@125)))
(= (type ($generated@@112 $generated@@124 $generated@@125 $generated@@126)) ($generated@@106 $generated@@128 $generated@@127))))
 :pattern ( ($generated@@112 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@129))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@111 ($generated@@112 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@111 ($generated@@112 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@111 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@111 ($generated@@112 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@111 $generated@@138 $generated@@140)))
 :weight 0
)))) (= ($generated@@1 $generated@@107) 15)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@71 (type $generated@@142))))
(= (type ($generated@@113 $generated@@141 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@113 $generated@@141 $generated@@142))
))) (= ($generated@@1 $generated@@108) 16)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@114 $generated@@144 $generated@@145 $generated@@146)) $generated@@108)
 :pattern ( ($generated@@114 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 ($generated@@71 (type $generated@@148))))
 (=> (= (type $generated@@149) $generated@@150) (= ($generated@@113 ($generated@@114 $generated@@147 $generated@@148 $generated@@149) $generated@@148) $generated@@149)))
 :weight 0
))) (and (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@153 $generated@@154) (= ($generated@@113 ($generated@@114 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@113 $generated@@152 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or true (= ($generated@@113 ($generated@@114 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@113 $generated@@156 $generated@@158)))
 :weight 0
)))) (forall (($generated@@159 Int) ) (! (= (type ($generated@@105 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@105 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@2) (= (type $generated@@161) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
 :pattern ( ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@79) (= (type $generated@@163) $generated@@80)) (or ($generated@@81 $generated@@163) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@163 ($generated@@83 $generated@@46))))) true)
 :pattern ( ($generated@@77 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@2) ($generated@@82 $generated@@164 ($generated@@105 0)))
 :pattern ( ($generated@@82 $generated@@164 ($generated@@105 0)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@167 $generated@@168)) $generated@@68)
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@68) (= (type $generated@@170) $generated@@68)) (= (type $generated@@171) $generated@@80)) ($generated@@82 $generated@@171 ($generated@@166 $generated@@169 $generated@@170))) ($generated@@165 $generated@@171))
 :pattern ( ($generated@@165 $generated@@171) ($generated@@82 $generated@@171 ($generated@@166 $generated@@169 $generated@@170)))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@89)
 :pattern ( ($generated@@173 $generated@@175))
)) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@89)
 :pattern ( ($generated@@174 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@80) (= (type $generated@@178) $generated@@80)) true) (= ($generated@@172 $generated@@177 $generated@@178)  (and (= ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)) (= ($generated@@174 $generated@@177) ($generated@@174 $generated@@178)))))
 :pattern ( ($generated@@172 $generated@@177 $generated@@178))
)))
(assert  (and (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@72)
 :pattern ( ($generated@@179 $generated@@181))
)) (= (type $generated@@180) $generated@@80)))
(assert (= ($generated@@179 $generated@@180) $generated@@63))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@68)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@106 $generated@@89 $generated@@2)) (= (type $generated@@186) $generated@@68)) ($generated@@82 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@82 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 17)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@107 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@71 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@107) (= (type $generated@@237) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@238) ($generated@@70 $generated@@4))) (= (type $generated@@240) $generated@@107)) (= (type $generated@@241) ($generated@@70 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@113 ($generated@@111 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ) (! (= (type ($generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247)) ($generated@@189 $generated@@107 $generated@@4))
 :pattern ( ($generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@71 (type $generated@@253))))
 (=> (and (and (and (and (= (type $generated@@248) $generated@@107) (= (type $generated@@249) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@250) ($generated@@70 $generated@@4))) (= (type $generated@@252) $generated@@107)) (= (type $generated@@253) ($generated@@70 $generated@@254))) (= ($generated@@0 ($generated@@187 ($generated@@243 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))  (=> (and (not (= $generated@@252 $generated@@248)) ($generated@@0 ($generated@@113 ($generated@@111 $generated@@249 $generated@@252) $generated@@250))) $generated@@251))))
 :pattern ( ($generated@@187 ($generated@@243 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) $generated@@68) (= (type $generated@@257) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@255 $generated@@257)) ($generated@@104 $generated@@180 ($generated@@83 $generated@@256) $generated@@257))
 :pattern ( ($generated@@104 $generated@@180 ($generated@@83 $generated@@256) $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@80)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@68) (= (type $generated@@263) $generated@@68)) (= (type $generated@@264) $generated@@89)) (= (type $generated@@265) $generated@@89)) (= ($generated@@82 ($generated@@258 $generated@@264 $generated@@265) ($generated@@166 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@264 $generated@@265) ($generated@@166 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@68) ($generated@@82 $generated@@180 ($generated@@83 $generated@@266)))
 :pattern ( ($generated@@82 $generated@@180 ($generated@@83 $generated@@266)))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@80) (= (type $generated@@268) $generated@@80)) (= ($generated@@172 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@172 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@80) (= (type $generated@@271) $generated@@80)) (= ($generated@@269 $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@269 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@80) (= (type $generated@@274) $generated@@80)) (and ($generated@@272 $generated@@273) ($generated@@272 $generated@@274))) (= ($generated@@269 $generated@@273 $generated@@274)  (and (= ($generated@@87 $generated@@273) ($generated@@87 $generated@@274)) ($generated@@269 ($generated@@85 $generated@@273) ($generated@@85 $generated@@274)))))
 :pattern ( ($generated@@269 $generated@@273 $generated@@274) ($generated@@272 $generated@@273))
 :pattern ( ($generated@@269 $generated@@273 $generated@@274) ($generated@@272 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@79) (= (type $generated@@279) $generated@@80)) (or ($generated@@81 ($generated@@275 $generated@@279)) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@279 ($generated@@83 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@275 ($generated@@11 ($generated@@84 ($generated@@275 $generated@@279)))))) (let (($generated@@280 ($generated@@275 ($generated@@85 ($generated@@275 $generated@@279)))))
(let (($generated@@281 ($generated@@88 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@275 $generated@@279)))))))
 (=> (<= $generated@@281 ($generated@@88 0)) ($generated@@81 $generated@@280))))) (= ($generated@@77 ($generated@@78 $generated@@278) ($generated@@275 $generated@@279)) (ite ($generated@@84 ($generated@@275 $generated@@279)) true (let (($generated@@282 ($generated@@275 ($generated@@85 ($generated@@275 $generated@@279)))))
(let (($generated@@283 ($generated@@88 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@275 $generated@@279)))))))
 (and (<= $generated@@283 ($generated@@88 0)) ($generated@@77 ($generated@@78 $generated@@278) $generated@@282))))))))
 :weight 3
 :pattern ( ($generated@@77 ($generated@@78 $generated@@278) ($generated@@275 $generated@@279)))
))))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@68)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@106 $generated@@89 $generated@@4)) (= (type $generated@@287) $generated@@68)) (= ($generated@@82 $generated@@286 ($generated@@284 $generated@@287)) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@89) ($generated@@0 ($generated@@111 $generated@@286 $generated@@288))) ($generated@@259 $generated@@288 $generated@@287))
 :pattern ( ($generated@@111 $generated@@286 $generated@@288))
))))
 :pattern ( ($generated@@82 $generated@@286 ($generated@@284 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@68)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@106 $generated@@89 $generated@@4)) (= (type $generated@@292) $generated@@68)) (= ($generated@@82 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@89) ($generated@@0 ($generated@@111 $generated@@291 $generated@@293))) ($generated@@259 $generated@@293 $generated@@292))
 :pattern ( ($generated@@111 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@82 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@294 Int) ) (! (= ($generated@@88 $generated@@294) $generated@@294)
 :pattern ( ($generated@@88 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (= ($generated@@275 $generated@@295) $generated@@295)
 :pattern ( ($generated@@275 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (= (type $generated@@296) $generated@@80) (= (type $generated@@297) $generated@@80)) (and ($generated@@84 $generated@@296) ($generated@@84 $generated@@297))) (= ($generated@@269 $generated@@296 $generated@@297) true))
 :pattern ( ($generated@@269 $generated@@296 $generated@@297) ($generated@@84 $generated@@296))
 :pattern ( ($generated@@269 $generated@@296 $generated@@297) ($generated@@84 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (! (= (type ($generated@@298 $generated@@299 $generated@@300)) $generated@@80)
 :pattern ( ($generated@@298 $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (= (type $generated@@301) $generated@@68) (= (type $generated@@302) $generated@@89)) (= (type $generated@@303) $generated@@80)) (= ($generated@@82 ($generated@@298 $generated@@302 $generated@@303) ($generated@@83 $generated@@301))  (and ($generated@@259 $generated@@302 $generated@@301) ($generated@@82 $generated@@303 ($generated@@83 $generated@@301)))))
 :pattern ( ($generated@@82 ($generated@@298 $generated@@302 $generated@@303) ($generated@@83 $generated@@301)))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) $generated@@68) (= (type $generated@@306) $generated@@68)) (= (type $generated@@307) $generated@@89)) (= (type $generated@@308) $generated@@89)) (= (type $generated@@309) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@255 $generated@@309)) (= ($generated@@104 ($generated@@258 $generated@@307 $generated@@308) ($generated@@166 $generated@@305 $generated@@306) $generated@@309)  (and ($generated@@304 $generated@@307 $generated@@305 $generated@@309) ($generated@@304 $generated@@308 $generated@@306 $generated@@309))))
 :pattern ( ($generated@@104 ($generated@@258 $generated@@307 $generated@@308) ($generated@@166 $generated@@305 $generated@@306) $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@80) (= ($generated@@165 $generated@@310) (= ($generated@@179 $generated@@310) $generated@@61)))
 :pattern ( ($generated@@165 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@80) (= ($generated@@84 $generated@@311) (= ($generated@@179 $generated@@311) $generated@@63)))
 :pattern ( ($generated@@84 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@80) (= ($generated@@272 $generated@@312) (= ($generated@@179 $generated@@312) $generated@@65)))
 :pattern ( ($generated@@272 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@80) ($generated@@165 $generated@@313)) (exists (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (and (and (= (type $generated@@314) $generated@@89) (= (type $generated@@315) $generated@@89)) (= $generated@@313 ($generated@@258 $generated@@314 $generated@@315)))
 :no-pattern (type $generated@@314)
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
)))
 :pattern ( ($generated@@165 $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@80) ($generated@@272 $generated@@316)) (exists (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (and (and (= (type $generated@@317) $generated@@89) (= (type $generated@@318) $generated@@80)) (= $generated@@316 ($generated@@298 $generated@@317 $generated@@318)))
 :no-pattern (type $generated@@317)
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
)))
 :pattern ( ($generated@@272 $generated@@316))
)))
(assert  (and (and (forall (($generated@@323 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@323)) 18)) (forall (($generated@@324 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@321 $generated@@324))
))) (forall (($generated@@325 T@T) ) (! (= (type ($generated@@319 $generated@@325)) ($generated@@321 $generated@@325))
 :pattern ( ($generated@@319 $generated@@325))
))))
(assert (forall (($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@326)) 0)
 :pattern ( ($generated@@319 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@80) ($generated@@84 $generated@@327)) (= $generated@@327 $generated@@180))
 :pattern ( ($generated@@84 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@89)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@68) (= (type $generated@@332) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@304 ($generated@@328 $generated@@330) $generated@@331 $generated@@332) ($generated@@104 $generated@@330 $generated@@331 $generated@@332)))
 :pattern ( ($generated@@304 ($generated@@328 $generated@@330) $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@335 T@T) ) (! (= (type ($generated@@334 $generated@@335)) ($generated@@106 $generated@@335 $generated@@2))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@109 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@106 $generated@@337 $generated@@2)) (and (= (= ($generated@@333 $generated@@336) 0) (= $generated@@336 ($generated@@334 $generated@@337))) (=> (not (= ($generated@@333 $generated@@336) 0)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) (< 0 ($generated ($generated@@111 $generated@@336 $generated@@338))))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@73)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@68) (and (= ($generated@@102 ($generated@@83 $generated@@341)) $generated@@64) (= ($generated@@339 ($generated@@83 $generated@@341)) $generated@@67)))
 :pattern ( ($generated@@83 $generated@@341))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 19)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@106 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@111 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@111 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert  (and (and (and (and (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (= ($generated@@1 ($generated@@362 $generated@@365 $generated@@366)) 20)) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@363 ($generated@@362 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@362 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@364 ($generated@@362 $generated@@369 $generated@@370)) $generated@@370)
 :pattern ( ($generated@@362 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@363 (type $generated@@371))))
(= (type ($generated@@360 $generated@@371)) ($generated@@106 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@371))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= (type ($generated@@361 $generated@@373 $generated@@374)) ($generated@@362 $generated@@373 $generated@@374))
 :pattern ( ($generated@@361 $generated@@373 $generated@@374))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@T) ) (! (let (($generated@@377 (type $generated@@375)))
 (not ($generated@@0 ($generated@@111 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375))))
 :pattern ( (let (($generated@@377 (type $generated@@375)))
($generated@@111 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375)))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@109 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@106 $generated@@379 $generated@@2)) (= ($generated@@183 $generated@@378) (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@379) (and (<= 0 ($generated ($generated@@111 $generated@@378 $generated@@380))) (<= ($generated ($generated@@111 $generated@@378 $generated@@380)) ($generated@@333 $generated@@378))))
 :pattern ( ($generated@@111 $generated@@378 $generated@@380))
)))))
 :pattern ( ($generated@@183 $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@346 (type $generated@@381))))
(let (($generated@@383 ($generated@@345 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@344 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@343 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@111 ($generated@@342 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@342 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@346 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@106 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@346 (type $generated@@388))))
(let (($generated@@390 ($generated@@345 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@344 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@343 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@111 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@364 (type $generated@@392))))
(let (($generated@@394 ($generated@@363 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@362 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@361 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@111 ($generated@@360 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@360 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@364 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@106 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@364 (type $generated@@399))))
(let (($generated@@401 ($generated@@363 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@362 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@361 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@111 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@106 $generated@@89 $generated@@2)) (= (type $generated@@404) $generated@@68)) (= ($generated@@82 $generated@@403 ($generated@@182 $generated@@404)) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@89) (< 0 ($generated ($generated@@111 $generated@@403 $generated@@405)))) ($generated@@259 $generated@@405 $generated@@404))
 :pattern ( ($generated@@111 $generated@@403 $generated@@405))
))))
 :pattern ( ($generated@@82 $generated@@403 ($generated@@182 $generated@@404)))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@106 $generated@@89 $generated@@4)) (= (type $generated@@407) $generated@@68)) (= (type $generated@@408) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@406 ($generated@@284 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@89) ($generated@@0 ($generated@@111 $generated@@406 $generated@@409))) ($generated@@304 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@111 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@104 $generated@@406 ($generated@@284 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@106 $generated@@89 $generated@@4)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@410 ($generated@@289 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@89) ($generated@@0 ($generated@@111 $generated@@410 $generated@@413))) ($generated@@304 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@111 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@104 $generated@@410 ($generated@@289 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(= ($generated ($generated@@111 ($generated@@334 $generated@@415) $generated@@414)) 0))
 :pattern ( (let (($generated@@415 (type $generated@@414)))
($generated@@111 ($generated@@334 $generated@@415) $generated@@414)))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@106 $generated@@89 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@346 (type $generated@@419))))
(let (($generated@@421 ($generated@@345 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@106 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@344 $generated@@89 $generated@@89)) (= (type $generated@@423) $generated@@89)) (= ($generated@@0 ($generated@@111 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@111 ($generated@@342 $generated@@422) ($generated@@173 ($generated@@86 $generated@@80 $generated@@423)))) (= ($generated@@111 ($generated@@417 $generated@@422) ($generated@@173 ($generated@@86 $generated@@80 $generated@@423))) ($generated@@174 ($generated@@86 $generated@@80 $generated@@423))))))
 :pattern ( ($generated@@111 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@106 $generated@@89 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@364 (type $generated@@427))))
(let (($generated@@429 ($generated@@363 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@106 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@362 $generated@@89 $generated@@89)) (= (type $generated@@431) $generated@@89)) (= ($generated@@0 ($generated@@111 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@111 ($generated@@360 $generated@@430) ($generated@@173 ($generated@@86 $generated@@80 $generated@@431)))) (= ($generated@@111 ($generated@@425 $generated@@430) ($generated@@173 ($generated@@86 $generated@@80 $generated@@431))) ($generated@@174 ($generated@@86 $generated@@80 $generated@@431))))))
 :pattern ( ($generated@@111 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(let (($generated@@435 ($generated@@345 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@344 $generated@@435 $generated@@434)) (= ($generated@@0 ($generated@@111 ($generated@@385 $generated@@432) $generated@@433)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) (and ($generated@@0 ($generated@@111 ($generated@@342 $generated@@432) $generated@@436)) (= $generated@@433 ($generated@@111 ($generated@@417 $generated@@432) $generated@@436))))
 :pattern ( ($generated@@111 ($generated@@342 $generated@@432) $generated@@436))
 :pattern ( ($generated@@111 ($generated@@417 $generated@@432) $generated@@436))
))))))
 :pattern ( ($generated@@111 ($generated@@385 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@363 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@362 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@111 ($generated@@396 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@111 ($generated@@360 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@111 ($generated@@425 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@111 ($generated@@360 $generated@@437) $generated@@441))
 :pattern ( ($generated@@111 ($generated@@425 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@111 ($generated@@396 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@68)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@344 $generated@@89 $generated@@89)) (= (type $generated@@446) $generated@@68)) (= (type $generated@@447) $generated@@68)) (= (type $generated@@448) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@89) ($generated@@0 ($generated@@111 ($generated@@342 $generated@@445) $generated@@449))) (and ($generated@@304 ($generated@@111 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@304 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@111 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@111 ($generated@@342 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@104 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@362 $generated@@89 $generated@@89)) (= (type $generated@@454) $generated@@68)) (= (type $generated@@455) $generated@@68)) (= (type $generated@@456) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@89) ($generated@@0 ($generated@@111 ($generated@@360 $generated@@453) $generated@@457))) (and ($generated@@304 ($generated@@111 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@304 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@111 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@111 ($generated@@360 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@104 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@458) $generated@@68) (= (type $generated@@459) $generated@@80)) ($generated@@82 $generated@@459 ($generated@@83 $generated@@458))) (or ($generated@@84 $generated@@459) ($generated@@272 $generated@@459)))
 :pattern ( ($generated@@272 $generated@@459) ($generated@@82 $generated@@459 ($generated@@83 $generated@@458)))
 :pattern ( ($generated@@84 $generated@@459) ($generated@@82 $generated@@459 ($generated@@83 $generated@@458)))
)))
(assert  (and (forall (($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@462)) $generated@@79)
 :pattern ( ($generated@@460 $generated@@462))
)) (= (type $generated@@461) $generated@@79)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@79) (= (type $generated@@464) $generated@@80)) (= ($generated@@77 $generated@@463 $generated@@464) ($generated@@77 $generated@@461 $generated@@464)))
 :pattern ( ($generated@@77 ($generated@@460 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@T) ) (! (= (type ($generated@@465 $generated@@466)) ($generated@@106 $generated@@466 $generated@@4))
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@364 (type $generated@@467))))
(let (($generated@@469 ($generated@@363 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@362 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@361 $generated@@469 $generated@@468)) (= ($generated@@360 $generated@@467) ($generated@@465 $generated@@469))))))
 :pattern ( ($generated@@360 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@364 (type $generated@@470))))
(let (($generated@@472 ($generated@@363 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@362 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@361 $generated@@472 $generated@@471)) (= ($generated@@396 $generated@@470) ($generated@@465 $generated@@471))))))
 :pattern ( ($generated@@396 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@364 (type $generated@@473))))
(let (($generated@@475 ($generated@@363 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@362 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@361 $generated@@475 $generated@@474)) (= ($generated@@424 $generated@@473) ($generated@@465 $generated@@89))))))
 :pattern ( ($generated@@424 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@346 (type $generated@@476))))
(let (($generated@@478 ($generated@@345 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@344 $generated@@478 $generated@@477)) (or (= $generated@@476 ($generated@@343 $generated@@478 $generated@@477)) (exists (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (and (and (= (type $generated@@479) $generated@@89) (= (type $generated@@480) $generated@@89)) ($generated@@0 ($generated@@111 ($generated@@416 $generated@@476) ($generated@@328 ($generated@@258 $generated@@479 $generated@@480)))))
 :no-pattern (type $generated@@479)
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@416 $generated@@476))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@364 (type $generated@@481))))
(let (($generated@@483 ($generated@@363 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@362 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@361 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@89) (= (type $generated@@485) $generated@@89)) ($generated@@0 ($generated@@111 ($generated@@424 $generated@@481) ($generated@@328 ($generated@@258 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@424 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@89) ($generated@@259 $generated@@486 $generated@@46)) (and (= ($generated@@328 ($generated@@86 $generated@@2 $generated@@486)) $generated@@486) ($generated@@82 ($generated@@86 $generated@@2 $generated@@486) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@486 $generated@@46))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@89) ($generated@@259 $generated@@487 $generated@@47)) (and (= ($generated@@328 ($generated@@86 $generated@@3 $generated@@487)) $generated@@487) ($generated@@82 ($generated@@86 $generated@@3 $generated@@487) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@487 $generated@@47))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@89) ($generated@@259 $generated@@488 $generated@@44)) (and (= ($generated@@328 ($generated@@86 $generated@@4 $generated@@488)) $generated@@488) ($generated@@82 ($generated@@86 $generated@@4 $generated@@488) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@488 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@489) 21))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@89) ($generated@@259 $generated@@490 $generated@@45)) (and (= ($generated@@328 ($generated@@86 $generated@@489 $generated@@490)) $generated@@490) ($generated@@82 ($generated@@86 $generated@@489 $generated@@490) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@490 $generated@@45))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@79) (= (type $generated@@492) $generated@@80)) (= ($generated@@77 ($generated@@78 $generated@@491) $generated@@492) ($generated@@77 $generated@@491 $generated@@492)))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@68) (= ($generated@@259 ($generated@@328 $generated@@493) $generated@@494) ($generated@@82 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@259 ($generated@@328 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@109 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@106 $generated@@496 $generated@@2)) (<= 0 ($generated@@333 $generated@@495))))
 :pattern ( ($generated@@333 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@322 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@321 $generated@@498)) (<= 0 ($generated@@320 $generated@@497))))
 :pattern ( ($generated@@320 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@442 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@442 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@68) (= (type $generated@@506) $generated@@68)) (= ($generated@@503 ($generated@@442 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@442 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@102 ($generated@@442 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@442 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@450 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@450 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@513 ($generated@@450 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@450 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@102 ($generated@@450 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@450 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@89) (= (type $generated@@520) $generated@@89)) (= ($generated@@179 ($generated@@258 $generated@@519 $generated@@520)) $generated@@61))
 :pattern ( ($generated@@258 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@166 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@166 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@166 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@166 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@89) (= (type $generated@@530) $generated@@89)) (= ($generated@@173 ($generated@@258 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@258 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@89) (= (type $generated@@532) $generated@@89)) (= ($generated@@174 ($generated@@258 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@258 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@89) (= (type $generated@@534) $generated@@80)) (= ($generated@@179 ($generated@@298 $generated@@533 $generated@@534)) $generated@@65))
 :pattern ( ($generated@@298 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@89) (= (type $generated@@536) $generated@@80)) (= ($generated@@87 ($generated@@298 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@298 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@89) (= (type $generated@@538) $generated@@80)) (= ($generated@@85 ($generated@@298 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@298 $generated@@537 $generated@@538))
)))
(assert  (and (forall (($generated@@541 T@U) ) (! (= (type ($generated@@539 $generated@@541)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@541))
)) (forall (($generated@@542 T@U) ($generated@@543 Int) ) (! (let (($generated@@544 ($generated@@322 (type $generated@@542))))
(= (type ($generated@@540 $generated@@542 $generated@@543)) $generated@@544))
 :pattern ( ($generated@@540 $generated@@542 $generated@@543))
))))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@321 $generated@@89)) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@545 ($generated@@539 $generated@@546) $generated@@547) (forall (($generated@@548 Int) ) (!  (=> (and (<= 0 $generated@@548) (< $generated@@548 ($generated@@320 $generated@@545))) ($generated@@304 ($generated@@540 $generated@@545 $generated@@548) $generated@@546 $generated@@547))
 :pattern ( ($generated@@540 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@104 $generated@@545 ($generated@@539 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@549 ($generated@@105 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@105 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@284 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@284 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@102 ($generated@@284 $generated@@554)) $generated@@54))
 :pattern ( ($generated@@284 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@289 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@289 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@102 ($generated@@289 $generated@@558)) $generated@@55))
 :pattern ( ($generated@@289 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@182 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@182 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@102 ($generated@@182 $generated@@562)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@539 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@539 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@102 ($generated@@539 $generated@@566)) $generated@@57))
 :pattern ( ($generated@@539 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@567 ($generated@@83 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@83 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
(= ($generated@@86 $generated@@571 ($generated@@328 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@328 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@344 $generated@@89 $generated@@89)) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@68)) (= ($generated@@82 $generated@@572 ($generated@@442 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@89) ($generated@@0 ($generated@@111 ($generated@@342 $generated@@572) $generated@@575))) (and ($generated@@259 ($generated@@111 ($generated@@417 $generated@@572) $generated@@575) $generated@@574) ($generated@@259 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@111 ($generated@@417 $generated@@572) $generated@@575))
 :pattern ( ($generated@@111 ($generated@@342 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@82 $generated@@572 ($generated@@442 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@362 $generated@@89 $generated@@89)) (= (type $generated@@577) $generated@@68)) (= (type $generated@@578) $generated@@68)) (= ($generated@@82 $generated@@576 ($generated@@450 $generated@@577 $generated@@578)) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@89) ($generated@@0 ($generated@@111 ($generated@@360 $generated@@576) $generated@@579))) (and ($generated@@259 ($generated@@111 ($generated@@425 $generated@@576) $generated@@579) $generated@@578) ($generated@@259 $generated@@579 $generated@@577)))
 :pattern ( ($generated@@111 ($generated@@425 $generated@@576) $generated@@579))
 :pattern ( ($generated@@111 ($generated@@360 $generated@@576) $generated@@579))
))))
 :pattern ( ($generated@@82 $generated@@576 ($generated@@450 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@89) (= (type $generated@@583) $generated@@89)) (< ($generated@@580 $generated@@582) ($generated@@581 ($generated@@258 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@258 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@89) (= (type $generated@@585) $generated@@89)) (< ($generated@@580 $generated@@585) ($generated@@581 ($generated@@258 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@258 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@89) (= (type $generated@@587) $generated@@80)) (< ($generated@@580 $generated@@586) ($generated@@581 ($generated@@298 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@298 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@89) (= (type $generated@@589) $generated@@80)) (< ($generated@@581 $generated@@589) ($generated@@581 ($generated@@298 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@298 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@89) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) ($generated@@259 $generated@@590 ($generated@@442 $generated@@591 $generated@@592))) (and (= ($generated@@328 ($generated@@86 ($generated@@344 $generated@@89 $generated@@89) $generated@@590)) $generated@@590) ($generated@@82 ($generated@@86 ($generated@@344 $generated@@89 $generated@@89) $generated@@590) ($generated@@442 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@259 $generated@@590 ($generated@@442 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@89) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) $generated@@68)) ($generated@@259 $generated@@593 ($generated@@450 $generated@@594 $generated@@595))) (and (= ($generated@@328 ($generated@@86 ($generated@@362 $generated@@89 $generated@@89) $generated@@593)) $generated@@593) ($generated@@82 ($generated@@86 ($generated@@362 $generated@@89 $generated@@89) $generated@@593) ($generated@@450 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@259 $generated@@593 ($generated@@450 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@68) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@89)) ($generated@@259 $generated@@598 ($generated@@166 $generated@@596 $generated@@597))) (and (= ($generated@@328 ($generated@@86 $generated@@80 $generated@@598)) $generated@@598) ($generated@@82 ($generated@@86 $generated@@80 $generated@@598) ($generated@@166 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@259 $generated@@598 ($generated@@166 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@80) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@255 $generated@@601) (and ($generated@@272 $generated@@599) ($generated@@104 $generated@@599 ($generated@@83 $generated@@600) $generated@@601)))) ($generated@@304 ($generated@@87 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@304 ($generated@@87 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (not ($generated@@0 ($generated@@111 ($generated@@465 $generated@@603) $generated@@602))))
 :pattern ( (let (($generated@@603 (type $generated@@602)))
($generated@@111 ($generated@@465 $generated@@603) $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@68)) (and (= ($generated@@102 ($generated@@166 $generated@@604 $generated@@605)) $generated@@62) (= ($generated@@339 ($generated@@166 $generated@@604 $generated@@605)) $generated@@66)))
 :pattern ( ($generated@@166 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@80) (= ($generated@@580 ($generated@@328 $generated@@606)) ($generated@@581 $generated@@606)))
 :pattern ( ($generated@@580 ($generated@@328 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@89) ($generated@@259 $generated@@607 ($generated@@105 0))) (and (= ($generated@@328 ($generated@@86 $generated@@2 $generated@@607)) $generated@@607) ($generated@@82 ($generated@@86 ($generated@@106 $generated@@89 $generated@@4) $generated@@607) ($generated@@105 0))))
 :pattern ( ($generated@@259 $generated@@607 ($generated@@105 0)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@89) (= (type $generated@@609) $generated@@68)) ($generated@@259 $generated@@608 ($generated@@284 $generated@@609))) (and (= ($generated@@328 ($generated@@86 ($generated@@106 $generated@@89 $generated@@4) $generated@@608)) $generated@@608) ($generated@@82 ($generated@@86 ($generated@@106 $generated@@89 $generated@@4) $generated@@608) ($generated@@284 $generated@@609))))
 :pattern ( ($generated@@259 $generated@@608 ($generated@@284 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@89) (= (type $generated@@611) $generated@@68)) ($generated@@259 $generated@@610 ($generated@@289 $generated@@611))) (and (= ($generated@@328 ($generated@@86 ($generated@@106 $generated@@89 $generated@@4) $generated@@610)) $generated@@610) ($generated@@82 ($generated@@86 ($generated@@106 $generated@@89 $generated@@4) $generated@@610) ($generated@@289 $generated@@611))))
 :pattern ( ($generated@@259 $generated@@610 ($generated@@289 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@89) (= (type $generated@@613) $generated@@68)) ($generated@@259 $generated@@612 ($generated@@182 $generated@@613))) (and (= ($generated@@328 ($generated@@86 ($generated@@106 $generated@@89 $generated@@2) $generated@@612)) $generated@@612) ($generated@@82 ($generated@@86 ($generated@@106 $generated@@89 $generated@@2) $generated@@612) ($generated@@182 $generated@@613))))
 :pattern ( ($generated@@259 $generated@@612 ($generated@@182 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@89) (= (type $generated@@615) $generated@@68)) ($generated@@259 $generated@@614 ($generated@@539 $generated@@615))) (and (= ($generated@@328 ($generated@@86 ($generated@@321 $generated@@89) $generated@@614)) $generated@@614) ($generated@@82 ($generated@@86 ($generated@@321 $generated@@89) $generated@@614) ($generated@@539 $generated@@615))))
 :pattern ( ($generated@@259 $generated@@614 ($generated@@539 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@68) (= (type $generated@@617) $generated@@89)) ($generated@@259 $generated@@617 ($generated@@83 $generated@@616))) (and (= ($generated@@328 ($generated@@86 $generated@@80 $generated@@617)) $generated@@617) ($generated@@82 ($generated@@86 $generated@@80 $generated@@617) ($generated@@83 $generated@@616))))
 :pattern ( ($generated@@259 $generated@@617 ($generated@@83 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@80) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@255 $generated@@620) (and ($generated@@272 $generated@@618) ($generated@@104 $generated@@618 ($generated@@83 $generated@@619) $generated@@620)))) ($generated@@104 ($generated@@85 $generated@@618) ($generated@@83 $generated@@619) $generated@@620))
 :pattern ( ($generated@@104 ($generated@@85 $generated@@618) ($generated@@83 $generated@@619) $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@106 $generated@@89 $generated@@2)) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@621 ($generated@@182 $generated@@622) $generated@@623) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@89) (< 0 ($generated ($generated@@111 $generated@@621 $generated@@624)))) ($generated@@304 $generated@@624 $generated@@622 $generated@@623))
 :pattern ( ($generated@@111 $generated@@621 $generated@@624))
))))
 :pattern ( ($generated@@104 $generated@@621 ($generated@@182 $generated@@622) $generated@@623))
)))
(assert (= $generated@@180 ($generated@@275 $generated@@180)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@80) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@255 $generated@@627) (and ($generated@@165 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@68) ($generated@@104 $generated@@625 ($generated@@166 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@104 $generated@@625 ($generated@@166 $generated@@626 $generated@@628) $generated@@627))
))))) ($generated@@304 ($generated@@173 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@304 ($generated@@173 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@80) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@255 $generated@@631) (and ($generated@@165 $generated@@629) (exists (($generated@@632 T@U) ) (!  (and (= (type $generated@@632) $generated@@68) ($generated@@104 $generated@@629 ($generated@@166 $generated@@632 $generated@@630) $generated@@631))
 :pattern ( ($generated@@104 $generated@@629 ($generated@@166 $generated@@632 $generated@@630) $generated@@631))
))))) ($generated@@304 ($generated@@174 $generated@@629) $generated@@630 $generated@@631))
 :pattern ( ($generated@@304 ($generated@@174 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@89) (= (type $generated@@634) $generated@@89)) (= ($generated@@258 ($generated@@275 $generated@@633) ($generated@@275 $generated@@634)) ($generated@@275 ($generated@@258 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@258 ($generated@@275 $generated@@633) ($generated@@275 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@89) (= (type $generated@@636) $generated@@80)) (= ($generated@@298 ($generated@@275 $generated@@635) ($generated@@275 $generated@@636)) ($generated@@275 ($generated@@298 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@298 ($generated@@275 $generated@@635) ($generated@@275 $generated@@636)))
)))
(assert (forall (($generated@@637 Int) ) (! (= ($generated@@328 ($generated@@8 ($generated@@88 $generated@@637))) ($generated@@275 ($generated@@328 ($generated@@8 $generated@@637))))
 :pattern ( ($generated@@328 ($generated@@8 ($generated@@88 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ) (! (= ($generated@@328 ($generated@@275 $generated@@638)) ($generated@@275 ($generated@@328 $generated@@638)))
 :pattern ( ($generated@@328 ($generated@@275 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@322 (type $generated@@639))))
 (=> (and (= (type $generated@@639) ($generated@@321 $generated@@640)) (= ($generated@@320 $generated@@639) 0)) (= $generated@@639 ($generated@@319 $generated@@640))))
 :pattern ( ($generated@@320 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@642)))
 (=> (and (and (= (type $generated@@641) ($generated@@106 $generated@@644 $generated@@2)) (= (type $generated@@643) $generated@@2)) (<= 0 ($generated $generated@@643))) (= ($generated@@333 ($generated@@112 $generated@@641 $generated@@642 $generated@@643)) (+ (- ($generated@@333 $generated@@641) ($generated ($generated@@111 $generated@@641 $generated@@642))) ($generated $generated@@643)))))
 :pattern ( ($generated@@333 ($generated@@112 $generated@@641 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@646) $generated@@2)) ($generated@@104 $generated@@646 $generated@@46 $generated@@645))
 :pattern ( ($generated@@104 $generated@@646 $generated@@46 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@648) $generated@@3)) ($generated@@104 $generated@@648 $generated@@47 $generated@@647))
 :pattern ( ($generated@@104 $generated@@648 $generated@@47 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@650) $generated@@4)) ($generated@@104 $generated@@650 $generated@@44 $generated@@649))
 :pattern ( ($generated@@104 $generated@@650 $generated@@44 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@652) $generated@@489)) ($generated@@104 $generated@@652 $generated@@45 $generated@@651))
 :pattern ( ($generated@@104 $generated@@652 $generated@@45 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@654) $generated@@89)) ($generated@@104 $generated@@654 $generated@@48 $generated@@653))
 :pattern ( ($generated@@104 $generated@@654 $generated@@48 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@655) $generated@@68) (= (type $generated@@656) $generated@@89)) (= (type $generated@@657) $generated@@80)) (= (type $generated@@658) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@255 $generated@@658)) (= ($generated@@104 ($generated@@298 $generated@@656 $generated@@657) ($generated@@83 $generated@@655) $generated@@658)  (and ($generated@@304 $generated@@656 $generated@@655 $generated@@658) ($generated@@104 $generated@@657 ($generated@@83 $generated@@655) $generated@@658))))
 :pattern ( ($generated@@104 ($generated@@298 $generated@@656 $generated@@657) ($generated@@83 $generated@@655) $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@321 $generated@@89)) (= (type $generated@@660) $generated@@68)) (= ($generated@@82 $generated@@659 ($generated@@539 $generated@@660)) (forall (($generated@@661 Int) ) (!  (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@320 $generated@@659))) ($generated@@259 ($generated@@540 $generated@@659 $generated@@661) $generated@@660))
 :pattern ( ($generated@@540 $generated@@659 $generated@@661))
))))
 :pattern ( ($generated@@82 $generated@@659 ($generated@@539 $generated@@660)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 Int) ) (!  (=> (= (type $generated@@663) ($generated@@321 $generated@@89)) (=> (and (<= 0 $generated@@664) (< $generated@@664 ($generated@@320 $generated@@663))) (< ($generated@@581 ($generated@@86 $generated@@80 ($generated@@540 $generated@@663 $generated@@664))) ($generated@@662 $generated@@663))))
 :pattern ( ($generated@@581 ($generated@@86 $generated@@80 ($generated@@540 $generated@@663 $generated@@664))))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) ($generated@@344 $generated@@89 $generated@@89)) (= (type $generated@@666) $generated@@68)) (= (type $generated@@667) $generated@@68)) ($generated@@82 $generated@@665 ($generated@@442 $generated@@666 $generated@@667))) (and (and ($generated@@82 ($generated@@342 $generated@@665) ($generated@@284 $generated@@666)) ($generated@@82 ($generated@@385 $generated@@665) ($generated@@284 $generated@@667))) ($generated@@82 ($generated@@416 $generated@@665) ($generated@@284 ($generated@@166 $generated@@666 $generated@@667)))))
 :pattern ( ($generated@@82 $generated@@665 ($generated@@442 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (and (= (type $generated@@668) ($generated@@362 $generated@@89 $generated@@89)) (= (type $generated@@669) $generated@@68)) (= (type $generated@@670) $generated@@68)) ($generated@@82 $generated@@668 ($generated@@450 $generated@@669 $generated@@670))) (and (and ($generated@@82 ($generated@@360 $generated@@668) ($generated@@289 $generated@@669)) ($generated@@82 ($generated@@396 $generated@@668) ($generated@@289 $generated@@670))) ($generated@@82 ($generated@@424 $generated@@668) ($generated@@289 ($generated@@166 $generated@@669 $generated@@670)))))
 :pattern ( ($generated@@82 $generated@@668 ($generated@@450 $generated@@669 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@2) ($generated@@82 $generated@@671 $generated@@46))
 :pattern ( ($generated@@82 $generated@@671 $generated@@46))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@3) ($generated@@82 $generated@@672 $generated@@47))
 :pattern ( ($generated@@82 $generated@@672 $generated@@47))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@4) ($generated@@82 $generated@@673 $generated@@44))
 :pattern ( ($generated@@82 $generated@@673 $generated@@44))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@489) ($generated@@82 $generated@@674 $generated@@45))
 :pattern ( ($generated@@82 $generated@@674 $generated@@45))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@89) ($generated@@82 $generated@@675 $generated@@48))
 :pattern ( ($generated@@82 $generated@@675 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@677) $generated@@80) (= (type $generated@@678) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@679) $generated@@80)) (= (type $generated@@681) $generated@@80)) (= (type $generated@@682) $generated@@80)) (= (type $generated@@684) ($generated@@189 $generated@@107 $generated@@4))) (= (type $generated@@685) $generated@@107)) (= (type $generated@@686) ($generated@@189 $generated@@107 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@688 true))
(let (($generated@@689  (=> (and (< ($generated@@88 0) $generated@@676) (= (ControlFlow 0 7) 4)) $generated@@688)))
(let (($generated@@690  (=> (and (<= $generated@@676 ($generated@@88 0)) ($generated@@104 $generated@@677 ($generated@@83 $generated@@46) $generated@@678)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@581 $generated@@677) ($generated@@581 $generated@@679))) (=> (< ($generated@@581 $generated@@677) ($generated@@581 $generated@@679)) (=> (and ($generated@@81 $generated@@677) (= (ControlFlow 0 5) 4)) $generated@@688))))))
(let (($generated@@691  (=> (and (= $generated@@679 ($generated@@298 ($generated@@328 ($generated@@8 $generated@@680)) $generated@@681)) ($generated@@82 $generated@@681 ($generated@@83 $generated@@46))) (=> (and (and (and ($generated@@82 $generated@@677 ($generated@@83 $generated@@46)) ($generated@@104 $generated@@677 ($generated@@83 $generated@@46) $generated@@678)) (and (= $generated@@682 $generated@@681) ($generated@@82 $generated@@682 ($generated@@83 $generated@@46)))) (and (and (= $generated@@677 $generated@@682) (= $generated@@683 $generated@@680)) (and ($generated@@82 ($generated@@8 $generated@@683) $generated@@46) (= $generated@@676 $generated@@683)))) (and (=> (= (ControlFlow 0 8) 5) $generated@@690) (=> (= (ControlFlow 0 8) 7) $generated@@689))))))
(let (($generated@@692 true))
(let (($generated@@693  (=> (not (= $generated@@679 $generated@@180)) (and (=> (= (ControlFlow 0 9) 8) $generated@@691) (=> (= (ControlFlow 0 9) 3) $generated@@692)))))
(let (($generated@@694 true))
(let (($generated@@695  (=> (= $generated@@684 ($generated@@243 $generated@@685 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 2) $generated@@694) (=> (= (ControlFlow 0 10) 9) $generated@@693)))))
(let (($generated@@696 true))
(let (($generated@@697  (=> (= $generated@@686 ($generated@@188 $generated@@685 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@696) (=> (= (ControlFlow 0 11) 10) $generated@@695)))))
(let (($generated@@698  (=> (and (and (and ($generated@@255 $generated@@678) ($generated@@687 $generated@@678)) ($generated@@82 $generated@@679 ($generated@@83 $generated@@46))) (and (= 1 $generated@@76) (= (ControlFlow 0 12) 11))) $generated@@697)))
$generated@@698))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (Int) Int)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (Int) T@U)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@296 (T@U T@U) T@U)
(declare-fun $generated@@297 (T@U) Bool)
(declare-fun $generated@@302 (T@U T@U) T@U)
(declare-fun $generated@@308 (T@U T@U T@U) Bool)
(declare-fun $generated@@323 (T@T) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@343 (T@U) Int)
(declare-fun $generated@@344 (T@T) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@T) T@U)
(declare-fun $generated@@372 (T@T T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 () T@U)
(declare-fun $generated@@484 (T@T) T@U)
(declare-fun $generated@@508 () T@T)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@563 (T@U Int) T@U)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(declare-fun $generated@@604 (T@U) Int)
(declare-fun $generated@@692 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 11) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@78 $generated@@90)) $generated@@79)
 :pattern ( ($generated@@78 $generated@@90))
))) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@83 $generated@@91)) $generated@@68)
 :pattern ( ($generated@@83 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@80)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@U) ) (! (= (type ($generated@@86 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@86 $generated@@93 $generated@@94))
))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@95 T@U) ) (! (= (type ($generated@@87 $generated@@95)) $generated@@89)
 :pattern ( ($generated@@87 $generated@@95))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and (and (= (type $generated@@96) $generated@@79) (= (type $generated@@97) $generated@@80)) (or ($generated@@81 $generated@@97) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@97 ($generated@@83 $generated@@46))))) (and (=> (not ($generated@@84 $generated@@97)) (let (($generated@@98 ($generated@@85 $generated@@97)))
(let (($generated@@99 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@97)))))
 (=> (<= $generated@@99 ($generated@@88 0)) ($generated@@81 $generated@@98))))) (= ($generated@@77 ($generated@@78 $generated@@96) $generated@@97) (ite ($generated@@84 $generated@@97) true (let (($generated@@100 ($generated@@85 $generated@@97)))
(let (($generated@@101 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@97)))))
 (and (<= $generated@@101 ($generated@@88 0)) ($generated@@77 $generated@@96 $generated@@100))))))))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@96) $generated@@97))
))))
(assert (forall (($generated@@103 T@U) ) (! (= (type ($generated@@102 $generated@@103)) $generated@@69)
 :pattern ( ($generated@@102 $generated@@103))
)))
(assert (= ($generated@@102 $generated@@44) $generated@@49))
(assert (= ($generated@@102 $generated@@45) $generated@@50))
(assert (= ($generated@@102 $generated@@46) $generated@@51))
(assert (= ($generated@@102 $generated@@47) $generated@@52))
(assert (= ($generated@@102 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (= ($generated@@1 ($generated@@106 $generated@@115 $generated@@116)) 14)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@106 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@106 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@110 (type $generated@@121))))
(= (type ($generated@@111 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@111 $generated@@121 $generated@@122))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 (type $generated@@126)))
(let (($generated@@128 (type $generated@@125)))
(= (type ($generated@@112 $generated@@124 $generated@@125 $generated@@126)) ($generated@@106 $generated@@128 $generated@@127))))
 :pattern ( ($generated@@112 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@129))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@111 ($generated@@112 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@111 ($generated@@112 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@111 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@111 ($generated@@112 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@111 $generated@@138 $generated@@140)))
 :weight 0
)))) (= ($generated@@1 $generated@@107) 15)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@71 (type $generated@@142))))
(= (type ($generated@@113 $generated@@141 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@113 $generated@@141 $generated@@142))
))) (= ($generated@@1 $generated@@108) 16)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@114 $generated@@144 $generated@@145 $generated@@146)) $generated@@108)
 :pattern ( ($generated@@114 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 ($generated@@71 (type $generated@@148))))
 (=> (= (type $generated@@149) $generated@@150) (= ($generated@@113 ($generated@@114 $generated@@147 $generated@@148 $generated@@149) $generated@@148) $generated@@149)))
 :weight 0
))) (and (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@153 $generated@@154) (= ($generated@@113 ($generated@@114 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@113 $generated@@152 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or true (= ($generated@@113 ($generated@@114 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@113 $generated@@156 $generated@@158)))
 :weight 0
)))) (forall (($generated@@159 Int) ) (! (= (type ($generated@@105 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@105 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@2) (= (type $generated@@161) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
 :pattern ( ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@79) (= (type $generated@@165) $generated@@80)) (or ($generated@@163 $generated@@165) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@165 ($generated@@83 $generated@@46))))) true)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@79) (= (type $generated@@167) $generated@@80)) (or ($generated@@81 $generated@@167) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@167 ($generated@@83 $generated@@46))))) true)
 :pattern ( ($generated@@77 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@82 $generated@@168 ($generated@@105 0)))
 :pattern ( ($generated@@82 $generated@@168 ($generated@@105 0)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@171 $generated@@172)) $generated@@68)
 :pattern ( ($generated@@170 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@68) (= (type $generated@@174) $generated@@68)) (= (type $generated@@175) $generated@@80)) ($generated@@82 $generated@@175 ($generated@@170 $generated@@173 $generated@@174))) ($generated@@169 $generated@@175))
 :pattern ( ($generated@@169 $generated@@175) ($generated@@82 $generated@@175 ($generated@@170 $generated@@173 $generated@@174)))
)))
(assert  (and (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@89)
 :pattern ( ($generated@@177 $generated@@179))
)) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@89)
 :pattern ( ($generated@@178 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@80) (= (type $generated@@182) $generated@@80)) true) (= ($generated@@176 $generated@@181 $generated@@182)  (and (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)) (= ($generated@@178 $generated@@181) ($generated@@178 $generated@@182)))))
 :pattern ( ($generated@@176 $generated@@181 $generated@@182))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@185))
)) (= (type $generated@@184) $generated@@80)))
(assert (= ($generated@@183 $generated@@184) $generated@@63))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@68)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@106 $generated@@89 $generated@@2)) (= (type $generated@@190) $generated@@68)) ($generated@@82 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@82 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 17)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@107 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@71 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@107) (= (type $generated@@241) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@242) ($generated@@70 $generated@@4))) (= (type $generated@@244) $generated@@107)) (= (type $generated@@245) ($generated@@70 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@113 ($generated@@111 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@79) (= (type $generated@@248) $generated@@80)) (or ($generated@@163 $generated@@248) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@248 ($generated@@83 $generated@@46))))) (and (=> (not ($generated@@84 $generated@@248)) (let (($generated@@249 ($generated@@85 $generated@@248)))
(let (($generated@@250 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@248)))))
 (=> (<= ($generated@@88 0) $generated@@250) ($generated@@163 $generated@@249))))) (= ($generated@@162 ($generated@@78 $generated@@247) $generated@@248) (ite ($generated@@84 $generated@@248) true (let (($generated@@251 ($generated@@85 $generated@@248)))
(let (($generated@@252 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@248)))))
 (and (<= ($generated@@88 0) $generated@@252) ($generated@@162 $generated@@247 $generated@@251))))))))
 :pattern ( ($generated@@162 ($generated@@78 $generated@@247) $generated@@248))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (= (type $generated@@254) $generated@@68) (= (type $generated@@255) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@253 $generated@@255)) ($generated@@104 $generated@@184 ($generated@@83 $generated@@254) $generated@@255))
 :pattern ( ($generated@@104 $generated@@184 ($generated@@83 $generated@@254) $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@256 $generated@@258 $generated@@259)) $generated@@80)
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@68) (= (type $generated@@261) $generated@@68)) (= (type $generated@@262) $generated@@89)) (= (type $generated@@263) $generated@@89)) (= ($generated@@82 ($generated@@256 $generated@@262 $generated@@263) ($generated@@170 $generated@@260 $generated@@261))  (and ($generated@@257 $generated@@262 $generated@@260) ($generated@@257 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@82 ($generated@@256 $generated@@262 $generated@@263) ($generated@@170 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@68) ($generated@@82 $generated@@184 ($generated@@83 $generated@@264)))
 :pattern ( ($generated@@82 $generated@@184 ($generated@@83 $generated@@264)))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@80) (= (type $generated@@266) $generated@@80)) (= ($generated@@176 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@176 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@80) (= (type $generated@@269) $generated@@80)) (= ($generated@@267 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@267 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@80) (= (type $generated@@272) $generated@@80)) (and ($generated@@270 $generated@@271) ($generated@@270 $generated@@272))) (= ($generated@@267 $generated@@271 $generated@@272)  (and (= ($generated@@87 $generated@@271) ($generated@@87 $generated@@272)) ($generated@@267 ($generated@@85 $generated@@271) ($generated@@85 $generated@@272)))))
 :pattern ( ($generated@@267 $generated@@271 $generated@@272) ($generated@@270 $generated@@271))
 :pattern ( ($generated@@267 $generated@@271 $generated@@272) ($generated@@270 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (= (type $generated@@276) $generated@@79) (= (type $generated@@277) $generated@@80)) (or ($generated@@81 ($generated@@273 $generated@@277)) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@277 ($generated@@83 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@273 ($generated@@11 ($generated@@84 ($generated@@273 $generated@@277)))))) (let (($generated@@278 ($generated@@273 ($generated@@85 ($generated@@273 $generated@@277)))))
(let (($generated@@279 ($generated@@88 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@273 $generated@@277)))))))
 (=> (<= $generated@@279 ($generated@@88 0)) ($generated@@81 $generated@@278))))) (= ($generated@@77 ($generated@@78 $generated@@276) ($generated@@273 $generated@@277)) (ite ($generated@@84 ($generated@@273 $generated@@277)) true (let (($generated@@280 ($generated@@273 ($generated@@85 ($generated@@273 $generated@@277)))))
(let (($generated@@281 ($generated@@88 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@273 $generated@@277)))))))
 (and (<= $generated@@281 ($generated@@88 0)) ($generated@@77 ($generated@@78 $generated@@276) $generated@@280))))))))
 :weight 3
 :pattern ( ($generated@@77 ($generated@@78 $generated@@276) ($generated@@273 $generated@@277)))
))))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@68)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@106 $generated@@89 $generated@@4)) (= (type $generated@@285) $generated@@68)) (= ($generated@@82 $generated@@284 ($generated@@282 $generated@@285)) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@89) ($generated@@0 ($generated@@111 $generated@@284 $generated@@286))) ($generated@@257 $generated@@286 $generated@@285))
 :pattern ( ($generated@@111 $generated@@284 $generated@@286))
))))
 :pattern ( ($generated@@82 $generated@@284 ($generated@@282 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@68)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) ($generated@@106 $generated@@89 $generated@@4)) (= (type $generated@@290) $generated@@68)) (= ($generated@@82 $generated@@289 ($generated@@287 $generated@@290)) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@89) ($generated@@0 ($generated@@111 $generated@@289 $generated@@291))) ($generated@@257 $generated@@291 $generated@@290))
 :pattern ( ($generated@@111 $generated@@289 $generated@@291))
))))
 :pattern ( ($generated@@82 $generated@@289 ($generated@@287 $generated@@290)))
)))
(assert (forall (($generated@@292 Int) ) (! (= ($generated@@88 $generated@@292) $generated@@292)
 :pattern ( ($generated@@88 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (= ($generated@@273 $generated@@293) $generated@@293)
 :pattern ( ($generated@@273 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (= (type $generated@@294) $generated@@80) (= (type $generated@@295) $generated@@80)) (and ($generated@@84 $generated@@294) ($generated@@84 $generated@@295))) (= ($generated@@267 $generated@@294 $generated@@295) true))
 :pattern ( ($generated@@267 $generated@@294 $generated@@295) ($generated@@84 $generated@@294))
 :pattern ( ($generated@@267 $generated@@294 $generated@@295) ($generated@@84 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (! (= (type ($generated@@296 $generated@@298 $generated@@299)) $generated@@80)
 :pattern ( ($generated@@296 $generated@@298 $generated@@299))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@300) $generated@@79) (= (type $generated@@301) $generated@@80)) (or ($generated@@297 $generated@@301) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@301 ($generated@@83 $generated@@46))))) ($generated@@82 ($generated@@296 $generated@@300 $generated@@301) ($generated@@83 $generated@@46)))
 :pattern ( ($generated@@296 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (= (type ($generated@@302 $generated@@303 $generated@@304)) $generated@@80)
 :pattern ( ($generated@@302 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (= (type $generated@@305) $generated@@68) (= (type $generated@@306) $generated@@89)) (= (type $generated@@307) $generated@@80)) (= ($generated@@82 ($generated@@302 $generated@@306 $generated@@307) ($generated@@83 $generated@@305))  (and ($generated@@257 $generated@@306 $generated@@305) ($generated@@82 $generated@@307 ($generated@@83 $generated@@305)))))
 :pattern ( ($generated@@82 ($generated@@302 $generated@@306 $generated@@307) ($generated@@83 $generated@@305)))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@309) $generated@@68) (= (type $generated@@310) $generated@@68)) (= (type $generated@@311) $generated@@89)) (= (type $generated@@312) $generated@@89)) (= (type $generated@@313) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@253 $generated@@313)) (= ($generated@@104 ($generated@@256 $generated@@311 $generated@@312) ($generated@@170 $generated@@309 $generated@@310) $generated@@313)  (and ($generated@@308 $generated@@311 $generated@@309 $generated@@313) ($generated@@308 $generated@@312 $generated@@310 $generated@@313))))
 :pattern ( ($generated@@104 ($generated@@256 $generated@@311 $generated@@312) ($generated@@170 $generated@@309 $generated@@310) $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@80) (= ($generated@@169 $generated@@314) (= ($generated@@183 $generated@@314) $generated@@61)))
 :pattern ( ($generated@@169 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@80) (= ($generated@@84 $generated@@315) (= ($generated@@183 $generated@@315) $generated@@63)))
 :pattern ( ($generated@@84 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@80) (= ($generated@@270 $generated@@316) (= ($generated@@183 $generated@@316) $generated@@65)))
 :pattern ( ($generated@@270 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@80) ($generated@@169 $generated@@317)) (exists (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (and (and (= (type $generated@@318) $generated@@89) (= (type $generated@@319) $generated@@89)) (= $generated@@317 ($generated@@256 $generated@@318 $generated@@319)))
 :no-pattern (type $generated@@318)
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
)))
 :pattern ( ($generated@@169 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@80) ($generated@@270 $generated@@320)) (exists (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (and (and (= (type $generated@@321) $generated@@89) (= (type $generated@@322) $generated@@80)) (= $generated@@320 ($generated@@302 $generated@@321 $generated@@322)))
 :no-pattern (type $generated@@321)
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@270 $generated@@320))
)))
(assert  (and (and (forall (($generated@@327 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@327)) 18)) (forall (($generated@@328 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@325 $generated@@328))
))) (forall (($generated@@329 T@T) ) (! (= (type ($generated@@323 $generated@@329)) ($generated@@325 $generated@@329))
 :pattern ( ($generated@@323 $generated@@329))
))))
(assert (forall (($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@330)) 0)
 :pattern ( ($generated@@323 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@80) ($generated@@84 $generated@@331)) (= $generated@@331 $generated@@184))
 :pattern ( ($generated@@84 $generated@@331))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@332) $generated@@79) (= (type $generated@@333) $generated@@80)) (or ($generated@@163 ($generated@@273 $generated@@333)) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@333 ($generated@@83 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@273 ($generated@@11 ($generated@@84 ($generated@@273 $generated@@333)))))) (let (($generated@@334 ($generated@@273 ($generated@@85 ($generated@@273 $generated@@333)))))
(let (($generated@@335 ($generated@@88 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@273 $generated@@333)))))))
 (=> (<= ($generated@@88 0) $generated@@335) ($generated@@163 $generated@@334))))) (= ($generated@@162 ($generated@@78 $generated@@332) ($generated@@273 $generated@@333)) (ite ($generated@@84 ($generated@@273 $generated@@333)) true (let (($generated@@336 ($generated@@273 ($generated@@85 ($generated@@273 $generated@@333)))))
(let (($generated@@337 ($generated@@88 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@273 $generated@@333)))))))
 (and (<= ($generated@@88 0) $generated@@337) ($generated@@162 ($generated@@78 $generated@@332) $generated@@336))))))))
 :weight 3
 :pattern ( ($generated@@162 ($generated@@78 $generated@@332) ($generated@@273 $generated@@333)))
))))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@89)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@68) (= (type $generated@@342) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@308 ($generated@@338 $generated@@340) $generated@@341 $generated@@342) ($generated@@104 $generated@@340 $generated@@341 $generated@@342)))
 :pattern ( ($generated@@308 ($generated@@338 $generated@@340) $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@345 T@T) ) (! (= (type ($generated@@344 $generated@@345)) ($generated@@106 $generated@@345 $generated@@2))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@109 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@106 $generated@@347 $generated@@2)) (and (= (= ($generated@@343 $generated@@346) 0) (= $generated@@346 ($generated@@344 $generated@@347))) (=> (not (= ($generated@@343 $generated@@346) 0)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) (< 0 ($generated ($generated@@111 $generated@@346 $generated@@348))))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@73)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@68) (and (= ($generated@@102 ($generated@@83 $generated@@351)) $generated@@64) (= ($generated@@349 ($generated@@83 $generated@@351)) $generated@@67)))
 :pattern ( ($generated@@83 $generated@@351))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@106 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@111 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@111 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert  (and (and (and (and (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@375 $generated@@376)) 20)) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@372 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@374 ($generated@@372 $generated@@379 $generated@@380)) $generated@@380)
 :pattern ( ($generated@@372 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@373 (type $generated@@381))))
(= (type ($generated@@370 $generated@@381)) ($generated@@106 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@381))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= (type ($generated@@371 $generated@@383 $generated@@384)) ($generated@@372 $generated@@383 $generated@@384))
 :pattern ( ($generated@@371 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@T) ) (! (let (($generated@@387 (type $generated@@385)))
 (not ($generated@@0 ($generated@@111 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385))))
 :pattern ( (let (($generated@@387 (type $generated@@385)))
($generated@@111 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385)))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@109 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@106 $generated@@389 $generated@@2)) (= ($generated@@187 $generated@@388) (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@389) (and (<= 0 ($generated ($generated@@111 $generated@@388 $generated@@390))) (<= ($generated ($generated@@111 $generated@@388 $generated@@390)) ($generated@@343 $generated@@388))))
 :pattern ( ($generated@@111 $generated@@388 $generated@@390))
)))))
 :pattern ( ($generated@@187 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@356 (type $generated@@391))))
(let (($generated@@393 ($generated@@355 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@354 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@353 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) ($generated@@0 ($generated@@111 ($generated@@352 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@352 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@356 (type $generated@@396))))
(= (type ($generated@@395 $generated@@396)) ($generated@@106 $generated@@397 $generated@@4)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@356 (type $generated@@398))))
(let (($generated@@400 ($generated@@355 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@354 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@353 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@399) ($generated@@0 ($generated@@111 ($generated@@395 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@395 $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@374 (type $generated@@402))))
(let (($generated@@404 ($generated@@373 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@372 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@371 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) ($generated@@0 ($generated@@111 ($generated@@370 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@370 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@374 (type $generated@@407))))
(= (type ($generated@@406 $generated@@407)) ($generated@@106 $generated@@408 $generated@@4)))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@374 (type $generated@@409))))
(let (($generated@@411 ($generated@@373 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@372 $generated@@411 $generated@@410)) (or (= $generated@@409 ($generated@@371 $generated@@411 $generated@@410)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@410) ($generated@@0 ($generated@@111 ($generated@@406 $generated@@409) $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@406 $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@106 $generated@@89 $generated@@2)) (= (type $generated@@414) $generated@@68)) (= ($generated@@82 $generated@@413 ($generated@@186 $generated@@414)) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@89) (< 0 ($generated ($generated@@111 $generated@@413 $generated@@415)))) ($generated@@257 $generated@@415 $generated@@414))
 :pattern ( ($generated@@111 $generated@@413 $generated@@415))
))))
 :pattern ( ($generated@@82 $generated@@413 ($generated@@186 $generated@@414)))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@80) ($generated@@416 $generated@@417)) (or ($generated@@84 $generated@@417) ($generated@@270 $generated@@417)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@106 $generated@@89 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@418 ($generated@@282 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@89) ($generated@@0 ($generated@@111 $generated@@418 $generated@@421))) ($generated@@308 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@111 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@104 $generated@@418 ($generated@@282 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@106 $generated@@89 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@422 ($generated@@287 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@89) ($generated@@0 ($generated@@111 $generated@@422 $generated@@425))) ($generated@@308 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@111 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@104 $generated@@422 ($generated@@287 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@111 ($generated@@344 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@111 ($generated@@344 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@106 $generated@@89 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@356 (type $generated@@431))))
(let (($generated@@433 ($generated@@355 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@106 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@354 $generated@@89 $generated@@89)) (= (type $generated@@435) $generated@@89)) (= ($generated@@0 ($generated@@111 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@111 ($generated@@352 $generated@@434) ($generated@@177 ($generated@@86 $generated@@80 $generated@@435)))) (= ($generated@@111 ($generated@@429 $generated@@434) ($generated@@177 ($generated@@86 $generated@@80 $generated@@435))) ($generated@@178 ($generated@@86 $generated@@80 $generated@@435))))))
 :pattern ( ($generated@@111 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@106 $generated@@89 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@374 (type $generated@@439))))
(let (($generated@@441 ($generated@@373 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@106 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@372 $generated@@89 $generated@@89)) (= (type $generated@@443) $generated@@89)) (= ($generated@@0 ($generated@@111 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@111 ($generated@@370 $generated@@442) ($generated@@177 ($generated@@86 $generated@@80 $generated@@443)))) (= ($generated@@111 ($generated@@437 $generated@@442) ($generated@@177 ($generated@@86 $generated@@80 $generated@@443))) ($generated@@178 ($generated@@86 $generated@@80 $generated@@443))))))
 :pattern ( ($generated@@111 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@355 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@354 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@111 ($generated@@395 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@111 ($generated@@352 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@111 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@111 ($generated@@352 $generated@@444) $generated@@448))
 :pattern ( ($generated@@111 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@111 ($generated@@395 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@373 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@372 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@111 ($generated@@406 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@111 ($generated@@370 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@111 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@111 ($generated@@370 $generated@@449) $generated@@453))
 :pattern ( ($generated@@111 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@111 ($generated@@406 $generated@@449) $generated@@450))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@454) $generated@@79) (= (type $generated@@455) $generated@@80)) (or ($generated@@297 ($generated@@273 $generated@@455)) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@455 ($generated@@83 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@273 ($generated@@11 ($generated@@84 ($generated@@273 $generated@@455)))))) (let (($generated@@456 ($generated@@273 ($generated@@85 ($generated@@273 $generated@@455)))))
($generated@@297 $generated@@456))) (= ($generated@@296 ($generated@@78 $generated@@454) ($generated@@273 $generated@@455)) (ite ($generated@@84 ($generated@@273 $generated@@455)) $generated@@184 (let (($generated@@457 ($generated@@273 ($generated@@85 ($generated@@273 $generated@@455)))))
(let (($generated@@458 ($generated@@88 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@273 $generated@@455)))))))
($generated@@273 ($generated@@302 ($generated@@338 ($generated@@8 ($generated@@88 (- 0 $generated@@458)))) ($generated@@273 ($generated@@296 ($generated@@78 $generated@@454) $generated@@457))))))))))
 :weight 3
 :pattern ( ($generated@@296 ($generated@@78 $generated@@454) ($generated@@273 $generated@@455)))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@354 $generated@@89 $generated@@89)) (= (type $generated@@463) $generated@@68)) (= (type $generated@@464) $generated@@68)) (= (type $generated@@465) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@89) ($generated@@0 ($generated@@111 ($generated@@352 $generated@@462) $generated@@466))) (and ($generated@@308 ($generated@@111 ($generated@@429 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@308 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@111 ($generated@@429 $generated@@462) $generated@@466))
 :pattern ( ($generated@@111 ($generated@@352 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@104 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@372 $generated@@89 $generated@@89)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@89) ($generated@@0 ($generated@@111 ($generated@@370 $generated@@470) $generated@@474))) (and ($generated@@308 ($generated@@111 ($generated@@437 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@308 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@111 ($generated@@437 $generated@@470) $generated@@474))
 :pattern ( ($generated@@111 ($generated@@370 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@104 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@80)) ($generated@@82 $generated@@476 ($generated@@83 $generated@@475))) (or ($generated@@84 $generated@@476) ($generated@@270 $generated@@476)))
 :pattern ( ($generated@@270 $generated@@476) ($generated@@82 $generated@@476 ($generated@@83 $generated@@475)))
 :pattern ( ($generated@@84 $generated@@476) ($generated@@82 $generated@@476 ($generated@@83 $generated@@475)))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@79)
 :pattern ( ($generated@@477 $generated@@479))
)) (= (type $generated@@478) $generated@@79)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@79) (= (type $generated@@481) $generated@@80)) (= ($generated@@162 $generated@@480 $generated@@481) ($generated@@162 $generated@@478 $generated@@481)))
 :pattern ( ($generated@@162 ($generated@@477 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@79) (= (type $generated@@483) $generated@@80)) (= ($generated@@77 $generated@@482 $generated@@483) ($generated@@77 $generated@@478 $generated@@483)))
 :pattern ( ($generated@@77 ($generated@@477 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@485 T@T) ) (! (= (type ($generated@@484 $generated@@485)) ($generated@@106 $generated@@485 $generated@@4))
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@374 (type $generated@@486))))
(let (($generated@@488 ($generated@@373 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@372 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@371 $generated@@488 $generated@@487)) (= ($generated@@370 $generated@@486) ($generated@@484 $generated@@488))))))
 :pattern ( ($generated@@370 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@374 (type $generated@@489))))
(let (($generated@@491 ($generated@@373 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@372 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@371 $generated@@491 $generated@@490)) (= ($generated@@406 $generated@@489) ($generated@@484 $generated@@490))))))
 :pattern ( ($generated@@406 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@374 (type $generated@@492))))
(let (($generated@@494 ($generated@@373 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@372 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@371 $generated@@494 $generated@@493)) (= ($generated@@436 $generated@@492) ($generated@@484 $generated@@89))))))
 :pattern ( ($generated@@436 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@356 (type $generated@@495))))
(let (($generated@@497 ($generated@@355 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@354 $generated@@497 $generated@@496)) (or (= $generated@@495 ($generated@@353 $generated@@497 $generated@@496)) (exists (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (and (and (= (type $generated@@498) $generated@@89) (= (type $generated@@499) $generated@@89)) ($generated@@0 ($generated@@111 ($generated@@428 $generated@@495) ($generated@@338 ($generated@@256 $generated@@498 $generated@@499)))))
 :no-pattern (type $generated@@498)
 :no-pattern (type $generated@@499)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
))))))
 :pattern ( ($generated@@428 $generated@@495))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@374 (type $generated@@500))))
(let (($generated@@502 ($generated@@373 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@372 $generated@@502 $generated@@501)) (or (= $generated@@500 ($generated@@371 $generated@@502 $generated@@501)) (exists (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (and (and (= (type $generated@@503) $generated@@89) (= (type $generated@@504) $generated@@89)) ($generated@@0 ($generated@@111 ($generated@@436 $generated@@500) ($generated@@338 ($generated@@256 $generated@@503 $generated@@504)))))
 :no-pattern (type $generated@@503)
 :no-pattern (type $generated@@504)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
))))))
 :pattern ( ($generated@@436 $generated@@500))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@89) ($generated@@257 $generated@@505 $generated@@46)) (and (= ($generated@@338 ($generated@@86 $generated@@2 $generated@@505)) $generated@@505) ($generated@@82 ($generated@@86 $generated@@2 $generated@@505) $generated@@46)))
 :pattern ( ($generated@@257 $generated@@505 $generated@@46))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@89) ($generated@@257 $generated@@506 $generated@@47)) (and (= ($generated@@338 ($generated@@86 $generated@@3 $generated@@506)) $generated@@506) ($generated@@82 ($generated@@86 $generated@@3 $generated@@506) $generated@@47)))
 :pattern ( ($generated@@257 $generated@@506 $generated@@47))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@89) ($generated@@257 $generated@@507 $generated@@44)) (and (= ($generated@@338 ($generated@@86 $generated@@4 $generated@@507)) $generated@@507) ($generated@@82 ($generated@@86 $generated@@4 $generated@@507) $generated@@44)))
 :pattern ( ($generated@@257 $generated@@507 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@508) 21))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@89) ($generated@@257 $generated@@509 $generated@@45)) (and (= ($generated@@338 ($generated@@86 $generated@@508 $generated@@509)) $generated@@509) ($generated@@82 ($generated@@86 $generated@@508 $generated@@509) $generated@@45)))
 :pattern ( ($generated@@257 $generated@@509 $generated@@45))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@79) (= (type $generated@@511) $generated@@80)) (= ($generated@@162 ($generated@@78 $generated@@510) $generated@@511) ($generated@@162 $generated@@510 $generated@@511)))
 :pattern ( ($generated@@162 ($generated@@78 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@79) (= (type $generated@@513) $generated@@80)) (= ($generated@@77 ($generated@@78 $generated@@512) $generated@@513) ($generated@@77 $generated@@512 $generated@@513)))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@257 ($generated@@338 $generated@@514) $generated@@515) ($generated@@82 $generated@@514 $generated@@515)))
 :pattern ( ($generated@@257 ($generated@@338 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@109 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@106 $generated@@517 $generated@@2)) (<= 0 ($generated@@343 $generated@@516))))
 :pattern ( ($generated@@343 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@326 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@325 $generated@@519)) (<= 0 ($generated@@324 $generated@@518))))
 :pattern ( ($generated@@324 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@520 ($generated@@459 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@459 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@68) (= (type $generated@@527) $generated@@68)) (= ($generated@@524 ($generated@@459 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@459 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= ($generated@@102 ($generated@@459 $generated@@528 $generated@@529)) $generated@@58))
 :pattern ( ($generated@@459 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@68) (= (type $generated@@533) $generated@@68)) (= ($generated@@530 ($generated@@467 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@467 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@68) (= (type $generated@@537) $generated@@68)) (= ($generated@@534 ($generated@@467 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@467 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@68) (= (type $generated@@539) $generated@@68)) (= ($generated@@102 ($generated@@467 $generated@@538 $generated@@539)) $generated@@59))
 :pattern ( ($generated@@467 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@89) (= (type $generated@@541) $generated@@89)) (= ($generated@@183 ($generated@@256 $generated@@540 $generated@@541)) $generated@@61))
 :pattern ( ($generated@@256 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@68) (= (type $generated@@545) $generated@@68)) (= ($generated@@542 ($generated@@170 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@170 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@68) (= (type $generated@@549) $generated@@68)) (= ($generated@@546 ($generated@@170 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@170 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@89) (= (type $generated@@551) $generated@@89)) (= ($generated@@177 ($generated@@256 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@256 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@89) (= (type $generated@@553) $generated@@89)) (= ($generated@@178 ($generated@@256 $generated@@552 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@256 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@89) (= (type $generated@@555) $generated@@80)) (= ($generated@@183 ($generated@@302 $generated@@554 $generated@@555)) $generated@@65))
 :pattern ( ($generated@@302 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@89) (= (type $generated@@557) $generated@@80)) (= ($generated@@87 ($generated@@302 $generated@@556 $generated@@557)) $generated@@556))
 :pattern ( ($generated@@302 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@89) (= (type $generated@@559) $generated@@80)) (= ($generated@@85 ($generated@@302 $generated@@558 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@302 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@79) (= (type $generated@@561) $generated@@80)) (= ($generated@@296 $generated@@560 $generated@@561) ($generated@@296 $generated@@478 $generated@@561)))
 :pattern ( ($generated@@296 ($generated@@477 $generated@@560) $generated@@561))
)))
(assert  (and (forall (($generated@@564 T@U) ) (! (= (type ($generated@@562 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@564))
)) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (! (let (($generated@@567 ($generated@@326 (type $generated@@565))))
(= (type ($generated@@563 $generated@@565 $generated@@566)) $generated@@567))
 :pattern ( ($generated@@563 $generated@@565 $generated@@566))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@325 $generated@@89)) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@568 ($generated@@562 $generated@@569) $generated@@570) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@324 $generated@@568))) ($generated@@308 ($generated@@563 $generated@@568 $generated@@571) $generated@@569 $generated@@570))
 :pattern ( ($generated@@563 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@104 $generated@@568 ($generated@@562 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@572 ($generated@@105 $generated@@573)) $generated@@573)
 :pattern ( ($generated@@105 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@282 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@282 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@102 ($generated@@282 $generated@@577)) $generated@@54))
 :pattern ( ($generated@@282 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@578 ($generated@@287 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@287 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@102 ($generated@@287 $generated@@581)) $generated@@55))
 :pattern ( ($generated@@287 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@68) (= ($generated@@582 ($generated@@186 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@186 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@68) (= ($generated@@102 ($generated@@186 $generated@@585)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@68)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@68) (= ($generated@@586 ($generated@@562 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@562 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@68) (= ($generated@@102 ($generated@@562 $generated@@589)) $generated@@57))
 :pattern ( ($generated@@562 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@68)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@68) (= ($generated@@590 ($generated@@83 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@83 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
(= ($generated@@86 $generated@@594 ($generated@@338 $generated@@593)) $generated@@593))
 :pattern ( ($generated@@338 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@354 $generated@@89 $generated@@89)) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) $generated@@68)) (= ($generated@@82 $generated@@595 ($generated@@459 $generated@@596 $generated@@597)) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@89) ($generated@@0 ($generated@@111 ($generated@@352 $generated@@595) $generated@@598))) (and ($generated@@257 ($generated@@111 ($generated@@429 $generated@@595) $generated@@598) $generated@@597) ($generated@@257 $generated@@598 $generated@@596)))
 :pattern ( ($generated@@111 ($generated@@429 $generated@@595) $generated@@598))
 :pattern ( ($generated@@111 ($generated@@352 $generated@@595) $generated@@598))
))))
 :pattern ( ($generated@@82 $generated@@595 ($generated@@459 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@372 $generated@@89 $generated@@89)) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) $generated@@68)) (= ($generated@@82 $generated@@599 ($generated@@467 $generated@@600 $generated@@601)) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@89) ($generated@@0 ($generated@@111 ($generated@@370 $generated@@599) $generated@@602))) (and ($generated@@257 ($generated@@111 ($generated@@437 $generated@@599) $generated@@602) $generated@@601) ($generated@@257 $generated@@602 $generated@@600)))
 :pattern ( ($generated@@111 ($generated@@437 $generated@@599) $generated@@602))
 :pattern ( ($generated@@111 ($generated@@370 $generated@@599) $generated@@602))
))))
 :pattern ( ($generated@@82 $generated@@599 ($generated@@467 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@89) (= (type $generated@@606) $generated@@89)) (< ($generated@@603 $generated@@605) ($generated@@604 ($generated@@256 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@256 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@89) (= (type $generated@@608) $generated@@89)) (< ($generated@@603 $generated@@608) ($generated@@604 ($generated@@256 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@256 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@89) (= (type $generated@@610) $generated@@80)) (< ($generated@@603 $generated@@609) ($generated@@604 ($generated@@302 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@302 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@89) (= (type $generated@@612) $generated@@80)) (< ($generated@@604 $generated@@612) ($generated@@604 ($generated@@302 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@302 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@79) (= (type $generated@@614) $generated@@80)) (= ($generated@@296 ($generated@@78 $generated@@613) $generated@@614) ($generated@@296 $generated@@613 $generated@@614)))
 :pattern ( ($generated@@296 ($generated@@78 $generated@@613) $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@89) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) $generated@@68)) ($generated@@257 $generated@@615 ($generated@@459 $generated@@616 $generated@@617))) (and (= ($generated@@338 ($generated@@86 ($generated@@354 $generated@@89 $generated@@89) $generated@@615)) $generated@@615) ($generated@@82 ($generated@@86 ($generated@@354 $generated@@89 $generated@@89) $generated@@615) ($generated@@459 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@257 $generated@@615 ($generated@@459 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@89) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) $generated@@68)) ($generated@@257 $generated@@618 ($generated@@467 $generated@@619 $generated@@620))) (and (= ($generated@@338 ($generated@@86 ($generated@@372 $generated@@89 $generated@@89) $generated@@618)) $generated@@618) ($generated@@82 ($generated@@86 ($generated@@372 $generated@@89 $generated@@89) $generated@@618) ($generated@@467 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@257 $generated@@618 ($generated@@467 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@68) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) $generated@@89)) ($generated@@257 $generated@@623 ($generated@@170 $generated@@621 $generated@@622))) (and (= ($generated@@338 ($generated@@86 $generated@@80 $generated@@623)) $generated@@623) ($generated@@82 ($generated@@86 $generated@@80 $generated@@623) ($generated@@170 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@257 $generated@@623 ($generated@@170 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@80) (= (type $generated@@625) $generated@@68)) (= (type $generated@@626) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@253 $generated@@626) (and ($generated@@270 $generated@@624) ($generated@@104 $generated@@624 ($generated@@83 $generated@@625) $generated@@626)))) ($generated@@308 ($generated@@87 $generated@@624) $generated@@625 $generated@@626))
 :pattern ( ($generated@@308 ($generated@@87 $generated@@624) $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (not ($generated@@0 ($generated@@111 ($generated@@484 $generated@@628) $generated@@627))))
 :pattern ( (let (($generated@@628 (type $generated@@627)))
($generated@@111 ($generated@@484 $generated@@628) $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@68) (= (type $generated@@630) $generated@@68)) (and (= ($generated@@102 ($generated@@170 $generated@@629 $generated@@630)) $generated@@62) (= ($generated@@349 ($generated@@170 $generated@@629 $generated@@630)) $generated@@66)))
 :pattern ( ($generated@@170 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@80) (= ($generated@@603 ($generated@@338 $generated@@631)) ($generated@@604 $generated@@631)))
 :pattern ( ($generated@@603 ($generated@@338 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@89) ($generated@@257 $generated@@632 ($generated@@105 0))) (and (= ($generated@@338 ($generated@@86 $generated@@2 $generated@@632)) $generated@@632) ($generated@@82 ($generated@@86 ($generated@@106 $generated@@89 $generated@@4) $generated@@632) ($generated@@105 0))))
 :pattern ( ($generated@@257 $generated@@632 ($generated@@105 0)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@89) (= (type $generated@@634) $generated@@68)) ($generated@@257 $generated@@633 ($generated@@282 $generated@@634))) (and (= ($generated@@338 ($generated@@86 ($generated@@106 $generated@@89 $generated@@4) $generated@@633)) $generated@@633) ($generated@@82 ($generated@@86 ($generated@@106 $generated@@89 $generated@@4) $generated@@633) ($generated@@282 $generated@@634))))
 :pattern ( ($generated@@257 $generated@@633 ($generated@@282 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@89) (= (type $generated@@636) $generated@@68)) ($generated@@257 $generated@@635 ($generated@@287 $generated@@636))) (and (= ($generated@@338 ($generated@@86 ($generated@@106 $generated@@89 $generated@@4) $generated@@635)) $generated@@635) ($generated@@82 ($generated@@86 ($generated@@106 $generated@@89 $generated@@4) $generated@@635) ($generated@@287 $generated@@636))))
 :pattern ( ($generated@@257 $generated@@635 ($generated@@287 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@89) (= (type $generated@@638) $generated@@68)) ($generated@@257 $generated@@637 ($generated@@186 $generated@@638))) (and (= ($generated@@338 ($generated@@86 ($generated@@106 $generated@@89 $generated@@2) $generated@@637)) $generated@@637) ($generated@@82 ($generated@@86 ($generated@@106 $generated@@89 $generated@@2) $generated@@637) ($generated@@186 $generated@@638))))
 :pattern ( ($generated@@257 $generated@@637 ($generated@@186 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@89) (= (type $generated@@640) $generated@@68)) ($generated@@257 $generated@@639 ($generated@@562 $generated@@640))) (and (= ($generated@@338 ($generated@@86 ($generated@@325 $generated@@89) $generated@@639)) $generated@@639) ($generated@@82 ($generated@@86 ($generated@@325 $generated@@89) $generated@@639) ($generated@@562 $generated@@640))))
 :pattern ( ($generated@@257 $generated@@639 ($generated@@562 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@68) (= (type $generated@@642) $generated@@89)) ($generated@@257 $generated@@642 ($generated@@83 $generated@@641))) (and (= ($generated@@338 ($generated@@86 $generated@@80 $generated@@642)) $generated@@642) ($generated@@82 ($generated@@86 $generated@@80 $generated@@642) ($generated@@83 $generated@@641))))
 :pattern ( ($generated@@257 $generated@@642 ($generated@@83 $generated@@641)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@80) (= (type $generated@@644) $generated@@68)) (= (type $generated@@645) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@253 $generated@@645) (and ($generated@@270 $generated@@643) ($generated@@104 $generated@@643 ($generated@@83 $generated@@644) $generated@@645)))) ($generated@@104 ($generated@@85 $generated@@643) ($generated@@83 $generated@@644) $generated@@645))
 :pattern ( ($generated@@104 ($generated@@85 $generated@@643) ($generated@@83 $generated@@644) $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@106 $generated@@89 $generated@@2)) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@646 ($generated@@186 $generated@@647) $generated@@648) (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@89) (< 0 ($generated ($generated@@111 $generated@@646 $generated@@649)))) ($generated@@308 $generated@@649 $generated@@647 $generated@@648))
 :pattern ( ($generated@@111 $generated@@646 $generated@@649))
))))
 :pattern ( ($generated@@104 $generated@@646 ($generated@@186 $generated@@647) $generated@@648))
)))
(assert (= $generated@@184 ($generated@@273 $generated@@184)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@80) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@253 $generated@@652) (and ($generated@@169 $generated@@650) (exists (($generated@@653 T@U) ) (!  (and (= (type $generated@@653) $generated@@68) ($generated@@104 $generated@@650 ($generated@@170 $generated@@651 $generated@@653) $generated@@652))
 :pattern ( ($generated@@104 $generated@@650 ($generated@@170 $generated@@651 $generated@@653) $generated@@652))
))))) ($generated@@308 ($generated@@177 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@308 ($generated@@177 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) $generated@@80) (= (type $generated@@655) $generated@@68)) (= (type $generated@@656) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@253 $generated@@656) (and ($generated@@169 $generated@@654) (exists (($generated@@657 T@U) ) (!  (and (= (type $generated@@657) $generated@@68) ($generated@@104 $generated@@654 ($generated@@170 $generated@@657 $generated@@655) $generated@@656))
 :pattern ( ($generated@@104 $generated@@654 ($generated@@170 $generated@@657 $generated@@655) $generated@@656))
))))) ($generated@@308 ($generated@@178 $generated@@654) $generated@@655 $generated@@656))
 :pattern ( ($generated@@308 ($generated@@178 $generated@@654) $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@89) (= (type $generated@@659) $generated@@89)) (= ($generated@@256 ($generated@@273 $generated@@658) ($generated@@273 $generated@@659)) ($generated@@273 ($generated@@256 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@256 ($generated@@273 $generated@@658) ($generated@@273 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@89) (= (type $generated@@661) $generated@@80)) (= ($generated@@302 ($generated@@273 $generated@@660) ($generated@@273 $generated@@661)) ($generated@@273 ($generated@@302 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@302 ($generated@@273 $generated@@660) ($generated@@273 $generated@@661)))
)))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@338 ($generated@@8 ($generated@@88 $generated@@662))) ($generated@@273 ($generated@@338 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@338 ($generated@@8 ($generated@@88 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@338 ($generated@@273 $generated@@663)) ($generated@@273 ($generated@@338 $generated@@663)))
 :pattern ( ($generated@@338 ($generated@@273 $generated@@663)))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@79) (= (type $generated@@665) $generated@@80)) (or ($generated@@297 $generated@@665) (and (not (= 1 $generated@@76)) ($generated@@82 $generated@@665 ($generated@@83 $generated@@46))))) (and (=> (not ($generated@@84 $generated@@665)) (let (($generated@@666 ($generated@@85 $generated@@665)))
($generated@@297 $generated@@666))) (= ($generated@@296 ($generated@@78 $generated@@664) $generated@@665) (ite ($generated@@84 $generated@@665) $generated@@184 (let (($generated@@667 ($generated@@85 $generated@@665)))
(let (($generated@@668 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@665)))))
($generated@@302 ($generated@@338 ($generated@@8 (- 0 $generated@@668))) ($generated@@296 $generated@@664 $generated@@667))))))))
 :pattern ( ($generated@@296 ($generated@@78 $generated@@664) $generated@@665))
))))
(assert (forall (($generated@@669 T@U) ) (! (let (($generated@@670 ($generated@@326 (type $generated@@669))))
 (=> (and (= (type $generated@@669) ($generated@@325 $generated@@670)) (= ($generated@@324 $generated@@669) 0)) (= $generated@@669 ($generated@@323 $generated@@670))))
 :pattern ( ($generated@@324 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (! (let (($generated@@674 (type $generated@@672)))
 (=> (and (and (= (type $generated@@671) ($generated@@106 $generated@@674 $generated@@2)) (= (type $generated@@673) $generated@@2)) (<= 0 ($generated $generated@@673))) (= ($generated@@343 ($generated@@112 $generated@@671 $generated@@672 $generated@@673)) (+ (- ($generated@@343 $generated@@671) ($generated ($generated@@111 $generated@@671 $generated@@672))) ($generated $generated@@673)))))
 :pattern ( ($generated@@343 ($generated@@112 $generated@@671 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@676) $generated@@2)) ($generated@@104 $generated@@676 $generated@@46 $generated@@675))
 :pattern ( ($generated@@104 $generated@@676 $generated@@46 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@678) $generated@@3)) ($generated@@104 $generated@@678 $generated@@47 $generated@@677))
 :pattern ( ($generated@@104 $generated@@678 $generated@@47 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@680) $generated@@4)) ($generated@@104 $generated@@680 $generated@@44 $generated@@679))
 :pattern ( ($generated@@104 $generated@@680 $generated@@44 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@682) $generated@@508)) ($generated@@104 $generated@@682 $generated@@45 $generated@@681))
 :pattern ( ($generated@@104 $generated@@682 $generated@@45 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@684) $generated@@89)) ($generated@@104 $generated@@684 $generated@@48 $generated@@683))
 :pattern ( ($generated@@104 $generated@@684 $generated@@48 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@685) $generated@@68) (= (type $generated@@686) $generated@@89)) (= (type $generated@@687) $generated@@80)) (= (type $generated@@688) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@253 $generated@@688)) (= ($generated@@104 ($generated@@302 $generated@@686 $generated@@687) ($generated@@83 $generated@@685) $generated@@688)  (and ($generated@@308 $generated@@686 $generated@@685 $generated@@688) ($generated@@104 $generated@@687 ($generated@@83 $generated@@685) $generated@@688))))
 :pattern ( ($generated@@104 ($generated@@302 $generated@@686 $generated@@687) ($generated@@83 $generated@@685) $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@325 $generated@@89)) (= (type $generated@@690) $generated@@68)) (= ($generated@@82 $generated@@689 ($generated@@562 $generated@@690)) (forall (($generated@@691 Int) ) (!  (=> (and (<= 0 $generated@@691) (< $generated@@691 ($generated@@324 $generated@@689))) ($generated@@257 ($generated@@563 $generated@@689 $generated@@691) $generated@@690))
 :pattern ( ($generated@@563 $generated@@689 $generated@@691))
))))
 :pattern ( ($generated@@82 $generated@@689 ($generated@@562 $generated@@690)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 Int) ) (!  (=> (= (type $generated@@693) ($generated@@325 $generated@@89)) (=> (and (<= 0 $generated@@694) (< $generated@@694 ($generated@@324 $generated@@693))) (< ($generated@@604 ($generated@@86 $generated@@80 ($generated@@563 $generated@@693 $generated@@694))) ($generated@@692 $generated@@693))))
 :pattern ( ($generated@@604 ($generated@@86 $generated@@80 ($generated@@563 $generated@@693 $generated@@694))))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) ($generated@@354 $generated@@89 $generated@@89)) (= (type $generated@@696) $generated@@68)) (= (type $generated@@697) $generated@@68)) ($generated@@82 $generated@@695 ($generated@@459 $generated@@696 $generated@@697))) (and (and ($generated@@82 ($generated@@352 $generated@@695) ($generated@@282 $generated@@696)) ($generated@@82 ($generated@@395 $generated@@695) ($generated@@282 $generated@@697))) ($generated@@82 ($generated@@428 $generated@@695) ($generated@@282 ($generated@@170 $generated@@696 $generated@@697)))))
 :pattern ( ($generated@@82 $generated@@695 ($generated@@459 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (= (type $generated@@698) ($generated@@372 $generated@@89 $generated@@89)) (= (type $generated@@699) $generated@@68)) (= (type $generated@@700) $generated@@68)) ($generated@@82 $generated@@698 ($generated@@467 $generated@@699 $generated@@700))) (and (and ($generated@@82 ($generated@@370 $generated@@698) ($generated@@287 $generated@@699)) ($generated@@82 ($generated@@406 $generated@@698) ($generated@@287 $generated@@700))) ($generated@@82 ($generated@@436 $generated@@698) ($generated@@287 ($generated@@170 $generated@@699 $generated@@700)))))
 :pattern ( ($generated@@82 $generated@@698 ($generated@@467 $generated@@699 $generated@@700)))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@2) ($generated@@82 $generated@@701 $generated@@46))
 :pattern ( ($generated@@82 $generated@@701 $generated@@46))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@3) ($generated@@82 $generated@@702 $generated@@47))
 :pattern ( ($generated@@82 $generated@@702 $generated@@47))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@4) ($generated@@82 $generated@@703 $generated@@44))
 :pattern ( ($generated@@82 $generated@@703 $generated@@44))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@508) ($generated@@82 $generated@@704 $generated@@45))
 :pattern ( ($generated@@82 $generated@@704 $generated@@45))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@89) ($generated@@82 $generated@@705 $generated@@48))
 :pattern ( ($generated@@82 $generated@@705 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@706) ($generated@@193 $generated@@107 $generated@@4)) (= (type $generated@@707) $generated@@107)) (= (type $generated@@708) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@709) $generated@@80)) (= (type $generated@@710) ($generated@@106 $generated@@107 $generated@@108))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@712  (=> (and (= $generated@@706 ($generated@@192 $generated@@707 $generated@@708 $generated@@60 false)) ($generated@@416 $generated@@709)) (=> (and (and ($generated@@253 $generated@@710) ($generated@@711 $generated@@710)) (and (= $generated@@708 $generated@@710) (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@80) (=> (and (and ($generated@@82 $generated@@713 ($generated@@83 $generated@@46)) ($generated@@77 ($generated@@78 $generated@@478) $generated@@713)) (< ($generated@@604 $generated@@713) ($generated@@604 $generated@@709))) ($generated@@162 ($generated@@78 $generated@@478) ($generated@@296 ($generated@@78 $generated@@478) $generated@@713))))
 :no-pattern (type $generated@@713)
 :no-pattern ($generated $generated@@713)
 :no-pattern ($generated@@0 $generated@@713)
)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@163 ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) (or ($generated@@162 ($generated@@78 $generated@@478) ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) (=> ($generated@@84 ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) ($generated@@0 ($generated@@273 ($generated@@11 true))))))) (=> (=> ($generated@@163 ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) (or ($generated@@162 ($generated@@78 $generated@@478) ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) (=> ($generated@@84 ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) ($generated@@0 ($generated@@273 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@163 ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) (or ($generated@@162 ($generated@@78 $generated@@478) ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) (=> (not ($generated@@84 ($generated@@296 ($generated@@78 $generated@@478) $generated@@709))) (let (($generated@@714 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@296 ($generated@@78 ($generated@@78 $generated@@478)) $generated@@709))))))
(<= ($generated@@88 0) $generated@@714)))))) (=> (=> ($generated@@163 ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) (or ($generated@@162 ($generated@@78 $generated@@478) ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) (=> (not ($generated@@84 ($generated@@296 ($generated@@78 $generated@@478) $generated@@709))) (let (($generated@@715 ($generated ($generated@@86 $generated@@2 ($generated@@87 ($generated@@296 ($generated@@78 ($generated@@78 $generated@@478)) $generated@@709))))))
(<= ($generated@@88 0) $generated@@715))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@163 ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) (or ($generated@@162 ($generated@@78 $generated@@478) ($generated@@296 ($generated@@78 $generated@@478) $generated@@709)) (=> (not ($generated@@84 ($generated@@296 ($generated@@78 $generated@@478) $generated@@709))) (let (($generated@@716 ($generated@@85 ($generated@@296 ($generated@@78 ($generated@@78 $generated@@478)) $generated@@709))))
($generated@@162 ($generated@@78 ($generated@@78 $generated@@478)) $generated@@716))))))))))))))
(let (($generated@@717  (=> (and ($generated@@253 $generated@@708) ($generated@@711 $generated@@708)) (=> (and (and (and (and ($generated@@82 $generated@@709 ($generated@@83 $generated@@46)) ($generated@@104 $generated@@709 ($generated@@83 $generated@@46) $generated@@708)) ($generated@@416 $generated@@709)) (= 2 $generated@@76)) (and (and ($generated@@81 $generated@@709) (and ($generated@@77 ($generated@@78 $generated@@478) $generated@@709) (ite ($generated@@84 $generated@@709) true (let (($generated@@718 ($generated@@85 $generated@@709)))
(let (($generated@@719 ($generated ($generated@@86 $generated@@2 ($generated@@87 $generated@@709)))))
 (and (<= $generated@@719 ($generated@@88 0)) ($generated@@77 ($generated@@78 $generated@@478) $generated@@718))))))) (= (ControlFlow 0 5) 2))) $generated@@712))))
$generated@@717)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@T T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@291 (T@U T@U T@U) Bool)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@307 (T@U) Int)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@T) T@U)
(declare-fun $generated@@356 (T@T T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@401 (T@U) Bool)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@458 () T@U)
(declare-fun $generated@@462 (T@T) T@U)
(declare-fun $generated@@486 () T@T)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@537 (T@U Int) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@659 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (and (= ($generated@@1 $generated@@140) 14) (= ($generated@@1 $generated@@141) 15)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@144 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@144 $generated@@145))
))))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) $generated@@141)) (or ($generated@@142 $generated@@147) (and (not (= 1 $generated@@138)) ($generated@@143 $generated@@147 ($generated@@144 $generated@@46))))) true)
 :pattern ( ($generated@@139 $generated@@146 $generated@@147))
))))
(assert (= (type $generated@@148) $generated@@70))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@2) (= (type $generated@@150) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@149 $generated@@148 $generated@@150))
 :pattern ( ($generated@@80 $generated@@149 $generated@@148 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@143 $generated@@151 ($generated@@81 0)))
 :pattern ( ($generated@@143 $generated@@151 ($generated@@81 0)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@154 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@70) (= (type $generated@@157) $generated@@70)) (= (type $generated@@158) $generated@@141)) ($generated@@143 $generated@@158 ($generated@@153 $generated@@156 $generated@@157))) ($generated@@152 $generated@@158))
 :pattern ( ($generated@@152 $generated@@158) ($generated@@143 $generated@@158 ($generated@@153 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 16) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@141) (= (type $generated@@166) $generated@@141)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@74)
 :pattern ( ($generated@@167 $generated@@169))
)) (= (type $generated@@168) $generated@@141)))
(assert (= ($generated@@167 $generated@@168) $generated@@64))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@162 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@143 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@143 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 17)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@83 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@73 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@83) (= (type $generated@@225) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@226) ($generated@@72 $generated@@4))) (= (type $generated@@228) $generated@@83)) (= (type $generated@@229) ($generated@@72 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert  (and (and (and (forall (($generated@@237 T@U) ) (! (= (type ($generated@@231 $generated@@237)) $generated@@140)
 :pattern ( ($generated@@231 $generated@@237))
)) (forall (($generated@@238 T@U) ) (! (= (type ($generated@@233 $generated@@238)) $generated@@141)
 :pattern ( ($generated@@233 $generated@@238))
))) (forall (($generated@@239 T@T) ($generated@@240 T@U) ) (! (= (type ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@U) ) (! (= (type ($generated@@235 $generated@@241)) $generated@@162)
 :pattern ( ($generated@@235 $generated@@241))
))))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@140) (= (type $generated@@243) $generated@@141)) (or ($generated@@142 $generated@@243) (and (not (= 1 $generated@@138)) ($generated@@143 $generated@@243 ($generated@@144 $generated@@46))))) (and (=> (not ($generated@@232 $generated@@243)) (let (($generated@@244 ($generated@@233 $generated@@243)))
(let (($generated@@245 ($generated ($generated@@234 $generated@@2 ($generated@@235 $generated@@243)))))
 (=> (<= ($generated@@236 0) $generated@@245) ($generated@@142 $generated@@244))))) (= ($generated@@139 ($generated@@231 $generated@@242) $generated@@243) (ite ($generated@@232 $generated@@243) true (let (($generated@@246 ($generated@@233 $generated@@243)))
(let (($generated@@247 ($generated ($generated@@234 $generated@@2 ($generated@@235 $generated@@243)))))
 (and (<= ($generated@@236 0) $generated@@247) ($generated@@139 $generated@@242 $generated@@246))))))))
 :pattern ( ($generated@@139 ($generated@@231 $generated@@242) $generated@@243))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (= (type $generated@@249) $generated@@70) (= (type $generated@@250) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@248 $generated@@250)) ($generated@@80 $generated@@168 ($generated@@144 $generated@@249) $generated@@250))
 :pattern ( ($generated@@80 $generated@@168 ($generated@@144 $generated@@249) $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@141)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@70) (= (type $generated@@256) $generated@@70)) (= (type $generated@@257) $generated@@162)) (= (type $generated@@258) $generated@@162)) (= ($generated@@143 ($generated@@251 $generated@@257 $generated@@258) ($generated@@153 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@143 ($generated@@251 $generated@@257 $generated@@258) ($generated@@153 $generated@@255 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@70) ($generated@@143 $generated@@168 ($generated@@144 $generated@@259)))
 :pattern ( ($generated@@143 $generated@@168 ($generated@@144 $generated@@259)))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@141) (= (type $generated@@261) $generated@@141)) (= ($generated@@159 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@159 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@141) (= (type $generated@@264) $generated@@141)) (= ($generated@@262 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@262 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@141) (= (type $generated@@267) $generated@@141)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@262 $generated@@266 $generated@@267)  (and (= ($generated@@235 $generated@@266) ($generated@@235 $generated@@267)) ($generated@@262 ($generated@@233 $generated@@266) ($generated@@233 $generated@@267)))))
 :pattern ( ($generated@@262 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@262 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@70)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@271) $generated@@70)) (= ($generated@@143 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@162) ($generated@@0 ($generated@@87 $generated@@270 $generated@@272))) ($generated@@252 $generated@@272 $generated@@271))
 :pattern ( ($generated@@87 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@143 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@70)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@276) $generated@@70)) (= ($generated@@143 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@162) ($generated@@0 ($generated@@87 $generated@@275 $generated@@277))) ($generated@@252 $generated@@277 $generated@@276))
 :pattern ( ($generated@@87 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@143 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@236 $generated@@278) $generated@@278)
 :pattern ( ($generated@@236 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@141) (= (type $generated@@284) $generated@@141)) (and ($generated@@232 $generated@@283) ($generated@@232 $generated@@284))) (= ($generated@@262 $generated@@283 $generated@@284) true))
 :pattern ( ($generated@@262 $generated@@283 $generated@@284) ($generated@@232 $generated@@283))
 :pattern ( ($generated@@262 $generated@@283 $generated@@284) ($generated@@232 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@141)
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@70) (= (type $generated@@289) $generated@@162)) (= (type $generated@@290) $generated@@141)) (= ($generated@@143 ($generated@@285 $generated@@289 $generated@@290) ($generated@@144 $generated@@288))  (and ($generated@@252 $generated@@289 $generated@@288) ($generated@@143 $generated@@290 ($generated@@144 $generated@@288)))))
 :pattern ( ($generated@@143 ($generated@@285 $generated@@289 $generated@@290) ($generated@@144 $generated@@288)))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) $generated@@70)) (= (type $generated@@294) $generated@@162)) (= (type $generated@@295) $generated@@162)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@248 $generated@@296)) (= ($generated@@80 ($generated@@251 $generated@@294 $generated@@295) ($generated@@153 $generated@@292 $generated@@293) $generated@@296)  (and ($generated@@291 $generated@@294 $generated@@292 $generated@@296) ($generated@@291 $generated@@295 $generated@@293 $generated@@296))))
 :pattern ( ($generated@@80 ($generated@@251 $generated@@294 $generated@@295) ($generated@@153 $generated@@292 $generated@@293) $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@141) (= ($generated@@152 $generated@@297) (= ($generated@@167 $generated@@297) $generated@@62)))
 :pattern ( ($generated@@152 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@141) (= ($generated@@232 $generated@@298) (= ($generated@@167 $generated@@298) $generated@@64)))
 :pattern ( ($generated@@232 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@141) (= ($generated@@265 $generated@@299) (= ($generated@@167 $generated@@299) $generated@@66)))
 :pattern ( ($generated@@265 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@141) ($generated@@152 $generated@@300)) (exists (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (and (and (= (type $generated@@301) $generated@@162) (= (type $generated@@302) $generated@@162)) (= $generated@@300 ($generated@@251 $generated@@301 $generated@@302)))
 :no-pattern (type $generated@@301)
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@152 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@141) ($generated@@265 $generated@@303)) (exists (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (and (and (= (type $generated@@304) $generated@@162) (= (type $generated@@305) $generated@@141)) (= $generated@@303 ($generated@@285 $generated@@304 $generated@@305)))
 :no-pattern (type $generated@@304)
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
)))
 :pattern ( ($generated@@265 $generated@@303))
)))
(assert  (and (and (forall (($generated@@310 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@310)) 18)) (forall (($generated@@311 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@308 $generated@@311))
))) (forall (($generated@@312 T@T) ) (! (= (type ($generated@@306 $generated@@312)) ($generated@@308 $generated@@312))
 :pattern ( ($generated@@306 $generated@@312))
))))
(assert (forall (($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@313)) 0)
 :pattern ( ($generated@@306 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@141) ($generated@@232 $generated@@314)) (= $generated@@314 $generated@@168))
 :pattern ( ($generated@@232 $generated@@314))
)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@315) $generated@@140) (= (type $generated@@316) $generated@@141)) (or ($generated@@142 ($generated@@279 $generated@@316)) (and (not (= 1 $generated@@138)) ($generated@@143 $generated@@316 ($generated@@144 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@279 ($generated@@11 ($generated@@232 ($generated@@279 $generated@@316)))))) (let (($generated@@317 ($generated@@279 ($generated@@233 ($generated@@279 $generated@@316)))))
(let (($generated@@318 ($generated@@236 ($generated ($generated@@234 $generated@@2 ($generated@@235 ($generated@@279 $generated@@316)))))))
 (=> (<= ($generated@@236 0) $generated@@318) ($generated@@142 $generated@@317))))) (= ($generated@@139 ($generated@@231 $generated@@315) ($generated@@279 $generated@@316)) (ite ($generated@@232 ($generated@@279 $generated@@316)) true (let (($generated@@319 ($generated@@279 ($generated@@233 ($generated@@279 $generated@@316)))))
(let (($generated@@320 ($generated@@236 ($generated ($generated@@234 $generated@@2 ($generated@@235 ($generated@@279 $generated@@316)))))))
 (and (<= ($generated@@236 0) $generated@@320) ($generated@@139 ($generated@@231 $generated@@315) $generated@@319))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@231 $generated@@315) ($generated@@279 $generated@@316)))
))))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@2) (= ($generated@@143 $generated@@321 $generated@@148) (<= ($generated@@236 0) ($generated $generated@@321))))
 :pattern ( ($generated@@143 $generated@@321 $generated@@148))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@162)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@70) (= (type $generated@@326) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@291 ($generated@@322 $generated@@324) $generated@@325 $generated@@326) ($generated@@80 $generated@@324 $generated@@325 $generated@@326)))
 :pattern ( ($generated@@291 ($generated@@322 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@329 T@T) ) (! (= (type ($generated@@328 $generated@@329)) ($generated@@82 $generated@@329 $generated@@2))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@85 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@82 $generated@@331 $generated@@2)) (and (= (= ($generated@@327 $generated@@330) 0) (= $generated@@330 ($generated@@328 $generated@@331))) (=> (not (= ($generated@@327 $generated@@330) 0)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) (< 0 ($generated ($generated@@87 $generated@@330 $generated@@332))))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@75)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@70) (and (= ($generated@@78 ($generated@@144 $generated@@335)) $generated@@65) (= ($generated@@333 ($generated@@144 $generated@@335)) $generated@@69)))
 :pattern ( ($generated@@144 $generated@@335))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@82 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@87 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@87 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert  (and (and (and (and (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (= ($generated@@1 ($generated@@356 $generated@@359 $generated@@360)) 20)) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@357 ($generated@@356 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@356 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@358 ($generated@@356 $generated@@363 $generated@@364)) $generated@@364)
 :pattern ( ($generated@@356 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@357 (type $generated@@365))))
(= (type ($generated@@354 $generated@@365)) ($generated@@82 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@365))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= (type ($generated@@355 $generated@@367 $generated@@368)) ($generated@@356 $generated@@367 $generated@@368))
 :pattern ( ($generated@@355 $generated@@367 $generated@@368))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@T) ) (! (let (($generated@@371 (type $generated@@369)))
 (not ($generated@@0 ($generated@@87 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369))))
 :pattern ( (let (($generated@@371 (type $generated@@369)))
($generated@@87 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369)))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@85 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@82 $generated@@373 $generated@@2)) (= ($generated@@171 $generated@@372) (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@373) (and (<= 0 ($generated ($generated@@87 $generated@@372 $generated@@374))) (<= ($generated ($generated@@87 $generated@@372 $generated@@374)) ($generated@@327 $generated@@372))))
 :pattern ( ($generated@@87 $generated@@372 $generated@@374))
)))))
 :pattern ( ($generated@@171 $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@162) ($generated@@252 $generated@@375 $generated@@148)) (and (= ($generated@@322 ($generated@@234 $generated@@2 $generated@@375)) $generated@@375) ($generated@@143 ($generated@@234 $generated@@2 $generated@@375) $generated@@148)))
 :pattern ( ($generated@@252 $generated@@375 $generated@@148))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@340 (type $generated@@376))))
(let (($generated@@378 ($generated@@339 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@338 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@337 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@87 ($generated@@336 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@336 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@340 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@82 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(let (($generated@@385 ($generated@@339 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@338 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@337 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@87 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@358 (type $generated@@387))))
(let (($generated@@389 ($generated@@357 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@356 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@355 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@87 ($generated@@354 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@354 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@358 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@82 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@358 (type $generated@@394))))
(let (($generated@@396 ($generated@@357 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@356 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@355 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@82 $generated@@162 $generated@@2)) (= (type $generated@@399) $generated@@70)) (= ($generated@@143 $generated@@398 ($generated@@170 $generated@@399)) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@162) (< 0 ($generated ($generated@@87 $generated@@398 $generated@@400)))) ($generated@@252 $generated@@400 $generated@@399))
 :pattern ( ($generated@@87 $generated@@398 $generated@@400))
))))
 :pattern ( ($generated@@143 $generated@@398 ($generated@@170 $generated@@399)))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@141) ($generated@@401 $generated@@402)) (or ($generated@@232 $generated@@402) ($generated@@265 $generated@@402)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@404) $generated@@70)) (= (type $generated@@405) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@403 ($generated@@268 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@162) ($generated@@0 ($generated@@87 $generated@@403 $generated@@406))) ($generated@@291 $generated@@406 $generated@@404 $generated@@405))
 :pattern ( ($generated@@87 $generated@@403 $generated@@406))
))))
 :pattern ( ($generated@@80 $generated@@403 ($generated@@268 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@408) $generated@@70)) (= (type $generated@@409) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@407 ($generated@@273 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@162) ($generated@@0 ($generated@@87 $generated@@407 $generated@@410))) ($generated@@291 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@87 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@80 $generated@@407 ($generated@@273 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(= ($generated ($generated@@87 ($generated@@328 $generated@@412) $generated@@411)) 0))
 :pattern ( (let (($generated@@412 (type $generated@@411)))
($generated@@87 ($generated@@328 $generated@@412) $generated@@411)))
)))
(assert  (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@415)) ($generated@@82 $generated@@162 $generated@@4))
 :pattern ( ($generated@@413 $generated@@415))
)) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@340 (type $generated@@416))))
(let (($generated@@418 ($generated@@339 (type $generated@@416))))
(= (type ($generated@@414 $generated@@416)) ($generated@@82 $generated@@418 $generated@@417))))
 :pattern ( ($generated@@414 $generated@@416))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@338 $generated@@162 $generated@@162)) (= (type $generated@@420) $generated@@162)) (= ($generated@@0 ($generated@@87 ($generated@@413 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@87 ($generated@@336 $generated@@419) ($generated@@160 ($generated@@234 $generated@@141 $generated@@420)))) (= ($generated@@87 ($generated@@414 $generated@@419) ($generated@@160 ($generated@@234 $generated@@141 $generated@@420))) ($generated@@161 ($generated@@234 $generated@@141 $generated@@420))))))
 :pattern ( ($generated@@87 ($generated@@413 $generated@@419) $generated@@420))
)))
(assert  (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@423)) ($generated@@82 $generated@@162 $generated@@4))
 :pattern ( ($generated@@421 $generated@@423))
)) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@358 (type $generated@@424))))
(let (($generated@@426 ($generated@@357 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424)) ($generated@@82 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@422 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@356 $generated@@162 $generated@@162)) (= (type $generated@@428) $generated@@162)) (= ($generated@@0 ($generated@@87 ($generated@@421 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@87 ($generated@@354 $generated@@427) ($generated@@160 ($generated@@234 $generated@@141 $generated@@428)))) (= ($generated@@87 ($generated@@422 $generated@@427) ($generated@@160 ($generated@@234 $generated@@141 $generated@@428))) ($generated@@161 ($generated@@234 $generated@@141 $generated@@428))))))
 :pattern ( ($generated@@87 ($generated@@421 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@339 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@338 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@87 ($generated@@380 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@87 ($generated@@336 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@87 ($generated@@414 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@87 ($generated@@336 $generated@@429) $generated@@433))
 :pattern ( ($generated@@87 ($generated@@414 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@87 ($generated@@380 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
(let (($generated@@437 ($generated@@357 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@356 $generated@@437 $generated@@436)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@434) $generated@@435)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) (and ($generated@@0 ($generated@@87 ($generated@@354 $generated@@434) $generated@@438)) (= $generated@@435 ($generated@@87 ($generated@@422 $generated@@434) $generated@@438))))
 :pattern ( ($generated@@87 ($generated@@354 $generated@@434) $generated@@438))
 :pattern ( ($generated@@87 ($generated@@422 $generated@@434) $generated@@438))
))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@70)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@338 $generated@@162 $generated@@162)) (= (type $generated@@443) $generated@@70)) (= (type $generated@@444) $generated@@70)) (= (type $generated@@445) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@336 $generated@@442) $generated@@446))) (and ($generated@@291 ($generated@@87 ($generated@@414 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@291 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@87 ($generated@@414 $generated@@442) $generated@@446))
 :pattern ( ($generated@@87 ($generated@@336 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@80 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@70)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@356 $generated@@162 $generated@@162)) (= (type $generated@@451) $generated@@70)) (= (type $generated@@452) $generated@@70)) (= (type $generated@@453) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@354 $generated@@450) $generated@@454))) (and ($generated@@291 ($generated@@87 ($generated@@422 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@291 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@87 ($generated@@422 $generated@@450) $generated@@454))
 :pattern ( ($generated@@87 ($generated@@354 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@80 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (= (type $generated@@455) $generated@@70) (= (type $generated@@456) $generated@@141)) ($generated@@143 $generated@@456 ($generated@@144 $generated@@455))) (or ($generated@@232 $generated@@456) ($generated@@265 $generated@@456)))
 :pattern ( ($generated@@265 $generated@@456) ($generated@@143 $generated@@456 ($generated@@144 $generated@@455)))
 :pattern ( ($generated@@232 $generated@@456) ($generated@@143 $generated@@456 ($generated@@144 $generated@@455)))
)))
(assert  (and (forall (($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@459)) $generated@@140)
 :pattern ( ($generated@@457 $generated@@459))
)) (= (type $generated@@458) $generated@@140)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@140) (= (type $generated@@461) $generated@@141)) (= ($generated@@139 $generated@@460 $generated@@461) ($generated@@139 $generated@@458 $generated@@461)))
 :pattern ( ($generated@@139 ($generated@@457 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@463 T@T) ) (! (= (type ($generated@@462 $generated@@463)) ($generated@@82 $generated@@463 $generated@@4))
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@358 (type $generated@@464))))
(let (($generated@@466 ($generated@@357 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@356 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@355 $generated@@466 $generated@@465)) (= ($generated@@354 $generated@@464) ($generated@@462 $generated@@466))))))
 :pattern ( ($generated@@354 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@358 (type $generated@@467))))
(let (($generated@@469 ($generated@@357 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@356 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@355 $generated@@469 $generated@@468)) (= ($generated@@391 $generated@@467) ($generated@@462 $generated@@468))))))
 :pattern ( ($generated@@391 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@358 (type $generated@@470))))
(let (($generated@@472 ($generated@@357 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@356 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@355 $generated@@472 $generated@@471)) (= ($generated@@421 $generated@@470) ($generated@@462 $generated@@162))))))
 :pattern ( ($generated@@421 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@340 (type $generated@@473))))
(let (($generated@@475 ($generated@@339 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@338 $generated@@475 $generated@@474)) (or (= $generated@@473 ($generated@@337 $generated@@475 $generated@@474)) (exists (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (and (and (= (type $generated@@476) $generated@@162) (= (type $generated@@477) $generated@@162)) ($generated@@0 ($generated@@87 ($generated@@413 $generated@@473) ($generated@@322 ($generated@@251 $generated@@476 $generated@@477)))))
 :no-pattern (type $generated@@476)
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@413 $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@358 (type $generated@@478))))
(let (($generated@@480 ($generated@@357 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@356 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@355 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@162) (= (type $generated@@482) $generated@@162)) ($generated@@0 ($generated@@87 ($generated@@421 $generated@@478) ($generated@@322 ($generated@@251 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@421 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@162) ($generated@@252 $generated@@483 $generated@@46)) (and (= ($generated@@322 ($generated@@234 $generated@@2 $generated@@483)) $generated@@483) ($generated@@143 ($generated@@234 $generated@@2 $generated@@483) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@483 $generated@@46))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@162) ($generated@@252 $generated@@484 $generated@@47)) (and (= ($generated@@322 ($generated@@234 $generated@@3 $generated@@484)) $generated@@484) ($generated@@143 ($generated@@234 $generated@@3 $generated@@484) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@484 $generated@@47))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@162) ($generated@@252 $generated@@485 $generated@@44)) (and (= ($generated@@322 ($generated@@234 $generated@@4 $generated@@485)) $generated@@485) ($generated@@143 ($generated@@234 $generated@@4 $generated@@485) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@485 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@486) 21))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@162) ($generated@@252 $generated@@487 $generated@@45)) (and (= ($generated@@322 ($generated@@234 $generated@@486 $generated@@487)) $generated@@487) ($generated@@143 ($generated@@234 $generated@@486 $generated@@487) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@487 $generated@@45))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@140) (= (type $generated@@489) $generated@@141)) (= ($generated@@139 ($generated@@231 $generated@@488) $generated@@489) ($generated@@139 $generated@@488 $generated@@489)))
 :pattern ( ($generated@@139 ($generated@@231 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@70) (= ($generated@@252 ($generated@@322 $generated@@490) $generated@@491) ($generated@@143 $generated@@490 $generated@@491)))
 :pattern ( ($generated@@252 ($generated@@322 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@85 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@82 $generated@@493 $generated@@2)) (<= 0 ($generated@@327 $generated@@492))))
 :pattern ( ($generated@@327 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@309 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@308 $generated@@495)) (<= 0 ($generated@@307 $generated@@494))))
 :pattern ( ($generated@@307 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@439 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@439 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@439 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@439 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@70) (= (type $generated@@505) $generated@@70)) (= ($generated@@78 ($generated@@439 $generated@@504 $generated@@505)) $generated@@58))
 :pattern ( ($generated@@439 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= ($generated@@506 ($generated@@447 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@447 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@70) (= (type $generated@@513) $generated@@70)) (= ($generated@@510 ($generated@@447 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@447 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@70) (= (type $generated@@515) $generated@@70)) (= ($generated@@78 ($generated@@447 $generated@@514 $generated@@515)) $generated@@59))
 :pattern ( ($generated@@447 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@162) (= (type $generated@@517) $generated@@162)) (= ($generated@@167 ($generated@@251 $generated@@516 $generated@@517)) $generated@@62))
 :pattern ( ($generated@@251 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@70)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@70) (= (type $generated@@521) $generated@@70)) (= ($generated@@518 ($generated@@153 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@153 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@70)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@70) (= (type $generated@@525) $generated@@70)) (= ($generated@@522 ($generated@@153 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@153 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@162) (= (type $generated@@527) $generated@@162)) (= ($generated@@160 ($generated@@251 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@251 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@162) (= (type $generated@@529) $generated@@162)) (= ($generated@@161 ($generated@@251 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@251 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@162) (= (type $generated@@531) $generated@@141)) (= ($generated@@167 ($generated@@285 $generated@@530 $generated@@531)) $generated@@66))
 :pattern ( ($generated@@285 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@162) (= (type $generated@@533) $generated@@141)) (= ($generated@@235 ($generated@@285 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@285 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@162) (= (type $generated@@535) $generated@@141)) (= ($generated@@233 ($generated@@285 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@285 $generated@@534 $generated@@535))
)))
(assert  (and (forall (($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@538))
)) (forall (($generated@@539 T@U) ($generated@@540 Int) ) (! (let (($generated@@541 ($generated@@309 (type $generated@@539))))
(= (type ($generated@@537 $generated@@539 $generated@@540)) $generated@@541))
 :pattern ( ($generated@@537 $generated@@539 $generated@@540))
))))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@308 $generated@@162)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@542 ($generated@@536 $generated@@543) $generated@@544) (forall (($generated@@545 Int) ) (!  (=> (and (<= 0 $generated@@545) (< $generated@@545 ($generated@@307 $generated@@542))) ($generated@@291 ($generated@@537 $generated@@542 $generated@@545) $generated@@543 $generated@@544))
 :pattern ( ($generated@@537 $generated@@542 $generated@@545))
))))
 :pattern ( ($generated@@80 $generated@@542 ($generated@@536 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@546 ($generated@@81 $generated@@547)) $generated@@547)
 :pattern ( ($generated@@81 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@70)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@70) (= ($generated@@548 ($generated@@268 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@268 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@70) (= ($generated@@78 ($generated@@268 $generated@@551)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@70)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@70) (= ($generated@@552 ($generated@@273 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@273 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@70) (= ($generated@@78 ($generated@@273 $generated@@555)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@70)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@70) (= ($generated@@556 ($generated@@170 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@170 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@559)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@70)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@70) (= ($generated@@560 ($generated@@536 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@536 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@70) (= ($generated@@78 ($generated@@536 $generated@@563)) $generated@@57))
 :pattern ( ($generated@@536 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@70)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@70) (= ($generated@@564 ($generated@@144 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@144 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
(= ($generated@@234 $generated@@568 ($generated@@322 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@322 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@338 $generated@@162 $generated@@162)) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) $generated@@70)) (= ($generated@@143 $generated@@569 ($generated@@439 $generated@@570 $generated@@571)) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@336 $generated@@569) $generated@@572))) (and ($generated@@252 ($generated@@87 ($generated@@414 $generated@@569) $generated@@572) $generated@@571) ($generated@@252 $generated@@572 $generated@@570)))
 :pattern ( ($generated@@87 ($generated@@414 $generated@@569) $generated@@572))
 :pattern ( ($generated@@87 ($generated@@336 $generated@@569) $generated@@572))
))))
 :pattern ( ($generated@@143 $generated@@569 ($generated@@439 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@356 $generated@@162 $generated@@162)) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) $generated@@70)) (= ($generated@@143 $generated@@573 ($generated@@447 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@354 $generated@@573) $generated@@576))) (and ($generated@@252 ($generated@@87 ($generated@@422 $generated@@573) $generated@@576) $generated@@575) ($generated@@252 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@87 ($generated@@422 $generated@@573) $generated@@576))
 :pattern ( ($generated@@87 ($generated@@354 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@143 $generated@@573 ($generated@@447 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@162) (= (type $generated@@580) $generated@@162)) (< ($generated@@577 $generated@@579) ($generated@@578 ($generated@@251 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@251 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@162) (= (type $generated@@582) $generated@@162)) (< ($generated@@577 $generated@@582) ($generated@@578 ($generated@@251 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@251 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@162) (= (type $generated@@584) $generated@@141)) (< ($generated@@577 $generated@@583) ($generated@@578 ($generated@@285 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@285 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@162) (= (type $generated@@586) $generated@@141)) (< ($generated@@578 $generated@@586) ($generated@@578 ($generated@@285 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@285 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@162) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) $generated@@70)) ($generated@@252 $generated@@587 ($generated@@439 $generated@@588 $generated@@589))) (and (= ($generated@@322 ($generated@@234 ($generated@@338 $generated@@162 $generated@@162) $generated@@587)) $generated@@587) ($generated@@143 ($generated@@234 ($generated@@338 $generated@@162 $generated@@162) $generated@@587) ($generated@@439 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@252 $generated@@587 ($generated@@439 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) $generated@@70)) ($generated@@252 $generated@@590 ($generated@@447 $generated@@591 $generated@@592))) (and (= ($generated@@322 ($generated@@234 ($generated@@356 $generated@@162 $generated@@162) $generated@@590)) $generated@@590) ($generated@@143 ($generated@@234 ($generated@@356 $generated@@162 $generated@@162) $generated@@590) ($generated@@447 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@252 $generated@@590 ($generated@@447 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@70) (= (type $generated@@594) $generated@@70)) (= (type $generated@@595) $generated@@162)) ($generated@@252 $generated@@595 ($generated@@153 $generated@@593 $generated@@594))) (and (= ($generated@@322 ($generated@@234 $generated@@141 $generated@@595)) $generated@@595) ($generated@@143 ($generated@@234 $generated@@141 $generated@@595) ($generated@@153 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@252 $generated@@595 ($generated@@153 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@141) (= (type $generated@@597) $generated@@70)) (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@248 $generated@@598) (and ($generated@@265 $generated@@596) ($generated@@80 $generated@@596 ($generated@@144 $generated@@597) $generated@@598)))) ($generated@@291 ($generated@@235 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@291 ($generated@@235 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
 (not ($generated@@0 ($generated@@87 ($generated@@462 $generated@@600) $generated@@599))))
 :pattern ( (let (($generated@@600 (type $generated@@599)))
($generated@@87 ($generated@@462 $generated@@600) $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@70) (= (type $generated@@602) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@601 $generated@@602)) $generated@@63) (= ($generated@@333 ($generated@@153 $generated@@601 $generated@@602)) $generated@@68)))
 :pattern ( ($generated@@153 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@141) (= ($generated@@577 ($generated@@322 $generated@@603)) ($generated@@578 $generated@@603)))
 :pattern ( ($generated@@577 ($generated@@322 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@162) ($generated@@252 $generated@@604 ($generated@@81 0))) (and (= ($generated@@322 ($generated@@234 $generated@@2 $generated@@604)) $generated@@604) ($generated@@143 ($generated@@234 ($generated@@82 $generated@@162 $generated@@4) $generated@@604) ($generated@@81 0))))
 :pattern ( ($generated@@252 $generated@@604 ($generated@@81 0)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@162) (= (type $generated@@606) $generated@@70)) ($generated@@252 $generated@@605 ($generated@@268 $generated@@606))) (and (= ($generated@@322 ($generated@@234 ($generated@@82 $generated@@162 $generated@@4) $generated@@605)) $generated@@605) ($generated@@143 ($generated@@234 ($generated@@82 $generated@@162 $generated@@4) $generated@@605) ($generated@@268 $generated@@606))))
 :pattern ( ($generated@@252 $generated@@605 ($generated@@268 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@162) (= (type $generated@@608) $generated@@70)) ($generated@@252 $generated@@607 ($generated@@273 $generated@@608))) (and (= ($generated@@322 ($generated@@234 ($generated@@82 $generated@@162 $generated@@4) $generated@@607)) $generated@@607) ($generated@@143 ($generated@@234 ($generated@@82 $generated@@162 $generated@@4) $generated@@607) ($generated@@273 $generated@@608))))
 :pattern ( ($generated@@252 $generated@@607 ($generated@@273 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@162) (= (type $generated@@610) $generated@@70)) ($generated@@252 $generated@@609 ($generated@@170 $generated@@610))) (and (= ($generated@@322 ($generated@@234 ($generated@@82 $generated@@162 $generated@@2) $generated@@609)) $generated@@609) ($generated@@143 ($generated@@234 ($generated@@82 $generated@@162 $generated@@2) $generated@@609) ($generated@@170 $generated@@610))))
 :pattern ( ($generated@@252 $generated@@609 ($generated@@170 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@162) (= (type $generated@@612) $generated@@70)) ($generated@@252 $generated@@611 ($generated@@536 $generated@@612))) (and (= ($generated@@322 ($generated@@234 ($generated@@308 $generated@@162) $generated@@611)) $generated@@611) ($generated@@143 ($generated@@234 ($generated@@308 $generated@@162) $generated@@611) ($generated@@536 $generated@@612))))
 :pattern ( ($generated@@252 $generated@@611 ($generated@@536 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@70) (= (type $generated@@614) $generated@@162)) ($generated@@252 $generated@@614 ($generated@@144 $generated@@613))) (and (= ($generated@@322 ($generated@@234 $generated@@141 $generated@@614)) $generated@@614) ($generated@@143 ($generated@@234 $generated@@141 $generated@@614) ($generated@@144 $generated@@613))))
 :pattern ( ($generated@@252 $generated@@614 ($generated@@144 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@141) (= (type $generated@@616) $generated@@70)) (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@248 $generated@@617) (and ($generated@@265 $generated@@615) ($generated@@80 $generated@@615 ($generated@@144 $generated@@616) $generated@@617)))) ($generated@@80 ($generated@@233 $generated@@615) ($generated@@144 $generated@@616) $generated@@617))
 :pattern ( ($generated@@80 ($generated@@233 $generated@@615) ($generated@@144 $generated@@616) $generated@@617))
)))
(assert (= ($generated@@78 $generated@@148) $generated@@61))
(assert (= ($generated@@333 $generated@@148) $generated@@67))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@618) ($generated@@82 $generated@@162 $generated@@2)) (= (type $generated@@619) $generated@@70)) (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@618 ($generated@@170 $generated@@619) $generated@@620) (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@162) (< 0 ($generated ($generated@@87 $generated@@618 $generated@@621)))) ($generated@@291 $generated@@621 $generated@@619 $generated@@620))
 :pattern ( ($generated@@87 $generated@@618 $generated@@621))
))))
 :pattern ( ($generated@@80 $generated@@618 ($generated@@170 $generated@@619) $generated@@620))
)))
(assert (= $generated@@168 ($generated@@279 $generated@@168)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@141) (= (type $generated@@623) $generated@@70)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@248 $generated@@624) (and ($generated@@152 $generated@@622) (exists (($generated@@625 T@U) ) (!  (and (= (type $generated@@625) $generated@@70) ($generated@@80 $generated@@622 ($generated@@153 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@80 $generated@@622 ($generated@@153 $generated@@623 $generated@@625) $generated@@624))
))))) ($generated@@291 ($generated@@160 $generated@@622) $generated@@623 $generated@@624))
 :pattern ( ($generated@@291 ($generated@@160 $generated@@622) $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@141) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@248 $generated@@628) (and ($generated@@152 $generated@@626) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@70) ($generated@@80 $generated@@626 ($generated@@153 $generated@@629 $generated@@627) $generated@@628))
 :pattern ( ($generated@@80 $generated@@626 ($generated@@153 $generated@@629 $generated@@627) $generated@@628))
))))) ($generated@@291 ($generated@@161 $generated@@626) $generated@@627 $generated@@628))
 :pattern ( ($generated@@291 ($generated@@161 $generated@@626) $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@162) (= (type $generated@@631) $generated@@162)) (= ($generated@@251 ($generated@@279 $generated@@630) ($generated@@279 $generated@@631)) ($generated@@279 ($generated@@251 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@251 ($generated@@279 $generated@@630) ($generated@@279 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@162) (= (type $generated@@633) $generated@@141)) (= ($generated@@285 ($generated@@279 $generated@@632) ($generated@@279 $generated@@633)) ($generated@@279 ($generated@@285 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@285 ($generated@@279 $generated@@632) ($generated@@279 $generated@@633)))
)))
(assert (forall (($generated@@634 Int) ) (! (= ($generated@@322 ($generated@@8 ($generated@@236 $generated@@634))) ($generated@@279 ($generated@@322 ($generated@@8 $generated@@634))))
 :pattern ( ($generated@@322 ($generated@@8 ($generated@@236 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ) (! (= ($generated@@322 ($generated@@279 $generated@@635)) ($generated@@279 ($generated@@322 $generated@@635)))
 :pattern ( ($generated@@322 ($generated@@279 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@309 (type $generated@@636))))
 (=> (and (= (type $generated@@636) ($generated@@308 $generated@@637)) (= ($generated@@307 $generated@@636) 0)) (= $generated@@636 ($generated@@306 $generated@@637))))
 :pattern ( ($generated@@307 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@639)))
 (=> (and (and (= (type $generated@@638) ($generated@@82 $generated@@641 $generated@@2)) (= (type $generated@@640) $generated@@2)) (<= 0 ($generated $generated@@640))) (= ($generated@@327 ($generated@@88 $generated@@638 $generated@@639 $generated@@640)) (+ (- ($generated@@327 $generated@@638) ($generated ($generated@@87 $generated@@638 $generated@@639))) ($generated $generated@@640)))))
 :pattern ( ($generated@@327 ($generated@@88 $generated@@638 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@643) $generated@@2)) ($generated@@80 $generated@@643 $generated@@46 $generated@@642))
 :pattern ( ($generated@@80 $generated@@643 $generated@@46 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@645) $generated@@3)) ($generated@@80 $generated@@645 $generated@@47 $generated@@644))
 :pattern ( ($generated@@80 $generated@@645 $generated@@47 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@647) $generated@@4)) ($generated@@80 $generated@@647 $generated@@44 $generated@@646))
 :pattern ( ($generated@@80 $generated@@647 $generated@@44 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@649) $generated@@486)) ($generated@@80 $generated@@649 $generated@@45 $generated@@648))
 :pattern ( ($generated@@80 $generated@@649 $generated@@45 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@651) $generated@@162)) ($generated@@80 $generated@@651 $generated@@48 $generated@@650))
 :pattern ( ($generated@@80 $generated@@651 $generated@@48 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@652) $generated@@70) (= (type $generated@@653) $generated@@162)) (= (type $generated@@654) $generated@@141)) (= (type $generated@@655) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@248 $generated@@655)) (= ($generated@@80 ($generated@@285 $generated@@653 $generated@@654) ($generated@@144 $generated@@652) $generated@@655)  (and ($generated@@291 $generated@@653 $generated@@652 $generated@@655) ($generated@@80 $generated@@654 ($generated@@144 $generated@@652) $generated@@655))))
 :pattern ( ($generated@@80 ($generated@@285 $generated@@653 $generated@@654) ($generated@@144 $generated@@652) $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@308 $generated@@162)) (= (type $generated@@657) $generated@@70)) (= ($generated@@143 $generated@@656 ($generated@@536 $generated@@657)) (forall (($generated@@658 Int) ) (!  (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@307 $generated@@656))) ($generated@@252 ($generated@@537 $generated@@656 $generated@@658) $generated@@657))
 :pattern ( ($generated@@537 $generated@@656 $generated@@658))
))))
 :pattern ( ($generated@@143 $generated@@656 ($generated@@536 $generated@@657)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 Int) ) (!  (=> (= (type $generated@@660) ($generated@@308 $generated@@162)) (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@307 $generated@@660))) (< ($generated@@578 ($generated@@234 $generated@@141 ($generated@@537 $generated@@660 $generated@@661))) ($generated@@659 $generated@@660))))
 :pattern ( ($generated@@578 ($generated@@234 $generated@@141 ($generated@@537 $generated@@660 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) ($generated@@338 $generated@@162 $generated@@162)) (= (type $generated@@663) $generated@@70)) (= (type $generated@@664) $generated@@70)) ($generated@@143 $generated@@662 ($generated@@439 $generated@@663 $generated@@664))) (and (and ($generated@@143 ($generated@@336 $generated@@662) ($generated@@268 $generated@@663)) ($generated@@143 ($generated@@380 $generated@@662) ($generated@@268 $generated@@664))) ($generated@@143 ($generated@@413 $generated@@662) ($generated@@268 ($generated@@153 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@143 $generated@@662 ($generated@@439 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) ($generated@@356 $generated@@162 $generated@@162)) (= (type $generated@@666) $generated@@70)) (= (type $generated@@667) $generated@@70)) ($generated@@143 $generated@@665 ($generated@@447 $generated@@666 $generated@@667))) (and (and ($generated@@143 ($generated@@354 $generated@@665) ($generated@@273 $generated@@666)) ($generated@@143 ($generated@@391 $generated@@665) ($generated@@273 $generated@@667))) ($generated@@143 ($generated@@421 $generated@@665) ($generated@@273 ($generated@@153 $generated@@666 $generated@@667)))))
 :pattern ( ($generated@@143 $generated@@665 ($generated@@447 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@2) ($generated@@143 $generated@@668 $generated@@46))
 :pattern ( ($generated@@143 $generated@@668 $generated@@46))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@3) ($generated@@143 $generated@@669 $generated@@47))
 :pattern ( ($generated@@143 $generated@@669 $generated@@47))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@4) ($generated@@143 $generated@@670 $generated@@44))
 :pattern ( ($generated@@143 $generated@@670 $generated@@44))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@486) ($generated@@143 $generated@@671 $generated@@45))
 :pattern ( ($generated@@143 $generated@@671 $generated@@45))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@162) ($generated@@143 $generated@@672 $generated@@48))
 :pattern ( ($generated@@143 $generated@@672 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 (T@U) Bool)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@673) $generated@@141) (= (type $generated@@674) $generated@@141)) (= (type $generated@@676) $generated@@141)) (= (type $generated@@677) $generated@@141)) (= (type $generated@@678) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@679) $generated@@141)) (= (type $generated@@682) $generated@@141)) (= (type $generated@@683) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@685) $generated@@141)) (= (type $generated@@686) $generated@@141)) (= (type $generated@@687) ($generated@@177 $generated@@83 $generated@@4))) (= (type $generated@@688) $generated@@83)) (= (type $generated@@689) $generated@@141)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@690  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@262 $generated@@673 $generated@@674))))
(let (($generated@@691  (=> (and (= $generated@@673 ($generated@@285 ($generated@@322 ($generated@@8 $generated@@675)) $generated@@676)) ($generated@@143 $generated@@676 ($generated@@144 $generated@@46))) (=> (and (and (and ($generated@@143 $generated@@677 ($generated@@144 $generated@@46)) ($generated@@80 $generated@@677 ($generated@@144 $generated@@46) $generated@@678)) (and (= $generated@@679 $generated@@676) ($generated@@143 $generated@@679 ($generated@@144 $generated@@46)))) (and (and (= $generated@@677 $generated@@679) (= $generated@@680 $generated@@675)) (and ($generated@@143 ($generated@@8 $generated@@680) $generated@@46) (= $generated@@681 $generated@@680)))) (and (=> (= (ControlFlow 0 6) (- 0 11)) (< ($generated@@578 $generated@@677) ($generated@@578 $generated@@673))) (=> (< ($generated@@578 $generated@@677) ($generated@@578 $generated@@673)) (=> (and ($generated@@143 $generated@@682 ($generated@@144 $generated@@148)) ($generated@@80 $generated@@682 ($generated@@144 $generated@@148) $generated@@678)) (and (=> (= (ControlFlow 0 6) (- 0 10)) (=> ($generated@@142 $generated@@677) (or ($generated@@139 ($generated@@231 $generated@@458) $generated@@677) (=> ($generated@@232 $generated@@677) ($generated@@0 ($generated@@279 ($generated@@11 true))))))) (=> (=> ($generated@@142 $generated@@677) (or ($generated@@139 ($generated@@231 $generated@@458) $generated@@677) (=> ($generated@@232 $generated@@677) ($generated@@0 ($generated@@279 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (=> ($generated@@142 $generated@@677) (or ($generated@@139 ($generated@@231 $generated@@458) $generated@@677) (=> (not ($generated@@232 $generated@@677)) (let (($generated@@692 ($generated ($generated@@234 $generated@@2 ($generated@@235 $generated@@677)))))
(<= ($generated@@236 0) $generated@@692)))))) (=> (=> ($generated@@142 $generated@@677) (or ($generated@@139 ($generated@@231 $generated@@458) $generated@@677) (=> (not ($generated@@232 $generated@@677)) (let (($generated@@693 ($generated ($generated@@234 $generated@@2 ($generated@@235 $generated@@677)))))
(<= ($generated@@236 0) $generated@@693))))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> ($generated@@142 $generated@@677) (or ($generated@@139 ($generated@@231 $generated@@458) $generated@@677) (=> (not ($generated@@232 $generated@@677)) (let (($generated@@694 ($generated@@233 $generated@@677)))
($generated@@139 ($generated@@231 ($generated@@231 $generated@@458)) $generated@@694)))))) (=> (=> ($generated@@142 $generated@@677) (or ($generated@@139 ($generated@@231 $generated@@458) $generated@@677) (=> (not ($generated@@232 $generated@@677)) (let (($generated@@695 ($generated@@233 $generated@@677)))
($generated@@139 ($generated@@231 ($generated@@231 $generated@@458)) $generated@@695))))) (=> (and (and (and ($generated@@248 $generated@@683) ($generated@@684 $generated@@683)) (and ($generated@@143 $generated@@685 ($generated@@144 $generated@@148)) ($generated@@80 $generated@@685 ($generated@@144 $generated@@148) $generated@@683))) (and (and ($generated@@401 $generated@@677) ($generated@@401 $generated@@685)) (and ($generated@@262 $generated@@677 $generated@@685) (= $generated@@678 $generated@@683)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@143 ($generated@@285 ($generated@@322 ($generated@@8 $generated@@681)) $generated@@685) ($generated@@144 $generated@@148))) (=> ($generated@@143 ($generated@@285 ($generated@@322 ($generated@@8 $generated@@681)) $generated@@685) ($generated@@144 $generated@@148)) (=> (= $generated@@686 ($generated@@285 ($generated@@322 ($generated@@8 $generated@@681)) $generated@@685)) (=> (and (= $generated@@674 $generated@@686) (= (ControlFlow 0 6) 3)) $generated@@690))))))))))))))))))
(let (($generated@@696  (=> (= $generated@@673 $generated@@168) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@143 $generated@@673 ($generated@@144 $generated@@148))) (=> ($generated@@143 $generated@@673 ($generated@@144 $generated@@148)) (=> (and (= $generated@@674 $generated@@673) (= (ControlFlow 0 4) 3)) $generated@@690))))))
(let (($generated@@697 true))
(let (($generated@@698  (=> (not (= $generated@@673 $generated@@168)) (and (=> (= (ControlFlow 0 12) 6) $generated@@691) (=> (= (ControlFlow 0 12) 1) $generated@@697)))))
(let (($generated@@699  (=> (= $generated@@687 ($generated@@176 $generated@@688 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 4) $generated@@696) (=> (= (ControlFlow 0 13) 12) $generated@@698)))))
(let (($generated@@700  (=> (and ($generated@@248 $generated@@678) ($generated@@684 $generated@@678)) (=> (and (and ($generated@@143 $generated@@673 ($generated@@144 $generated@@46)) ($generated@@80 $generated@@673 ($generated@@144 $generated@@46) $generated@@678)) ($generated@@401 $generated@@673)) (=> (and (and (and ($generated@@143 $generated@@689 ($generated@@144 $generated@@148)) ($generated@@80 $generated@@689 ($generated@@144 $generated@@148) $generated@@678)) (= 2 $generated@@138)) (and (and ($generated@@142 $generated@@673) (and ($generated@@139 ($generated@@231 $generated@@458) $generated@@673) (ite ($generated@@232 $generated@@673) true (let (($generated@@701 ($generated@@233 $generated@@673)))
(let (($generated@@702 ($generated ($generated@@234 $generated@@2 ($generated@@235 $generated@@673)))))
 (and (<= ($generated@@236 0) $generated@@702) ($generated@@139 ($generated@@231 $generated@@458) $generated@@701))))))) (= (ControlFlow 0 14) 13))) $generated@@699)))))
$generated@@700))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
