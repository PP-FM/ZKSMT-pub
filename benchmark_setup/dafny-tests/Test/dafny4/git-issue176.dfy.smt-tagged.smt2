(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 () Int)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 () Bool)
(declare-fun $generated@@258 () Bool)
(declare-fun $generated@@259 (T@U T@U T@U) T@U)
(declare-fun $generated@@260 (T@T T@T) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@263 (T@T T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) Bool)
(declare-fun $generated@@429 (T@T) T@U)
(declare-fun $generated@@453 () T@T)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@U Int) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@628 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@78 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (= (type $generated@@141) $generated@@67)))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@139) (or ($generated@@140 $generated@@142) (and (not (= 1 $generated@@137)) ($generated@@135 $generated@@142 $generated@@141)))) true)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@144 $generated@@145 $generated@@146)) $generated@@67)
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@67) (= (type $generated@@148) $generated@@67)) (= (type $generated@@149) $generated@@139)) ($generated@@135 $generated@@149 ($generated@@144 $generated@@147 $generated@@148))) ($generated@@143 $generated@@149))
 :pattern ( ($generated@@143 $generated@@149) ($generated@@135 $generated@@149 ($generated@@144 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@139) (= (type $generated@@157) $generated@@139)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@67)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@79 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@67)) ($generated@@135 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@135 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@80 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@70 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@80) (= (type $generated@@213) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@214) ($generated@@69 $generated@@4))) (= (type $generated@@216) $generated@@80)) (= (type $generated@@217) ($generated@@69 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@220) $generated@@139) ($generated@@135 $generated@@220 $generated@@141)) ($generated@@219 $generated@@220))
 :pattern ( ($generated@@219 $generated@@220) ($generated@@135 $generated@@220 $generated@@141))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@139)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@153)) (= (type $generated@@228) $generated@@153)) (= ($generated@@135 ($generated@@221 $generated@@227 $generated@@228) ($generated@@144 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@135 ($generated@@221 $generated@@227 $generated@@228) ($generated@@144 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@139) (= (type $generated@@230) $generated@@139)) (= ($generated@@150 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@150 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@139) (= (type $generated@@233) $generated@@139)) (= ($generated@@231 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@153 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@135 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@153) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@222 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@135 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@153 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@135 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@153) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@222 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@135 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@153)) (= (type $generated@@255) $generated@@153)) (= (type $generated@@256) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@250 $generated@@256)) (= ($generated@@77 ($generated@@221 $generated@@254 $generated@@255) ($generated@@144 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@254 $generated@@255) ($generated@@144 $generated@@252 $generated@@253) $generated@@256))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@266 $generated@@267)) 17)) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@263 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@263 $generated@@270 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@263 $generated@@270 $generated@@271))
))) (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(let (($generated@@276 (type $generated@@273)))
(= (type ($generated@@259 $generated@@272 $generated@@273 $generated@@274)) ($generated@@263 $generated@@276 $generated@@275))))
 :pattern ( ($generated@@259 $generated@@272 $generated@@273 $generated@@274))
))) (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (! (= (type ($generated@@260 $generated@@277 $generated@@278)) ($generated@@263 $generated@@277 $generated@@278))
 :pattern ( ($generated@@260 $generated@@277 $generated@@278))
))) (forall (($generated@@279 T@U) ) (! (= (type ($generated@@261 $generated@@279)) $generated@@153)
 :pattern ( ($generated@@261 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@264 (type $generated@@280))))
(= (type ($generated@@262 $generated@@280)) ($generated@@79 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@262 $generated@@280))
))))
(assert  (=> (<= 0 $generated@@137) (=> (or $generated@@257 (not (= 0 $generated@@137))) (= $generated@@258 (let (($generated@@282 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 0))) ($generated@@261 ($generated@@8 ($generated@@244 1)))))))
(forall (($generated@@283 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@84 ($generated@@262 $generated@@282) ($generated@@261 ($generated@@8 $generated@@283)))) (= $generated@@283 ($generated@@244 0))))
 :pattern ( ($generated@@84 ($generated@@262 $generated@@282) ($generated@@261 ($generated@@8 $generated@@283))))
)))))))
(assert  (=> (<= 0 $generated@@137) (=> (or $generated@@257 (not (= 0 $generated@@137))) (= $generated@@258 (let (($generated@@284 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 0))) ($generated@@261 ($generated@@8 ($generated@@244 1)))))))
(forall (($generated@@285 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@84 ($generated@@262 $generated@@284) ($generated@@261 ($generated@@8 $generated@@285)))) (= $generated@@285 ($generated@@244 0))))
 :pattern ( ($generated@@84 ($generated@@262 $generated@@284) ($generated@@261 ($generated@@8 $generated@@285))))
)))))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@71)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@139) (= ($generated@@143 $generated@@288) (= ($generated@@286 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@139) (= ($generated@@219 $generated@@289) (= ($generated@@286 $generated@@289) $generated@@63)))
 :pattern ( ($generated@@219 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@139) ($generated@@143 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@153) (= (type $generated@@292) $generated@@153)) (= $generated@@290 ($generated@@221 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@143 $generated@@290))
)))
(assert  (and (and (forall (($generated@@297 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@297)) 18)) (forall (($generated@@298 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
))) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@293 $generated@@299)) ($generated@@295 $generated@@299))
 :pattern ( ($generated@@293 $generated@@299))
))))
(assert (forall (($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@300)) 0)
 :pattern ( ($generated@@293 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@139)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@139) ($generated@@219 $generated@@303)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) ($generated@@263 $generated@@153 $generated@@153)) (= $generated@@303 ($generated@@301 $generated@@304)))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
)))
 :pattern ( ($generated@@219 $generated@@303))
)))
(assert  (and (forall (($generated@@308 T@T) ($generated@@309 T@U) ) (! (= (type ($generated@@306 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@306 $generated@@308 $generated@@309))
)) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@265 (type $generated@@310))))
(let (($generated@@312 ($generated@@264 (type $generated@@310))))
(= (type ($generated@@307 $generated@@310)) ($generated@@79 $generated@@312 $generated@@311))))
 :pattern ( ($generated@@307 $generated@@310))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (= (type $generated@@313) ($generated@@263 $generated@@153 $generated@@153)) (= (type $generated@@314) $generated@@153)) ($generated@@0 ($generated@@84 ($generated@@262 $generated@@313) $generated@@314))) (< ($generated@@305 ($generated@@306 $generated@@139 ($generated@@84 ($generated@@307 $generated@@313) $generated@@314))) ($generated@@305 ($generated@@301 $generated@@313))))
 :pattern ( ($generated@@84 ($generated@@262 $generated@@313) $generated@@314) ($generated@@301 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@67) (= (type $generated@@317) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@251 ($generated@@261 $generated@@315) $generated@@316 $generated@@317) ($generated@@77 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@251 ($generated@@261 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@319 $generated@@320)) ($generated@@79 $generated@@320 $generated@@2))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@82 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@79 $generated@@322 $generated@@2)) (and (= (= ($generated@@318 $generated@@321) 0) (= $generated@@321 ($generated@@319 $generated@@322))) (=> (not (= ($generated@@318 $generated@@321) 0)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) (< 0 ($generated ($generated@@84 $generated@@321 $generated@@323))))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@262 ($generated@@260 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@262 ($generated@@260 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@159 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@318 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@159 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@153) ($generated@@222 $generated@@348 $generated@@141)) (and (= ($generated@@261 ($generated@@306 $generated@@139 $generated@@348)) $generated@@348) ($generated@@135 ($generated@@306 $generated@@139 $generated@@348) $generated@@141)))
 :pattern ( ($generated@@222 $generated@@348 $generated@@141))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@265 (type $generated@@349))))
(let (($generated@@351 ($generated@@264 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@263 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@260 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@84 ($generated@@262 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@262 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@265 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@79 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@265 (type $generated@@356))))
(let (($generated@@358 ($generated@@264 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@263 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@260 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@84 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@331 (type $generated@@360))))
(let (($generated@@362 ($generated@@330 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@329 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@328 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@327 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@331 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@79 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@331 (type $generated@@367))))
(let (($generated@@369 ($generated@@330 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@329 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@328 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@84 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@79 $generated@@153 $generated@@2)) (= (type $generated@@372) $generated@@67)) (= ($generated@@135 $generated@@371 ($generated@@158 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@153) (< 0 ($generated ($generated@@84 $generated@@371 $generated@@373)))) ($generated@@222 $generated@@373 $generated@@372))
 :pattern ( ($generated@@84 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@135 $generated@@371 ($generated@@158 $generated@@372)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@67)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@263 $generated@@153 $generated@@153)) (= (type $generated@@378) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@250 $generated@@378)) (= ($generated@@77 ($generated@@301 $generated@@377) $generated@@141 $generated@@378) ($generated@@77 $generated@@377 ($generated@@374 $generated@@46 $generated@@46) $generated@@378)))
 :pattern ( ($generated@@77 ($generated@@301 $generated@@377) $generated@@141 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@153 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@234 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@153) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@251 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@234 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@79 $generated@@153 $generated@@4)) (= (type $generated@@384) $generated@@67)) (= (type $generated@@385) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@383 ($generated@@239 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@153) ($generated@@0 ($generated@@84 $generated@@383 $generated@@386))) ($generated@@251 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@84 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@77 $generated@@383 ($generated@@239 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@84 ($generated@@319 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@84 ($generated@@319 $generated@@388) $generated@@387)))
)))
(assert (forall (($generated@@390 T@U) ) (! (= (type ($generated@@389 $generated@@390)) ($generated@@79 $generated@@153 $generated@@4))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@263 $generated@@153 $generated@@153)) (= (type $generated@@392) $generated@@153)) (= ($generated@@0 ($generated@@84 ($generated@@389 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@84 ($generated@@262 $generated@@391) ($generated@@151 ($generated@@306 $generated@@139 $generated@@392)))) (= ($generated@@84 ($generated@@307 $generated@@391) ($generated@@151 ($generated@@306 $generated@@139 $generated@@392))) ($generated@@152 ($generated@@306 $generated@@139 $generated@@392))))))
 :pattern ( ($generated@@84 ($generated@@389 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@79 $generated@@153 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@331 (type $generated@@396))))
(let (($generated@@398 ($generated@@330 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@79 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@329 $generated@@153 $generated@@153)) (= (type $generated@@400) $generated@@153)) (= ($generated@@0 ($generated@@84 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@399) ($generated@@151 ($generated@@306 $generated@@139 $generated@@400)))) (= ($generated@@84 ($generated@@394 $generated@@399) ($generated@@151 ($generated@@306 $generated@@139 $generated@@400))) ($generated@@152 ($generated@@306 $generated@@139 $generated@@400))))))
 :pattern ( ($generated@@84 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@264 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@263 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@84 ($generated@@353 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@84 ($generated@@262 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@84 ($generated@@307 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@84 ($generated@@262 $generated@@401) $generated@@405))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@84 ($generated@@353 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@330 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@329 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@84 ($generated@@364 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@84 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@406) $generated@@410))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@263 $generated@@153 $generated@@153)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@411 ($generated@@374 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@153) ($generated@@0 ($generated@@84 ($generated@@262 $generated@@411) $generated@@415))) (and ($generated@@251 ($generated@@84 ($generated@@307 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@251 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@411) $generated@@415))
 :pattern ( ($generated@@84 ($generated@@262 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@77 $generated@@411 ($generated@@374 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@67)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@329 $generated@@153 $generated@@153)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) $generated@@67)) (= (type $generated@@422) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@153) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@419) $generated@@423))) (and ($generated@@251 ($generated@@84 ($generated@@394 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@251 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@419) $generated@@423))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@77 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@265 (type $generated@@425))))
(let (($generated@@428 ($generated@@264 (type $generated@@425))))
 (=> (and (and (= (type $generated@@425) ($generated@@263 $generated@@428 $generated@@427)) (= (type $generated@@426) ($generated@@263 $generated@@428 $generated@@427))) ($generated@@424 $generated@@425 $generated@@426)) (= $generated@@425 $generated@@426))))
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert  (=> (<= 0 $generated@@137) (=> (or $generated@@257 (not (= 0 $generated@@137))) true)))
(assert (forall (($generated@@430 T@T) ) (! (= (type ($generated@@429 $generated@@430)) ($generated@@79 $generated@@430 $generated@@4))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@331 (type $generated@@431))))
(let (($generated@@433 ($generated@@330 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@329 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@328 $generated@@433 $generated@@432)) (= ($generated@@327 $generated@@431) ($generated@@429 $generated@@433))))))
 :pattern ( ($generated@@327 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@331 (type $generated@@434))))
(let (($generated@@436 ($generated@@330 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@329 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@328 $generated@@436 $generated@@435)) (= ($generated@@364 $generated@@434) ($generated@@429 $generated@@435))))))
 :pattern ( ($generated@@364 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@331 (type $generated@@437))))
(let (($generated@@439 ($generated@@330 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@329 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@328 $generated@@439 $generated@@438)) (= ($generated@@393 $generated@@437) ($generated@@429 $generated@@153))))))
 :pattern ( ($generated@@393 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@265 (type $generated@@440))))
(let (($generated@@442 ($generated@@264 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@263 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@260 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@153) (= (type $generated@@444) $generated@@153)) ($generated@@0 ($generated@@84 ($generated@@389 $generated@@440) ($generated@@261 ($generated@@221 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@389 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@331 (type $generated@@445))))
(let (($generated@@447 ($generated@@330 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@329 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@328 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@153) (= (type $generated@@449) $generated@@153)) ($generated@@0 ($generated@@84 ($generated@@393 $generated@@445) ($generated@@261 ($generated@@221 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@393 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@153) ($generated@@222 $generated@@450 $generated@@46)) (and (= ($generated@@261 ($generated@@306 $generated@@2 $generated@@450)) $generated@@450) ($generated@@135 ($generated@@306 $generated@@2 $generated@@450) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@450 $generated@@46))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@153) ($generated@@222 $generated@@451 $generated@@47)) (and (= ($generated@@261 ($generated@@306 $generated@@3 $generated@@451)) $generated@@451) ($generated@@135 ($generated@@306 $generated@@3 $generated@@451) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@451 $generated@@47))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@153) ($generated@@222 $generated@@452 $generated@@44)) (and (= ($generated@@261 ($generated@@306 $generated@@4 $generated@@452)) $generated@@452) ($generated@@135 ($generated@@306 $generated@@4 $generated@@452) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@452 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@453) 20))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@153) ($generated@@222 $generated@@454 $generated@@45)) (and (= ($generated@@261 ($generated@@306 $generated@@453 $generated@@454)) $generated@@454) ($generated@@135 ($generated@@306 $generated@@453 $generated@@454) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@454 $generated@@45))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@222 ($generated@@261 $generated@@455) $generated@@456) ($generated@@135 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@222 ($generated@@261 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@82 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@79 $generated@@458 $generated@@2)) (<= 0 ($generated@@318 $generated@@457))))
 :pattern ( ($generated@@318 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@296 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@295 $generated@@460)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@374 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@374 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@374 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@374 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@75 ($generated@@374 $generated@@469 $generated@@470)) $generated@@58))
 :pattern ( ($generated@@374 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@416 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@416 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@416 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@416 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@75 ($generated@@416 $generated@@479 $generated@@480)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@153) (= (type $generated@@482) $generated@@153)) (= ($generated@@286 ($generated@@221 $generated@@481 $generated@@482)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@144 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@144 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@144 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@144 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@153) (= (type $generated@@492) $generated@@153)) (= ($generated@@151 ($generated@@221 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@221 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@153) (= (type $generated@@494) $generated@@153)) (= ($generated@@152 ($generated@@221 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@221 $generated@@493 $generated@@494))
)))
(assert  (and (forall (($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@497))
)) (forall (($generated@@498 T@U) ($generated@@499 Int) ) (! (let (($generated@@500 ($generated@@296 (type $generated@@498))))
(= (type ($generated@@496 $generated@@498 $generated@@499)) $generated@@500))
 :pattern ( ($generated@@496 $generated@@498 $generated@@499))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@295 $generated@@153)) (= (type $generated@@502) $generated@@67)) (= (type $generated@@503) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@501 ($generated@@495 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@294 $generated@@501))) ($generated@@251 ($generated@@496 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@496 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@77 $generated@@501 ($generated@@495 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) ($generated@@263 $generated@@153 $generated@@153))
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@139) (or ($generated@@140 $generated@@507) (and (not (= 1 $generated@@137)) ($generated@@135 $generated@@507 $generated@@141)))) (and (let (($generated@@508 (let (($generated@@509 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 0))) ($generated@@261 ($generated@@8 ($generated@@244 1)))))))
($generated@@246 ($generated@@301 $generated@@509)))))
($generated@@219 $generated@@508)) (= ($generated@@138 $generated@@507) (let (($generated@@510 (let (($generated@@511 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 0))) ($generated@@261 ($generated@@8 ($generated@@244 1)))))))
($generated@@246 ($generated@@301 $generated@@511)))))
(forall (($generated@@512 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@84 ($generated@@262 ($generated@@505 $generated@@510)) ($generated@@261 ($generated@@8 $generated@@512)))) (= $generated@@512 ($generated@@244 0))))
 :pattern ( ($generated@@84 ($generated@@262 ($generated@@505 $generated@@510)) ($generated@@261 ($generated@@8 $generated@@512))))
))))))
 :pattern ( ($generated@@138 $generated@@507))
))))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@513 ($generated@@78 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@78 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@67)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@515 ($generated@@234 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@234 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@518)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@239 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@239 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@522)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@158 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@158 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@75 ($generated@@158 $generated@@526)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@495 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@495 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@75 ($generated@@495 $generated@@530)) $generated@@57))
 :pattern ( ($generated@@495 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) ($generated@@263 $generated@@153 $generated@@153)) (= ($generated@@286 ($generated@@301 $generated@@531)) $generated@@63))
 :pattern ( ($generated@@301 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) ($generated@@263 $generated@@153 $generated@@153)) (= ($generated@@505 ($generated@@301 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@301 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@306 $generated@@534 ($generated@@261 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@261 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@263 $generated@@153 $generated@@153)) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@67)) (= ($generated@@135 $generated@@535 ($generated@@374 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@153) ($generated@@0 ($generated@@84 ($generated@@262 $generated@@535) $generated@@538))) (and ($generated@@222 ($generated@@84 ($generated@@307 $generated@@535) $generated@@538) $generated@@537) ($generated@@222 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@535) $generated@@538))
 :pattern ( ($generated@@84 ($generated@@262 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@135 $generated@@535 ($generated@@374 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@329 $generated@@153 $generated@@153)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) $generated@@67)) (= ($generated@@135 $generated@@539 ($generated@@416 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@153) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@539) $generated@@542))) (and ($generated@@222 ($generated@@84 ($generated@@394 $generated@@539) $generated@@542) $generated@@541) ($generated@@222 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@539) $generated@@542))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@135 $generated@@539 ($generated@@416 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@153) (= (type $generated@@545) $generated@@153)) (< ($generated@@543 $generated@@544) ($generated@@305 ($generated@@221 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@221 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@153) (= (type $generated@@547) $generated@@153)) (< ($generated@@543 $generated@@547) ($generated@@305 ($generated@@221 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@221 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
(let (($generated@@553 (type $generated@@549)))
 (=> (and (= (type $generated@@548) ($generated@@263 $generated@@553 $generated@@552)) (= (type $generated@@550) $generated@@553)) (and (=> (= $generated@@550 $generated@@549) (and ($generated@@0 ($generated@@84 ($generated@@262 ($generated@@259 $generated@@548 $generated@@549 $generated@@551)) $generated@@550)) (= ($generated@@84 ($generated@@307 ($generated@@259 $generated@@548 $generated@@549 $generated@@551)) $generated@@550) $generated@@551))) (=> (not (= $generated@@550 $generated@@549)) (and (= ($generated@@0 ($generated@@84 ($generated@@262 ($generated@@259 $generated@@548 $generated@@549 $generated@@551)) $generated@@550)) ($generated@@0 ($generated@@84 ($generated@@262 $generated@@548) $generated@@550))) (= ($generated@@84 ($generated@@307 ($generated@@259 $generated@@548 $generated@@549 $generated@@551)) $generated@@550) ($generated@@84 ($generated@@307 $generated@@548) $generated@@550))))))))
 :pattern ( ($generated@@84 ($generated@@262 ($generated@@259 $generated@@548 $generated@@549 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@84 ($generated@@307 ($generated@@259 $generated@@548 $generated@@549 $generated@@551)) $generated@@550))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@139) (= (type $generated@@555) $generated@@139)) true) (= ($generated@@231 $generated@@554 $generated@@555) ($generated@@424 ($generated@@505 $generated@@554) ($generated@@505 $generated@@555))))
 :pattern ( ($generated@@231 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@153) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@67)) ($generated@@222 $generated@@556 ($generated@@374 $generated@@557 $generated@@558))) (and (= ($generated@@261 ($generated@@306 ($generated@@263 $generated@@153 $generated@@153) $generated@@556)) $generated@@556) ($generated@@135 ($generated@@306 ($generated@@263 $generated@@153 $generated@@153) $generated@@556) ($generated@@374 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@222 $generated@@556 ($generated@@374 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@153) (= (type $generated@@560) $generated@@67)) (= (type $generated@@561) $generated@@67)) ($generated@@222 $generated@@559 ($generated@@416 $generated@@560 $generated@@561))) (and (= ($generated@@261 ($generated@@306 ($generated@@329 $generated@@153 $generated@@153) $generated@@559)) $generated@@559) ($generated@@135 ($generated@@306 ($generated@@329 $generated@@153 $generated@@153) $generated@@559) ($generated@@416 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@222 $generated@@559 ($generated@@416 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@67) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) $generated@@153)) ($generated@@222 $generated@@564 ($generated@@144 $generated@@562 $generated@@563))) (and (= ($generated@@261 ($generated@@306 $generated@@139 $generated@@564)) $generated@@564) ($generated@@135 ($generated@@306 $generated@@139 $generated@@564) ($generated@@144 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@222 $generated@@564 ($generated@@144 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@84 ($generated@@429 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@84 ($generated@@429 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@72)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@67) (= (type $generated@@570) $generated@@67)) (and (= ($generated@@75 ($generated@@144 $generated@@569 $generated@@570)) $generated@@62) (= ($generated@@567 ($generated@@144 $generated@@569 $generated@@570)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@265 (type $generated@@571))))
(let (($generated@@574 ($generated@@264 (type $generated@@571))))
 (=> (and (= (type $generated@@571) ($generated@@263 $generated@@574 $generated@@573)) (= (type $generated@@572) ($generated@@263 $generated@@574 $generated@@573))) (= ($generated@@424 $generated@@571 $generated@@572)  (and (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@574) (= ($generated@@0 ($generated@@84 ($generated@@262 $generated@@571) $generated@@575)) ($generated@@0 ($generated@@84 ($generated@@262 $generated@@572) $generated@@575))))
 :no-pattern (type $generated@@575)
 :no-pattern ($generated $generated@@575)
 :no-pattern ($generated@@0 $generated@@575)
)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@574) ($generated@@0 ($generated@@84 ($generated@@262 $generated@@571) $generated@@576))) (= ($generated@@84 ($generated@@307 $generated@@571) $generated@@576) ($generated@@84 ($generated@@307 $generated@@572) $generated@@576)))
 :no-pattern (type $generated@@576)
 :no-pattern ($generated $generated@@576)
 :no-pattern ($generated@@0 $generated@@576)
)))))))
 :pattern ( ($generated@@424 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@263 $generated@@153 $generated@@153)) (= (type $generated@@578) $generated@@139)) ($generated@@0 ($generated@@84 ($generated@@262 $generated@@577) ($generated@@261 $generated@@578)))) (< ($generated@@305 $generated@@578) ($generated@@305 ($generated@@301 $generated@@577))))
 :pattern ( ($generated@@84 ($generated@@262 $generated@@577) ($generated@@261 $generated@@578)) ($generated@@301 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@139) (= ($generated@@543 ($generated@@261 $generated@@579)) ($generated@@305 $generated@@579)))
 :pattern ( ($generated@@543 ($generated@@261 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@153) ($generated@@222 $generated@@580 ($generated@@78 0))) (and (= ($generated@@261 ($generated@@306 $generated@@2 $generated@@580)) $generated@@580) ($generated@@135 ($generated@@306 ($generated@@79 $generated@@153 $generated@@4) $generated@@580) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@580 ($generated@@78 0)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@153) (= (type $generated@@582) $generated@@67)) ($generated@@222 $generated@@581 ($generated@@234 $generated@@582))) (and (= ($generated@@261 ($generated@@306 ($generated@@79 $generated@@153 $generated@@4) $generated@@581)) $generated@@581) ($generated@@135 ($generated@@306 ($generated@@79 $generated@@153 $generated@@4) $generated@@581) ($generated@@234 $generated@@582))))
 :pattern ( ($generated@@222 $generated@@581 ($generated@@234 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@153) (= (type $generated@@584) $generated@@67)) ($generated@@222 $generated@@583 ($generated@@239 $generated@@584))) (and (= ($generated@@261 ($generated@@306 ($generated@@79 $generated@@153 $generated@@4) $generated@@583)) $generated@@583) ($generated@@135 ($generated@@306 ($generated@@79 $generated@@153 $generated@@4) $generated@@583) ($generated@@239 $generated@@584))))
 :pattern ( ($generated@@222 $generated@@583 ($generated@@239 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@153) (= (type $generated@@586) $generated@@67)) ($generated@@222 $generated@@585 ($generated@@158 $generated@@586))) (and (= ($generated@@261 ($generated@@306 ($generated@@79 $generated@@153 $generated@@2) $generated@@585)) $generated@@585) ($generated@@135 ($generated@@306 ($generated@@79 $generated@@153 $generated@@2) $generated@@585) ($generated@@158 $generated@@586))))
 :pattern ( ($generated@@222 $generated@@585 ($generated@@158 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@153) (= (type $generated@@588) $generated@@67)) ($generated@@222 $generated@@587 ($generated@@495 $generated@@588))) (and (= ($generated@@261 ($generated@@306 ($generated@@295 $generated@@153) $generated@@587)) $generated@@587) ($generated@@135 ($generated@@306 ($generated@@295 $generated@@153) $generated@@587) ($generated@@495 $generated@@588))))
 :pattern ( ($generated@@222 $generated@@587 ($generated@@495 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) ($generated@@263 $generated@@153 $generated@@153)) (= ($generated@@135 ($generated@@301 $generated@@589) $generated@@141) ($generated@@135 $generated@@589 ($generated@@374 $generated@@46 $generated@@46))))
 :pattern ( ($generated@@135 ($generated@@301 $generated@@589) $generated@@141))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@139) (= (type $generated@@591) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@591) (and ($generated@@219 $generated@@590) ($generated@@77 $generated@@590 $generated@@141 $generated@@591)))) ($generated@@77 ($generated@@505 $generated@@590) ($generated@@374 $generated@@46 $generated@@46) $generated@@591))
 :pattern ( ($generated@@77 ($generated@@505 $generated@@590) ($generated@@374 $generated@@46 $generated@@46) $generated@@591))
)))
(assert (= ($generated@@75 $generated@@141) $generated@@64))
(assert (= ($generated@@567 $generated@@141) $generated@@66))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@79 $generated@@153 $generated@@2)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@592 ($generated@@158 $generated@@593) $generated@@594) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@153) (< 0 ($generated ($generated@@84 $generated@@592 $generated@@595)))) ($generated@@251 $generated@@595 $generated@@593 $generated@@594))
 :pattern ( ($generated@@84 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@77 $generated@@592 ($generated@@158 $generated@@593) $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@139) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@598) (and ($generated@@143 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@67) ($generated@@77 $generated@@596 ($generated@@144 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@77 $generated@@596 ($generated@@144 $generated@@597 $generated@@599) $generated@@598))
))))) ($generated@@251 ($generated@@151 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@251 ($generated@@151 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@139) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@602) (and ($generated@@143 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@77 $generated@@600 ($generated@@144 $generated@@603 $generated@@601) $generated@@602))
 :pattern ( ($generated@@77 $generated@@600 ($generated@@144 $generated@@603 $generated@@601) $generated@@602))
))))) ($generated@@251 ($generated@@152 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@251 ($generated@@152 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@153) (= (type $generated@@605) $generated@@153)) (= ($generated@@221 ($generated@@246 $generated@@604) ($generated@@246 $generated@@605)) ($generated@@246 ($generated@@221 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@221 ($generated@@246 $generated@@604) ($generated@@246 $generated@@605)))
)))
(assert (forall (($generated@@606 Int) ) (! (= ($generated@@261 ($generated@@8 ($generated@@244 $generated@@606))) ($generated@@246 ($generated@@261 ($generated@@8 $generated@@606))))
 :pattern ( ($generated@@261 ($generated@@8 ($generated@@244 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) ($generated@@263 $generated@@153 $generated@@153)) (= ($generated@@301 ($generated@@246 $generated@@607)) ($generated@@246 ($generated@@301 $generated@@607))))
 :pattern ( ($generated@@301 ($generated@@246 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@261 ($generated@@246 $generated@@608)) ($generated@@246 ($generated@@261 $generated@@608)))
 :pattern ( ($generated@@261 ($generated@@246 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@296 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@295 $generated@@610)) (= ($generated@@294 $generated@@609) 0)) (= $generated@@609 ($generated@@293 $generated@@610))))
 :pattern ( ($generated@@294 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@79 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@318 ($generated@@85 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@318 $generated@@611) ($generated ($generated@@84 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@318 ($generated@@85 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@616) $generated@@2)) ($generated@@77 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@77 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@618) $generated@@3)) ($generated@@77 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@77 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@620) $generated@@4)) ($generated@@77 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@77 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@622) $generated@@453)) ($generated@@77 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@77 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@624) $generated@@153)) ($generated@@77 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@77 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@295 $generated@@153)) (= (type $generated@@626) $generated@@67)) (= ($generated@@135 $generated@@625 ($generated@@495 $generated@@626)) (forall (($generated@@627 Int) ) (!  (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@294 $generated@@625))) ($generated@@222 ($generated@@496 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@496 $generated@@625 $generated@@627))
))))
 :pattern ( ($generated@@135 $generated@@625 ($generated@@495 $generated@@626)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) ($generated@@295 $generated@@153)) (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@294 $generated@@629))) (< ($generated@@305 ($generated@@306 $generated@@139 ($generated@@496 $generated@@629 $generated@@630))) ($generated@@628 $generated@@629))))
 :pattern ( ($generated@@305 ($generated@@306 $generated@@139 ($generated@@496 $generated@@629 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@263 $generated@@153 $generated@@153)) (= (type $generated@@632) $generated@@67)) (= (type $generated@@633) $generated@@67)) ($generated@@135 $generated@@631 ($generated@@374 $generated@@632 $generated@@633))) (and (and ($generated@@135 ($generated@@262 $generated@@631) ($generated@@234 $generated@@632)) ($generated@@135 ($generated@@353 $generated@@631) ($generated@@234 $generated@@633))) ($generated@@135 ($generated@@389 $generated@@631) ($generated@@234 ($generated@@144 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@135 $generated@@631 ($generated@@374 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@329 $generated@@153 $generated@@153)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@135 $generated@@634 ($generated@@416 $generated@@635 $generated@@636))) (and (and ($generated@@135 ($generated@@327 $generated@@634) ($generated@@239 $generated@@635)) ($generated@@135 ($generated@@364 $generated@@634) ($generated@@239 $generated@@636))) ($generated@@135 ($generated@@393 $generated@@634) ($generated@@239 ($generated@@144 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@135 $generated@@634 ($generated@@416 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@2) ($generated@@135 $generated@@637 $generated@@46))
 :pattern ( ($generated@@135 $generated@@637 $generated@@46))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@3) ($generated@@135 $generated@@638 $generated@@47))
 :pattern ( ($generated@@135 $generated@@638 $generated@@47))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@4) ($generated@@135 $generated@@639 $generated@@44))
 :pattern ( ($generated@@135 $generated@@639 $generated@@44))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@453) ($generated@@135 $generated@@640 $generated@@45))
 :pattern ( ($generated@@135 $generated@@640 $generated@@45))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@153) ($generated@@135 $generated@@641 $generated@@48))
 :pattern ( ($generated@@135 $generated@@641 $generated@@48))
)))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@139) (or ($generated@@140 ($generated@@246 $generated@@642)) (and (not (= 1 $generated@@137)) ($generated@@135 $generated@@642 $generated@@141)))) (and (let (($generated@@643 (let (($generated@@644 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 0))) ($generated@@261 ($generated@@8 ($generated@@244 1)))))))
($generated@@246 ($generated@@301 $generated@@644)))))
($generated@@219 $generated@@643)) (= ($generated@@138 ($generated@@246 $generated@@642)) (let (($generated@@645 (let (($generated@@646 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 0))) ($generated@@261 ($generated@@8 ($generated@@244 1)))))))
($generated@@246 ($generated@@301 $generated@@646)))))
(forall (($generated@@647 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@84 ($generated@@262 ($generated@@505 $generated@@645)) ($generated@@261 ($generated@@8 $generated@@647)))) (= $generated@@647 ($generated@@244 0))))
 :pattern ( ($generated@@84 ($generated@@262 ($generated@@505 $generated@@645)) ($generated@@261 ($generated@@8 $generated@@647))))
))))))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@246 $generated@@642)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@648) ($generated@@165 $generated@@80 $generated@@4)) (= (type $generated@@649) $generated@@80)) (= (type $generated@@650) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@651) $generated@@139)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@653  (=> (= $generated@@648 ($generated@@164 $generated@@649 $generated@@650 $generated@@60 false)) (=> (and $generated@@257 $generated@@257) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> $generated@@257 (or ($generated@@0 ($generated@@246 ($generated@@11 $generated@@258))) (let (($generated@@654 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 0))) ($generated@@261 ($generated@@8 ($generated@@244 1)))))))
(forall (($generated@@655 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@84 ($generated@@262 $generated@@654) ($generated@@261 ($generated@@8 $generated@@655)))) (= $generated@@655 ($generated@@244 0))))
 :pattern ( ($generated@@84 ($generated@@262 $generated@@654) ($generated@@261 ($generated@@8 $generated@@655))))
)))))) (=> (and (and (and ($generated@@0 ($generated@@246 ($generated@@11 $generated@@258))) (= $generated@@651 ($generated@@246 ($generated@@301 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 2))) ($generated@@261 ($generated@@8 ($generated@@244 3))))))))) (and ($generated@@77 $generated@@651 $generated@@141 $generated@@650) ($generated@@140 ($generated@@246 ($generated@@301 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 2))) ($generated@@261 ($generated@@8 ($generated@@244 3)))))))))) (and (and ($generated@@140 ($generated@@246 ($generated@@301 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 2))) ($generated@@261 ($generated@@8 ($generated@@244 3)))))))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@140 ($generated@@246 ($generated@@301 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 2))) ($generated@@261 ($generated@@8 ($generated@@244 3)))))))))) (or ($generated@@0 ($generated@@246 ($generated@@11 ($generated@@138 ($generated@@246 ($generated@@301 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 2))) ($generated@@261 ($generated@@8 ($generated@@244 3))))))))))) (let (($generated@@656 (let (($generated@@657 ($generated@@246 ($generated@@259 ($generated@@260 $generated@@153 $generated@@153) ($generated@@261 ($generated@@8 ($generated@@244 0))) ($generated@@261 ($generated@@8 ($generated@@244 1)))))))
($generated@@246 ($generated@@301 $generated@@657)))))
(forall (($generated@@658 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@84 ($generated@@262 ($generated@@505 $generated@@656)) ($generated@@261 ($generated@@8 $generated@@658)))) (= $generated@@658 ($generated@@244 0))))
 :pattern ( ($generated@@84 ($generated@@262 ($generated@@505 $generated@@656)) ($generated@@261 ($generated@@8 $generated@@658))))
))))))))))
(let (($generated@@659  (=> (and (and ($generated@@250 $generated@@650) ($generated@@652 $generated@@650)) (and (= 2 $generated@@137) (= (ControlFlow 0 4) 2))) $generated@@653)))
$generated@@659)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
