(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (Int) Int)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@281 (T@U T@U) T@U)
(declare-fun $generated@@287 (T@U T@U T@U) Bool)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@T T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 () T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@536 (T@U Int) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@666 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@142 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@142 $generated@@143))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@138) (= (type $generated@@145) $generated@@139)) (or ($generated@@140 $generated@@145) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@145 ($generated@@142 $generated@@46))))) true)
 :pattern ( ($generated@@137 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@141 $generated@@146 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@146 ($generated@@79 0)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@139)) ($generated@@141 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@141 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@139) (= (type $generated@@161) $generated@@139)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@164))
)) (= (type $generated@@163) $generated@@139)))
(assert (= ($generated@@162 $generated@@163) $generated@@63))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@68)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@169) $generated@@68)) ($generated@@141 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@141 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 17)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@71 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@81) (= (type $generated@@220) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@221) ($generated@@70 $generated@@4))) (= (type $generated@@223) $generated@@81)) (= (type $generated@@224) ($generated@@70 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@71 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@81) (= (type $generated@@232) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@233) ($generated@@70 $generated@@4))) (= (type $generated@@235) $generated@@81)) (= (type $generated@@236) ($generated@@70 $generated@@237))) (= ($generated@@0 ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (= (type $generated@@239) $generated@@68) (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@238 $generated@@240)) ($generated@@78 $generated@@163 ($generated@@142 $generated@@239) $generated@@240))
 :pattern ( ($generated@@78 $generated@@163 ($generated@@142 $generated@@239) $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@139)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@68) (= (type $generated@@246) $generated@@68)) (= (type $generated@@247) $generated@@157)) (= (type $generated@@248) $generated@@157)) (= ($generated@@141 ($generated@@241 $generated@@247 $generated@@248) ($generated@@148 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@141 ($generated@@241 $generated@@247 $generated@@248) ($generated@@148 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@68) ($generated@@141 $generated@@163 ($generated@@142 $generated@@249)))
 :pattern ( ($generated@@141 $generated@@163 ($generated@@142 $generated@@249)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@139) (= (type $generated@@251) $generated@@139)) (= ($generated@@154 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@154 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@139) (= (type $generated@@254) $generated@@139)) (= ($generated@@252 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@252 $generated@@253 $generated@@254))
)))
(assert  (and (forall (($generated@@258 T@U) ) (! (= (type ($generated@@256 $generated@@258)) $generated@@157)
 :pattern ( ($generated@@256 $generated@@258))
)) (forall (($generated@@259 T@U) ) (! (= (type ($generated@@257 $generated@@259)) $generated@@139)
 :pattern ( ($generated@@257 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@139) (= (type $generated@@261) $generated@@139)) (and ($generated@@255 $generated@@260) ($generated@@255 $generated@@261))) (= ($generated@@252 $generated@@260 $generated@@261)  (and (= ($generated@@256 $generated@@260) ($generated@@256 $generated@@261)) ($generated@@252 ($generated@@257 $generated@@260) ($generated@@257 $generated@@261)))))
 :pattern ( ($generated@@252 $generated@@260 $generated@@261) ($generated@@255 $generated@@260))
 :pattern ( ($generated@@252 $generated@@260 $generated@@261) ($generated@@255 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@265) $generated@@68)) (= ($generated@@141 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@157) ($generated@@0 ($generated@@85 $generated@@264 $generated@@266))) ($generated@@242 $generated@@266 $generated@@265))
 :pattern ( ($generated@@85 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@141 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@68)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@270) $generated@@68)) (= ($generated@@141 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@157) ($generated@@0 ($generated@@85 $generated@@269 $generated@@271))) ($generated@@242 $generated@@271 $generated@@270))
 :pattern ( ($generated@@85 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@141 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 Int) ) (! (= ($generated@@272 $generated@@273) $generated@@273)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@274 $generated@@277) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@139) (= (type $generated@@280) $generated@@139)) (and ($generated@@278 $generated@@279) ($generated@@278 $generated@@280))) (= ($generated@@252 $generated@@279 $generated@@280) true))
 :pattern ( ($generated@@252 $generated@@279 $generated@@280) ($generated@@278 $generated@@279))
 :pattern ( ($generated@@252 $generated@@279 $generated@@280) ($generated@@278 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! (= (type ($generated@@281 $generated@@282 $generated@@283)) $generated@@139)
 :pattern ( ($generated@@281 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@284) $generated@@68) (= (type $generated@@285) $generated@@157)) (= (type $generated@@286) $generated@@139)) (= ($generated@@141 ($generated@@281 $generated@@285 $generated@@286) ($generated@@142 $generated@@284))  (and ($generated@@242 $generated@@285 $generated@@284) ($generated@@141 $generated@@286 ($generated@@142 $generated@@284)))))
 :pattern ( ($generated@@141 ($generated@@281 $generated@@285 $generated@@286) ($generated@@142 $generated@@284)))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) $generated@@68) (= (type $generated@@289) $generated@@68)) (= (type $generated@@290) $generated@@157)) (= (type $generated@@291) $generated@@157)) (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@238 $generated@@292)) (= ($generated@@78 ($generated@@241 $generated@@290 $generated@@291) ($generated@@148 $generated@@288 $generated@@289) $generated@@292)  (and ($generated@@287 $generated@@290 $generated@@288 $generated@@292) ($generated@@287 $generated@@291 $generated@@289 $generated@@292))))
 :pattern ( ($generated@@78 ($generated@@241 $generated@@290 $generated@@291) ($generated@@148 $generated@@288 $generated@@289) $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@139) (= ($generated@@147 $generated@@293) (= ($generated@@162 $generated@@293) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@139) (= ($generated@@278 $generated@@294) (= ($generated@@162 $generated@@294) $generated@@63)))
 :pattern ( ($generated@@278 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@139) (= ($generated@@255 $generated@@295) (= ($generated@@162 $generated@@295) $generated@@65)))
 :pattern ( ($generated@@255 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@139) ($generated@@147 $generated@@296)) (exists (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (and (and (= (type $generated@@297) $generated@@157) (= (type $generated@@298) $generated@@157)) (= $generated@@296 ($generated@@241 $generated@@297 $generated@@298)))
 :no-pattern (type $generated@@297)
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
)))
 :pattern ( ($generated@@147 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@139) ($generated@@255 $generated@@299)) (exists (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (and (and (= (type $generated@@300) $generated@@157) (= (type $generated@@301) $generated@@139)) (= $generated@@299 ($generated@@281 $generated@@300 $generated@@301)))
 :no-pattern (type $generated@@300)
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
)))
 :pattern ( ($generated@@255 $generated@@299))
)))
(assert  (and (and (forall (($generated@@306 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@306)) 18)) (forall (($generated@@307 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@304 $generated@@307))
))) (forall (($generated@@308 T@T) ) (! (= (type ($generated@@302 $generated@@308)) ($generated@@304 $generated@@308))
 :pattern ( ($generated@@302 $generated@@308))
))))
(assert (forall (($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@309)) 0)
 :pattern ( ($generated@@302 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@139) ($generated@@278 $generated@@310)) (= $generated@@310 $generated@@163))
 :pattern ( ($generated@@278 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@157)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@68) (= (type $generated@@315) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@287 ($generated@@311 $generated@@313) $generated@@314 $generated@@315) ($generated@@78 $generated@@313 $generated@@314 $generated@@315)))
 :pattern ( ($generated@@287 ($generated@@311 $generated@@313) $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@80 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@83 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@80 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@85 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@73)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@68) (and (= ($generated@@76 ($generated@@142 $generated@@324)) $generated@@64) (= ($generated@@322 ($generated@@142 $generated@@324)) $generated@@67)))
 :pattern ( ($generated@@142 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@80 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 20)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@80 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@83 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@80 $generated@@362 $generated@@2)) (= ($generated@@166 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@85 $generated@@361 $generated@@363))) (<= ($generated ($generated@@85 $generated@@361 $generated@@363)) ($generated@@316 $generated@@361))))
 :pattern ( ($generated@@85 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@166 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(let (($generated@@366 ($generated@@328 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@327 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@326 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@325 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@329 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@329 (type $generated@@371))))
(let (($generated@@373 ($generated@@328 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@327 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@326 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@347 (type $generated@@375))))
(let (($generated@@377 ($generated@@346 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@345 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@344 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@343 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@347 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@80 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@347 (type $generated@@382))))
(let (($generated@@384 ($generated@@346 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@345 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@344 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@387) $generated@@68)) (= ($generated@@141 $generated@@386 ($generated@@165 $generated@@387)) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@386 $generated@@388)))) ($generated@@242 $generated@@388 $generated@@387))
 :pattern ( ($generated@@85 $generated@@386 $generated@@388))
))))
 :pattern ( ($generated@@141 $generated@@386 ($generated@@165 $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) $generated@@138)
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@T) ($generated@@393 T@U) ) (! (= (type ($generated@@390 $generated@@392 $generated@@393)) $generated@@392)
 :pattern ( ($generated@@390 $generated@@392 $generated@@393))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@394) $generated@@138) (= (type $generated@@395) $generated@@139)) (or ($generated@@140 $generated@@395) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@395 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@278 $generated@@395)) (let (($generated@@396 ($generated@@257 $generated@@395)))
(let (($generated@@397 ($generated ($generated@@390 $generated@@2 ($generated@@256 $generated@@395)))))
 (=> (not ($generated@@278 $generated@@396)) (let (($generated@@398 ($generated ($generated@@390 $generated@@2 ($generated@@256 $generated@@396)))))
 (=> (<= $generated@@397 $generated@@398) ($generated@@140 $generated@@396))))))) (= ($generated@@137 ($generated@@389 $generated@@394) $generated@@395) (ite ($generated@@278 $generated@@395) true (let (($generated@@399 ($generated@@257 $generated@@395)))
(let (($generated@@400 ($generated ($generated@@390 $generated@@2 ($generated@@256 $generated@@395)))))
(ite ($generated@@278 $generated@@399) true (let (($generated@@401 ($generated ($generated@@390 $generated@@2 ($generated@@256 $generated@@399)))))
 (and (<= $generated@@400 $generated@@401) ($generated@@137 $generated@@394 $generated@@399))))))))))
 :pattern ( ($generated@@137 ($generated@@389 $generated@@394) $generated@@395))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@403) $generated@@68)) (= (type $generated@@404) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@402 ($generated@@262 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@157) ($generated@@0 ($generated@@85 $generated@@402 $generated@@405))) ($generated@@287 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@85 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@78 $generated@@402 ($generated@@262 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@407) $generated@@68)) (= (type $generated@@408) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@406 ($generated@@267 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@85 $generated@@406 $generated@@409))) ($generated@@287 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@85 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@78 $generated@@406 ($generated@@267 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@85 ($generated@@317 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@85 ($generated@@317 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@329 (type $generated@@415))))
(let (($generated@@417 ($generated@@328 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@80 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@327 $generated@@157 $generated@@157)) (= (type $generated@@419) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@418) ($generated@@155 ($generated@@390 $generated@@139 $generated@@419)))) (= ($generated@@85 ($generated@@413 $generated@@418) ($generated@@155 ($generated@@390 $generated@@139 $generated@@419))) ($generated@@156 ($generated@@390 $generated@@139 $generated@@419))))))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@347 (type $generated@@423))))
(let (($generated@@425 ($generated@@346 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@80 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@345 $generated@@157 $generated@@157)) (= (type $generated@@427) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@426) ($generated@@155 ($generated@@390 $generated@@139 $generated@@427)))) (= ($generated@@85 ($generated@@421 $generated@@426) ($generated@@155 ($generated@@390 $generated@@139 $generated@@427))) ($generated@@156 ($generated@@390 $generated@@139 $generated@@427))))))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@328 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@327 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@85 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@346 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@345 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@85 ($generated@@379 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@85 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@433) $generated@@437))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@68)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@327 $generated@@157 $generated@@157)) (= (type $generated@@442) $generated@@68)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@441) $generated@@445))) (and ($generated@@287 ($generated@@85 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@287 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@345 $generated@@157 $generated@@157)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) $generated@@68)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@449) $generated@@453))) (and ($generated@@287 ($generated@@85 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@287 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@139)) ($generated@@141 $generated@@455 ($generated@@142 $generated@@454))) (or ($generated@@278 $generated@@455) ($generated@@255 $generated@@455)))
 :pattern ( ($generated@@255 $generated@@455) ($generated@@141 $generated@@455 ($generated@@142 $generated@@454)))
 :pattern ( ($generated@@278 $generated@@455) ($generated@@141 $generated@@455 ($generated@@142 $generated@@454)))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@138)
 :pattern ( ($generated@@456 $generated@@458))
)) (= (type $generated@@457) $generated@@138)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@138) (= (type $generated@@460) $generated@@139)) (= ($generated@@137 $generated@@459 $generated@@460) ($generated@@137 $generated@@457 $generated@@460)))
 :pattern ( ($generated@@137 ($generated@@456 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@80 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@347 (type $generated@@463))))
(let (($generated@@465 ($generated@@346 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@345 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@344 $generated@@465 $generated@@464)) (= ($generated@@343 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@343 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@347 (type $generated@@466))))
(let (($generated@@468 ($generated@@346 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@345 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@344 $generated@@468 $generated@@467)) (= ($generated@@379 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@379 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@347 (type $generated@@469))))
(let (($generated@@471 ($generated@@346 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@345 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@344 $generated@@471 $generated@@470)) (= ($generated@@420 $generated@@469) ($generated@@461 $generated@@157))))))
 :pattern ( ($generated@@420 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@329 (type $generated@@472))))
(let (($generated@@474 ($generated@@328 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@327 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@326 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@157) (= (type $generated@@476) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@412 $generated@@472) ($generated@@311 ($generated@@241 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@412 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@347 (type $generated@@477))))
(let (($generated@@479 ($generated@@346 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@345 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@344 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@157) (= (type $generated@@481) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@420 $generated@@477) ($generated@@311 ($generated@@241 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@420 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@157) ($generated@@242 $generated@@482 $generated@@46)) (and (= ($generated@@311 ($generated@@390 $generated@@2 $generated@@482)) $generated@@482) ($generated@@141 ($generated@@390 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@157) ($generated@@242 $generated@@483 $generated@@47)) (and (= ($generated@@311 ($generated@@390 $generated@@3 $generated@@483)) $generated@@483) ($generated@@141 ($generated@@390 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@157) ($generated@@242 $generated@@484 $generated@@44)) (and (= ($generated@@311 ($generated@@390 $generated@@4 $generated@@484)) $generated@@484) ($generated@@141 ($generated@@390 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 21))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@157) ($generated@@242 $generated@@486 $generated@@45)) (and (= ($generated@@311 ($generated@@390 $generated@@485 $generated@@486)) $generated@@486) ($generated@@141 ($generated@@390 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@138) (= (type $generated@@488) $generated@@139)) (= ($generated@@137 ($generated@@389 $generated@@487) $generated@@488) ($generated@@137 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@137 ($generated@@389 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@68) (= ($generated@@242 ($generated@@311 $generated@@489) $generated@@490) ($generated@@141 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@242 ($generated@@311 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@83 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@80 $generated@@492 $generated@@2)) (<= 0 ($generated@@316 $generated@@491))))
 :pattern ( ($generated@@316 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@305 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@304 $generated@@494)) (<= 0 ($generated@@303 $generated@@493))))
 :pattern ( ($generated@@303 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@438 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@438 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@438 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@438 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@438 $generated@@503 $generated@@504)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@446 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@446 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@446 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@446 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@76 ($generated@@446 $generated@@513 $generated@@514)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@157) (= (type $generated@@516) $generated@@157)) (= ($generated@@162 ($generated@@241 $generated@@515 $generated@@516)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@148 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@148 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@148 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@148 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (= ($generated@@155 ($generated@@241 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@241 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@157) (= (type $generated@@528) $generated@@157)) (= ($generated@@156 ($generated@@241 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@241 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@139)) (= ($generated@@162 ($generated@@281 $generated@@529 $generated@@530)) $generated@@65))
 :pattern ( ($generated@@281 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@157) (= (type $generated@@532) $generated@@139)) (= ($generated@@256 ($generated@@281 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@281 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@157) (= (type $generated@@534) $generated@@139)) (= ($generated@@257 ($generated@@281 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@281 $generated@@533 $generated@@534))
)))
(assert  (and (forall (($generated@@537 T@U) ) (! (= (type ($generated@@535 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@537))
)) (forall (($generated@@538 T@U) ($generated@@539 Int) ) (! (let (($generated@@540 ($generated@@305 (type $generated@@538))))
(= (type ($generated@@536 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@536 $generated@@538 $generated@@539))
))))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@304 $generated@@157)) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@541 ($generated@@535 $generated@@542) $generated@@543) (forall (($generated@@544 Int) ) (!  (=> (and (<= 0 $generated@@544) (< $generated@@544 ($generated@@303 $generated@@541))) ($generated@@287 ($generated@@536 $generated@@541 $generated@@544) $generated@@542 $generated@@543))
 :pattern ( ($generated@@536 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@78 $generated@@541 ($generated@@535 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@545 ($generated@@79 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@79 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@262 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@262 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@262 $generated@@550)) $generated@@54))
 :pattern ( ($generated@@262 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@267 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@267 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@76 ($generated@@267 $generated@@554)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@165 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@165 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@76 ($generated@@165 $generated@@558)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@535 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@535 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@76 ($generated@@535 $generated@@562)) $generated@@57))
 :pattern ( ($generated@@535 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@142 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@142 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
(= ($generated@@390 $generated@@567 ($generated@@311 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@311 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@327 $generated@@157 $generated@@157)) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) $generated@@68)) (= ($generated@@141 $generated@@568 ($generated@@438 $generated@@569 $generated@@570)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@568) $generated@@571))) (and ($generated@@242 ($generated@@85 ($generated@@413 $generated@@568) $generated@@571) $generated@@570) ($generated@@242 $generated@@571 $generated@@569)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@568) $generated@@571))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@568) $generated@@571))
))))
 :pattern ( ($generated@@141 $generated@@568 ($generated@@438 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@345 $generated@@157 $generated@@157)) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@68)) (= ($generated@@141 $generated@@572 ($generated@@446 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@572) $generated@@575))) (and ($generated@@242 ($generated@@85 ($generated@@421 $generated@@572) $generated@@575) $generated@@574) ($generated@@242 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@572) $generated@@575))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@141 $generated@@572 ($generated@@446 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@157) (= (type $generated@@579) $generated@@157)) (< ($generated@@576 $generated@@578) ($generated@@577 ($generated@@241 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@241 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@157) (= (type $generated@@581) $generated@@157)) (< ($generated@@576 $generated@@581) ($generated@@577 ($generated@@241 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@241 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@157) (= (type $generated@@583) $generated@@139)) (< ($generated@@576 $generated@@582) ($generated@@577 ($generated@@281 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@281 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@157) (= (type $generated@@585) $generated@@139)) (< ($generated@@577 $generated@@585) ($generated@@577 ($generated@@281 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@281 $generated@@584 $generated@@585))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@138) (= (type $generated@@587) $generated@@139)) (or ($generated@@140 ($generated@@274 $generated@@587)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@587 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@274 ($generated@@11 ($generated@@278 ($generated@@274 $generated@@587)))))) (let (($generated@@588 ($generated@@274 ($generated@@257 ($generated@@274 $generated@@587)))))
(let (($generated@@589 ($generated@@272 ($generated ($generated@@390 $generated@@2 ($generated@@256 ($generated@@274 $generated@@587)))))))
 (=> (not ($generated@@278 $generated@@588)) (let (($generated@@590 ($generated ($generated@@390 $generated@@2 ($generated@@256 $generated@@588)))))
 (=> (<= $generated@@589 $generated@@590) ($generated@@140 $generated@@588))))))) (= ($generated@@137 ($generated@@389 $generated@@586) ($generated@@274 $generated@@587)) (ite ($generated@@278 ($generated@@274 $generated@@587)) true (let (($generated@@591 ($generated@@274 ($generated@@257 ($generated@@274 $generated@@587)))))
(let (($generated@@592 ($generated@@272 ($generated ($generated@@390 $generated@@2 ($generated@@256 ($generated@@274 $generated@@587)))))))
(ite ($generated@@278 $generated@@591) true (let (($generated@@593 ($generated@@272 ($generated ($generated@@390 $generated@@2 ($generated@@256 $generated@@591))))))
 (and (<= $generated@@592 $generated@@593) ($generated@@137 ($generated@@389 $generated@@586) $generated@@591))))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@389 $generated@@586) ($generated@@274 $generated@@587)))
))))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@157) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) $generated@@68)) ($generated@@242 $generated@@594 ($generated@@438 $generated@@595 $generated@@596))) (and (= ($generated@@311 ($generated@@390 ($generated@@327 $generated@@157 $generated@@157) $generated@@594)) $generated@@594) ($generated@@141 ($generated@@390 ($generated@@327 $generated@@157 $generated@@157) $generated@@594) ($generated@@438 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@242 $generated@@594 ($generated@@438 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@157) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) $generated@@68)) ($generated@@242 $generated@@597 ($generated@@446 $generated@@598 $generated@@599))) (and (= ($generated@@311 ($generated@@390 ($generated@@345 $generated@@157 $generated@@157) $generated@@597)) $generated@@597) ($generated@@141 ($generated@@390 ($generated@@345 $generated@@157 $generated@@157) $generated@@597) ($generated@@446 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@242 $generated@@597 ($generated@@446 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@68) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) $generated@@157)) ($generated@@242 $generated@@602 ($generated@@148 $generated@@600 $generated@@601))) (and (= ($generated@@311 ($generated@@390 $generated@@139 $generated@@602)) $generated@@602) ($generated@@141 ($generated@@390 $generated@@139 $generated@@602) ($generated@@148 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@242 $generated@@602 ($generated@@148 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@139) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@238 $generated@@605) (and ($generated@@255 $generated@@603) ($generated@@78 $generated@@603 ($generated@@142 $generated@@604) $generated@@605)))) ($generated@@287 ($generated@@256 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@287 ($generated@@256 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@85 ($generated@@461 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@85 ($generated@@461 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@68) (= (type $generated@@609) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@608 $generated@@609)) $generated@@62) (= ($generated@@322 ($generated@@148 $generated@@608 $generated@@609)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@139) (= ($generated@@576 ($generated@@311 $generated@@610)) ($generated@@577 $generated@@610)))
 :pattern ( ($generated@@576 ($generated@@311 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@157) ($generated@@242 $generated@@611 ($generated@@79 0))) (and (= ($generated@@311 ($generated@@390 $generated@@2 $generated@@611)) $generated@@611) ($generated@@141 ($generated@@390 ($generated@@80 $generated@@157 $generated@@4) $generated@@611) ($generated@@79 0))))
 :pattern ( ($generated@@242 $generated@@611 ($generated@@79 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@157) (= (type $generated@@613) $generated@@68)) ($generated@@242 $generated@@612 ($generated@@262 $generated@@613))) (and (= ($generated@@311 ($generated@@390 ($generated@@80 $generated@@157 $generated@@4) $generated@@612)) $generated@@612) ($generated@@141 ($generated@@390 ($generated@@80 $generated@@157 $generated@@4) $generated@@612) ($generated@@262 $generated@@613))))
 :pattern ( ($generated@@242 $generated@@612 ($generated@@262 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@157) (= (type $generated@@615) $generated@@68)) ($generated@@242 $generated@@614 ($generated@@267 $generated@@615))) (and (= ($generated@@311 ($generated@@390 ($generated@@80 $generated@@157 $generated@@4) $generated@@614)) $generated@@614) ($generated@@141 ($generated@@390 ($generated@@80 $generated@@157 $generated@@4) $generated@@614) ($generated@@267 $generated@@615))))
 :pattern ( ($generated@@242 $generated@@614 ($generated@@267 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@157) (= (type $generated@@617) $generated@@68)) ($generated@@242 $generated@@616 ($generated@@165 $generated@@617))) (and (= ($generated@@311 ($generated@@390 ($generated@@80 $generated@@157 $generated@@2) $generated@@616)) $generated@@616) ($generated@@141 ($generated@@390 ($generated@@80 $generated@@157 $generated@@2) $generated@@616) ($generated@@165 $generated@@617))))
 :pattern ( ($generated@@242 $generated@@616 ($generated@@165 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@157) (= (type $generated@@619) $generated@@68)) ($generated@@242 $generated@@618 ($generated@@535 $generated@@619))) (and (= ($generated@@311 ($generated@@390 ($generated@@304 $generated@@157) $generated@@618)) $generated@@618) ($generated@@141 ($generated@@390 ($generated@@304 $generated@@157) $generated@@618) ($generated@@535 $generated@@619))))
 :pattern ( ($generated@@242 $generated@@618 ($generated@@535 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@68) (= (type $generated@@621) $generated@@157)) ($generated@@242 $generated@@621 ($generated@@142 $generated@@620))) (and (= ($generated@@311 ($generated@@390 $generated@@139 $generated@@621)) $generated@@621) ($generated@@141 ($generated@@390 $generated@@139 $generated@@621) ($generated@@142 $generated@@620))))
 :pattern ( ($generated@@242 $generated@@621 ($generated@@142 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@139) (= (type $generated@@623) $generated@@68)) (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@238 $generated@@624) (and ($generated@@255 $generated@@622) ($generated@@78 $generated@@622 ($generated@@142 $generated@@623) $generated@@624)))) ($generated@@78 ($generated@@257 $generated@@622) ($generated@@142 $generated@@623) $generated@@624))
 :pattern ( ($generated@@78 ($generated@@257 $generated@@622) ($generated@@142 $generated@@623) $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@625 ($generated@@165 $generated@@626) $generated@@627) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@625 $generated@@628)))) ($generated@@287 $generated@@628 $generated@@626 $generated@@627))
 :pattern ( ($generated@@85 $generated@@625 $generated@@628))
))))
 :pattern ( ($generated@@78 $generated@@625 ($generated@@165 $generated@@626) $generated@@627))
)))
(assert (= $generated@@163 ($generated@@274 $generated@@163)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@139) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@238 $generated@@631) (and ($generated@@147 $generated@@629) (exists (($generated@@632 T@U) ) (!  (and (= (type $generated@@632) $generated@@68) ($generated@@78 $generated@@629 ($generated@@148 $generated@@630 $generated@@632) $generated@@631))
 :pattern ( ($generated@@78 $generated@@629 ($generated@@148 $generated@@630 $generated@@632) $generated@@631))
))))) ($generated@@287 ($generated@@155 $generated@@629) $generated@@630 $generated@@631))
 :pattern ( ($generated@@287 ($generated@@155 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@139) (= (type $generated@@634) $generated@@68)) (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@238 $generated@@635) (and ($generated@@147 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@68) ($generated@@78 $generated@@633 ($generated@@148 $generated@@636 $generated@@634) $generated@@635))
 :pattern ( ($generated@@78 $generated@@633 ($generated@@148 $generated@@636 $generated@@634) $generated@@635))
))))) ($generated@@287 ($generated@@156 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@287 ($generated@@156 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@157) (= (type $generated@@638) $generated@@157)) (= ($generated@@241 ($generated@@274 $generated@@637) ($generated@@274 $generated@@638)) ($generated@@274 ($generated@@241 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@241 ($generated@@274 $generated@@637) ($generated@@274 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@157) (= (type $generated@@640) $generated@@139)) (= ($generated@@281 ($generated@@274 $generated@@639) ($generated@@274 $generated@@640)) ($generated@@274 ($generated@@281 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@281 ($generated@@274 $generated@@639) ($generated@@274 $generated@@640)))
)))
(assert (forall (($generated@@641 Int) ) (! (= ($generated@@311 ($generated@@8 ($generated@@272 $generated@@641))) ($generated@@274 ($generated@@311 ($generated@@8 $generated@@641))))
 :pattern ( ($generated@@311 ($generated@@8 ($generated@@272 $generated@@641))))
)))
(assert (forall (($generated@@642 T@U) ) (! (= ($generated@@311 ($generated@@274 $generated@@642)) ($generated@@274 ($generated@@311 $generated@@642)))
 :pattern ( ($generated@@311 ($generated@@274 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (let (($generated@@644 ($generated@@305 (type $generated@@643))))
 (=> (and (= (type $generated@@643) ($generated@@304 $generated@@644)) (= ($generated@@303 $generated@@643) 0)) (= $generated@@643 ($generated@@302 $generated@@644))))
 :pattern ( ($generated@@303 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 (type $generated@@646)))
 (=> (and (and (= (type $generated@@645) ($generated@@80 $generated@@648 $generated@@2)) (= (type $generated@@647) $generated@@2)) (<= 0 ($generated $generated@@647))) (= ($generated@@316 ($generated@@86 $generated@@645 $generated@@646 $generated@@647)) (+ (- ($generated@@316 $generated@@645) ($generated ($generated@@85 $generated@@645 $generated@@646))) ($generated $generated@@647)))))
 :pattern ( ($generated@@316 ($generated@@86 $generated@@645 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@650) $generated@@2)) ($generated@@78 $generated@@650 $generated@@46 $generated@@649))
 :pattern ( ($generated@@78 $generated@@650 $generated@@46 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@652) $generated@@3)) ($generated@@78 $generated@@652 $generated@@47 $generated@@651))
 :pattern ( ($generated@@78 $generated@@652 $generated@@47 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@654) $generated@@4)) ($generated@@78 $generated@@654 $generated@@44 $generated@@653))
 :pattern ( ($generated@@78 $generated@@654 $generated@@44 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@656) $generated@@485)) ($generated@@78 $generated@@656 $generated@@45 $generated@@655))
 :pattern ( ($generated@@78 $generated@@656 $generated@@45 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@658) $generated@@157)) ($generated@@78 $generated@@658 $generated@@48 $generated@@657))
 :pattern ( ($generated@@78 $generated@@658 $generated@@48 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@659) $generated@@68) (= (type $generated@@660) $generated@@157)) (= (type $generated@@661) $generated@@139)) (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@238 $generated@@662)) (= ($generated@@78 ($generated@@281 $generated@@660 $generated@@661) ($generated@@142 $generated@@659) $generated@@662)  (and ($generated@@287 $generated@@660 $generated@@659 $generated@@662) ($generated@@78 $generated@@661 ($generated@@142 $generated@@659) $generated@@662))))
 :pattern ( ($generated@@78 ($generated@@281 $generated@@660 $generated@@661) ($generated@@142 $generated@@659) $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@304 $generated@@157)) (= (type $generated@@664) $generated@@68)) (= ($generated@@141 $generated@@663 ($generated@@535 $generated@@664)) (forall (($generated@@665 Int) ) (!  (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@303 $generated@@663))) ($generated@@242 ($generated@@536 $generated@@663 $generated@@665) $generated@@664))
 :pattern ( ($generated@@536 $generated@@663 $generated@@665))
))))
 :pattern ( ($generated@@141 $generated@@663 ($generated@@535 $generated@@664)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 Int) ) (!  (=> (= (type $generated@@667) ($generated@@304 $generated@@157)) (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@303 $generated@@667))) (< ($generated@@577 ($generated@@390 $generated@@139 ($generated@@536 $generated@@667 $generated@@668))) ($generated@@666 $generated@@667))))
 :pattern ( ($generated@@577 ($generated@@390 $generated@@139 ($generated@@536 $generated@@667 $generated@@668))))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@327 $generated@@157 $generated@@157)) (= (type $generated@@670) $generated@@68)) (= (type $generated@@671) $generated@@68)) ($generated@@141 $generated@@669 ($generated@@438 $generated@@670 $generated@@671))) (and (and ($generated@@141 ($generated@@325 $generated@@669) ($generated@@262 $generated@@670)) ($generated@@141 ($generated@@368 $generated@@669) ($generated@@262 $generated@@671))) ($generated@@141 ($generated@@412 $generated@@669) ($generated@@262 ($generated@@148 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@141 $generated@@669 ($generated@@438 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) ($generated@@345 $generated@@157 $generated@@157)) (= (type $generated@@673) $generated@@68)) (= (type $generated@@674) $generated@@68)) ($generated@@141 $generated@@672 ($generated@@446 $generated@@673 $generated@@674))) (and (and ($generated@@141 ($generated@@343 $generated@@672) ($generated@@267 $generated@@673)) ($generated@@141 ($generated@@379 $generated@@672) ($generated@@267 $generated@@674))) ($generated@@141 ($generated@@420 $generated@@672) ($generated@@267 ($generated@@148 $generated@@673 $generated@@674)))))
 :pattern ( ($generated@@141 $generated@@672 ($generated@@446 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@2) ($generated@@141 $generated@@675 $generated@@46))
 :pattern ( ($generated@@141 $generated@@675 $generated@@46))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@3) ($generated@@141 $generated@@676 $generated@@47))
 :pattern ( ($generated@@141 $generated@@676 $generated@@47))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@4) ($generated@@141 $generated@@677 $generated@@44))
 :pattern ( ($generated@@141 $generated@@677 $generated@@44))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@485) ($generated@@141 $generated@@678 $generated@@45))
 :pattern ( ($generated@@141 $generated@@678 $generated@@45))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@157) ($generated@@141 $generated@@679 $generated@@48))
 :pattern ( ($generated@@141 $generated@@679 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@682) $generated@@139) (= (type $generated@@683) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@684) $generated@@139)) (= (type $generated@@686) $generated@@139)) (= (type $generated@@689) $generated@@139)) (= (type $generated@@690) $generated@@139)) (= (type $generated@@692) ($generated@@172 $generated@@81 $generated@@4))) (= (type $generated@@693) $generated@@81)) (= (type $generated@@694) ($generated@@172 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@696 true))
(let (($generated@@697  (=> (and (< $generated@@680 $generated@@681) (= (ControlFlow 0 9) 6)) $generated@@696)))
(let (($generated@@698  (=> (and (<= $generated@@681 $generated@@680) ($generated@@78 $generated@@682 ($generated@@142 $generated@@46) $generated@@683)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (< ($generated@@577 $generated@@682) ($generated@@577 $generated@@684))) (=> (< ($generated@@577 $generated@@682) ($generated@@577 $generated@@684)) (=> (and ($generated@@140 $generated@@682) (= (ControlFlow 0 7) 6)) $generated@@696))))))
(let (($generated@@699  (=> (= $generated@@682 ($generated@@281 ($generated@@311 ($generated@@8 $generated@@685)) $generated@@686)) (=> (and (and ($generated@@141 $generated@@686 ($generated@@142 $generated@@46)) (= $generated@@687 $generated@@685)) (and ($generated@@141 ($generated@@8 $generated@@687) $generated@@46) (= $generated@@680 $generated@@687))) (and (=> (= (ControlFlow 0 10) 7) $generated@@698) (=> (= (ControlFlow 0 10) 9) $generated@@697))))))
(let (($generated@@700 true))
(let (($generated@@701  (=> (not (= $generated@@682 $generated@@163)) (and (=> (= (ControlFlow 0 11) 10) $generated@@699) (=> (= (ControlFlow 0 11) 5) $generated@@700)))))
(let (($generated@@702 true))
(let (($generated@@703  (=> (and (= $generated@@684 ($generated@@281 ($generated@@311 ($generated@@8 $generated@@688)) $generated@@689)) ($generated@@141 $generated@@689 ($generated@@142 $generated@@46))) (=> (and (and (and ($generated@@141 $generated@@682 ($generated@@142 $generated@@46)) ($generated@@78 $generated@@682 ($generated@@142 $generated@@46) $generated@@683)) (and (= $generated@@690 $generated@@689) ($generated@@141 $generated@@690 ($generated@@142 $generated@@46)))) (and (and (= $generated@@682 $generated@@690) (= $generated@@691 $generated@@688)) (and ($generated@@141 ($generated@@8 $generated@@691) $generated@@46) (= $generated@@681 $generated@@691)))) (and (=> (= (ControlFlow 0 12) 4) $generated@@702) (=> (= (ControlFlow 0 12) 11) $generated@@701))))))
(let (($generated@@704 true))
(let (($generated@@705  (=> (not (= $generated@@684 $generated@@163)) (and (=> (= (ControlFlow 0 13) 12) $generated@@703) (=> (= (ControlFlow 0 13) 3) $generated@@704)))))
(let (($generated@@706 true))
(let (($generated@@707  (=> (= $generated@@692 ($generated@@226 $generated@@693 $generated@@683 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 2) $generated@@706) (=> (= (ControlFlow 0 14) 13) $generated@@705)))))
(let (($generated@@708 true))
(let (($generated@@709  (=> (= $generated@@694 ($generated@@171 $generated@@693 $generated@@683 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@708) (=> (= (ControlFlow 0 15) 14) $generated@@707)))))
(let (($generated@@710  (=> (and (and (and ($generated@@238 $generated@@683) ($generated@@695 $generated@@683)) ($generated@@141 $generated@@684 ($generated@@142 $generated@@46))) (and (= 1 $generated@@136) (= (ControlFlow 0 16) 15))) $generated@@709)))
$generated@@710))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 () T@U)
(declare-fun $generated@@449 (T@T) T@U)
(declare-fun $generated@@473 () T@T)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@524 (T@U Int) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@654 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@142 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@142 $generated@@143))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@138) (= (type $generated@@145) $generated@@139)) (or ($generated@@140 $generated@@145) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@145 ($generated@@142 $generated@@46))))) true)
 :pattern ( ($generated@@137 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@141 $generated@@146 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@146 ($generated@@79 0)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@139)) ($generated@@141 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@141 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@139) (= (type $generated@@161) $generated@@139)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@164))
)) (= (type $generated@@163) $generated@@139)))
(assert (= ($generated@@162 $generated@@163) $generated@@63))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@68)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@169) $generated@@68)) ($generated@@141 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@141 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 17)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@71 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@81) (= (type $generated@@220) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@221) ($generated@@70 $generated@@4))) (= (type $generated@@223) $generated@@81)) (= (type $generated@@224) ($generated@@70 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@226 $generated@@228)) ($generated@@78 $generated@@163 ($generated@@142 $generated@@227) $generated@@228))
 :pattern ( ($generated@@78 $generated@@163 ($generated@@142 $generated@@227) $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@139)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) $generated@@68)) (= (type $generated@@235) $generated@@157)) (= (type $generated@@236) $generated@@157)) (= ($generated@@141 ($generated@@229 $generated@@235 $generated@@236) ($generated@@148 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@141 ($generated@@229 $generated@@235 $generated@@236) ($generated@@148 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (= (type $generated@@237) $generated@@68) ($generated@@141 $generated@@163 ($generated@@142 $generated@@237)))
 :pattern ( ($generated@@141 $generated@@163 ($generated@@142 $generated@@237)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@139) (= (type $generated@@239) $generated@@139)) (= ($generated@@154 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@154 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@139) (= (type $generated@@242) $generated@@139)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert  (and (forall (($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@246)) $generated@@157)
 :pattern ( ($generated@@244 $generated@@246))
)) (forall (($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@247)) $generated@@139)
 :pattern ( ($generated@@245 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (= (type $generated@@248) $generated@@139) (= (type $generated@@249) $generated@@139)) (and ($generated@@243 $generated@@248) ($generated@@243 $generated@@249))) (= ($generated@@240 $generated@@248 $generated@@249)  (and (= ($generated@@244 $generated@@248) ($generated@@244 $generated@@249)) ($generated@@240 ($generated@@245 $generated@@248) ($generated@@245 $generated@@249)))))
 :pattern ( ($generated@@240 $generated@@248 $generated@@249) ($generated@@243 $generated@@248))
 :pattern ( ($generated@@240 $generated@@248 $generated@@249) ($generated@@243 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@68)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@68)) (= ($generated@@141 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@85 $generated@@252 $generated@@254))) ($generated@@230 $generated@@254 $generated@@253))
 :pattern ( ($generated@@85 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@141 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@68)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@258) $generated@@68)) (= ($generated@@141 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@157) ($generated@@0 ($generated@@85 $generated@@257 $generated@@259))) ($generated@@230 $generated@@259 $generated@@258))
 :pattern ( ($generated@@85 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@141 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@139) (= (type $generated@@268) $generated@@139)) (and ($generated@@266 $generated@@267) ($generated@@266 $generated@@268))) (= ($generated@@240 $generated@@267 $generated@@268) true))
 :pattern ( ($generated@@240 $generated@@267 $generated@@268) ($generated@@266 $generated@@267))
 :pattern ( ($generated@@240 $generated@@267 $generated@@268) ($generated@@266 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (! (= (type ($generated@@269 $generated@@270 $generated@@271)) $generated@@139)
 :pattern ( ($generated@@269 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) $generated@@157)) (= (type $generated@@274) $generated@@139)) (= ($generated@@141 ($generated@@269 $generated@@273 $generated@@274) ($generated@@142 $generated@@272))  (and ($generated@@230 $generated@@273 $generated@@272) ($generated@@141 $generated@@274 ($generated@@142 $generated@@272)))))
 :pattern ( ($generated@@141 ($generated@@269 $generated@@273 $generated@@274) ($generated@@142 $generated@@272)))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@68) (= (type $generated@@277) $generated@@68)) (= (type $generated@@278) $generated@@157)) (= (type $generated@@279) $generated@@157)) (= (type $generated@@280) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@226 $generated@@280)) (= ($generated@@78 ($generated@@229 $generated@@278 $generated@@279) ($generated@@148 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@78 ($generated@@229 $generated@@278 $generated@@279) ($generated@@148 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@139) (= ($generated@@147 $generated@@281) (= ($generated@@162 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@139) (= ($generated@@266 $generated@@282) (= ($generated@@162 $generated@@282) $generated@@63)))
 :pattern ( ($generated@@266 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@139) (= ($generated@@243 $generated@@283) (= ($generated@@162 $generated@@283) $generated@@65)))
 :pattern ( ($generated@@243 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@139) ($generated@@147 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@157) (= (type $generated@@286) $generated@@157)) (= $generated@@284 ($generated@@229 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@147 $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@139) ($generated@@243 $generated@@287)) (exists (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (and (= (type $generated@@288) $generated@@157) (= (type $generated@@289) $generated@@139)) (= $generated@@287 ($generated@@269 $generated@@288 $generated@@289)))
 :no-pattern (type $generated@@288)
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@243 $generated@@287))
)))
(assert  (and (and (forall (($generated@@294 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@294)) 18)) (forall (($generated@@295 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@292 $generated@@295))
))) (forall (($generated@@296 T@T) ) (! (= (type ($generated@@290 $generated@@296)) ($generated@@292 $generated@@296))
 :pattern ( ($generated@@290 $generated@@296))
))))
(assert (forall (($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@297)) 0)
 :pattern ( ($generated@@290 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@139) ($generated@@266 $generated@@298)) (= $generated@@298 $generated@@163))
 :pattern ( ($generated@@266 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@157)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@68) (= (type $generated@@303) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@275 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@78 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@275 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@80 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@83 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@80 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@85 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@73)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@68) (and (= ($generated@@76 ($generated@@142 $generated@@312)) $generated@@64) (= ($generated@@310 ($generated@@142 $generated@@312)) $generated@@67)))
 :pattern ( ($generated@@142 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@80 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 20)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@80 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@83 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@80 $generated@@350 $generated@@2)) (= ($generated@@166 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@85 $generated@@349 $generated@@351))) (<= ($generated ($generated@@85 $generated@@349 $generated@@351)) ($generated@@304 $generated@@349))))
 :pattern ( ($generated@@85 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@166 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@317 (type $generated@@352))))
(let (($generated@@354 ($generated@@316 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@315 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@314 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@313 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@317 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@80 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@317 (type $generated@@359))))
(let (($generated@@361 ($generated@@316 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@315 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@314 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@85 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@335 (type $generated@@363))))
(let (($generated@@365 ($generated@@334 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@333 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@332 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@331 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@335 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@80 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@335 (type $generated@@370))))
(let (($generated@@372 ($generated@@334 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@333 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@332 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@85 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@375) $generated@@68)) (= ($generated@@141 $generated@@374 ($generated@@165 $generated@@375)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@374 $generated@@376)))) ($generated@@230 $generated@@376 $generated@@375))
 :pattern ( ($generated@@85 $generated@@374 $generated@@376))
))))
 :pattern ( ($generated@@141 $generated@@374 ($generated@@165 $generated@@375)))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) $generated@@138)
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@378 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@378 $generated@@380 $generated@@381))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@382) $generated@@138) (= (type $generated@@383) $generated@@139)) (or ($generated@@140 $generated@@383) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@383 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@266 $generated@@383)) (let (($generated@@384 ($generated@@245 $generated@@383)))
(let (($generated@@385 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@383)))))
 (=> (not ($generated@@266 $generated@@384)) (let (($generated@@386 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@384)))))
 (=> (<= $generated@@385 $generated@@386) ($generated@@140 $generated@@384))))))) (= ($generated@@137 ($generated@@377 $generated@@382) $generated@@383) (ite ($generated@@266 $generated@@383) true (let (($generated@@387 ($generated@@245 $generated@@383)))
(let (($generated@@388 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@383)))))
(ite ($generated@@266 $generated@@387) true (let (($generated@@389 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@387)))))
 (and (<= $generated@@388 $generated@@389) ($generated@@137 $generated@@382 $generated@@387))))))))))
 :pattern ( ($generated@@137 ($generated@@377 $generated@@382) $generated@@383))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@391) $generated@@68)) (= (type $generated@@392) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@390 ($generated@@250 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@157) ($generated@@0 ($generated@@85 $generated@@390 $generated@@393))) ($generated@@275 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@85 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@78 $generated@@390 ($generated@@250 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@395) $generated@@68)) (= (type $generated@@396) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@394 ($generated@@255 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@157) ($generated@@0 ($generated@@85 $generated@@394 $generated@@397))) ($generated@@275 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@85 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@78 $generated@@394 ($generated@@255 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated ($generated@@85 ($generated@@305 $generated@@399) $generated@@398)) 0))
 :pattern ( (let (($generated@@399 (type $generated@@398)))
($generated@@85 ($generated@@305 $generated@@399) $generated@@398)))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@317 (type $generated@@403))))
(let (($generated@@405 ($generated@@316 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@80 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@407) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@406) ($generated@@155 ($generated@@378 $generated@@139 $generated@@407)))) (= ($generated@@85 ($generated@@401 $generated@@406) ($generated@@155 ($generated@@378 $generated@@139 $generated@@407))) ($generated@@156 ($generated@@378 $generated@@139 $generated@@407))))))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@335 (type $generated@@411))))
(let (($generated@@413 ($generated@@334 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@80 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@333 $generated@@157 $generated@@157)) (= (type $generated@@415) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@414) ($generated@@155 ($generated@@378 $generated@@139 $generated@@415)))) (= ($generated@@85 ($generated@@409 $generated@@414) ($generated@@155 ($generated@@378 $generated@@139 $generated@@415))) ($generated@@156 ($generated@@378 $generated@@139 $generated@@415))))))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@316 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@315 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@85 ($generated@@356 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@85 ($generated@@401 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@416) $generated@@420))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@85 ($generated@@356 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@334 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@333 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@85 ($generated@@367 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@85 ($generated@@409 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@421) $generated@@425))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@85 ($generated@@367 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@68)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@430) $generated@@68)) (= (type $generated@@431) $generated@@68)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@429) $generated@@433))) (and ($generated@@275 ($generated@@85 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@275 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@78 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@68)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@333 $generated@@157 $generated@@157)) (= (type $generated@@438) $generated@@68)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@437) $generated@@441))) (and ($generated@@275 ($generated@@85 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@275 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (= (type $generated@@442) $generated@@68) (= (type $generated@@443) $generated@@139)) ($generated@@141 $generated@@443 ($generated@@142 $generated@@442))) (or ($generated@@266 $generated@@443) ($generated@@243 $generated@@443)))
 :pattern ( ($generated@@243 $generated@@443) ($generated@@141 $generated@@443 ($generated@@142 $generated@@442)))
 :pattern ( ($generated@@266 $generated@@443) ($generated@@141 $generated@@443 ($generated@@142 $generated@@442)))
)))
(assert  (and (forall (($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@446)) $generated@@138)
 :pattern ( ($generated@@444 $generated@@446))
)) (= (type $generated@@445) $generated@@138)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@138) (= (type $generated@@448) $generated@@139)) (= ($generated@@137 $generated@@447 $generated@@448) ($generated@@137 $generated@@445 $generated@@448)))
 :pattern ( ($generated@@137 ($generated@@444 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@T) ) (! (= (type ($generated@@449 $generated@@450)) ($generated@@80 $generated@@450 $generated@@4))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@335 (type $generated@@451))))
(let (($generated@@453 ($generated@@334 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@333 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@332 $generated@@453 $generated@@452)) (= ($generated@@331 $generated@@451) ($generated@@449 $generated@@453))))))
 :pattern ( ($generated@@331 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@335 (type $generated@@454))))
(let (($generated@@456 ($generated@@334 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@333 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@332 $generated@@456 $generated@@455)) (= ($generated@@367 $generated@@454) ($generated@@449 $generated@@455))))))
 :pattern ( ($generated@@367 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@335 (type $generated@@457))))
(let (($generated@@459 ($generated@@334 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@333 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@332 $generated@@459 $generated@@458)) (= ($generated@@408 $generated@@457) ($generated@@449 $generated@@157))))))
 :pattern ( ($generated@@408 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@317 (type $generated@@460))))
(let (($generated@@462 ($generated@@316 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@315 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@314 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@157) (= (type $generated@@464) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@400 $generated@@460) ($generated@@299 ($generated@@229 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@400 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@335 (type $generated@@465))))
(let (($generated@@467 ($generated@@334 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@333 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@332 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@157) (= (type $generated@@469) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@408 $generated@@465) ($generated@@299 ($generated@@229 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@408 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@157) ($generated@@230 $generated@@470 $generated@@46)) (and (= ($generated@@299 ($generated@@378 $generated@@2 $generated@@470)) $generated@@470) ($generated@@141 ($generated@@378 $generated@@2 $generated@@470) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@470 $generated@@46))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@157) ($generated@@230 $generated@@471 $generated@@47)) (and (= ($generated@@299 ($generated@@378 $generated@@3 $generated@@471)) $generated@@471) ($generated@@141 ($generated@@378 $generated@@3 $generated@@471) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@471 $generated@@47))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@157) ($generated@@230 $generated@@472 $generated@@44)) (and (= ($generated@@299 ($generated@@378 $generated@@4 $generated@@472)) $generated@@472) ($generated@@141 ($generated@@378 $generated@@4 $generated@@472) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@472 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@473) 21))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) ($generated@@230 $generated@@474 $generated@@45)) (and (= ($generated@@299 ($generated@@378 $generated@@473 $generated@@474)) $generated@@474) ($generated@@141 ($generated@@378 $generated@@473 $generated@@474) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@474 $generated@@45))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@138) (= (type $generated@@476) $generated@@139)) (= ($generated@@137 ($generated@@377 $generated@@475) $generated@@476) ($generated@@137 $generated@@475 $generated@@476)))
 :pattern ( ($generated@@137 ($generated@@377 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@68) (= ($generated@@230 ($generated@@299 $generated@@477) $generated@@478) ($generated@@141 $generated@@477 $generated@@478)))
 :pattern ( ($generated@@230 ($generated@@299 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@83 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@80 $generated@@480 $generated@@2)) (<= 0 ($generated@@304 $generated@@479))))
 :pattern ( ($generated@@304 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@293 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@292 $generated@@482)) (<= 0 ($generated@@291 $generated@@481))))
 :pattern ( ($generated@@291 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@426 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@426 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@426 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@426 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@76 ($generated@@426 $generated@@491 $generated@@492)) $generated@@58))
 :pattern ( ($generated@@426 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@434 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@434 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@68) (= (type $generated@@500) $generated@@68)) (= ($generated@@497 ($generated@@434 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@434 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@76 ($generated@@434 $generated@@501 $generated@@502)) $generated@@59))
 :pattern ( ($generated@@434 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@157) (= (type $generated@@504) $generated@@157)) (= ($generated@@162 ($generated@@229 $generated@@503 $generated@@504)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@148 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@148 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@148 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@148 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@157) (= (type $generated@@514) $generated@@157)) (= ($generated@@155 ($generated@@229 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@229 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@157) (= (type $generated@@516) $generated@@157)) (= ($generated@@156 ($generated@@229 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@229 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@157) (= (type $generated@@518) $generated@@139)) (= ($generated@@162 ($generated@@269 $generated@@517 $generated@@518)) $generated@@65))
 :pattern ( ($generated@@269 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@157) (= (type $generated@@520) $generated@@139)) (= ($generated@@244 ($generated@@269 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@269 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@157) (= (type $generated@@522) $generated@@139)) (= ($generated@@245 ($generated@@269 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@269 $generated@@521 $generated@@522))
)))
(assert  (and (forall (($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@525))
)) (forall (($generated@@526 T@U) ($generated@@527 Int) ) (! (let (($generated@@528 ($generated@@293 (type $generated@@526))))
(= (type ($generated@@524 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@524 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@292 $generated@@157)) (= (type $generated@@530) $generated@@68)) (= (type $generated@@531) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@529 ($generated@@523 $generated@@530) $generated@@531) (forall (($generated@@532 Int) ) (!  (=> (and (<= 0 $generated@@532) (< $generated@@532 ($generated@@291 $generated@@529))) ($generated@@275 ($generated@@524 $generated@@529 $generated@@532) $generated@@530 $generated@@531))
 :pattern ( ($generated@@524 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@78 $generated@@529 ($generated@@523 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@79 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@79 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@535 ($generated@@250 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@250 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@76 ($generated@@250 $generated@@538)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@539 ($generated@@255 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@255 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@76 ($generated@@255 $generated@@542)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@543 ($generated@@165 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@165 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@76 ($generated@@165 $generated@@546)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@523 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@523 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@523 $generated@@550)) $generated@@57))
 :pattern ( ($generated@@523 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@142 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@142 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
(= ($generated@@378 $generated@@555 ($generated@@299 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@299 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@557) $generated@@68)) (= (type $generated@@558) $generated@@68)) (= ($generated@@141 $generated@@556 ($generated@@426 $generated@@557 $generated@@558)) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@556) $generated@@559))) (and ($generated@@230 ($generated@@85 ($generated@@401 $generated@@556) $generated@@559) $generated@@558) ($generated@@230 $generated@@559 $generated@@557)))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@556) $generated@@559))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@556) $generated@@559))
))))
 :pattern ( ($generated@@141 $generated@@556 ($generated@@426 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@333 $generated@@157 $generated@@157)) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) $generated@@68)) (= ($generated@@141 $generated@@560 ($generated@@434 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@560) $generated@@563))) (and ($generated@@230 ($generated@@85 ($generated@@409 $generated@@560) $generated@@563) $generated@@562) ($generated@@230 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@560) $generated@@563))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@141 $generated@@560 ($generated@@434 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (< ($generated@@564 $generated@@566) ($generated@@565 ($generated@@229 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@157) (= (type $generated@@569) $generated@@157)) (< ($generated@@564 $generated@@569) ($generated@@565 ($generated@@229 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@229 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@157) (= (type $generated@@571) $generated@@139)) (< ($generated@@564 $generated@@570) ($generated@@565 ($generated@@269 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@269 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@157) (= (type $generated@@573) $generated@@139)) (< ($generated@@565 $generated@@573) ($generated@@565 ($generated@@269 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@269 $generated@@572 $generated@@573))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@138) (= (type $generated@@575) $generated@@139)) (or ($generated@@140 ($generated@@262 $generated@@575)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@575 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@266 ($generated@@262 $generated@@575)))))) (let (($generated@@576 ($generated@@262 ($generated@@245 ($generated@@262 $generated@@575)))))
(let (($generated@@577 ($generated@@260 ($generated ($generated@@378 $generated@@2 ($generated@@244 ($generated@@262 $generated@@575)))))))
 (=> (not ($generated@@266 $generated@@576)) (let (($generated@@578 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@576)))))
 (=> (<= $generated@@577 $generated@@578) ($generated@@140 $generated@@576))))))) (= ($generated@@137 ($generated@@377 $generated@@574) ($generated@@262 $generated@@575)) (ite ($generated@@266 ($generated@@262 $generated@@575)) true (let (($generated@@579 ($generated@@262 ($generated@@245 ($generated@@262 $generated@@575)))))
(let (($generated@@580 ($generated@@260 ($generated ($generated@@378 $generated@@2 ($generated@@244 ($generated@@262 $generated@@575)))))))
(ite ($generated@@266 $generated@@579) true (let (($generated@@581 ($generated@@260 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@579))))))
 (and (<= $generated@@580 $generated@@581) ($generated@@137 ($generated@@377 $generated@@574) $generated@@579))))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@377 $generated@@574) ($generated@@262 $generated@@575)))
))))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@157) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) $generated@@68)) ($generated@@230 $generated@@582 ($generated@@426 $generated@@583 $generated@@584))) (and (= ($generated@@299 ($generated@@378 ($generated@@315 $generated@@157 $generated@@157) $generated@@582)) $generated@@582) ($generated@@141 ($generated@@378 ($generated@@315 $generated@@157 $generated@@157) $generated@@582) ($generated@@426 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@230 $generated@@582 ($generated@@426 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@157) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@68)) ($generated@@230 $generated@@585 ($generated@@434 $generated@@586 $generated@@587))) (and (= ($generated@@299 ($generated@@378 ($generated@@333 $generated@@157 $generated@@157) $generated@@585)) $generated@@585) ($generated@@141 ($generated@@378 ($generated@@333 $generated@@157 $generated@@157) $generated@@585) ($generated@@434 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@230 $generated@@585 ($generated@@434 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@68) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) $generated@@157)) ($generated@@230 $generated@@590 ($generated@@148 $generated@@588 $generated@@589))) (and (= ($generated@@299 ($generated@@378 $generated@@139 $generated@@590)) $generated@@590) ($generated@@141 ($generated@@378 $generated@@139 $generated@@590) ($generated@@148 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@230 $generated@@590 ($generated@@148 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@139) (= (type $generated@@592) $generated@@68)) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@226 $generated@@593) (and ($generated@@243 $generated@@591) ($generated@@78 $generated@@591 ($generated@@142 $generated@@592) $generated@@593)))) ($generated@@275 ($generated@@244 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@275 ($generated@@244 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (not ($generated@@0 ($generated@@85 ($generated@@449 $generated@@595) $generated@@594))))
 :pattern ( (let (($generated@@595 (type $generated@@594)))
($generated@@85 ($generated@@449 $generated@@595) $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@68) (= (type $generated@@597) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@596 $generated@@597)) $generated@@62) (= ($generated@@310 ($generated@@148 $generated@@596 $generated@@597)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@139) (= ($generated@@564 ($generated@@299 $generated@@598)) ($generated@@565 $generated@@598)))
 :pattern ( ($generated@@564 ($generated@@299 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@157) ($generated@@230 $generated@@599 ($generated@@79 0))) (and (= ($generated@@299 ($generated@@378 $generated@@2 $generated@@599)) $generated@@599) ($generated@@141 ($generated@@378 ($generated@@80 $generated@@157 $generated@@4) $generated@@599) ($generated@@79 0))))
 :pattern ( ($generated@@230 $generated@@599 ($generated@@79 0)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@157) (= (type $generated@@601) $generated@@68)) ($generated@@230 $generated@@600 ($generated@@250 $generated@@601))) (and (= ($generated@@299 ($generated@@378 ($generated@@80 $generated@@157 $generated@@4) $generated@@600)) $generated@@600) ($generated@@141 ($generated@@378 ($generated@@80 $generated@@157 $generated@@4) $generated@@600) ($generated@@250 $generated@@601))))
 :pattern ( ($generated@@230 $generated@@600 ($generated@@250 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@157) (= (type $generated@@603) $generated@@68)) ($generated@@230 $generated@@602 ($generated@@255 $generated@@603))) (and (= ($generated@@299 ($generated@@378 ($generated@@80 $generated@@157 $generated@@4) $generated@@602)) $generated@@602) ($generated@@141 ($generated@@378 ($generated@@80 $generated@@157 $generated@@4) $generated@@602) ($generated@@255 $generated@@603))))
 :pattern ( ($generated@@230 $generated@@602 ($generated@@255 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@157) (= (type $generated@@605) $generated@@68)) ($generated@@230 $generated@@604 ($generated@@165 $generated@@605))) (and (= ($generated@@299 ($generated@@378 ($generated@@80 $generated@@157 $generated@@2) $generated@@604)) $generated@@604) ($generated@@141 ($generated@@378 ($generated@@80 $generated@@157 $generated@@2) $generated@@604) ($generated@@165 $generated@@605))))
 :pattern ( ($generated@@230 $generated@@604 ($generated@@165 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@157) (= (type $generated@@607) $generated@@68)) ($generated@@230 $generated@@606 ($generated@@523 $generated@@607))) (and (= ($generated@@299 ($generated@@378 ($generated@@292 $generated@@157) $generated@@606)) $generated@@606) ($generated@@141 ($generated@@378 ($generated@@292 $generated@@157) $generated@@606) ($generated@@523 $generated@@607))))
 :pattern ( ($generated@@230 $generated@@606 ($generated@@523 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@68) (= (type $generated@@609) $generated@@157)) ($generated@@230 $generated@@609 ($generated@@142 $generated@@608))) (and (= ($generated@@299 ($generated@@378 $generated@@139 $generated@@609)) $generated@@609) ($generated@@141 ($generated@@378 $generated@@139 $generated@@609) ($generated@@142 $generated@@608))))
 :pattern ( ($generated@@230 $generated@@609 ($generated@@142 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@139) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@226 $generated@@612) (and ($generated@@243 $generated@@610) ($generated@@78 $generated@@610 ($generated@@142 $generated@@611) $generated@@612)))) ($generated@@78 ($generated@@245 $generated@@610) ($generated@@142 $generated@@611) $generated@@612))
 :pattern ( ($generated@@78 ($generated@@245 $generated@@610) ($generated@@142 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@614) $generated@@68)) (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@613 ($generated@@165 $generated@@614) $generated@@615) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@613 $generated@@616)))) ($generated@@275 $generated@@616 $generated@@614 $generated@@615))
 :pattern ( ($generated@@85 $generated@@613 $generated@@616))
))))
 :pattern ( ($generated@@78 $generated@@613 ($generated@@165 $generated@@614) $generated@@615))
)))
(assert (= $generated@@163 ($generated@@262 $generated@@163)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@139) (= (type $generated@@618) $generated@@68)) (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@226 $generated@@619) (and ($generated@@147 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@68) ($generated@@78 $generated@@617 ($generated@@148 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@78 $generated@@617 ($generated@@148 $generated@@618 $generated@@620) $generated@@619))
))))) ($generated@@275 ($generated@@155 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@275 ($generated@@155 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@139) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@226 $generated@@623) (and ($generated@@147 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@68) ($generated@@78 $generated@@621 ($generated@@148 $generated@@624 $generated@@622) $generated@@623))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@148 $generated@@624 $generated@@622) $generated@@623))
))))) ($generated@@275 ($generated@@156 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@275 ($generated@@156 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@157) (= (type $generated@@626) $generated@@157)) (= ($generated@@229 ($generated@@262 $generated@@625) ($generated@@262 $generated@@626)) ($generated@@262 ($generated@@229 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@229 ($generated@@262 $generated@@625) ($generated@@262 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@157) (= (type $generated@@628) $generated@@139)) (= ($generated@@269 ($generated@@262 $generated@@627) ($generated@@262 $generated@@628)) ($generated@@262 ($generated@@269 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@269 ($generated@@262 $generated@@627) ($generated@@262 $generated@@628)))
)))
(assert (forall (($generated@@629 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@260 $generated@@629))) ($generated@@262 ($generated@@299 ($generated@@8 $generated@@629))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@260 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ) (! (= ($generated@@299 ($generated@@262 $generated@@630)) ($generated@@262 ($generated@@299 $generated@@630)))
 :pattern ( ($generated@@299 ($generated@@262 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (! (let (($generated@@632 ($generated@@293 (type $generated@@631))))
 (=> (and (= (type $generated@@631) ($generated@@292 $generated@@632)) (= ($generated@@291 $generated@@631) 0)) (= $generated@@631 ($generated@@290 $generated@@632))))
 :pattern ( ($generated@@291 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (! (let (($generated@@636 (type $generated@@634)))
 (=> (and (and (= (type $generated@@633) ($generated@@80 $generated@@636 $generated@@2)) (= (type $generated@@635) $generated@@2)) (<= 0 ($generated $generated@@635))) (= ($generated@@304 ($generated@@86 $generated@@633 $generated@@634 $generated@@635)) (+ (- ($generated@@304 $generated@@633) ($generated ($generated@@85 $generated@@633 $generated@@634))) ($generated $generated@@635)))))
 :pattern ( ($generated@@304 ($generated@@86 $generated@@633 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@638) $generated@@2)) ($generated@@78 $generated@@638 $generated@@46 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@46 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@640) $generated@@3)) ($generated@@78 $generated@@640 $generated@@47 $generated@@639))
 :pattern ( ($generated@@78 $generated@@640 $generated@@47 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@642) $generated@@4)) ($generated@@78 $generated@@642 $generated@@44 $generated@@641))
 :pattern ( ($generated@@78 $generated@@642 $generated@@44 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@644) $generated@@473)) ($generated@@78 $generated@@644 $generated@@45 $generated@@643))
 :pattern ( ($generated@@78 $generated@@644 $generated@@45 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@646) $generated@@157)) ($generated@@78 $generated@@646 $generated@@48 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@48 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@647) $generated@@68) (= (type $generated@@648) $generated@@157)) (= (type $generated@@649) $generated@@139)) (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@226 $generated@@650)) (= ($generated@@78 ($generated@@269 $generated@@648 $generated@@649) ($generated@@142 $generated@@647) $generated@@650)  (and ($generated@@275 $generated@@648 $generated@@647 $generated@@650) ($generated@@78 $generated@@649 ($generated@@142 $generated@@647) $generated@@650))))
 :pattern ( ($generated@@78 ($generated@@269 $generated@@648 $generated@@649) ($generated@@142 $generated@@647) $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@292 $generated@@157)) (= (type $generated@@652) $generated@@68)) (= ($generated@@141 $generated@@651 ($generated@@523 $generated@@652)) (forall (($generated@@653 Int) ) (!  (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@291 $generated@@651))) ($generated@@230 ($generated@@524 $generated@@651 $generated@@653) $generated@@652))
 :pattern ( ($generated@@524 $generated@@651 $generated@@653))
))))
 :pattern ( ($generated@@141 $generated@@651 ($generated@@523 $generated@@652)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ) (!  (=> (= (type $generated@@655) ($generated@@292 $generated@@157)) (=> (and (<= 0 $generated@@656) (< $generated@@656 ($generated@@291 $generated@@655))) (< ($generated@@565 ($generated@@378 $generated@@139 ($generated@@524 $generated@@655 $generated@@656))) ($generated@@654 $generated@@655))))
 :pattern ( ($generated@@565 ($generated@@378 $generated@@139 ($generated@@524 $generated@@655 $generated@@656))))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@658) $generated@@68)) (= (type $generated@@659) $generated@@68)) ($generated@@141 $generated@@657 ($generated@@426 $generated@@658 $generated@@659))) (and (and ($generated@@141 ($generated@@313 $generated@@657) ($generated@@250 $generated@@658)) ($generated@@141 ($generated@@356 $generated@@657) ($generated@@250 $generated@@659))) ($generated@@141 ($generated@@400 $generated@@657) ($generated@@250 ($generated@@148 $generated@@658 $generated@@659)))))
 :pattern ( ($generated@@141 $generated@@657 ($generated@@426 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@333 $generated@@157 $generated@@157)) (= (type $generated@@661) $generated@@68)) (= (type $generated@@662) $generated@@68)) ($generated@@141 $generated@@660 ($generated@@434 $generated@@661 $generated@@662))) (and (and ($generated@@141 ($generated@@331 $generated@@660) ($generated@@255 $generated@@661)) ($generated@@141 ($generated@@367 $generated@@660) ($generated@@255 $generated@@662))) ($generated@@141 ($generated@@408 $generated@@660) ($generated@@255 ($generated@@148 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@141 $generated@@660 ($generated@@434 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@2) ($generated@@141 $generated@@663 $generated@@46))
 :pattern ( ($generated@@141 $generated@@663 $generated@@46))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@3) ($generated@@141 $generated@@664 $generated@@47))
 :pattern ( ($generated@@141 $generated@@664 $generated@@47))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@4) ($generated@@141 $generated@@665 $generated@@44))
 :pattern ( ($generated@@141 $generated@@665 $generated@@44))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@473) ($generated@@141 $generated@@666 $generated@@45))
 :pattern ( ($generated@@141 $generated@@666 $generated@@45))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@157) ($generated@@141 $generated@@667 $generated@@48))
 :pattern ( ($generated@@141 $generated@@667 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 (T@U) Bool)
(assert  (and (and (= (type $generated@@668) ($generated@@172 $generated@@81 $generated@@4)) (= (type $generated@@669) $generated@@81)) (= (type $generated@@670) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@672  (=> (= $generated@@668 ($generated@@171 $generated@@669 $generated@@670 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@140 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))) (or ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@137 ($generated@@377 $generated@@445) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163))))))))))))) (=> ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@266 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163))))))))))))) ($generated@@0 ($generated@@262 ($generated@@11 true))))))) (=> (=> ($generated@@140 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))) (or ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@137 ($generated@@377 $generated@@445) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163))))))))))))) (=> ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@266 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163))))))))))))) ($generated@@0 ($generated@@262 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@140 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))) (or ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@137 ($generated@@377 $generated@@445) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163))))))))))))) (=> (not ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@266 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))) (let (($generated@@673 ($generated@@262 ($generated@@245 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))
 (=> ($generated@@266 $generated@@673) ($generated@@0 ($generated@@262 ($generated@@11 true))))))))) (=> (=> ($generated@@140 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))) (or ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@137 ($generated@@377 $generated@@445) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163))))))))))))) (=> (not ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@266 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))) (let (($generated@@674 ($generated@@262 ($generated@@245 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))
 (=> ($generated@@266 $generated@@674) ($generated@@0 ($generated@@262 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@140 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))) (or ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@137 ($generated@@377 $generated@@445) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163))))))))))))) (=> (not ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@266 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))) (let (($generated@@675 ($generated@@262 ($generated@@245 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))
(let (($generated@@676 ($generated@@260 ($generated ($generated@@378 $generated@@2 ($generated@@244 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))))
 (=> (not ($generated@@266 $generated@@675)) (let (($generated@@677 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@675)))))
(<= $generated@@676 $generated@@677))))))))) (=> (=> ($generated@@140 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))) (or ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@137 ($generated@@377 $generated@@445) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163))))))))))))) (=> (not ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@266 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))) (let (($generated@@678 ($generated@@262 ($generated@@245 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))
(let (($generated@@679 ($generated@@260 ($generated ($generated@@378 $generated@@2 ($generated@@244 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))))
 (=> (not ($generated@@266 $generated@@678)) (let (($generated@@680 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@678)))))
(<= $generated@@679 $generated@@680)))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@140 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))) (or ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@137 ($generated@@377 $generated@@445) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163))))))))))))) (=> (not ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@266 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))) (let (($generated@@681 ($generated@@262 ($generated@@245 ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 2))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 3))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 5))) ($generated@@262 ($generated@@269 ($generated@@299 ($generated@@8 ($generated@@260 7))) ($generated@@262 $generated@@163)))))))))))))
 (=> (not ($generated@@266 $generated@@681)) ($generated@@137 ($generated@@377 ($generated@@377 $generated@@445)) $generated@@681))))))))))))))))
(let (($generated@@682  (=> (and (and ($generated@@226 $generated@@670) ($generated@@671 $generated@@670)) (and (= 2 $generated@@136) (= (ControlFlow 0 6) 2))) $generated@@672)))
$generated@@682)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) Bool)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 () T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@475 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@656 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@142 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@142 $generated@@143))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@138) (= (type $generated@@145) $generated@@139)) (or ($generated@@140 $generated@@145) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@145 ($generated@@142 $generated@@46))))) true)
 :pattern ( ($generated@@137 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@141 $generated@@146 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@146 ($generated@@79 0)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@139)) ($generated@@141 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@141 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@139) (= (type $generated@@161) $generated@@139)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@164))
)) (= (type $generated@@163) $generated@@139)))
(assert (= ($generated@@162 $generated@@163) $generated@@63))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@68)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@169) $generated@@68)) ($generated@@141 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@141 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 17)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@71 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@81) (= (type $generated@@220) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@221) ($generated@@70 $generated@@4))) (= (type $generated@@223) $generated@@81)) (= (type $generated@@224) ($generated@@70 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@226 $generated@@228)) ($generated@@78 $generated@@163 ($generated@@142 $generated@@227) $generated@@228))
 :pattern ( ($generated@@78 $generated@@163 ($generated@@142 $generated@@227) $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@139)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) $generated@@68)) (= (type $generated@@235) $generated@@157)) (= (type $generated@@236) $generated@@157)) (= ($generated@@141 ($generated@@229 $generated@@235 $generated@@236) ($generated@@148 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@141 ($generated@@229 $generated@@235 $generated@@236) ($generated@@148 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (= (type $generated@@237) $generated@@68) ($generated@@141 $generated@@163 ($generated@@142 $generated@@237)))
 :pattern ( ($generated@@141 $generated@@163 ($generated@@142 $generated@@237)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@139) (= (type $generated@@239) $generated@@139)) (= ($generated@@154 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@154 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@139) (= (type $generated@@242) $generated@@139)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert  (and (forall (($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@246)) $generated@@157)
 :pattern ( ($generated@@244 $generated@@246))
)) (forall (($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@247)) $generated@@139)
 :pattern ( ($generated@@245 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (= (type $generated@@248) $generated@@139) (= (type $generated@@249) $generated@@139)) (and ($generated@@243 $generated@@248) ($generated@@243 $generated@@249))) (= ($generated@@240 $generated@@248 $generated@@249)  (and (= ($generated@@244 $generated@@248) ($generated@@244 $generated@@249)) ($generated@@240 ($generated@@245 $generated@@248) ($generated@@245 $generated@@249)))))
 :pattern ( ($generated@@240 $generated@@248 $generated@@249) ($generated@@243 $generated@@248))
 :pattern ( ($generated@@240 $generated@@248 $generated@@249) ($generated@@243 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@68)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@68)) (= ($generated@@141 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@85 $generated@@252 $generated@@254))) ($generated@@230 $generated@@254 $generated@@253))
 :pattern ( ($generated@@85 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@141 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@68)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@258) $generated@@68)) (= ($generated@@141 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@157) ($generated@@0 ($generated@@85 $generated@@257 $generated@@259))) ($generated@@230 $generated@@259 $generated@@258))
 :pattern ( ($generated@@85 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@141 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@139) (= (type $generated@@268) $generated@@139)) (and ($generated@@266 $generated@@267) ($generated@@266 $generated@@268))) (= ($generated@@240 $generated@@267 $generated@@268) true))
 :pattern ( ($generated@@240 $generated@@267 $generated@@268) ($generated@@266 $generated@@267))
 :pattern ( ($generated@@240 $generated@@267 $generated@@268) ($generated@@266 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (! (= (type ($generated@@269 $generated@@270 $generated@@271)) $generated@@139)
 :pattern ( ($generated@@269 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) $generated@@157)) (= (type $generated@@274) $generated@@139)) (= ($generated@@141 ($generated@@269 $generated@@273 $generated@@274) ($generated@@142 $generated@@272))  (and ($generated@@230 $generated@@273 $generated@@272) ($generated@@141 $generated@@274 ($generated@@142 $generated@@272)))))
 :pattern ( ($generated@@141 ($generated@@269 $generated@@273 $generated@@274) ($generated@@142 $generated@@272)))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@68) (= (type $generated@@277) $generated@@68)) (= (type $generated@@278) $generated@@157)) (= (type $generated@@279) $generated@@157)) (= (type $generated@@280) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@226 $generated@@280)) (= ($generated@@78 ($generated@@229 $generated@@278 $generated@@279) ($generated@@148 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@78 ($generated@@229 $generated@@278 $generated@@279) ($generated@@148 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@139) (= ($generated@@147 $generated@@281) (= ($generated@@162 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@139) (= ($generated@@266 $generated@@282) (= ($generated@@162 $generated@@282) $generated@@63)))
 :pattern ( ($generated@@266 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@139) (= ($generated@@243 $generated@@283) (= ($generated@@162 $generated@@283) $generated@@65)))
 :pattern ( ($generated@@243 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@139) ($generated@@147 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@157) (= (type $generated@@286) $generated@@157)) (= $generated@@284 ($generated@@229 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@147 $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@139) ($generated@@243 $generated@@287)) (exists (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (and (= (type $generated@@288) $generated@@157) (= (type $generated@@289) $generated@@139)) (= $generated@@287 ($generated@@269 $generated@@288 $generated@@289)))
 :no-pattern (type $generated@@288)
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@243 $generated@@287))
)))
(assert  (and (and (forall (($generated@@294 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@294)) 18)) (forall (($generated@@295 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@292 $generated@@295))
))) (forall (($generated@@296 T@T) ) (! (= (type ($generated@@290 $generated@@296)) ($generated@@292 $generated@@296))
 :pattern ( ($generated@@290 $generated@@296))
))))
(assert (forall (($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@297)) 0)
 :pattern ( ($generated@@290 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@139) ($generated@@266 $generated@@298)) (= $generated@@298 $generated@@163))
 :pattern ( ($generated@@266 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@157)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@68) (= (type $generated@@303) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@275 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@78 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@275 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@80 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@83 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@80 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@85 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@73)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@68) (and (= ($generated@@76 ($generated@@142 $generated@@312)) $generated@@64) (= ($generated@@310 ($generated@@142 $generated@@312)) $generated@@67)))
 :pattern ( ($generated@@142 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@80 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 20)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@80 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@83 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@80 $generated@@350 $generated@@2)) (= ($generated@@166 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@85 $generated@@349 $generated@@351))) (<= ($generated ($generated@@85 $generated@@349 $generated@@351)) ($generated@@304 $generated@@349))))
 :pattern ( ($generated@@85 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@166 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@317 (type $generated@@352))))
(let (($generated@@354 ($generated@@316 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@315 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@314 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@313 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@317 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@80 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@317 (type $generated@@359))))
(let (($generated@@361 ($generated@@316 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@315 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@314 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@85 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@335 (type $generated@@363))))
(let (($generated@@365 ($generated@@334 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@333 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@332 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@331 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@335 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@80 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@335 (type $generated@@370))))
(let (($generated@@372 ($generated@@334 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@333 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@332 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@85 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@375) $generated@@68)) (= ($generated@@141 $generated@@374 ($generated@@165 $generated@@375)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@374 $generated@@376)))) ($generated@@230 $generated@@376 $generated@@375))
 :pattern ( ($generated@@85 $generated@@374 $generated@@376))
))))
 :pattern ( ($generated@@141 $generated@@374 ($generated@@165 $generated@@375)))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) $generated@@138)
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@378 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@378 $generated@@380 $generated@@381))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@382) $generated@@138) (= (type $generated@@383) $generated@@139)) (or ($generated@@140 $generated@@383) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@383 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@266 $generated@@383)) (let (($generated@@384 ($generated@@245 $generated@@383)))
(let (($generated@@385 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@383)))))
 (=> (not ($generated@@266 $generated@@384)) (let (($generated@@386 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@384)))))
 (=> (<= $generated@@385 $generated@@386) ($generated@@140 $generated@@384))))))) (= ($generated@@137 ($generated@@377 $generated@@382) $generated@@383) (ite ($generated@@266 $generated@@383) true (let (($generated@@387 ($generated@@245 $generated@@383)))
(let (($generated@@388 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@383)))))
(ite ($generated@@266 $generated@@387) true (let (($generated@@389 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@387)))))
 (and (<= $generated@@388 $generated@@389) ($generated@@137 $generated@@382 $generated@@387))))))))))
 :pattern ( ($generated@@137 ($generated@@377 $generated@@382) $generated@@383))
))))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@139) ($generated@@390 $generated@@391)) (or ($generated@@266 $generated@@391) ($generated@@243 $generated@@391)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@393) $generated@@68)) (= (type $generated@@394) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@392 ($generated@@250 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@157) ($generated@@0 ($generated@@85 $generated@@392 $generated@@395))) ($generated@@275 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@85 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@78 $generated@@392 ($generated@@250 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@397) $generated@@68)) (= (type $generated@@398) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@396 ($generated@@255 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@157) ($generated@@0 ($generated@@85 $generated@@396 $generated@@399))) ($generated@@275 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@85 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@78 $generated@@396 ($generated@@255 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@85 ($generated@@305 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@85 ($generated@@305 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@317 (type $generated@@405))))
(let (($generated@@407 ($generated@@316 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@80 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@409) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@408) ($generated@@155 ($generated@@378 $generated@@139 $generated@@409)))) (= ($generated@@85 ($generated@@403 $generated@@408) ($generated@@155 ($generated@@378 $generated@@139 $generated@@409))) ($generated@@156 ($generated@@378 $generated@@139 $generated@@409))))))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@335 (type $generated@@413))))
(let (($generated@@415 ($generated@@334 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@80 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@333 $generated@@157 $generated@@157)) (= (type $generated@@417) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@416) ($generated@@155 ($generated@@378 $generated@@139 $generated@@417)))) (= ($generated@@85 ($generated@@411 $generated@@416) ($generated@@155 ($generated@@378 $generated@@139 $generated@@417))) ($generated@@156 ($generated@@378 $generated@@139 $generated@@417))))))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@316 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@315 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@85 ($generated@@356 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@85 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@85 ($generated@@356 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@334 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@333 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@85 ($generated@@367 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@85 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@85 ($generated@@367 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@68)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@432) $generated@@68)) (= (type $generated@@433) $generated@@68)) (= (type $generated@@434) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@431) $generated@@435))) (and ($generated@@275 ($generated@@85 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@275 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@78 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@333 $generated@@157 $generated@@157)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) $generated@@68)) (= (type $generated@@442) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@439) $generated@@443))) (and ($generated@@275 ($generated@@85 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@275 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@78 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (= (type $generated@@444) $generated@@68) (= (type $generated@@445) $generated@@139)) ($generated@@141 $generated@@445 ($generated@@142 $generated@@444))) (or ($generated@@266 $generated@@445) ($generated@@243 $generated@@445)))
 :pattern ( ($generated@@243 $generated@@445) ($generated@@141 $generated@@445 ($generated@@142 $generated@@444)))
 :pattern ( ($generated@@266 $generated@@445) ($generated@@141 $generated@@445 ($generated@@142 $generated@@444)))
)))
(assert  (and (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) $generated@@138)
 :pattern ( ($generated@@446 $generated@@448))
)) (= (type $generated@@447) $generated@@138)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@138) (= (type $generated@@450) $generated@@139)) (= ($generated@@137 $generated@@449 $generated@@450) ($generated@@137 $generated@@447 $generated@@450)))
 :pattern ( ($generated@@137 ($generated@@446 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@80 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@335 (type $generated@@453))))
(let (($generated@@455 ($generated@@334 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@333 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@332 $generated@@455 $generated@@454)) (= ($generated@@331 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@331 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@335 (type $generated@@456))))
(let (($generated@@458 ($generated@@334 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@333 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@332 $generated@@458 $generated@@457)) (= ($generated@@367 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@367 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@335 (type $generated@@459))))
(let (($generated@@461 ($generated@@334 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@333 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@332 $generated@@461 $generated@@460)) (= ($generated@@410 $generated@@459) ($generated@@451 $generated@@157))))))
 :pattern ( ($generated@@410 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@317 (type $generated@@462))))
(let (($generated@@464 ($generated@@316 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@315 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@314 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@157) (= (type $generated@@466) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@402 $generated@@462) ($generated@@299 ($generated@@229 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@402 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@335 (type $generated@@467))))
(let (($generated@@469 ($generated@@334 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@333 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@332 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@157) (= (type $generated@@471) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@410 $generated@@467) ($generated@@299 ($generated@@229 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@410 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@157) ($generated@@230 $generated@@472 $generated@@46)) (and (= ($generated@@299 ($generated@@378 $generated@@2 $generated@@472)) $generated@@472) ($generated@@141 ($generated@@378 $generated@@2 $generated@@472) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@472 $generated@@46))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@157) ($generated@@230 $generated@@473 $generated@@47)) (and (= ($generated@@299 ($generated@@378 $generated@@3 $generated@@473)) $generated@@473) ($generated@@141 ($generated@@378 $generated@@3 $generated@@473) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@473 $generated@@47))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) ($generated@@230 $generated@@474 $generated@@44)) (and (= ($generated@@299 ($generated@@378 $generated@@4 $generated@@474)) $generated@@474) ($generated@@141 ($generated@@378 $generated@@4 $generated@@474) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@474 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@475) 21))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) ($generated@@230 $generated@@476 $generated@@45)) (and (= ($generated@@299 ($generated@@378 $generated@@475 $generated@@476)) $generated@@476) ($generated@@141 ($generated@@378 $generated@@475 $generated@@476) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@476 $generated@@45))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@138) (= (type $generated@@478) $generated@@139)) (= ($generated@@137 ($generated@@377 $generated@@477) $generated@@478) ($generated@@137 $generated@@477 $generated@@478)))
 :pattern ( ($generated@@137 ($generated@@377 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@68) (= ($generated@@230 ($generated@@299 $generated@@479) $generated@@480) ($generated@@141 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@230 ($generated@@299 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@83 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@80 $generated@@482 $generated@@2)) (<= 0 ($generated@@304 $generated@@481))))
 :pattern ( ($generated@@304 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@293 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@292 $generated@@484)) (<= 0 ($generated@@291 $generated@@483))))
 :pattern ( ($generated@@291 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@428 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@428 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@428 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@428 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@76 ($generated@@428 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@436 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@436 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@436 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@436 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@436 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@157) (= (type $generated@@506) $generated@@157)) (= ($generated@@162 ($generated@@229 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@148 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@148 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@148 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@148 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@157) (= (type $generated@@516) $generated@@157)) (= ($generated@@155 ($generated@@229 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@229 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@157) (= (type $generated@@518) $generated@@157)) (= ($generated@@156 ($generated@@229 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@229 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@157) (= (type $generated@@520) $generated@@139)) (= ($generated@@162 ($generated@@269 $generated@@519 $generated@@520)) $generated@@65))
 :pattern ( ($generated@@269 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@157) (= (type $generated@@522) $generated@@139)) (= ($generated@@244 ($generated@@269 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@269 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@139)) (= ($generated@@245 ($generated@@269 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@269 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@293 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@292 $generated@@157)) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@291 $generated@@531))) ($generated@@275 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@78 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@79 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@79 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@250 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@250 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@250 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@541 ($generated@@255 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@255 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@76 ($generated@@255 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@545 ($generated@@165 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@165 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@76 ($generated@@165 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@68)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@76 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@68)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@68) (= ($generated@@553 ($generated@@142 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@142 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated@@378 $generated@@557 ($generated@@299 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@299 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) (= ($generated@@141 $generated@@558 ($generated@@428 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@558) $generated@@561))) (and ($generated@@230 ($generated@@85 ($generated@@403 $generated@@558) $generated@@561) $generated@@560) ($generated@@230 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@558) $generated@@561))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@141 $generated@@558 ($generated@@428 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@333 $generated@@157 $generated@@157)) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) $generated@@68)) (= ($generated@@141 $generated@@562 ($generated@@436 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@562) $generated@@565))) (and ($generated@@230 ($generated@@85 ($generated@@411 $generated@@562) $generated@@565) $generated@@564) ($generated@@230 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@562) $generated@@565))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@141 $generated@@562 ($generated@@436 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@157) (= (type $generated@@569) $generated@@157)) (< ($generated@@566 $generated@@568) ($generated@@567 ($generated@@229 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@229 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@157) (= (type $generated@@571) $generated@@157)) (< ($generated@@566 $generated@@571) ($generated@@567 ($generated@@229 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@229 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@157) (= (type $generated@@573) $generated@@139)) (< ($generated@@566 $generated@@572) ($generated@@567 ($generated@@269 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@269 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@157) (= (type $generated@@575) $generated@@139)) (< ($generated@@567 $generated@@575) ($generated@@567 ($generated@@269 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@269 $generated@@574 $generated@@575))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@138) (= (type $generated@@577) $generated@@139)) (or ($generated@@140 ($generated@@262 $generated@@577)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@577 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@266 ($generated@@262 $generated@@577)))))) (let (($generated@@578 ($generated@@262 ($generated@@245 ($generated@@262 $generated@@577)))))
(let (($generated@@579 ($generated@@260 ($generated ($generated@@378 $generated@@2 ($generated@@244 ($generated@@262 $generated@@577)))))))
 (=> (not ($generated@@266 $generated@@578)) (let (($generated@@580 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@578)))))
 (=> (<= $generated@@579 $generated@@580) ($generated@@140 $generated@@578))))))) (= ($generated@@137 ($generated@@377 $generated@@576) ($generated@@262 $generated@@577)) (ite ($generated@@266 ($generated@@262 $generated@@577)) true (let (($generated@@581 ($generated@@262 ($generated@@245 ($generated@@262 $generated@@577)))))
(let (($generated@@582 ($generated@@260 ($generated ($generated@@378 $generated@@2 ($generated@@244 ($generated@@262 $generated@@577)))))))
(ite ($generated@@266 $generated@@581) true (let (($generated@@583 ($generated@@260 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@581))))))
 (and (<= $generated@@582 $generated@@583) ($generated@@137 ($generated@@377 $generated@@576) $generated@@581))))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@377 $generated@@576) ($generated@@262 $generated@@577)))
))))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@157) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@68)) ($generated@@230 $generated@@584 ($generated@@428 $generated@@585 $generated@@586))) (and (= ($generated@@299 ($generated@@378 ($generated@@315 $generated@@157 $generated@@157) $generated@@584)) $generated@@584) ($generated@@141 ($generated@@378 ($generated@@315 $generated@@157 $generated@@157) $generated@@584) ($generated@@428 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@230 $generated@@584 ($generated@@428 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@157) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@68)) ($generated@@230 $generated@@587 ($generated@@436 $generated@@588 $generated@@589))) (and (= ($generated@@299 ($generated@@378 ($generated@@333 $generated@@157 $generated@@157) $generated@@587)) $generated@@587) ($generated@@141 ($generated@@378 ($generated@@333 $generated@@157 $generated@@157) $generated@@587) ($generated@@436 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@230 $generated@@587 ($generated@@436 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@68) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@157)) ($generated@@230 $generated@@592 ($generated@@148 $generated@@590 $generated@@591))) (and (= ($generated@@299 ($generated@@378 $generated@@139 $generated@@592)) $generated@@592) ($generated@@141 ($generated@@378 $generated@@139 $generated@@592) ($generated@@148 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@230 $generated@@592 ($generated@@148 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@139) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@226 $generated@@595) (and ($generated@@243 $generated@@593) ($generated@@78 $generated@@593 ($generated@@142 $generated@@594) $generated@@595)))) ($generated@@275 ($generated@@244 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@275 ($generated@@244 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
 (not ($generated@@0 ($generated@@85 ($generated@@451 $generated@@597) $generated@@596))))
 :pattern ( (let (($generated@@597 (type $generated@@596)))
($generated@@85 ($generated@@451 $generated@@597) $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@68) (= (type $generated@@599) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@598 $generated@@599)) $generated@@62) (= ($generated@@310 ($generated@@148 $generated@@598 $generated@@599)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@139) (= ($generated@@566 ($generated@@299 $generated@@600)) ($generated@@567 $generated@@600)))
 :pattern ( ($generated@@566 ($generated@@299 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@157) ($generated@@230 $generated@@601 ($generated@@79 0))) (and (= ($generated@@299 ($generated@@378 $generated@@2 $generated@@601)) $generated@@601) ($generated@@141 ($generated@@378 ($generated@@80 $generated@@157 $generated@@4) $generated@@601) ($generated@@79 0))))
 :pattern ( ($generated@@230 $generated@@601 ($generated@@79 0)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@157) (= (type $generated@@603) $generated@@68)) ($generated@@230 $generated@@602 ($generated@@250 $generated@@603))) (and (= ($generated@@299 ($generated@@378 ($generated@@80 $generated@@157 $generated@@4) $generated@@602)) $generated@@602) ($generated@@141 ($generated@@378 ($generated@@80 $generated@@157 $generated@@4) $generated@@602) ($generated@@250 $generated@@603))))
 :pattern ( ($generated@@230 $generated@@602 ($generated@@250 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@157) (= (type $generated@@605) $generated@@68)) ($generated@@230 $generated@@604 ($generated@@255 $generated@@605))) (and (= ($generated@@299 ($generated@@378 ($generated@@80 $generated@@157 $generated@@4) $generated@@604)) $generated@@604) ($generated@@141 ($generated@@378 ($generated@@80 $generated@@157 $generated@@4) $generated@@604) ($generated@@255 $generated@@605))))
 :pattern ( ($generated@@230 $generated@@604 ($generated@@255 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@157) (= (type $generated@@607) $generated@@68)) ($generated@@230 $generated@@606 ($generated@@165 $generated@@607))) (and (= ($generated@@299 ($generated@@378 ($generated@@80 $generated@@157 $generated@@2) $generated@@606)) $generated@@606) ($generated@@141 ($generated@@378 ($generated@@80 $generated@@157 $generated@@2) $generated@@606) ($generated@@165 $generated@@607))))
 :pattern ( ($generated@@230 $generated@@606 ($generated@@165 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@157) (= (type $generated@@609) $generated@@68)) ($generated@@230 $generated@@608 ($generated@@525 $generated@@609))) (and (= ($generated@@299 ($generated@@378 ($generated@@292 $generated@@157) $generated@@608)) $generated@@608) ($generated@@141 ($generated@@378 ($generated@@292 $generated@@157) $generated@@608) ($generated@@525 $generated@@609))))
 :pattern ( ($generated@@230 $generated@@608 ($generated@@525 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@68) (= (type $generated@@611) $generated@@157)) ($generated@@230 $generated@@611 ($generated@@142 $generated@@610))) (and (= ($generated@@299 ($generated@@378 $generated@@139 $generated@@611)) $generated@@611) ($generated@@141 ($generated@@378 $generated@@139 $generated@@611) ($generated@@142 $generated@@610))))
 :pattern ( ($generated@@230 $generated@@611 ($generated@@142 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@139) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@226 $generated@@614) (and ($generated@@243 $generated@@612) ($generated@@78 $generated@@612 ($generated@@142 $generated@@613) $generated@@614)))) ($generated@@78 ($generated@@245 $generated@@612) ($generated@@142 $generated@@613) $generated@@614))
 :pattern ( ($generated@@78 ($generated@@245 $generated@@612) ($generated@@142 $generated@@613) $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@615) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@615 ($generated@@165 $generated@@616) $generated@@617) (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@615 $generated@@618)))) ($generated@@275 $generated@@618 $generated@@616 $generated@@617))
 :pattern ( ($generated@@85 $generated@@615 $generated@@618))
))))
 :pattern ( ($generated@@78 $generated@@615 ($generated@@165 $generated@@616) $generated@@617))
)))
(assert (= $generated@@163 ($generated@@262 $generated@@163)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@139) (= (type $generated@@620) $generated@@68)) (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@226 $generated@@621) (and ($generated@@147 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@68) ($generated@@78 $generated@@619 ($generated@@148 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@78 $generated@@619 ($generated@@148 $generated@@620 $generated@@622) $generated@@621))
))))) ($generated@@275 ($generated@@155 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@275 ($generated@@155 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@139) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@226 $generated@@625) (and ($generated@@147 $generated@@623) (exists (($generated@@626 T@U) ) (!  (and (= (type $generated@@626) $generated@@68) ($generated@@78 $generated@@623 ($generated@@148 $generated@@626 $generated@@624) $generated@@625))
 :pattern ( ($generated@@78 $generated@@623 ($generated@@148 $generated@@626 $generated@@624) $generated@@625))
))))) ($generated@@275 ($generated@@156 $generated@@623) $generated@@624 $generated@@625))
 :pattern ( ($generated@@275 ($generated@@156 $generated@@623) $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@157) (= (type $generated@@628) $generated@@157)) (= ($generated@@229 ($generated@@262 $generated@@627) ($generated@@262 $generated@@628)) ($generated@@262 ($generated@@229 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@229 ($generated@@262 $generated@@627) ($generated@@262 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@157) (= (type $generated@@630) $generated@@139)) (= ($generated@@269 ($generated@@262 $generated@@629) ($generated@@262 $generated@@630)) ($generated@@262 ($generated@@269 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@269 ($generated@@262 $generated@@629) ($generated@@262 $generated@@630)))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@260 $generated@@631))) ($generated@@262 ($generated@@299 ($generated@@8 $generated@@631))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@260 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ) (! (= ($generated@@299 ($generated@@262 $generated@@632)) ($generated@@262 ($generated@@299 $generated@@632)))
 :pattern ( ($generated@@299 ($generated@@262 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@293 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@292 $generated@@634)) (= ($generated@@291 $generated@@633) 0)) (= $generated@@633 ($generated@@290 $generated@@634))))
 :pattern ( ($generated@@291 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@636)))
 (=> (and (and (= (type $generated@@635) ($generated@@80 $generated@@638 $generated@@2)) (= (type $generated@@637) $generated@@2)) (<= 0 ($generated $generated@@637))) (= ($generated@@304 ($generated@@86 $generated@@635 $generated@@636 $generated@@637)) (+ (- ($generated@@304 $generated@@635) ($generated ($generated@@85 $generated@@635 $generated@@636))) ($generated $generated@@637)))))
 :pattern ( ($generated@@304 ($generated@@86 $generated@@635 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@640) $generated@@2)) ($generated@@78 $generated@@640 $generated@@46 $generated@@639))
 :pattern ( ($generated@@78 $generated@@640 $generated@@46 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@642) $generated@@3)) ($generated@@78 $generated@@642 $generated@@47 $generated@@641))
 :pattern ( ($generated@@78 $generated@@642 $generated@@47 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@644) $generated@@4)) ($generated@@78 $generated@@644 $generated@@44 $generated@@643))
 :pattern ( ($generated@@78 $generated@@644 $generated@@44 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@646) $generated@@475)) ($generated@@78 $generated@@646 $generated@@45 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@45 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@648) $generated@@157)) ($generated@@78 $generated@@648 $generated@@48 $generated@@647))
 :pattern ( ($generated@@78 $generated@@648 $generated@@48 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@649) $generated@@68) (= (type $generated@@650) $generated@@157)) (= (type $generated@@651) $generated@@139)) (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@226 $generated@@652)) (= ($generated@@78 ($generated@@269 $generated@@650 $generated@@651) ($generated@@142 $generated@@649) $generated@@652)  (and ($generated@@275 $generated@@650 $generated@@649 $generated@@652) ($generated@@78 $generated@@651 ($generated@@142 $generated@@649) $generated@@652))))
 :pattern ( ($generated@@78 ($generated@@269 $generated@@650 $generated@@651) ($generated@@142 $generated@@649) $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@292 $generated@@157)) (= (type $generated@@654) $generated@@68)) (= ($generated@@141 $generated@@653 ($generated@@525 $generated@@654)) (forall (($generated@@655 Int) ) (!  (=> (and (<= 0 $generated@@655) (< $generated@@655 ($generated@@291 $generated@@653))) ($generated@@230 ($generated@@526 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@526 $generated@@653 $generated@@655))
))))
 :pattern ( ($generated@@141 $generated@@653 ($generated@@525 $generated@@654)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 Int) ) (!  (=> (= (type $generated@@657) ($generated@@292 $generated@@157)) (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@291 $generated@@657))) (< ($generated@@567 ($generated@@378 $generated@@139 ($generated@@526 $generated@@657 $generated@@658))) ($generated@@656 $generated@@657))))
 :pattern ( ($generated@@567 ($generated@@378 $generated@@139 ($generated@@526 $generated@@657 $generated@@658))))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) $generated@@68)) ($generated@@141 $generated@@659 ($generated@@428 $generated@@660 $generated@@661))) (and (and ($generated@@141 ($generated@@313 $generated@@659) ($generated@@250 $generated@@660)) ($generated@@141 ($generated@@356 $generated@@659) ($generated@@250 $generated@@661))) ($generated@@141 ($generated@@402 $generated@@659) ($generated@@250 ($generated@@148 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@141 $generated@@659 ($generated@@428 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) ($generated@@333 $generated@@157 $generated@@157)) (= (type $generated@@663) $generated@@68)) (= (type $generated@@664) $generated@@68)) ($generated@@141 $generated@@662 ($generated@@436 $generated@@663 $generated@@664))) (and (and ($generated@@141 ($generated@@331 $generated@@662) ($generated@@255 $generated@@663)) ($generated@@141 ($generated@@367 $generated@@662) ($generated@@255 $generated@@664))) ($generated@@141 ($generated@@410 $generated@@662) ($generated@@255 ($generated@@148 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@141 $generated@@662 ($generated@@436 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@2) ($generated@@141 $generated@@665 $generated@@46))
 :pattern ( ($generated@@141 $generated@@665 $generated@@46))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@3) ($generated@@141 $generated@@666 $generated@@47))
 :pattern ( ($generated@@141 $generated@@666 $generated@@47))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@4) ($generated@@141 $generated@@667 $generated@@44))
 :pattern ( ($generated@@141 $generated@@667 $generated@@44))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@475) ($generated@@141 $generated@@668 $generated@@45))
 :pattern ( ($generated@@141 $generated@@668 $generated@@45))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@157) ($generated@@141 $generated@@669 $generated@@48))
 :pattern ( ($generated@@141 $generated@@669 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 (T@U) Bool)
(declare-fun $generated@@678 () Int)
(assert  (and (and (and (and (and (= (type $generated@@670) $generated@@139) (= (type $generated@@672) $generated@@139)) (= (type $generated@@673) ($generated@@172 $generated@@81 $generated@@4))) (= (type $generated@@674) $generated@@81)) (= (type $generated@@675) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@676) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@679  (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@140 $generated@@670) (or ($generated@@137 ($generated@@377 $generated@@447) $generated@@670) (=> ($generated@@266 $generated@@670) ($generated@@0 ($generated@@262 ($generated@@11 true))))))) (=> (=> ($generated@@140 $generated@@670) (or ($generated@@137 ($generated@@377 $generated@@447) $generated@@670) (=> ($generated@@266 $generated@@670) ($generated@@0 ($generated@@262 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@140 $generated@@670) (or ($generated@@137 ($generated@@377 $generated@@447) $generated@@670) (=> (not ($generated@@266 $generated@@670)) (let (($generated@@680 ($generated@@245 $generated@@670)))
 (=> ($generated@@266 $generated@@680) ($generated@@0 ($generated@@262 ($generated@@11 true))))))))) (=> (=> ($generated@@140 $generated@@670) (or ($generated@@137 ($generated@@377 $generated@@447) $generated@@670) (=> (not ($generated@@266 $generated@@670)) (let (($generated@@681 ($generated@@245 $generated@@670)))
 (=> ($generated@@266 $generated@@681) ($generated@@0 ($generated@@262 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@140 $generated@@670) (or ($generated@@137 ($generated@@377 $generated@@447) $generated@@670) (=> (not ($generated@@266 $generated@@670)) (let (($generated@@682 ($generated@@245 $generated@@670)))
(let (($generated@@683 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@670)))))
 (=> (not ($generated@@266 $generated@@682)) (let (($generated@@684 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@682)))))
(<= $generated@@683 $generated@@684))))))))) (=> (=> ($generated@@140 $generated@@670) (or ($generated@@137 ($generated@@377 $generated@@447) $generated@@670) (=> (not ($generated@@266 $generated@@670)) (let (($generated@@685 ($generated@@245 $generated@@670)))
(let (($generated@@686 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@670)))))
 (=> (not ($generated@@266 $generated@@685)) (let (($generated@@687 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@685)))))
(<= $generated@@686 $generated@@687)))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@140 $generated@@670) (or ($generated@@137 ($generated@@377 $generated@@447) $generated@@670) (=> (not ($generated@@266 $generated@@670)) (let (($generated@@688 ($generated@@245 $generated@@670)))
 (=> (not ($generated@@266 $generated@@688)) ($generated@@137 ($generated@@377 ($generated@@377 $generated@@447)) $generated@@688)))))))))))))))
(let (($generated@@689  (=> (= $generated@@670 ($generated@@269 ($generated@@299 ($generated@@8 $generated@@671)) $generated@@672)) (=> (and ($generated@@141 $generated@@672 ($generated@@142 $generated@@46)) (= (ControlFlow 0 8) 3)) $generated@@679))))
(let (($generated@@690  (=> (and (= $generated@@670 $generated@@163) (= (ControlFlow 0 7) 3)) $generated@@679)))
(let (($generated@@691 true))
(let (($generated@@692  (=> (not (= $generated@@670 $generated@@163)) (and (=> (= (ControlFlow 0 9) 8) $generated@@689) (=> (= (ControlFlow 0 9) 1) $generated@@691)))))
(let (($generated@@693  (=> (and (= $generated@@673 ($generated@@171 $generated@@674 $generated@@675 $generated@@60 false)) ($generated@@390 $generated@@670)) (=> (and (and ($generated@@226 $generated@@676) ($generated@@677 $generated@@676)) (and (= $generated@@675 $generated@@676) (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@139) (=> (and (and ($generated@@141 $generated@@694 ($generated@@142 $generated@@46)) ($generated@@137 ($generated@@377 $generated@@447) ($generated@@269 ($generated@@299 ($generated@@8 $generated@@678)) $generated@@694))) (or (and (<= 0 $generated@@678) (< $generated@@678 $generated@@678)) (and (= $generated@@678 $generated@@678) (< ($generated@@567 $generated@@694) ($generated@@567 $generated@@670))))) ($generated@@137 ($generated@@377 $generated@@447) $generated@@694)))
 :no-pattern (type $generated@@694)
 :no-pattern ($generated $generated@@694)
 :no-pattern ($generated@@0 $generated@@694)
)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@690) (=> (= (ControlFlow 0 10) 9) $generated@@692))))))
(let (($generated@@695  (=> (and ($generated@@226 $generated@@675) ($generated@@677 $generated@@675)) (=> (and (and (and (and ($generated@@141 $generated@@670 ($generated@@142 $generated@@46)) ($generated@@78 $generated@@670 ($generated@@142 $generated@@46) $generated@@675)) ($generated@@390 $generated@@670)) (= 2 $generated@@136)) (and (and ($generated@@140 ($generated@@269 ($generated@@299 ($generated@@8 $generated@@678)) $generated@@670)) (and ($generated@@137 ($generated@@377 $generated@@447) ($generated@@269 ($generated@@299 ($generated@@8 $generated@@678)) $generated@@670)) (ite ($generated@@266 ($generated@@269 ($generated@@299 ($generated@@8 $generated@@678)) $generated@@670)) true (let (($generated@@696 ($generated@@245 ($generated@@269 ($generated@@299 ($generated@@8 $generated@@678)) $generated@@670))))
(let (($generated@@697 ($generated ($generated@@378 $generated@@2 ($generated@@244 ($generated@@269 ($generated@@299 ($generated@@8 $generated@@678)) $generated@@670))))))
(ite ($generated@@266 $generated@@696) true (let (($generated@@698 ($generated ($generated@@378 $generated@@2 ($generated@@244 $generated@@696)))))
 (and (<= $generated@@697 $generated@@698) ($generated@@137 ($generated@@377 $generated@@447) $generated@@696))))))))) (= (ControlFlow 0 11) 10))) $generated@@693))))
$generated@@695))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 () Int)
(declare-fun $generated@@81 (T@U Int T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (Int T@U) Bool)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@105 (T@U T@U T@U) Bool)
(declare-fun $generated@@106 (Int) T@U)
(declare-fun $generated@@107 (T@T T@T) T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U) T@U)
(declare-fun $generated@@115 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@190 (Int) Int)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U T@U) Bool)
(declare-fun $generated@@287 (T@U T@U) Bool)
(declare-fun $generated@@293 (T@U) Bool)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@316 (T@U T@U T@U) Bool)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@347 (T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@T) T@U)
(declare-fun $generated@@357 (T@T T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@375 (T@T T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@T) T@U)
(declare-fun $generated@@501 () T@T)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@550 (T@U Int) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@672 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@83) 11) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@82 $generated@@93)) $generated@@83)
 :pattern ( ($generated@@82 $generated@@93))
))) (forall (($generated@@94 T@U) ) (! (= (type ($generated@@87 $generated@@94)) $generated@@70)
 :pattern ( ($generated@@87 $generated@@94))
))) (forall (($generated@@95 T@U) ) (! (= (type ($generated@@89 $generated@@95)) $generated@@84)
 :pattern ( ($generated@@89 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@U) ) (! (= (type ($generated@@90 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@90 $generated@@96 $generated@@97))
))) (= ($generated@@1 $generated@@92) 13)) (forall (($generated@@98 T@U) ) (! (= (type ($generated@@91 $generated@@98)) $generated@@92)
 :pattern ( ($generated@@91 $generated@@98))
))))
(assert  (=> (<= 1 $generated@@80) (forall (($generated@@99 T@U) ($generated@@100 Int) ($generated@@101 T@U) ) (!  (=> (and (and (= (type $generated@@99) $generated@@83) (= (type $generated@@101) $generated@@84)) (or ($generated@@85 $generated@@100 $generated@@101) (and (not (= 1 $generated@@80)) ($generated@@86 $generated@@101 ($generated@@87 $generated@@46))))) (and (=> (not ($generated@@88 $generated@@101)) (let (($generated@@102 ($generated@@89 $generated@@101)))
($generated@@85 $generated@@100 $generated@@102))) (= ($generated@@81 ($generated@@82 $generated@@99) $generated@@100 $generated@@101) (ite ($generated@@88 $generated@@101) 0 (let (($generated@@103 ($generated@@89 $generated@@101)))
(let (($generated@@104 ($generated ($generated@@90 $generated@@2 ($generated@@91 $generated@@101)))))
(+ (ite (= $generated@@100 $generated@@104) 1 0) ($generated@@81 $generated@@99 $generated@@100 $generated@@103))))))))
 :pattern ( ($generated@@81 ($generated@@82 $generated@@99) $generated@@100 $generated@@101))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (= ($generated@@1 ($generated@@107 $generated@@116 $generated@@117)) 14)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@110 ($generated@@107 $generated@@118 $generated@@119)) $generated@@118)
 :pattern ( ($generated@@107 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (! (= ($generated@@111 ($generated@@107 $generated@@120 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@107 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@111 (type $generated@@122))))
(= (type ($generated@@112 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@112 $generated@@122 $generated@@123))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 (type $generated@@127)))
(let (($generated@@129 (type $generated@@126)))
(= (type ($generated@@113 $generated@@125 $generated@@126 $generated@@127)) ($generated@@107 $generated@@129 $generated@@128))))
 :pattern ( ($generated@@113 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@111 (type $generated@@130))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@112 ($generated@@113 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@112 ($generated@@113 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@112 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@112 $generated@@139 $generated@@141)))
 :weight 0
)))) (= ($generated@@1 $generated@@108) 15)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@73 (type $generated@@143))))
(= (type ($generated@@114 $generated@@142 $generated@@143)) $generated@@144))
 :pattern ( ($generated@@114 $generated@@142 $generated@@143))
))) (= ($generated@@1 $generated@@109) 16)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@115 $generated@@145 $generated@@146 $generated@@147)) $generated@@109)
 :pattern ( ($generated@@115 $generated@@145 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@73 (type $generated@@149))))
 (=> (= (type $generated@@150) $generated@@151) (= ($generated@@114 ($generated@@115 $generated@@148 $generated@@149 $generated@@150) $generated@@149) $generated@@150)))
 :weight 0
))) (and (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@154 $generated@@155) (= ($generated@@114 ($generated@@115 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@114 $generated@@153 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or true (= ($generated@@114 ($generated@@115 $generated@@157 $generated@@158 $generated@@156) $generated@@159) ($generated@@114 $generated@@157 $generated@@159)))
 :weight 0
)))) (forall (($generated@@160 Int) ) (! (= (type ($generated@@106 $generated@@160)) $generated@@70)
 :pattern ( ($generated@@106 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@2) (= (type $generated@@162) ($generated@@107 $generated@@108 $generated@@109))) ($generated@@105 $generated@@161 ($generated@@106 0) $generated@@162))
 :pattern ( ($generated@@105 $generated@@161 ($generated@@106 0) $generated@@162))
)))
(assert  (and (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@83)
 :pattern ( ($generated@@163 $generated@@165))
)) (= (type $generated@@164) $generated@@83)))
(assert (forall (($generated@@166 T@U) ($generated@@167 Int) ($generated@@168 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@83) (= (type $generated@@168) $generated@@84)) (= ($generated@@81 $generated@@166 $generated@@167 $generated@@168) ($generated@@81 $generated@@164 $generated@@167 $generated@@168)))
 :pattern ( ($generated@@81 ($generated@@163 $generated@@166) $generated@@167 $generated@@168))
)))
(assert (= (type $generated@@169) $generated@@70))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@2) (= (type $generated@@171) ($generated@@107 $generated@@108 $generated@@109))) ($generated@@105 $generated@@170 $generated@@169 $generated@@171))
 :pattern ( ($generated@@105 $generated@@170 $generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@2) ($generated@@86 $generated@@172 ($generated@@106 0)))
 :pattern ( ($generated@@86 $generated@@172 ($generated@@106 0)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (and (= (type $generated@@177) $generated@@70) (= (type $generated@@178) $generated@@70)) (= (type $generated@@179) $generated@@84)) ($generated@@86 $generated@@179 ($generated@@174 $generated@@177 $generated@@178))) ($generated@@173 $generated@@179))
 :pattern ( ($generated@@173 $generated@@179) ($generated@@86 $generated@@179 ($generated@@174 $generated@@177 $generated@@178)))
)))
(assert  (and (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@92)
 :pattern ( ($generated@@181 $generated@@183))
)) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@92)
 :pattern ( ($generated@@182 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@84) (= (type $generated@@186) $generated@@84)) true) (= ($generated@@180 $generated@@185 $generated@@186)  (and (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)) (= ($generated@@182 $generated@@185) ($generated@@182 $generated@@186)))))
 :pattern ( ($generated@@180 $generated@@185 $generated@@186))
)))
(assert  (and (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@74)
 :pattern ( ($generated@@187 $generated@@189))
)) (= (type $generated@@188) $generated@@84)))
(assert (= ($generated@@187 $generated@@188) $generated@@64))
(assert (forall (($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(= (type ($generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@191 $generated@@192))
)))
(assert  (=> (<= 1 $generated@@80) (forall (($generated@@194 T@U) ($generated@@195 Int) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@83) (= (type $generated@@196) $generated@@84)) (or ($generated@@85 ($generated@@190 $generated@@195) ($generated@@191 $generated@@196)) (and (not (= 1 $generated@@80)) ($generated@@86 $generated@@196 ($generated@@87 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@191 ($generated@@11 ($generated@@88 ($generated@@191 $generated@@196)))))) (let (($generated@@197 ($generated@@191 ($generated@@89 ($generated@@191 $generated@@196)))))
($generated@@85 ($generated@@190 $generated@@195) $generated@@197))) (= ($generated@@81 ($generated@@82 $generated@@194) ($generated@@190 $generated@@195) ($generated@@191 $generated@@196)) (ite ($generated@@88 ($generated@@191 $generated@@196)) 0 (let (($generated@@198 ($generated@@191 ($generated@@89 ($generated@@191 $generated@@196)))))
(let (($generated@@199 ($generated@@190 ($generated ($generated@@90 $generated@@2 ($generated@@91 ($generated@@191 $generated@@196)))))))
(+ (ite (= ($generated@@190 $generated@@195) $generated@@199) 1 0) ($generated@@81 ($generated@@82 $generated@@194) ($generated@@190 $generated@@195) $generated@@198))))))))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@82 $generated@@194) ($generated@@190 $generated@@195) ($generated@@191 $generated@@196)))
))))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@70)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@107 $generated@@92 $generated@@2)) (= (type $generated@@204) $generated@@70)) ($generated@@86 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@86 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 17)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@108 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@73 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@108) (= (type $generated@@255) ($generated@@107 $generated@@108 $generated@@109))) (= (type $generated@@256) ($generated@@72 $generated@@4))) (= (type $generated@@258) $generated@@108)) (= (type $generated@@259) ($generated@@72 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@114 ($generated@@112 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ) (! (= (type ($generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265)) ($generated@@207 $generated@@108 $generated@@4))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@73 (type $generated@@271))))
 (=> (and (and (and (and (= (type $generated@@266) $generated@@108) (= (type $generated@@267) ($generated@@107 $generated@@108 $generated@@109))) (= (type $generated@@268) ($generated@@72 $generated@@4))) (= (type $generated@@270) $generated@@108)) (= (type $generated@@271) ($generated@@72 $generated@@272))) (= ($generated@@0 ($generated@@205 ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))  (=> (and (not (= $generated@@270 $generated@@266)) ($generated@@0 ($generated@@114 ($generated@@112 $generated@@267 $generated@@270) $generated@@268))) $generated@@269))))
 :pattern ( ($generated@@205 ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@70) (= (type $generated@@275) ($generated@@107 $generated@@108 $generated@@109))) ($generated@@273 $generated@@275)) ($generated@@105 $generated@@188 ($generated@@87 $generated@@274) $generated@@275))
 :pattern ( ($generated@@105 $generated@@188 ($generated@@87 $generated@@274) $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@84)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (= (type $generated@@280) $generated@@70) (= (type $generated@@281) $generated@@70)) (= (type $generated@@282) $generated@@92)) (= (type $generated@@283) $generated@@92)) (= ($generated@@86 ($generated@@276 $generated@@282 $generated@@283) ($generated@@174 $generated@@280 $generated@@281))  (and ($generated@@277 $generated@@282 $generated@@280) ($generated@@277 $generated@@283 $generated@@281))))
 :pattern ( ($generated@@86 ($generated@@276 $generated@@282 $generated@@283) ($generated@@174 $generated@@280 $generated@@281)))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@70) ($generated@@86 $generated@@188 ($generated@@87 $generated@@284)))
 :pattern ( ($generated@@86 $generated@@188 ($generated@@87 $generated@@284)))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@84) (= (type $generated@@286) $generated@@84)) (= ($generated@@180 $generated@@285 $generated@@286) (= $generated@@285 $generated@@286)))
 :pattern ( ($generated@@180 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@84) (= (type $generated@@289) $generated@@84)) (= ($generated@@287 $generated@@288 $generated@@289) (= $generated@@288 $generated@@289)))
 :pattern ( ($generated@@287 $generated@@288 $generated@@289))
)))
(assert  (=> (<= 1 $generated@@80) (forall (($generated@@290 T@U) ($generated@@291 Int) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@83) (= (type $generated@@292) $generated@@84)) (or ($generated@@85 $generated@@291 $generated@@292) (and (not (= 1 $generated@@80)) ($generated@@86 $generated@@292 ($generated@@87 $generated@@46))))) (<= ($generated@@190 0) ($generated@@81 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@81 $generated@@290 $generated@@291 $generated@@292))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (= (type $generated@@294) $generated@@84) (= (type $generated@@295) $generated@@84)) (and ($generated@@293 $generated@@294) ($generated@@293 $generated@@295))) (= ($generated@@287 $generated@@294 $generated@@295)  (and (= ($generated@@91 $generated@@294) ($generated@@91 $generated@@295)) ($generated@@287 ($generated@@89 $generated@@294) ($generated@@89 $generated@@295)))))
 :pattern ( ($generated@@287 $generated@@294 $generated@@295) ($generated@@293 $generated@@294))
 :pattern ( ($generated@@287 $generated@@294 $generated@@295) ($generated@@293 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@70)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@107 $generated@@92 $generated@@4)) (= (type $generated@@299) $generated@@70)) (= ($generated@@86 $generated@@298 ($generated@@296 $generated@@299)) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@92) ($generated@@0 ($generated@@112 $generated@@298 $generated@@300))) ($generated@@277 $generated@@300 $generated@@299))
 :pattern ( ($generated@@112 $generated@@298 $generated@@300))
))))
 :pattern ( ($generated@@86 $generated@@298 ($generated@@296 $generated@@299)))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@70)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) ($generated@@107 $generated@@92 $generated@@4)) (= (type $generated@@304) $generated@@70)) (= ($generated@@86 $generated@@303 ($generated@@301 $generated@@304)) (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@92) ($generated@@0 ($generated@@112 $generated@@303 $generated@@305))) ($generated@@277 $generated@@305 $generated@@304))
 :pattern ( ($generated@@112 $generated@@303 $generated@@305))
))))
 :pattern ( ($generated@@86 $generated@@303 ($generated@@301 $generated@@304)))
)))
(assert (forall (($generated@@306 Int) ) (! (= ($generated@@190 $generated@@306) $generated@@306)
 :pattern ( ($generated@@190 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (= ($generated@@191 $generated@@307) $generated@@307)
 :pattern ( ($generated@@191 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (= (type $generated@@308) $generated@@84) (= (type $generated@@309) $generated@@84)) (and ($generated@@88 $generated@@308) ($generated@@88 $generated@@309))) (= ($generated@@287 $generated@@308 $generated@@309) true))
 :pattern ( ($generated@@287 $generated@@308 $generated@@309) ($generated@@88 $generated@@308))
 :pattern ( ($generated@@287 $generated@@308 $generated@@309) ($generated@@88 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (! (= (type ($generated@@310 $generated@@311 $generated@@312)) $generated@@84)
 :pattern ( ($generated@@310 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (= (type $generated@@313) $generated@@70) (= (type $generated@@314) $generated@@92)) (= (type $generated@@315) $generated@@84)) (= ($generated@@86 ($generated@@310 $generated@@314 $generated@@315) ($generated@@87 $generated@@313))  (and ($generated@@277 $generated@@314 $generated@@313) ($generated@@86 $generated@@315 ($generated@@87 $generated@@313)))))
 :pattern ( ($generated@@86 ($generated@@310 $generated@@314 $generated@@315) ($generated@@87 $generated@@313)))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@317) $generated@@70) (= (type $generated@@318) $generated@@70)) (= (type $generated@@319) $generated@@92)) (= (type $generated@@320) $generated@@92)) (= (type $generated@@321) ($generated@@107 $generated@@108 $generated@@109))) ($generated@@273 $generated@@321)) (= ($generated@@105 ($generated@@276 $generated@@319 $generated@@320) ($generated@@174 $generated@@317 $generated@@318) $generated@@321)  (and ($generated@@316 $generated@@319 $generated@@317 $generated@@321) ($generated@@316 $generated@@320 $generated@@318 $generated@@321))))
 :pattern ( ($generated@@105 ($generated@@276 $generated@@319 $generated@@320) ($generated@@174 $generated@@317 $generated@@318) $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@84) (= ($generated@@173 $generated@@322) (= ($generated@@187 $generated@@322) $generated@@62)))
 :pattern ( ($generated@@173 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@84) (= ($generated@@88 $generated@@323) (= ($generated@@187 $generated@@323) $generated@@64)))
 :pattern ( ($generated@@88 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@84) (= ($generated@@293 $generated@@324) (= ($generated@@187 $generated@@324) $generated@@66)))
 :pattern ( ($generated@@293 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@84) ($generated@@173 $generated@@325)) (exists (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (and (and (= (type $generated@@326) $generated@@92) (= (type $generated@@327) $generated@@92)) (= $generated@@325 ($generated@@276 $generated@@326 $generated@@327)))
 :no-pattern (type $generated@@326)
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
)))
 :pattern ( ($generated@@173 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@84) ($generated@@293 $generated@@328)) (exists (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (and (and (= (type $generated@@329) $generated@@92) (= (type $generated@@330) $generated@@84)) (= $generated@@328 ($generated@@310 $generated@@329 $generated@@330)))
 :no-pattern (type $generated@@329)
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
)))
 :pattern ( ($generated@@293 $generated@@328))
)))
(assert  (and (and (forall (($generated@@335 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@335)) 18)) (forall (($generated@@336 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@333 $generated@@336))
))) (forall (($generated@@337 T@T) ) (! (= (type ($generated@@331 $generated@@337)) ($generated@@333 $generated@@337))
 :pattern ( ($generated@@331 $generated@@337))
))))
(assert (forall (($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@338)) 0)
 :pattern ( ($generated@@331 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@84) ($generated@@88 $generated@@339)) (= $generated@@339 $generated@@188))
 :pattern ( ($generated@@88 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@2) (= ($generated@@86 $generated@@340 $generated@@169) (<= ($generated@@190 0) ($generated $generated@@340))))
 :pattern ( ($generated@@86 $generated@@340 $generated@@169))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@92)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@70) (= (type $generated@@345) ($generated@@107 $generated@@108 $generated@@109))) (= ($generated@@316 ($generated@@341 $generated@@343) $generated@@344 $generated@@345) ($generated@@105 $generated@@343 $generated@@344 $generated@@345)))
 :pattern ( ($generated@@316 ($generated@@341 $generated@@343) $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@348 T@T) ) (! (= (type ($generated@@347 $generated@@348)) ($generated@@107 $generated@@348 $generated@@2))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@110 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@107 $generated@@350 $generated@@2)) (and (= (= ($generated@@346 $generated@@349) 0) (= $generated@@349 ($generated@@347 $generated@@350))) (=> (not (= ($generated@@346 $generated@@349) 0)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) (< 0 ($generated ($generated@@112 $generated@@349 $generated@@351))))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (= (type ($generated@@352 $generated@@353)) $generated@@75)
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@70) (and (= ($generated@@78 ($generated@@87 $generated@@354)) $generated@@65) (= ($generated@@352 ($generated@@87 $generated@@354)) $generated@@69)))
 :pattern ( ($generated@@87 $generated@@354))
)))
(assert  (and (and (and (and (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (= ($generated@@1 ($generated@@357 $generated@@360 $generated@@361)) 19)) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@358 ($generated@@357 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@357 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@359 ($generated@@357 $generated@@364 $generated@@365)) $generated@@365)
 :pattern ( ($generated@@357 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@358 (type $generated@@366))))
(= (type ($generated@@355 $generated@@366)) ($generated@@107 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@366))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= (type ($generated@@356 $generated@@368 $generated@@369)) ($generated@@357 $generated@@368 $generated@@369))
 :pattern ( ($generated@@356 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@T) ) (! (let (($generated@@372 (type $generated@@370)))
 (not ($generated@@0 ($generated@@112 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370))))
 :pattern ( (let (($generated@@372 (type $generated@@370)))
($generated@@112 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370)))
)))
(assert  (and (and (and (and (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (= ($generated@@1 ($generated@@375 $generated@@378 $generated@@379)) 20)) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@375 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@377 ($generated@@375 $generated@@382 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@375 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@376 (type $generated@@384))))
(= (type ($generated@@373 $generated@@384)) ($generated@@107 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@384))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= (type ($generated@@374 $generated@@386 $generated@@387)) ($generated@@375 $generated@@386 $generated@@387))
 :pattern ( ($generated@@374 $generated@@386 $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@T) ) (! (let (($generated@@390 (type $generated@@388)))
 (not ($generated@@0 ($generated@@112 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388))))
 :pattern ( (let (($generated@@390 (type $generated@@388)))
($generated@@112 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388)))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@110 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@107 $generated@@392 $generated@@2)) (= ($generated@@201 $generated@@391) (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@392) (and (<= 0 ($generated ($generated@@112 $generated@@391 $generated@@393))) (<= ($generated ($generated@@112 $generated@@391 $generated@@393)) ($generated@@346 $generated@@391))))
 :pattern ( ($generated@@112 $generated@@391 $generated@@393))
)))))
 :pattern ( ($generated@@201 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@92) ($generated@@277 $generated@@394 $generated@@169)) (and (= ($generated@@341 ($generated@@90 $generated@@2 $generated@@394)) $generated@@394) ($generated@@86 ($generated@@90 $generated@@2 $generated@@394) $generated@@169)))
 :pattern ( ($generated@@277 $generated@@394 $generated@@169))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@359 (type $generated@@395))))
(let (($generated@@397 ($generated@@358 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@357 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@356 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) ($generated@@0 ($generated@@112 ($generated@@355 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@355 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@359 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400)) ($generated@@107 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@359 (type $generated@@402))))
(let (($generated@@404 ($generated@@358 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@357 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@356 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@403) ($generated@@0 ($generated@@112 ($generated@@399 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@399 $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@377 (type $generated@@406))))
(let (($generated@@408 ($generated@@376 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@375 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@374 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) ($generated@@0 ($generated@@112 ($generated@@373 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@373 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@377 (type $generated@@411))))
(= (type ($generated@@410 $generated@@411)) ($generated@@107 $generated@@412 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@377 (type $generated@@413))))
(let (($generated@@415 ($generated@@376 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@375 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@374 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@414) ($generated@@0 ($generated@@112 ($generated@@410 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@410 $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 Int) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@83) (= (type $generated@@419) $generated@@84)) (= ($generated@@81 ($generated@@82 $generated@@417) $generated@@418 $generated@@419) ($generated@@81 $generated@@417 $generated@@418 $generated@@419)))
 :pattern ( ($generated@@81 ($generated@@82 $generated@@417) $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@107 $generated@@92 $generated@@2)) (= (type $generated@@421) $generated@@70)) (= ($generated@@86 $generated@@420 ($generated@@200 $generated@@421)) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@92) (< 0 ($generated ($generated@@112 $generated@@420 $generated@@422)))) ($generated@@277 $generated@@422 $generated@@421))
 :pattern ( ($generated@@112 $generated@@420 $generated@@422))
))))
 :pattern ( ($generated@@86 $generated@@420 ($generated@@200 $generated@@421)))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@107 $generated@@92 $generated@@4)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@107 $generated@@108 $generated@@109))) (= ($generated@@105 $generated@@423 ($generated@@296 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@92) ($generated@@0 ($generated@@112 $generated@@423 $generated@@426))) ($generated@@316 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@112 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@105 $generated@@423 ($generated@@296 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@427) ($generated@@107 $generated@@92 $generated@@4)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@107 $generated@@108 $generated@@109))) (= ($generated@@105 $generated@@427 ($generated@@301 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@92) ($generated@@0 ($generated@@112 $generated@@427 $generated@@430))) ($generated@@316 $generated@@430 $generated@@428 $generated@@429))
 :pattern ( ($generated@@112 $generated@@427 $generated@@430))
))))
 :pattern ( ($generated@@105 $generated@@427 ($generated@@301 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(= ($generated ($generated@@112 ($generated@@347 $generated@@432) $generated@@431)) 0))
 :pattern ( (let (($generated@@432 (type $generated@@431)))
($generated@@112 ($generated@@347 $generated@@432) $generated@@431)))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@107 $generated@@92 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@359 (type $generated@@436))))
(let (($generated@@438 ($generated@@358 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@107 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@357 $generated@@92 $generated@@92)) (= (type $generated@@440) $generated@@92)) (= ($generated@@0 ($generated@@112 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@112 ($generated@@355 $generated@@439) ($generated@@181 ($generated@@90 $generated@@84 $generated@@440)))) (= ($generated@@112 ($generated@@434 $generated@@439) ($generated@@181 ($generated@@90 $generated@@84 $generated@@440))) ($generated@@182 ($generated@@90 $generated@@84 $generated@@440))))))
 :pattern ( ($generated@@112 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@107 $generated@@92 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@377 (type $generated@@444))))
(let (($generated@@446 ($generated@@376 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@107 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@375 $generated@@92 $generated@@92)) (= (type $generated@@448) $generated@@92)) (= ($generated@@0 ($generated@@112 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@112 ($generated@@373 $generated@@447) ($generated@@181 ($generated@@90 $generated@@84 $generated@@448)))) (= ($generated@@112 ($generated@@442 $generated@@447) ($generated@@181 ($generated@@90 $generated@@84 $generated@@448))) ($generated@@182 ($generated@@90 $generated@@84 $generated@@448))))))
 :pattern ( ($generated@@112 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@358 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@357 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@112 ($generated@@399 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@112 ($generated@@355 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@112 ($generated@@434 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@112 ($generated@@355 $generated@@449) $generated@@453))
 :pattern ( ($generated@@112 ($generated@@434 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@112 ($generated@@399 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@376 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@375 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@112 ($generated@@410 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@112 ($generated@@373 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@112 ($generated@@442 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@112 ($generated@@373 $generated@@454) $generated@@458))
 :pattern ( ($generated@@112 ($generated@@442 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@112 ($generated@@410 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@357 $generated@@92 $generated@@92)) (= (type $generated@@463) $generated@@70)) (= (type $generated@@464) $generated@@70)) (= (type $generated@@465) ($generated@@107 $generated@@108 $generated@@109))) (= ($generated@@105 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@92) ($generated@@0 ($generated@@112 ($generated@@355 $generated@@462) $generated@@466))) (and ($generated@@316 ($generated@@112 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@316 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@112 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@112 ($generated@@355 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@105 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@375 $generated@@92 $generated@@92)) (= (type $generated@@471) $generated@@70)) (= (type $generated@@472) $generated@@70)) (= (type $generated@@473) ($generated@@107 $generated@@108 $generated@@109))) (= ($generated@@105 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@92) ($generated@@0 ($generated@@112 ($generated@@373 $generated@@470) $generated@@474))) (and ($generated@@316 ($generated@@112 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@316 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@112 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@112 ($generated@@373 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@105 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@84)) ($generated@@86 $generated@@476 ($generated@@87 $generated@@475))) (or ($generated@@88 $generated@@476) ($generated@@293 $generated@@476)))
 :pattern ( ($generated@@293 $generated@@476) ($generated@@86 $generated@@476 ($generated@@87 $generated@@475)))
 :pattern ( ($generated@@88 $generated@@476) ($generated@@86 $generated@@476 ($generated@@87 $generated@@475)))
)))
(assert (forall (($generated@@478 T@T) ) (! (= (type ($generated@@477 $generated@@478)) ($generated@@107 $generated@@478 $generated@@4))
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@377 (type $generated@@479))))
(let (($generated@@481 ($generated@@376 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@375 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@374 $generated@@481 $generated@@480)) (= ($generated@@373 $generated@@479) ($generated@@477 $generated@@481))))))
 :pattern ( ($generated@@373 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@377 (type $generated@@482))))
(let (($generated@@484 ($generated@@376 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@375 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@374 $generated@@484 $generated@@483)) (= ($generated@@410 $generated@@482) ($generated@@477 $generated@@483))))))
 :pattern ( ($generated@@410 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@377 (type $generated@@485))))
(let (($generated@@487 ($generated@@376 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@375 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@374 $generated@@487 $generated@@486)) (= ($generated@@441 $generated@@485) ($generated@@477 $generated@@92))))))
 :pattern ( ($generated@@441 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@359 (type $generated@@488))))
(let (($generated@@490 ($generated@@358 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@357 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@356 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@92) (= (type $generated@@492) $generated@@92)) ($generated@@0 ($generated@@112 ($generated@@433 $generated@@488) ($generated@@341 ($generated@@276 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@433 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@377 (type $generated@@493))))
(let (($generated@@495 ($generated@@376 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@375 $generated@@495 $generated@@494)) (or (= $generated@@493 ($generated@@374 $generated@@495 $generated@@494)) (exists (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (and (and (= (type $generated@@496) $generated@@92) (= (type $generated@@497) $generated@@92)) ($generated@@0 ($generated@@112 ($generated@@441 $generated@@493) ($generated@@341 ($generated@@276 $generated@@496 $generated@@497)))))
 :no-pattern (type $generated@@496)
 :no-pattern (type $generated@@497)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
))))))
 :pattern ( ($generated@@441 $generated@@493))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@92) ($generated@@277 $generated@@498 $generated@@46)) (and (= ($generated@@341 ($generated@@90 $generated@@2 $generated@@498)) $generated@@498) ($generated@@86 ($generated@@90 $generated@@2 $generated@@498) $generated@@46)))
 :pattern ( ($generated@@277 $generated@@498 $generated@@46))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@92) ($generated@@277 $generated@@499 $generated@@47)) (and (= ($generated@@341 ($generated@@90 $generated@@3 $generated@@499)) $generated@@499) ($generated@@86 ($generated@@90 $generated@@3 $generated@@499) $generated@@47)))
 :pattern ( ($generated@@277 $generated@@499 $generated@@47))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@92) ($generated@@277 $generated@@500 $generated@@44)) (and (= ($generated@@341 ($generated@@90 $generated@@4 $generated@@500)) $generated@@500) ($generated@@86 ($generated@@90 $generated@@4 $generated@@500) $generated@@44)))
 :pattern ( ($generated@@277 $generated@@500 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@501) 21))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@92) ($generated@@277 $generated@@502 $generated@@45)) (and (= ($generated@@341 ($generated@@90 $generated@@501 $generated@@502)) $generated@@502) ($generated@@86 ($generated@@90 $generated@@501 $generated@@502) $generated@@45)))
 :pattern ( ($generated@@277 $generated@@502 $generated@@45))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@277 ($generated@@341 $generated@@503) $generated@@504) ($generated@@86 $generated@@503 $generated@@504)))
 :pattern ( ($generated@@277 ($generated@@341 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@110 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@107 $generated@@506 $generated@@2)) (<= 0 ($generated@@346 $generated@@505))))
 :pattern ( ($generated@@346 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@334 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@333 $generated@@508)) (<= 0 ($generated@@332 $generated@@507))))
 :pattern ( ($generated@@332 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@459 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@459 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@459 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@459 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@70) (= (type $generated@@518) $generated@@70)) (= ($generated@@78 ($generated@@459 $generated@@517 $generated@@518)) $generated@@58))
 :pattern ( ($generated@@459 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@70) (= (type $generated@@522) $generated@@70)) (= ($generated@@519 ($generated@@467 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@467 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@70) (= (type $generated@@526) $generated@@70)) (= ($generated@@523 ($generated@@467 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@467 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@70) (= (type $generated@@528) $generated@@70)) (= ($generated@@78 ($generated@@467 $generated@@527 $generated@@528)) $generated@@59))
 :pattern ( ($generated@@467 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@92) (= (type $generated@@530) $generated@@92)) (= ($generated@@187 ($generated@@276 $generated@@529 $generated@@530)) $generated@@62))
 :pattern ( ($generated@@276 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@70) (= (type $generated@@534) $generated@@70)) (= ($generated@@531 ($generated@@174 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@174 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@70) (= (type $generated@@538) $generated@@70)) (= ($generated@@535 ($generated@@174 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@174 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@92) (= (type $generated@@540) $generated@@92)) (= ($generated@@181 ($generated@@276 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@276 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@92) (= (type $generated@@542) $generated@@92)) (= ($generated@@182 ($generated@@276 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@276 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@92) (= (type $generated@@544) $generated@@84)) (= ($generated@@187 ($generated@@310 $generated@@543 $generated@@544)) $generated@@66))
 :pattern ( ($generated@@310 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@92) (= (type $generated@@546) $generated@@84)) (= ($generated@@91 ($generated@@310 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@310 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@92) (= (type $generated@@548) $generated@@84)) (= ($generated@@89 ($generated@@310 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@310 $generated@@547 $generated@@548))
)))
(assert  (and (forall (($generated@@551 T@U) ) (! (= (type ($generated@@549 $generated@@551)) $generated@@70)
 :pattern ( ($generated@@549 $generated@@551))
)) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (! (let (($generated@@554 ($generated@@334 (type $generated@@552))))
(= (type ($generated@@550 $generated@@552 $generated@@553)) $generated@@554))
 :pattern ( ($generated@@550 $generated@@552 $generated@@553))
))))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@333 $generated@@92)) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) ($generated@@107 $generated@@108 $generated@@109))) (= ($generated@@105 $generated@@555 ($generated@@549 $generated@@556) $generated@@557) (forall (($generated@@558 Int) ) (!  (=> (and (<= 0 $generated@@558) (< $generated@@558 ($generated@@332 $generated@@555))) ($generated@@316 ($generated@@550 $generated@@555 $generated@@558) $generated@@556 $generated@@557))
 :pattern ( ($generated@@550 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@105 $generated@@555 ($generated@@549 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@559 ($generated@@106 $generated@@560)) $generated@@560)
 :pattern ( ($generated@@106 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@70)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@70) (= ($generated@@561 ($generated@@296 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@296 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@70) (= ($generated@@78 ($generated@@296 $generated@@564)) $generated@@54))
 :pattern ( ($generated@@296 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@70)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@70) (= ($generated@@565 ($generated@@301 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@301 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@70) (= ($generated@@78 ($generated@@301 $generated@@568)) $generated@@55))
 :pattern ( ($generated@@301 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@70)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@70) (= ($generated@@569 ($generated@@200 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@200 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@70) (= ($generated@@78 ($generated@@200 $generated@@572)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@70)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@70) (= ($generated@@573 ($generated@@549 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@549 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@70) (= ($generated@@78 ($generated@@549 $generated@@576)) $generated@@57))
 :pattern ( ($generated@@549 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@70)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@70) (= ($generated@@577 ($generated@@87 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@87 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
(= ($generated@@90 $generated@@581 ($generated@@341 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@341 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@357 $generated@@92 $generated@@92)) (= (type $generated@@583) $generated@@70)) (= (type $generated@@584) $generated@@70)) (= ($generated@@86 $generated@@582 ($generated@@459 $generated@@583 $generated@@584)) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@92) ($generated@@0 ($generated@@112 ($generated@@355 $generated@@582) $generated@@585))) (and ($generated@@277 ($generated@@112 ($generated@@434 $generated@@582) $generated@@585) $generated@@584) ($generated@@277 $generated@@585 $generated@@583)))
 :pattern ( ($generated@@112 ($generated@@434 $generated@@582) $generated@@585))
 :pattern ( ($generated@@112 ($generated@@355 $generated@@582) $generated@@585))
))))
 :pattern ( ($generated@@86 $generated@@582 ($generated@@459 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@375 $generated@@92 $generated@@92)) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) $generated@@70)) (= ($generated@@86 $generated@@586 ($generated@@467 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@92) ($generated@@0 ($generated@@112 ($generated@@373 $generated@@586) $generated@@589))) (and ($generated@@277 ($generated@@112 ($generated@@442 $generated@@586) $generated@@589) $generated@@588) ($generated@@277 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@112 ($generated@@442 $generated@@586) $generated@@589))
 :pattern ( ($generated@@112 ($generated@@373 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@86 $generated@@586 ($generated@@467 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@92) (= (type $generated@@593) $generated@@92)) (< ($generated@@590 $generated@@592) ($generated@@591 ($generated@@276 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@276 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@92) (= (type $generated@@595) $generated@@92)) (< ($generated@@590 $generated@@595) ($generated@@591 ($generated@@276 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@276 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@92) (= (type $generated@@597) $generated@@84)) (< ($generated@@590 $generated@@596) ($generated@@591 ($generated@@310 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@310 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@92) (= (type $generated@@599) $generated@@84)) (< ($generated@@591 $generated@@599) ($generated@@591 ($generated@@310 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@310 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@92) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@277 $generated@@600 ($generated@@459 $generated@@601 $generated@@602))) (and (= ($generated@@341 ($generated@@90 ($generated@@357 $generated@@92 $generated@@92) $generated@@600)) $generated@@600) ($generated@@86 ($generated@@90 ($generated@@357 $generated@@92 $generated@@92) $generated@@600) ($generated@@459 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@277 $generated@@600 ($generated@@459 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@92) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@277 $generated@@603 ($generated@@467 $generated@@604 $generated@@605))) (and (= ($generated@@341 ($generated@@90 ($generated@@375 $generated@@92 $generated@@92) $generated@@603)) $generated@@603) ($generated@@86 ($generated@@90 ($generated@@375 $generated@@92 $generated@@92) $generated@@603) ($generated@@467 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@277 $generated@@603 ($generated@@467 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@70) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) $generated@@92)) ($generated@@277 $generated@@608 ($generated@@174 $generated@@606 $generated@@607))) (and (= ($generated@@341 ($generated@@90 $generated@@84 $generated@@608)) $generated@@608) ($generated@@86 ($generated@@90 $generated@@84 $generated@@608) ($generated@@174 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@277 $generated@@608 ($generated@@174 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@84) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) ($generated@@107 $generated@@108 $generated@@109))) (and ($generated@@273 $generated@@611) (and ($generated@@293 $generated@@609) ($generated@@105 $generated@@609 ($generated@@87 $generated@@610) $generated@@611)))) ($generated@@316 ($generated@@91 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@316 ($generated@@91 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@612)))
 (not ($generated@@0 ($generated@@112 ($generated@@477 $generated@@613) $generated@@612))))
 :pattern ( (let (($generated@@613 (type $generated@@612)))
($generated@@112 ($generated@@477 $generated@@613) $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@70) (= (type $generated@@615) $generated@@70)) (and (= ($generated@@78 ($generated@@174 $generated@@614 $generated@@615)) $generated@@63) (= ($generated@@352 ($generated@@174 $generated@@614 $generated@@615)) $generated@@68)))
 :pattern ( ($generated@@174 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@84) (= ($generated@@590 ($generated@@341 $generated@@616)) ($generated@@591 $generated@@616)))
 :pattern ( ($generated@@590 ($generated@@341 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@92) ($generated@@277 $generated@@617 ($generated@@106 0))) (and (= ($generated@@341 ($generated@@90 $generated@@2 $generated@@617)) $generated@@617) ($generated@@86 ($generated@@90 ($generated@@107 $generated@@92 $generated@@4) $generated@@617) ($generated@@106 0))))
 :pattern ( ($generated@@277 $generated@@617 ($generated@@106 0)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@92) (= (type $generated@@619) $generated@@70)) ($generated@@277 $generated@@618 ($generated@@296 $generated@@619))) (and (= ($generated@@341 ($generated@@90 ($generated@@107 $generated@@92 $generated@@4) $generated@@618)) $generated@@618) ($generated@@86 ($generated@@90 ($generated@@107 $generated@@92 $generated@@4) $generated@@618) ($generated@@296 $generated@@619))))
 :pattern ( ($generated@@277 $generated@@618 ($generated@@296 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@92) (= (type $generated@@621) $generated@@70)) ($generated@@277 $generated@@620 ($generated@@301 $generated@@621))) (and (= ($generated@@341 ($generated@@90 ($generated@@107 $generated@@92 $generated@@4) $generated@@620)) $generated@@620) ($generated@@86 ($generated@@90 ($generated@@107 $generated@@92 $generated@@4) $generated@@620) ($generated@@301 $generated@@621))))
 :pattern ( ($generated@@277 $generated@@620 ($generated@@301 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@92) (= (type $generated@@623) $generated@@70)) ($generated@@277 $generated@@622 ($generated@@200 $generated@@623))) (and (= ($generated@@341 ($generated@@90 ($generated@@107 $generated@@92 $generated@@2) $generated@@622)) $generated@@622) ($generated@@86 ($generated@@90 ($generated@@107 $generated@@92 $generated@@2) $generated@@622) ($generated@@200 $generated@@623))))
 :pattern ( ($generated@@277 $generated@@622 ($generated@@200 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@92) (= (type $generated@@625) $generated@@70)) ($generated@@277 $generated@@624 ($generated@@549 $generated@@625))) (and (= ($generated@@341 ($generated@@90 ($generated@@333 $generated@@92) $generated@@624)) $generated@@624) ($generated@@86 ($generated@@90 ($generated@@333 $generated@@92) $generated@@624) ($generated@@549 $generated@@625))))
 :pattern ( ($generated@@277 $generated@@624 ($generated@@549 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@70) (= (type $generated@@627) $generated@@92)) ($generated@@277 $generated@@627 ($generated@@87 $generated@@626))) (and (= ($generated@@341 ($generated@@90 $generated@@84 $generated@@627)) $generated@@627) ($generated@@86 ($generated@@90 $generated@@84 $generated@@627) ($generated@@87 $generated@@626))))
 :pattern ( ($generated@@277 $generated@@627 ($generated@@87 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@84) (= (type $generated@@629) $generated@@70)) (= (type $generated@@630) ($generated@@107 $generated@@108 $generated@@109))) (and ($generated@@273 $generated@@630) (and ($generated@@293 $generated@@628) ($generated@@105 $generated@@628 ($generated@@87 $generated@@629) $generated@@630)))) ($generated@@105 ($generated@@89 $generated@@628) ($generated@@87 $generated@@629) $generated@@630))
 :pattern ( ($generated@@105 ($generated@@89 $generated@@628) ($generated@@87 $generated@@629) $generated@@630))
)))
(assert (= ($generated@@78 $generated@@169) $generated@@61))
(assert (= ($generated@@352 $generated@@169) $generated@@67))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@107 $generated@@92 $generated@@2)) (= (type $generated@@632) $generated@@70)) (= (type $generated@@633) ($generated@@107 $generated@@108 $generated@@109))) (= ($generated@@105 $generated@@631 ($generated@@200 $generated@@632) $generated@@633) (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@92) (< 0 ($generated ($generated@@112 $generated@@631 $generated@@634)))) ($generated@@316 $generated@@634 $generated@@632 $generated@@633))
 :pattern ( ($generated@@112 $generated@@631 $generated@@634))
))))
 :pattern ( ($generated@@105 $generated@@631 ($generated@@200 $generated@@632) $generated@@633))
)))
(assert (= $generated@@188 ($generated@@191 $generated@@188)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@84) (= (type $generated@@636) $generated@@70)) (= (type $generated@@637) ($generated@@107 $generated@@108 $generated@@109))) (and ($generated@@273 $generated@@637) (and ($generated@@173 $generated@@635) (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) $generated@@70) ($generated@@105 $generated@@635 ($generated@@174 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@105 $generated@@635 ($generated@@174 $generated@@636 $generated@@638) $generated@@637))
))))) ($generated@@316 ($generated@@181 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@316 ($generated@@181 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@84) (= (type $generated@@640) $generated@@70)) (= (type $generated@@641) ($generated@@107 $generated@@108 $generated@@109))) (and ($generated@@273 $generated@@641) (and ($generated@@173 $generated@@639) (exists (($generated@@642 T@U) ) (!  (and (= (type $generated@@642) $generated@@70) ($generated@@105 $generated@@639 ($generated@@174 $generated@@642 $generated@@640) $generated@@641))
 :pattern ( ($generated@@105 $generated@@639 ($generated@@174 $generated@@642 $generated@@640) $generated@@641))
))))) ($generated@@316 ($generated@@182 $generated@@639) $generated@@640 $generated@@641))
 :pattern ( ($generated@@316 ($generated@@182 $generated@@639) $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@92) (= (type $generated@@644) $generated@@92)) (= ($generated@@276 ($generated@@191 $generated@@643) ($generated@@191 $generated@@644)) ($generated@@191 ($generated@@276 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@276 ($generated@@191 $generated@@643) ($generated@@191 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@92) (= (type $generated@@646) $generated@@84)) (= ($generated@@310 ($generated@@191 $generated@@645) ($generated@@191 $generated@@646)) ($generated@@191 ($generated@@310 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@310 ($generated@@191 $generated@@645) ($generated@@191 $generated@@646)))
)))
(assert (forall (($generated@@647 Int) ) (! (= ($generated@@341 ($generated@@8 ($generated@@190 $generated@@647))) ($generated@@191 ($generated@@341 ($generated@@8 $generated@@647))))
 :pattern ( ($generated@@341 ($generated@@8 ($generated@@190 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ) (! (= ($generated@@341 ($generated@@191 $generated@@648)) ($generated@@191 ($generated@@341 $generated@@648)))
 :pattern ( ($generated@@341 ($generated@@191 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (! (let (($generated@@650 ($generated@@334 (type $generated@@649))))
 (=> (and (= (type $generated@@649) ($generated@@333 $generated@@650)) (= ($generated@@332 $generated@@649) 0)) (= $generated@@649 ($generated@@331 $generated@@650))))
 :pattern ( ($generated@@332 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@652)))
 (=> (and (and (= (type $generated@@651) ($generated@@107 $generated@@654 $generated@@2)) (= (type $generated@@653) $generated@@2)) (<= 0 ($generated $generated@@653))) (= ($generated@@346 ($generated@@113 $generated@@651 $generated@@652 $generated@@653)) (+ (- ($generated@@346 $generated@@651) ($generated ($generated@@112 $generated@@651 $generated@@652))) ($generated $generated@@653)))))
 :pattern ( ($generated@@346 ($generated@@113 $generated@@651 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@107 $generated@@108 $generated@@109)) (= (type $generated@@656) $generated@@2)) ($generated@@105 $generated@@656 $generated@@46 $generated@@655))
 :pattern ( ($generated@@105 $generated@@656 $generated@@46 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@107 $generated@@108 $generated@@109)) (= (type $generated@@658) $generated@@3)) ($generated@@105 $generated@@658 $generated@@47 $generated@@657))
 :pattern ( ($generated@@105 $generated@@658 $generated@@47 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@107 $generated@@108 $generated@@109)) (= (type $generated@@660) $generated@@4)) ($generated@@105 $generated@@660 $generated@@44 $generated@@659))
 :pattern ( ($generated@@105 $generated@@660 $generated@@44 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@107 $generated@@108 $generated@@109)) (= (type $generated@@662) $generated@@501)) ($generated@@105 $generated@@662 $generated@@45 $generated@@661))
 :pattern ( ($generated@@105 $generated@@662 $generated@@45 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@107 $generated@@108 $generated@@109)) (= (type $generated@@664) $generated@@92)) ($generated@@105 $generated@@664 $generated@@48 $generated@@663))
 :pattern ( ($generated@@105 $generated@@664 $generated@@48 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@665) $generated@@70) (= (type $generated@@666) $generated@@92)) (= (type $generated@@667) $generated@@84)) (= (type $generated@@668) ($generated@@107 $generated@@108 $generated@@109))) ($generated@@273 $generated@@668)) (= ($generated@@105 ($generated@@310 $generated@@666 $generated@@667) ($generated@@87 $generated@@665) $generated@@668)  (and ($generated@@316 $generated@@666 $generated@@665 $generated@@668) ($generated@@105 $generated@@667 ($generated@@87 $generated@@665) $generated@@668))))
 :pattern ( ($generated@@105 ($generated@@310 $generated@@666 $generated@@667) ($generated@@87 $generated@@665) $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@333 $generated@@92)) (= (type $generated@@670) $generated@@70)) (= ($generated@@86 $generated@@669 ($generated@@549 $generated@@670)) (forall (($generated@@671 Int) ) (!  (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@332 $generated@@669))) ($generated@@277 ($generated@@550 $generated@@669 $generated@@671) $generated@@670))
 :pattern ( ($generated@@550 $generated@@669 $generated@@671))
))))
 :pattern ( ($generated@@86 $generated@@669 ($generated@@549 $generated@@670)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 Int) ) (!  (=> (= (type $generated@@673) ($generated@@333 $generated@@92)) (=> (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@332 $generated@@673))) (< ($generated@@591 ($generated@@90 $generated@@84 ($generated@@550 $generated@@673 $generated@@674))) ($generated@@672 $generated@@673))))
 :pattern ( ($generated@@591 ($generated@@90 $generated@@84 ($generated@@550 $generated@@673 $generated@@674))))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) ($generated@@357 $generated@@92 $generated@@92)) (= (type $generated@@676) $generated@@70)) (= (type $generated@@677) $generated@@70)) ($generated@@86 $generated@@675 ($generated@@459 $generated@@676 $generated@@677))) (and (and ($generated@@86 ($generated@@355 $generated@@675) ($generated@@296 $generated@@676)) ($generated@@86 ($generated@@399 $generated@@675) ($generated@@296 $generated@@677))) ($generated@@86 ($generated@@433 $generated@@675) ($generated@@296 ($generated@@174 $generated@@676 $generated@@677)))))
 :pattern ( ($generated@@86 $generated@@675 ($generated@@459 $generated@@676 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (= (type $generated@@678) ($generated@@375 $generated@@92 $generated@@92)) (= (type $generated@@679) $generated@@70)) (= (type $generated@@680) $generated@@70)) ($generated@@86 $generated@@678 ($generated@@467 $generated@@679 $generated@@680))) (and (and ($generated@@86 ($generated@@373 $generated@@678) ($generated@@301 $generated@@679)) ($generated@@86 ($generated@@410 $generated@@678) ($generated@@301 $generated@@680))) ($generated@@86 ($generated@@441 $generated@@678) ($generated@@301 ($generated@@174 $generated@@679 $generated@@680)))))
 :pattern ( ($generated@@86 $generated@@678 ($generated@@467 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@2) ($generated@@86 $generated@@681 $generated@@46))
 :pattern ( ($generated@@86 $generated@@681 $generated@@46))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@3) ($generated@@86 $generated@@682 $generated@@47))
 :pattern ( ($generated@@86 $generated@@682 $generated@@47))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@4) ($generated@@86 $generated@@683 $generated@@44))
 :pattern ( ($generated@@86 $generated@@683 $generated@@44))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@501) ($generated@@86 $generated@@684 $generated@@45))
 :pattern ( ($generated@@86 $generated@@684 $generated@@45))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@92) ($generated@@86 $generated@@685 $generated@@48))
 :pattern ( ($generated@@86 $generated@@685 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@689) $generated@@84) (= (type $generated@@687) ($generated@@107 $generated@@108 $generated@@109))) (= (type $generated@@688) $generated@@84)) (= (type $generated@@692) $generated@@84)) (= (type $generated@@693) $generated@@84)) (= (type $generated@@695) ($generated@@207 $generated@@108 $generated@@4))) (= (type $generated@@696) $generated@@108)) (= (type $generated@@697) ($generated@@207 $generated@@108 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@699  (=> (and ($generated@@105 ($generated@@8 $generated@@686) $generated@@46 $generated@@687) ($generated@@105 $generated@@688 ($generated@@87 $generated@@46) $generated@@687)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (<= 0 $generated@@686) (= $generated@@686 $generated@@686))) (=> (or (<= 0 $generated@@686) (= $generated@@686 $generated@@686)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (< $generated@@686 $generated@@686) (and (= $generated@@686 $generated@@686) (< ($generated@@591 $generated@@688) ($generated@@591 $generated@@689))))) (=> (or (< $generated@@686 $generated@@686) (and (= $generated@@686 $generated@@686) (< ($generated@@591 $generated@@688) ($generated@@591 $generated@@689)))) (=> (and ($generated@@85 $generated@@686 $generated@@688) (= (ControlFlow 0 6) (- 0 5))) ($generated@@86 ($generated@@8 (+ (ite (= $generated@@686 $generated@@690) 1 0) ($generated@@81 ($generated@@82 $generated@@164) $generated@@686 $generated@@688))) $generated@@169)))))))))
(let (($generated@@700  (=> (and (not (= $generated@@686 $generated@@690)) (= (ControlFlow 0 10) 6)) $generated@@699)))
(let (($generated@@701  (=> (and (= $generated@@686 $generated@@690) (= (ControlFlow 0 9) 6)) $generated@@699)))
(let (($generated@@702  (=> (and (= $generated@@689 ($generated@@310 ($generated@@341 ($generated@@8 $generated@@691)) $generated@@692)) ($generated@@86 $generated@@692 ($generated@@87 $generated@@46))) (=> (and (and (and ($generated@@86 $generated@@688 ($generated@@87 $generated@@46)) ($generated@@105 $generated@@688 ($generated@@87 $generated@@46) $generated@@687)) (and (= $generated@@693 $generated@@692) ($generated@@86 $generated@@693 ($generated@@87 $generated@@46)))) (and (and (= $generated@@688 $generated@@693) (= $generated@@694 $generated@@691)) (and ($generated@@86 ($generated@@8 $generated@@694) $generated@@46) (= $generated@@690 $generated@@694)))) (and (=> (= (ControlFlow 0 11) 9) $generated@@701) (=> (= (ControlFlow 0 11) 10) $generated@@700))))))
(let (($generated@@703 true))
(let (($generated@@704  (=> (not (= $generated@@689 $generated@@188)) (and (=> (= (ControlFlow 0 12) 11) $generated@@702) (=> (= (ControlFlow 0 12) 4) $generated@@703)))))
(let (($generated@@705  (=> (and (= $generated@@689 $generated@@188) (= (ControlFlow 0 3) (- 0 2))) ($generated@@86 ($generated@@8 ($generated@@190 0)) $generated@@169))))
(let (($generated@@706  (=> (= $generated@@695 ($generated@@261 $generated@@696 $generated@@687 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 3) $generated@@705) (=> (= (ControlFlow 0 13) 12) $generated@@704)))))
(let (($generated@@707 true))
(let (($generated@@708  (=> (= $generated@@697 ($generated@@206 $generated@@696 $generated@@687 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 1) $generated@@707) (=> (= (ControlFlow 0 14) 13) $generated@@706)))))
(let (($generated@@709  (=> (and (and (and ($generated@@273 $generated@@687) ($generated@@698 $generated@@687)) ($generated@@86 $generated@@689 ($generated@@87 $generated@@46))) (and (= 1 $generated@@80) (= (ControlFlow 0 15) 14))) $generated@@708)))
$generated@@709))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@185 (Int) Int)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@200 (T@U T@U T@U) T@U)
(declare-fun $generated@@201 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@202 (T@T T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@293 (T@U T@U) T@U)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@328 (T@U) Int)
(declare-fun $generated@@329 (T@T) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@T T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@T) T@U)
(declare-fun $generated@@357 (T@T T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@T) T@U)
(declare-fun $generated@@482 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@531 (T@U Int) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@653 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@81)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@81)))
(assert (forall (($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) (= (type $generated@@166) $generated@@82)) (= ($generated@@79 $generated@@164 $generated@@165 $generated@@166) ($generated@@79 $generated@@162 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@79 ($generated@@161 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@84 $generated@@167 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@167 ($generated@@104 0)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@170 $generated@@171)) $generated@@68)
 :pattern ( ($generated@@169 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@68) (= (type $generated@@173) $generated@@68)) (= (type $generated@@174) $generated@@82)) ($generated@@84 $generated@@174 ($generated@@169 $generated@@172 $generated@@173))) ($generated@@168 $generated@@174))
 :pattern ( ($generated@@168 $generated@@174) ($generated@@84 $generated@@174 ($generated@@169 $generated@@172 $generated@@173)))
)))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@90)
 :pattern ( ($generated@@176 $generated@@178))
)) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@90)
 :pattern ( ($generated@@177 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@82) (= (type $generated@@181) $generated@@82)) true) (= ($generated@@175 $generated@@180 $generated@@181)  (and (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)) (= ($generated@@177 $generated@@180) ($generated@@177 $generated@@181)))))
 :pattern ( ($generated@@175 $generated@@180 $generated@@181))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@182 $generated@@184))
)) (= (type $generated@@183) $generated@@82)))
(assert (= ($generated@@182 $generated@@183) $generated@@63))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= (type ($generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@186 $generated@@187))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@189 T@U) ($generated@@190 Int) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@81) (= (type $generated@@191) $generated@@82)) (or ($generated@@83 ($generated@@185 $generated@@190) ($generated@@186 $generated@@191)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@191 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@186 ($generated@@11 ($generated@@86 ($generated@@186 $generated@@191)))))) (let (($generated@@192 ($generated@@186 ($generated@@87 ($generated@@186 $generated@@191)))))
($generated@@83 ($generated@@185 $generated@@190) $generated@@192))) (= ($generated@@79 ($generated@@80 $generated@@189) ($generated@@185 $generated@@190) ($generated@@186 $generated@@191)) (ite ($generated@@86 ($generated@@186 $generated@@191)) 0 (let (($generated@@193 ($generated@@186 ($generated@@87 ($generated@@186 $generated@@191)))))
(let (($generated@@194 ($generated@@185 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@186 $generated@@191)))))))
(+ (ite (= ($generated@@185 $generated@@190) $generated@@194) 1 0) ($generated@@79 ($generated@@80 $generated@@189) ($generated@@185 $generated@@190) $generated@@193))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@189) ($generated@@185 $generated@@190) ($generated@@186 $generated@@191)))
))))
(assert (forall (($generated@@197 T@U) ) (! (= (type ($generated@@195 $generated@@197)) $generated@@68)
 :pattern ( ($generated@@195 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@199) $generated@@68)) ($generated@@84 $generated@@198 ($generated@@195 $generated@@199))) ($generated@@196 $generated@@198))
 :pattern ( ($generated@@84 $generated@@198 ($generated@@195 $generated@@199)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@206 $generated@@207)) 17)) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@208 $generated@@209)) $generated@@208)
 :pattern ( ($generated@@202 $generated@@208 $generated@@209))
))) (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (! (= ($generated@@204 ($generated@@202 $generated@@210 $generated@@211)) $generated@@211)
 :pattern ( ($generated@@202 $generated@@210 $generated@@211))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@204 (type $generated@@212))))
(= (type ($generated@@200 $generated@@212 $generated@@213 $generated@@214)) $generated@@215))
 :pattern ( ($generated@@200 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 (type $generated@@219)))
(let (($generated@@221 (type $generated@@217)))
(= (type ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@202 $generated@@221 $generated@@220))))
 :pattern ( ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@204 (type $generated@@222))))
 (=> (= (type $generated@@225) $generated@@226) (= ($generated@@200 ($generated@@205 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@223 $generated@@224) $generated@@225)))
 :weight 0
))) (and (and (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@200 ($generated@@205 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@200 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@236 $generated@@238) (= ($generated@@200 ($generated@@205 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@200 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or true (= ($generated@@200 ($generated@@205 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@200 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
)))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ) (! (= (type ($generated@@201 $generated@@245 $generated@@246 $generated@@247 $generated@@248)) ($generated@@202 $generated@@106 $generated@@4))
 :pattern ( ($generated@@201 $generated@@245 $generated@@246 $generated@@247 $generated@@248))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Bool) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@71 (type $generated@@254))))
 (=> (and (and (and (and (= (type $generated@@249) $generated@@106) (= (type $generated@@250) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@251) ($generated@@70 $generated@@4))) (= (type $generated@@253) $generated@@106)) (= (type $generated@@254) ($generated@@70 $generated@@255))) (= ($generated@@0 ($generated@@200 ($generated@@201 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))  (=> (and (not (= $generated@@253 $generated@@249)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@250 $generated@@253) $generated@@251))) $generated@@252))))
 :pattern ( ($generated@@200 ($generated@@201 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@68) (= (type $generated@@258) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@256 $generated@@258)) ($generated@@103 $generated@@183 ($generated@@85 $generated@@257) $generated@@258))
 :pattern ( ($generated@@103 $generated@@183 ($generated@@85 $generated@@257) $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@259 $generated@@261 $generated@@262)) $generated@@82)
 :pattern ( ($generated@@259 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) $generated@@68)) (= (type $generated@@265) $generated@@90)) (= (type $generated@@266) $generated@@90)) (= ($generated@@84 ($generated@@259 $generated@@265 $generated@@266) ($generated@@169 $generated@@263 $generated@@264))  (and ($generated@@260 $generated@@265 $generated@@263) ($generated@@260 $generated@@266 $generated@@264))))
 :pattern ( ($generated@@84 ($generated@@259 $generated@@265 $generated@@266) ($generated@@169 $generated@@263 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@68) ($generated@@84 $generated@@183 ($generated@@85 $generated@@267)))
 :pattern ( ($generated@@84 $generated@@183 ($generated@@85 $generated@@267)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@82) (= (type $generated@@269) $generated@@82)) (= ($generated@@175 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@175 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@82) (= (type $generated@@272) $generated@@82)) (= ($generated@@270 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@270 $generated@@271 $generated@@272))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@273 T@U) ($generated@@274 Int) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@81) (= (type $generated@@275) $generated@@82)) (or ($generated@@83 $generated@@274 $generated@@275) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@275 ($generated@@85 $generated@@46))))) (<= ($generated@@185 0) ($generated@@79 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@79 $generated@@273 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@82) (= (type $generated@@278) $generated@@82)) (and ($generated@@276 $generated@@277) ($generated@@276 $generated@@278))) (= ($generated@@270 $generated@@277 $generated@@278)  (and (= ($generated@@89 $generated@@277) ($generated@@89 $generated@@278)) ($generated@@270 ($generated@@87 $generated@@277) ($generated@@87 $generated@@278)))))
 :pattern ( ($generated@@270 $generated@@277 $generated@@278) ($generated@@276 $generated@@277))
 :pattern ( ($generated@@270 $generated@@277 $generated@@278) ($generated@@276 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@68)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@282) $generated@@68)) (= ($generated@@84 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@90) ($generated@@0 ($generated@@110 $generated@@281 $generated@@283))) ($generated@@260 $generated@@283 $generated@@282))
 :pattern ( ($generated@@110 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@84 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@68)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@287) $generated@@68)) (= ($generated@@84 $generated@@286 ($generated@@284 $generated@@287)) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@90) ($generated@@0 ($generated@@110 $generated@@286 $generated@@288))) ($generated@@260 $generated@@288 $generated@@287))
 :pattern ( ($generated@@110 $generated@@286 $generated@@288))
))))
 :pattern ( ($generated@@84 $generated@@286 ($generated@@284 $generated@@287)))
)))
(assert (forall (($generated@@289 Int) ) (! (= ($generated@@185 $generated@@289) $generated@@289)
 :pattern ( ($generated@@185 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (= ($generated@@186 $generated@@290) $generated@@290)
 :pattern ( ($generated@@186 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) $generated@@82) (= (type $generated@@292) $generated@@82)) (and ($generated@@86 $generated@@291) ($generated@@86 $generated@@292))) (= ($generated@@270 $generated@@291 $generated@@292) true))
 :pattern ( ($generated@@270 $generated@@291 $generated@@292) ($generated@@86 $generated@@291))
 :pattern ( ($generated@@270 $generated@@291 $generated@@292) ($generated@@86 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@293 $generated@@294 $generated@@295)) $generated@@82)
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (= (type $generated@@296) $generated@@68) (= (type $generated@@297) $generated@@90)) (= (type $generated@@298) $generated@@82)) (= ($generated@@84 ($generated@@293 $generated@@297 $generated@@298) ($generated@@85 $generated@@296))  (and ($generated@@260 $generated@@297 $generated@@296) ($generated@@84 $generated@@298 ($generated@@85 $generated@@296)))))
 :pattern ( ($generated@@84 ($generated@@293 $generated@@297 $generated@@298) ($generated@@85 $generated@@296)))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) $generated@@68) (= (type $generated@@301) $generated@@68)) (= (type $generated@@302) $generated@@90)) (= (type $generated@@303) $generated@@90)) (= (type $generated@@304) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@256 $generated@@304)) (= ($generated@@103 ($generated@@259 $generated@@302 $generated@@303) ($generated@@169 $generated@@300 $generated@@301) $generated@@304)  (and ($generated@@299 $generated@@302 $generated@@300 $generated@@304) ($generated@@299 $generated@@303 $generated@@301 $generated@@304))))
 :pattern ( ($generated@@103 ($generated@@259 $generated@@302 $generated@@303) ($generated@@169 $generated@@300 $generated@@301) $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@82) (= ($generated@@168 $generated@@305) (= ($generated@@182 $generated@@305) $generated@@61)))
 :pattern ( ($generated@@168 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@82) (= ($generated@@86 $generated@@306) (= ($generated@@182 $generated@@306) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@82) (= ($generated@@276 $generated@@307) (= ($generated@@182 $generated@@307) $generated@@65)))
 :pattern ( ($generated@@276 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@82) ($generated@@168 $generated@@308)) (exists (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (and (and (= (type $generated@@309) $generated@@90) (= (type $generated@@310) $generated@@90)) (= $generated@@308 ($generated@@259 $generated@@309 $generated@@310)))
 :no-pattern (type $generated@@309)
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
)))
 :pattern ( ($generated@@168 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@82) ($generated@@276 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@90) (= (type $generated@@313) $generated@@82)) (= $generated@@311 ($generated@@293 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@276 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 18)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@82) ($generated@@86 $generated@@322)) (= $generated@@322 $generated@@183))
 :pattern ( ($generated@@86 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@90)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@68) (= (type $generated@@327) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@299 ($generated@@323 $generated@@325) $generated@@326 $generated@@327) ($generated@@103 $generated@@325 $generated@@326 $generated@@327)))
 :pattern ( ($generated@@299 ($generated@@323 $generated@@325) $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@330 T@T) ) (! (= (type ($generated@@329 $generated@@330)) ($generated@@105 $generated@@330 $generated@@2))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@108 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@105 $generated@@332 $generated@@2)) (and (= (= ($generated@@328 $generated@@331) 0) (= $generated@@331 ($generated@@329 $generated@@332))) (=> (not (= ($generated@@328 $generated@@331) 0)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) (< 0 ($generated ($generated@@110 $generated@@331 $generated@@333))))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (= (type ($generated@@334 $generated@@335)) $generated@@73)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@336)) $generated@@64) (= ($generated@@334 ($generated@@85 $generated@@336)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@336))
)))
(assert  (and (and (and (and (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@342 $generated@@343)) 19)) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@339 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@339 $generated@@346 $generated@@347)) $generated@@347)
 :pattern ( ($generated@@339 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@340 (type $generated@@348))))
(= (type ($generated@@337 $generated@@348)) ($generated@@105 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@348))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@338 $generated@@350 $generated@@351)) ($generated@@339 $generated@@350 $generated@@351))
 :pattern ( ($generated@@338 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@110 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@110 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert  (and (and (and (and (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (= ($generated@@1 ($generated@@357 $generated@@360 $generated@@361)) 20)) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@358 ($generated@@357 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@357 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@359 ($generated@@357 $generated@@364 $generated@@365)) $generated@@365)
 :pattern ( ($generated@@357 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@358 (type $generated@@366))))
(= (type ($generated@@355 $generated@@366)) ($generated@@105 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@366))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= (type ($generated@@356 $generated@@368 $generated@@369)) ($generated@@357 $generated@@368 $generated@@369))
 :pattern ( ($generated@@356 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@T) ) (! (let (($generated@@372 (type $generated@@370)))
 (not ($generated@@0 ($generated@@110 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370))))
 :pattern ( (let (($generated@@372 (type $generated@@370)))
($generated@@110 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@108 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@105 $generated@@374 $generated@@2)) (= ($generated@@196 $generated@@373) (forall (($generated@@375 T@U) ) (!  (=> (= (type $generated@@375) $generated@@374) (and (<= 0 ($generated ($generated@@110 $generated@@373 $generated@@375))) (<= ($generated ($generated@@110 $generated@@373 $generated@@375)) ($generated@@328 $generated@@373))))
 :pattern ( ($generated@@110 $generated@@373 $generated@@375))
)))))
 :pattern ( ($generated@@196 $generated@@373))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@341 (type $generated@@376))))
(let (($generated@@378 ($generated@@340 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@339 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@338 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@110 ($generated@@337 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@337 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@341 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@105 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@341 (type $generated@@383))))
(let (($generated@@385 ($generated@@340 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@339 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@338 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@110 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@359 (type $generated@@387))))
(let (($generated@@389 ($generated@@358 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@357 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@356 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@110 ($generated@@355 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@355 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@359 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@105 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@359 (type $generated@@394))))
(let (($generated@@396 ($generated@@358 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@357 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@356 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@110 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 Int) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@81) (= (type $generated@@400) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@398) $generated@@399 $generated@@400) ($generated@@79 $generated@@398 $generated@@399 $generated@@400)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@398) $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@402) $generated@@68)) (= ($generated@@84 $generated@@401 ($generated@@195 $generated@@402)) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@401 $generated@@403)))) ($generated@@260 $generated@@403 $generated@@402))
 :pattern ( ($generated@@110 $generated@@401 $generated@@403))
))))
 :pattern ( ($generated@@84 $generated@@401 ($generated@@195 $generated@@402)))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@405) $generated@@68)) (= (type $generated@@406) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@404 ($generated@@279 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@90) ($generated@@0 ($generated@@110 $generated@@404 $generated@@407))) ($generated@@299 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@110 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@103 $generated@@404 ($generated@@279 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@409) $generated@@68)) (= (type $generated@@410) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@408 ($generated@@284 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@90) ($generated@@0 ($generated@@110 $generated@@408 $generated@@411))) ($generated@@299 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@110 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@103 $generated@@408 ($generated@@284 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= ($generated ($generated@@110 ($generated@@329 $generated@@413) $generated@@412)) 0))
 :pattern ( (let (($generated@@413 (type $generated@@412)))
($generated@@110 ($generated@@329 $generated@@413) $generated@@412)))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@341 (type $generated@@417))))
(let (($generated@@419 ($generated@@340 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@105 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@339 $generated@@90 $generated@@90)) (= (type $generated@@421) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@110 ($generated@@337 $generated@@420) ($generated@@176 ($generated@@88 $generated@@82 $generated@@421)))) (= ($generated@@110 ($generated@@415 $generated@@420) ($generated@@176 ($generated@@88 $generated@@82 $generated@@421))) ($generated@@177 ($generated@@88 $generated@@82 $generated@@421))))))
 :pattern ( ($generated@@110 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@359 (type $generated@@425))))
(let (($generated@@427 ($generated@@358 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@105 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@357 $generated@@90 $generated@@90)) (= (type $generated@@429) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@110 ($generated@@355 $generated@@428) ($generated@@176 ($generated@@88 $generated@@82 $generated@@429)))) (= ($generated@@110 ($generated@@423 $generated@@428) ($generated@@176 ($generated@@88 $generated@@82 $generated@@429))) ($generated@@177 ($generated@@88 $generated@@82 $generated@@429))))))
 :pattern ( ($generated@@110 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@340 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@339 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@110 ($generated@@380 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@110 ($generated@@337 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@110 ($generated@@415 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@110 ($generated@@337 $generated@@430) $generated@@434))
 :pattern ( ($generated@@110 ($generated@@415 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@110 ($generated@@380 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@358 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@357 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@110 ($generated@@391 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@110 ($generated@@355 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@110 ($generated@@423 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@110 ($generated@@355 $generated@@435) $generated@@439))
 :pattern ( ($generated@@110 ($generated@@423 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@110 ($generated@@391 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@68)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@339 $generated@@90 $generated@@90)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) $generated@@68)) (= (type $generated@@446) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@337 $generated@@443) $generated@@447))) (and ($generated@@299 ($generated@@110 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@299 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@110 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@110 ($generated@@337 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@103 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@449 $generated@@450)) $generated@@68)
 :pattern ( ($generated@@448 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (= (type $generated@@451) ($generated@@357 $generated@@90 $generated@@90)) (= (type $generated@@452) $generated@@68)) (= (type $generated@@453) $generated@@68)) (= (type $generated@@454) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@355 $generated@@451) $generated@@455))) (and ($generated@@299 ($generated@@110 ($generated@@423 $generated@@451) $generated@@455) $generated@@453 $generated@@454) ($generated@@299 $generated@@455 $generated@@452 $generated@@454)))
 :pattern ( ($generated@@110 ($generated@@423 $generated@@451) $generated@@455))
 :pattern ( ($generated@@110 ($generated@@355 $generated@@451) $generated@@455))
))))
 :pattern ( ($generated@@103 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (= (type $generated@@456) $generated@@68) (= (type $generated@@457) $generated@@82)) ($generated@@84 $generated@@457 ($generated@@85 $generated@@456))) (or ($generated@@86 $generated@@457) ($generated@@276 $generated@@457)))
 :pattern ( ($generated@@276 $generated@@457) ($generated@@84 $generated@@457 ($generated@@85 $generated@@456)))
 :pattern ( ($generated@@86 $generated@@457) ($generated@@84 $generated@@457 ($generated@@85 $generated@@456)))
)))
(assert (forall (($generated@@459 T@T) ) (! (= (type ($generated@@458 $generated@@459)) ($generated@@105 $generated@@459 $generated@@4))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@359 (type $generated@@460))))
(let (($generated@@462 ($generated@@358 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@357 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@356 $generated@@462 $generated@@461)) (= ($generated@@355 $generated@@460) ($generated@@458 $generated@@462))))))
 :pattern ( ($generated@@355 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@359 (type $generated@@463))))
(let (($generated@@465 ($generated@@358 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@357 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@356 $generated@@465 $generated@@464)) (= ($generated@@391 $generated@@463) ($generated@@458 $generated@@464))))))
 :pattern ( ($generated@@391 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@359 (type $generated@@466))))
(let (($generated@@468 ($generated@@358 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@357 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@356 $generated@@468 $generated@@467)) (= ($generated@@422 $generated@@466) ($generated@@458 $generated@@90))))))
 :pattern ( ($generated@@422 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@341 (type $generated@@469))))
(let (($generated@@471 ($generated@@340 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@339 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@338 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@90) (= (type $generated@@473) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@414 $generated@@469) ($generated@@323 ($generated@@259 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@414 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@359 (type $generated@@474))))
(let (($generated@@476 ($generated@@358 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@357 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@356 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@90) (= (type $generated@@478) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@422 $generated@@474) ($generated@@323 ($generated@@259 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@422 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@90) ($generated@@260 $generated@@479 $generated@@46)) (and (= ($generated@@323 ($generated@@88 $generated@@2 $generated@@479)) $generated@@479) ($generated@@84 ($generated@@88 $generated@@2 $generated@@479) $generated@@46)))
 :pattern ( ($generated@@260 $generated@@479 $generated@@46))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@90) ($generated@@260 $generated@@480 $generated@@47)) (and (= ($generated@@323 ($generated@@88 $generated@@3 $generated@@480)) $generated@@480) ($generated@@84 ($generated@@88 $generated@@3 $generated@@480) $generated@@47)))
 :pattern ( ($generated@@260 $generated@@480 $generated@@47))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@90) ($generated@@260 $generated@@481 $generated@@44)) (and (= ($generated@@323 ($generated@@88 $generated@@4 $generated@@481)) $generated@@481) ($generated@@84 ($generated@@88 $generated@@4 $generated@@481) $generated@@44)))
 :pattern ( ($generated@@260 $generated@@481 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@482) 21))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@90) ($generated@@260 $generated@@483 $generated@@45)) (and (= ($generated@@323 ($generated@@88 $generated@@482 $generated@@483)) $generated@@483) ($generated@@84 ($generated@@88 $generated@@482 $generated@@483) $generated@@45)))
 :pattern ( ($generated@@260 $generated@@483 $generated@@45))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@68) (= ($generated@@260 ($generated@@323 $generated@@484) $generated@@485) ($generated@@84 $generated@@484 $generated@@485)))
 :pattern ( ($generated@@260 ($generated@@323 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@108 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@105 $generated@@487 $generated@@2)) (<= 0 ($generated@@328 $generated@@486))))
 :pattern ( ($generated@@328 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@317 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@316 $generated@@489)) (<= 0 ($generated@@315 $generated@@488))))
 :pattern ( ($generated@@315 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@440 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@440 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@494 ($generated@@440 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@440 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@76 ($generated@@440 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@440 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@448 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@448 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@448 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@448 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@76 ($generated@@448 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@448 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@90) (= (type $generated@@511) $generated@@90)) (= ($generated@@182 ($generated@@259 $generated@@510 $generated@@511)) $generated@@61))
 :pattern ( ($generated@@259 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@169 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@169 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@169 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@169 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@90) (= (type $generated@@521) $generated@@90)) (= ($generated@@176 ($generated@@259 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@259 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@90) (= (type $generated@@523) $generated@@90)) (= ($generated@@177 ($generated@@259 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@259 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@90) (= (type $generated@@525) $generated@@82)) (= ($generated@@182 ($generated@@293 $generated@@524 $generated@@525)) $generated@@65))
 :pattern ( ($generated@@293 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@90) (= (type $generated@@527) $generated@@82)) (= ($generated@@89 ($generated@@293 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@293 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@90) (= (type $generated@@529) $generated@@82)) (= ($generated@@87 ($generated@@293 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@293 $generated@@528 $generated@@529))
)))
(assert  (and (forall (($generated@@532 T@U) ) (! (= (type ($generated@@530 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@532))
)) (forall (($generated@@533 T@U) ($generated@@534 Int) ) (! (let (($generated@@535 ($generated@@317 (type $generated@@533))))
(= (type ($generated@@531 $generated@@533 $generated@@534)) $generated@@535))
 :pattern ( ($generated@@531 $generated@@533 $generated@@534))
))))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@316 $generated@@90)) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@536 ($generated@@530 $generated@@537) $generated@@538) (forall (($generated@@539 Int) ) (!  (=> (and (<= 0 $generated@@539) (< $generated@@539 ($generated@@315 $generated@@536))) ($generated@@299 ($generated@@531 $generated@@536 $generated@@539) $generated@@537 $generated@@538))
 :pattern ( ($generated@@531 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@103 $generated@@536 ($generated@@530 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@541 Int) ) (! (= ($generated@@540 ($generated@@104 $generated@@541)) $generated@@541)
 :pattern ( ($generated@@104 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@279 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@279 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@76 ($generated@@279 $generated@@545)) $generated@@54))
 :pattern ( ($generated@@279 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@546 ($generated@@284 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@284 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@76 ($generated@@284 $generated@@549)) $generated@@55))
 :pattern ( ($generated@@284 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@68)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@550 ($generated@@195 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@195 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@76 ($generated@@195 $generated@@553)) $generated@@56))
 :pattern ( ($generated@@195 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@68)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@68) (= ($generated@@554 ($generated@@530 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@530 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@76 ($generated@@530 $generated@@557)) $generated@@57))
 :pattern ( ($generated@@530 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@558 ($generated@@85 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@85 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
(= ($generated@@88 $generated@@562 ($generated@@323 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@323 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@339 $generated@@90 $generated@@90)) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) $generated@@68)) (= ($generated@@84 $generated@@563 ($generated@@440 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@337 $generated@@563) $generated@@566))) (and ($generated@@260 ($generated@@110 ($generated@@415 $generated@@563) $generated@@566) $generated@@565) ($generated@@260 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@110 ($generated@@415 $generated@@563) $generated@@566))
 :pattern ( ($generated@@110 ($generated@@337 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@84 $generated@@563 ($generated@@440 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@357 $generated@@90 $generated@@90)) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) $generated@@68)) (= ($generated@@84 $generated@@567 ($generated@@448 $generated@@568 $generated@@569)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@355 $generated@@567) $generated@@570))) (and ($generated@@260 ($generated@@110 ($generated@@423 $generated@@567) $generated@@570) $generated@@569) ($generated@@260 $generated@@570 $generated@@568)))
 :pattern ( ($generated@@110 ($generated@@423 $generated@@567) $generated@@570))
 :pattern ( ($generated@@110 ($generated@@355 $generated@@567) $generated@@570))
))))
 :pattern ( ($generated@@84 $generated@@567 ($generated@@448 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@90) (= (type $generated@@574) $generated@@90)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@259 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@259 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@90) (= (type $generated@@576) $generated@@90)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@259 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@90) (= (type $generated@@578) $generated@@82)) (< ($generated@@571 $generated@@577) ($generated@@572 ($generated@@293 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@293 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@90) (= (type $generated@@580) $generated@@82)) (< ($generated@@572 $generated@@580) ($generated@@572 ($generated@@293 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@293 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@90) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) ($generated@@260 $generated@@581 ($generated@@440 $generated@@582 $generated@@583))) (and (= ($generated@@323 ($generated@@88 ($generated@@339 $generated@@90 $generated@@90) $generated@@581)) $generated@@581) ($generated@@84 ($generated@@88 ($generated@@339 $generated@@90 $generated@@90) $generated@@581) ($generated@@440 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@260 $generated@@581 ($generated@@440 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@90) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@68)) ($generated@@260 $generated@@584 ($generated@@448 $generated@@585 $generated@@586))) (and (= ($generated@@323 ($generated@@88 ($generated@@357 $generated@@90 $generated@@90) $generated@@584)) $generated@@584) ($generated@@84 ($generated@@88 ($generated@@357 $generated@@90 $generated@@90) $generated@@584) ($generated@@448 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@260 $generated@@584 ($generated@@448 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@68) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@90)) ($generated@@260 $generated@@589 ($generated@@169 $generated@@587 $generated@@588))) (and (= ($generated@@323 ($generated@@88 $generated@@82 $generated@@589)) $generated@@589) ($generated@@84 ($generated@@88 $generated@@82 $generated@@589) ($generated@@169 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@260 $generated@@589 ($generated@@169 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@82) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@256 $generated@@592) (and ($generated@@276 $generated@@590) ($generated@@103 $generated@@590 ($generated@@85 $generated@@591) $generated@@592)))) ($generated@@299 ($generated@@89 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@299 ($generated@@89 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (not ($generated@@0 ($generated@@110 ($generated@@458 $generated@@594) $generated@@593))))
 :pattern ( (let (($generated@@594 (type $generated@@593)))
($generated@@110 ($generated@@458 $generated@@594) $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@68) (= (type $generated@@596) $generated@@68)) (and (= ($generated@@76 ($generated@@169 $generated@@595 $generated@@596)) $generated@@62) (= ($generated@@334 ($generated@@169 $generated@@595 $generated@@596)) $generated@@66)))
 :pattern ( ($generated@@169 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@82) (= ($generated@@571 ($generated@@323 $generated@@597)) ($generated@@572 $generated@@597)))
 :pattern ( ($generated@@571 ($generated@@323 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@90) ($generated@@260 $generated@@598 ($generated@@104 0))) (and (= ($generated@@323 ($generated@@88 $generated@@2 $generated@@598)) $generated@@598) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@598) ($generated@@104 0))))
 :pattern ( ($generated@@260 $generated@@598 ($generated@@104 0)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@90) (= (type $generated@@600) $generated@@68)) ($generated@@260 $generated@@599 ($generated@@279 $generated@@600))) (and (= ($generated@@323 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@599)) $generated@@599) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@599) ($generated@@279 $generated@@600))))
 :pattern ( ($generated@@260 $generated@@599 ($generated@@279 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@90) (= (type $generated@@602) $generated@@68)) ($generated@@260 $generated@@601 ($generated@@284 $generated@@602))) (and (= ($generated@@323 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@601)) $generated@@601) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@601) ($generated@@284 $generated@@602))))
 :pattern ( ($generated@@260 $generated@@601 ($generated@@284 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@90) (= (type $generated@@604) $generated@@68)) ($generated@@260 $generated@@603 ($generated@@195 $generated@@604))) (and (= ($generated@@323 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@603)) $generated@@603) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@603) ($generated@@195 $generated@@604))))
 :pattern ( ($generated@@260 $generated@@603 ($generated@@195 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@90) (= (type $generated@@606) $generated@@68)) ($generated@@260 $generated@@605 ($generated@@530 $generated@@606))) (and (= ($generated@@323 ($generated@@88 ($generated@@316 $generated@@90) $generated@@605)) $generated@@605) ($generated@@84 ($generated@@88 ($generated@@316 $generated@@90) $generated@@605) ($generated@@530 $generated@@606))))
 :pattern ( ($generated@@260 $generated@@605 ($generated@@530 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@68) (= (type $generated@@608) $generated@@90)) ($generated@@260 $generated@@608 ($generated@@85 $generated@@607))) (and (= ($generated@@323 ($generated@@88 $generated@@82 $generated@@608)) $generated@@608) ($generated@@84 ($generated@@88 $generated@@82 $generated@@608) ($generated@@85 $generated@@607))))
 :pattern ( ($generated@@260 $generated@@608 ($generated@@85 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@82) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@256 $generated@@611) (and ($generated@@276 $generated@@609) ($generated@@103 $generated@@609 ($generated@@85 $generated@@610) $generated@@611)))) ($generated@@103 ($generated@@87 $generated@@609) ($generated@@85 $generated@@610) $generated@@611))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@609) ($generated@@85 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@612 ($generated@@195 $generated@@613) $generated@@614) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@612 $generated@@615)))) ($generated@@299 $generated@@615 $generated@@613 $generated@@614))
 :pattern ( ($generated@@110 $generated@@612 $generated@@615))
))))
 :pattern ( ($generated@@103 $generated@@612 ($generated@@195 $generated@@613) $generated@@614))
)))
(assert (= $generated@@183 ($generated@@186 $generated@@183)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@82) (= (type $generated@@617) $generated@@68)) (= (type $generated@@618) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@256 $generated@@618) (and ($generated@@168 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@68) ($generated@@103 $generated@@616 ($generated@@169 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@103 $generated@@616 ($generated@@169 $generated@@617 $generated@@619) $generated@@618))
))))) ($generated@@299 ($generated@@176 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@299 ($generated@@176 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@82) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@256 $generated@@622) (and ($generated@@168 $generated@@620) (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@68) ($generated@@103 $generated@@620 ($generated@@169 $generated@@623 $generated@@621) $generated@@622))
 :pattern ( ($generated@@103 $generated@@620 ($generated@@169 $generated@@623 $generated@@621) $generated@@622))
))))) ($generated@@299 ($generated@@177 $generated@@620) $generated@@621 $generated@@622))
 :pattern ( ($generated@@299 ($generated@@177 $generated@@620) $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@90) (= (type $generated@@625) $generated@@90)) (= ($generated@@259 ($generated@@186 $generated@@624) ($generated@@186 $generated@@625)) ($generated@@186 ($generated@@259 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@259 ($generated@@186 $generated@@624) ($generated@@186 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@90) (= (type $generated@@627) $generated@@82)) (= ($generated@@293 ($generated@@186 $generated@@626) ($generated@@186 $generated@@627)) ($generated@@186 ($generated@@293 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@293 ($generated@@186 $generated@@626) ($generated@@186 $generated@@627)))
)))
(assert (forall (($generated@@628 Int) ) (! (= ($generated@@323 ($generated@@8 ($generated@@185 $generated@@628))) ($generated@@186 ($generated@@323 ($generated@@8 $generated@@628))))
 :pattern ( ($generated@@323 ($generated@@8 ($generated@@185 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ) (! (= ($generated@@323 ($generated@@186 $generated@@629)) ($generated@@186 ($generated@@323 $generated@@629)))
 :pattern ( ($generated@@323 ($generated@@186 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@317 (type $generated@@630))))
 (=> (and (= (type $generated@@630) ($generated@@316 $generated@@631)) (= ($generated@@315 $generated@@630) 0)) (= $generated@@630 ($generated@@314 $generated@@631))))
 :pattern ( ($generated@@315 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@633)))
 (=> (and (and (= (type $generated@@632) ($generated@@105 $generated@@635 $generated@@2)) (= (type $generated@@634) $generated@@2)) (<= 0 ($generated $generated@@634))) (= ($generated@@328 ($generated@@111 $generated@@632 $generated@@633 $generated@@634)) (+ (- ($generated@@328 $generated@@632) ($generated ($generated@@110 $generated@@632 $generated@@633))) ($generated $generated@@634)))))
 :pattern ( ($generated@@328 ($generated@@111 $generated@@632 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@637) $generated@@2)) ($generated@@103 $generated@@637 $generated@@46 $generated@@636))
 :pattern ( ($generated@@103 $generated@@637 $generated@@46 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@639) $generated@@3)) ($generated@@103 $generated@@639 $generated@@47 $generated@@638))
 :pattern ( ($generated@@103 $generated@@639 $generated@@47 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@641) $generated@@4)) ($generated@@103 $generated@@641 $generated@@44 $generated@@640))
 :pattern ( ($generated@@103 $generated@@641 $generated@@44 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@643) $generated@@482)) ($generated@@103 $generated@@643 $generated@@45 $generated@@642))
 :pattern ( ($generated@@103 $generated@@643 $generated@@45 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@645) $generated@@90)) ($generated@@103 $generated@@645 $generated@@48 $generated@@644))
 :pattern ( ($generated@@103 $generated@@645 $generated@@48 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@646) $generated@@68) (= (type $generated@@647) $generated@@90)) (= (type $generated@@648) $generated@@82)) (= (type $generated@@649) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@256 $generated@@649)) (= ($generated@@103 ($generated@@293 $generated@@647 $generated@@648) ($generated@@85 $generated@@646) $generated@@649)  (and ($generated@@299 $generated@@647 $generated@@646 $generated@@649) ($generated@@103 $generated@@648 ($generated@@85 $generated@@646) $generated@@649))))
 :pattern ( ($generated@@103 ($generated@@293 $generated@@647 $generated@@648) ($generated@@85 $generated@@646) $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@316 $generated@@90)) (= (type $generated@@651) $generated@@68)) (= ($generated@@84 $generated@@650 ($generated@@530 $generated@@651)) (forall (($generated@@652 Int) ) (!  (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@315 $generated@@650))) ($generated@@260 ($generated@@531 $generated@@650 $generated@@652) $generated@@651))
 :pattern ( ($generated@@531 $generated@@650 $generated@@652))
))))
 :pattern ( ($generated@@84 $generated@@650 ($generated@@530 $generated@@651)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 Int) ) (!  (=> (= (type $generated@@654) ($generated@@316 $generated@@90)) (=> (and (<= 0 $generated@@655) (< $generated@@655 ($generated@@315 $generated@@654))) (< ($generated@@572 ($generated@@88 $generated@@82 ($generated@@531 $generated@@654 $generated@@655))) ($generated@@653 $generated@@654))))
 :pattern ( ($generated@@572 ($generated@@88 $generated@@82 ($generated@@531 $generated@@654 $generated@@655))))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) ($generated@@339 $generated@@90 $generated@@90)) (= (type $generated@@657) $generated@@68)) (= (type $generated@@658) $generated@@68)) ($generated@@84 $generated@@656 ($generated@@440 $generated@@657 $generated@@658))) (and (and ($generated@@84 ($generated@@337 $generated@@656) ($generated@@279 $generated@@657)) ($generated@@84 ($generated@@380 $generated@@656) ($generated@@279 $generated@@658))) ($generated@@84 ($generated@@414 $generated@@656) ($generated@@279 ($generated@@169 $generated@@657 $generated@@658)))))
 :pattern ( ($generated@@84 $generated@@656 ($generated@@440 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@357 $generated@@90 $generated@@90)) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) $generated@@68)) ($generated@@84 $generated@@659 ($generated@@448 $generated@@660 $generated@@661))) (and (and ($generated@@84 ($generated@@355 $generated@@659) ($generated@@284 $generated@@660)) ($generated@@84 ($generated@@391 $generated@@659) ($generated@@284 $generated@@661))) ($generated@@84 ($generated@@422 $generated@@659) ($generated@@284 ($generated@@169 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@84 $generated@@659 ($generated@@448 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@2) ($generated@@84 $generated@@662 $generated@@46))
 :pattern ( ($generated@@84 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@3) ($generated@@84 $generated@@663 $generated@@47))
 :pattern ( ($generated@@84 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@4) ($generated@@84 $generated@@664 $generated@@44))
 :pattern ( ($generated@@84 $generated@@664 $generated@@44))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@482) ($generated@@84 $generated@@665 $generated@@45))
 :pattern ( ($generated@@84 $generated@@665 $generated@@45))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@90) ($generated@@84 $generated@@666 $generated@@48))
 :pattern ( ($generated@@84 $generated@@666 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 (T@U) Bool)
(assert  (and (and (= (type $generated@@667) ($generated@@202 $generated@@106 $generated@@4)) (= (type $generated@@668) $generated@@106)) (= (type $generated@@669) ($generated@@105 $generated@@106 $generated@@107))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@671  (=> (and (= $generated@@667 ($generated@@201 $generated@@668 $generated@@669 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@185 ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) ($generated@@185 3) ($generated@@186 ($generated@@293 ($generated@@323 ($generated@@8 ($generated@@185 3))) ($generated@@186 ($generated@@293 ($generated@@323 ($generated@@8 ($generated@@185 7))) ($generated@@186 ($generated@@293 ($generated@@323 ($generated@@8 ($generated@@185 3))) ($generated@@186 $generated@@183))))))))) ($generated@@185 2)))))
(let (($generated@@672  (=> (and (and ($generated@@256 $generated@@669) ($generated@@670 $generated@@669)) (and (= 2 $generated@@78) (= (ControlFlow 0 3) 2))) $generated@@671)))
$generated@@672)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@185 (Int) Int)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@200 (T@U T@U T@U) T@U)
(declare-fun $generated@@201 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@202 (T@T T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@293 (T@U T@U) T@U)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@328 (T@U) Int)
(declare-fun $generated@@329 (T@T) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@T T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@T) T@U)
(declare-fun $generated@@357 (T@T T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@T) T@U)
(declare-fun $generated@@482 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@531 (T@U Int) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@653 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@81)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@81)))
(assert (forall (($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) (= (type $generated@@166) $generated@@82)) (= ($generated@@79 $generated@@164 $generated@@165 $generated@@166) ($generated@@79 $generated@@162 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@79 ($generated@@161 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@84 $generated@@167 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@167 ($generated@@104 0)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@170 $generated@@171)) $generated@@68)
 :pattern ( ($generated@@169 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@68) (= (type $generated@@173) $generated@@68)) (= (type $generated@@174) $generated@@82)) ($generated@@84 $generated@@174 ($generated@@169 $generated@@172 $generated@@173))) ($generated@@168 $generated@@174))
 :pattern ( ($generated@@168 $generated@@174) ($generated@@84 $generated@@174 ($generated@@169 $generated@@172 $generated@@173)))
)))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@90)
 :pattern ( ($generated@@176 $generated@@178))
)) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@90)
 :pattern ( ($generated@@177 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@82) (= (type $generated@@181) $generated@@82)) true) (= ($generated@@175 $generated@@180 $generated@@181)  (and (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)) (= ($generated@@177 $generated@@180) ($generated@@177 $generated@@181)))))
 :pattern ( ($generated@@175 $generated@@180 $generated@@181))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@182 $generated@@184))
)) (= (type $generated@@183) $generated@@82)))
(assert (= ($generated@@182 $generated@@183) $generated@@63))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= (type ($generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@186 $generated@@187))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@189 T@U) ($generated@@190 Int) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@81) (= (type $generated@@191) $generated@@82)) (or ($generated@@83 ($generated@@185 $generated@@190) ($generated@@186 $generated@@191)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@191 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@186 ($generated@@11 ($generated@@86 ($generated@@186 $generated@@191)))))) (let (($generated@@192 ($generated@@186 ($generated@@87 ($generated@@186 $generated@@191)))))
($generated@@83 ($generated@@185 $generated@@190) $generated@@192))) (= ($generated@@79 ($generated@@80 $generated@@189) ($generated@@185 $generated@@190) ($generated@@186 $generated@@191)) (ite ($generated@@86 ($generated@@186 $generated@@191)) 0 (let (($generated@@193 ($generated@@186 ($generated@@87 ($generated@@186 $generated@@191)))))
(let (($generated@@194 ($generated@@185 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@186 $generated@@191)))))))
(+ (ite (= ($generated@@185 $generated@@190) $generated@@194) 1 0) ($generated@@79 ($generated@@80 $generated@@189) ($generated@@185 $generated@@190) $generated@@193))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@189) ($generated@@185 $generated@@190) ($generated@@186 $generated@@191)))
))))
(assert (forall (($generated@@197 T@U) ) (! (= (type ($generated@@195 $generated@@197)) $generated@@68)
 :pattern ( ($generated@@195 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@199) $generated@@68)) ($generated@@84 $generated@@198 ($generated@@195 $generated@@199))) ($generated@@196 $generated@@198))
 :pattern ( ($generated@@84 $generated@@198 ($generated@@195 $generated@@199)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@206 $generated@@207)) 17)) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@208 $generated@@209)) $generated@@208)
 :pattern ( ($generated@@202 $generated@@208 $generated@@209))
))) (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (! (= ($generated@@204 ($generated@@202 $generated@@210 $generated@@211)) $generated@@211)
 :pattern ( ($generated@@202 $generated@@210 $generated@@211))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@204 (type $generated@@212))))
(= (type ($generated@@200 $generated@@212 $generated@@213 $generated@@214)) $generated@@215))
 :pattern ( ($generated@@200 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 (type $generated@@219)))
(let (($generated@@221 (type $generated@@217)))
(= (type ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@202 $generated@@221 $generated@@220))))
 :pattern ( ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@204 (type $generated@@222))))
 (=> (= (type $generated@@225) $generated@@226) (= ($generated@@200 ($generated@@205 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@223 $generated@@224) $generated@@225)))
 :weight 0
))) (and (and (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@200 ($generated@@205 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@200 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@236 $generated@@238) (= ($generated@@200 ($generated@@205 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@200 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or true (= ($generated@@200 ($generated@@205 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@200 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
)))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ) (! (= (type ($generated@@201 $generated@@245 $generated@@246 $generated@@247 $generated@@248)) ($generated@@202 $generated@@106 $generated@@4))
 :pattern ( ($generated@@201 $generated@@245 $generated@@246 $generated@@247 $generated@@248))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Bool) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@71 (type $generated@@254))))
 (=> (and (and (and (and (= (type $generated@@249) $generated@@106) (= (type $generated@@250) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@251) ($generated@@70 $generated@@4))) (= (type $generated@@253) $generated@@106)) (= (type $generated@@254) ($generated@@70 $generated@@255))) (= ($generated@@0 ($generated@@200 ($generated@@201 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))  (=> (and (not (= $generated@@253 $generated@@249)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@250 $generated@@253) $generated@@251))) $generated@@252))))
 :pattern ( ($generated@@200 ($generated@@201 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@68) (= (type $generated@@258) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@256 $generated@@258)) ($generated@@103 $generated@@183 ($generated@@85 $generated@@257) $generated@@258))
 :pattern ( ($generated@@103 $generated@@183 ($generated@@85 $generated@@257) $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@259 $generated@@261 $generated@@262)) $generated@@82)
 :pattern ( ($generated@@259 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) $generated@@68)) (= (type $generated@@265) $generated@@90)) (= (type $generated@@266) $generated@@90)) (= ($generated@@84 ($generated@@259 $generated@@265 $generated@@266) ($generated@@169 $generated@@263 $generated@@264))  (and ($generated@@260 $generated@@265 $generated@@263) ($generated@@260 $generated@@266 $generated@@264))))
 :pattern ( ($generated@@84 ($generated@@259 $generated@@265 $generated@@266) ($generated@@169 $generated@@263 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@68) ($generated@@84 $generated@@183 ($generated@@85 $generated@@267)))
 :pattern ( ($generated@@84 $generated@@183 ($generated@@85 $generated@@267)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@82) (= (type $generated@@269) $generated@@82)) (= ($generated@@175 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@175 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@82) (= (type $generated@@272) $generated@@82)) (= ($generated@@270 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@270 $generated@@271 $generated@@272))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@273 T@U) ($generated@@274 Int) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@81) (= (type $generated@@275) $generated@@82)) (or ($generated@@83 $generated@@274 $generated@@275) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@275 ($generated@@85 $generated@@46))))) (<= ($generated@@185 0) ($generated@@79 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@79 $generated@@273 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@82) (= (type $generated@@278) $generated@@82)) (and ($generated@@276 $generated@@277) ($generated@@276 $generated@@278))) (= ($generated@@270 $generated@@277 $generated@@278)  (and (= ($generated@@89 $generated@@277) ($generated@@89 $generated@@278)) ($generated@@270 ($generated@@87 $generated@@277) ($generated@@87 $generated@@278)))))
 :pattern ( ($generated@@270 $generated@@277 $generated@@278) ($generated@@276 $generated@@277))
 :pattern ( ($generated@@270 $generated@@277 $generated@@278) ($generated@@276 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@68)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@282) $generated@@68)) (= ($generated@@84 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@90) ($generated@@0 ($generated@@110 $generated@@281 $generated@@283))) ($generated@@260 $generated@@283 $generated@@282))
 :pattern ( ($generated@@110 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@84 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@68)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@287) $generated@@68)) (= ($generated@@84 $generated@@286 ($generated@@284 $generated@@287)) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@90) ($generated@@0 ($generated@@110 $generated@@286 $generated@@288))) ($generated@@260 $generated@@288 $generated@@287))
 :pattern ( ($generated@@110 $generated@@286 $generated@@288))
))))
 :pattern ( ($generated@@84 $generated@@286 ($generated@@284 $generated@@287)))
)))
(assert (forall (($generated@@289 Int) ) (! (= ($generated@@185 $generated@@289) $generated@@289)
 :pattern ( ($generated@@185 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (= ($generated@@186 $generated@@290) $generated@@290)
 :pattern ( ($generated@@186 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) $generated@@82) (= (type $generated@@292) $generated@@82)) (and ($generated@@86 $generated@@291) ($generated@@86 $generated@@292))) (= ($generated@@270 $generated@@291 $generated@@292) true))
 :pattern ( ($generated@@270 $generated@@291 $generated@@292) ($generated@@86 $generated@@291))
 :pattern ( ($generated@@270 $generated@@291 $generated@@292) ($generated@@86 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@293 $generated@@294 $generated@@295)) $generated@@82)
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (= (type $generated@@296) $generated@@68) (= (type $generated@@297) $generated@@90)) (= (type $generated@@298) $generated@@82)) (= ($generated@@84 ($generated@@293 $generated@@297 $generated@@298) ($generated@@85 $generated@@296))  (and ($generated@@260 $generated@@297 $generated@@296) ($generated@@84 $generated@@298 ($generated@@85 $generated@@296)))))
 :pattern ( ($generated@@84 ($generated@@293 $generated@@297 $generated@@298) ($generated@@85 $generated@@296)))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) $generated@@68) (= (type $generated@@301) $generated@@68)) (= (type $generated@@302) $generated@@90)) (= (type $generated@@303) $generated@@90)) (= (type $generated@@304) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@256 $generated@@304)) (= ($generated@@103 ($generated@@259 $generated@@302 $generated@@303) ($generated@@169 $generated@@300 $generated@@301) $generated@@304)  (and ($generated@@299 $generated@@302 $generated@@300 $generated@@304) ($generated@@299 $generated@@303 $generated@@301 $generated@@304))))
 :pattern ( ($generated@@103 ($generated@@259 $generated@@302 $generated@@303) ($generated@@169 $generated@@300 $generated@@301) $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@82) (= ($generated@@168 $generated@@305) (= ($generated@@182 $generated@@305) $generated@@61)))
 :pattern ( ($generated@@168 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@82) (= ($generated@@86 $generated@@306) (= ($generated@@182 $generated@@306) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@82) (= ($generated@@276 $generated@@307) (= ($generated@@182 $generated@@307) $generated@@65)))
 :pattern ( ($generated@@276 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@82) ($generated@@168 $generated@@308)) (exists (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (and (and (= (type $generated@@309) $generated@@90) (= (type $generated@@310) $generated@@90)) (= $generated@@308 ($generated@@259 $generated@@309 $generated@@310)))
 :no-pattern (type $generated@@309)
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
)))
 :pattern ( ($generated@@168 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@82) ($generated@@276 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@90) (= (type $generated@@313) $generated@@82)) (= $generated@@311 ($generated@@293 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@276 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 18)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@82) ($generated@@86 $generated@@322)) (= $generated@@322 $generated@@183))
 :pattern ( ($generated@@86 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@90)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@68) (= (type $generated@@327) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@299 ($generated@@323 $generated@@325) $generated@@326 $generated@@327) ($generated@@103 $generated@@325 $generated@@326 $generated@@327)))
 :pattern ( ($generated@@299 ($generated@@323 $generated@@325) $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@330 T@T) ) (! (= (type ($generated@@329 $generated@@330)) ($generated@@105 $generated@@330 $generated@@2))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@108 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@105 $generated@@332 $generated@@2)) (and (= (= ($generated@@328 $generated@@331) 0) (= $generated@@331 ($generated@@329 $generated@@332))) (=> (not (= ($generated@@328 $generated@@331) 0)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) (< 0 ($generated ($generated@@110 $generated@@331 $generated@@333))))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (= (type ($generated@@334 $generated@@335)) $generated@@73)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@336)) $generated@@64) (= ($generated@@334 ($generated@@85 $generated@@336)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@336))
)))
(assert  (and (and (and (and (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@342 $generated@@343)) 19)) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@339 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@339 $generated@@346 $generated@@347)) $generated@@347)
 :pattern ( ($generated@@339 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@340 (type $generated@@348))))
(= (type ($generated@@337 $generated@@348)) ($generated@@105 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@348))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@338 $generated@@350 $generated@@351)) ($generated@@339 $generated@@350 $generated@@351))
 :pattern ( ($generated@@338 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@110 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@110 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert  (and (and (and (and (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (= ($generated@@1 ($generated@@357 $generated@@360 $generated@@361)) 20)) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@358 ($generated@@357 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@357 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@359 ($generated@@357 $generated@@364 $generated@@365)) $generated@@365)
 :pattern ( ($generated@@357 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@358 (type $generated@@366))))
(= (type ($generated@@355 $generated@@366)) ($generated@@105 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@366))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= (type ($generated@@356 $generated@@368 $generated@@369)) ($generated@@357 $generated@@368 $generated@@369))
 :pattern ( ($generated@@356 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@T) ) (! (let (($generated@@372 (type $generated@@370)))
 (not ($generated@@0 ($generated@@110 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370))))
 :pattern ( (let (($generated@@372 (type $generated@@370)))
($generated@@110 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@108 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@105 $generated@@374 $generated@@2)) (= ($generated@@196 $generated@@373) (forall (($generated@@375 T@U) ) (!  (=> (= (type $generated@@375) $generated@@374) (and (<= 0 ($generated ($generated@@110 $generated@@373 $generated@@375))) (<= ($generated ($generated@@110 $generated@@373 $generated@@375)) ($generated@@328 $generated@@373))))
 :pattern ( ($generated@@110 $generated@@373 $generated@@375))
)))))
 :pattern ( ($generated@@196 $generated@@373))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@341 (type $generated@@376))))
(let (($generated@@378 ($generated@@340 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@339 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@338 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@110 ($generated@@337 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@337 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@341 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@105 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@341 (type $generated@@383))))
(let (($generated@@385 ($generated@@340 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@339 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@338 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@110 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@359 (type $generated@@387))))
(let (($generated@@389 ($generated@@358 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@357 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@356 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@110 ($generated@@355 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@355 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@359 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@105 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@359 (type $generated@@394))))
(let (($generated@@396 ($generated@@358 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@357 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@356 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@110 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 Int) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@81) (= (type $generated@@400) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@398) $generated@@399 $generated@@400) ($generated@@79 $generated@@398 $generated@@399 $generated@@400)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@398) $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@402) $generated@@68)) (= ($generated@@84 $generated@@401 ($generated@@195 $generated@@402)) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@401 $generated@@403)))) ($generated@@260 $generated@@403 $generated@@402))
 :pattern ( ($generated@@110 $generated@@401 $generated@@403))
))))
 :pattern ( ($generated@@84 $generated@@401 ($generated@@195 $generated@@402)))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@405) $generated@@68)) (= (type $generated@@406) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@404 ($generated@@279 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@90) ($generated@@0 ($generated@@110 $generated@@404 $generated@@407))) ($generated@@299 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@110 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@103 $generated@@404 ($generated@@279 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@409) $generated@@68)) (= (type $generated@@410) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@408 ($generated@@284 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@90) ($generated@@0 ($generated@@110 $generated@@408 $generated@@411))) ($generated@@299 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@110 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@103 $generated@@408 ($generated@@284 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= ($generated ($generated@@110 ($generated@@329 $generated@@413) $generated@@412)) 0))
 :pattern ( (let (($generated@@413 (type $generated@@412)))
($generated@@110 ($generated@@329 $generated@@413) $generated@@412)))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@341 (type $generated@@417))))
(let (($generated@@419 ($generated@@340 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@105 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@339 $generated@@90 $generated@@90)) (= (type $generated@@421) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@110 ($generated@@337 $generated@@420) ($generated@@176 ($generated@@88 $generated@@82 $generated@@421)))) (= ($generated@@110 ($generated@@415 $generated@@420) ($generated@@176 ($generated@@88 $generated@@82 $generated@@421))) ($generated@@177 ($generated@@88 $generated@@82 $generated@@421))))))
 :pattern ( ($generated@@110 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@359 (type $generated@@425))))
(let (($generated@@427 ($generated@@358 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@105 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@357 $generated@@90 $generated@@90)) (= (type $generated@@429) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@110 ($generated@@355 $generated@@428) ($generated@@176 ($generated@@88 $generated@@82 $generated@@429)))) (= ($generated@@110 ($generated@@423 $generated@@428) ($generated@@176 ($generated@@88 $generated@@82 $generated@@429))) ($generated@@177 ($generated@@88 $generated@@82 $generated@@429))))))
 :pattern ( ($generated@@110 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@340 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@339 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@110 ($generated@@380 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@110 ($generated@@337 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@110 ($generated@@415 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@110 ($generated@@337 $generated@@430) $generated@@434))
 :pattern ( ($generated@@110 ($generated@@415 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@110 ($generated@@380 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@358 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@357 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@110 ($generated@@391 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@110 ($generated@@355 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@110 ($generated@@423 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@110 ($generated@@355 $generated@@435) $generated@@439))
 :pattern ( ($generated@@110 ($generated@@423 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@110 ($generated@@391 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@68)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@339 $generated@@90 $generated@@90)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) $generated@@68)) (= (type $generated@@446) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@337 $generated@@443) $generated@@447))) (and ($generated@@299 ($generated@@110 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@299 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@110 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@110 ($generated@@337 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@103 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@449 $generated@@450)) $generated@@68)
 :pattern ( ($generated@@448 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (= (type $generated@@451) ($generated@@357 $generated@@90 $generated@@90)) (= (type $generated@@452) $generated@@68)) (= (type $generated@@453) $generated@@68)) (= (type $generated@@454) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@355 $generated@@451) $generated@@455))) (and ($generated@@299 ($generated@@110 ($generated@@423 $generated@@451) $generated@@455) $generated@@453 $generated@@454) ($generated@@299 $generated@@455 $generated@@452 $generated@@454)))
 :pattern ( ($generated@@110 ($generated@@423 $generated@@451) $generated@@455))
 :pattern ( ($generated@@110 ($generated@@355 $generated@@451) $generated@@455))
))))
 :pattern ( ($generated@@103 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (= (type $generated@@456) $generated@@68) (= (type $generated@@457) $generated@@82)) ($generated@@84 $generated@@457 ($generated@@85 $generated@@456))) (or ($generated@@86 $generated@@457) ($generated@@276 $generated@@457)))
 :pattern ( ($generated@@276 $generated@@457) ($generated@@84 $generated@@457 ($generated@@85 $generated@@456)))
 :pattern ( ($generated@@86 $generated@@457) ($generated@@84 $generated@@457 ($generated@@85 $generated@@456)))
)))
(assert (forall (($generated@@459 T@T) ) (! (= (type ($generated@@458 $generated@@459)) ($generated@@105 $generated@@459 $generated@@4))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@359 (type $generated@@460))))
(let (($generated@@462 ($generated@@358 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@357 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@356 $generated@@462 $generated@@461)) (= ($generated@@355 $generated@@460) ($generated@@458 $generated@@462))))))
 :pattern ( ($generated@@355 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@359 (type $generated@@463))))
(let (($generated@@465 ($generated@@358 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@357 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@356 $generated@@465 $generated@@464)) (= ($generated@@391 $generated@@463) ($generated@@458 $generated@@464))))))
 :pattern ( ($generated@@391 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@359 (type $generated@@466))))
(let (($generated@@468 ($generated@@358 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@357 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@356 $generated@@468 $generated@@467)) (= ($generated@@422 $generated@@466) ($generated@@458 $generated@@90))))))
 :pattern ( ($generated@@422 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@341 (type $generated@@469))))
(let (($generated@@471 ($generated@@340 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@339 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@338 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@90) (= (type $generated@@473) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@414 $generated@@469) ($generated@@323 ($generated@@259 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@414 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@359 (type $generated@@474))))
(let (($generated@@476 ($generated@@358 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@357 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@356 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@90) (= (type $generated@@478) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@422 $generated@@474) ($generated@@323 ($generated@@259 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@422 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@90) ($generated@@260 $generated@@479 $generated@@46)) (and (= ($generated@@323 ($generated@@88 $generated@@2 $generated@@479)) $generated@@479) ($generated@@84 ($generated@@88 $generated@@2 $generated@@479) $generated@@46)))
 :pattern ( ($generated@@260 $generated@@479 $generated@@46))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@90) ($generated@@260 $generated@@480 $generated@@47)) (and (= ($generated@@323 ($generated@@88 $generated@@3 $generated@@480)) $generated@@480) ($generated@@84 ($generated@@88 $generated@@3 $generated@@480) $generated@@47)))
 :pattern ( ($generated@@260 $generated@@480 $generated@@47))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@90) ($generated@@260 $generated@@481 $generated@@44)) (and (= ($generated@@323 ($generated@@88 $generated@@4 $generated@@481)) $generated@@481) ($generated@@84 ($generated@@88 $generated@@4 $generated@@481) $generated@@44)))
 :pattern ( ($generated@@260 $generated@@481 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@482) 21))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@90) ($generated@@260 $generated@@483 $generated@@45)) (and (= ($generated@@323 ($generated@@88 $generated@@482 $generated@@483)) $generated@@483) ($generated@@84 ($generated@@88 $generated@@482 $generated@@483) $generated@@45)))
 :pattern ( ($generated@@260 $generated@@483 $generated@@45))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@68) (= ($generated@@260 ($generated@@323 $generated@@484) $generated@@485) ($generated@@84 $generated@@484 $generated@@485)))
 :pattern ( ($generated@@260 ($generated@@323 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@108 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@105 $generated@@487 $generated@@2)) (<= 0 ($generated@@328 $generated@@486))))
 :pattern ( ($generated@@328 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@317 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@316 $generated@@489)) (<= 0 ($generated@@315 $generated@@488))))
 :pattern ( ($generated@@315 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@440 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@440 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@494 ($generated@@440 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@440 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@76 ($generated@@440 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@440 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@448 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@448 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@448 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@448 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@76 ($generated@@448 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@448 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@90) (= (type $generated@@511) $generated@@90)) (= ($generated@@182 ($generated@@259 $generated@@510 $generated@@511)) $generated@@61))
 :pattern ( ($generated@@259 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@169 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@169 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@169 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@169 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@90) (= (type $generated@@521) $generated@@90)) (= ($generated@@176 ($generated@@259 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@259 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@90) (= (type $generated@@523) $generated@@90)) (= ($generated@@177 ($generated@@259 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@259 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@90) (= (type $generated@@525) $generated@@82)) (= ($generated@@182 ($generated@@293 $generated@@524 $generated@@525)) $generated@@65))
 :pattern ( ($generated@@293 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@90) (= (type $generated@@527) $generated@@82)) (= ($generated@@89 ($generated@@293 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@293 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@90) (= (type $generated@@529) $generated@@82)) (= ($generated@@87 ($generated@@293 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@293 $generated@@528 $generated@@529))
)))
(assert  (and (forall (($generated@@532 T@U) ) (! (= (type ($generated@@530 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@532))
)) (forall (($generated@@533 T@U) ($generated@@534 Int) ) (! (let (($generated@@535 ($generated@@317 (type $generated@@533))))
(= (type ($generated@@531 $generated@@533 $generated@@534)) $generated@@535))
 :pattern ( ($generated@@531 $generated@@533 $generated@@534))
))))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@316 $generated@@90)) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@536 ($generated@@530 $generated@@537) $generated@@538) (forall (($generated@@539 Int) ) (!  (=> (and (<= 0 $generated@@539) (< $generated@@539 ($generated@@315 $generated@@536))) ($generated@@299 ($generated@@531 $generated@@536 $generated@@539) $generated@@537 $generated@@538))
 :pattern ( ($generated@@531 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@103 $generated@@536 ($generated@@530 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@541 Int) ) (! (= ($generated@@540 ($generated@@104 $generated@@541)) $generated@@541)
 :pattern ( ($generated@@104 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@279 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@279 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@76 ($generated@@279 $generated@@545)) $generated@@54))
 :pattern ( ($generated@@279 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@546 ($generated@@284 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@284 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@76 ($generated@@284 $generated@@549)) $generated@@55))
 :pattern ( ($generated@@284 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@68)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@550 ($generated@@195 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@195 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@76 ($generated@@195 $generated@@553)) $generated@@56))
 :pattern ( ($generated@@195 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@68)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@68) (= ($generated@@554 ($generated@@530 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@530 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@76 ($generated@@530 $generated@@557)) $generated@@57))
 :pattern ( ($generated@@530 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@558 ($generated@@85 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@85 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
(= ($generated@@88 $generated@@562 ($generated@@323 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@323 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@339 $generated@@90 $generated@@90)) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) $generated@@68)) (= ($generated@@84 $generated@@563 ($generated@@440 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@337 $generated@@563) $generated@@566))) (and ($generated@@260 ($generated@@110 ($generated@@415 $generated@@563) $generated@@566) $generated@@565) ($generated@@260 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@110 ($generated@@415 $generated@@563) $generated@@566))
 :pattern ( ($generated@@110 ($generated@@337 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@84 $generated@@563 ($generated@@440 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@357 $generated@@90 $generated@@90)) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) $generated@@68)) (= ($generated@@84 $generated@@567 ($generated@@448 $generated@@568 $generated@@569)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@355 $generated@@567) $generated@@570))) (and ($generated@@260 ($generated@@110 ($generated@@423 $generated@@567) $generated@@570) $generated@@569) ($generated@@260 $generated@@570 $generated@@568)))
 :pattern ( ($generated@@110 ($generated@@423 $generated@@567) $generated@@570))
 :pattern ( ($generated@@110 ($generated@@355 $generated@@567) $generated@@570))
))))
 :pattern ( ($generated@@84 $generated@@567 ($generated@@448 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@90) (= (type $generated@@574) $generated@@90)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@259 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@259 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@90) (= (type $generated@@576) $generated@@90)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@259 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@90) (= (type $generated@@578) $generated@@82)) (< ($generated@@571 $generated@@577) ($generated@@572 ($generated@@293 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@293 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@90) (= (type $generated@@580) $generated@@82)) (< ($generated@@572 $generated@@580) ($generated@@572 ($generated@@293 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@293 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@90) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) ($generated@@260 $generated@@581 ($generated@@440 $generated@@582 $generated@@583))) (and (= ($generated@@323 ($generated@@88 ($generated@@339 $generated@@90 $generated@@90) $generated@@581)) $generated@@581) ($generated@@84 ($generated@@88 ($generated@@339 $generated@@90 $generated@@90) $generated@@581) ($generated@@440 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@260 $generated@@581 ($generated@@440 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@90) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@68)) ($generated@@260 $generated@@584 ($generated@@448 $generated@@585 $generated@@586))) (and (= ($generated@@323 ($generated@@88 ($generated@@357 $generated@@90 $generated@@90) $generated@@584)) $generated@@584) ($generated@@84 ($generated@@88 ($generated@@357 $generated@@90 $generated@@90) $generated@@584) ($generated@@448 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@260 $generated@@584 ($generated@@448 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@68) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@90)) ($generated@@260 $generated@@589 ($generated@@169 $generated@@587 $generated@@588))) (and (= ($generated@@323 ($generated@@88 $generated@@82 $generated@@589)) $generated@@589) ($generated@@84 ($generated@@88 $generated@@82 $generated@@589) ($generated@@169 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@260 $generated@@589 ($generated@@169 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@82) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@256 $generated@@592) (and ($generated@@276 $generated@@590) ($generated@@103 $generated@@590 ($generated@@85 $generated@@591) $generated@@592)))) ($generated@@299 ($generated@@89 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@299 ($generated@@89 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (not ($generated@@0 ($generated@@110 ($generated@@458 $generated@@594) $generated@@593))))
 :pattern ( (let (($generated@@594 (type $generated@@593)))
($generated@@110 ($generated@@458 $generated@@594) $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@68) (= (type $generated@@596) $generated@@68)) (and (= ($generated@@76 ($generated@@169 $generated@@595 $generated@@596)) $generated@@62) (= ($generated@@334 ($generated@@169 $generated@@595 $generated@@596)) $generated@@66)))
 :pattern ( ($generated@@169 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@82) (= ($generated@@571 ($generated@@323 $generated@@597)) ($generated@@572 $generated@@597)))
 :pattern ( ($generated@@571 ($generated@@323 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@90) ($generated@@260 $generated@@598 ($generated@@104 0))) (and (= ($generated@@323 ($generated@@88 $generated@@2 $generated@@598)) $generated@@598) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@598) ($generated@@104 0))))
 :pattern ( ($generated@@260 $generated@@598 ($generated@@104 0)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@90) (= (type $generated@@600) $generated@@68)) ($generated@@260 $generated@@599 ($generated@@279 $generated@@600))) (and (= ($generated@@323 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@599)) $generated@@599) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@599) ($generated@@279 $generated@@600))))
 :pattern ( ($generated@@260 $generated@@599 ($generated@@279 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@90) (= (type $generated@@602) $generated@@68)) ($generated@@260 $generated@@601 ($generated@@284 $generated@@602))) (and (= ($generated@@323 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@601)) $generated@@601) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@601) ($generated@@284 $generated@@602))))
 :pattern ( ($generated@@260 $generated@@601 ($generated@@284 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@90) (= (type $generated@@604) $generated@@68)) ($generated@@260 $generated@@603 ($generated@@195 $generated@@604))) (and (= ($generated@@323 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@603)) $generated@@603) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@603) ($generated@@195 $generated@@604))))
 :pattern ( ($generated@@260 $generated@@603 ($generated@@195 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@90) (= (type $generated@@606) $generated@@68)) ($generated@@260 $generated@@605 ($generated@@530 $generated@@606))) (and (= ($generated@@323 ($generated@@88 ($generated@@316 $generated@@90) $generated@@605)) $generated@@605) ($generated@@84 ($generated@@88 ($generated@@316 $generated@@90) $generated@@605) ($generated@@530 $generated@@606))))
 :pattern ( ($generated@@260 $generated@@605 ($generated@@530 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@68) (= (type $generated@@608) $generated@@90)) ($generated@@260 $generated@@608 ($generated@@85 $generated@@607))) (and (= ($generated@@323 ($generated@@88 $generated@@82 $generated@@608)) $generated@@608) ($generated@@84 ($generated@@88 $generated@@82 $generated@@608) ($generated@@85 $generated@@607))))
 :pattern ( ($generated@@260 $generated@@608 ($generated@@85 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@82) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@256 $generated@@611) (and ($generated@@276 $generated@@609) ($generated@@103 $generated@@609 ($generated@@85 $generated@@610) $generated@@611)))) ($generated@@103 ($generated@@87 $generated@@609) ($generated@@85 $generated@@610) $generated@@611))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@609) ($generated@@85 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@612 ($generated@@195 $generated@@613) $generated@@614) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@612 $generated@@615)))) ($generated@@299 $generated@@615 $generated@@613 $generated@@614))
 :pattern ( ($generated@@110 $generated@@612 $generated@@615))
))))
 :pattern ( ($generated@@103 $generated@@612 ($generated@@195 $generated@@613) $generated@@614))
)))
(assert (= $generated@@183 ($generated@@186 $generated@@183)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@82) (= (type $generated@@617) $generated@@68)) (= (type $generated@@618) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@256 $generated@@618) (and ($generated@@168 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@68) ($generated@@103 $generated@@616 ($generated@@169 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@103 $generated@@616 ($generated@@169 $generated@@617 $generated@@619) $generated@@618))
))))) ($generated@@299 ($generated@@176 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@299 ($generated@@176 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@82) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@256 $generated@@622) (and ($generated@@168 $generated@@620) (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@68) ($generated@@103 $generated@@620 ($generated@@169 $generated@@623 $generated@@621) $generated@@622))
 :pattern ( ($generated@@103 $generated@@620 ($generated@@169 $generated@@623 $generated@@621) $generated@@622))
))))) ($generated@@299 ($generated@@177 $generated@@620) $generated@@621 $generated@@622))
 :pattern ( ($generated@@299 ($generated@@177 $generated@@620) $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@90) (= (type $generated@@625) $generated@@90)) (= ($generated@@259 ($generated@@186 $generated@@624) ($generated@@186 $generated@@625)) ($generated@@186 ($generated@@259 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@259 ($generated@@186 $generated@@624) ($generated@@186 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@90) (= (type $generated@@627) $generated@@82)) (= ($generated@@293 ($generated@@186 $generated@@626) ($generated@@186 $generated@@627)) ($generated@@186 ($generated@@293 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@293 ($generated@@186 $generated@@626) ($generated@@186 $generated@@627)))
)))
(assert (forall (($generated@@628 Int) ) (! (= ($generated@@323 ($generated@@8 ($generated@@185 $generated@@628))) ($generated@@186 ($generated@@323 ($generated@@8 $generated@@628))))
 :pattern ( ($generated@@323 ($generated@@8 ($generated@@185 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ) (! (= ($generated@@323 ($generated@@186 $generated@@629)) ($generated@@186 ($generated@@323 $generated@@629)))
 :pattern ( ($generated@@323 ($generated@@186 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@317 (type $generated@@630))))
 (=> (and (= (type $generated@@630) ($generated@@316 $generated@@631)) (= ($generated@@315 $generated@@630) 0)) (= $generated@@630 ($generated@@314 $generated@@631))))
 :pattern ( ($generated@@315 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@633)))
 (=> (and (and (= (type $generated@@632) ($generated@@105 $generated@@635 $generated@@2)) (= (type $generated@@634) $generated@@2)) (<= 0 ($generated $generated@@634))) (= ($generated@@328 ($generated@@111 $generated@@632 $generated@@633 $generated@@634)) (+ (- ($generated@@328 $generated@@632) ($generated ($generated@@110 $generated@@632 $generated@@633))) ($generated $generated@@634)))))
 :pattern ( ($generated@@328 ($generated@@111 $generated@@632 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@637) $generated@@2)) ($generated@@103 $generated@@637 $generated@@46 $generated@@636))
 :pattern ( ($generated@@103 $generated@@637 $generated@@46 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@639) $generated@@3)) ($generated@@103 $generated@@639 $generated@@47 $generated@@638))
 :pattern ( ($generated@@103 $generated@@639 $generated@@47 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@641) $generated@@4)) ($generated@@103 $generated@@641 $generated@@44 $generated@@640))
 :pattern ( ($generated@@103 $generated@@641 $generated@@44 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@643) $generated@@482)) ($generated@@103 $generated@@643 $generated@@45 $generated@@642))
 :pattern ( ($generated@@103 $generated@@643 $generated@@45 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@645) $generated@@90)) ($generated@@103 $generated@@645 $generated@@48 $generated@@644))
 :pattern ( ($generated@@103 $generated@@645 $generated@@48 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@646) $generated@@68) (= (type $generated@@647) $generated@@90)) (= (type $generated@@648) $generated@@82)) (= (type $generated@@649) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@256 $generated@@649)) (= ($generated@@103 ($generated@@293 $generated@@647 $generated@@648) ($generated@@85 $generated@@646) $generated@@649)  (and ($generated@@299 $generated@@647 $generated@@646 $generated@@649) ($generated@@103 $generated@@648 ($generated@@85 $generated@@646) $generated@@649))))
 :pattern ( ($generated@@103 ($generated@@293 $generated@@647 $generated@@648) ($generated@@85 $generated@@646) $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@316 $generated@@90)) (= (type $generated@@651) $generated@@68)) (= ($generated@@84 $generated@@650 ($generated@@530 $generated@@651)) (forall (($generated@@652 Int) ) (!  (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@315 $generated@@650))) ($generated@@260 ($generated@@531 $generated@@650 $generated@@652) $generated@@651))
 :pattern ( ($generated@@531 $generated@@650 $generated@@652))
))))
 :pattern ( ($generated@@84 $generated@@650 ($generated@@530 $generated@@651)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 Int) ) (!  (=> (= (type $generated@@654) ($generated@@316 $generated@@90)) (=> (and (<= 0 $generated@@655) (< $generated@@655 ($generated@@315 $generated@@654))) (< ($generated@@572 ($generated@@88 $generated@@82 ($generated@@531 $generated@@654 $generated@@655))) ($generated@@653 $generated@@654))))
 :pattern ( ($generated@@572 ($generated@@88 $generated@@82 ($generated@@531 $generated@@654 $generated@@655))))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) ($generated@@339 $generated@@90 $generated@@90)) (= (type $generated@@657) $generated@@68)) (= (type $generated@@658) $generated@@68)) ($generated@@84 $generated@@656 ($generated@@440 $generated@@657 $generated@@658))) (and (and ($generated@@84 ($generated@@337 $generated@@656) ($generated@@279 $generated@@657)) ($generated@@84 ($generated@@380 $generated@@656) ($generated@@279 $generated@@658))) ($generated@@84 ($generated@@414 $generated@@656) ($generated@@279 ($generated@@169 $generated@@657 $generated@@658)))))
 :pattern ( ($generated@@84 $generated@@656 ($generated@@440 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@357 $generated@@90 $generated@@90)) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) $generated@@68)) ($generated@@84 $generated@@659 ($generated@@448 $generated@@660 $generated@@661))) (and (and ($generated@@84 ($generated@@355 $generated@@659) ($generated@@284 $generated@@660)) ($generated@@84 ($generated@@391 $generated@@659) ($generated@@284 $generated@@661))) ($generated@@84 ($generated@@422 $generated@@659) ($generated@@284 ($generated@@169 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@84 $generated@@659 ($generated@@448 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@2) ($generated@@84 $generated@@662 $generated@@46))
 :pattern ( ($generated@@84 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@3) ($generated@@84 $generated@@663 $generated@@47))
 :pattern ( ($generated@@84 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@4) ($generated@@84 $generated@@664 $generated@@44))
 :pattern ( ($generated@@84 $generated@@664 $generated@@44))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@482) ($generated@@84 $generated@@665 $generated@@45))
 :pattern ( ($generated@@84 $generated@@665 $generated@@45))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@90) ($generated@@84 $generated@@666 $generated@@48))
 :pattern ( ($generated@@84 $generated@@666 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 (T@U) Bool)
(assert  (and (and (= (type $generated@@667) ($generated@@202 $generated@@106 $generated@@4)) (= (type $generated@@668) $generated@@106)) (= (type $generated@@669) ($generated@@105 $generated@@106 $generated@@107))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@671  (=> (and (= $generated@@667 ($generated@@201 $generated@@668 $generated@@669 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@185 ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) ($generated@@185 36725) ($generated@@186 ($generated@@293 ($generated@@323 ($generated@@8 ($generated@@185 3))) ($generated@@186 ($generated@@293 ($generated@@323 ($generated@@8 ($generated@@185 7))) ($generated@@186 ($generated@@293 ($generated@@323 ($generated@@8 ($generated@@185 3))) ($generated@@186 $generated@@183))))))))) ($generated@@185 0)))))
(let (($generated@@672  (=> (and (and ($generated@@256 $generated@@669) ($generated@@670 $generated@@669)) (and (= 2 $generated@@78) (= (ControlFlow 0 3) 2))) $generated@@671)))
$generated@@672)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@194 (Int) Int)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U T@U T@U) Bool)
(declare-fun $generated@@324 (T@T) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U Int) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@667 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@81)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@81)))
(assert (forall (($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) (= (type $generated@@166) $generated@@82)) (= ($generated@@79 $generated@@164 $generated@@165 $generated@@166) ($generated@@79 $generated@@162 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@79 ($generated@@161 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@84 $generated@@167 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@167 ($generated@@104 0)))
)))
(assert (forall (($generated@@171 T@U) ) (! (let (($generated@@172 (type $generated@@171)))
(= (type ($generated@@169 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@82) (= (type $generated@@174) $generated@@82)) (or ($generated@@170 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@173 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@174 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@175 Int) ) (!  (and ($generated@@83 $generated@@175 ($generated@@169 $generated@@173)) ($generated@@83 $generated@@175 ($generated@@169 $generated@@174)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@175 $generated@@174))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@175 $generated@@173))
)) (= ($generated@@168 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (forall (($generated@@176 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 ($generated@@169 $generated@@173)) ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 ($generated@@169 $generated@@174))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 $generated@@174))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 $generated@@173))
)))))
 :weight 3
 :pattern ( ($generated@@168 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@179 $generated@@180)) $generated@@68)
 :pattern ( ($generated@@178 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@68) (= (type $generated@@182) $generated@@68)) (= (type $generated@@183) $generated@@82)) ($generated@@84 $generated@@183 ($generated@@178 $generated@@181 $generated@@182))) ($generated@@177 $generated@@183))
 :pattern ( ($generated@@177 $generated@@183) ($generated@@84 $generated@@183 ($generated@@178 $generated@@181 $generated@@182)))
)))
(assert  (and (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@90)
 :pattern ( ($generated@@185 $generated@@187))
)) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@90)
 :pattern ( ($generated@@186 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@82) (= (type $generated@@190) $generated@@82)) true) (= ($generated@@184 $generated@@189 $generated@@190)  (and (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)) (= ($generated@@186 $generated@@189) ($generated@@186 $generated@@190)))))
 :pattern ( ($generated@@184 $generated@@189 $generated@@190))
)))
(assert  (and (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@72)
 :pattern ( ($generated@@191 $generated@@193))
)) (= (type $generated@@192) $generated@@82)))
(assert (= ($generated@@191 $generated@@192) $generated@@63))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@195 T@U) ($generated@@196 Int) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@81) (= (type $generated@@197) $generated@@82)) (or ($generated@@83 ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@197 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@169 ($generated@@11 ($generated@@86 ($generated@@169 $generated@@197)))))) (let (($generated@@198 ($generated@@169 ($generated@@87 ($generated@@169 $generated@@197)))))
($generated@@83 ($generated@@194 $generated@@196) $generated@@198))) (= ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)) (ite ($generated@@86 ($generated@@169 $generated@@197)) 0 (let (($generated@@199 ($generated@@169 ($generated@@87 ($generated@@169 $generated@@197)))))
(let (($generated@@200 ($generated@@194 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@169 $generated@@197)))))))
(+ (ite (= ($generated@@194 $generated@@196) $generated@@200) 1 0) ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) $generated@@199))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)))
))))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@68)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@205) $generated@@68)) ($generated@@84 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@84 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 17)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@106 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@71 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@106) (= (type $generated@@256) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@257) ($generated@@70 $generated@@4))) (= (type $generated@@259) $generated@@106)) (= (type $generated@@260) ($generated@@70 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@264)) ($generated@@103 $generated@@192 ($generated@@85 $generated@@263) $generated@@264))
 :pattern ( ($generated@@103 $generated@@192 ($generated@@85 $generated@@263) $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@82)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) $generated@@68) (= (type $generated@@270) $generated@@68)) (= (type $generated@@271) $generated@@90)) (= (type $generated@@272) $generated@@90)) (= ($generated@@84 ($generated@@265 $generated@@271 $generated@@272) ($generated@@178 $generated@@269 $generated@@270))  (and ($generated@@266 $generated@@271 $generated@@269) ($generated@@266 $generated@@272 $generated@@270))))
 :pattern ( ($generated@@84 ($generated@@265 $generated@@271 $generated@@272) ($generated@@178 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@68) ($generated@@84 $generated@@192 ($generated@@85 $generated@@273)))
 :pattern ( ($generated@@84 $generated@@192 ($generated@@85 $generated@@273)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@82) (= (type $generated@@275) $generated@@82)) (= ($generated@@184 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@184 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@82) (= (type $generated@@278) $generated@@82)) (= ($generated@@276 $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@276 $generated@@277 $generated@@278))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@279 T@U) ($generated@@280 Int) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@81) (= (type $generated@@281) $generated@@82)) (or ($generated@@83 $generated@@280 $generated@@281) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@281 ($generated@@85 $generated@@46))))) (<= ($generated@@194 0) ($generated@@79 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@79 $generated@@279 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@82) (= (type $generated@@284) $generated@@82)) (and ($generated@@282 $generated@@283) ($generated@@282 $generated@@284))) (= ($generated@@276 $generated@@283 $generated@@284)  (and (= ($generated@@89 $generated@@283) ($generated@@89 $generated@@284)) ($generated@@276 ($generated@@87 $generated@@283) ($generated@@87 $generated@@284)))))
 :pattern ( ($generated@@276 $generated@@283 $generated@@284) ($generated@@282 $generated@@283))
 :pattern ( ($generated@@276 $generated@@283 $generated@@284) ($generated@@282 $generated@@284))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@82) (= (type $generated@@286) $generated@@82)) (or ($generated@@170 $generated@@285 $generated@@286) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@285 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@286 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@287 Int) ) (!  (and ($generated@@83 $generated@@287 $generated@@285) ($generated@@83 $generated@@287 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@287 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@287 $generated@@285))
)) (= ($generated@@168 $generated@@285 $generated@@286) (forall (($generated@@288 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@285) ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@286)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@285))
)))))
 :pattern ( ($generated@@168 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@68)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@292) $generated@@68)) (= ($generated@@84 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@90) ($generated@@0 ($generated@@110 $generated@@291 $generated@@293))) ($generated@@266 $generated@@293 $generated@@292))
 :pattern ( ($generated@@110 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@84 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@68)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@297) $generated@@68)) (= ($generated@@84 $generated@@296 ($generated@@294 $generated@@297)) (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@90) ($generated@@0 ($generated@@110 $generated@@296 $generated@@298))) ($generated@@266 $generated@@298 $generated@@297))
 :pattern ( ($generated@@110 $generated@@296 $generated@@298))
))))
 :pattern ( ($generated@@84 $generated@@296 ($generated@@294 $generated@@297)))
)))
(assert (forall (($generated@@299 Int) ) (! (= ($generated@@194 $generated@@299) $generated@@299)
 :pattern ( ($generated@@194 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@169 $generated@@300) $generated@@300)
 :pattern ( ($generated@@169 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (= (type $generated@@301) $generated@@82) (= (type $generated@@302) $generated@@82)) (and ($generated@@86 $generated@@301) ($generated@@86 $generated@@302))) (= ($generated@@276 $generated@@301 $generated@@302) true))
 :pattern ( ($generated@@276 $generated@@301 $generated@@302) ($generated@@86 $generated@@301))
 :pattern ( ($generated@@276 $generated@@301 $generated@@302) ($generated@@86 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (= (type ($generated@@303 $generated@@304 $generated@@305)) $generated@@82)
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) $generated@@90)) (= (type $generated@@308) $generated@@82)) (= ($generated@@84 ($generated@@303 $generated@@307 $generated@@308) ($generated@@85 $generated@@306))  (and ($generated@@266 $generated@@307 $generated@@306) ($generated@@84 $generated@@308 ($generated@@85 $generated@@306)))))
 :pattern ( ($generated@@84 ($generated@@303 $generated@@307 $generated@@308) ($generated@@85 $generated@@306)))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) $generated@@68) (= (type $generated@@311) $generated@@68)) (= (type $generated@@312) $generated@@90)) (= (type $generated@@313) $generated@@90)) (= (type $generated@@314) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@314)) (= ($generated@@103 ($generated@@265 $generated@@312 $generated@@313) ($generated@@178 $generated@@310 $generated@@311) $generated@@314)  (and ($generated@@309 $generated@@312 $generated@@310 $generated@@314) ($generated@@309 $generated@@313 $generated@@311 $generated@@314))))
 :pattern ( ($generated@@103 ($generated@@265 $generated@@312 $generated@@313) ($generated@@178 $generated@@310 $generated@@311) $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@82) (= ($generated@@177 $generated@@315) (= ($generated@@191 $generated@@315) $generated@@61)))
 :pattern ( ($generated@@177 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@82) (= ($generated@@86 $generated@@316) (= ($generated@@191 $generated@@316) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@82) (= ($generated@@282 $generated@@317) (= ($generated@@191 $generated@@317) $generated@@65)))
 :pattern ( ($generated@@282 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@82) ($generated@@177 $generated@@318)) (exists (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (and (and (= (type $generated@@319) $generated@@90) (= (type $generated@@320) $generated@@90)) (= $generated@@318 ($generated@@265 $generated@@319 $generated@@320)))
 :no-pattern (type $generated@@319)
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@177 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@82) ($generated@@282 $generated@@321)) (exists (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (and (and (= (type $generated@@322) $generated@@90) (= (type $generated@@323) $generated@@82)) (= $generated@@321 ($generated@@303 $generated@@322 $generated@@323)))
 :no-pattern (type $generated@@322)
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
)))
 :pattern ( ($generated@@282 $generated@@321))
)))
(assert  (and (and (forall (($generated@@328 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@328)) 18)) (forall (($generated@@329 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@326 $generated@@329))
))) (forall (($generated@@330 T@T) ) (! (= (type ($generated@@324 $generated@@330)) ($generated@@326 $generated@@330))
 :pattern ( ($generated@@324 $generated@@330))
))))
(assert (forall (($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@331)) 0)
 :pattern ( ($generated@@324 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@82) ($generated@@86 $generated@@332)) (= $generated@@332 $generated@@192))
 :pattern ( ($generated@@86 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@90)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@68) (= (type $generated@@337) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@309 ($generated@@333 $generated@@335) $generated@@336 $generated@@337) ($generated@@103 $generated@@335 $generated@@336 $generated@@337)))
 :pattern ( ($generated@@309 ($generated@@333 $generated@@335) $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@105 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@108 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@105 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@110 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@73)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@346)) $generated@@64) (= ($generated@@344 ($generated@@85 $generated@@346)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@346))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@105 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@110 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@110 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 20)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@105 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@108 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@105 $generated@@384 $generated@@2)) (= ($generated@@202 $generated@@383) (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@384) (and (<= 0 ($generated ($generated@@110 $generated@@383 $generated@@385))) (<= ($generated ($generated@@110 $generated@@383 $generated@@385)) ($generated@@338 $generated@@383))))
 :pattern ( ($generated@@110 $generated@@383 $generated@@385))
)))))
 :pattern ( ($generated@@202 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@351 (type $generated@@386))))
(let (($generated@@388 ($generated@@350 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@349 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@348 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@347 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@351 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@105 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@351 (type $generated@@393))))
(let (($generated@@395 ($generated@@350 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@349 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@348 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@110 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@369 (type $generated@@397))))
(let (($generated@@399 ($generated@@368 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@367 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@366 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@365 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@369 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@105 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@369 (type $generated@@404))))
(let (($generated@@406 ($generated@@368 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@367 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@366 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@110 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 Int) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@81) (= (type $generated@@410) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@408) $generated@@409 $generated@@410) ($generated@@79 $generated@@408 $generated@@409 $generated@@410)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@408) $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@412) $generated@@68)) (= ($generated@@84 $generated@@411 ($generated@@201 $generated@@412)) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@411 $generated@@413)))) ($generated@@266 $generated@@413 $generated@@412))
 :pattern ( ($generated@@110 $generated@@411 $generated@@413))
))))
 :pattern ( ($generated@@84 $generated@@411 ($generated@@201 $generated@@412)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@414) $generated@@82) (= (type $generated@@415) $generated@@82)) (or ($generated@@170 $generated@@414 $generated@@415) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@414 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@415 ($generated@@85 $generated@@46)))))) true)
 :pattern ( ($generated@@168 $generated@@414 $generated@@415))
))))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@82) ($generated@@416 $generated@@417)) (or ($generated@@86 $generated@@417) ($generated@@282 $generated@@417)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@418 ($generated@@289 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@90) ($generated@@0 ($generated@@110 $generated@@418 $generated@@421))) ($generated@@309 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@110 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@103 $generated@@418 ($generated@@289 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@422 ($generated@@294 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@90) ($generated@@0 ($generated@@110 $generated@@422 $generated@@425))) ($generated@@309 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@110 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@103 $generated@@422 ($generated@@294 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@110 ($generated@@339 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@110 ($generated@@339 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@351 (type $generated@@431))))
(let (($generated@@433 ($generated@@350 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@105 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@435) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@110 ($generated@@347 $generated@@434) ($generated@@185 ($generated@@88 $generated@@82 $generated@@435)))) (= ($generated@@110 ($generated@@429 $generated@@434) ($generated@@185 ($generated@@88 $generated@@82 $generated@@435))) ($generated@@186 ($generated@@88 $generated@@82 $generated@@435))))))
 :pattern ( ($generated@@110 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@369 (type $generated@@439))))
(let (($generated@@441 ($generated@@368 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@105 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@443) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@442) ($generated@@185 ($generated@@88 $generated@@82 $generated@@443)))) (= ($generated@@110 ($generated@@437 $generated@@442) ($generated@@185 ($generated@@88 $generated@@82 $generated@@443))) ($generated@@186 ($generated@@88 $generated@@82 $generated@@443))))))
 :pattern ( ($generated@@110 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@350 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@349 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@110 ($generated@@390 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@110 ($generated@@347 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@110 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@444) $generated@@448))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@110 ($generated@@390 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@368 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@367 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@110 ($generated@@401 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@110 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@449) $generated@@453))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@110 ($generated@@401 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@457) $generated@@461))) (and ($generated@@309 ($generated@@110 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@309 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@103 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@465) $generated@@469))) (and ($generated@@309 ($generated@@110 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@309 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@103 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@82)) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470))) (or ($generated@@86 $generated@@471) ($generated@@282 $generated@@471)))
 :pattern ( ($generated@@282 $generated@@471) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470)))
 :pattern ( ($generated@@86 $generated@@471) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470)))
)))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@105 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@369 (type $generated@@474))))
(let (($generated@@476 ($generated@@368 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@367 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@366 $generated@@476 $generated@@475)) (= ($generated@@365 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@365 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@369 (type $generated@@477))))
(let (($generated@@479 ($generated@@368 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@367 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@366 $generated@@479 $generated@@478)) (= ($generated@@401 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@401 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@369 (type $generated@@480))))
(let (($generated@@482 ($generated@@368 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@367 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@366 $generated@@482 $generated@@481)) (= ($generated@@436 $generated@@480) ($generated@@472 $generated@@90))))))
 :pattern ( ($generated@@436 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@351 (type $generated@@483))))
(let (($generated@@485 ($generated@@350 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@349 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@348 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@90) (= (type $generated@@487) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@428 $generated@@483) ($generated@@333 ($generated@@265 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@428 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@369 (type $generated@@488))))
(let (($generated@@490 ($generated@@368 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@367 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@366 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@90) (= (type $generated@@492) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@436 $generated@@488) ($generated@@333 ($generated@@265 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@436 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@90) ($generated@@266 $generated@@493 $generated@@46)) (and (= ($generated@@333 ($generated@@88 $generated@@2 $generated@@493)) $generated@@493) ($generated@@84 ($generated@@88 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@266 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@90) ($generated@@266 $generated@@494 $generated@@47)) (and (= ($generated@@333 ($generated@@88 $generated@@3 $generated@@494)) $generated@@494) ($generated@@84 ($generated@@88 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@266 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@90) ($generated@@266 $generated@@495 $generated@@44)) (and (= ($generated@@333 ($generated@@88 $generated@@4 $generated@@495)) $generated@@495) ($generated@@84 ($generated@@88 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@266 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@90) ($generated@@266 $generated@@497 $generated@@45)) (and (= ($generated@@333 ($generated@@88 $generated@@496 $generated@@497)) $generated@@497) ($generated@@84 ($generated@@88 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@266 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@68) (= ($generated@@266 ($generated@@333 $generated@@498) $generated@@499) ($generated@@84 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@266 ($generated@@333 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@108 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@105 $generated@@501 $generated@@2)) (<= 0 ($generated@@338 $generated@@500))))
 :pattern ( ($generated@@338 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@327 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@326 $generated@@503)) (<= 0 ($generated@@325 $generated@@502))))
 :pattern ( ($generated@@325 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@454 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@454 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@454 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@454 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@514 ($generated@@462 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@462 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@76 ($generated@@462 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@90) (= (type $generated@@525) $generated@@90)) (= ($generated@@191 ($generated@@265 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@265 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= ($generated@@526 ($generated@@178 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@178 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@68) (= (type $generated@@533) $generated@@68)) (= ($generated@@530 ($generated@@178 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@178 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@90) (= (type $generated@@535) $generated@@90)) (= ($generated@@185 ($generated@@265 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@265 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@90) (= (type $generated@@537) $generated@@90)) (= ($generated@@186 ($generated@@265 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@265 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@90) (= (type $generated@@539) $generated@@82)) (= ($generated@@191 ($generated@@303 $generated@@538 $generated@@539)) $generated@@65))
 :pattern ( ($generated@@303 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@90) (= (type $generated@@541) $generated@@82)) (= ($generated@@89 ($generated@@303 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@303 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@90) (= (type $generated@@543) $generated@@82)) (= ($generated@@87 ($generated@@303 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@303 $generated@@542 $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (= (type ($generated@@544 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@547 T@U) ($generated@@548 Int) ) (! (let (($generated@@549 ($generated@@327 (type $generated@@547))))
(= (type ($generated@@545 $generated@@547 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@547 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@326 $generated@@90)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552) (forall (($generated@@553 Int) ) (!  (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@325 $generated@@550))) ($generated@@309 ($generated@@545 $generated@@550 $generated@@553) $generated@@551 $generated@@552))
 :pattern ( ($generated@@545 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@104 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@104 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@289 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@289 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@76 ($generated@@289 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@289 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@560 ($generated@@294 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@294 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@76 ($generated@@294 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@294 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@564 ($generated@@201 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@201 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@76 ($generated@@201 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@568 ($generated@@544 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@544 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@76 ($generated@@544 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@544 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@68) (= ($generated@@572 ($generated@@85 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@85 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@88 $generated@@576 ($generated@@333 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@333 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) (= ($generated@@84 $generated@@577 ($generated@@454 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@577) $generated@@580))) (and ($generated@@266 ($generated@@110 ($generated@@429 $generated@@577) $generated@@580) $generated@@579) ($generated@@266 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@577) $generated@@580))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@84 $generated@@577 ($generated@@454 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) (= ($generated@@84 $generated@@581 ($generated@@462 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@581) $generated@@584))) (and ($generated@@266 ($generated@@110 ($generated@@437 $generated@@581) $generated@@584) $generated@@583) ($generated@@266 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@581) $generated@@584))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@84 $generated@@581 ($generated@@462 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@90) (= (type $generated@@588) $generated@@90)) (< ($generated@@585 $generated@@587) ($generated@@586 ($generated@@265 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@265 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@90) (= (type $generated@@590) $generated@@90)) (< ($generated@@585 $generated@@590) ($generated@@586 ($generated@@265 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@265 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@90) (= (type $generated@@592) $generated@@82)) (< ($generated@@585 $generated@@591) ($generated@@586 ($generated@@303 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@303 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@90) (= (type $generated@@594) $generated@@82)) (< ($generated@@586 $generated@@594) ($generated@@586 ($generated@@303 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@303 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@90) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) $generated@@68)) ($generated@@266 $generated@@595 ($generated@@454 $generated@@596 $generated@@597))) (and (= ($generated@@333 ($generated@@88 ($generated@@349 $generated@@90 $generated@@90) $generated@@595)) $generated@@595) ($generated@@84 ($generated@@88 ($generated@@349 $generated@@90 $generated@@90) $generated@@595) ($generated@@454 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@266 $generated@@595 ($generated@@454 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@90) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@266 $generated@@598 ($generated@@462 $generated@@599 $generated@@600))) (and (= ($generated@@333 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@598)) $generated@@598) ($generated@@84 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@598) ($generated@@462 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@266 $generated@@598 ($generated@@462 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@68) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@90)) ($generated@@266 $generated@@603 ($generated@@178 $generated@@601 $generated@@602))) (and (= ($generated@@333 ($generated@@88 $generated@@82 $generated@@603)) $generated@@603) ($generated@@84 ($generated@@88 $generated@@82 $generated@@603) ($generated@@178 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@266 $generated@@603 ($generated@@178 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@82) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@606) (and ($generated@@282 $generated@@604) ($generated@@103 $generated@@604 ($generated@@85 $generated@@605) $generated@@606)))) ($generated@@309 ($generated@@89 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@309 ($generated@@89 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@110 ($generated@@472 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@110 ($generated@@472 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@68) (= (type $generated@@610) $generated@@68)) (and (= ($generated@@76 ($generated@@178 $generated@@609 $generated@@610)) $generated@@62) (= ($generated@@344 ($generated@@178 $generated@@609 $generated@@610)) $generated@@66)))
 :pattern ( ($generated@@178 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@82) (= ($generated@@585 ($generated@@333 $generated@@611)) ($generated@@586 $generated@@611)))
 :pattern ( ($generated@@585 ($generated@@333 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@90) ($generated@@266 $generated@@612 ($generated@@104 0))) (and (= ($generated@@333 ($generated@@88 $generated@@2 $generated@@612)) $generated@@612) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@612) ($generated@@104 0))))
 :pattern ( ($generated@@266 $generated@@612 ($generated@@104 0)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@90) (= (type $generated@@614) $generated@@68)) ($generated@@266 $generated@@613 ($generated@@289 $generated@@614))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@613)) $generated@@613) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@613) ($generated@@289 $generated@@614))))
 :pattern ( ($generated@@266 $generated@@613 ($generated@@289 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@90) (= (type $generated@@616) $generated@@68)) ($generated@@266 $generated@@615 ($generated@@294 $generated@@616))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@615)) $generated@@615) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@615) ($generated@@294 $generated@@616))))
 :pattern ( ($generated@@266 $generated@@615 ($generated@@294 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@90) (= (type $generated@@618) $generated@@68)) ($generated@@266 $generated@@617 ($generated@@201 $generated@@618))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@617)) $generated@@617) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@617) ($generated@@201 $generated@@618))))
 :pattern ( ($generated@@266 $generated@@617 ($generated@@201 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@90) (= (type $generated@@620) $generated@@68)) ($generated@@266 $generated@@619 ($generated@@544 $generated@@620))) (and (= ($generated@@333 ($generated@@88 ($generated@@326 $generated@@90) $generated@@619)) $generated@@619) ($generated@@84 ($generated@@88 ($generated@@326 $generated@@90) $generated@@619) ($generated@@544 $generated@@620))))
 :pattern ( ($generated@@266 $generated@@619 ($generated@@544 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@68) (= (type $generated@@622) $generated@@90)) ($generated@@266 $generated@@622 ($generated@@85 $generated@@621))) (and (= ($generated@@333 ($generated@@88 $generated@@82 $generated@@622)) $generated@@622) ($generated@@84 ($generated@@88 $generated@@82 $generated@@622) ($generated@@85 $generated@@621))))
 :pattern ( ($generated@@266 $generated@@622 ($generated@@85 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@82) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@625) (and ($generated@@282 $generated@@623) ($generated@@103 $generated@@623 ($generated@@85 $generated@@624) $generated@@625)))) ($generated@@103 ($generated@@87 $generated@@623) ($generated@@85 $generated@@624) $generated@@625))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@623) ($generated@@85 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@626 ($generated@@201 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@626 $generated@@629)))) ($generated@@309 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@110 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@103 $generated@@626 ($generated@@201 $generated@@627) $generated@@628))
)))
(assert (= $generated@@192 ($generated@@169 $generated@@192)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@82) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@632) (and ($generated@@177 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@68) ($generated@@103 $generated@@630 ($generated@@178 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@103 $generated@@630 ($generated@@178 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@309 ($generated@@185 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@309 ($generated@@185 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@82) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@636) (and ($generated@@177 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@68) ($generated@@103 $generated@@634 ($generated@@178 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@103 $generated@@634 ($generated@@178 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@309 ($generated@@186 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@309 ($generated@@186 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@90) (= (type $generated@@639) $generated@@90)) (= ($generated@@265 ($generated@@169 $generated@@638) ($generated@@169 $generated@@639)) ($generated@@169 ($generated@@265 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@265 ($generated@@169 $generated@@638) ($generated@@169 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@90) (= (type $generated@@641) $generated@@82)) (= ($generated@@303 ($generated@@169 $generated@@640) ($generated@@169 $generated@@641)) ($generated@@169 ($generated@@303 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@303 ($generated@@169 $generated@@640) ($generated@@169 $generated@@641)))
)))
(assert (forall (($generated@@642 Int) ) (! (= ($generated@@333 ($generated@@8 ($generated@@194 $generated@@642))) ($generated@@169 ($generated@@333 ($generated@@8 $generated@@642))))
 :pattern ( ($generated@@333 ($generated@@8 ($generated@@194 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@333 ($generated@@169 $generated@@643)) ($generated@@169 ($generated@@333 $generated@@643)))
 :pattern ( ($generated@@333 ($generated@@169 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@327 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@326 $generated@@645)) (= ($generated@@325 $generated@@644) 0)) (= $generated@@644 ($generated@@324 $generated@@645))))
 :pattern ( ($generated@@325 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@105 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@338 ($generated@@111 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@338 $generated@@646) ($generated ($generated@@110 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@338 ($generated@@111 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@651) $generated@@2)) ($generated@@103 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@103 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@653) $generated@@3)) ($generated@@103 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@103 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@655) $generated@@4)) ($generated@@103 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@103 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@657) $generated@@496)) ($generated@@103 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@103 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@659) $generated@@90)) ($generated@@103 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@103 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@660) $generated@@68) (= (type $generated@@661) $generated@@90)) (= (type $generated@@662) $generated@@82)) (= (type $generated@@663) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@663)) (= ($generated@@103 ($generated@@303 $generated@@661 $generated@@662) ($generated@@85 $generated@@660) $generated@@663)  (and ($generated@@309 $generated@@661 $generated@@660 $generated@@663) ($generated@@103 $generated@@662 ($generated@@85 $generated@@660) $generated@@663))))
 :pattern ( ($generated@@103 ($generated@@303 $generated@@661 $generated@@662) ($generated@@85 $generated@@660) $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@326 $generated@@90)) (= (type $generated@@665) $generated@@68)) (= ($generated@@84 $generated@@664 ($generated@@544 $generated@@665)) (forall (($generated@@666 Int) ) (!  (=> (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@325 $generated@@664))) ($generated@@266 ($generated@@545 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@545 $generated@@664 $generated@@666))
))))
 :pattern ( ($generated@@84 $generated@@664 ($generated@@544 $generated@@665)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@326 $generated@@90)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@325 $generated@@668))) (< ($generated@@586 ($generated@@88 $generated@@82 ($generated@@545 $generated@@668 $generated@@669))) ($generated@@667 $generated@@668))))
 :pattern ( ($generated@@586 ($generated@@88 $generated@@82 ($generated@@545 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@68)) ($generated@@84 $generated@@670 ($generated@@454 $generated@@671 $generated@@672))) (and (and ($generated@@84 ($generated@@347 $generated@@670) ($generated@@289 $generated@@671)) ($generated@@84 ($generated@@390 $generated@@670) ($generated@@289 $generated@@672))) ($generated@@84 ($generated@@428 $generated@@670) ($generated@@289 ($generated@@178 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@84 $generated@@670 ($generated@@454 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@84 $generated@@673 ($generated@@462 $generated@@674 $generated@@675))) (and (and ($generated@@84 ($generated@@365 $generated@@673) ($generated@@294 $generated@@674)) ($generated@@84 ($generated@@401 $generated@@673) ($generated@@294 $generated@@675))) ($generated@@84 ($generated@@436 $generated@@673) ($generated@@294 ($generated@@178 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@84 $generated@@673 ($generated@@462 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@84 $generated@@676 $generated@@46))
 :pattern ( ($generated@@84 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@84 $generated@@677 $generated@@47))
 :pattern ( ($generated@@84 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@84 $generated@@678 $generated@@44))
 :pattern ( ($generated@@84 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@496) ($generated@@84 $generated@@679 $generated@@45))
 :pattern ( ($generated@@84 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@90) ($generated@@84 $generated@@680 $generated@@48))
 :pattern ( ($generated@@84 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@681) ($generated@@208 $generated@@106 $generated@@4)) (= (type $generated@@682) $generated@@106)) (= (type $generated@@683) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@684) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@686  (=> (and (and (= $generated@@681 ($generated@@207 $generated@@682 $generated@@683 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@170 $generated@@684 $generated@@684)) (or ($generated@@168 $generated@@684 $generated@@684) (forall (($generated@@687 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@687 $generated@@684) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@687 $generated@@684)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@687 $generated@@684))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@687 $generated@@684))
))))))
(let (($generated@@688  (=> (and ($generated@@262 $generated@@683) ($generated@@685 $generated@@683)) (=> (and (and (and ($generated@@84 $generated@@684 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@684 ($generated@@85 $generated@@46) $generated@@683)) ($generated@@416 $generated@@684)) (and (= 3 $generated@@78) (= (ControlFlow 0 3) 2))) $generated@@686))))
$generated@@688)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@194 (Int) Int)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U T@U T@U) Bool)
(declare-fun $generated@@324 (T@T) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U Int) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@667 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@81)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@81)))
(assert (forall (($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) (= (type $generated@@166) $generated@@82)) (= ($generated@@79 $generated@@164 $generated@@165 $generated@@166) ($generated@@79 $generated@@162 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@79 ($generated@@161 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@84 $generated@@167 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@167 ($generated@@104 0)))
)))
(assert (forall (($generated@@171 T@U) ) (! (let (($generated@@172 (type $generated@@171)))
(= (type ($generated@@169 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@82) (= (type $generated@@174) $generated@@82)) (or ($generated@@170 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@173 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@174 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@175 Int) ) (!  (and ($generated@@83 $generated@@175 ($generated@@169 $generated@@173)) ($generated@@83 $generated@@175 ($generated@@169 $generated@@174)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@175 $generated@@174))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@175 $generated@@173))
)) (= ($generated@@168 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (forall (($generated@@176 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 ($generated@@169 $generated@@173)) ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 ($generated@@169 $generated@@174))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 $generated@@174))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 $generated@@173))
)))))
 :weight 3
 :pattern ( ($generated@@168 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@179 $generated@@180)) $generated@@68)
 :pattern ( ($generated@@178 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@68) (= (type $generated@@182) $generated@@68)) (= (type $generated@@183) $generated@@82)) ($generated@@84 $generated@@183 ($generated@@178 $generated@@181 $generated@@182))) ($generated@@177 $generated@@183))
 :pattern ( ($generated@@177 $generated@@183) ($generated@@84 $generated@@183 ($generated@@178 $generated@@181 $generated@@182)))
)))
(assert  (and (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@90)
 :pattern ( ($generated@@185 $generated@@187))
)) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@90)
 :pattern ( ($generated@@186 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@82) (= (type $generated@@190) $generated@@82)) true) (= ($generated@@184 $generated@@189 $generated@@190)  (and (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)) (= ($generated@@186 $generated@@189) ($generated@@186 $generated@@190)))))
 :pattern ( ($generated@@184 $generated@@189 $generated@@190))
)))
(assert  (and (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@72)
 :pattern ( ($generated@@191 $generated@@193))
)) (= (type $generated@@192) $generated@@82)))
(assert (= ($generated@@191 $generated@@192) $generated@@63))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@195 T@U) ($generated@@196 Int) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@81) (= (type $generated@@197) $generated@@82)) (or ($generated@@83 ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@197 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@169 ($generated@@11 ($generated@@86 ($generated@@169 $generated@@197)))))) (let (($generated@@198 ($generated@@169 ($generated@@87 ($generated@@169 $generated@@197)))))
($generated@@83 ($generated@@194 $generated@@196) $generated@@198))) (= ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)) (ite ($generated@@86 ($generated@@169 $generated@@197)) 0 (let (($generated@@199 ($generated@@169 ($generated@@87 ($generated@@169 $generated@@197)))))
(let (($generated@@200 ($generated@@194 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@169 $generated@@197)))))))
(+ (ite (= ($generated@@194 $generated@@196) $generated@@200) 1 0) ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) $generated@@199))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)))
))))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@68)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@205) $generated@@68)) ($generated@@84 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@84 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 17)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@106 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@71 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@106) (= (type $generated@@256) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@257) ($generated@@70 $generated@@4))) (= (type $generated@@259) $generated@@106)) (= (type $generated@@260) ($generated@@70 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@264)) ($generated@@103 $generated@@192 ($generated@@85 $generated@@263) $generated@@264))
 :pattern ( ($generated@@103 $generated@@192 ($generated@@85 $generated@@263) $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@82)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) $generated@@68) (= (type $generated@@270) $generated@@68)) (= (type $generated@@271) $generated@@90)) (= (type $generated@@272) $generated@@90)) (= ($generated@@84 ($generated@@265 $generated@@271 $generated@@272) ($generated@@178 $generated@@269 $generated@@270))  (and ($generated@@266 $generated@@271 $generated@@269) ($generated@@266 $generated@@272 $generated@@270))))
 :pattern ( ($generated@@84 ($generated@@265 $generated@@271 $generated@@272) ($generated@@178 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@68) ($generated@@84 $generated@@192 ($generated@@85 $generated@@273)))
 :pattern ( ($generated@@84 $generated@@192 ($generated@@85 $generated@@273)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@82) (= (type $generated@@275) $generated@@82)) (= ($generated@@184 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@184 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@82) (= (type $generated@@278) $generated@@82)) (= ($generated@@276 $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@276 $generated@@277 $generated@@278))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@279 T@U) ($generated@@280 Int) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@81) (= (type $generated@@281) $generated@@82)) (or ($generated@@83 $generated@@280 $generated@@281) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@281 ($generated@@85 $generated@@46))))) (<= ($generated@@194 0) ($generated@@79 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@79 $generated@@279 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@82) (= (type $generated@@284) $generated@@82)) (and ($generated@@282 $generated@@283) ($generated@@282 $generated@@284))) (= ($generated@@276 $generated@@283 $generated@@284)  (and (= ($generated@@89 $generated@@283) ($generated@@89 $generated@@284)) ($generated@@276 ($generated@@87 $generated@@283) ($generated@@87 $generated@@284)))))
 :pattern ( ($generated@@276 $generated@@283 $generated@@284) ($generated@@282 $generated@@283))
 :pattern ( ($generated@@276 $generated@@283 $generated@@284) ($generated@@282 $generated@@284))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@82) (= (type $generated@@286) $generated@@82)) (or ($generated@@170 $generated@@285 $generated@@286) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@285 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@286 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@287 Int) ) (!  (and ($generated@@83 $generated@@287 $generated@@285) ($generated@@83 $generated@@287 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@287 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@287 $generated@@285))
)) (= ($generated@@168 $generated@@285 $generated@@286) (forall (($generated@@288 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@285) ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@286)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@285))
)))))
 :pattern ( ($generated@@168 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@68)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@292) $generated@@68)) (= ($generated@@84 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@90) ($generated@@0 ($generated@@110 $generated@@291 $generated@@293))) ($generated@@266 $generated@@293 $generated@@292))
 :pattern ( ($generated@@110 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@84 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@68)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@297) $generated@@68)) (= ($generated@@84 $generated@@296 ($generated@@294 $generated@@297)) (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@90) ($generated@@0 ($generated@@110 $generated@@296 $generated@@298))) ($generated@@266 $generated@@298 $generated@@297))
 :pattern ( ($generated@@110 $generated@@296 $generated@@298))
))))
 :pattern ( ($generated@@84 $generated@@296 ($generated@@294 $generated@@297)))
)))
(assert (forall (($generated@@299 Int) ) (! (= ($generated@@194 $generated@@299) $generated@@299)
 :pattern ( ($generated@@194 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@169 $generated@@300) $generated@@300)
 :pattern ( ($generated@@169 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (= (type $generated@@301) $generated@@82) (= (type $generated@@302) $generated@@82)) (and ($generated@@86 $generated@@301) ($generated@@86 $generated@@302))) (= ($generated@@276 $generated@@301 $generated@@302) true))
 :pattern ( ($generated@@276 $generated@@301 $generated@@302) ($generated@@86 $generated@@301))
 :pattern ( ($generated@@276 $generated@@301 $generated@@302) ($generated@@86 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (= (type ($generated@@303 $generated@@304 $generated@@305)) $generated@@82)
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) $generated@@90)) (= (type $generated@@308) $generated@@82)) (= ($generated@@84 ($generated@@303 $generated@@307 $generated@@308) ($generated@@85 $generated@@306))  (and ($generated@@266 $generated@@307 $generated@@306) ($generated@@84 $generated@@308 ($generated@@85 $generated@@306)))))
 :pattern ( ($generated@@84 ($generated@@303 $generated@@307 $generated@@308) ($generated@@85 $generated@@306)))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) $generated@@68) (= (type $generated@@311) $generated@@68)) (= (type $generated@@312) $generated@@90)) (= (type $generated@@313) $generated@@90)) (= (type $generated@@314) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@314)) (= ($generated@@103 ($generated@@265 $generated@@312 $generated@@313) ($generated@@178 $generated@@310 $generated@@311) $generated@@314)  (and ($generated@@309 $generated@@312 $generated@@310 $generated@@314) ($generated@@309 $generated@@313 $generated@@311 $generated@@314))))
 :pattern ( ($generated@@103 ($generated@@265 $generated@@312 $generated@@313) ($generated@@178 $generated@@310 $generated@@311) $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@82) (= ($generated@@177 $generated@@315) (= ($generated@@191 $generated@@315) $generated@@61)))
 :pattern ( ($generated@@177 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@82) (= ($generated@@86 $generated@@316) (= ($generated@@191 $generated@@316) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@82) (= ($generated@@282 $generated@@317) (= ($generated@@191 $generated@@317) $generated@@65)))
 :pattern ( ($generated@@282 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@82) ($generated@@177 $generated@@318)) (exists (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (and (and (= (type $generated@@319) $generated@@90) (= (type $generated@@320) $generated@@90)) (= $generated@@318 ($generated@@265 $generated@@319 $generated@@320)))
 :no-pattern (type $generated@@319)
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@177 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@82) ($generated@@282 $generated@@321)) (exists (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (and (and (= (type $generated@@322) $generated@@90) (= (type $generated@@323) $generated@@82)) (= $generated@@321 ($generated@@303 $generated@@322 $generated@@323)))
 :no-pattern (type $generated@@322)
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
)))
 :pattern ( ($generated@@282 $generated@@321))
)))
(assert  (and (and (forall (($generated@@328 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@328)) 18)) (forall (($generated@@329 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@326 $generated@@329))
))) (forall (($generated@@330 T@T) ) (! (= (type ($generated@@324 $generated@@330)) ($generated@@326 $generated@@330))
 :pattern ( ($generated@@324 $generated@@330))
))))
(assert (forall (($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@331)) 0)
 :pattern ( ($generated@@324 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@82) ($generated@@86 $generated@@332)) (= $generated@@332 $generated@@192))
 :pattern ( ($generated@@86 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@90)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@68) (= (type $generated@@337) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@309 ($generated@@333 $generated@@335) $generated@@336 $generated@@337) ($generated@@103 $generated@@335 $generated@@336 $generated@@337)))
 :pattern ( ($generated@@309 ($generated@@333 $generated@@335) $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@105 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@108 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@105 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@110 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@73)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@346)) $generated@@64) (= ($generated@@344 ($generated@@85 $generated@@346)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@346))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@105 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@110 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@110 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 20)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@105 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@108 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@105 $generated@@384 $generated@@2)) (= ($generated@@202 $generated@@383) (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@384) (and (<= 0 ($generated ($generated@@110 $generated@@383 $generated@@385))) (<= ($generated ($generated@@110 $generated@@383 $generated@@385)) ($generated@@338 $generated@@383))))
 :pattern ( ($generated@@110 $generated@@383 $generated@@385))
)))))
 :pattern ( ($generated@@202 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@351 (type $generated@@386))))
(let (($generated@@388 ($generated@@350 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@349 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@348 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@347 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@351 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@105 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@351 (type $generated@@393))))
(let (($generated@@395 ($generated@@350 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@349 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@348 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@110 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@369 (type $generated@@397))))
(let (($generated@@399 ($generated@@368 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@367 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@366 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@365 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@369 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@105 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@369 (type $generated@@404))))
(let (($generated@@406 ($generated@@368 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@367 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@366 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@110 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 Int) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@81) (= (type $generated@@410) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@408) $generated@@409 $generated@@410) ($generated@@79 $generated@@408 $generated@@409 $generated@@410)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@408) $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@412) $generated@@68)) (= ($generated@@84 $generated@@411 ($generated@@201 $generated@@412)) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@411 $generated@@413)))) ($generated@@266 $generated@@413 $generated@@412))
 :pattern ( ($generated@@110 $generated@@411 $generated@@413))
))))
 :pattern ( ($generated@@84 $generated@@411 ($generated@@201 $generated@@412)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@414) $generated@@82) (= (type $generated@@415) $generated@@82)) (or ($generated@@170 $generated@@414 $generated@@415) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@414 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@415 ($generated@@85 $generated@@46)))))) true)
 :pattern ( ($generated@@168 $generated@@414 $generated@@415))
))))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@82) ($generated@@416 $generated@@417)) (or ($generated@@86 $generated@@417) ($generated@@282 $generated@@417)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@418 ($generated@@289 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@90) ($generated@@0 ($generated@@110 $generated@@418 $generated@@421))) ($generated@@309 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@110 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@103 $generated@@418 ($generated@@289 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@422 ($generated@@294 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@90) ($generated@@0 ($generated@@110 $generated@@422 $generated@@425))) ($generated@@309 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@110 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@103 $generated@@422 ($generated@@294 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@110 ($generated@@339 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@110 ($generated@@339 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@351 (type $generated@@431))))
(let (($generated@@433 ($generated@@350 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@105 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@435) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@110 ($generated@@347 $generated@@434) ($generated@@185 ($generated@@88 $generated@@82 $generated@@435)))) (= ($generated@@110 ($generated@@429 $generated@@434) ($generated@@185 ($generated@@88 $generated@@82 $generated@@435))) ($generated@@186 ($generated@@88 $generated@@82 $generated@@435))))))
 :pattern ( ($generated@@110 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@369 (type $generated@@439))))
(let (($generated@@441 ($generated@@368 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@105 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@443) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@442) ($generated@@185 ($generated@@88 $generated@@82 $generated@@443)))) (= ($generated@@110 ($generated@@437 $generated@@442) ($generated@@185 ($generated@@88 $generated@@82 $generated@@443))) ($generated@@186 ($generated@@88 $generated@@82 $generated@@443))))))
 :pattern ( ($generated@@110 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@350 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@349 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@110 ($generated@@390 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@110 ($generated@@347 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@110 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@444) $generated@@448))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@110 ($generated@@390 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@368 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@367 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@110 ($generated@@401 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@110 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@449) $generated@@453))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@110 ($generated@@401 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@457) $generated@@461))) (and ($generated@@309 ($generated@@110 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@309 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@103 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@465) $generated@@469))) (and ($generated@@309 ($generated@@110 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@309 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@103 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@82)) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470))) (or ($generated@@86 $generated@@471) ($generated@@282 $generated@@471)))
 :pattern ( ($generated@@282 $generated@@471) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470)))
 :pattern ( ($generated@@86 $generated@@471) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470)))
)))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@105 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@369 (type $generated@@474))))
(let (($generated@@476 ($generated@@368 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@367 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@366 $generated@@476 $generated@@475)) (= ($generated@@365 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@365 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@369 (type $generated@@477))))
(let (($generated@@479 ($generated@@368 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@367 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@366 $generated@@479 $generated@@478)) (= ($generated@@401 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@401 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@369 (type $generated@@480))))
(let (($generated@@482 ($generated@@368 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@367 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@366 $generated@@482 $generated@@481)) (= ($generated@@436 $generated@@480) ($generated@@472 $generated@@90))))))
 :pattern ( ($generated@@436 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@351 (type $generated@@483))))
(let (($generated@@485 ($generated@@350 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@349 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@348 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@90) (= (type $generated@@487) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@428 $generated@@483) ($generated@@333 ($generated@@265 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@428 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@369 (type $generated@@488))))
(let (($generated@@490 ($generated@@368 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@367 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@366 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@90) (= (type $generated@@492) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@436 $generated@@488) ($generated@@333 ($generated@@265 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@436 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@90) ($generated@@266 $generated@@493 $generated@@46)) (and (= ($generated@@333 ($generated@@88 $generated@@2 $generated@@493)) $generated@@493) ($generated@@84 ($generated@@88 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@266 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@90) ($generated@@266 $generated@@494 $generated@@47)) (and (= ($generated@@333 ($generated@@88 $generated@@3 $generated@@494)) $generated@@494) ($generated@@84 ($generated@@88 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@266 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@90) ($generated@@266 $generated@@495 $generated@@44)) (and (= ($generated@@333 ($generated@@88 $generated@@4 $generated@@495)) $generated@@495) ($generated@@84 ($generated@@88 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@266 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@90) ($generated@@266 $generated@@497 $generated@@45)) (and (= ($generated@@333 ($generated@@88 $generated@@496 $generated@@497)) $generated@@497) ($generated@@84 ($generated@@88 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@266 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@68) (= ($generated@@266 ($generated@@333 $generated@@498) $generated@@499) ($generated@@84 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@266 ($generated@@333 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@108 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@105 $generated@@501 $generated@@2)) (<= 0 ($generated@@338 $generated@@500))))
 :pattern ( ($generated@@338 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@327 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@326 $generated@@503)) (<= 0 ($generated@@325 $generated@@502))))
 :pattern ( ($generated@@325 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@454 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@454 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@454 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@454 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@514 ($generated@@462 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@462 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@76 ($generated@@462 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@90) (= (type $generated@@525) $generated@@90)) (= ($generated@@191 ($generated@@265 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@265 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= ($generated@@526 ($generated@@178 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@178 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@68) (= (type $generated@@533) $generated@@68)) (= ($generated@@530 ($generated@@178 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@178 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@90) (= (type $generated@@535) $generated@@90)) (= ($generated@@185 ($generated@@265 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@265 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@90) (= (type $generated@@537) $generated@@90)) (= ($generated@@186 ($generated@@265 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@265 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@90) (= (type $generated@@539) $generated@@82)) (= ($generated@@191 ($generated@@303 $generated@@538 $generated@@539)) $generated@@65))
 :pattern ( ($generated@@303 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@90) (= (type $generated@@541) $generated@@82)) (= ($generated@@89 ($generated@@303 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@303 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@90) (= (type $generated@@543) $generated@@82)) (= ($generated@@87 ($generated@@303 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@303 $generated@@542 $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (= (type ($generated@@544 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@547 T@U) ($generated@@548 Int) ) (! (let (($generated@@549 ($generated@@327 (type $generated@@547))))
(= (type ($generated@@545 $generated@@547 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@547 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@326 $generated@@90)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552) (forall (($generated@@553 Int) ) (!  (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@325 $generated@@550))) ($generated@@309 ($generated@@545 $generated@@550 $generated@@553) $generated@@551 $generated@@552))
 :pattern ( ($generated@@545 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@104 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@104 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@289 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@289 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@76 ($generated@@289 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@289 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@560 ($generated@@294 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@294 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@76 ($generated@@294 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@294 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@564 ($generated@@201 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@201 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@76 ($generated@@201 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@568 ($generated@@544 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@544 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@76 ($generated@@544 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@544 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@68) (= ($generated@@572 ($generated@@85 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@85 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@88 $generated@@576 ($generated@@333 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@333 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) (= ($generated@@84 $generated@@577 ($generated@@454 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@577) $generated@@580))) (and ($generated@@266 ($generated@@110 ($generated@@429 $generated@@577) $generated@@580) $generated@@579) ($generated@@266 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@577) $generated@@580))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@84 $generated@@577 ($generated@@454 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) (= ($generated@@84 $generated@@581 ($generated@@462 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@581) $generated@@584))) (and ($generated@@266 ($generated@@110 ($generated@@437 $generated@@581) $generated@@584) $generated@@583) ($generated@@266 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@581) $generated@@584))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@84 $generated@@581 ($generated@@462 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@90) (= (type $generated@@588) $generated@@90)) (< ($generated@@585 $generated@@587) ($generated@@586 ($generated@@265 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@265 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@90) (= (type $generated@@590) $generated@@90)) (< ($generated@@585 $generated@@590) ($generated@@586 ($generated@@265 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@265 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@90) (= (type $generated@@592) $generated@@82)) (< ($generated@@585 $generated@@591) ($generated@@586 ($generated@@303 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@303 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@90) (= (type $generated@@594) $generated@@82)) (< ($generated@@586 $generated@@594) ($generated@@586 ($generated@@303 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@303 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@90) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) $generated@@68)) ($generated@@266 $generated@@595 ($generated@@454 $generated@@596 $generated@@597))) (and (= ($generated@@333 ($generated@@88 ($generated@@349 $generated@@90 $generated@@90) $generated@@595)) $generated@@595) ($generated@@84 ($generated@@88 ($generated@@349 $generated@@90 $generated@@90) $generated@@595) ($generated@@454 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@266 $generated@@595 ($generated@@454 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@90) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@266 $generated@@598 ($generated@@462 $generated@@599 $generated@@600))) (and (= ($generated@@333 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@598)) $generated@@598) ($generated@@84 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@598) ($generated@@462 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@266 $generated@@598 ($generated@@462 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@68) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@90)) ($generated@@266 $generated@@603 ($generated@@178 $generated@@601 $generated@@602))) (and (= ($generated@@333 ($generated@@88 $generated@@82 $generated@@603)) $generated@@603) ($generated@@84 ($generated@@88 $generated@@82 $generated@@603) ($generated@@178 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@266 $generated@@603 ($generated@@178 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@82) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@606) (and ($generated@@282 $generated@@604) ($generated@@103 $generated@@604 ($generated@@85 $generated@@605) $generated@@606)))) ($generated@@309 ($generated@@89 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@309 ($generated@@89 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@110 ($generated@@472 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@110 ($generated@@472 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@68) (= (type $generated@@610) $generated@@68)) (and (= ($generated@@76 ($generated@@178 $generated@@609 $generated@@610)) $generated@@62) (= ($generated@@344 ($generated@@178 $generated@@609 $generated@@610)) $generated@@66)))
 :pattern ( ($generated@@178 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@82) (= ($generated@@585 ($generated@@333 $generated@@611)) ($generated@@586 $generated@@611)))
 :pattern ( ($generated@@585 ($generated@@333 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@90) ($generated@@266 $generated@@612 ($generated@@104 0))) (and (= ($generated@@333 ($generated@@88 $generated@@2 $generated@@612)) $generated@@612) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@612) ($generated@@104 0))))
 :pattern ( ($generated@@266 $generated@@612 ($generated@@104 0)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@90) (= (type $generated@@614) $generated@@68)) ($generated@@266 $generated@@613 ($generated@@289 $generated@@614))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@613)) $generated@@613) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@613) ($generated@@289 $generated@@614))))
 :pattern ( ($generated@@266 $generated@@613 ($generated@@289 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@90) (= (type $generated@@616) $generated@@68)) ($generated@@266 $generated@@615 ($generated@@294 $generated@@616))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@615)) $generated@@615) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@615) ($generated@@294 $generated@@616))))
 :pattern ( ($generated@@266 $generated@@615 ($generated@@294 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@90) (= (type $generated@@618) $generated@@68)) ($generated@@266 $generated@@617 ($generated@@201 $generated@@618))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@617)) $generated@@617) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@617) ($generated@@201 $generated@@618))))
 :pattern ( ($generated@@266 $generated@@617 ($generated@@201 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@90) (= (type $generated@@620) $generated@@68)) ($generated@@266 $generated@@619 ($generated@@544 $generated@@620))) (and (= ($generated@@333 ($generated@@88 ($generated@@326 $generated@@90) $generated@@619)) $generated@@619) ($generated@@84 ($generated@@88 ($generated@@326 $generated@@90) $generated@@619) ($generated@@544 $generated@@620))))
 :pattern ( ($generated@@266 $generated@@619 ($generated@@544 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@68) (= (type $generated@@622) $generated@@90)) ($generated@@266 $generated@@622 ($generated@@85 $generated@@621))) (and (= ($generated@@333 ($generated@@88 $generated@@82 $generated@@622)) $generated@@622) ($generated@@84 ($generated@@88 $generated@@82 $generated@@622) ($generated@@85 $generated@@621))))
 :pattern ( ($generated@@266 $generated@@622 ($generated@@85 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@82) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@625) (and ($generated@@282 $generated@@623) ($generated@@103 $generated@@623 ($generated@@85 $generated@@624) $generated@@625)))) ($generated@@103 ($generated@@87 $generated@@623) ($generated@@85 $generated@@624) $generated@@625))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@623) ($generated@@85 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@626 ($generated@@201 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@626 $generated@@629)))) ($generated@@309 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@110 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@103 $generated@@626 ($generated@@201 $generated@@627) $generated@@628))
)))
(assert (= $generated@@192 ($generated@@169 $generated@@192)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@82) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@632) (and ($generated@@177 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@68) ($generated@@103 $generated@@630 ($generated@@178 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@103 $generated@@630 ($generated@@178 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@309 ($generated@@185 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@309 ($generated@@185 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@82) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@636) (and ($generated@@177 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@68) ($generated@@103 $generated@@634 ($generated@@178 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@103 $generated@@634 ($generated@@178 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@309 ($generated@@186 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@309 ($generated@@186 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@90) (= (type $generated@@639) $generated@@90)) (= ($generated@@265 ($generated@@169 $generated@@638) ($generated@@169 $generated@@639)) ($generated@@169 ($generated@@265 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@265 ($generated@@169 $generated@@638) ($generated@@169 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@90) (= (type $generated@@641) $generated@@82)) (= ($generated@@303 ($generated@@169 $generated@@640) ($generated@@169 $generated@@641)) ($generated@@169 ($generated@@303 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@303 ($generated@@169 $generated@@640) ($generated@@169 $generated@@641)))
)))
(assert (forall (($generated@@642 Int) ) (! (= ($generated@@333 ($generated@@8 ($generated@@194 $generated@@642))) ($generated@@169 ($generated@@333 ($generated@@8 $generated@@642))))
 :pattern ( ($generated@@333 ($generated@@8 ($generated@@194 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@333 ($generated@@169 $generated@@643)) ($generated@@169 ($generated@@333 $generated@@643)))
 :pattern ( ($generated@@333 ($generated@@169 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@327 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@326 $generated@@645)) (= ($generated@@325 $generated@@644) 0)) (= $generated@@644 ($generated@@324 $generated@@645))))
 :pattern ( ($generated@@325 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@105 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@338 ($generated@@111 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@338 $generated@@646) ($generated ($generated@@110 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@338 ($generated@@111 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@651) $generated@@2)) ($generated@@103 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@103 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@653) $generated@@3)) ($generated@@103 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@103 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@655) $generated@@4)) ($generated@@103 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@103 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@657) $generated@@496)) ($generated@@103 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@103 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@659) $generated@@90)) ($generated@@103 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@103 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@660) $generated@@68) (= (type $generated@@661) $generated@@90)) (= (type $generated@@662) $generated@@82)) (= (type $generated@@663) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@663)) (= ($generated@@103 ($generated@@303 $generated@@661 $generated@@662) ($generated@@85 $generated@@660) $generated@@663)  (and ($generated@@309 $generated@@661 $generated@@660 $generated@@663) ($generated@@103 $generated@@662 ($generated@@85 $generated@@660) $generated@@663))))
 :pattern ( ($generated@@103 ($generated@@303 $generated@@661 $generated@@662) ($generated@@85 $generated@@660) $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@326 $generated@@90)) (= (type $generated@@665) $generated@@68)) (= ($generated@@84 $generated@@664 ($generated@@544 $generated@@665)) (forall (($generated@@666 Int) ) (!  (=> (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@325 $generated@@664))) ($generated@@266 ($generated@@545 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@545 $generated@@664 $generated@@666))
))))
 :pattern ( ($generated@@84 $generated@@664 ($generated@@544 $generated@@665)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@326 $generated@@90)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@325 $generated@@668))) (< ($generated@@586 ($generated@@88 $generated@@82 ($generated@@545 $generated@@668 $generated@@669))) ($generated@@667 $generated@@668))))
 :pattern ( ($generated@@586 ($generated@@88 $generated@@82 ($generated@@545 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@68)) ($generated@@84 $generated@@670 ($generated@@454 $generated@@671 $generated@@672))) (and (and ($generated@@84 ($generated@@347 $generated@@670) ($generated@@289 $generated@@671)) ($generated@@84 ($generated@@390 $generated@@670) ($generated@@289 $generated@@672))) ($generated@@84 ($generated@@428 $generated@@670) ($generated@@289 ($generated@@178 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@84 $generated@@670 ($generated@@454 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@84 $generated@@673 ($generated@@462 $generated@@674 $generated@@675))) (and (and ($generated@@84 ($generated@@365 $generated@@673) ($generated@@294 $generated@@674)) ($generated@@84 ($generated@@401 $generated@@673) ($generated@@294 $generated@@675))) ($generated@@84 ($generated@@436 $generated@@673) ($generated@@294 ($generated@@178 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@84 $generated@@673 ($generated@@462 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@84 $generated@@676 $generated@@46))
 :pattern ( ($generated@@84 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@84 $generated@@677 $generated@@47))
 :pattern ( ($generated@@84 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@84 $generated@@678 $generated@@44))
 :pattern ( ($generated@@84 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@496) ($generated@@84 $generated@@679 $generated@@45))
 :pattern ( ($generated@@84 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@90) ($generated@@84 $generated@@680 $generated@@48))
 :pattern ( ($generated@@84 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@681) ($generated@@208 $generated@@106 $generated@@4)) (= (type $generated@@682) $generated@@106)) (= (type $generated@@683) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@684) $generated@@82)) (= (type $generated@@685) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@687  (=> (and (and (= $generated@@681 ($generated@@207 $generated@@682 $generated@@683 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@170 $generated@@684 $generated@@685)) (or ($generated@@168 $generated@@684 $generated@@685) (forall (($generated@@688 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@688 $generated@@684) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@688 $generated@@685)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@688 $generated@@685))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@688 $generated@@684))
))))))
(let (($generated@@689  (=> (and ($generated@@262 $generated@@683) ($generated@@686 $generated@@683)) (=> (and (and ($generated@@84 $generated@@685 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@685 ($generated@@85 $generated@@46) $generated@@683)) ($generated@@416 $generated@@685)) (=> (and (and (and (and ($generated@@84 $generated@@684 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@684 ($generated@@85 $generated@@46) $generated@@683)) ($generated@@416 $generated@@684)) (= 3 $generated@@78)) (and (and ($generated@@170 $generated@@685 $generated@@684) (and ($generated@@168 $generated@@685 $generated@@684) (forall (($generated@@690 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@690 $generated@@685) ($generated@@79 ($generated@@80 $generated@@162) $generated@@690 $generated@@684)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@690 $generated@@684))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@690 $generated@@685))
)))) (= (ControlFlow 0 3) 2))) $generated@@687)))))
$generated@@689)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@194 (Int) Int)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U T@U T@U) Bool)
(declare-fun $generated@@324 (T@T) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U Int) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@667 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@81)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@81)))
(assert (forall (($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) (= (type $generated@@166) $generated@@82)) (= ($generated@@79 $generated@@164 $generated@@165 $generated@@166) ($generated@@79 $generated@@162 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@79 ($generated@@161 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@84 $generated@@167 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@167 ($generated@@104 0)))
)))
(assert (forall (($generated@@171 T@U) ) (! (let (($generated@@172 (type $generated@@171)))
(= (type ($generated@@169 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@82) (= (type $generated@@174) $generated@@82)) (or ($generated@@170 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@173 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@174 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@175 Int) ) (!  (and ($generated@@83 $generated@@175 ($generated@@169 $generated@@173)) ($generated@@83 $generated@@175 ($generated@@169 $generated@@174)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@175 $generated@@174))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@175 $generated@@173))
)) (= ($generated@@168 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (forall (($generated@@176 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 ($generated@@169 $generated@@173)) ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 ($generated@@169 $generated@@174))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 $generated@@174))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 $generated@@173))
)))))
 :weight 3
 :pattern ( ($generated@@168 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@179 $generated@@180)) $generated@@68)
 :pattern ( ($generated@@178 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@68) (= (type $generated@@182) $generated@@68)) (= (type $generated@@183) $generated@@82)) ($generated@@84 $generated@@183 ($generated@@178 $generated@@181 $generated@@182))) ($generated@@177 $generated@@183))
 :pattern ( ($generated@@177 $generated@@183) ($generated@@84 $generated@@183 ($generated@@178 $generated@@181 $generated@@182)))
)))
(assert  (and (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@90)
 :pattern ( ($generated@@185 $generated@@187))
)) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@90)
 :pattern ( ($generated@@186 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@82) (= (type $generated@@190) $generated@@82)) true) (= ($generated@@184 $generated@@189 $generated@@190)  (and (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)) (= ($generated@@186 $generated@@189) ($generated@@186 $generated@@190)))))
 :pattern ( ($generated@@184 $generated@@189 $generated@@190))
)))
(assert  (and (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@72)
 :pattern ( ($generated@@191 $generated@@193))
)) (= (type $generated@@192) $generated@@82)))
(assert (= ($generated@@191 $generated@@192) $generated@@63))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@195 T@U) ($generated@@196 Int) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@81) (= (type $generated@@197) $generated@@82)) (or ($generated@@83 ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@197 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@169 ($generated@@11 ($generated@@86 ($generated@@169 $generated@@197)))))) (let (($generated@@198 ($generated@@169 ($generated@@87 ($generated@@169 $generated@@197)))))
($generated@@83 ($generated@@194 $generated@@196) $generated@@198))) (= ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)) (ite ($generated@@86 ($generated@@169 $generated@@197)) 0 (let (($generated@@199 ($generated@@169 ($generated@@87 ($generated@@169 $generated@@197)))))
(let (($generated@@200 ($generated@@194 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@169 $generated@@197)))))))
(+ (ite (= ($generated@@194 $generated@@196) $generated@@200) 1 0) ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) $generated@@199))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)))
))))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@68)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@205) $generated@@68)) ($generated@@84 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@84 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 17)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@106 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@71 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@106) (= (type $generated@@256) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@257) ($generated@@70 $generated@@4))) (= (type $generated@@259) $generated@@106)) (= (type $generated@@260) ($generated@@70 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@264)) ($generated@@103 $generated@@192 ($generated@@85 $generated@@263) $generated@@264))
 :pattern ( ($generated@@103 $generated@@192 ($generated@@85 $generated@@263) $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@82)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) $generated@@68) (= (type $generated@@270) $generated@@68)) (= (type $generated@@271) $generated@@90)) (= (type $generated@@272) $generated@@90)) (= ($generated@@84 ($generated@@265 $generated@@271 $generated@@272) ($generated@@178 $generated@@269 $generated@@270))  (and ($generated@@266 $generated@@271 $generated@@269) ($generated@@266 $generated@@272 $generated@@270))))
 :pattern ( ($generated@@84 ($generated@@265 $generated@@271 $generated@@272) ($generated@@178 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@68) ($generated@@84 $generated@@192 ($generated@@85 $generated@@273)))
 :pattern ( ($generated@@84 $generated@@192 ($generated@@85 $generated@@273)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@82) (= (type $generated@@275) $generated@@82)) (= ($generated@@184 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@184 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@82) (= (type $generated@@278) $generated@@82)) (= ($generated@@276 $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@276 $generated@@277 $generated@@278))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@279 T@U) ($generated@@280 Int) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@81) (= (type $generated@@281) $generated@@82)) (or ($generated@@83 $generated@@280 $generated@@281) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@281 ($generated@@85 $generated@@46))))) (<= ($generated@@194 0) ($generated@@79 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@79 $generated@@279 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@82) (= (type $generated@@284) $generated@@82)) (and ($generated@@282 $generated@@283) ($generated@@282 $generated@@284))) (= ($generated@@276 $generated@@283 $generated@@284)  (and (= ($generated@@89 $generated@@283) ($generated@@89 $generated@@284)) ($generated@@276 ($generated@@87 $generated@@283) ($generated@@87 $generated@@284)))))
 :pattern ( ($generated@@276 $generated@@283 $generated@@284) ($generated@@282 $generated@@283))
 :pattern ( ($generated@@276 $generated@@283 $generated@@284) ($generated@@282 $generated@@284))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@82) (= (type $generated@@286) $generated@@82)) (or ($generated@@170 $generated@@285 $generated@@286) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@285 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@286 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@287 Int) ) (!  (and ($generated@@83 $generated@@287 $generated@@285) ($generated@@83 $generated@@287 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@287 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@287 $generated@@285))
)) (= ($generated@@168 $generated@@285 $generated@@286) (forall (($generated@@288 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@285) ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@286)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@285))
)))))
 :pattern ( ($generated@@168 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@68)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@292) $generated@@68)) (= ($generated@@84 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@90) ($generated@@0 ($generated@@110 $generated@@291 $generated@@293))) ($generated@@266 $generated@@293 $generated@@292))
 :pattern ( ($generated@@110 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@84 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@68)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@297) $generated@@68)) (= ($generated@@84 $generated@@296 ($generated@@294 $generated@@297)) (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@90) ($generated@@0 ($generated@@110 $generated@@296 $generated@@298))) ($generated@@266 $generated@@298 $generated@@297))
 :pattern ( ($generated@@110 $generated@@296 $generated@@298))
))))
 :pattern ( ($generated@@84 $generated@@296 ($generated@@294 $generated@@297)))
)))
(assert (forall (($generated@@299 Int) ) (! (= ($generated@@194 $generated@@299) $generated@@299)
 :pattern ( ($generated@@194 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@169 $generated@@300) $generated@@300)
 :pattern ( ($generated@@169 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (= (type $generated@@301) $generated@@82) (= (type $generated@@302) $generated@@82)) (and ($generated@@86 $generated@@301) ($generated@@86 $generated@@302))) (= ($generated@@276 $generated@@301 $generated@@302) true))
 :pattern ( ($generated@@276 $generated@@301 $generated@@302) ($generated@@86 $generated@@301))
 :pattern ( ($generated@@276 $generated@@301 $generated@@302) ($generated@@86 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (= (type ($generated@@303 $generated@@304 $generated@@305)) $generated@@82)
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) $generated@@90)) (= (type $generated@@308) $generated@@82)) (= ($generated@@84 ($generated@@303 $generated@@307 $generated@@308) ($generated@@85 $generated@@306))  (and ($generated@@266 $generated@@307 $generated@@306) ($generated@@84 $generated@@308 ($generated@@85 $generated@@306)))))
 :pattern ( ($generated@@84 ($generated@@303 $generated@@307 $generated@@308) ($generated@@85 $generated@@306)))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) $generated@@68) (= (type $generated@@311) $generated@@68)) (= (type $generated@@312) $generated@@90)) (= (type $generated@@313) $generated@@90)) (= (type $generated@@314) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@314)) (= ($generated@@103 ($generated@@265 $generated@@312 $generated@@313) ($generated@@178 $generated@@310 $generated@@311) $generated@@314)  (and ($generated@@309 $generated@@312 $generated@@310 $generated@@314) ($generated@@309 $generated@@313 $generated@@311 $generated@@314))))
 :pattern ( ($generated@@103 ($generated@@265 $generated@@312 $generated@@313) ($generated@@178 $generated@@310 $generated@@311) $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@82) (= ($generated@@177 $generated@@315) (= ($generated@@191 $generated@@315) $generated@@61)))
 :pattern ( ($generated@@177 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@82) (= ($generated@@86 $generated@@316) (= ($generated@@191 $generated@@316) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@82) (= ($generated@@282 $generated@@317) (= ($generated@@191 $generated@@317) $generated@@65)))
 :pattern ( ($generated@@282 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@82) ($generated@@177 $generated@@318)) (exists (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (and (and (= (type $generated@@319) $generated@@90) (= (type $generated@@320) $generated@@90)) (= $generated@@318 ($generated@@265 $generated@@319 $generated@@320)))
 :no-pattern (type $generated@@319)
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@177 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@82) ($generated@@282 $generated@@321)) (exists (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (and (and (= (type $generated@@322) $generated@@90) (= (type $generated@@323) $generated@@82)) (= $generated@@321 ($generated@@303 $generated@@322 $generated@@323)))
 :no-pattern (type $generated@@322)
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
)))
 :pattern ( ($generated@@282 $generated@@321))
)))
(assert  (and (and (forall (($generated@@328 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@328)) 18)) (forall (($generated@@329 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@326 $generated@@329))
))) (forall (($generated@@330 T@T) ) (! (= (type ($generated@@324 $generated@@330)) ($generated@@326 $generated@@330))
 :pattern ( ($generated@@324 $generated@@330))
))))
(assert (forall (($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@331)) 0)
 :pattern ( ($generated@@324 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@82) ($generated@@86 $generated@@332)) (= $generated@@332 $generated@@192))
 :pattern ( ($generated@@86 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@90)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@68) (= (type $generated@@337) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@309 ($generated@@333 $generated@@335) $generated@@336 $generated@@337) ($generated@@103 $generated@@335 $generated@@336 $generated@@337)))
 :pattern ( ($generated@@309 ($generated@@333 $generated@@335) $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@105 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@108 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@105 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@110 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@73)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@346)) $generated@@64) (= ($generated@@344 ($generated@@85 $generated@@346)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@346))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@105 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@110 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@110 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 20)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@105 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@108 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@105 $generated@@384 $generated@@2)) (= ($generated@@202 $generated@@383) (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@384) (and (<= 0 ($generated ($generated@@110 $generated@@383 $generated@@385))) (<= ($generated ($generated@@110 $generated@@383 $generated@@385)) ($generated@@338 $generated@@383))))
 :pattern ( ($generated@@110 $generated@@383 $generated@@385))
)))))
 :pattern ( ($generated@@202 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@351 (type $generated@@386))))
(let (($generated@@388 ($generated@@350 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@349 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@348 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@347 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@351 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@105 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@351 (type $generated@@393))))
(let (($generated@@395 ($generated@@350 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@349 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@348 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@110 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@369 (type $generated@@397))))
(let (($generated@@399 ($generated@@368 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@367 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@366 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@365 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@369 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@105 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@369 (type $generated@@404))))
(let (($generated@@406 ($generated@@368 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@367 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@366 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@110 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 Int) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@81) (= (type $generated@@410) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@408) $generated@@409 $generated@@410) ($generated@@79 $generated@@408 $generated@@409 $generated@@410)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@408) $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@412) $generated@@68)) (= ($generated@@84 $generated@@411 ($generated@@201 $generated@@412)) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@411 $generated@@413)))) ($generated@@266 $generated@@413 $generated@@412))
 :pattern ( ($generated@@110 $generated@@411 $generated@@413))
))))
 :pattern ( ($generated@@84 $generated@@411 ($generated@@201 $generated@@412)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@414) $generated@@82) (= (type $generated@@415) $generated@@82)) (or ($generated@@170 $generated@@414 $generated@@415) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@414 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@415 ($generated@@85 $generated@@46)))))) true)
 :pattern ( ($generated@@168 $generated@@414 $generated@@415))
))))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@82) ($generated@@416 $generated@@417)) (or ($generated@@86 $generated@@417) ($generated@@282 $generated@@417)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@418 ($generated@@289 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@90) ($generated@@0 ($generated@@110 $generated@@418 $generated@@421))) ($generated@@309 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@110 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@103 $generated@@418 ($generated@@289 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@422 ($generated@@294 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@90) ($generated@@0 ($generated@@110 $generated@@422 $generated@@425))) ($generated@@309 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@110 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@103 $generated@@422 ($generated@@294 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@110 ($generated@@339 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@110 ($generated@@339 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@351 (type $generated@@431))))
(let (($generated@@433 ($generated@@350 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@105 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@435) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@110 ($generated@@347 $generated@@434) ($generated@@185 ($generated@@88 $generated@@82 $generated@@435)))) (= ($generated@@110 ($generated@@429 $generated@@434) ($generated@@185 ($generated@@88 $generated@@82 $generated@@435))) ($generated@@186 ($generated@@88 $generated@@82 $generated@@435))))))
 :pattern ( ($generated@@110 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@369 (type $generated@@439))))
(let (($generated@@441 ($generated@@368 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@105 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@443) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@442) ($generated@@185 ($generated@@88 $generated@@82 $generated@@443)))) (= ($generated@@110 ($generated@@437 $generated@@442) ($generated@@185 ($generated@@88 $generated@@82 $generated@@443))) ($generated@@186 ($generated@@88 $generated@@82 $generated@@443))))))
 :pattern ( ($generated@@110 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@350 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@349 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@110 ($generated@@390 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@110 ($generated@@347 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@110 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@444) $generated@@448))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@110 ($generated@@390 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@368 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@367 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@110 ($generated@@401 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@110 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@449) $generated@@453))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@110 ($generated@@401 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@457) $generated@@461))) (and ($generated@@309 ($generated@@110 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@309 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@103 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@465) $generated@@469))) (and ($generated@@309 ($generated@@110 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@309 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@103 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@82)) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470))) (or ($generated@@86 $generated@@471) ($generated@@282 $generated@@471)))
 :pattern ( ($generated@@282 $generated@@471) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470)))
 :pattern ( ($generated@@86 $generated@@471) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470)))
)))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@105 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@369 (type $generated@@474))))
(let (($generated@@476 ($generated@@368 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@367 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@366 $generated@@476 $generated@@475)) (= ($generated@@365 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@365 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@369 (type $generated@@477))))
(let (($generated@@479 ($generated@@368 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@367 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@366 $generated@@479 $generated@@478)) (= ($generated@@401 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@401 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@369 (type $generated@@480))))
(let (($generated@@482 ($generated@@368 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@367 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@366 $generated@@482 $generated@@481)) (= ($generated@@436 $generated@@480) ($generated@@472 $generated@@90))))))
 :pattern ( ($generated@@436 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@351 (type $generated@@483))))
(let (($generated@@485 ($generated@@350 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@349 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@348 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@90) (= (type $generated@@487) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@428 $generated@@483) ($generated@@333 ($generated@@265 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@428 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@369 (type $generated@@488))))
(let (($generated@@490 ($generated@@368 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@367 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@366 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@90) (= (type $generated@@492) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@436 $generated@@488) ($generated@@333 ($generated@@265 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@436 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@90) ($generated@@266 $generated@@493 $generated@@46)) (and (= ($generated@@333 ($generated@@88 $generated@@2 $generated@@493)) $generated@@493) ($generated@@84 ($generated@@88 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@266 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@90) ($generated@@266 $generated@@494 $generated@@47)) (and (= ($generated@@333 ($generated@@88 $generated@@3 $generated@@494)) $generated@@494) ($generated@@84 ($generated@@88 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@266 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@90) ($generated@@266 $generated@@495 $generated@@44)) (and (= ($generated@@333 ($generated@@88 $generated@@4 $generated@@495)) $generated@@495) ($generated@@84 ($generated@@88 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@266 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@90) ($generated@@266 $generated@@497 $generated@@45)) (and (= ($generated@@333 ($generated@@88 $generated@@496 $generated@@497)) $generated@@497) ($generated@@84 ($generated@@88 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@266 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@68) (= ($generated@@266 ($generated@@333 $generated@@498) $generated@@499) ($generated@@84 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@266 ($generated@@333 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@108 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@105 $generated@@501 $generated@@2)) (<= 0 ($generated@@338 $generated@@500))))
 :pattern ( ($generated@@338 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@327 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@326 $generated@@503)) (<= 0 ($generated@@325 $generated@@502))))
 :pattern ( ($generated@@325 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@454 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@454 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@454 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@454 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@514 ($generated@@462 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@462 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@76 ($generated@@462 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@90) (= (type $generated@@525) $generated@@90)) (= ($generated@@191 ($generated@@265 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@265 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= ($generated@@526 ($generated@@178 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@178 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@68) (= (type $generated@@533) $generated@@68)) (= ($generated@@530 ($generated@@178 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@178 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@90) (= (type $generated@@535) $generated@@90)) (= ($generated@@185 ($generated@@265 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@265 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@90) (= (type $generated@@537) $generated@@90)) (= ($generated@@186 ($generated@@265 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@265 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@90) (= (type $generated@@539) $generated@@82)) (= ($generated@@191 ($generated@@303 $generated@@538 $generated@@539)) $generated@@65))
 :pattern ( ($generated@@303 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@90) (= (type $generated@@541) $generated@@82)) (= ($generated@@89 ($generated@@303 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@303 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@90) (= (type $generated@@543) $generated@@82)) (= ($generated@@87 ($generated@@303 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@303 $generated@@542 $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (= (type ($generated@@544 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@547 T@U) ($generated@@548 Int) ) (! (let (($generated@@549 ($generated@@327 (type $generated@@547))))
(= (type ($generated@@545 $generated@@547 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@547 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@326 $generated@@90)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552) (forall (($generated@@553 Int) ) (!  (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@325 $generated@@550))) ($generated@@309 ($generated@@545 $generated@@550 $generated@@553) $generated@@551 $generated@@552))
 :pattern ( ($generated@@545 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@104 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@104 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@289 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@289 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@76 ($generated@@289 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@289 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@560 ($generated@@294 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@294 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@76 ($generated@@294 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@294 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@564 ($generated@@201 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@201 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@76 ($generated@@201 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@568 ($generated@@544 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@544 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@76 ($generated@@544 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@544 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@68) (= ($generated@@572 ($generated@@85 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@85 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@88 $generated@@576 ($generated@@333 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@333 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) (= ($generated@@84 $generated@@577 ($generated@@454 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@577) $generated@@580))) (and ($generated@@266 ($generated@@110 ($generated@@429 $generated@@577) $generated@@580) $generated@@579) ($generated@@266 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@577) $generated@@580))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@84 $generated@@577 ($generated@@454 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) (= ($generated@@84 $generated@@581 ($generated@@462 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@581) $generated@@584))) (and ($generated@@266 ($generated@@110 ($generated@@437 $generated@@581) $generated@@584) $generated@@583) ($generated@@266 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@581) $generated@@584))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@84 $generated@@581 ($generated@@462 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@90) (= (type $generated@@588) $generated@@90)) (< ($generated@@585 $generated@@587) ($generated@@586 ($generated@@265 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@265 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@90) (= (type $generated@@590) $generated@@90)) (< ($generated@@585 $generated@@590) ($generated@@586 ($generated@@265 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@265 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@90) (= (type $generated@@592) $generated@@82)) (< ($generated@@585 $generated@@591) ($generated@@586 ($generated@@303 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@303 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@90) (= (type $generated@@594) $generated@@82)) (< ($generated@@586 $generated@@594) ($generated@@586 ($generated@@303 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@303 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@90) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) $generated@@68)) ($generated@@266 $generated@@595 ($generated@@454 $generated@@596 $generated@@597))) (and (= ($generated@@333 ($generated@@88 ($generated@@349 $generated@@90 $generated@@90) $generated@@595)) $generated@@595) ($generated@@84 ($generated@@88 ($generated@@349 $generated@@90 $generated@@90) $generated@@595) ($generated@@454 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@266 $generated@@595 ($generated@@454 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@90) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@266 $generated@@598 ($generated@@462 $generated@@599 $generated@@600))) (and (= ($generated@@333 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@598)) $generated@@598) ($generated@@84 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@598) ($generated@@462 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@266 $generated@@598 ($generated@@462 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@68) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@90)) ($generated@@266 $generated@@603 ($generated@@178 $generated@@601 $generated@@602))) (and (= ($generated@@333 ($generated@@88 $generated@@82 $generated@@603)) $generated@@603) ($generated@@84 ($generated@@88 $generated@@82 $generated@@603) ($generated@@178 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@266 $generated@@603 ($generated@@178 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@82) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@606) (and ($generated@@282 $generated@@604) ($generated@@103 $generated@@604 ($generated@@85 $generated@@605) $generated@@606)))) ($generated@@309 ($generated@@89 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@309 ($generated@@89 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@110 ($generated@@472 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@110 ($generated@@472 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@68) (= (type $generated@@610) $generated@@68)) (and (= ($generated@@76 ($generated@@178 $generated@@609 $generated@@610)) $generated@@62) (= ($generated@@344 ($generated@@178 $generated@@609 $generated@@610)) $generated@@66)))
 :pattern ( ($generated@@178 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@82) (= ($generated@@585 ($generated@@333 $generated@@611)) ($generated@@586 $generated@@611)))
 :pattern ( ($generated@@585 ($generated@@333 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@90) ($generated@@266 $generated@@612 ($generated@@104 0))) (and (= ($generated@@333 ($generated@@88 $generated@@2 $generated@@612)) $generated@@612) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@612) ($generated@@104 0))))
 :pattern ( ($generated@@266 $generated@@612 ($generated@@104 0)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@90) (= (type $generated@@614) $generated@@68)) ($generated@@266 $generated@@613 ($generated@@289 $generated@@614))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@613)) $generated@@613) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@613) ($generated@@289 $generated@@614))))
 :pattern ( ($generated@@266 $generated@@613 ($generated@@289 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@90) (= (type $generated@@616) $generated@@68)) ($generated@@266 $generated@@615 ($generated@@294 $generated@@616))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@615)) $generated@@615) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@615) ($generated@@294 $generated@@616))))
 :pattern ( ($generated@@266 $generated@@615 ($generated@@294 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@90) (= (type $generated@@618) $generated@@68)) ($generated@@266 $generated@@617 ($generated@@201 $generated@@618))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@617)) $generated@@617) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@617) ($generated@@201 $generated@@618))))
 :pattern ( ($generated@@266 $generated@@617 ($generated@@201 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@90) (= (type $generated@@620) $generated@@68)) ($generated@@266 $generated@@619 ($generated@@544 $generated@@620))) (and (= ($generated@@333 ($generated@@88 ($generated@@326 $generated@@90) $generated@@619)) $generated@@619) ($generated@@84 ($generated@@88 ($generated@@326 $generated@@90) $generated@@619) ($generated@@544 $generated@@620))))
 :pattern ( ($generated@@266 $generated@@619 ($generated@@544 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@68) (= (type $generated@@622) $generated@@90)) ($generated@@266 $generated@@622 ($generated@@85 $generated@@621))) (and (= ($generated@@333 ($generated@@88 $generated@@82 $generated@@622)) $generated@@622) ($generated@@84 ($generated@@88 $generated@@82 $generated@@622) ($generated@@85 $generated@@621))))
 :pattern ( ($generated@@266 $generated@@622 ($generated@@85 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@82) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@625) (and ($generated@@282 $generated@@623) ($generated@@103 $generated@@623 ($generated@@85 $generated@@624) $generated@@625)))) ($generated@@103 ($generated@@87 $generated@@623) ($generated@@85 $generated@@624) $generated@@625))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@623) ($generated@@85 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@626 ($generated@@201 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@626 $generated@@629)))) ($generated@@309 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@110 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@103 $generated@@626 ($generated@@201 $generated@@627) $generated@@628))
)))
(assert (= $generated@@192 ($generated@@169 $generated@@192)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@82) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@632) (and ($generated@@177 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@68) ($generated@@103 $generated@@630 ($generated@@178 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@103 $generated@@630 ($generated@@178 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@309 ($generated@@185 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@309 ($generated@@185 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@82) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@636) (and ($generated@@177 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@68) ($generated@@103 $generated@@634 ($generated@@178 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@103 $generated@@634 ($generated@@178 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@309 ($generated@@186 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@309 ($generated@@186 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@90) (= (type $generated@@639) $generated@@90)) (= ($generated@@265 ($generated@@169 $generated@@638) ($generated@@169 $generated@@639)) ($generated@@169 ($generated@@265 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@265 ($generated@@169 $generated@@638) ($generated@@169 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@90) (= (type $generated@@641) $generated@@82)) (= ($generated@@303 ($generated@@169 $generated@@640) ($generated@@169 $generated@@641)) ($generated@@169 ($generated@@303 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@303 ($generated@@169 $generated@@640) ($generated@@169 $generated@@641)))
)))
(assert (forall (($generated@@642 Int) ) (! (= ($generated@@333 ($generated@@8 ($generated@@194 $generated@@642))) ($generated@@169 ($generated@@333 ($generated@@8 $generated@@642))))
 :pattern ( ($generated@@333 ($generated@@8 ($generated@@194 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@333 ($generated@@169 $generated@@643)) ($generated@@169 ($generated@@333 $generated@@643)))
 :pattern ( ($generated@@333 ($generated@@169 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@327 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@326 $generated@@645)) (= ($generated@@325 $generated@@644) 0)) (= $generated@@644 ($generated@@324 $generated@@645))))
 :pattern ( ($generated@@325 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@105 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@338 ($generated@@111 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@338 $generated@@646) ($generated ($generated@@110 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@338 ($generated@@111 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@651) $generated@@2)) ($generated@@103 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@103 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@653) $generated@@3)) ($generated@@103 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@103 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@655) $generated@@4)) ($generated@@103 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@103 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@657) $generated@@496)) ($generated@@103 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@103 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@659) $generated@@90)) ($generated@@103 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@103 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@660) $generated@@68) (= (type $generated@@661) $generated@@90)) (= (type $generated@@662) $generated@@82)) (= (type $generated@@663) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@663)) (= ($generated@@103 ($generated@@303 $generated@@661 $generated@@662) ($generated@@85 $generated@@660) $generated@@663)  (and ($generated@@309 $generated@@661 $generated@@660 $generated@@663) ($generated@@103 $generated@@662 ($generated@@85 $generated@@660) $generated@@663))))
 :pattern ( ($generated@@103 ($generated@@303 $generated@@661 $generated@@662) ($generated@@85 $generated@@660) $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@326 $generated@@90)) (= (type $generated@@665) $generated@@68)) (= ($generated@@84 $generated@@664 ($generated@@544 $generated@@665)) (forall (($generated@@666 Int) ) (!  (=> (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@325 $generated@@664))) ($generated@@266 ($generated@@545 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@545 $generated@@664 $generated@@666))
))))
 :pattern ( ($generated@@84 $generated@@664 ($generated@@544 $generated@@665)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@326 $generated@@90)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@325 $generated@@668))) (< ($generated@@586 ($generated@@88 $generated@@82 ($generated@@545 $generated@@668 $generated@@669))) ($generated@@667 $generated@@668))))
 :pattern ( ($generated@@586 ($generated@@88 $generated@@82 ($generated@@545 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@68)) ($generated@@84 $generated@@670 ($generated@@454 $generated@@671 $generated@@672))) (and (and ($generated@@84 ($generated@@347 $generated@@670) ($generated@@289 $generated@@671)) ($generated@@84 ($generated@@390 $generated@@670) ($generated@@289 $generated@@672))) ($generated@@84 ($generated@@428 $generated@@670) ($generated@@289 ($generated@@178 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@84 $generated@@670 ($generated@@454 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@84 $generated@@673 ($generated@@462 $generated@@674 $generated@@675))) (and (and ($generated@@84 ($generated@@365 $generated@@673) ($generated@@294 $generated@@674)) ($generated@@84 ($generated@@401 $generated@@673) ($generated@@294 $generated@@675))) ($generated@@84 ($generated@@436 $generated@@673) ($generated@@294 ($generated@@178 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@84 $generated@@673 ($generated@@462 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@84 $generated@@676 $generated@@46))
 :pattern ( ($generated@@84 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@84 $generated@@677 $generated@@47))
 :pattern ( ($generated@@84 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@84 $generated@@678 $generated@@44))
 :pattern ( ($generated@@84 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@496) ($generated@@84 $generated@@679 $generated@@45))
 :pattern ( ($generated@@84 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@90) ($generated@@84 $generated@@680 $generated@@48))
 :pattern ( ($generated@@84 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 (T@U) Bool)
(declare-fun $generated@@687 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@681) ($generated@@208 $generated@@106 $generated@@4)) (= (type $generated@@682) $generated@@106)) (= (type $generated@@683) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@684) $generated@@82)) (= (type $generated@@685) $generated@@82)) (= (type $generated@@687) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@688  (=> (and (and (= $generated@@681 ($generated@@207 $generated@@682 $generated@@683 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@170 $generated@@684 $generated@@685)) (or ($generated@@168 $generated@@684 $generated@@685) (forall (($generated@@689 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@689 $generated@@684) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@689 $generated@@685)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@689 $generated@@685))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@689 $generated@@684))
))))))
(let (($generated@@690  (=> (and ($generated@@262 $generated@@683) ($generated@@686 $generated@@683)) (=> (and (and (and ($generated@@84 $generated@@684 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@684 ($generated@@85 $generated@@46) $generated@@683)) ($generated@@416 $generated@@684)) (and (and ($generated@@84 $generated@@687 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@687 ($generated@@85 $generated@@46) $generated@@683)) ($generated@@416 $generated@@687))) (=> (and (and (and (and (and ($generated@@84 $generated@@685 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@685 ($generated@@85 $generated@@46) $generated@@683)) ($generated@@416 $generated@@685)) (= 3 $generated@@78)) (and ($generated@@170 $generated@@684 $generated@@687) (and ($generated@@168 $generated@@684 $generated@@687) (forall (($generated@@691 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@691 $generated@@684) ($generated@@79 ($generated@@80 $generated@@162) $generated@@691 $generated@@687)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@691 $generated@@687))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@691 $generated@@684))
))))) (and (and ($generated@@170 $generated@@687 $generated@@685) (and ($generated@@168 $generated@@687 $generated@@685) (forall (($generated@@692 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@692 $generated@@687) ($generated@@79 ($generated@@80 $generated@@162) $generated@@692 $generated@@685)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@692 $generated@@685))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@692 $generated@@687))
)))) (= (ControlFlow 0 3) 2))) $generated@@688)))))
$generated@@690)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@194 (Int) Int)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U T@U T@U) Bool)
(declare-fun $generated@@324 (T@T) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U Int) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@667 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@81)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@81)))
(assert (forall (($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) (= (type $generated@@166) $generated@@82)) (= ($generated@@79 $generated@@164 $generated@@165 $generated@@166) ($generated@@79 $generated@@162 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@79 ($generated@@161 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@84 $generated@@167 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@167 ($generated@@104 0)))
)))
(assert (forall (($generated@@171 T@U) ) (! (let (($generated@@172 (type $generated@@171)))
(= (type ($generated@@169 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@82) (= (type $generated@@174) $generated@@82)) (or ($generated@@170 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@173 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@174 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@175 Int) ) (!  (and ($generated@@83 $generated@@175 ($generated@@169 $generated@@173)) ($generated@@83 $generated@@175 ($generated@@169 $generated@@174)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@175 $generated@@174))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@175 $generated@@173))
)) (= ($generated@@168 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (forall (($generated@@176 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 ($generated@@169 $generated@@173)) ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 ($generated@@169 $generated@@174))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 $generated@@174))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 $generated@@173))
)))))
 :weight 3
 :pattern ( ($generated@@168 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@179 $generated@@180)) $generated@@68)
 :pattern ( ($generated@@178 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@68) (= (type $generated@@182) $generated@@68)) (= (type $generated@@183) $generated@@82)) ($generated@@84 $generated@@183 ($generated@@178 $generated@@181 $generated@@182))) ($generated@@177 $generated@@183))
 :pattern ( ($generated@@177 $generated@@183) ($generated@@84 $generated@@183 ($generated@@178 $generated@@181 $generated@@182)))
)))
(assert  (and (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@90)
 :pattern ( ($generated@@185 $generated@@187))
)) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@90)
 :pattern ( ($generated@@186 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@82) (= (type $generated@@190) $generated@@82)) true) (= ($generated@@184 $generated@@189 $generated@@190)  (and (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)) (= ($generated@@186 $generated@@189) ($generated@@186 $generated@@190)))))
 :pattern ( ($generated@@184 $generated@@189 $generated@@190))
)))
(assert  (and (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@72)
 :pattern ( ($generated@@191 $generated@@193))
)) (= (type $generated@@192) $generated@@82)))
(assert (= ($generated@@191 $generated@@192) $generated@@63))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@195 T@U) ($generated@@196 Int) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@81) (= (type $generated@@197) $generated@@82)) (or ($generated@@83 ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@197 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@169 ($generated@@11 ($generated@@86 ($generated@@169 $generated@@197)))))) (let (($generated@@198 ($generated@@169 ($generated@@87 ($generated@@169 $generated@@197)))))
($generated@@83 ($generated@@194 $generated@@196) $generated@@198))) (= ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)) (ite ($generated@@86 ($generated@@169 $generated@@197)) 0 (let (($generated@@199 ($generated@@169 ($generated@@87 ($generated@@169 $generated@@197)))))
(let (($generated@@200 ($generated@@194 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@169 $generated@@197)))))))
(+ (ite (= ($generated@@194 $generated@@196) $generated@@200) 1 0) ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) $generated@@199))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)))
))))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@68)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@205) $generated@@68)) ($generated@@84 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@84 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 17)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@106 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@71 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@106) (= (type $generated@@256) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@257) ($generated@@70 $generated@@4))) (= (type $generated@@259) $generated@@106)) (= (type $generated@@260) ($generated@@70 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@264)) ($generated@@103 $generated@@192 ($generated@@85 $generated@@263) $generated@@264))
 :pattern ( ($generated@@103 $generated@@192 ($generated@@85 $generated@@263) $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@82)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) $generated@@68) (= (type $generated@@270) $generated@@68)) (= (type $generated@@271) $generated@@90)) (= (type $generated@@272) $generated@@90)) (= ($generated@@84 ($generated@@265 $generated@@271 $generated@@272) ($generated@@178 $generated@@269 $generated@@270))  (and ($generated@@266 $generated@@271 $generated@@269) ($generated@@266 $generated@@272 $generated@@270))))
 :pattern ( ($generated@@84 ($generated@@265 $generated@@271 $generated@@272) ($generated@@178 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@68) ($generated@@84 $generated@@192 ($generated@@85 $generated@@273)))
 :pattern ( ($generated@@84 $generated@@192 ($generated@@85 $generated@@273)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@82) (= (type $generated@@275) $generated@@82)) (= ($generated@@184 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@184 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@82) (= (type $generated@@278) $generated@@82)) (= ($generated@@276 $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@276 $generated@@277 $generated@@278))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@279 T@U) ($generated@@280 Int) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@81) (= (type $generated@@281) $generated@@82)) (or ($generated@@83 $generated@@280 $generated@@281) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@281 ($generated@@85 $generated@@46))))) (<= ($generated@@194 0) ($generated@@79 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@79 $generated@@279 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@82) (= (type $generated@@284) $generated@@82)) (and ($generated@@282 $generated@@283) ($generated@@282 $generated@@284))) (= ($generated@@276 $generated@@283 $generated@@284)  (and (= ($generated@@89 $generated@@283) ($generated@@89 $generated@@284)) ($generated@@276 ($generated@@87 $generated@@283) ($generated@@87 $generated@@284)))))
 :pattern ( ($generated@@276 $generated@@283 $generated@@284) ($generated@@282 $generated@@283))
 :pattern ( ($generated@@276 $generated@@283 $generated@@284) ($generated@@282 $generated@@284))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@82) (= (type $generated@@286) $generated@@82)) (or ($generated@@170 $generated@@285 $generated@@286) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@285 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@286 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@287 Int) ) (!  (and ($generated@@83 $generated@@287 $generated@@285) ($generated@@83 $generated@@287 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@287 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@287 $generated@@285))
)) (= ($generated@@168 $generated@@285 $generated@@286) (forall (($generated@@288 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@285) ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@286)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@285))
)))))
 :pattern ( ($generated@@168 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@68)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@292) $generated@@68)) (= ($generated@@84 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@90) ($generated@@0 ($generated@@110 $generated@@291 $generated@@293))) ($generated@@266 $generated@@293 $generated@@292))
 :pattern ( ($generated@@110 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@84 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@68)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@297) $generated@@68)) (= ($generated@@84 $generated@@296 ($generated@@294 $generated@@297)) (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@90) ($generated@@0 ($generated@@110 $generated@@296 $generated@@298))) ($generated@@266 $generated@@298 $generated@@297))
 :pattern ( ($generated@@110 $generated@@296 $generated@@298))
))))
 :pattern ( ($generated@@84 $generated@@296 ($generated@@294 $generated@@297)))
)))
(assert (forall (($generated@@299 Int) ) (! (= ($generated@@194 $generated@@299) $generated@@299)
 :pattern ( ($generated@@194 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@169 $generated@@300) $generated@@300)
 :pattern ( ($generated@@169 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (= (type $generated@@301) $generated@@82) (= (type $generated@@302) $generated@@82)) (and ($generated@@86 $generated@@301) ($generated@@86 $generated@@302))) (= ($generated@@276 $generated@@301 $generated@@302) true))
 :pattern ( ($generated@@276 $generated@@301 $generated@@302) ($generated@@86 $generated@@301))
 :pattern ( ($generated@@276 $generated@@301 $generated@@302) ($generated@@86 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (= (type ($generated@@303 $generated@@304 $generated@@305)) $generated@@82)
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) $generated@@90)) (= (type $generated@@308) $generated@@82)) (= ($generated@@84 ($generated@@303 $generated@@307 $generated@@308) ($generated@@85 $generated@@306))  (and ($generated@@266 $generated@@307 $generated@@306) ($generated@@84 $generated@@308 ($generated@@85 $generated@@306)))))
 :pattern ( ($generated@@84 ($generated@@303 $generated@@307 $generated@@308) ($generated@@85 $generated@@306)))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) $generated@@68) (= (type $generated@@311) $generated@@68)) (= (type $generated@@312) $generated@@90)) (= (type $generated@@313) $generated@@90)) (= (type $generated@@314) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@314)) (= ($generated@@103 ($generated@@265 $generated@@312 $generated@@313) ($generated@@178 $generated@@310 $generated@@311) $generated@@314)  (and ($generated@@309 $generated@@312 $generated@@310 $generated@@314) ($generated@@309 $generated@@313 $generated@@311 $generated@@314))))
 :pattern ( ($generated@@103 ($generated@@265 $generated@@312 $generated@@313) ($generated@@178 $generated@@310 $generated@@311) $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@82) (= ($generated@@177 $generated@@315) (= ($generated@@191 $generated@@315) $generated@@61)))
 :pattern ( ($generated@@177 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@82) (= ($generated@@86 $generated@@316) (= ($generated@@191 $generated@@316) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@82) (= ($generated@@282 $generated@@317) (= ($generated@@191 $generated@@317) $generated@@65)))
 :pattern ( ($generated@@282 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@82) ($generated@@177 $generated@@318)) (exists (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (and (and (= (type $generated@@319) $generated@@90) (= (type $generated@@320) $generated@@90)) (= $generated@@318 ($generated@@265 $generated@@319 $generated@@320)))
 :no-pattern (type $generated@@319)
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@177 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@82) ($generated@@282 $generated@@321)) (exists (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (and (and (= (type $generated@@322) $generated@@90) (= (type $generated@@323) $generated@@82)) (= $generated@@321 ($generated@@303 $generated@@322 $generated@@323)))
 :no-pattern (type $generated@@322)
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
)))
 :pattern ( ($generated@@282 $generated@@321))
)))
(assert  (and (and (forall (($generated@@328 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@328)) 18)) (forall (($generated@@329 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@326 $generated@@329))
))) (forall (($generated@@330 T@T) ) (! (= (type ($generated@@324 $generated@@330)) ($generated@@326 $generated@@330))
 :pattern ( ($generated@@324 $generated@@330))
))))
(assert (forall (($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@331)) 0)
 :pattern ( ($generated@@324 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@82) ($generated@@86 $generated@@332)) (= $generated@@332 $generated@@192))
 :pattern ( ($generated@@86 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@90)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@68) (= (type $generated@@337) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@309 ($generated@@333 $generated@@335) $generated@@336 $generated@@337) ($generated@@103 $generated@@335 $generated@@336 $generated@@337)))
 :pattern ( ($generated@@309 ($generated@@333 $generated@@335) $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@105 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@108 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@105 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@110 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@73)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@346)) $generated@@64) (= ($generated@@344 ($generated@@85 $generated@@346)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@346))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@105 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@110 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@110 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 20)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@105 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@108 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@105 $generated@@384 $generated@@2)) (= ($generated@@202 $generated@@383) (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@384) (and (<= 0 ($generated ($generated@@110 $generated@@383 $generated@@385))) (<= ($generated ($generated@@110 $generated@@383 $generated@@385)) ($generated@@338 $generated@@383))))
 :pattern ( ($generated@@110 $generated@@383 $generated@@385))
)))))
 :pattern ( ($generated@@202 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@351 (type $generated@@386))))
(let (($generated@@388 ($generated@@350 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@349 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@348 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@347 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@351 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@105 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@351 (type $generated@@393))))
(let (($generated@@395 ($generated@@350 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@349 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@348 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@110 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@369 (type $generated@@397))))
(let (($generated@@399 ($generated@@368 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@367 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@366 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@365 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@369 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@105 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@369 (type $generated@@404))))
(let (($generated@@406 ($generated@@368 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@367 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@366 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@110 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 Int) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@81) (= (type $generated@@410) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@408) $generated@@409 $generated@@410) ($generated@@79 $generated@@408 $generated@@409 $generated@@410)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@408) $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@412) $generated@@68)) (= ($generated@@84 $generated@@411 ($generated@@201 $generated@@412)) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@411 $generated@@413)))) ($generated@@266 $generated@@413 $generated@@412))
 :pattern ( ($generated@@110 $generated@@411 $generated@@413))
))))
 :pattern ( ($generated@@84 $generated@@411 ($generated@@201 $generated@@412)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@414) $generated@@82) (= (type $generated@@415) $generated@@82)) (or ($generated@@170 $generated@@414 $generated@@415) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@414 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@415 ($generated@@85 $generated@@46)))))) true)
 :pattern ( ($generated@@168 $generated@@414 $generated@@415))
))))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@82) ($generated@@416 $generated@@417)) (or ($generated@@86 $generated@@417) ($generated@@282 $generated@@417)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@418 ($generated@@289 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@90) ($generated@@0 ($generated@@110 $generated@@418 $generated@@421))) ($generated@@309 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@110 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@103 $generated@@418 ($generated@@289 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@422 ($generated@@294 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@90) ($generated@@0 ($generated@@110 $generated@@422 $generated@@425))) ($generated@@309 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@110 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@103 $generated@@422 ($generated@@294 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@110 ($generated@@339 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@110 ($generated@@339 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@351 (type $generated@@431))))
(let (($generated@@433 ($generated@@350 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@105 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@435) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@110 ($generated@@347 $generated@@434) ($generated@@185 ($generated@@88 $generated@@82 $generated@@435)))) (= ($generated@@110 ($generated@@429 $generated@@434) ($generated@@185 ($generated@@88 $generated@@82 $generated@@435))) ($generated@@186 ($generated@@88 $generated@@82 $generated@@435))))))
 :pattern ( ($generated@@110 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@369 (type $generated@@439))))
(let (($generated@@441 ($generated@@368 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@105 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@443) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@442) ($generated@@185 ($generated@@88 $generated@@82 $generated@@443)))) (= ($generated@@110 ($generated@@437 $generated@@442) ($generated@@185 ($generated@@88 $generated@@82 $generated@@443))) ($generated@@186 ($generated@@88 $generated@@82 $generated@@443))))))
 :pattern ( ($generated@@110 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@350 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@349 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@110 ($generated@@390 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@110 ($generated@@347 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@110 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@444) $generated@@448))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@110 ($generated@@390 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@368 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@367 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@110 ($generated@@401 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@110 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@449) $generated@@453))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@110 ($generated@@401 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@457) $generated@@461))) (and ($generated@@309 ($generated@@110 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@309 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@103 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@465) $generated@@469))) (and ($generated@@309 ($generated@@110 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@309 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@103 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@82)) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470))) (or ($generated@@86 $generated@@471) ($generated@@282 $generated@@471)))
 :pattern ( ($generated@@282 $generated@@471) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470)))
 :pattern ( ($generated@@86 $generated@@471) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470)))
)))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@105 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@369 (type $generated@@474))))
(let (($generated@@476 ($generated@@368 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@367 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@366 $generated@@476 $generated@@475)) (= ($generated@@365 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@365 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@369 (type $generated@@477))))
(let (($generated@@479 ($generated@@368 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@367 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@366 $generated@@479 $generated@@478)) (= ($generated@@401 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@401 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@369 (type $generated@@480))))
(let (($generated@@482 ($generated@@368 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@367 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@366 $generated@@482 $generated@@481)) (= ($generated@@436 $generated@@480) ($generated@@472 $generated@@90))))))
 :pattern ( ($generated@@436 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@351 (type $generated@@483))))
(let (($generated@@485 ($generated@@350 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@349 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@348 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@90) (= (type $generated@@487) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@428 $generated@@483) ($generated@@333 ($generated@@265 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@428 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@369 (type $generated@@488))))
(let (($generated@@490 ($generated@@368 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@367 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@366 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@90) (= (type $generated@@492) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@436 $generated@@488) ($generated@@333 ($generated@@265 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@436 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@90) ($generated@@266 $generated@@493 $generated@@46)) (and (= ($generated@@333 ($generated@@88 $generated@@2 $generated@@493)) $generated@@493) ($generated@@84 ($generated@@88 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@266 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@90) ($generated@@266 $generated@@494 $generated@@47)) (and (= ($generated@@333 ($generated@@88 $generated@@3 $generated@@494)) $generated@@494) ($generated@@84 ($generated@@88 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@266 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@90) ($generated@@266 $generated@@495 $generated@@44)) (and (= ($generated@@333 ($generated@@88 $generated@@4 $generated@@495)) $generated@@495) ($generated@@84 ($generated@@88 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@266 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@90) ($generated@@266 $generated@@497 $generated@@45)) (and (= ($generated@@333 ($generated@@88 $generated@@496 $generated@@497)) $generated@@497) ($generated@@84 ($generated@@88 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@266 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@68) (= ($generated@@266 ($generated@@333 $generated@@498) $generated@@499) ($generated@@84 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@266 ($generated@@333 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@108 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@105 $generated@@501 $generated@@2)) (<= 0 ($generated@@338 $generated@@500))))
 :pattern ( ($generated@@338 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@327 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@326 $generated@@503)) (<= 0 ($generated@@325 $generated@@502))))
 :pattern ( ($generated@@325 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@454 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@454 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@454 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@454 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@514 ($generated@@462 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@462 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@76 ($generated@@462 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@90) (= (type $generated@@525) $generated@@90)) (= ($generated@@191 ($generated@@265 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@265 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= ($generated@@526 ($generated@@178 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@178 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@68) (= (type $generated@@533) $generated@@68)) (= ($generated@@530 ($generated@@178 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@178 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@90) (= (type $generated@@535) $generated@@90)) (= ($generated@@185 ($generated@@265 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@265 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@90) (= (type $generated@@537) $generated@@90)) (= ($generated@@186 ($generated@@265 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@265 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@90) (= (type $generated@@539) $generated@@82)) (= ($generated@@191 ($generated@@303 $generated@@538 $generated@@539)) $generated@@65))
 :pattern ( ($generated@@303 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@90) (= (type $generated@@541) $generated@@82)) (= ($generated@@89 ($generated@@303 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@303 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@90) (= (type $generated@@543) $generated@@82)) (= ($generated@@87 ($generated@@303 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@303 $generated@@542 $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (= (type ($generated@@544 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@547 T@U) ($generated@@548 Int) ) (! (let (($generated@@549 ($generated@@327 (type $generated@@547))))
(= (type ($generated@@545 $generated@@547 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@547 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@326 $generated@@90)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552) (forall (($generated@@553 Int) ) (!  (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@325 $generated@@550))) ($generated@@309 ($generated@@545 $generated@@550 $generated@@553) $generated@@551 $generated@@552))
 :pattern ( ($generated@@545 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@104 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@104 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@289 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@289 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@76 ($generated@@289 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@289 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@560 ($generated@@294 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@294 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@76 ($generated@@294 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@294 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@564 ($generated@@201 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@201 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@76 ($generated@@201 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@568 ($generated@@544 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@544 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@76 ($generated@@544 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@544 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@68) (= ($generated@@572 ($generated@@85 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@85 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@88 $generated@@576 ($generated@@333 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@333 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) (= ($generated@@84 $generated@@577 ($generated@@454 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@577) $generated@@580))) (and ($generated@@266 ($generated@@110 ($generated@@429 $generated@@577) $generated@@580) $generated@@579) ($generated@@266 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@577) $generated@@580))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@84 $generated@@577 ($generated@@454 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) (= ($generated@@84 $generated@@581 ($generated@@462 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@581) $generated@@584))) (and ($generated@@266 ($generated@@110 ($generated@@437 $generated@@581) $generated@@584) $generated@@583) ($generated@@266 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@581) $generated@@584))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@84 $generated@@581 ($generated@@462 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@90) (= (type $generated@@588) $generated@@90)) (< ($generated@@585 $generated@@587) ($generated@@586 ($generated@@265 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@265 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@90) (= (type $generated@@590) $generated@@90)) (< ($generated@@585 $generated@@590) ($generated@@586 ($generated@@265 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@265 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@90) (= (type $generated@@592) $generated@@82)) (< ($generated@@585 $generated@@591) ($generated@@586 ($generated@@303 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@303 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@90) (= (type $generated@@594) $generated@@82)) (< ($generated@@586 $generated@@594) ($generated@@586 ($generated@@303 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@303 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@90) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) $generated@@68)) ($generated@@266 $generated@@595 ($generated@@454 $generated@@596 $generated@@597))) (and (= ($generated@@333 ($generated@@88 ($generated@@349 $generated@@90 $generated@@90) $generated@@595)) $generated@@595) ($generated@@84 ($generated@@88 ($generated@@349 $generated@@90 $generated@@90) $generated@@595) ($generated@@454 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@266 $generated@@595 ($generated@@454 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@90) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@266 $generated@@598 ($generated@@462 $generated@@599 $generated@@600))) (and (= ($generated@@333 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@598)) $generated@@598) ($generated@@84 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@598) ($generated@@462 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@266 $generated@@598 ($generated@@462 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@68) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@90)) ($generated@@266 $generated@@603 ($generated@@178 $generated@@601 $generated@@602))) (and (= ($generated@@333 ($generated@@88 $generated@@82 $generated@@603)) $generated@@603) ($generated@@84 ($generated@@88 $generated@@82 $generated@@603) ($generated@@178 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@266 $generated@@603 ($generated@@178 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@82) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@606) (and ($generated@@282 $generated@@604) ($generated@@103 $generated@@604 ($generated@@85 $generated@@605) $generated@@606)))) ($generated@@309 ($generated@@89 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@309 ($generated@@89 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@110 ($generated@@472 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@110 ($generated@@472 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@68) (= (type $generated@@610) $generated@@68)) (and (= ($generated@@76 ($generated@@178 $generated@@609 $generated@@610)) $generated@@62) (= ($generated@@344 ($generated@@178 $generated@@609 $generated@@610)) $generated@@66)))
 :pattern ( ($generated@@178 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@82) (= ($generated@@585 ($generated@@333 $generated@@611)) ($generated@@586 $generated@@611)))
 :pattern ( ($generated@@585 ($generated@@333 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@90) ($generated@@266 $generated@@612 ($generated@@104 0))) (and (= ($generated@@333 ($generated@@88 $generated@@2 $generated@@612)) $generated@@612) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@612) ($generated@@104 0))))
 :pattern ( ($generated@@266 $generated@@612 ($generated@@104 0)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@90) (= (type $generated@@614) $generated@@68)) ($generated@@266 $generated@@613 ($generated@@289 $generated@@614))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@613)) $generated@@613) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@613) ($generated@@289 $generated@@614))))
 :pattern ( ($generated@@266 $generated@@613 ($generated@@289 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@90) (= (type $generated@@616) $generated@@68)) ($generated@@266 $generated@@615 ($generated@@294 $generated@@616))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@615)) $generated@@615) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@615) ($generated@@294 $generated@@616))))
 :pattern ( ($generated@@266 $generated@@615 ($generated@@294 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@90) (= (type $generated@@618) $generated@@68)) ($generated@@266 $generated@@617 ($generated@@201 $generated@@618))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@617)) $generated@@617) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@617) ($generated@@201 $generated@@618))))
 :pattern ( ($generated@@266 $generated@@617 ($generated@@201 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@90) (= (type $generated@@620) $generated@@68)) ($generated@@266 $generated@@619 ($generated@@544 $generated@@620))) (and (= ($generated@@333 ($generated@@88 ($generated@@326 $generated@@90) $generated@@619)) $generated@@619) ($generated@@84 ($generated@@88 ($generated@@326 $generated@@90) $generated@@619) ($generated@@544 $generated@@620))))
 :pattern ( ($generated@@266 $generated@@619 ($generated@@544 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@68) (= (type $generated@@622) $generated@@90)) ($generated@@266 $generated@@622 ($generated@@85 $generated@@621))) (and (= ($generated@@333 ($generated@@88 $generated@@82 $generated@@622)) $generated@@622) ($generated@@84 ($generated@@88 $generated@@82 $generated@@622) ($generated@@85 $generated@@621))))
 :pattern ( ($generated@@266 $generated@@622 ($generated@@85 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@82) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@625) (and ($generated@@282 $generated@@623) ($generated@@103 $generated@@623 ($generated@@85 $generated@@624) $generated@@625)))) ($generated@@103 ($generated@@87 $generated@@623) ($generated@@85 $generated@@624) $generated@@625))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@623) ($generated@@85 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@626 ($generated@@201 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@626 $generated@@629)))) ($generated@@309 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@110 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@103 $generated@@626 ($generated@@201 $generated@@627) $generated@@628))
)))
(assert (= $generated@@192 ($generated@@169 $generated@@192)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@82) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@632) (and ($generated@@177 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@68) ($generated@@103 $generated@@630 ($generated@@178 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@103 $generated@@630 ($generated@@178 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@309 ($generated@@185 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@309 ($generated@@185 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@82) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@636) (and ($generated@@177 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@68) ($generated@@103 $generated@@634 ($generated@@178 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@103 $generated@@634 ($generated@@178 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@309 ($generated@@186 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@309 ($generated@@186 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@90) (= (type $generated@@639) $generated@@90)) (= ($generated@@265 ($generated@@169 $generated@@638) ($generated@@169 $generated@@639)) ($generated@@169 ($generated@@265 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@265 ($generated@@169 $generated@@638) ($generated@@169 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@90) (= (type $generated@@641) $generated@@82)) (= ($generated@@303 ($generated@@169 $generated@@640) ($generated@@169 $generated@@641)) ($generated@@169 ($generated@@303 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@303 ($generated@@169 $generated@@640) ($generated@@169 $generated@@641)))
)))
(assert (forall (($generated@@642 Int) ) (! (= ($generated@@333 ($generated@@8 ($generated@@194 $generated@@642))) ($generated@@169 ($generated@@333 ($generated@@8 $generated@@642))))
 :pattern ( ($generated@@333 ($generated@@8 ($generated@@194 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@333 ($generated@@169 $generated@@643)) ($generated@@169 ($generated@@333 $generated@@643)))
 :pattern ( ($generated@@333 ($generated@@169 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@327 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@326 $generated@@645)) (= ($generated@@325 $generated@@644) 0)) (= $generated@@644 ($generated@@324 $generated@@645))))
 :pattern ( ($generated@@325 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@105 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@338 ($generated@@111 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@338 $generated@@646) ($generated ($generated@@110 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@338 ($generated@@111 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@651) $generated@@2)) ($generated@@103 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@103 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@653) $generated@@3)) ($generated@@103 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@103 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@655) $generated@@4)) ($generated@@103 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@103 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@657) $generated@@496)) ($generated@@103 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@103 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@659) $generated@@90)) ($generated@@103 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@103 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@660) $generated@@68) (= (type $generated@@661) $generated@@90)) (= (type $generated@@662) $generated@@82)) (= (type $generated@@663) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@663)) (= ($generated@@103 ($generated@@303 $generated@@661 $generated@@662) ($generated@@85 $generated@@660) $generated@@663)  (and ($generated@@309 $generated@@661 $generated@@660 $generated@@663) ($generated@@103 $generated@@662 ($generated@@85 $generated@@660) $generated@@663))))
 :pattern ( ($generated@@103 ($generated@@303 $generated@@661 $generated@@662) ($generated@@85 $generated@@660) $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@326 $generated@@90)) (= (type $generated@@665) $generated@@68)) (= ($generated@@84 $generated@@664 ($generated@@544 $generated@@665)) (forall (($generated@@666 Int) ) (!  (=> (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@325 $generated@@664))) ($generated@@266 ($generated@@545 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@545 $generated@@664 $generated@@666))
))))
 :pattern ( ($generated@@84 $generated@@664 ($generated@@544 $generated@@665)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@326 $generated@@90)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@325 $generated@@668))) (< ($generated@@586 ($generated@@88 $generated@@82 ($generated@@545 $generated@@668 $generated@@669))) ($generated@@667 $generated@@668))))
 :pattern ( ($generated@@586 ($generated@@88 $generated@@82 ($generated@@545 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@68)) ($generated@@84 $generated@@670 ($generated@@454 $generated@@671 $generated@@672))) (and (and ($generated@@84 ($generated@@347 $generated@@670) ($generated@@289 $generated@@671)) ($generated@@84 ($generated@@390 $generated@@670) ($generated@@289 $generated@@672))) ($generated@@84 ($generated@@428 $generated@@670) ($generated@@289 ($generated@@178 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@84 $generated@@670 ($generated@@454 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@84 $generated@@673 ($generated@@462 $generated@@674 $generated@@675))) (and (and ($generated@@84 ($generated@@365 $generated@@673) ($generated@@294 $generated@@674)) ($generated@@84 ($generated@@401 $generated@@673) ($generated@@294 $generated@@675))) ($generated@@84 ($generated@@436 $generated@@673) ($generated@@294 ($generated@@178 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@84 $generated@@673 ($generated@@462 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@84 $generated@@676 $generated@@46))
 :pattern ( ($generated@@84 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@84 $generated@@677 $generated@@47))
 :pattern ( ($generated@@84 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@84 $generated@@678 $generated@@44))
 :pattern ( ($generated@@84 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@496) ($generated@@84 $generated@@679 $generated@@45))
 :pattern ( ($generated@@84 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@90) ($generated@@84 $generated@@680 $generated@@48))
 :pattern ( ($generated@@84 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@681) ($generated@@208 $generated@@106 $generated@@4)) (= (type $generated@@682) $generated@@106)) (= (type $generated@@683) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@685) $generated@@82)) (= (type $generated@@686) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@688  (=> (and (and (= $generated@@681 ($generated@@207 $generated@@682 $generated@@683 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@170 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@684)) $generated@@685) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@684)) $generated@@686))) (or ($generated@@168 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@684)) $generated@@685) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@684)) $generated@@686)) (forall (($generated@@689 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@689 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@684)) $generated@@685)) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@689 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@684)) $generated@@686))))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@689 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@684)) $generated@@686)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@689 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@684)) $generated@@685)))
))))))
(let (($generated@@690  (=> (and ($generated@@262 $generated@@683) ($generated@@687 $generated@@683)) (=> (and (and ($generated@@84 $generated@@685 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@685 ($generated@@85 $generated@@46) $generated@@683)) ($generated@@416 $generated@@685)) (=> (and (and (and (and ($generated@@84 $generated@@686 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@686 ($generated@@85 $generated@@46) $generated@@683)) ($generated@@416 $generated@@686)) (= 3 $generated@@78)) (and (and ($generated@@170 $generated@@685 $generated@@686) (and ($generated@@168 $generated@@685 $generated@@686) (forall (($generated@@691 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@691 $generated@@685) ($generated@@79 ($generated@@80 $generated@@162) $generated@@691 $generated@@686)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@691 $generated@@686))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@691 $generated@@685))
)))) (= (ControlFlow 0 3) 2))) $generated@@688)))))
$generated@@690)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@194 (Int) Int)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U T@U T@U) Bool)
(declare-fun $generated@@324 (T@T) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U Int) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@667 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@81)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@81)))
(assert (forall (($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) (= (type $generated@@166) $generated@@82)) (= ($generated@@79 $generated@@164 $generated@@165 $generated@@166) ($generated@@79 $generated@@162 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@79 ($generated@@161 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@84 $generated@@167 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@167 ($generated@@104 0)))
)))
(assert (forall (($generated@@171 T@U) ) (! (let (($generated@@172 (type $generated@@171)))
(= (type ($generated@@169 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@82) (= (type $generated@@174) $generated@@82)) (or ($generated@@170 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@173 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@174 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@175 Int) ) (!  (and ($generated@@83 $generated@@175 ($generated@@169 $generated@@173)) ($generated@@83 $generated@@175 ($generated@@169 $generated@@174)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@175 $generated@@174))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@175 $generated@@173))
)) (= ($generated@@168 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (forall (($generated@@176 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 ($generated@@169 $generated@@173)) ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 ($generated@@169 $generated@@174))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 $generated@@174))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@176 $generated@@173))
)))))
 :weight 3
 :pattern ( ($generated@@168 ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@179 $generated@@180)) $generated@@68)
 :pattern ( ($generated@@178 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@68) (= (type $generated@@182) $generated@@68)) (= (type $generated@@183) $generated@@82)) ($generated@@84 $generated@@183 ($generated@@178 $generated@@181 $generated@@182))) ($generated@@177 $generated@@183))
 :pattern ( ($generated@@177 $generated@@183) ($generated@@84 $generated@@183 ($generated@@178 $generated@@181 $generated@@182)))
)))
(assert  (and (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@90)
 :pattern ( ($generated@@185 $generated@@187))
)) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@90)
 :pattern ( ($generated@@186 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@82) (= (type $generated@@190) $generated@@82)) true) (= ($generated@@184 $generated@@189 $generated@@190)  (and (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)) (= ($generated@@186 $generated@@189) ($generated@@186 $generated@@190)))))
 :pattern ( ($generated@@184 $generated@@189 $generated@@190))
)))
(assert  (and (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@72)
 :pattern ( ($generated@@191 $generated@@193))
)) (= (type $generated@@192) $generated@@82)))
(assert (= ($generated@@191 $generated@@192) $generated@@63))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@195 T@U) ($generated@@196 Int) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@81) (= (type $generated@@197) $generated@@82)) (or ($generated@@83 ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@197 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@169 ($generated@@11 ($generated@@86 ($generated@@169 $generated@@197)))))) (let (($generated@@198 ($generated@@169 ($generated@@87 ($generated@@169 $generated@@197)))))
($generated@@83 ($generated@@194 $generated@@196) $generated@@198))) (= ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)) (ite ($generated@@86 ($generated@@169 $generated@@197)) 0 (let (($generated@@199 ($generated@@169 ($generated@@87 ($generated@@169 $generated@@197)))))
(let (($generated@@200 ($generated@@194 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@169 $generated@@197)))))))
(+ (ite (= ($generated@@194 $generated@@196) $generated@@200) 1 0) ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) $generated@@199))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@195) ($generated@@194 $generated@@196) ($generated@@169 $generated@@197)))
))))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@68)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@205) $generated@@68)) ($generated@@84 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@84 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 17)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@106 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@71 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@106) (= (type $generated@@256) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@257) ($generated@@70 $generated@@4))) (= (type $generated@@259) $generated@@106)) (= (type $generated@@260) ($generated@@70 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@264)) ($generated@@103 $generated@@192 ($generated@@85 $generated@@263) $generated@@264))
 :pattern ( ($generated@@103 $generated@@192 ($generated@@85 $generated@@263) $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@82)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) $generated@@68) (= (type $generated@@270) $generated@@68)) (= (type $generated@@271) $generated@@90)) (= (type $generated@@272) $generated@@90)) (= ($generated@@84 ($generated@@265 $generated@@271 $generated@@272) ($generated@@178 $generated@@269 $generated@@270))  (and ($generated@@266 $generated@@271 $generated@@269) ($generated@@266 $generated@@272 $generated@@270))))
 :pattern ( ($generated@@84 ($generated@@265 $generated@@271 $generated@@272) ($generated@@178 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@68) ($generated@@84 $generated@@192 ($generated@@85 $generated@@273)))
 :pattern ( ($generated@@84 $generated@@192 ($generated@@85 $generated@@273)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@82) (= (type $generated@@275) $generated@@82)) (= ($generated@@184 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@184 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@82) (= (type $generated@@278) $generated@@82)) (= ($generated@@276 $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@276 $generated@@277 $generated@@278))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@279 T@U) ($generated@@280 Int) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@81) (= (type $generated@@281) $generated@@82)) (or ($generated@@83 $generated@@280 $generated@@281) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@281 ($generated@@85 $generated@@46))))) (<= ($generated@@194 0) ($generated@@79 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@79 $generated@@279 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@82) (= (type $generated@@284) $generated@@82)) (and ($generated@@282 $generated@@283) ($generated@@282 $generated@@284))) (= ($generated@@276 $generated@@283 $generated@@284)  (and (= ($generated@@89 $generated@@283) ($generated@@89 $generated@@284)) ($generated@@276 ($generated@@87 $generated@@283) ($generated@@87 $generated@@284)))))
 :pattern ( ($generated@@276 $generated@@283 $generated@@284) ($generated@@282 $generated@@283))
 :pattern ( ($generated@@276 $generated@@283 $generated@@284) ($generated@@282 $generated@@284))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@82) (= (type $generated@@286) $generated@@82)) (or ($generated@@170 $generated@@285 $generated@@286) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@285 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@286 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@287 Int) ) (!  (and ($generated@@83 $generated@@287 $generated@@285) ($generated@@83 $generated@@287 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@287 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@287 $generated@@285))
)) (= ($generated@@168 $generated@@285 $generated@@286) (forall (($generated@@288 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@285) ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@286)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@288 $generated@@285))
)))))
 :pattern ( ($generated@@168 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@68)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@292) $generated@@68)) (= ($generated@@84 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@90) ($generated@@0 ($generated@@110 $generated@@291 $generated@@293))) ($generated@@266 $generated@@293 $generated@@292))
 :pattern ( ($generated@@110 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@84 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@68)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@297) $generated@@68)) (= ($generated@@84 $generated@@296 ($generated@@294 $generated@@297)) (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@90) ($generated@@0 ($generated@@110 $generated@@296 $generated@@298))) ($generated@@266 $generated@@298 $generated@@297))
 :pattern ( ($generated@@110 $generated@@296 $generated@@298))
))))
 :pattern ( ($generated@@84 $generated@@296 ($generated@@294 $generated@@297)))
)))
(assert (forall (($generated@@299 Int) ) (! (= ($generated@@194 $generated@@299) $generated@@299)
 :pattern ( ($generated@@194 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@169 $generated@@300) $generated@@300)
 :pattern ( ($generated@@169 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (= (type $generated@@301) $generated@@82) (= (type $generated@@302) $generated@@82)) (and ($generated@@86 $generated@@301) ($generated@@86 $generated@@302))) (= ($generated@@276 $generated@@301 $generated@@302) true))
 :pattern ( ($generated@@276 $generated@@301 $generated@@302) ($generated@@86 $generated@@301))
 :pattern ( ($generated@@276 $generated@@301 $generated@@302) ($generated@@86 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (= (type ($generated@@303 $generated@@304 $generated@@305)) $generated@@82)
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) $generated@@90)) (= (type $generated@@308) $generated@@82)) (= ($generated@@84 ($generated@@303 $generated@@307 $generated@@308) ($generated@@85 $generated@@306))  (and ($generated@@266 $generated@@307 $generated@@306) ($generated@@84 $generated@@308 ($generated@@85 $generated@@306)))))
 :pattern ( ($generated@@84 ($generated@@303 $generated@@307 $generated@@308) ($generated@@85 $generated@@306)))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) $generated@@68) (= (type $generated@@311) $generated@@68)) (= (type $generated@@312) $generated@@90)) (= (type $generated@@313) $generated@@90)) (= (type $generated@@314) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@314)) (= ($generated@@103 ($generated@@265 $generated@@312 $generated@@313) ($generated@@178 $generated@@310 $generated@@311) $generated@@314)  (and ($generated@@309 $generated@@312 $generated@@310 $generated@@314) ($generated@@309 $generated@@313 $generated@@311 $generated@@314))))
 :pattern ( ($generated@@103 ($generated@@265 $generated@@312 $generated@@313) ($generated@@178 $generated@@310 $generated@@311) $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@82) (= ($generated@@177 $generated@@315) (= ($generated@@191 $generated@@315) $generated@@61)))
 :pattern ( ($generated@@177 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@82) (= ($generated@@86 $generated@@316) (= ($generated@@191 $generated@@316) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@82) (= ($generated@@282 $generated@@317) (= ($generated@@191 $generated@@317) $generated@@65)))
 :pattern ( ($generated@@282 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@82) ($generated@@177 $generated@@318)) (exists (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (and (and (= (type $generated@@319) $generated@@90) (= (type $generated@@320) $generated@@90)) (= $generated@@318 ($generated@@265 $generated@@319 $generated@@320)))
 :no-pattern (type $generated@@319)
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@177 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@82) ($generated@@282 $generated@@321)) (exists (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (and (and (= (type $generated@@322) $generated@@90) (= (type $generated@@323) $generated@@82)) (= $generated@@321 ($generated@@303 $generated@@322 $generated@@323)))
 :no-pattern (type $generated@@322)
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
)))
 :pattern ( ($generated@@282 $generated@@321))
)))
(assert  (and (and (forall (($generated@@328 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@328)) 18)) (forall (($generated@@329 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@326 $generated@@329))
))) (forall (($generated@@330 T@T) ) (! (= (type ($generated@@324 $generated@@330)) ($generated@@326 $generated@@330))
 :pattern ( ($generated@@324 $generated@@330))
))))
(assert (forall (($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@331)) 0)
 :pattern ( ($generated@@324 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@82) ($generated@@86 $generated@@332)) (= $generated@@332 $generated@@192))
 :pattern ( ($generated@@86 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@90)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@68) (= (type $generated@@337) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@309 ($generated@@333 $generated@@335) $generated@@336 $generated@@337) ($generated@@103 $generated@@335 $generated@@336 $generated@@337)))
 :pattern ( ($generated@@309 ($generated@@333 $generated@@335) $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@105 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@108 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@105 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@110 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@73)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@346)) $generated@@64) (= ($generated@@344 ($generated@@85 $generated@@346)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@346))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@105 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@110 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@110 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 20)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@105 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@108 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@105 $generated@@384 $generated@@2)) (= ($generated@@202 $generated@@383) (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@384) (and (<= 0 ($generated ($generated@@110 $generated@@383 $generated@@385))) (<= ($generated ($generated@@110 $generated@@383 $generated@@385)) ($generated@@338 $generated@@383))))
 :pattern ( ($generated@@110 $generated@@383 $generated@@385))
)))))
 :pattern ( ($generated@@202 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@351 (type $generated@@386))))
(let (($generated@@388 ($generated@@350 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@349 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@348 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@347 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@351 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@105 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@351 (type $generated@@393))))
(let (($generated@@395 ($generated@@350 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@349 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@348 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@110 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@369 (type $generated@@397))))
(let (($generated@@399 ($generated@@368 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@367 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@366 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@365 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@369 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@105 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@369 (type $generated@@404))))
(let (($generated@@406 ($generated@@368 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@367 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@366 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@110 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 Int) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@81) (= (type $generated@@410) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@408) $generated@@409 $generated@@410) ($generated@@79 $generated@@408 $generated@@409 $generated@@410)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@408) $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@412) $generated@@68)) (= ($generated@@84 $generated@@411 ($generated@@201 $generated@@412)) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@411 $generated@@413)))) ($generated@@266 $generated@@413 $generated@@412))
 :pattern ( ($generated@@110 $generated@@411 $generated@@413))
))))
 :pattern ( ($generated@@84 $generated@@411 ($generated@@201 $generated@@412)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@414) $generated@@82) (= (type $generated@@415) $generated@@82)) (or ($generated@@170 $generated@@414 $generated@@415) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@414 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@415 ($generated@@85 $generated@@46)))))) true)
 :pattern ( ($generated@@168 $generated@@414 $generated@@415))
))))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@82) ($generated@@416 $generated@@417)) (or ($generated@@86 $generated@@417) ($generated@@282 $generated@@417)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@418 ($generated@@289 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@90) ($generated@@0 ($generated@@110 $generated@@418 $generated@@421))) ($generated@@309 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@110 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@103 $generated@@418 ($generated@@289 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@422 ($generated@@294 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@90) ($generated@@0 ($generated@@110 $generated@@422 $generated@@425))) ($generated@@309 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@110 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@103 $generated@@422 ($generated@@294 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@110 ($generated@@339 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@110 ($generated@@339 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@351 (type $generated@@431))))
(let (($generated@@433 ($generated@@350 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@105 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@435) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@110 ($generated@@347 $generated@@434) ($generated@@185 ($generated@@88 $generated@@82 $generated@@435)))) (= ($generated@@110 ($generated@@429 $generated@@434) ($generated@@185 ($generated@@88 $generated@@82 $generated@@435))) ($generated@@186 ($generated@@88 $generated@@82 $generated@@435))))))
 :pattern ( ($generated@@110 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@369 (type $generated@@439))))
(let (($generated@@441 ($generated@@368 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@105 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@443) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@442) ($generated@@185 ($generated@@88 $generated@@82 $generated@@443)))) (= ($generated@@110 ($generated@@437 $generated@@442) ($generated@@185 ($generated@@88 $generated@@82 $generated@@443))) ($generated@@186 ($generated@@88 $generated@@82 $generated@@443))))))
 :pattern ( ($generated@@110 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@350 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@349 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@110 ($generated@@390 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@110 ($generated@@347 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@110 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@444) $generated@@448))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@110 ($generated@@390 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@368 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@367 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@110 ($generated@@401 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@110 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@449) $generated@@453))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@110 ($generated@@401 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@457) $generated@@461))) (and ($generated@@309 ($generated@@110 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@309 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@103 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@465) $generated@@469))) (and ($generated@@309 ($generated@@110 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@309 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@103 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@82)) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470))) (or ($generated@@86 $generated@@471) ($generated@@282 $generated@@471)))
 :pattern ( ($generated@@282 $generated@@471) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470)))
 :pattern ( ($generated@@86 $generated@@471) ($generated@@84 $generated@@471 ($generated@@85 $generated@@470)))
)))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@105 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@369 (type $generated@@474))))
(let (($generated@@476 ($generated@@368 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@367 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@366 $generated@@476 $generated@@475)) (= ($generated@@365 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@365 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@369 (type $generated@@477))))
(let (($generated@@479 ($generated@@368 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@367 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@366 $generated@@479 $generated@@478)) (= ($generated@@401 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@401 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@369 (type $generated@@480))))
(let (($generated@@482 ($generated@@368 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@367 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@366 $generated@@482 $generated@@481)) (= ($generated@@436 $generated@@480) ($generated@@472 $generated@@90))))))
 :pattern ( ($generated@@436 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@351 (type $generated@@483))))
(let (($generated@@485 ($generated@@350 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@349 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@348 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@90) (= (type $generated@@487) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@428 $generated@@483) ($generated@@333 ($generated@@265 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@428 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@369 (type $generated@@488))))
(let (($generated@@490 ($generated@@368 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@367 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@366 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@90) (= (type $generated@@492) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@436 $generated@@488) ($generated@@333 ($generated@@265 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@436 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@90) ($generated@@266 $generated@@493 $generated@@46)) (and (= ($generated@@333 ($generated@@88 $generated@@2 $generated@@493)) $generated@@493) ($generated@@84 ($generated@@88 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@266 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@90) ($generated@@266 $generated@@494 $generated@@47)) (and (= ($generated@@333 ($generated@@88 $generated@@3 $generated@@494)) $generated@@494) ($generated@@84 ($generated@@88 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@266 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@90) ($generated@@266 $generated@@495 $generated@@44)) (and (= ($generated@@333 ($generated@@88 $generated@@4 $generated@@495)) $generated@@495) ($generated@@84 ($generated@@88 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@266 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@90) ($generated@@266 $generated@@497 $generated@@45)) (and (= ($generated@@333 ($generated@@88 $generated@@496 $generated@@497)) $generated@@497) ($generated@@84 ($generated@@88 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@266 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@68) (= ($generated@@266 ($generated@@333 $generated@@498) $generated@@499) ($generated@@84 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@266 ($generated@@333 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@108 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@105 $generated@@501 $generated@@2)) (<= 0 ($generated@@338 $generated@@500))))
 :pattern ( ($generated@@338 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@327 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@326 $generated@@503)) (<= 0 ($generated@@325 $generated@@502))))
 :pattern ( ($generated@@325 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@454 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@454 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@454 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@454 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@514 ($generated@@462 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@462 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@76 ($generated@@462 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@90) (= (type $generated@@525) $generated@@90)) (= ($generated@@191 ($generated@@265 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@265 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= ($generated@@526 ($generated@@178 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@178 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@68) (= (type $generated@@533) $generated@@68)) (= ($generated@@530 ($generated@@178 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@178 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@90) (= (type $generated@@535) $generated@@90)) (= ($generated@@185 ($generated@@265 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@265 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@90) (= (type $generated@@537) $generated@@90)) (= ($generated@@186 ($generated@@265 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@265 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@90) (= (type $generated@@539) $generated@@82)) (= ($generated@@191 ($generated@@303 $generated@@538 $generated@@539)) $generated@@65))
 :pattern ( ($generated@@303 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@90) (= (type $generated@@541) $generated@@82)) (= ($generated@@89 ($generated@@303 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@303 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@90) (= (type $generated@@543) $generated@@82)) (= ($generated@@87 ($generated@@303 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@303 $generated@@542 $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (= (type ($generated@@544 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@547 T@U) ($generated@@548 Int) ) (! (let (($generated@@549 ($generated@@327 (type $generated@@547))))
(= (type ($generated@@545 $generated@@547 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@547 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@326 $generated@@90)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552) (forall (($generated@@553 Int) ) (!  (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@325 $generated@@550))) ($generated@@309 ($generated@@545 $generated@@550 $generated@@553) $generated@@551 $generated@@552))
 :pattern ( ($generated@@545 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@104 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@104 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@289 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@289 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@76 ($generated@@289 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@289 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@560 ($generated@@294 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@294 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@76 ($generated@@294 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@294 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@564 ($generated@@201 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@201 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@76 ($generated@@201 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@568 ($generated@@544 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@544 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@76 ($generated@@544 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@544 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@68) (= ($generated@@572 ($generated@@85 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@85 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@88 $generated@@576 ($generated@@333 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@333 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) (= ($generated@@84 $generated@@577 ($generated@@454 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@347 $generated@@577) $generated@@580))) (and ($generated@@266 ($generated@@110 ($generated@@429 $generated@@577) $generated@@580) $generated@@579) ($generated@@266 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@110 ($generated@@429 $generated@@577) $generated@@580))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@84 $generated@@577 ($generated@@454 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) (= ($generated@@84 $generated@@581 ($generated@@462 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@581) $generated@@584))) (and ($generated@@266 ($generated@@110 ($generated@@437 $generated@@581) $generated@@584) $generated@@583) ($generated@@266 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@110 ($generated@@437 $generated@@581) $generated@@584))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@84 $generated@@581 ($generated@@462 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@90) (= (type $generated@@588) $generated@@90)) (< ($generated@@585 $generated@@587) ($generated@@586 ($generated@@265 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@265 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@90) (= (type $generated@@590) $generated@@90)) (< ($generated@@585 $generated@@590) ($generated@@586 ($generated@@265 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@265 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@90) (= (type $generated@@592) $generated@@82)) (< ($generated@@585 $generated@@591) ($generated@@586 ($generated@@303 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@303 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@90) (= (type $generated@@594) $generated@@82)) (< ($generated@@586 $generated@@594) ($generated@@586 ($generated@@303 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@303 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@90) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) $generated@@68)) ($generated@@266 $generated@@595 ($generated@@454 $generated@@596 $generated@@597))) (and (= ($generated@@333 ($generated@@88 ($generated@@349 $generated@@90 $generated@@90) $generated@@595)) $generated@@595) ($generated@@84 ($generated@@88 ($generated@@349 $generated@@90 $generated@@90) $generated@@595) ($generated@@454 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@266 $generated@@595 ($generated@@454 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@90) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@266 $generated@@598 ($generated@@462 $generated@@599 $generated@@600))) (and (= ($generated@@333 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@598)) $generated@@598) ($generated@@84 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@598) ($generated@@462 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@266 $generated@@598 ($generated@@462 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@68) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@90)) ($generated@@266 $generated@@603 ($generated@@178 $generated@@601 $generated@@602))) (and (= ($generated@@333 ($generated@@88 $generated@@82 $generated@@603)) $generated@@603) ($generated@@84 ($generated@@88 $generated@@82 $generated@@603) ($generated@@178 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@266 $generated@@603 ($generated@@178 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@82) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@606) (and ($generated@@282 $generated@@604) ($generated@@103 $generated@@604 ($generated@@85 $generated@@605) $generated@@606)))) ($generated@@309 ($generated@@89 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@309 ($generated@@89 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@110 ($generated@@472 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@110 ($generated@@472 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@68) (= (type $generated@@610) $generated@@68)) (and (= ($generated@@76 ($generated@@178 $generated@@609 $generated@@610)) $generated@@62) (= ($generated@@344 ($generated@@178 $generated@@609 $generated@@610)) $generated@@66)))
 :pattern ( ($generated@@178 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@82) (= ($generated@@585 ($generated@@333 $generated@@611)) ($generated@@586 $generated@@611)))
 :pattern ( ($generated@@585 ($generated@@333 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@90) ($generated@@266 $generated@@612 ($generated@@104 0))) (and (= ($generated@@333 ($generated@@88 $generated@@2 $generated@@612)) $generated@@612) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@612) ($generated@@104 0))))
 :pattern ( ($generated@@266 $generated@@612 ($generated@@104 0)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@90) (= (type $generated@@614) $generated@@68)) ($generated@@266 $generated@@613 ($generated@@289 $generated@@614))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@613)) $generated@@613) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@613) ($generated@@289 $generated@@614))))
 :pattern ( ($generated@@266 $generated@@613 ($generated@@289 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@90) (= (type $generated@@616) $generated@@68)) ($generated@@266 $generated@@615 ($generated@@294 $generated@@616))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@615)) $generated@@615) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@615) ($generated@@294 $generated@@616))))
 :pattern ( ($generated@@266 $generated@@615 ($generated@@294 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@90) (= (type $generated@@618) $generated@@68)) ($generated@@266 $generated@@617 ($generated@@201 $generated@@618))) (and (= ($generated@@333 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@617)) $generated@@617) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@617) ($generated@@201 $generated@@618))))
 :pattern ( ($generated@@266 $generated@@617 ($generated@@201 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@90) (= (type $generated@@620) $generated@@68)) ($generated@@266 $generated@@619 ($generated@@544 $generated@@620))) (and (= ($generated@@333 ($generated@@88 ($generated@@326 $generated@@90) $generated@@619)) $generated@@619) ($generated@@84 ($generated@@88 ($generated@@326 $generated@@90) $generated@@619) ($generated@@544 $generated@@620))))
 :pattern ( ($generated@@266 $generated@@619 ($generated@@544 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@68) (= (type $generated@@622) $generated@@90)) ($generated@@266 $generated@@622 ($generated@@85 $generated@@621))) (and (= ($generated@@333 ($generated@@88 $generated@@82 $generated@@622)) $generated@@622) ($generated@@84 ($generated@@88 $generated@@82 $generated@@622) ($generated@@85 $generated@@621))))
 :pattern ( ($generated@@266 $generated@@622 ($generated@@85 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@82) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@625) (and ($generated@@282 $generated@@623) ($generated@@103 $generated@@623 ($generated@@85 $generated@@624) $generated@@625)))) ($generated@@103 ($generated@@87 $generated@@623) ($generated@@85 $generated@@624) $generated@@625))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@623) ($generated@@85 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@626 ($generated@@201 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@626 $generated@@629)))) ($generated@@309 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@110 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@103 $generated@@626 ($generated@@201 $generated@@627) $generated@@628))
)))
(assert (= $generated@@192 ($generated@@169 $generated@@192)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@82) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@632) (and ($generated@@177 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@68) ($generated@@103 $generated@@630 ($generated@@178 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@103 $generated@@630 ($generated@@178 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@309 ($generated@@185 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@309 ($generated@@185 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@82) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@262 $generated@@636) (and ($generated@@177 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@68) ($generated@@103 $generated@@634 ($generated@@178 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@103 $generated@@634 ($generated@@178 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@309 ($generated@@186 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@309 ($generated@@186 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@90) (= (type $generated@@639) $generated@@90)) (= ($generated@@265 ($generated@@169 $generated@@638) ($generated@@169 $generated@@639)) ($generated@@169 ($generated@@265 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@265 ($generated@@169 $generated@@638) ($generated@@169 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@90) (= (type $generated@@641) $generated@@82)) (= ($generated@@303 ($generated@@169 $generated@@640) ($generated@@169 $generated@@641)) ($generated@@169 ($generated@@303 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@303 ($generated@@169 $generated@@640) ($generated@@169 $generated@@641)))
)))
(assert (forall (($generated@@642 Int) ) (! (= ($generated@@333 ($generated@@8 ($generated@@194 $generated@@642))) ($generated@@169 ($generated@@333 ($generated@@8 $generated@@642))))
 :pattern ( ($generated@@333 ($generated@@8 ($generated@@194 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@333 ($generated@@169 $generated@@643)) ($generated@@169 ($generated@@333 $generated@@643)))
 :pattern ( ($generated@@333 ($generated@@169 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@327 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@326 $generated@@645)) (= ($generated@@325 $generated@@644) 0)) (= $generated@@644 ($generated@@324 $generated@@645))))
 :pattern ( ($generated@@325 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@105 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@338 ($generated@@111 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@338 $generated@@646) ($generated ($generated@@110 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@338 ($generated@@111 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@651) $generated@@2)) ($generated@@103 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@103 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@653) $generated@@3)) ($generated@@103 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@103 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@655) $generated@@4)) ($generated@@103 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@103 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@657) $generated@@496)) ($generated@@103 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@103 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@659) $generated@@90)) ($generated@@103 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@103 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@660) $generated@@68) (= (type $generated@@661) $generated@@90)) (= (type $generated@@662) $generated@@82)) (= (type $generated@@663) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@262 $generated@@663)) (= ($generated@@103 ($generated@@303 $generated@@661 $generated@@662) ($generated@@85 $generated@@660) $generated@@663)  (and ($generated@@309 $generated@@661 $generated@@660 $generated@@663) ($generated@@103 $generated@@662 ($generated@@85 $generated@@660) $generated@@663))))
 :pattern ( ($generated@@103 ($generated@@303 $generated@@661 $generated@@662) ($generated@@85 $generated@@660) $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@326 $generated@@90)) (= (type $generated@@665) $generated@@68)) (= ($generated@@84 $generated@@664 ($generated@@544 $generated@@665)) (forall (($generated@@666 Int) ) (!  (=> (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@325 $generated@@664))) ($generated@@266 ($generated@@545 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@545 $generated@@664 $generated@@666))
))))
 :pattern ( ($generated@@84 $generated@@664 ($generated@@544 $generated@@665)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@326 $generated@@90)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@325 $generated@@668))) (< ($generated@@586 ($generated@@88 $generated@@82 ($generated@@545 $generated@@668 $generated@@669))) ($generated@@667 $generated@@668))))
 :pattern ( ($generated@@586 ($generated@@88 $generated@@82 ($generated@@545 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@349 $generated@@90 $generated@@90)) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@68)) ($generated@@84 $generated@@670 ($generated@@454 $generated@@671 $generated@@672))) (and (and ($generated@@84 ($generated@@347 $generated@@670) ($generated@@289 $generated@@671)) ($generated@@84 ($generated@@390 $generated@@670) ($generated@@289 $generated@@672))) ($generated@@84 ($generated@@428 $generated@@670) ($generated@@289 ($generated@@178 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@84 $generated@@670 ($generated@@454 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@84 $generated@@673 ($generated@@462 $generated@@674 $generated@@675))) (and (and ($generated@@84 ($generated@@365 $generated@@673) ($generated@@294 $generated@@674)) ($generated@@84 ($generated@@401 $generated@@673) ($generated@@294 $generated@@675))) ($generated@@84 ($generated@@436 $generated@@673) ($generated@@294 ($generated@@178 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@84 $generated@@673 ($generated@@462 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@84 $generated@@676 $generated@@46))
 :pattern ( ($generated@@84 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@84 $generated@@677 $generated@@47))
 :pattern ( ($generated@@84 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@84 $generated@@678 $generated@@44))
 :pattern ( ($generated@@84 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@496) ($generated@@84 $generated@@679 $generated@@45))
 :pattern ( ($generated@@84 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@90) ($generated@@84 $generated@@680 $generated@@48))
 :pattern ( ($generated@@84 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 (T@U) Bool)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@683) $generated@@82) (= (type $generated@@687) $generated@@82)) (= (type $generated@@688) $generated@@82)) (= (type $generated@@684) $generated@@82)) (= (type $generated@@682) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@689) ($generated@@208 $generated@@106 $generated@@4))) (= (type $generated@@690) $generated@@106)) (= (type $generated@@692) $generated@@82)) (= (type $generated@@693) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 50) (let (($generated@@694  (=> ($generated@@103 ($generated@@8 $generated@@681) $generated@@46 $generated@@682) (=> (and (and ($generated@@103 $generated@@683 ($generated@@85 $generated@@46) $generated@@682) ($generated@@83 $generated@@681 $generated@@683)) (and ($generated@@83 $generated@@681 $generated@@683) (= (ControlFlow 0 38) (- 0 37)))) (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@681 $generated@@684) (+ (ite  (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) 2 (ite  (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) 1 0)) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@681 $generated@@683)))))))
(let (($generated@@695  (=> (and (not (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686))) (= (ControlFlow 0 41) 38)) $generated@@694)))
(let (($generated@@696  (=> (and (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) (= (ControlFlow 0 40) 38)) $generated@@694)))
(let (($generated@@697  (=> (= $generated@@681 $generated@@685) (and (=> (= (ControlFlow 0 43) 40) $generated@@696) (=> (= (ControlFlow 0 43) 41) $generated@@695)))))
(let (($generated@@698  (=> (not (= $generated@@681 $generated@@685)) (and (=> (= (ControlFlow 0 42) 40) $generated@@696) (=> (= (ControlFlow 0 42) 41) $generated@@695)))))
(let (($generated@@699  (=> (not (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686))) (and (=> (= (ControlFlow 0 44) 42) $generated@@698) (=> (= (ControlFlow 0 44) 43) $generated@@697)))))
(let (($generated@@700  (=> (and (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) (= (ControlFlow 0 39) 38)) $generated@@694)))
(let (($generated@@701  (=> (not (= $generated@@681 $generated@@685)) (and (=> (= (ControlFlow 0 46) 39) $generated@@700) (=> (= (ControlFlow 0 46) 44) $generated@@699)))))
(let (($generated@@702  (=> (= $generated@@681 $generated@@685) (and (=> (= (ControlFlow 0 45) 39) $generated@@700) (=> (= (ControlFlow 0 45) 44) $generated@@699)))))
(let (($generated@@703  (=> (and (and ($generated@@103 ($generated@@8 $generated@@681) $generated@@46 $generated@@682) ($generated@@103 $generated@@684 ($generated@@85 $generated@@46) $generated@@682)) (and ($generated@@83 $generated@@681 $generated@@684) ($generated@@83 $generated@@681 $generated@@684))) (and (=> (= (ControlFlow 0 47) 45) $generated@@702) (=> (= (ControlFlow 0 47) 46) $generated@@701)))))
(let (($generated@@704  (=> ($generated@@103 ($generated@@8 $generated@@681) $generated@@46 $generated@@682) (=> (and (and (and ($generated@@103 $generated@@687 ($generated@@85 $generated@@46) $generated@@682) ($generated@@83 $generated@@681 $generated@@687)) (and ($generated@@83 $generated@@681 $generated@@687) ($generated@@103 ($generated@@8 $generated@@681) $generated@@46 $generated@@682))) (and (and ($generated@@103 $generated@@688 ($generated@@85 $generated@@46) $generated@@682) ($generated@@83 $generated@@681 $generated@@688)) (and ($generated@@83 $generated@@681 $generated@@688) (= (ControlFlow 0 28) (- 0 27))))) (= (+ (ite  (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) 2 (ite  (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) 1 0)) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@681 $generated@@687)) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@681 $generated@@688))))))
(let (($generated@@705  (=> (and (not (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686))) (= (ControlFlow 0 31) 28)) $generated@@704)))
(let (($generated@@706  (=> (and (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) (= (ControlFlow 0 30) 28)) $generated@@704)))
(let (($generated@@707  (=> (= $generated@@681 $generated@@685) (and (=> (= (ControlFlow 0 33) 30) $generated@@706) (=> (= (ControlFlow 0 33) 31) $generated@@705)))))
(let (($generated@@708  (=> (not (= $generated@@681 $generated@@685)) (and (=> (= (ControlFlow 0 32) 30) $generated@@706) (=> (= (ControlFlow 0 32) 31) $generated@@705)))))
(let (($generated@@709  (=> (not (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686))) (and (=> (= (ControlFlow 0 34) 32) $generated@@708) (=> (= (ControlFlow 0 34) 33) $generated@@707)))))
(let (($generated@@710  (=> (and (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) (= (ControlFlow 0 29) 28)) $generated@@704)))
(let (($generated@@711  (=> (not (= $generated@@681 $generated@@685)) (and (=> (= (ControlFlow 0 36) 29) $generated@@710) (=> (= (ControlFlow 0 36) 34) $generated@@709)))))
(let (($generated@@712  (=> (= $generated@@681 $generated@@685) (and (=> (= (ControlFlow 0 35) 29) $generated@@710) (=> (= (ControlFlow 0 35) 34) $generated@@709)))))
(let (($generated@@713  (=> ($generated@@103 ($generated@@8 $generated@@681) $generated@@46 $generated@@682) (=> (and (and ($generated@@103 $generated@@687 ($generated@@85 $generated@@46) $generated@@682) ($generated@@83 $generated@@681 $generated@@687)) (and ($generated@@83 $generated@@681 $generated@@687) (= (ControlFlow 0 9) (- 0 8)))) (= (+ (ite  (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) 2 (ite  (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) 1 0)) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@681 $generated@@683)) (+ (ite  (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) 2 (ite  (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) 1 0)) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@681 $generated@@687)))))))
(let (($generated@@714  (=> (and (not (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686))) (= (ControlFlow 0 12) 9)) $generated@@713)))
(let (($generated@@715  (=> (and (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) (= (ControlFlow 0 11) 9)) $generated@@713)))
(let (($generated@@716  (=> (= $generated@@681 $generated@@685) (and (=> (= (ControlFlow 0 14) 11) $generated@@715) (=> (= (ControlFlow 0 14) 12) $generated@@714)))))
(let (($generated@@717  (=> (not (= $generated@@681 $generated@@685)) (and (=> (= (ControlFlow 0 13) 11) $generated@@715) (=> (= (ControlFlow 0 13) 12) $generated@@714)))))
(let (($generated@@718  (=> (not (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686))) (and (=> (= (ControlFlow 0 15) 13) $generated@@717) (=> (= (ControlFlow 0 15) 14) $generated@@716)))))
(let (($generated@@719  (=> (and (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) (= (ControlFlow 0 10) 9)) $generated@@713)))
(let (($generated@@720  (=> (not (= $generated@@681 $generated@@685)) (and (=> (= (ControlFlow 0 17) 10) $generated@@719) (=> (= (ControlFlow 0 17) 15) $generated@@718)))))
(let (($generated@@721  (=> (= $generated@@681 $generated@@685) (and (=> (= (ControlFlow 0 16) 10) $generated@@719) (=> (= (ControlFlow 0 16) 15) $generated@@718)))))
(let (($generated@@722  (=> (and (and ($generated@@103 ($generated@@8 $generated@@681) $generated@@46 $generated@@682) ($generated@@103 $generated@@683 ($generated@@85 $generated@@46) $generated@@682)) (and ($generated@@83 $generated@@681 $generated@@683) ($generated@@83 $generated@@681 $generated@@683))) (and (=> (= (ControlFlow 0 18) 16) $generated@@721) (=> (= (ControlFlow 0 18) 17) $generated@@720)))))
(let (($generated@@723  (=> (and (not (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686))) (= (ControlFlow 0 21) 18)) $generated@@722)))
(let (($generated@@724  (=> (and (or (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) (= (ControlFlow 0 20) 18)) $generated@@722)))
(let (($generated@@725  (=> (= $generated@@681 $generated@@685) (and (=> (= (ControlFlow 0 23) 20) $generated@@724) (=> (= (ControlFlow 0 23) 21) $generated@@723)))))
(let (($generated@@726  (=> (not (= $generated@@681 $generated@@685)) (and (=> (= (ControlFlow 0 22) 20) $generated@@724) (=> (= (ControlFlow 0 22) 21) $generated@@723)))))
(let (($generated@@727  (=> (not (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686))) (and (=> (= (ControlFlow 0 24) 22) $generated@@726) (=> (= (ControlFlow 0 24) 23) $generated@@725)))))
(let (($generated@@728  (=> (and (and (= $generated@@681 $generated@@685) (= $generated@@681 $generated@@686)) (= (ControlFlow 0 19) 18)) $generated@@722)))
(let (($generated@@729  (=> (not (= $generated@@681 $generated@@685)) (and (=> (= (ControlFlow 0 26) 19) $generated@@728) (=> (= (ControlFlow 0 26) 24) $generated@@727)))))
(let (($generated@@730  (=> (= $generated@@681 $generated@@685) (and (=> (= (ControlFlow 0 25) 19) $generated@@728) (=> (= (ControlFlow 0 25) 24) $generated@@727)))))
(let (($generated@@731  (=> (and (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@681 $generated@@684) ($generated@@79 ($generated@@80 $generated@@162) $generated@@681 $generated@@688)) (= (ControlFlow 0 7) (- 0 6))) (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@681 $generated@@684) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@681 $generated@@688)))))
(let (($generated@@732 true))
(let (($generated@@733 true))
(let (($generated@@734  (and (and (and (and (and (and (and (=> (= (ControlFlow 0 48) 4) $generated@@733) (=> (= (ControlFlow 0 48) 5) $generated@@732)) (=> (= (ControlFlow 0 48) 47) $generated@@703)) (=> (= (ControlFlow 0 48) 7) $generated@@731)) (=> (= (ControlFlow 0 48) 35) $generated@@712)) (=> (= (ControlFlow 0 48) 36) $generated@@711)) (=> (= (ControlFlow 0 48) 25) $generated@@730)) (=> (= (ControlFlow 0 48) 26) $generated@@729))))
(let (($generated@@735  (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@170 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@685)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@686)) $generated@@683)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@686)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@685)) $generated@@687))) (or ($generated@@168 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@685)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@686)) $generated@@683)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@686)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@685)) $generated@@687))) (forall (($generated@@736 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@736 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@685)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@686)) $generated@@683))) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@736 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@686)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@685)) $generated@@687)))))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@736 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@686)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@685)) $generated@@687))))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@162)) $generated@@736 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@685)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@686)) $generated@@683))))
)))))))
(let (($generated@@737  (=> (and (forall (($generated@@738 Int) ) (!  (=> ($generated@@0 ($generated@@169 ($generated@@11 true))) (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@738 $generated@@684) ($generated@@79 ($generated@@80 $generated@@162) $generated@@738 $generated@@688)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@738 $generated@@688))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@738 $generated@@684))
)) (= (ControlFlow 0 3) 2)) $generated@@735)))
(let (($generated@@739  (=> (= $generated@@689 ($generated@@207 $generated@@690 $generated@@682 $generated@@60 false)) (=> (and (= $generated@@684 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@685)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@686)) $generated@@683))) (= $generated@@688 ($generated@@303 ($generated@@333 ($generated@@8 $generated@@686)) ($generated@@303 ($generated@@333 ($generated@@8 $generated@@685)) $generated@@687)))) (and (=> (= (ControlFlow 0 49) 48) $generated@@734) (=> (= (ControlFlow 0 49) 3) $generated@@737))))))
(let (($generated@@740  (=> (and ($generated@@262 $generated@@682) ($generated@@691 $generated@@682)) (=> (and (and ($generated@@84 $generated@@683 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@683 ($generated@@85 $generated@@46) $generated@@682)) ($generated@@416 $generated@@683)) (=> (and (and (and ($generated@@84 $generated@@687 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@687 ($generated@@85 $generated@@46) $generated@@682)) ($generated@@416 $generated@@687)) (and (and ($generated@@84 $generated@@692 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@692 ($generated@@85 $generated@@46) $generated@@682)) true)) (=> (and (and (and (and ($generated@@84 $generated@@693 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@693 ($generated@@85 $generated@@46) $generated@@682)) true) (= 3 $generated@@78)) (and (and ($generated@@170 $generated@@683 $generated@@687) (and ($generated@@168 $generated@@683 $generated@@687) (forall (($generated@@741 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@162) $generated@@741 $generated@@683) ($generated@@79 ($generated@@80 $generated@@162) $generated@@741 $generated@@687)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@741 $generated@@687))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@162) $generated@@741 $generated@@683))
)))) (= (ControlFlow 0 50) 49))) $generated@@739))))))
$generated@@740))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U Int T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (Int T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (Int) Int)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Bool)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@311 (T@U T@U T@U) Bool)
(declare-fun $generated@@326 (T@T) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@465 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@T) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@548 (T@U Int) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@670 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 T@U) ) (! (= (type ($generated@@137 $generated@@143 $generated@@144 $generated@@145)) $generated@@139)
 :pattern ( ($generated@@137 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@142 $generated@@146))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@147) $generated@@138) (= (type $generated@@149) $generated@@139)) (or ($generated@@140 $generated@@148 $generated@@149) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@149 ($generated@@142 $generated@@46))))) ($generated@@141 ($generated@@137 $generated@@147 $generated@@148 $generated@@149) ($generated@@142 $generated@@46)))
 :pattern ( ($generated@@137 $generated@@147 $generated@@148 $generated@@149))
))))
(assert  (and (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@138)
 :pattern ( ($generated@@150 $generated@@152))
)) (= (type $generated@@151) $generated@@138)))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@138) (= (type $generated@@155) $generated@@139)) (= ($generated@@137 $generated@@153 $generated@@154 $generated@@155) ($generated@@137 $generated@@151 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@137 ($generated@@150 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@141 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@159 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@68) (= (type $generated@@162) $generated@@68)) (= (type $generated@@163) $generated@@139)) ($generated@@141 $generated@@163 ($generated@@158 $generated@@161 $generated@@162))) ($generated@@157 $generated@@163))
 :pattern ( ($generated@@157 $generated@@163) ($generated@@141 $generated@@163 ($generated@@158 $generated@@161 $generated@@162)))
)))
(assert  (and (and (= ($generated@@1 $generated@@167) 16) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@168))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@167)
 :pattern ( ($generated@@166 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@139) (= (type $generated@@171) $generated@@139)) true) (= ($generated@@164 $generated@@170 $generated@@171)  (and (= ($generated@@165 $generated@@170) ($generated@@165 $generated@@171)) (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)))))
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@72)
 :pattern ( ($generated@@172 $generated@@174))
)) (= (type $generated@@173) $generated@@139)))
(assert (= ($generated@@172 $generated@@173) $generated@@63))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@68)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@80 $generated@@167 $generated@@2)) (= (type $generated@@179) $generated@@68)) ($generated@@141 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@141 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 17)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@81 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@71 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@81) (= (type $generated@@230) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@231) ($generated@@70 $generated@@4))) (= (type $generated@@233) $generated@@81)) (= (type $generated@@234) ($generated@@70 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@182 $generated@@81 $generated@@4))
 :pattern ( ($generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@71 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@81) (= (type $generated@@242) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) ($generated@@70 $generated@@4))) (= (type $generated@@245) $generated@@81)) (= (type $generated@@246) ($generated@@70 $generated@@247))) (= ($generated@@0 ($generated@@180 ($generated@@236 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@180 ($generated@@236 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (= (type $generated@@249) $generated@@68) (= (type $generated@@250) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@248 $generated@@250)) ($generated@@78 $generated@@173 ($generated@@142 $generated@@249) $generated@@250))
 :pattern ( ($generated@@78 $generated@@173 ($generated@@142 $generated@@249) $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@139)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@68) (= (type $generated@@256) $generated@@68)) (= (type $generated@@257) $generated@@167)) (= (type $generated@@258) $generated@@167)) (= ($generated@@141 ($generated@@251 $generated@@257 $generated@@258) ($generated@@158 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@141 ($generated@@251 $generated@@257 $generated@@258) ($generated@@158 $generated@@255 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@68) ($generated@@141 $generated@@173 ($generated@@142 $generated@@259)))
 :pattern ( ($generated@@141 $generated@@173 ($generated@@142 $generated@@259)))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@139) (= (type $generated@@261) $generated@@139)) (= ($generated@@164 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@164 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@139) (= (type $generated@@264) $generated@@139)) (= ($generated@@262 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@262 $generated@@263 $generated@@264))
)))
(assert  (and (forall (($generated@@268 T@U) ) (! (= (type ($generated@@266 $generated@@268)) $generated@@167)
 :pattern ( ($generated@@266 $generated@@268))
)) (forall (($generated@@269 T@U) ) (! (= (type ($generated@@267 $generated@@269)) $generated@@139)
 :pattern ( ($generated@@267 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (= (type $generated@@270) $generated@@139) (= (type $generated@@271) $generated@@139)) (and ($generated@@265 $generated@@270) ($generated@@265 $generated@@271))) (= ($generated@@262 $generated@@270 $generated@@271)  (and (= ($generated@@266 $generated@@270) ($generated@@266 $generated@@271)) ($generated@@262 ($generated@@267 $generated@@270) ($generated@@267 $generated@@271)))))
 :pattern ( ($generated@@262 $generated@@270 $generated@@271) ($generated@@265 $generated@@270))
 :pattern ( ($generated@@262 $generated@@270 $generated@@271) ($generated@@265 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@275) $generated@@68)) (= ($generated@@141 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@167) ($generated@@0 ($generated@@85 $generated@@274 $generated@@276))) ($generated@@252 $generated@@276 $generated@@275))
 :pattern ( ($generated@@85 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@141 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@68)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@280) $generated@@68)) (= ($generated@@141 $generated@@279 ($generated@@277 $generated@@280)) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@167) ($generated@@0 ($generated@@85 $generated@@279 $generated@@281))) ($generated@@252 $generated@@281 $generated@@280))
 :pattern ( ($generated@@85 $generated@@279 $generated@@281))
))))
 :pattern ( ($generated@@141 $generated@@279 ($generated@@277 $generated@@280)))
)))
(assert (forall (($generated@@283 Int) ) (! (= ($generated@@282 $generated@@283) $generated@@283)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
(= (type ($generated@@284 $generated@@285)) $generated@@286))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= ($generated@@284 $generated@@287) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@289) $generated@@139) (= (type $generated@@290) $generated@@139)) (and ($generated@@288 $generated@@289) ($generated@@288 $generated@@290))) (= ($generated@@262 $generated@@289 $generated@@290) true))
 :pattern ( ($generated@@262 $generated@@289 $generated@@290) ($generated@@288 $generated@@289))
 :pattern ( ($generated@@262 $generated@@289 $generated@@290) ($generated@@288 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (! (= (type ($generated@@291 $generated@@292 $generated@@293)) $generated@@139)
 :pattern ( ($generated@@291 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) $generated@@167)) (= (type $generated@@296) $generated@@139)) (= ($generated@@141 ($generated@@291 $generated@@295 $generated@@296) ($generated@@142 $generated@@294))  (and ($generated@@252 $generated@@295 $generated@@294) ($generated@@141 $generated@@296 ($generated@@142 $generated@@294)))))
 :pattern ( ($generated@@141 ($generated@@291 $generated@@295 $generated@@296) ($generated@@142 $generated@@294)))
)))
(assert  (and (and (forall (($generated@@300 T@U) ) (! (= (type ($generated@@297 $generated@@300)) $generated@@138)
 :pattern ( ($generated@@297 $generated@@300))
)) (forall (($generated@@301 T@T) ($generated@@302 T@U) ) (! (= (type ($generated@@298 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@298 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (= (type ($generated@@299 $generated@@303)) $generated@@167)
 :pattern ( ($generated@@299 $generated@@303))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@304 T@U) ($generated@@305 Int) ($generated@@306 T@U) ) (!  (=> (and (and (= (type $generated@@304) $generated@@138) (= (type $generated@@306) $generated@@139)) (or ($generated@@140 $generated@@305 $generated@@306) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@306 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@288 $generated@@306)) (let (($generated@@307 ($generated@@267 $generated@@306)))
(let (($generated@@308 ($generated ($generated@@298 $generated@@2 ($generated@@266 $generated@@306)))))
 (=> (< $generated@@308 $generated@@305) ($generated@@140 $generated@@305 $generated@@307))))) (= ($generated@@137 ($generated@@297 $generated@@304) $generated@@305 $generated@@306) (ite ($generated@@288 $generated@@306) ($generated@@291 ($generated@@299 ($generated@@8 $generated@@305)) ($generated@@284 $generated@@173)) (let (($generated@@309 ($generated@@267 $generated@@306)))
(let (($generated@@310 ($generated ($generated@@298 $generated@@2 ($generated@@266 $generated@@306)))))
(ite (<= $generated@@305 $generated@@310) ($generated@@291 ($generated@@299 ($generated@@8 $generated@@305)) $generated@@306) ($generated@@291 ($generated@@299 ($generated@@8 $generated@@310)) ($generated@@137 $generated@@304 $generated@@305 $generated@@309)))))))))
 :pattern ( ($generated@@137 ($generated@@297 $generated@@304) $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@312) $generated@@68) (= (type $generated@@313) $generated@@68)) (= (type $generated@@314) $generated@@167)) (= (type $generated@@315) $generated@@167)) (= (type $generated@@316) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@248 $generated@@316)) (= ($generated@@78 ($generated@@251 $generated@@314 $generated@@315) ($generated@@158 $generated@@312 $generated@@313) $generated@@316)  (and ($generated@@311 $generated@@314 $generated@@312 $generated@@316) ($generated@@311 $generated@@315 $generated@@313 $generated@@316))))
 :pattern ( ($generated@@78 ($generated@@251 $generated@@314 $generated@@315) ($generated@@158 $generated@@312 $generated@@313) $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@139) (= ($generated@@157 $generated@@317) (= ($generated@@172 $generated@@317) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@139) (= ($generated@@288 $generated@@318) (= ($generated@@172 $generated@@318) $generated@@63)))
 :pattern ( ($generated@@288 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@139) (= ($generated@@265 $generated@@319) (= ($generated@@172 $generated@@319) $generated@@65)))
 :pattern ( ($generated@@265 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@139) ($generated@@157 $generated@@320)) (exists (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (and (and (= (type $generated@@321) $generated@@167) (= (type $generated@@322) $generated@@167)) (= $generated@@320 ($generated@@251 $generated@@321 $generated@@322)))
 :no-pattern (type $generated@@321)
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@157 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@139) ($generated@@265 $generated@@323)) (exists (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (and (and (= (type $generated@@324) $generated@@167) (= (type $generated@@325) $generated@@139)) (= $generated@@323 ($generated@@291 $generated@@324 $generated@@325)))
 :no-pattern (type $generated@@324)
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
)))
 :pattern ( ($generated@@265 $generated@@323))
)))
(assert  (and (and (forall (($generated@@330 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@330)) 18)) (forall (($generated@@331 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331))
))) (forall (($generated@@332 T@T) ) (! (= (type ($generated@@326 $generated@@332)) ($generated@@328 $generated@@332))
 :pattern ( ($generated@@326 $generated@@332))
))))
(assert (forall (($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@333)) 0)
 :pattern ( ($generated@@326 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@139) ($generated@@288 $generated@@334)) (= $generated@@334 $generated@@173))
 :pattern ( ($generated@@288 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@68) (= (type $generated@@337) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@311 ($generated@@299 $generated@@335) $generated@@336 $generated@@337) ($generated@@78 $generated@@335 $generated@@336 $generated@@337)))
 :pattern ( ($generated@@311 ($generated@@299 $generated@@335) $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@80 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@83 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@80 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@85 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@73)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@68) (and (= ($generated@@76 ($generated@@142 $generated@@346)) $generated@@64) (= ($generated@@344 ($generated@@142 $generated@@346)) $generated@@67)))
 :pattern ( ($generated@@142 $generated@@346))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 20)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@80 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@85 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@85 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@83 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@80 $generated@@384 $generated@@2)) (= ($generated@@176 $generated@@383) (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@384) (and (<= 0 ($generated ($generated@@85 $generated@@383 $generated@@385))) (<= ($generated ($generated@@85 $generated@@383 $generated@@385)) ($generated@@338 $generated@@383))))
 :pattern ( ($generated@@85 $generated@@383 $generated@@385))
)))))
 :pattern ( ($generated@@176 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@351 (type $generated@@386))))
(let (($generated@@388 ($generated@@350 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@349 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@348 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@347 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@351 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@80 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@351 (type $generated@@393))))
(let (($generated@@395 ($generated@@350 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@349 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@348 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@85 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@369 (type $generated@@397))))
(let (($generated@@399 ($generated@@368 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@367 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@366 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@365 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@369 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@80 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@369 (type $generated@@404))))
(let (($generated@@406 ($generated@@368 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@367 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@366 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 Int) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@138) (= (type $generated@@410) $generated@@139)) (= ($generated@@137 ($generated@@297 $generated@@408) $generated@@409 $generated@@410) ($generated@@137 $generated@@408 $generated@@409 $generated@@410)))
 :pattern ( ($generated@@137 ($generated@@297 $generated@@408) $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@80 $generated@@167 $generated@@2)) (= (type $generated@@412) $generated@@68)) (= ($generated@@141 $generated@@411 ($generated@@175 $generated@@412)) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@167) (< 0 ($generated ($generated@@85 $generated@@411 $generated@@413)))) ($generated@@252 $generated@@413 $generated@@412))
 :pattern ( ($generated@@85 $generated@@411 $generated@@413))
))))
 :pattern ( ($generated@@141 $generated@@411 ($generated@@175 $generated@@412)))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@415) $generated@@68)) (= (type $generated@@416) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@414 ($generated@@272 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@167) ($generated@@0 ($generated@@85 $generated@@414 $generated@@417))) ($generated@@311 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@85 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@78 $generated@@414 ($generated@@272 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@277 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@167) ($generated@@0 ($generated@@85 $generated@@418 $generated@@421))) ($generated@@311 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@85 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@277 $generated@@419) $generated@@420))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@422 T@U) ($generated@@423 Int) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) $generated@@138) (= (type $generated@@424) $generated@@139)) (or ($generated@@140 ($generated@@282 $generated@@423) ($generated@@284 $generated@@424)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@424 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@284 ($generated@@11 ($generated@@288 ($generated@@284 $generated@@424)))))) (let (($generated@@425 ($generated@@284 ($generated@@267 ($generated@@284 $generated@@424)))))
(let (($generated@@426 ($generated@@282 ($generated ($generated@@298 $generated@@2 ($generated@@266 ($generated@@284 $generated@@424)))))))
 (=> (< $generated@@426 ($generated@@282 $generated@@423)) ($generated@@140 ($generated@@282 $generated@@423) $generated@@425))))) (= ($generated@@137 ($generated@@297 $generated@@422) ($generated@@282 $generated@@423) ($generated@@284 $generated@@424)) (ite ($generated@@288 ($generated@@284 $generated@@424)) ($generated@@291 ($generated@@299 ($generated@@8 ($generated@@282 $generated@@423))) ($generated@@284 $generated@@173)) (let (($generated@@427 ($generated@@284 ($generated@@267 ($generated@@284 $generated@@424)))))
(let (($generated@@428 ($generated@@282 ($generated ($generated@@298 $generated@@2 ($generated@@266 ($generated@@284 $generated@@424)))))))
(ite (<= ($generated@@282 $generated@@423) $generated@@428) ($generated@@291 ($generated@@299 ($generated@@8 ($generated@@282 $generated@@423))) ($generated@@284 $generated@@424)) ($generated@@291 ($generated@@299 ($generated@@8 $generated@@428)) ($generated@@284 ($generated@@137 ($generated@@297 $generated@@422) ($generated@@282 $generated@@423) $generated@@427))))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@297 $generated@@422) ($generated@@282 $generated@@423) ($generated@@284 $generated@@424)))
))))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(= ($generated ($generated@@85 ($generated@@339 $generated@@430) $generated@@429)) 0))
 :pattern ( (let (($generated@@430 (type $generated@@429)))
($generated@@85 ($generated@@339 $generated@@430) $generated@@429)))
)))
(assert  (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@433)) ($generated@@80 $generated@@167 $generated@@4))
 :pattern ( ($generated@@431 $generated@@433))
)) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@351 (type $generated@@434))))
(let (($generated@@436 ($generated@@350 (type $generated@@434))))
(= (type ($generated@@432 $generated@@434)) ($generated@@80 $generated@@436 $generated@@435))))
 :pattern ( ($generated@@432 $generated@@434))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@349 $generated@@167 $generated@@167)) (= (type $generated@@438) $generated@@167)) (= ($generated@@0 ($generated@@85 ($generated@@431 $generated@@437) $generated@@438))  (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@437) ($generated@@165 ($generated@@298 $generated@@139 $generated@@438)))) (= ($generated@@85 ($generated@@432 $generated@@437) ($generated@@165 ($generated@@298 $generated@@139 $generated@@438))) ($generated@@166 ($generated@@298 $generated@@139 $generated@@438))))))
 :pattern ( ($generated@@85 ($generated@@431 $generated@@437) $generated@@438))
)))
(assert  (and (forall (($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@441)) ($generated@@80 $generated@@167 $generated@@4))
 :pattern ( ($generated@@439 $generated@@441))
)) (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@369 (type $generated@@442))))
(let (($generated@@444 ($generated@@368 (type $generated@@442))))
(= (type ($generated@@440 $generated@@442)) ($generated@@80 $generated@@444 $generated@@443))))
 :pattern ( ($generated@@440 $generated@@442))
))))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@367 $generated@@167 $generated@@167)) (= (type $generated@@446) $generated@@167)) (= ($generated@@0 ($generated@@85 ($generated@@439 $generated@@445) $generated@@446))  (and ($generated@@0 ($generated@@85 ($generated@@365 $generated@@445) ($generated@@165 ($generated@@298 $generated@@139 $generated@@446)))) (= ($generated@@85 ($generated@@440 $generated@@445) ($generated@@165 ($generated@@298 $generated@@139 $generated@@446))) ($generated@@166 ($generated@@298 $generated@@139 $generated@@446))))))
 :pattern ( ($generated@@85 ($generated@@439 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@350 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@349 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@85 ($generated@@390 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@85 ($generated@@432 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@447) $generated@@451))
 :pattern ( ($generated@@85 ($generated@@432 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@368 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@367 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@85 ($generated@@365 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@85 ($generated@@440 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@452) $generated@@456))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) ($generated@@349 $generated@@167 $generated@@167)) (= (type $generated@@461) $generated@@68)) (= (type $generated@@462) $generated@@68)) (= (type $generated@@463) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@460) $generated@@464))) (and ($generated@@311 ($generated@@85 ($generated@@432 $generated@@460) $generated@@464) $generated@@462 $generated@@463) ($generated@@311 $generated@@464 $generated@@461 $generated@@463)))
 :pattern ( ($generated@@85 ($generated@@432 $generated@@460) $generated@@464))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@460) $generated@@464))
))))
 :pattern ( ($generated@@78 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@465 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (= (type $generated@@468) ($generated@@367 $generated@@167 $generated@@167)) (= (type $generated@@469) $generated@@68)) (= (type $generated@@470) $generated@@68)) (= (type $generated@@471) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@468) $generated@@472))) (and ($generated@@311 ($generated@@85 ($generated@@440 $generated@@468) $generated@@472) $generated@@470 $generated@@471) ($generated@@311 $generated@@472 $generated@@469 $generated@@471)))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@468) $generated@@472))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@468) $generated@@472))
))))
 :pattern ( ($generated@@78 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@139)) ($generated@@141 $generated@@474 ($generated@@142 $generated@@473))) (or ($generated@@288 $generated@@474) ($generated@@265 $generated@@474)))
 :pattern ( ($generated@@265 $generated@@474) ($generated@@141 $generated@@474 ($generated@@142 $generated@@473)))
 :pattern ( ($generated@@288 $generated@@474) ($generated@@141 $generated@@474 ($generated@@142 $generated@@473)))
)))
(assert (forall (($generated@@476 T@T) ) (! (= (type ($generated@@475 $generated@@476)) ($generated@@80 $generated@@476 $generated@@4))
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@369 (type $generated@@477))))
(let (($generated@@479 ($generated@@368 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@367 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@366 $generated@@479 $generated@@478)) (= ($generated@@365 $generated@@477) ($generated@@475 $generated@@479))))))
 :pattern ( ($generated@@365 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@369 (type $generated@@480))))
(let (($generated@@482 ($generated@@368 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@367 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@366 $generated@@482 $generated@@481)) (= ($generated@@401 $generated@@480) ($generated@@475 $generated@@481))))))
 :pattern ( ($generated@@401 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@369 (type $generated@@483))))
(let (($generated@@485 ($generated@@368 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@367 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@366 $generated@@485 $generated@@484)) (= ($generated@@439 $generated@@483) ($generated@@475 $generated@@167))))))
 :pattern ( ($generated@@439 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@351 (type $generated@@486))))
(let (($generated@@488 ($generated@@350 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@349 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@348 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@167) (= (type $generated@@490) $generated@@167)) ($generated@@0 ($generated@@85 ($generated@@431 $generated@@486) ($generated@@299 ($generated@@251 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@431 $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@369 (type $generated@@491))))
(let (($generated@@493 ($generated@@368 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@367 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@366 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@167) (= (type $generated@@495) $generated@@167)) ($generated@@0 ($generated@@85 ($generated@@439 $generated@@491) ($generated@@299 ($generated@@251 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@439 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@167) ($generated@@252 $generated@@496 $generated@@46)) (and (= ($generated@@299 ($generated@@298 $generated@@2 $generated@@496)) $generated@@496) ($generated@@141 ($generated@@298 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@167) ($generated@@252 $generated@@497 $generated@@47)) (and (= ($generated@@299 ($generated@@298 $generated@@3 $generated@@497)) $generated@@497) ($generated@@141 ($generated@@298 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@167) ($generated@@252 $generated@@498 $generated@@44)) (and (= ($generated@@299 ($generated@@298 $generated@@4 $generated@@498)) $generated@@498) ($generated@@141 ($generated@@298 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 21))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@167) ($generated@@252 $generated@@500 $generated@@45)) (and (= ($generated@@299 ($generated@@298 $generated@@499 $generated@@500)) $generated@@500) ($generated@@141 ($generated@@298 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@252 ($generated@@299 $generated@@501) $generated@@502) ($generated@@141 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@252 ($generated@@299 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@83 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@80 $generated@@504 $generated@@2)) (<= 0 ($generated@@338 $generated@@503))))
 :pattern ( ($generated@@338 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@329 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@328 $generated@@506)) (<= 0 ($generated@@327 $generated@@505))))
 :pattern ( ($generated@@327 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@457 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@457 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@457 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@457 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@76 ($generated@@457 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@457 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@465 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@465 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@465 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@465 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@68) (= (type $generated@@526) $generated@@68)) (= ($generated@@76 ($generated@@465 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@465 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@167) (= (type $generated@@528) $generated@@167)) (= ($generated@@172 ($generated@@251 $generated@@527 $generated@@528)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@529 ($generated@@158 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@158 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (= ($generated@@533 ($generated@@158 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@158 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@167) (= (type $generated@@538) $generated@@167)) (= ($generated@@165 ($generated@@251 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@251 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@167) (= (type $generated@@540) $generated@@167)) (= ($generated@@166 ($generated@@251 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@251 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@167) (= (type $generated@@542) $generated@@139)) (= ($generated@@172 ($generated@@291 $generated@@541 $generated@@542)) $generated@@65))
 :pattern ( ($generated@@291 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@167) (= (type $generated@@544) $generated@@139)) (= ($generated@@266 ($generated@@291 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@291 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@167) (= (type $generated@@546) $generated@@139)) (= ($generated@@267 ($generated@@291 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@291 $generated@@545 $generated@@546))
)))
(assert  (and (forall (($generated@@549 T@U) ) (! (= (type ($generated@@547 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@549))
)) (forall (($generated@@550 T@U) ($generated@@551 Int) ) (! (let (($generated@@552 ($generated@@329 (type $generated@@550))))
(= (type ($generated@@548 $generated@@550 $generated@@551)) $generated@@552))
 :pattern ( ($generated@@548 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@328 $generated@@167)) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@553 ($generated@@547 $generated@@554) $generated@@555) (forall (($generated@@556 Int) ) (!  (=> (and (<= 0 $generated@@556) (< $generated@@556 ($generated@@327 $generated@@553))) ($generated@@311 ($generated@@548 $generated@@553 $generated@@556) $generated@@554 $generated@@555))
 :pattern ( ($generated@@548 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@78 $generated@@553 ($generated@@547 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@557 ($generated@@79 $generated@@558)) $generated@@558)
 :pattern ( ($generated@@79 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@272 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@272 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@76 ($generated@@272 $generated@@562)) $generated@@54))
 :pattern ( ($generated@@272 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@277 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@277 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@76 ($generated@@277 $generated@@566)) $generated@@55))
 :pattern ( ($generated@@277 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@567 ($generated@@175 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@175 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@76 ($generated@@175 $generated@@570)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@68)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@571 ($generated@@547 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@547 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@68) (= ($generated@@76 ($generated@@547 $generated@@574)) $generated@@57))
 :pattern ( ($generated@@547 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@68)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@575 ($generated@@142 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@142 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
(= ($generated@@298 $generated@@579 ($generated@@299 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@299 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@349 $generated@@167 $generated@@167)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@68)) (= ($generated@@141 $generated@@580 ($generated@@457 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@580) $generated@@583))) (and ($generated@@252 ($generated@@85 ($generated@@432 $generated@@580) $generated@@583) $generated@@582) ($generated@@252 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@85 ($generated@@432 $generated@@580) $generated@@583))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@141 $generated@@580 ($generated@@457 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@367 $generated@@167 $generated@@167)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@68)) (= ($generated@@141 $generated@@584 ($generated@@465 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@584) $generated@@587))) (and ($generated@@252 ($generated@@85 ($generated@@440 $generated@@584) $generated@@587) $generated@@586) ($generated@@252 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@584) $generated@@587))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@141 $generated@@584 ($generated@@465 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@167) (= (type $generated@@591) $generated@@167)) (< ($generated@@588 $generated@@590) ($generated@@589 ($generated@@251 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@251 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@167) (= (type $generated@@593) $generated@@167)) (< ($generated@@588 $generated@@593) ($generated@@589 ($generated@@251 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@251 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@167) (= (type $generated@@595) $generated@@139)) (< ($generated@@588 $generated@@594) ($generated@@589 ($generated@@291 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@291 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@167) (= (type $generated@@597) $generated@@139)) (< ($generated@@589 $generated@@597) ($generated@@589 ($generated@@291 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@291 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@167) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@252 $generated@@598 ($generated@@457 $generated@@599 $generated@@600))) (and (= ($generated@@299 ($generated@@298 ($generated@@349 $generated@@167 $generated@@167) $generated@@598)) $generated@@598) ($generated@@141 ($generated@@298 ($generated@@349 $generated@@167 $generated@@167) $generated@@598) ($generated@@457 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@252 $generated@@598 ($generated@@457 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@167) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@68)) ($generated@@252 $generated@@601 ($generated@@465 $generated@@602 $generated@@603))) (and (= ($generated@@299 ($generated@@298 ($generated@@367 $generated@@167 $generated@@167) $generated@@601)) $generated@@601) ($generated@@141 ($generated@@298 ($generated@@367 $generated@@167 $generated@@167) $generated@@601) ($generated@@465 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@252 $generated@@601 ($generated@@465 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@167)) ($generated@@252 $generated@@606 ($generated@@158 $generated@@604 $generated@@605))) (and (= ($generated@@299 ($generated@@298 $generated@@139 $generated@@606)) $generated@@606) ($generated@@141 ($generated@@298 $generated@@139 $generated@@606) ($generated@@158 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@252 $generated@@606 ($generated@@158 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@139) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@248 $generated@@609) (and ($generated@@265 $generated@@607) ($generated@@78 $generated@@607 ($generated@@142 $generated@@608) $generated@@609)))) ($generated@@311 ($generated@@266 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@311 ($generated@@266 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@610)))
 (not ($generated@@0 ($generated@@85 ($generated@@475 $generated@@611) $generated@@610))))
 :pattern ( (let (($generated@@611 (type $generated@@610)))
($generated@@85 ($generated@@475 $generated@@611) $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@68) (= (type $generated@@613) $generated@@68)) (and (= ($generated@@76 ($generated@@158 $generated@@612 $generated@@613)) $generated@@62) (= ($generated@@344 ($generated@@158 $generated@@612 $generated@@613)) $generated@@66)))
 :pattern ( ($generated@@158 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@139) (= ($generated@@588 ($generated@@299 $generated@@614)) ($generated@@589 $generated@@614)))
 :pattern ( ($generated@@588 ($generated@@299 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@167) ($generated@@252 $generated@@615 ($generated@@79 0))) (and (= ($generated@@299 ($generated@@298 $generated@@2 $generated@@615)) $generated@@615) ($generated@@141 ($generated@@298 ($generated@@80 $generated@@167 $generated@@4) $generated@@615) ($generated@@79 0))))
 :pattern ( ($generated@@252 $generated@@615 ($generated@@79 0)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@167) (= (type $generated@@617) $generated@@68)) ($generated@@252 $generated@@616 ($generated@@272 $generated@@617))) (and (= ($generated@@299 ($generated@@298 ($generated@@80 $generated@@167 $generated@@4) $generated@@616)) $generated@@616) ($generated@@141 ($generated@@298 ($generated@@80 $generated@@167 $generated@@4) $generated@@616) ($generated@@272 $generated@@617))))
 :pattern ( ($generated@@252 $generated@@616 ($generated@@272 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@167) (= (type $generated@@619) $generated@@68)) ($generated@@252 $generated@@618 ($generated@@277 $generated@@619))) (and (= ($generated@@299 ($generated@@298 ($generated@@80 $generated@@167 $generated@@4) $generated@@618)) $generated@@618) ($generated@@141 ($generated@@298 ($generated@@80 $generated@@167 $generated@@4) $generated@@618) ($generated@@277 $generated@@619))))
 :pattern ( ($generated@@252 $generated@@618 ($generated@@277 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@167) (= (type $generated@@621) $generated@@68)) ($generated@@252 $generated@@620 ($generated@@175 $generated@@621))) (and (= ($generated@@299 ($generated@@298 ($generated@@80 $generated@@167 $generated@@2) $generated@@620)) $generated@@620) ($generated@@141 ($generated@@298 ($generated@@80 $generated@@167 $generated@@2) $generated@@620) ($generated@@175 $generated@@621))))
 :pattern ( ($generated@@252 $generated@@620 ($generated@@175 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@167) (= (type $generated@@623) $generated@@68)) ($generated@@252 $generated@@622 ($generated@@547 $generated@@623))) (and (= ($generated@@299 ($generated@@298 ($generated@@328 $generated@@167) $generated@@622)) $generated@@622) ($generated@@141 ($generated@@298 ($generated@@328 $generated@@167) $generated@@622) ($generated@@547 $generated@@623))))
 :pattern ( ($generated@@252 $generated@@622 ($generated@@547 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@68) (= (type $generated@@625) $generated@@167)) ($generated@@252 $generated@@625 ($generated@@142 $generated@@624))) (and (= ($generated@@299 ($generated@@298 $generated@@139 $generated@@625)) $generated@@625) ($generated@@141 ($generated@@298 $generated@@139 $generated@@625) ($generated@@142 $generated@@624))))
 :pattern ( ($generated@@252 $generated@@625 ($generated@@142 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@139) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@248 $generated@@628) (and ($generated@@265 $generated@@626) ($generated@@78 $generated@@626 ($generated@@142 $generated@@627) $generated@@628)))) ($generated@@78 ($generated@@267 $generated@@626) ($generated@@142 $generated@@627) $generated@@628))
 :pattern ( ($generated@@78 ($generated@@267 $generated@@626) ($generated@@142 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@80 $generated@@167 $generated@@2)) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@629 ($generated@@175 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@167) (< 0 ($generated ($generated@@85 $generated@@629 $generated@@632)))) ($generated@@311 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@85 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@78 $generated@@629 ($generated@@175 $generated@@630) $generated@@631))
)))
(assert (= $generated@@173 ($generated@@284 $generated@@173)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@139) (= (type $generated@@634) $generated@@68)) (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@248 $generated@@635) (and ($generated@@157 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@68) ($generated@@78 $generated@@633 ($generated@@158 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@78 $generated@@633 ($generated@@158 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@311 ($generated@@165 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@311 ($generated@@165 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@139) (= (type $generated@@638) $generated@@68)) (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@248 $generated@@639) (and ($generated@@157 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@68) ($generated@@78 $generated@@637 ($generated@@158 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@78 $generated@@637 ($generated@@158 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@311 ($generated@@166 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@311 ($generated@@166 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@167) (= (type $generated@@642) $generated@@167)) (= ($generated@@251 ($generated@@284 $generated@@641) ($generated@@284 $generated@@642)) ($generated@@284 ($generated@@251 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@251 ($generated@@284 $generated@@641) ($generated@@284 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@167) (= (type $generated@@644) $generated@@139)) (= ($generated@@291 ($generated@@284 $generated@@643) ($generated@@284 $generated@@644)) ($generated@@284 ($generated@@291 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@291 ($generated@@284 $generated@@643) ($generated@@284 $generated@@644)))
)))
(assert (forall (($generated@@645 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@282 $generated@@645))) ($generated@@284 ($generated@@299 ($generated@@8 $generated@@645))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@282 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ) (! (= ($generated@@299 ($generated@@284 $generated@@646)) ($generated@@284 ($generated@@299 $generated@@646)))
 :pattern ( ($generated@@299 ($generated@@284 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@329 (type $generated@@647))))
 (=> (and (= (type $generated@@647) ($generated@@328 $generated@@648)) (= ($generated@@327 $generated@@647) 0)) (= $generated@@647 ($generated@@326 $generated@@648))))
 :pattern ( ($generated@@327 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@650)))
 (=> (and (and (= (type $generated@@649) ($generated@@80 $generated@@652 $generated@@2)) (= (type $generated@@651) $generated@@2)) (<= 0 ($generated $generated@@651))) (= ($generated@@338 ($generated@@86 $generated@@649 $generated@@650 $generated@@651)) (+ (- ($generated@@338 $generated@@649) ($generated ($generated@@85 $generated@@649 $generated@@650))) ($generated $generated@@651)))))
 :pattern ( ($generated@@338 ($generated@@86 $generated@@649 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@654) $generated@@2)) ($generated@@78 $generated@@654 $generated@@46 $generated@@653))
 :pattern ( ($generated@@78 $generated@@654 $generated@@46 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@656) $generated@@3)) ($generated@@78 $generated@@656 $generated@@47 $generated@@655))
 :pattern ( ($generated@@78 $generated@@656 $generated@@47 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@658) $generated@@4)) ($generated@@78 $generated@@658 $generated@@44 $generated@@657))
 :pattern ( ($generated@@78 $generated@@658 $generated@@44 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@660) $generated@@499)) ($generated@@78 $generated@@660 $generated@@45 $generated@@659))
 :pattern ( ($generated@@78 $generated@@660 $generated@@45 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@662) $generated@@167)) ($generated@@78 $generated@@662 $generated@@48 $generated@@661))
 :pattern ( ($generated@@78 $generated@@662 $generated@@48 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@663) $generated@@68) (= (type $generated@@664) $generated@@167)) (= (type $generated@@665) $generated@@139)) (= (type $generated@@666) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@248 $generated@@666)) (= ($generated@@78 ($generated@@291 $generated@@664 $generated@@665) ($generated@@142 $generated@@663) $generated@@666)  (and ($generated@@311 $generated@@664 $generated@@663 $generated@@666) ($generated@@78 $generated@@665 ($generated@@142 $generated@@663) $generated@@666))))
 :pattern ( ($generated@@78 ($generated@@291 $generated@@664 $generated@@665) ($generated@@142 $generated@@663) $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@328 $generated@@167)) (= (type $generated@@668) $generated@@68)) (= ($generated@@141 $generated@@667 ($generated@@547 $generated@@668)) (forall (($generated@@669 Int) ) (!  (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@327 $generated@@667))) ($generated@@252 ($generated@@548 $generated@@667 $generated@@669) $generated@@668))
 :pattern ( ($generated@@548 $generated@@667 $generated@@669))
))))
 :pattern ( ($generated@@141 $generated@@667 ($generated@@547 $generated@@668)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 Int) ) (!  (=> (= (type $generated@@671) ($generated@@328 $generated@@167)) (=> (and (<= 0 $generated@@672) (< $generated@@672 ($generated@@327 $generated@@671))) (< ($generated@@589 ($generated@@298 $generated@@139 ($generated@@548 $generated@@671 $generated@@672))) ($generated@@670 $generated@@671))))
 :pattern ( ($generated@@589 ($generated@@298 $generated@@139 ($generated@@548 $generated@@671 $generated@@672))))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@349 $generated@@167 $generated@@167)) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@141 $generated@@673 ($generated@@457 $generated@@674 $generated@@675))) (and (and ($generated@@141 ($generated@@347 $generated@@673) ($generated@@272 $generated@@674)) ($generated@@141 ($generated@@390 $generated@@673) ($generated@@272 $generated@@675))) ($generated@@141 ($generated@@431 $generated@@673) ($generated@@272 ($generated@@158 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@141 $generated@@673 ($generated@@457 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) ($generated@@367 $generated@@167 $generated@@167)) (= (type $generated@@677) $generated@@68)) (= (type $generated@@678) $generated@@68)) ($generated@@141 $generated@@676 ($generated@@465 $generated@@677 $generated@@678))) (and (and ($generated@@141 ($generated@@365 $generated@@676) ($generated@@277 $generated@@677)) ($generated@@141 ($generated@@401 $generated@@676) ($generated@@277 $generated@@678))) ($generated@@141 ($generated@@439 $generated@@676) ($generated@@277 ($generated@@158 $generated@@677 $generated@@678)))))
 :pattern ( ($generated@@141 $generated@@676 ($generated@@465 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@2) ($generated@@141 $generated@@679 $generated@@46))
 :pattern ( ($generated@@141 $generated@@679 $generated@@46))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@3) ($generated@@141 $generated@@680 $generated@@47))
 :pattern ( ($generated@@141 $generated@@680 $generated@@47))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@4) ($generated@@141 $generated@@681 $generated@@44))
 :pattern ( ($generated@@141 $generated@@681 $generated@@44))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@499) ($generated@@141 $generated@@682 $generated@@45))
 :pattern ( ($generated@@141 $generated@@682 $generated@@45))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@167) ($generated@@141 $generated@@683 $generated@@48))
 :pattern ( ($generated@@141 $generated@@683 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@686) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@687) $generated@@139)) (= (type $generated@@688) $generated@@139)) (= (type $generated@@690) $generated@@139)) (= (type $generated@@691) $generated@@139)) (= (type $generated@@693) ($generated@@182 $generated@@81 $generated@@4))) (= (type $generated@@694) $generated@@81)) (= (type $generated@@695) ($generated@@182 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@697  (=> (< $generated@@684 $generated@@685) (=> (and ($generated@@78 ($generated@@8 $generated@@685) $generated@@46 $generated@@686) ($generated@@78 $generated@@687 ($generated@@142 $generated@@46) $generated@@686)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (<= 0 $generated@@685) (= $generated@@685 $generated@@685))) (=> (or (<= 0 $generated@@685) (= $generated@@685 $generated@@685)) (=> (= (ControlFlow 0 6) (- 0 5)) (or (< $generated@@685 $generated@@685) (and (= $generated@@685 $generated@@685) (< ($generated@@589 $generated@@687) ($generated@@589 $generated@@688)))))))))))
(let (($generated@@698 true))
(let (($generated@@699  (=> (and (= $generated@@688 ($generated@@291 ($generated@@299 ($generated@@8 $generated@@689)) $generated@@690)) ($generated@@141 $generated@@690 ($generated@@142 $generated@@46))) (=> (and (and (and ($generated@@141 $generated@@687 ($generated@@142 $generated@@46)) ($generated@@78 $generated@@687 ($generated@@142 $generated@@46) $generated@@686)) (and (= $generated@@691 $generated@@690) ($generated@@141 $generated@@691 ($generated@@142 $generated@@46)))) (and (and (= $generated@@687 $generated@@691) (= $generated@@692 $generated@@689)) (and ($generated@@141 ($generated@@8 $generated@@692) $generated@@46) (= $generated@@684 $generated@@692)))) (and (=> (= (ControlFlow 0 8) 4) $generated@@698) (=> (= (ControlFlow 0 8) 6) $generated@@697))))))
(let (($generated@@700 true))
(let (($generated@@701  (=> (not (= $generated@@688 $generated@@173)) (and (=> (= (ControlFlow 0 9) 8) $generated@@699) (=> (= (ControlFlow 0 9) 3) $generated@@700)))))
(let (($generated@@702 true))
(let (($generated@@703  (=> (= $generated@@693 ($generated@@236 $generated@@694 $generated@@686 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 2) $generated@@702) (=> (= (ControlFlow 0 10) 9) $generated@@701)))))
(let (($generated@@704 true))
(let (($generated@@705  (=> (= $generated@@695 ($generated@@181 $generated@@694 $generated@@686 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@704) (=> (= (ControlFlow 0 11) 10) $generated@@703)))))
(let (($generated@@706  (=> (and (and (and ($generated@@248 $generated@@686) ($generated@@696 $generated@@686)) ($generated@@141 $generated@@688 ($generated@@142 $generated@@46))) (and (= 1 $generated@@136) (= (ControlFlow 0 12) 11))) $generated@@705)))
$generated@@706)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U Int T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (Int T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (Int) Int)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@279 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@T) T@U)
(declare-fun $generated@@355 (T@T T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@487 () T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@536 (T@U Int) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@658 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 T@U) ) (! (= (type ($generated@@137 $generated@@143 $generated@@144 $generated@@145)) $generated@@139)
 :pattern ( ($generated@@137 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@142 $generated@@146))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@147) $generated@@138) (= (type $generated@@149) $generated@@139)) (or ($generated@@140 $generated@@148 $generated@@149) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@149 ($generated@@142 $generated@@46))))) ($generated@@141 ($generated@@137 $generated@@147 $generated@@148 $generated@@149) ($generated@@142 $generated@@46)))
 :pattern ( ($generated@@137 $generated@@147 $generated@@148 $generated@@149))
))))
(assert  (and (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@138)
 :pattern ( ($generated@@150 $generated@@152))
)) (= (type $generated@@151) $generated@@138)))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@138) (= (type $generated@@155) $generated@@139)) (= ($generated@@137 $generated@@153 $generated@@154 $generated@@155) ($generated@@137 $generated@@151 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@137 ($generated@@150 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@141 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@159 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@68) (= (type $generated@@162) $generated@@68)) (= (type $generated@@163) $generated@@139)) ($generated@@141 $generated@@163 ($generated@@158 $generated@@161 $generated@@162))) ($generated@@157 $generated@@163))
 :pattern ( ($generated@@157 $generated@@163) ($generated@@141 $generated@@163 ($generated@@158 $generated@@161 $generated@@162)))
)))
(assert  (and (and (= ($generated@@1 $generated@@167) 16) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@168))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@167)
 :pattern ( ($generated@@166 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@139) (= (type $generated@@171) $generated@@139)) true) (= ($generated@@164 $generated@@170 $generated@@171)  (and (= ($generated@@165 $generated@@170) ($generated@@165 $generated@@171)) (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)))))
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@72)
 :pattern ( ($generated@@172 $generated@@174))
)) (= (type $generated@@173) $generated@@139)))
(assert (= ($generated@@172 $generated@@173) $generated@@63))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@68)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@80 $generated@@167 $generated@@2)) (= (type $generated@@179) $generated@@68)) ($generated@@141 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@141 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 17)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@81 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@71 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@81) (= (type $generated@@230) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@231) ($generated@@70 $generated@@4))) (= (type $generated@@233) $generated@@81)) (= (type $generated@@234) ($generated@@70 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (= (type $generated@@237) $generated@@68) (= (type $generated@@238) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@236 $generated@@238)) ($generated@@78 $generated@@173 ($generated@@142 $generated@@237) $generated@@238))
 :pattern ( ($generated@@78 $generated@@173 ($generated@@142 $generated@@237) $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@139)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@68) (= (type $generated@@244) $generated@@68)) (= (type $generated@@245) $generated@@167)) (= (type $generated@@246) $generated@@167)) (= ($generated@@141 ($generated@@239 $generated@@245 $generated@@246) ($generated@@158 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@141 ($generated@@239 $generated@@245 $generated@@246) ($generated@@158 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (= (type $generated@@247) $generated@@68) ($generated@@141 $generated@@173 ($generated@@142 $generated@@247)))
 :pattern ( ($generated@@141 $generated@@173 ($generated@@142 $generated@@247)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@139) (= (type $generated@@249) $generated@@139)) (= ($generated@@164 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@164 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@139) (= (type $generated@@252) $generated@@139)) (= ($generated@@250 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252))
)))
(assert  (and (forall (($generated@@256 T@U) ) (! (= (type ($generated@@254 $generated@@256)) $generated@@167)
 :pattern ( ($generated@@254 $generated@@256))
)) (forall (($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@257)) $generated@@139)
 :pattern ( ($generated@@255 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) $generated@@139) (= (type $generated@@259) $generated@@139)) (and ($generated@@253 $generated@@258) ($generated@@253 $generated@@259))) (= ($generated@@250 $generated@@258 $generated@@259)  (and (= ($generated@@254 $generated@@258) ($generated@@254 $generated@@259)) ($generated@@250 ($generated@@255 $generated@@258) ($generated@@255 $generated@@259)))))
 :pattern ( ($generated@@250 $generated@@258 $generated@@259) ($generated@@253 $generated@@258))
 :pattern ( ($generated@@250 $generated@@258 $generated@@259) ($generated@@253 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@263) $generated@@68)) (= ($generated@@141 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@167) ($generated@@0 ($generated@@85 $generated@@262 $generated@@264))) ($generated@@240 $generated@@264 $generated@@263))
 :pattern ( ($generated@@85 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@141 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@268) $generated@@68)) (= ($generated@@141 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@167) ($generated@@0 ($generated@@85 $generated@@267 $generated@@269))) ($generated@@240 $generated@@269 $generated@@268))
 :pattern ( ($generated@@85 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@141 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@270 $generated@@271) $generated@@271)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@139) (= (type $generated@@278) $generated@@139)) (and ($generated@@276 $generated@@277) ($generated@@276 $generated@@278))) (= ($generated@@250 $generated@@277 $generated@@278) true))
 :pattern ( ($generated@@250 $generated@@277 $generated@@278) ($generated@@276 $generated@@277))
 :pattern ( ($generated@@250 $generated@@277 $generated@@278) ($generated@@276 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (= (type ($generated@@279 $generated@@280 $generated@@281)) $generated@@139)
 :pattern ( ($generated@@279 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@68) (= (type $generated@@283) $generated@@167)) (= (type $generated@@284) $generated@@139)) (= ($generated@@141 ($generated@@279 $generated@@283 $generated@@284) ($generated@@142 $generated@@282))  (and ($generated@@240 $generated@@283 $generated@@282) ($generated@@141 $generated@@284 ($generated@@142 $generated@@282)))))
 :pattern ( ($generated@@141 ($generated@@279 $generated@@283 $generated@@284) ($generated@@142 $generated@@282)))
)))
(assert  (and (and (forall (($generated@@288 T@U) ) (! (= (type ($generated@@285 $generated@@288)) $generated@@138)
 :pattern ( ($generated@@285 $generated@@288))
)) (forall (($generated@@289 T@T) ($generated@@290 T@U) ) (! (= (type ($generated@@286 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (= (type ($generated@@287 $generated@@291)) $generated@@167)
 :pattern ( ($generated@@287 $generated@@291))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@292 T@U) ($generated@@293 Int) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@292) $generated@@138) (= (type $generated@@294) $generated@@139)) (or ($generated@@140 $generated@@293 $generated@@294) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@294 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@276 $generated@@294)) (let (($generated@@295 ($generated@@255 $generated@@294)))
(let (($generated@@296 ($generated ($generated@@286 $generated@@2 ($generated@@254 $generated@@294)))))
 (=> (< $generated@@296 $generated@@293) ($generated@@140 $generated@@293 $generated@@295))))) (= ($generated@@137 ($generated@@285 $generated@@292) $generated@@293 $generated@@294) (ite ($generated@@276 $generated@@294) ($generated@@279 ($generated@@287 ($generated@@8 $generated@@293)) ($generated@@272 $generated@@173)) (let (($generated@@297 ($generated@@255 $generated@@294)))
(let (($generated@@298 ($generated ($generated@@286 $generated@@2 ($generated@@254 $generated@@294)))))
(ite (<= $generated@@293 $generated@@298) ($generated@@279 ($generated@@287 ($generated@@8 $generated@@293)) $generated@@294) ($generated@@279 ($generated@@287 ($generated@@8 $generated@@298)) ($generated@@137 $generated@@292 $generated@@293 $generated@@297)))))))))
 :pattern ( ($generated@@137 ($generated@@285 $generated@@292) $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) $generated@@68) (= (type $generated@@301) $generated@@68)) (= (type $generated@@302) $generated@@167)) (= (type $generated@@303) $generated@@167)) (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@236 $generated@@304)) (= ($generated@@78 ($generated@@239 $generated@@302 $generated@@303) ($generated@@158 $generated@@300 $generated@@301) $generated@@304)  (and ($generated@@299 $generated@@302 $generated@@300 $generated@@304) ($generated@@299 $generated@@303 $generated@@301 $generated@@304))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@302 $generated@@303) ($generated@@158 $generated@@300 $generated@@301) $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@139) (= ($generated@@157 $generated@@305) (= ($generated@@172 $generated@@305) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@139) (= ($generated@@276 $generated@@306) (= ($generated@@172 $generated@@306) $generated@@63)))
 :pattern ( ($generated@@276 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@139) (= ($generated@@253 $generated@@307) (= ($generated@@172 $generated@@307) $generated@@65)))
 :pattern ( ($generated@@253 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@139) ($generated@@157 $generated@@308)) (exists (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (and (and (= (type $generated@@309) $generated@@167) (= (type $generated@@310) $generated@@167)) (= $generated@@308 ($generated@@239 $generated@@309 $generated@@310)))
 :no-pattern (type $generated@@309)
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
)))
 :pattern ( ($generated@@157 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@139) ($generated@@253 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@167) (= (type $generated@@313) $generated@@139)) (= $generated@@311 ($generated@@279 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@253 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 18)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@139) ($generated@@276 $generated@@322)) (= $generated@@322 $generated@@173))
 :pattern ( ($generated@@276 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@68) (= (type $generated@@325) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@299 ($generated@@287 $generated@@323) $generated@@324 $generated@@325) ($generated@@78 $generated@@323 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@299 ($generated@@287 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@328 T@T) ) (! (= (type ($generated@@327 $generated@@328)) ($generated@@80 $generated@@328 $generated@@2))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@83 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@80 $generated@@330 $generated@@2)) (and (= (= ($generated@@326 $generated@@329) 0) (= $generated@@329 ($generated@@327 $generated@@330))) (=> (not (= ($generated@@326 $generated@@329) 0)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) (< 0 ($generated ($generated@@85 $generated@@329 $generated@@331))))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@73)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@68) (and (= ($generated@@76 ($generated@@142 $generated@@334)) $generated@@64) (= ($generated@@332 ($generated@@142 $generated@@334)) $generated@@67)))
 :pattern ( ($generated@@142 $generated@@334))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@80 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert  (and (and (and (and (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@358 $generated@@359)) 20)) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@355 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@355 $generated@@362 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@355 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@356 (type $generated@@364))))
(= (type ($generated@@353 $generated@@364)) ($generated@@80 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@364))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= (type ($generated@@354 $generated@@366 $generated@@367)) ($generated@@355 $generated@@366 $generated@@367))
 :pattern ( ($generated@@354 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (let (($generated@@370 (type $generated@@368)))
 (not ($generated@@0 ($generated@@85 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368))))
 :pattern ( (let (($generated@@370 (type $generated@@368)))
($generated@@85 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368)))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@83 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@80 $generated@@372 $generated@@2)) (= ($generated@@176 $generated@@371) (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@372) (and (<= 0 ($generated ($generated@@85 $generated@@371 $generated@@373))) (<= ($generated ($generated@@85 $generated@@371 $generated@@373)) ($generated@@326 $generated@@371))))
 :pattern ( ($generated@@85 $generated@@371 $generated@@373))
)))))
 :pattern ( ($generated@@176 $generated@@371))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@339 (type $generated@@374))))
(let (($generated@@376 ($generated@@338 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@337 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@336 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@335 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@339 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@80 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@339 (type $generated@@381))))
(let (($generated@@383 ($generated@@338 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@337 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@336 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@85 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@357 (type $generated@@385))))
(let (($generated@@387 ($generated@@356 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@355 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@354 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@353 $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@357 (type $generated@@390))))
(= (type ($generated@@389 $generated@@390)) ($generated@@80 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@357 (type $generated@@392))))
(let (($generated@@394 ($generated@@356 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@355 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@354 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@393) ($generated@@0 ($generated@@85 ($generated@@389 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@389 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 Int) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@138) (= (type $generated@@398) $generated@@139)) (= ($generated@@137 ($generated@@285 $generated@@396) $generated@@397 $generated@@398) ($generated@@137 $generated@@396 $generated@@397 $generated@@398)))
 :pattern ( ($generated@@137 ($generated@@285 $generated@@396) $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@80 $generated@@167 $generated@@2)) (= (type $generated@@400) $generated@@68)) (= ($generated@@141 $generated@@399 ($generated@@175 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@167) (< 0 ($generated ($generated@@85 $generated@@399 $generated@@401)))) ($generated@@240 $generated@@401 $generated@@400))
 :pattern ( ($generated@@85 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@141 $generated@@399 ($generated@@175 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@403) $generated@@68)) (= (type $generated@@404) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@402 ($generated@@260 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@167) ($generated@@0 ($generated@@85 $generated@@402 $generated@@405))) ($generated@@299 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@85 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@78 $generated@@402 ($generated@@260 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@407) $generated@@68)) (= (type $generated@@408) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@406 ($generated@@265 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@167) ($generated@@0 ($generated@@85 $generated@@406 $generated@@409))) ($generated@@299 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@85 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@78 $generated@@406 ($generated@@265 $generated@@407) $generated@@408))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@410 T@U) ($generated@@411 Int) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) $generated@@138) (= (type $generated@@412) $generated@@139)) (or ($generated@@140 ($generated@@270 $generated@@411) ($generated@@272 $generated@@412)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@412 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@272 ($generated@@11 ($generated@@276 ($generated@@272 $generated@@412)))))) (let (($generated@@413 ($generated@@272 ($generated@@255 ($generated@@272 $generated@@412)))))
(let (($generated@@414 ($generated@@270 ($generated ($generated@@286 $generated@@2 ($generated@@254 ($generated@@272 $generated@@412)))))))
 (=> (< $generated@@414 ($generated@@270 $generated@@411)) ($generated@@140 ($generated@@270 $generated@@411) $generated@@413))))) (= ($generated@@137 ($generated@@285 $generated@@410) ($generated@@270 $generated@@411) ($generated@@272 $generated@@412)) (ite ($generated@@276 ($generated@@272 $generated@@412)) ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 $generated@@411))) ($generated@@272 $generated@@173)) (let (($generated@@415 ($generated@@272 ($generated@@255 ($generated@@272 $generated@@412)))))
(let (($generated@@416 ($generated@@270 ($generated ($generated@@286 $generated@@2 ($generated@@254 ($generated@@272 $generated@@412)))))))
(ite (<= ($generated@@270 $generated@@411) $generated@@416) ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 $generated@@411))) ($generated@@272 $generated@@412)) ($generated@@279 ($generated@@287 ($generated@@8 $generated@@416)) ($generated@@272 ($generated@@137 ($generated@@285 $generated@@410) ($generated@@270 $generated@@411) $generated@@415))))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@285 $generated@@410) ($generated@@270 $generated@@411) ($generated@@272 $generated@@412)))
))))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(= ($generated ($generated@@85 ($generated@@327 $generated@@418) $generated@@417)) 0))
 :pattern ( (let (($generated@@418 (type $generated@@417)))
($generated@@85 ($generated@@327 $generated@@418) $generated@@417)))
)))
(assert  (and (forall (($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@421)) ($generated@@80 $generated@@167 $generated@@4))
 :pattern ( ($generated@@419 $generated@@421))
)) (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@339 (type $generated@@422))))
(let (($generated@@424 ($generated@@338 (type $generated@@422))))
(= (type ($generated@@420 $generated@@422)) ($generated@@80 $generated@@424 $generated@@423))))
 :pattern ( ($generated@@420 $generated@@422))
))))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@337 $generated@@167 $generated@@167)) (= (type $generated@@426) $generated@@167)) (= ($generated@@0 ($generated@@85 ($generated@@419 $generated@@425) $generated@@426))  (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@425) ($generated@@165 ($generated@@286 $generated@@139 $generated@@426)))) (= ($generated@@85 ($generated@@420 $generated@@425) ($generated@@165 ($generated@@286 $generated@@139 $generated@@426))) ($generated@@166 ($generated@@286 $generated@@139 $generated@@426))))))
 :pattern ( ($generated@@85 ($generated@@419 $generated@@425) $generated@@426))
)))
(assert  (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@429)) ($generated@@80 $generated@@167 $generated@@4))
 :pattern ( ($generated@@427 $generated@@429))
)) (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@357 (type $generated@@430))))
(let (($generated@@432 ($generated@@356 (type $generated@@430))))
(= (type ($generated@@428 $generated@@430)) ($generated@@80 $generated@@432 $generated@@431))))
 :pattern ( ($generated@@428 $generated@@430))
))))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@355 $generated@@167 $generated@@167)) (= (type $generated@@434) $generated@@167)) (= ($generated@@0 ($generated@@85 ($generated@@427 $generated@@433) $generated@@434))  (and ($generated@@0 ($generated@@85 ($generated@@353 $generated@@433) ($generated@@165 ($generated@@286 $generated@@139 $generated@@434)))) (= ($generated@@85 ($generated@@428 $generated@@433) ($generated@@165 ($generated@@286 $generated@@139 $generated@@434))) ($generated@@166 ($generated@@286 $generated@@139 $generated@@434))))))
 :pattern ( ($generated@@85 ($generated@@427 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@338 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@337 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@85 ($generated@@378 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@85 ($generated@@420 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@435) $generated@@439))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@85 ($generated@@378 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@356 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@355 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@85 ($generated@@389 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@85 ($generated@@353 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@85 ($generated@@428 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@440) $generated@@444))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@446 $generated@@447)) $generated@@68)
 :pattern ( ($generated@@445 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@448) ($generated@@337 $generated@@167 $generated@@167)) (= (type $generated@@449) $generated@@68)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@448) $generated@@452))) (and ($generated@@299 ($generated@@85 ($generated@@420 $generated@@448) $generated@@452) $generated@@450 $generated@@451) ($generated@@299 $generated@@452 $generated@@449 $generated@@451)))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@448) $generated@@452))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@448) $generated@@452))
))))
 :pattern ( ($generated@@78 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@68)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@355 $generated@@167 $generated@@167)) (= (type $generated@@457) $generated@@68)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@456) $generated@@460))) (and ($generated@@299 ($generated@@85 ($generated@@428 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@299 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@456) $generated@@460))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@461) $generated@@68) (= (type $generated@@462) $generated@@139)) ($generated@@141 $generated@@462 ($generated@@142 $generated@@461))) (or ($generated@@276 $generated@@462) ($generated@@253 $generated@@462)))
 :pattern ( ($generated@@253 $generated@@462) ($generated@@141 $generated@@462 ($generated@@142 $generated@@461)))
 :pattern ( ($generated@@276 $generated@@462) ($generated@@141 $generated@@462 ($generated@@142 $generated@@461)))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@80 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@357 (type $generated@@465))))
(let (($generated@@467 ($generated@@356 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@355 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@354 $generated@@467 $generated@@466)) (= ($generated@@353 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@353 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@357 (type $generated@@468))))
(let (($generated@@470 ($generated@@356 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@355 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@354 $generated@@470 $generated@@469)) (= ($generated@@389 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@389 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@357 (type $generated@@471))))
(let (($generated@@473 ($generated@@356 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@355 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@354 $generated@@473 $generated@@472)) (= ($generated@@427 $generated@@471) ($generated@@463 $generated@@167))))))
 :pattern ( ($generated@@427 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@339 (type $generated@@474))))
(let (($generated@@476 ($generated@@338 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@337 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@336 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@167) (= (type $generated@@478) $generated@@167)) ($generated@@0 ($generated@@85 ($generated@@419 $generated@@474) ($generated@@287 ($generated@@239 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@419 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@357 (type $generated@@479))))
(let (($generated@@481 ($generated@@356 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@355 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@354 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@167) (= (type $generated@@483) $generated@@167)) ($generated@@0 ($generated@@85 ($generated@@427 $generated@@479) ($generated@@287 ($generated@@239 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@427 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@167) ($generated@@240 $generated@@484 $generated@@46)) (and (= ($generated@@287 ($generated@@286 $generated@@2 $generated@@484)) $generated@@484) ($generated@@141 ($generated@@286 $generated@@2 $generated@@484) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@484 $generated@@46))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@167) ($generated@@240 $generated@@485 $generated@@47)) (and (= ($generated@@287 ($generated@@286 $generated@@3 $generated@@485)) $generated@@485) ($generated@@141 ($generated@@286 $generated@@3 $generated@@485) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@485 $generated@@47))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@167) ($generated@@240 $generated@@486 $generated@@44)) (and (= ($generated@@287 ($generated@@286 $generated@@4 $generated@@486)) $generated@@486) ($generated@@141 ($generated@@286 $generated@@4 $generated@@486) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@486 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@487) 21))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@167) ($generated@@240 $generated@@488 $generated@@45)) (and (= ($generated@@287 ($generated@@286 $generated@@487 $generated@@488)) $generated@@488) ($generated@@141 ($generated@@286 $generated@@487 $generated@@488) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@488 $generated@@45))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@68) (= ($generated@@240 ($generated@@287 $generated@@489) $generated@@490) ($generated@@141 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@240 ($generated@@287 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@83 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@80 $generated@@492 $generated@@2)) (<= 0 ($generated@@326 $generated@@491))))
 :pattern ( ($generated@@326 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@317 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@316 $generated@@494)) (<= 0 ($generated@@315 $generated@@493))))
 :pattern ( ($generated@@315 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@445 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@445 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@445 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@445 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@445 $generated@@503 $generated@@504)) $generated@@58))
 :pattern ( ($generated@@445 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@453 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@453 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@453 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@453 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@76 ($generated@@453 $generated@@513 $generated@@514)) $generated@@59))
 :pattern ( ($generated@@453 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@167) (= (type $generated@@516) $generated@@167)) (= ($generated@@172 ($generated@@239 $generated@@515 $generated@@516)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@158 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@158 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@158 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@158 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@167) (= (type $generated@@526) $generated@@167)) (= ($generated@@165 ($generated@@239 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@239 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@167) (= (type $generated@@528) $generated@@167)) (= ($generated@@166 ($generated@@239 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@239 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@167) (= (type $generated@@530) $generated@@139)) (= ($generated@@172 ($generated@@279 $generated@@529 $generated@@530)) $generated@@65))
 :pattern ( ($generated@@279 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@167) (= (type $generated@@532) $generated@@139)) (= ($generated@@254 ($generated@@279 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@279 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@167) (= (type $generated@@534) $generated@@139)) (= ($generated@@255 ($generated@@279 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@279 $generated@@533 $generated@@534))
)))
(assert  (and (forall (($generated@@537 T@U) ) (! (= (type ($generated@@535 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@537))
)) (forall (($generated@@538 T@U) ($generated@@539 Int) ) (! (let (($generated@@540 ($generated@@317 (type $generated@@538))))
(= (type ($generated@@536 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@536 $generated@@538 $generated@@539))
))))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@316 $generated@@167)) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@541 ($generated@@535 $generated@@542) $generated@@543) (forall (($generated@@544 Int) ) (!  (=> (and (<= 0 $generated@@544) (< $generated@@544 ($generated@@315 $generated@@541))) ($generated@@299 ($generated@@536 $generated@@541 $generated@@544) $generated@@542 $generated@@543))
 :pattern ( ($generated@@536 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@78 $generated@@541 ($generated@@535 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@545 ($generated@@79 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@79 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@260 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@260 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@260 $generated@@550)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@265 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@265 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@76 ($generated@@265 $generated@@554)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@175 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@175 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@76 ($generated@@175 $generated@@558)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@535 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@535 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@76 ($generated@@535 $generated@@562)) $generated@@57))
 :pattern ( ($generated@@535 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@142 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@142 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
(= ($generated@@286 $generated@@567 ($generated@@287 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@287 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@337 $generated@@167 $generated@@167)) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) $generated@@68)) (= ($generated@@141 $generated@@568 ($generated@@445 $generated@@569 $generated@@570)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@568) $generated@@571))) (and ($generated@@240 ($generated@@85 ($generated@@420 $generated@@568) $generated@@571) $generated@@570) ($generated@@240 $generated@@571 $generated@@569)))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@568) $generated@@571))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@568) $generated@@571))
))))
 :pattern ( ($generated@@141 $generated@@568 ($generated@@445 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@355 $generated@@167 $generated@@167)) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@68)) (= ($generated@@141 $generated@@572 ($generated@@453 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@572) $generated@@575))) (and ($generated@@240 ($generated@@85 ($generated@@428 $generated@@572) $generated@@575) $generated@@574) ($generated@@240 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@572) $generated@@575))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@141 $generated@@572 ($generated@@453 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@167) (= (type $generated@@579) $generated@@167)) (< ($generated@@576 $generated@@578) ($generated@@577 ($generated@@239 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@239 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@167) (= (type $generated@@581) $generated@@167)) (< ($generated@@576 $generated@@581) ($generated@@577 ($generated@@239 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@239 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@167) (= (type $generated@@583) $generated@@139)) (< ($generated@@576 $generated@@582) ($generated@@577 ($generated@@279 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@279 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@167) (= (type $generated@@585) $generated@@139)) (< ($generated@@577 $generated@@585) ($generated@@577 ($generated@@279 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@279 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@167) (= (type $generated@@587) $generated@@68)) (= (type $generated@@588) $generated@@68)) ($generated@@240 $generated@@586 ($generated@@445 $generated@@587 $generated@@588))) (and (= ($generated@@287 ($generated@@286 ($generated@@337 $generated@@167 $generated@@167) $generated@@586)) $generated@@586) ($generated@@141 ($generated@@286 ($generated@@337 $generated@@167 $generated@@167) $generated@@586) ($generated@@445 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@240 $generated@@586 ($generated@@445 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@167) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) $generated@@68)) ($generated@@240 $generated@@589 ($generated@@453 $generated@@590 $generated@@591))) (and (= ($generated@@287 ($generated@@286 ($generated@@355 $generated@@167 $generated@@167) $generated@@589)) $generated@@589) ($generated@@141 ($generated@@286 ($generated@@355 $generated@@167 $generated@@167) $generated@@589) ($generated@@453 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@240 $generated@@589 ($generated@@453 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) $generated@@167)) ($generated@@240 $generated@@594 ($generated@@158 $generated@@592 $generated@@593))) (and (= ($generated@@287 ($generated@@286 $generated@@139 $generated@@594)) $generated@@594) ($generated@@141 ($generated@@286 $generated@@139 $generated@@594) ($generated@@158 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@240 $generated@@594 ($generated@@158 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@139) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@236 $generated@@597) (and ($generated@@253 $generated@@595) ($generated@@78 $generated@@595 ($generated@@142 $generated@@596) $generated@@597)))) ($generated@@299 ($generated@@254 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@299 ($generated@@254 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
 (not ($generated@@0 ($generated@@85 ($generated@@463 $generated@@599) $generated@@598))))
 :pattern ( (let (($generated@@599 (type $generated@@598)))
($generated@@85 ($generated@@463 $generated@@599) $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@68) (= (type $generated@@601) $generated@@68)) (and (= ($generated@@76 ($generated@@158 $generated@@600 $generated@@601)) $generated@@62) (= ($generated@@332 ($generated@@158 $generated@@600 $generated@@601)) $generated@@66)))
 :pattern ( ($generated@@158 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@139) (= ($generated@@576 ($generated@@287 $generated@@602)) ($generated@@577 $generated@@602)))
 :pattern ( ($generated@@576 ($generated@@287 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@167) ($generated@@240 $generated@@603 ($generated@@79 0))) (and (= ($generated@@287 ($generated@@286 $generated@@2 $generated@@603)) $generated@@603) ($generated@@141 ($generated@@286 ($generated@@80 $generated@@167 $generated@@4) $generated@@603) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@603 ($generated@@79 0)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@167) (= (type $generated@@605) $generated@@68)) ($generated@@240 $generated@@604 ($generated@@260 $generated@@605))) (and (= ($generated@@287 ($generated@@286 ($generated@@80 $generated@@167 $generated@@4) $generated@@604)) $generated@@604) ($generated@@141 ($generated@@286 ($generated@@80 $generated@@167 $generated@@4) $generated@@604) ($generated@@260 $generated@@605))))
 :pattern ( ($generated@@240 $generated@@604 ($generated@@260 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@167) (= (type $generated@@607) $generated@@68)) ($generated@@240 $generated@@606 ($generated@@265 $generated@@607))) (and (= ($generated@@287 ($generated@@286 ($generated@@80 $generated@@167 $generated@@4) $generated@@606)) $generated@@606) ($generated@@141 ($generated@@286 ($generated@@80 $generated@@167 $generated@@4) $generated@@606) ($generated@@265 $generated@@607))))
 :pattern ( ($generated@@240 $generated@@606 ($generated@@265 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@167) (= (type $generated@@609) $generated@@68)) ($generated@@240 $generated@@608 ($generated@@175 $generated@@609))) (and (= ($generated@@287 ($generated@@286 ($generated@@80 $generated@@167 $generated@@2) $generated@@608)) $generated@@608) ($generated@@141 ($generated@@286 ($generated@@80 $generated@@167 $generated@@2) $generated@@608) ($generated@@175 $generated@@609))))
 :pattern ( ($generated@@240 $generated@@608 ($generated@@175 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@167) (= (type $generated@@611) $generated@@68)) ($generated@@240 $generated@@610 ($generated@@535 $generated@@611))) (and (= ($generated@@287 ($generated@@286 ($generated@@316 $generated@@167) $generated@@610)) $generated@@610) ($generated@@141 ($generated@@286 ($generated@@316 $generated@@167) $generated@@610) ($generated@@535 $generated@@611))))
 :pattern ( ($generated@@240 $generated@@610 ($generated@@535 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@68) (= (type $generated@@613) $generated@@167)) ($generated@@240 $generated@@613 ($generated@@142 $generated@@612))) (and (= ($generated@@287 ($generated@@286 $generated@@139 $generated@@613)) $generated@@613) ($generated@@141 ($generated@@286 $generated@@139 $generated@@613) ($generated@@142 $generated@@612))))
 :pattern ( ($generated@@240 $generated@@613 ($generated@@142 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@139) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@236 $generated@@616) (and ($generated@@253 $generated@@614) ($generated@@78 $generated@@614 ($generated@@142 $generated@@615) $generated@@616)))) ($generated@@78 ($generated@@255 $generated@@614) ($generated@@142 $generated@@615) $generated@@616))
 :pattern ( ($generated@@78 ($generated@@255 $generated@@614) ($generated@@142 $generated@@615) $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@80 $generated@@167 $generated@@2)) (= (type $generated@@618) $generated@@68)) (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@617 ($generated@@175 $generated@@618) $generated@@619) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@167) (< 0 ($generated ($generated@@85 $generated@@617 $generated@@620)))) ($generated@@299 $generated@@620 $generated@@618 $generated@@619))
 :pattern ( ($generated@@85 $generated@@617 $generated@@620))
))))
 :pattern ( ($generated@@78 $generated@@617 ($generated@@175 $generated@@618) $generated@@619))
)))
(assert (= $generated@@173 ($generated@@272 $generated@@173)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@139) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@236 $generated@@623) (and ($generated@@157 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@68) ($generated@@78 $generated@@621 ($generated@@158 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@158 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@299 ($generated@@165 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@299 ($generated@@165 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@139) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@236 $generated@@627) (and ($generated@@157 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@68) ($generated@@78 $generated@@625 ($generated@@158 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@78 $generated@@625 ($generated@@158 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@299 ($generated@@166 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@299 ($generated@@166 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@167) (= (type $generated@@630) $generated@@167)) (= ($generated@@239 ($generated@@272 $generated@@629) ($generated@@272 $generated@@630)) ($generated@@272 ($generated@@239 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@239 ($generated@@272 $generated@@629) ($generated@@272 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@167) (= (type $generated@@632) $generated@@139)) (= ($generated@@279 ($generated@@272 $generated@@631) ($generated@@272 $generated@@632)) ($generated@@272 ($generated@@279 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@279 ($generated@@272 $generated@@631) ($generated@@272 $generated@@632)))
)))
(assert (forall (($generated@@633 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@270 $generated@@633))) ($generated@@272 ($generated@@287 ($generated@@8 $generated@@633))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@270 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ) (! (= ($generated@@287 ($generated@@272 $generated@@634)) ($generated@@272 ($generated@@287 $generated@@634)))
 :pattern ( ($generated@@287 ($generated@@272 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 ($generated@@317 (type $generated@@635))))
 (=> (and (= (type $generated@@635) ($generated@@316 $generated@@636)) (= ($generated@@315 $generated@@635) 0)) (= $generated@@635 ($generated@@314 $generated@@636))))
 :pattern ( ($generated@@315 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@638)))
 (=> (and (and (= (type $generated@@637) ($generated@@80 $generated@@640 $generated@@2)) (= (type $generated@@639) $generated@@2)) (<= 0 ($generated $generated@@639))) (= ($generated@@326 ($generated@@86 $generated@@637 $generated@@638 $generated@@639)) (+ (- ($generated@@326 $generated@@637) ($generated ($generated@@85 $generated@@637 $generated@@638))) ($generated $generated@@639)))))
 :pattern ( ($generated@@326 ($generated@@86 $generated@@637 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@642) $generated@@2)) ($generated@@78 $generated@@642 $generated@@46 $generated@@641))
 :pattern ( ($generated@@78 $generated@@642 $generated@@46 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@644) $generated@@3)) ($generated@@78 $generated@@644 $generated@@47 $generated@@643))
 :pattern ( ($generated@@78 $generated@@644 $generated@@47 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@646) $generated@@4)) ($generated@@78 $generated@@646 $generated@@44 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@44 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@648) $generated@@487)) ($generated@@78 $generated@@648 $generated@@45 $generated@@647))
 :pattern ( ($generated@@78 $generated@@648 $generated@@45 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@650) $generated@@167)) ($generated@@78 $generated@@650 $generated@@48 $generated@@649))
 :pattern ( ($generated@@78 $generated@@650 $generated@@48 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@651) $generated@@68) (= (type $generated@@652) $generated@@167)) (= (type $generated@@653) $generated@@139)) (= (type $generated@@654) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@236 $generated@@654)) (= ($generated@@78 ($generated@@279 $generated@@652 $generated@@653) ($generated@@142 $generated@@651) $generated@@654)  (and ($generated@@299 $generated@@652 $generated@@651 $generated@@654) ($generated@@78 $generated@@653 ($generated@@142 $generated@@651) $generated@@654))))
 :pattern ( ($generated@@78 ($generated@@279 $generated@@652 $generated@@653) ($generated@@142 $generated@@651) $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@316 $generated@@167)) (= (type $generated@@656) $generated@@68)) (= ($generated@@141 $generated@@655 ($generated@@535 $generated@@656)) (forall (($generated@@657 Int) ) (!  (=> (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@315 $generated@@655))) ($generated@@240 ($generated@@536 $generated@@655 $generated@@657) $generated@@656))
 :pattern ( ($generated@@536 $generated@@655 $generated@@657))
))))
 :pattern ( ($generated@@141 $generated@@655 ($generated@@535 $generated@@656)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 Int) ) (!  (=> (= (type $generated@@659) ($generated@@316 $generated@@167)) (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@315 $generated@@659))) (< ($generated@@577 ($generated@@286 $generated@@139 ($generated@@536 $generated@@659 $generated@@660))) ($generated@@658 $generated@@659))))
 :pattern ( ($generated@@577 ($generated@@286 $generated@@139 ($generated@@536 $generated@@659 $generated@@660))))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) ($generated@@337 $generated@@167 $generated@@167)) (= (type $generated@@662) $generated@@68)) (= (type $generated@@663) $generated@@68)) ($generated@@141 $generated@@661 ($generated@@445 $generated@@662 $generated@@663))) (and (and ($generated@@141 ($generated@@335 $generated@@661) ($generated@@260 $generated@@662)) ($generated@@141 ($generated@@378 $generated@@661) ($generated@@260 $generated@@663))) ($generated@@141 ($generated@@419 $generated@@661) ($generated@@260 ($generated@@158 $generated@@662 $generated@@663)))))
 :pattern ( ($generated@@141 $generated@@661 ($generated@@445 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@355 $generated@@167 $generated@@167)) (= (type $generated@@665) $generated@@68)) (= (type $generated@@666) $generated@@68)) ($generated@@141 $generated@@664 ($generated@@453 $generated@@665 $generated@@666))) (and (and ($generated@@141 ($generated@@353 $generated@@664) ($generated@@265 $generated@@665)) ($generated@@141 ($generated@@389 $generated@@664) ($generated@@265 $generated@@666))) ($generated@@141 ($generated@@427 $generated@@664) ($generated@@265 ($generated@@158 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@141 $generated@@664 ($generated@@453 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@2) ($generated@@141 $generated@@667 $generated@@46))
 :pattern ( ($generated@@141 $generated@@667 $generated@@46))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@3) ($generated@@141 $generated@@668 $generated@@47))
 :pattern ( ($generated@@141 $generated@@668 $generated@@47))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@4) ($generated@@141 $generated@@669 $generated@@44))
 :pattern ( ($generated@@141 $generated@@669 $generated@@44))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@487) ($generated@@141 $generated@@670 $generated@@45))
 :pattern ( ($generated@@141 $generated@@670 $generated@@45))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@167) ($generated@@141 $generated@@671 $generated@@48))
 :pattern ( ($generated@@141 $generated@@671 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 (T@U) Bool)
(assert  (and (and (= (type $generated@@672) ($generated@@182 $generated@@81 $generated@@4)) (= (type $generated@@673) $generated@@81)) (= (type $generated@@674) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@676  (=> (and (= $generated@@672 ($generated@@181 $generated@@673 $generated@@674 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@250 ($generated@@137 ($generated@@285 ($generated@@285 $generated@@151)) ($generated@@270 4) ($generated@@272 ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 2))) ($generated@@272 ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 5))) ($generated@@272 $generated@@173)))))) ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 2))) ($generated@@272 ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 4))) ($generated@@272 ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 5))) ($generated@@272 $generated@@173))))))))))
(let (($generated@@677  (=> (and (and ($generated@@236 $generated@@674) ($generated@@675 $generated@@674)) (and (= 2 $generated@@136) (= (ControlFlow 0 3) 2))) $generated@@676)))
$generated@@677)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U Int T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (Int T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (Int) Int)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@279 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@T) T@U)
(declare-fun $generated@@355 (T@T T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@487 () T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@536 (T@U Int) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@658 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 T@U) ) (! (= (type ($generated@@137 $generated@@143 $generated@@144 $generated@@145)) $generated@@139)
 :pattern ( ($generated@@137 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@142 $generated@@146))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@147) $generated@@138) (= (type $generated@@149) $generated@@139)) (or ($generated@@140 $generated@@148 $generated@@149) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@149 ($generated@@142 $generated@@46))))) ($generated@@141 ($generated@@137 $generated@@147 $generated@@148 $generated@@149) ($generated@@142 $generated@@46)))
 :pattern ( ($generated@@137 $generated@@147 $generated@@148 $generated@@149))
))))
(assert  (and (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@138)
 :pattern ( ($generated@@150 $generated@@152))
)) (= (type $generated@@151) $generated@@138)))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@138) (= (type $generated@@155) $generated@@139)) (= ($generated@@137 $generated@@153 $generated@@154 $generated@@155) ($generated@@137 $generated@@151 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@137 ($generated@@150 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@141 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@159 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@68) (= (type $generated@@162) $generated@@68)) (= (type $generated@@163) $generated@@139)) ($generated@@141 $generated@@163 ($generated@@158 $generated@@161 $generated@@162))) ($generated@@157 $generated@@163))
 :pattern ( ($generated@@157 $generated@@163) ($generated@@141 $generated@@163 ($generated@@158 $generated@@161 $generated@@162)))
)))
(assert  (and (and (= ($generated@@1 $generated@@167) 16) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@168))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@167)
 :pattern ( ($generated@@166 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@139) (= (type $generated@@171) $generated@@139)) true) (= ($generated@@164 $generated@@170 $generated@@171)  (and (= ($generated@@165 $generated@@170) ($generated@@165 $generated@@171)) (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)))))
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@72)
 :pattern ( ($generated@@172 $generated@@174))
)) (= (type $generated@@173) $generated@@139)))
(assert (= ($generated@@172 $generated@@173) $generated@@63))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@68)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@80 $generated@@167 $generated@@2)) (= (type $generated@@179) $generated@@68)) ($generated@@141 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@141 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 17)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@81 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@71 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@81) (= (type $generated@@230) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@231) ($generated@@70 $generated@@4))) (= (type $generated@@233) $generated@@81)) (= (type $generated@@234) ($generated@@70 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (= (type $generated@@237) $generated@@68) (= (type $generated@@238) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@236 $generated@@238)) ($generated@@78 $generated@@173 ($generated@@142 $generated@@237) $generated@@238))
 :pattern ( ($generated@@78 $generated@@173 ($generated@@142 $generated@@237) $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@139)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@68) (= (type $generated@@244) $generated@@68)) (= (type $generated@@245) $generated@@167)) (= (type $generated@@246) $generated@@167)) (= ($generated@@141 ($generated@@239 $generated@@245 $generated@@246) ($generated@@158 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@141 ($generated@@239 $generated@@245 $generated@@246) ($generated@@158 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (= (type $generated@@247) $generated@@68) ($generated@@141 $generated@@173 ($generated@@142 $generated@@247)))
 :pattern ( ($generated@@141 $generated@@173 ($generated@@142 $generated@@247)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@139) (= (type $generated@@249) $generated@@139)) (= ($generated@@164 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@164 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@139) (= (type $generated@@252) $generated@@139)) (= ($generated@@250 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252))
)))
(assert  (and (forall (($generated@@256 T@U) ) (! (= (type ($generated@@254 $generated@@256)) $generated@@167)
 :pattern ( ($generated@@254 $generated@@256))
)) (forall (($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@257)) $generated@@139)
 :pattern ( ($generated@@255 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) $generated@@139) (= (type $generated@@259) $generated@@139)) (and ($generated@@253 $generated@@258) ($generated@@253 $generated@@259))) (= ($generated@@250 $generated@@258 $generated@@259)  (and (= ($generated@@254 $generated@@258) ($generated@@254 $generated@@259)) ($generated@@250 ($generated@@255 $generated@@258) ($generated@@255 $generated@@259)))))
 :pattern ( ($generated@@250 $generated@@258 $generated@@259) ($generated@@253 $generated@@258))
 :pattern ( ($generated@@250 $generated@@258 $generated@@259) ($generated@@253 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@263) $generated@@68)) (= ($generated@@141 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@167) ($generated@@0 ($generated@@85 $generated@@262 $generated@@264))) ($generated@@240 $generated@@264 $generated@@263))
 :pattern ( ($generated@@85 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@141 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@268) $generated@@68)) (= ($generated@@141 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@167) ($generated@@0 ($generated@@85 $generated@@267 $generated@@269))) ($generated@@240 $generated@@269 $generated@@268))
 :pattern ( ($generated@@85 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@141 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@270 $generated@@271) $generated@@271)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@139) (= (type $generated@@278) $generated@@139)) (and ($generated@@276 $generated@@277) ($generated@@276 $generated@@278))) (= ($generated@@250 $generated@@277 $generated@@278) true))
 :pattern ( ($generated@@250 $generated@@277 $generated@@278) ($generated@@276 $generated@@277))
 :pattern ( ($generated@@250 $generated@@277 $generated@@278) ($generated@@276 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (= (type ($generated@@279 $generated@@280 $generated@@281)) $generated@@139)
 :pattern ( ($generated@@279 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@68) (= (type $generated@@283) $generated@@167)) (= (type $generated@@284) $generated@@139)) (= ($generated@@141 ($generated@@279 $generated@@283 $generated@@284) ($generated@@142 $generated@@282))  (and ($generated@@240 $generated@@283 $generated@@282) ($generated@@141 $generated@@284 ($generated@@142 $generated@@282)))))
 :pattern ( ($generated@@141 ($generated@@279 $generated@@283 $generated@@284) ($generated@@142 $generated@@282)))
)))
(assert  (and (and (forall (($generated@@288 T@U) ) (! (= (type ($generated@@285 $generated@@288)) $generated@@138)
 :pattern ( ($generated@@285 $generated@@288))
)) (forall (($generated@@289 T@T) ($generated@@290 T@U) ) (! (= (type ($generated@@286 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (= (type ($generated@@287 $generated@@291)) $generated@@167)
 :pattern ( ($generated@@287 $generated@@291))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@292 T@U) ($generated@@293 Int) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@292) $generated@@138) (= (type $generated@@294) $generated@@139)) (or ($generated@@140 $generated@@293 $generated@@294) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@294 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@276 $generated@@294)) (let (($generated@@295 ($generated@@255 $generated@@294)))
(let (($generated@@296 ($generated ($generated@@286 $generated@@2 ($generated@@254 $generated@@294)))))
 (=> (< $generated@@296 $generated@@293) ($generated@@140 $generated@@293 $generated@@295))))) (= ($generated@@137 ($generated@@285 $generated@@292) $generated@@293 $generated@@294) (ite ($generated@@276 $generated@@294) ($generated@@279 ($generated@@287 ($generated@@8 $generated@@293)) ($generated@@272 $generated@@173)) (let (($generated@@297 ($generated@@255 $generated@@294)))
(let (($generated@@298 ($generated ($generated@@286 $generated@@2 ($generated@@254 $generated@@294)))))
(ite (<= $generated@@293 $generated@@298) ($generated@@279 ($generated@@287 ($generated@@8 $generated@@293)) $generated@@294) ($generated@@279 ($generated@@287 ($generated@@8 $generated@@298)) ($generated@@137 $generated@@292 $generated@@293 $generated@@297)))))))))
 :pattern ( ($generated@@137 ($generated@@285 $generated@@292) $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) $generated@@68) (= (type $generated@@301) $generated@@68)) (= (type $generated@@302) $generated@@167)) (= (type $generated@@303) $generated@@167)) (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@236 $generated@@304)) (= ($generated@@78 ($generated@@239 $generated@@302 $generated@@303) ($generated@@158 $generated@@300 $generated@@301) $generated@@304)  (and ($generated@@299 $generated@@302 $generated@@300 $generated@@304) ($generated@@299 $generated@@303 $generated@@301 $generated@@304))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@302 $generated@@303) ($generated@@158 $generated@@300 $generated@@301) $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@139) (= ($generated@@157 $generated@@305) (= ($generated@@172 $generated@@305) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@139) (= ($generated@@276 $generated@@306) (= ($generated@@172 $generated@@306) $generated@@63)))
 :pattern ( ($generated@@276 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@139) (= ($generated@@253 $generated@@307) (= ($generated@@172 $generated@@307) $generated@@65)))
 :pattern ( ($generated@@253 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@139) ($generated@@157 $generated@@308)) (exists (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (and (and (= (type $generated@@309) $generated@@167) (= (type $generated@@310) $generated@@167)) (= $generated@@308 ($generated@@239 $generated@@309 $generated@@310)))
 :no-pattern (type $generated@@309)
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
)))
 :pattern ( ($generated@@157 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@139) ($generated@@253 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@167) (= (type $generated@@313) $generated@@139)) (= $generated@@311 ($generated@@279 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@253 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 18)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@139) ($generated@@276 $generated@@322)) (= $generated@@322 $generated@@173))
 :pattern ( ($generated@@276 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@68) (= (type $generated@@325) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@299 ($generated@@287 $generated@@323) $generated@@324 $generated@@325) ($generated@@78 $generated@@323 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@299 ($generated@@287 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@328 T@T) ) (! (= (type ($generated@@327 $generated@@328)) ($generated@@80 $generated@@328 $generated@@2))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@83 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@80 $generated@@330 $generated@@2)) (and (= (= ($generated@@326 $generated@@329) 0) (= $generated@@329 ($generated@@327 $generated@@330))) (=> (not (= ($generated@@326 $generated@@329) 0)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) (< 0 ($generated ($generated@@85 $generated@@329 $generated@@331))))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@73)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@68) (and (= ($generated@@76 ($generated@@142 $generated@@334)) $generated@@64) (= ($generated@@332 ($generated@@142 $generated@@334)) $generated@@67)))
 :pattern ( ($generated@@142 $generated@@334))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@80 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert  (and (and (and (and (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@358 $generated@@359)) 20)) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@355 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@355 $generated@@362 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@355 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@356 (type $generated@@364))))
(= (type ($generated@@353 $generated@@364)) ($generated@@80 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@364))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= (type ($generated@@354 $generated@@366 $generated@@367)) ($generated@@355 $generated@@366 $generated@@367))
 :pattern ( ($generated@@354 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (let (($generated@@370 (type $generated@@368)))
 (not ($generated@@0 ($generated@@85 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368))))
 :pattern ( (let (($generated@@370 (type $generated@@368)))
($generated@@85 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368)))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@83 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@80 $generated@@372 $generated@@2)) (= ($generated@@176 $generated@@371) (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@372) (and (<= 0 ($generated ($generated@@85 $generated@@371 $generated@@373))) (<= ($generated ($generated@@85 $generated@@371 $generated@@373)) ($generated@@326 $generated@@371))))
 :pattern ( ($generated@@85 $generated@@371 $generated@@373))
)))))
 :pattern ( ($generated@@176 $generated@@371))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@339 (type $generated@@374))))
(let (($generated@@376 ($generated@@338 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@337 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@336 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@335 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@339 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@80 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@339 (type $generated@@381))))
(let (($generated@@383 ($generated@@338 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@337 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@336 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@85 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@357 (type $generated@@385))))
(let (($generated@@387 ($generated@@356 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@355 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@354 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@353 $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@357 (type $generated@@390))))
(= (type ($generated@@389 $generated@@390)) ($generated@@80 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@357 (type $generated@@392))))
(let (($generated@@394 ($generated@@356 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@355 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@354 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@393) ($generated@@0 ($generated@@85 ($generated@@389 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@389 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 Int) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@138) (= (type $generated@@398) $generated@@139)) (= ($generated@@137 ($generated@@285 $generated@@396) $generated@@397 $generated@@398) ($generated@@137 $generated@@396 $generated@@397 $generated@@398)))
 :pattern ( ($generated@@137 ($generated@@285 $generated@@396) $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@80 $generated@@167 $generated@@2)) (= (type $generated@@400) $generated@@68)) (= ($generated@@141 $generated@@399 ($generated@@175 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@167) (< 0 ($generated ($generated@@85 $generated@@399 $generated@@401)))) ($generated@@240 $generated@@401 $generated@@400))
 :pattern ( ($generated@@85 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@141 $generated@@399 ($generated@@175 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@403) $generated@@68)) (= (type $generated@@404) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@402 ($generated@@260 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@167) ($generated@@0 ($generated@@85 $generated@@402 $generated@@405))) ($generated@@299 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@85 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@78 $generated@@402 ($generated@@260 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@80 $generated@@167 $generated@@4)) (= (type $generated@@407) $generated@@68)) (= (type $generated@@408) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@406 ($generated@@265 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@167) ($generated@@0 ($generated@@85 $generated@@406 $generated@@409))) ($generated@@299 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@85 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@78 $generated@@406 ($generated@@265 $generated@@407) $generated@@408))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@410 T@U) ($generated@@411 Int) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) $generated@@138) (= (type $generated@@412) $generated@@139)) (or ($generated@@140 ($generated@@270 $generated@@411) ($generated@@272 $generated@@412)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@412 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@272 ($generated@@11 ($generated@@276 ($generated@@272 $generated@@412)))))) (let (($generated@@413 ($generated@@272 ($generated@@255 ($generated@@272 $generated@@412)))))
(let (($generated@@414 ($generated@@270 ($generated ($generated@@286 $generated@@2 ($generated@@254 ($generated@@272 $generated@@412)))))))
 (=> (< $generated@@414 ($generated@@270 $generated@@411)) ($generated@@140 ($generated@@270 $generated@@411) $generated@@413))))) (= ($generated@@137 ($generated@@285 $generated@@410) ($generated@@270 $generated@@411) ($generated@@272 $generated@@412)) (ite ($generated@@276 ($generated@@272 $generated@@412)) ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 $generated@@411))) ($generated@@272 $generated@@173)) (let (($generated@@415 ($generated@@272 ($generated@@255 ($generated@@272 $generated@@412)))))
(let (($generated@@416 ($generated@@270 ($generated ($generated@@286 $generated@@2 ($generated@@254 ($generated@@272 $generated@@412)))))))
(ite (<= ($generated@@270 $generated@@411) $generated@@416) ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 $generated@@411))) ($generated@@272 $generated@@412)) ($generated@@279 ($generated@@287 ($generated@@8 $generated@@416)) ($generated@@272 ($generated@@137 ($generated@@285 $generated@@410) ($generated@@270 $generated@@411) $generated@@415))))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@285 $generated@@410) ($generated@@270 $generated@@411) ($generated@@272 $generated@@412)))
))))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(= ($generated ($generated@@85 ($generated@@327 $generated@@418) $generated@@417)) 0))
 :pattern ( (let (($generated@@418 (type $generated@@417)))
($generated@@85 ($generated@@327 $generated@@418) $generated@@417)))
)))
(assert  (and (forall (($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@421)) ($generated@@80 $generated@@167 $generated@@4))
 :pattern ( ($generated@@419 $generated@@421))
)) (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@339 (type $generated@@422))))
(let (($generated@@424 ($generated@@338 (type $generated@@422))))
(= (type ($generated@@420 $generated@@422)) ($generated@@80 $generated@@424 $generated@@423))))
 :pattern ( ($generated@@420 $generated@@422))
))))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@337 $generated@@167 $generated@@167)) (= (type $generated@@426) $generated@@167)) (= ($generated@@0 ($generated@@85 ($generated@@419 $generated@@425) $generated@@426))  (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@425) ($generated@@165 ($generated@@286 $generated@@139 $generated@@426)))) (= ($generated@@85 ($generated@@420 $generated@@425) ($generated@@165 ($generated@@286 $generated@@139 $generated@@426))) ($generated@@166 ($generated@@286 $generated@@139 $generated@@426))))))
 :pattern ( ($generated@@85 ($generated@@419 $generated@@425) $generated@@426))
)))
(assert  (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@429)) ($generated@@80 $generated@@167 $generated@@4))
 :pattern ( ($generated@@427 $generated@@429))
)) (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@357 (type $generated@@430))))
(let (($generated@@432 ($generated@@356 (type $generated@@430))))
(= (type ($generated@@428 $generated@@430)) ($generated@@80 $generated@@432 $generated@@431))))
 :pattern ( ($generated@@428 $generated@@430))
))))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@355 $generated@@167 $generated@@167)) (= (type $generated@@434) $generated@@167)) (= ($generated@@0 ($generated@@85 ($generated@@427 $generated@@433) $generated@@434))  (and ($generated@@0 ($generated@@85 ($generated@@353 $generated@@433) ($generated@@165 ($generated@@286 $generated@@139 $generated@@434)))) (= ($generated@@85 ($generated@@428 $generated@@433) ($generated@@165 ($generated@@286 $generated@@139 $generated@@434))) ($generated@@166 ($generated@@286 $generated@@139 $generated@@434))))))
 :pattern ( ($generated@@85 ($generated@@427 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@338 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@337 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@85 ($generated@@378 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@85 ($generated@@420 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@435) $generated@@439))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@85 ($generated@@378 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@356 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@355 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@85 ($generated@@389 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@85 ($generated@@353 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@85 ($generated@@428 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@440) $generated@@444))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@446 $generated@@447)) $generated@@68)
 :pattern ( ($generated@@445 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@448) ($generated@@337 $generated@@167 $generated@@167)) (= (type $generated@@449) $generated@@68)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@448) $generated@@452))) (and ($generated@@299 ($generated@@85 ($generated@@420 $generated@@448) $generated@@452) $generated@@450 $generated@@451) ($generated@@299 $generated@@452 $generated@@449 $generated@@451)))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@448) $generated@@452))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@448) $generated@@452))
))))
 :pattern ( ($generated@@78 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@68)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@355 $generated@@167 $generated@@167)) (= (type $generated@@457) $generated@@68)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@456) $generated@@460))) (and ($generated@@299 ($generated@@85 ($generated@@428 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@299 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@456) $generated@@460))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@461) $generated@@68) (= (type $generated@@462) $generated@@139)) ($generated@@141 $generated@@462 ($generated@@142 $generated@@461))) (or ($generated@@276 $generated@@462) ($generated@@253 $generated@@462)))
 :pattern ( ($generated@@253 $generated@@462) ($generated@@141 $generated@@462 ($generated@@142 $generated@@461)))
 :pattern ( ($generated@@276 $generated@@462) ($generated@@141 $generated@@462 ($generated@@142 $generated@@461)))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@80 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@357 (type $generated@@465))))
(let (($generated@@467 ($generated@@356 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@355 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@354 $generated@@467 $generated@@466)) (= ($generated@@353 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@353 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@357 (type $generated@@468))))
(let (($generated@@470 ($generated@@356 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@355 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@354 $generated@@470 $generated@@469)) (= ($generated@@389 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@389 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@357 (type $generated@@471))))
(let (($generated@@473 ($generated@@356 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@355 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@354 $generated@@473 $generated@@472)) (= ($generated@@427 $generated@@471) ($generated@@463 $generated@@167))))))
 :pattern ( ($generated@@427 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@339 (type $generated@@474))))
(let (($generated@@476 ($generated@@338 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@337 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@336 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@167) (= (type $generated@@478) $generated@@167)) ($generated@@0 ($generated@@85 ($generated@@419 $generated@@474) ($generated@@287 ($generated@@239 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@419 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@357 (type $generated@@479))))
(let (($generated@@481 ($generated@@356 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@355 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@354 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@167) (= (type $generated@@483) $generated@@167)) ($generated@@0 ($generated@@85 ($generated@@427 $generated@@479) ($generated@@287 ($generated@@239 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@427 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@167) ($generated@@240 $generated@@484 $generated@@46)) (and (= ($generated@@287 ($generated@@286 $generated@@2 $generated@@484)) $generated@@484) ($generated@@141 ($generated@@286 $generated@@2 $generated@@484) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@484 $generated@@46))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@167) ($generated@@240 $generated@@485 $generated@@47)) (and (= ($generated@@287 ($generated@@286 $generated@@3 $generated@@485)) $generated@@485) ($generated@@141 ($generated@@286 $generated@@3 $generated@@485) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@485 $generated@@47))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@167) ($generated@@240 $generated@@486 $generated@@44)) (and (= ($generated@@287 ($generated@@286 $generated@@4 $generated@@486)) $generated@@486) ($generated@@141 ($generated@@286 $generated@@4 $generated@@486) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@486 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@487) 21))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@167) ($generated@@240 $generated@@488 $generated@@45)) (and (= ($generated@@287 ($generated@@286 $generated@@487 $generated@@488)) $generated@@488) ($generated@@141 ($generated@@286 $generated@@487 $generated@@488) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@488 $generated@@45))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@68) (= ($generated@@240 ($generated@@287 $generated@@489) $generated@@490) ($generated@@141 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@240 ($generated@@287 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@83 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@80 $generated@@492 $generated@@2)) (<= 0 ($generated@@326 $generated@@491))))
 :pattern ( ($generated@@326 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@317 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@316 $generated@@494)) (<= 0 ($generated@@315 $generated@@493))))
 :pattern ( ($generated@@315 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@445 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@445 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@445 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@445 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@445 $generated@@503 $generated@@504)) $generated@@58))
 :pattern ( ($generated@@445 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@453 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@453 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@453 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@453 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@76 ($generated@@453 $generated@@513 $generated@@514)) $generated@@59))
 :pattern ( ($generated@@453 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@167) (= (type $generated@@516) $generated@@167)) (= ($generated@@172 ($generated@@239 $generated@@515 $generated@@516)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@158 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@158 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@158 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@158 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@167) (= (type $generated@@526) $generated@@167)) (= ($generated@@165 ($generated@@239 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@239 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@167) (= (type $generated@@528) $generated@@167)) (= ($generated@@166 ($generated@@239 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@239 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@167) (= (type $generated@@530) $generated@@139)) (= ($generated@@172 ($generated@@279 $generated@@529 $generated@@530)) $generated@@65))
 :pattern ( ($generated@@279 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@167) (= (type $generated@@532) $generated@@139)) (= ($generated@@254 ($generated@@279 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@279 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@167) (= (type $generated@@534) $generated@@139)) (= ($generated@@255 ($generated@@279 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@279 $generated@@533 $generated@@534))
)))
(assert  (and (forall (($generated@@537 T@U) ) (! (= (type ($generated@@535 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@537))
)) (forall (($generated@@538 T@U) ($generated@@539 Int) ) (! (let (($generated@@540 ($generated@@317 (type $generated@@538))))
(= (type ($generated@@536 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@536 $generated@@538 $generated@@539))
))))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@316 $generated@@167)) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@541 ($generated@@535 $generated@@542) $generated@@543) (forall (($generated@@544 Int) ) (!  (=> (and (<= 0 $generated@@544) (< $generated@@544 ($generated@@315 $generated@@541))) ($generated@@299 ($generated@@536 $generated@@541 $generated@@544) $generated@@542 $generated@@543))
 :pattern ( ($generated@@536 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@78 $generated@@541 ($generated@@535 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@545 ($generated@@79 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@79 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@260 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@260 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@260 $generated@@550)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@265 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@265 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@76 ($generated@@265 $generated@@554)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@175 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@175 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@76 ($generated@@175 $generated@@558)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@535 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@535 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@76 ($generated@@535 $generated@@562)) $generated@@57))
 :pattern ( ($generated@@535 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@142 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@142 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
(= ($generated@@286 $generated@@567 ($generated@@287 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@287 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@337 $generated@@167 $generated@@167)) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) $generated@@68)) (= ($generated@@141 $generated@@568 ($generated@@445 $generated@@569 $generated@@570)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@568) $generated@@571))) (and ($generated@@240 ($generated@@85 ($generated@@420 $generated@@568) $generated@@571) $generated@@570) ($generated@@240 $generated@@571 $generated@@569)))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@568) $generated@@571))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@568) $generated@@571))
))))
 :pattern ( ($generated@@141 $generated@@568 ($generated@@445 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@355 $generated@@167 $generated@@167)) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@68)) (= ($generated@@141 $generated@@572 ($generated@@453 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@167) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@572) $generated@@575))) (and ($generated@@240 ($generated@@85 ($generated@@428 $generated@@572) $generated@@575) $generated@@574) ($generated@@240 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@572) $generated@@575))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@141 $generated@@572 ($generated@@453 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@167) (= (type $generated@@579) $generated@@167)) (< ($generated@@576 $generated@@578) ($generated@@577 ($generated@@239 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@239 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@167) (= (type $generated@@581) $generated@@167)) (< ($generated@@576 $generated@@581) ($generated@@577 ($generated@@239 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@239 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@167) (= (type $generated@@583) $generated@@139)) (< ($generated@@576 $generated@@582) ($generated@@577 ($generated@@279 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@279 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@167) (= (type $generated@@585) $generated@@139)) (< ($generated@@577 $generated@@585) ($generated@@577 ($generated@@279 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@279 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@167) (= (type $generated@@587) $generated@@68)) (= (type $generated@@588) $generated@@68)) ($generated@@240 $generated@@586 ($generated@@445 $generated@@587 $generated@@588))) (and (= ($generated@@287 ($generated@@286 ($generated@@337 $generated@@167 $generated@@167) $generated@@586)) $generated@@586) ($generated@@141 ($generated@@286 ($generated@@337 $generated@@167 $generated@@167) $generated@@586) ($generated@@445 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@240 $generated@@586 ($generated@@445 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@167) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) $generated@@68)) ($generated@@240 $generated@@589 ($generated@@453 $generated@@590 $generated@@591))) (and (= ($generated@@287 ($generated@@286 ($generated@@355 $generated@@167 $generated@@167) $generated@@589)) $generated@@589) ($generated@@141 ($generated@@286 ($generated@@355 $generated@@167 $generated@@167) $generated@@589) ($generated@@453 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@240 $generated@@589 ($generated@@453 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) $generated@@167)) ($generated@@240 $generated@@594 ($generated@@158 $generated@@592 $generated@@593))) (and (= ($generated@@287 ($generated@@286 $generated@@139 $generated@@594)) $generated@@594) ($generated@@141 ($generated@@286 $generated@@139 $generated@@594) ($generated@@158 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@240 $generated@@594 ($generated@@158 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@139) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@236 $generated@@597) (and ($generated@@253 $generated@@595) ($generated@@78 $generated@@595 ($generated@@142 $generated@@596) $generated@@597)))) ($generated@@299 ($generated@@254 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@299 ($generated@@254 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
 (not ($generated@@0 ($generated@@85 ($generated@@463 $generated@@599) $generated@@598))))
 :pattern ( (let (($generated@@599 (type $generated@@598)))
($generated@@85 ($generated@@463 $generated@@599) $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@68) (= (type $generated@@601) $generated@@68)) (and (= ($generated@@76 ($generated@@158 $generated@@600 $generated@@601)) $generated@@62) (= ($generated@@332 ($generated@@158 $generated@@600 $generated@@601)) $generated@@66)))
 :pattern ( ($generated@@158 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@139) (= ($generated@@576 ($generated@@287 $generated@@602)) ($generated@@577 $generated@@602)))
 :pattern ( ($generated@@576 ($generated@@287 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@167) ($generated@@240 $generated@@603 ($generated@@79 0))) (and (= ($generated@@287 ($generated@@286 $generated@@2 $generated@@603)) $generated@@603) ($generated@@141 ($generated@@286 ($generated@@80 $generated@@167 $generated@@4) $generated@@603) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@603 ($generated@@79 0)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@167) (= (type $generated@@605) $generated@@68)) ($generated@@240 $generated@@604 ($generated@@260 $generated@@605))) (and (= ($generated@@287 ($generated@@286 ($generated@@80 $generated@@167 $generated@@4) $generated@@604)) $generated@@604) ($generated@@141 ($generated@@286 ($generated@@80 $generated@@167 $generated@@4) $generated@@604) ($generated@@260 $generated@@605))))
 :pattern ( ($generated@@240 $generated@@604 ($generated@@260 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@167) (= (type $generated@@607) $generated@@68)) ($generated@@240 $generated@@606 ($generated@@265 $generated@@607))) (and (= ($generated@@287 ($generated@@286 ($generated@@80 $generated@@167 $generated@@4) $generated@@606)) $generated@@606) ($generated@@141 ($generated@@286 ($generated@@80 $generated@@167 $generated@@4) $generated@@606) ($generated@@265 $generated@@607))))
 :pattern ( ($generated@@240 $generated@@606 ($generated@@265 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@167) (= (type $generated@@609) $generated@@68)) ($generated@@240 $generated@@608 ($generated@@175 $generated@@609))) (and (= ($generated@@287 ($generated@@286 ($generated@@80 $generated@@167 $generated@@2) $generated@@608)) $generated@@608) ($generated@@141 ($generated@@286 ($generated@@80 $generated@@167 $generated@@2) $generated@@608) ($generated@@175 $generated@@609))))
 :pattern ( ($generated@@240 $generated@@608 ($generated@@175 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@167) (= (type $generated@@611) $generated@@68)) ($generated@@240 $generated@@610 ($generated@@535 $generated@@611))) (and (= ($generated@@287 ($generated@@286 ($generated@@316 $generated@@167) $generated@@610)) $generated@@610) ($generated@@141 ($generated@@286 ($generated@@316 $generated@@167) $generated@@610) ($generated@@535 $generated@@611))))
 :pattern ( ($generated@@240 $generated@@610 ($generated@@535 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@68) (= (type $generated@@613) $generated@@167)) ($generated@@240 $generated@@613 ($generated@@142 $generated@@612))) (and (= ($generated@@287 ($generated@@286 $generated@@139 $generated@@613)) $generated@@613) ($generated@@141 ($generated@@286 $generated@@139 $generated@@613) ($generated@@142 $generated@@612))))
 :pattern ( ($generated@@240 $generated@@613 ($generated@@142 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@139) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@236 $generated@@616) (and ($generated@@253 $generated@@614) ($generated@@78 $generated@@614 ($generated@@142 $generated@@615) $generated@@616)))) ($generated@@78 ($generated@@255 $generated@@614) ($generated@@142 $generated@@615) $generated@@616))
 :pattern ( ($generated@@78 ($generated@@255 $generated@@614) ($generated@@142 $generated@@615) $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@80 $generated@@167 $generated@@2)) (= (type $generated@@618) $generated@@68)) (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@617 ($generated@@175 $generated@@618) $generated@@619) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@167) (< 0 ($generated ($generated@@85 $generated@@617 $generated@@620)))) ($generated@@299 $generated@@620 $generated@@618 $generated@@619))
 :pattern ( ($generated@@85 $generated@@617 $generated@@620))
))))
 :pattern ( ($generated@@78 $generated@@617 ($generated@@175 $generated@@618) $generated@@619))
)))
(assert (= $generated@@173 ($generated@@272 $generated@@173)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@139) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@236 $generated@@623) (and ($generated@@157 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@68) ($generated@@78 $generated@@621 ($generated@@158 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@158 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@299 ($generated@@165 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@299 ($generated@@165 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@139) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@236 $generated@@627) (and ($generated@@157 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@68) ($generated@@78 $generated@@625 ($generated@@158 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@78 $generated@@625 ($generated@@158 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@299 ($generated@@166 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@299 ($generated@@166 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@167) (= (type $generated@@630) $generated@@167)) (= ($generated@@239 ($generated@@272 $generated@@629) ($generated@@272 $generated@@630)) ($generated@@272 ($generated@@239 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@239 ($generated@@272 $generated@@629) ($generated@@272 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@167) (= (type $generated@@632) $generated@@139)) (= ($generated@@279 ($generated@@272 $generated@@631) ($generated@@272 $generated@@632)) ($generated@@272 ($generated@@279 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@279 ($generated@@272 $generated@@631) ($generated@@272 $generated@@632)))
)))
(assert (forall (($generated@@633 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@270 $generated@@633))) ($generated@@272 ($generated@@287 ($generated@@8 $generated@@633))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@270 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ) (! (= ($generated@@287 ($generated@@272 $generated@@634)) ($generated@@272 ($generated@@287 $generated@@634)))
 :pattern ( ($generated@@287 ($generated@@272 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 ($generated@@317 (type $generated@@635))))
 (=> (and (= (type $generated@@635) ($generated@@316 $generated@@636)) (= ($generated@@315 $generated@@635) 0)) (= $generated@@635 ($generated@@314 $generated@@636))))
 :pattern ( ($generated@@315 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@638)))
 (=> (and (and (= (type $generated@@637) ($generated@@80 $generated@@640 $generated@@2)) (= (type $generated@@639) $generated@@2)) (<= 0 ($generated $generated@@639))) (= ($generated@@326 ($generated@@86 $generated@@637 $generated@@638 $generated@@639)) (+ (- ($generated@@326 $generated@@637) ($generated ($generated@@85 $generated@@637 $generated@@638))) ($generated $generated@@639)))))
 :pattern ( ($generated@@326 ($generated@@86 $generated@@637 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@642) $generated@@2)) ($generated@@78 $generated@@642 $generated@@46 $generated@@641))
 :pattern ( ($generated@@78 $generated@@642 $generated@@46 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@644) $generated@@3)) ($generated@@78 $generated@@644 $generated@@47 $generated@@643))
 :pattern ( ($generated@@78 $generated@@644 $generated@@47 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@646) $generated@@4)) ($generated@@78 $generated@@646 $generated@@44 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@44 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@648) $generated@@487)) ($generated@@78 $generated@@648 $generated@@45 $generated@@647))
 :pattern ( ($generated@@78 $generated@@648 $generated@@45 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@650) $generated@@167)) ($generated@@78 $generated@@650 $generated@@48 $generated@@649))
 :pattern ( ($generated@@78 $generated@@650 $generated@@48 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@651) $generated@@68) (= (type $generated@@652) $generated@@167)) (= (type $generated@@653) $generated@@139)) (= (type $generated@@654) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@236 $generated@@654)) (= ($generated@@78 ($generated@@279 $generated@@652 $generated@@653) ($generated@@142 $generated@@651) $generated@@654)  (and ($generated@@299 $generated@@652 $generated@@651 $generated@@654) ($generated@@78 $generated@@653 ($generated@@142 $generated@@651) $generated@@654))))
 :pattern ( ($generated@@78 ($generated@@279 $generated@@652 $generated@@653) ($generated@@142 $generated@@651) $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@316 $generated@@167)) (= (type $generated@@656) $generated@@68)) (= ($generated@@141 $generated@@655 ($generated@@535 $generated@@656)) (forall (($generated@@657 Int) ) (!  (=> (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@315 $generated@@655))) ($generated@@240 ($generated@@536 $generated@@655 $generated@@657) $generated@@656))
 :pattern ( ($generated@@536 $generated@@655 $generated@@657))
))))
 :pattern ( ($generated@@141 $generated@@655 ($generated@@535 $generated@@656)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 Int) ) (!  (=> (= (type $generated@@659) ($generated@@316 $generated@@167)) (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@315 $generated@@659))) (< ($generated@@577 ($generated@@286 $generated@@139 ($generated@@536 $generated@@659 $generated@@660))) ($generated@@658 $generated@@659))))
 :pattern ( ($generated@@577 ($generated@@286 $generated@@139 ($generated@@536 $generated@@659 $generated@@660))))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) ($generated@@337 $generated@@167 $generated@@167)) (= (type $generated@@662) $generated@@68)) (= (type $generated@@663) $generated@@68)) ($generated@@141 $generated@@661 ($generated@@445 $generated@@662 $generated@@663))) (and (and ($generated@@141 ($generated@@335 $generated@@661) ($generated@@260 $generated@@662)) ($generated@@141 ($generated@@378 $generated@@661) ($generated@@260 $generated@@663))) ($generated@@141 ($generated@@419 $generated@@661) ($generated@@260 ($generated@@158 $generated@@662 $generated@@663)))))
 :pattern ( ($generated@@141 $generated@@661 ($generated@@445 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@355 $generated@@167 $generated@@167)) (= (type $generated@@665) $generated@@68)) (= (type $generated@@666) $generated@@68)) ($generated@@141 $generated@@664 ($generated@@453 $generated@@665 $generated@@666))) (and (and ($generated@@141 ($generated@@353 $generated@@664) ($generated@@265 $generated@@665)) ($generated@@141 ($generated@@389 $generated@@664) ($generated@@265 $generated@@666))) ($generated@@141 ($generated@@427 $generated@@664) ($generated@@265 ($generated@@158 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@141 $generated@@664 ($generated@@453 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@2) ($generated@@141 $generated@@667 $generated@@46))
 :pattern ( ($generated@@141 $generated@@667 $generated@@46))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@3) ($generated@@141 $generated@@668 $generated@@47))
 :pattern ( ($generated@@141 $generated@@668 $generated@@47))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@4) ($generated@@141 $generated@@669 $generated@@44))
 :pattern ( ($generated@@141 $generated@@669 $generated@@44))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@487) ($generated@@141 $generated@@670 $generated@@45))
 :pattern ( ($generated@@141 $generated@@670 $generated@@45))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@167) ($generated@@141 $generated@@671 $generated@@48))
 :pattern ( ($generated@@141 $generated@@671 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 (T@U) Bool)
(assert  (and (and (= (type $generated@@672) ($generated@@182 $generated@@81 $generated@@4)) (= (type $generated@@673) $generated@@81)) (= (type $generated@@674) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@676  (=> (and (= $generated@@672 ($generated@@181 $generated@@673 $generated@@674 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@250 ($generated@@137 ($generated@@285 ($generated@@285 $generated@@151)) ($generated@@270 4) ($generated@@272 ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 24))) ($generated@@272 ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 50))) ($generated@@272 $generated@@173)))))) ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 4))) ($generated@@272 ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 24))) ($generated@@272 ($generated@@279 ($generated@@287 ($generated@@8 ($generated@@270 50))) ($generated@@272 $generated@@173))))))))))
(let (($generated@@677  (=> (and (and ($generated@@236 $generated@@674) ($generated@@675 $generated@@674)) (and (= 2 $generated@@136) (= (ControlFlow 0 3) 2))) $generated@@676)))
$generated@@677)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U Int T@U) T@U)
(declare-fun $generated@@162 (Int T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@205 (Int) Int)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@217 (T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@219 (T@T T@T) T@T)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U T@U) Bool)
(declare-fun $generated@@287 (T@U T@U) Bool)
(declare-fun $generated@@293 (T@U) Bool)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@329 (T@U T@U T@U) Bool)
(declare-fun $generated@@344 (T@T) T@U)
(declare-fun $generated@@345 (T@U) Int)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@356 (T@U) Int)
(declare-fun $generated@@357 (T@T) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@T) T@U)
(declare-fun $generated@@385 (T@T T@T) T@T)
(declare-fun $generated@@386 (T@T) T@T)
(declare-fun $generated@@387 (T@T) T@T)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@437 (T@U) Bool)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@482 (T@U T@U) T@U)
(declare-fun $generated@@490 (T@U T@U) T@U)
(declare-fun $generated@@500 (T@T) T@U)
(declare-fun $generated@@524 () T@T)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@573 (T@U Int) T@U)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@613 (T@U) Int)
(declare-fun $generated@@614 (T@U) Int)
(declare-fun $generated@@695 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ($generated@@165 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164 $generated@@165)) $generated@@82)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164 $generated@@165))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@166 T@U) ($generated@@167 Int) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@81) (= (type $generated@@168) $generated@@82)) (or ($generated@@162 $generated@@167 $generated@@168) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@168 ($generated@@85 $generated@@46))))) ($generated@@84 ($generated@@161 $generated@@166 $generated@@167 $generated@@168) ($generated@@85 $generated@@46)))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167 $generated@@168))
))))
(assert  (and (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@81)
 :pattern ( ($generated@@169 $generated@@171))
)) (= (type $generated@@170) $generated@@81)))
(assert (forall (($generated@@172 T@U) ($generated@@173 Int) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@81) (= (type $generated@@174) $generated@@82)) (= ($generated@@79 $generated@@172 $generated@@173 $generated@@174) ($generated@@79 $generated@@170 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@79 ($generated@@169 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 T@U) ) (!  (=> (and (= (type $generated@@175) $generated@@81) (= (type $generated@@177) $generated@@82)) (= ($generated@@161 $generated@@175 $generated@@176 $generated@@177) ($generated@@161 $generated@@170 $generated@@176 $generated@@177)))
 :pattern ( ($generated@@161 ($generated@@169 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@2) ($generated@@84 $generated@@178 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@178 ($generated@@104 0)))
)))
(assert (forall (($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(= (type ($generated@@180 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@82) (= (type $generated@@185) $generated@@82)) (or ($generated@@181 ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@184 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@185 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@186 Int) ) (!  (and ($generated@@83 $generated@@186 ($generated@@180 $generated@@184)) ($generated@@83 $generated@@186 ($generated@@180 $generated@@185)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@186 $generated@@185))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@186 $generated@@184))
)) (= ($generated@@179 ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (forall (($generated@@187 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@170) $generated@@187 ($generated@@180 $generated@@184)) ($generated@@79 ($generated@@80 $generated@@170) $generated@@187 ($generated@@180 $generated@@185))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@187 $generated@@185))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@187 $generated@@184))
)))))
 :weight 3
 :pattern ( ($generated@@179 ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@190 $generated@@191)) $generated@@68)
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@68) (= (type $generated@@193) $generated@@68)) (= (type $generated@@194) $generated@@82)) ($generated@@84 $generated@@194 ($generated@@189 $generated@@192 $generated@@193))) ($generated@@188 $generated@@194))
 :pattern ( ($generated@@188 $generated@@194) ($generated@@84 $generated@@194 ($generated@@189 $generated@@192 $generated@@193)))
)))
(assert  (and (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@90)
 :pattern ( ($generated@@196 $generated@@198))
)) (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@90)
 :pattern ( ($generated@@197 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) $generated@@82) (= (type $generated@@201) $generated@@82)) true) (= ($generated@@195 $generated@@200 $generated@@201)  (and (= ($generated@@196 $generated@@200) ($generated@@196 $generated@@201)) (= ($generated@@197 $generated@@200) ($generated@@197 $generated@@201)))))
 :pattern ( ($generated@@195 $generated@@200 $generated@@201))
)))
(assert  (and (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@204))
)) (= (type $generated@@203) $generated@@82)))
(assert (= ($generated@@202 $generated@@203) $generated@@63))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@206 T@U) ($generated@@207 Int) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@206) $generated@@81) (= (type $generated@@208) $generated@@82)) (or ($generated@@83 ($generated@@205 $generated@@207) ($generated@@180 $generated@@208)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@208 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@180 ($generated@@11 ($generated@@86 ($generated@@180 $generated@@208)))))) (let (($generated@@209 ($generated@@180 ($generated@@87 ($generated@@180 $generated@@208)))))
($generated@@83 ($generated@@205 $generated@@207) $generated@@209))) (= ($generated@@79 ($generated@@80 $generated@@206) ($generated@@205 $generated@@207) ($generated@@180 $generated@@208)) (ite ($generated@@86 ($generated@@180 $generated@@208)) 0 (let (($generated@@210 ($generated@@180 ($generated@@87 ($generated@@180 $generated@@208)))))
(let (($generated@@211 ($generated@@205 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@180 $generated@@208)))))))
(+ (ite (= ($generated@@205 $generated@@207) $generated@@211) 1 0) ($generated@@79 ($generated@@80 $generated@@206) ($generated@@205 $generated@@207) $generated@@210))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@206) ($generated@@205 $generated@@207) ($generated@@180 $generated@@208)))
))))
(assert (forall (($generated@@214 T@U) ) (! (= (type ($generated@@212 $generated@@214)) $generated@@68)
 :pattern ( ($generated@@212 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (and (= (type $generated@@215) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@216) $generated@@68)) ($generated@@84 $generated@@215 ($generated@@212 $generated@@216))) ($generated@@213 $generated@@215))
 :pattern ( ($generated@@84 $generated@@215 ($generated@@212 $generated@@216)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (= ($generated@@1 ($generated@@219 $generated@@223 $generated@@224)) 17)) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@220 ($generated@@219 $generated@@225 $generated@@226)) $generated@@225)
 :pattern ( ($generated@@219 $generated@@225 $generated@@226))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@221 ($generated@@219 $generated@@227 $generated@@228)) $generated@@228)
 :pattern ( ($generated@@219 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@221 (type $generated@@229))))
(= (type ($generated@@217 $generated@@229 $generated@@230 $generated@@231)) $generated@@232))
 :pattern ( ($generated@@217 $generated@@229 $generated@@230 $generated@@231))
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(let (($generated@@238 (type $generated@@234)))
(= (type ($generated@@222 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@219 $generated@@238 $generated@@237))))
 :pattern ( ($generated@@222 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@221 (type $generated@@239))))
 (=> (= (type $generated@@242) $generated@@243) (= ($generated@@217 ($generated@@222 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@240 $generated@@241) $generated@@242)))
 :weight 0
))) (and (and (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or (= $generated@@246 $generated@@248) (= ($generated@@217 ($generated@@222 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@217 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (or (= $generated@@253 $generated@@255) (= ($generated@@217 ($generated@@222 $generated@@251 $generated@@252 $generated@@253 $generated@@250) $generated@@254 $generated@@255) ($generated@@217 $generated@@251 $generated@@254 $generated@@255)))
 :weight 0
))) (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (or true (= ($generated@@217 ($generated@@222 $generated@@257 $generated@@258 $generated@@259 $generated@@256) $generated@@260 $generated@@261) ($generated@@217 $generated@@257 $generated@@260 $generated@@261)))
 :weight 0
)))) (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ) (! (= (type ($generated@@218 $generated@@262 $generated@@263 $generated@@264 $generated@@265)) ($generated@@219 $generated@@106 $generated@@4))
 :pattern ( ($generated@@218 $generated@@262 $generated@@263 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@71 (type $generated@@271))))
 (=> (and (and (and (and (= (type $generated@@266) $generated@@106) (= (type $generated@@267) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@268) ($generated@@70 $generated@@4))) (= (type $generated@@270) $generated@@106)) (= (type $generated@@271) ($generated@@70 $generated@@272))) (= ($generated@@0 ($generated@@217 ($generated@@218 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))  (=> (and (not (= $generated@@270 $generated@@266)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@267 $generated@@270) $generated@@268))) $generated@@269))))
 :pattern ( ($generated@@217 ($generated@@218 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@68) (= (type $generated@@275) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@273 $generated@@275)) ($generated@@103 $generated@@203 ($generated@@85 $generated@@274) $generated@@275))
 :pattern ( ($generated@@103 $generated@@203 ($generated@@85 $generated@@274) $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@82)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) $generated@@68)) (= (type $generated@@282) $generated@@90)) (= (type $generated@@283) $generated@@90)) (= ($generated@@84 ($generated@@276 $generated@@282 $generated@@283) ($generated@@189 $generated@@280 $generated@@281))  (and ($generated@@277 $generated@@282 $generated@@280) ($generated@@277 $generated@@283 $generated@@281))))
 :pattern ( ($generated@@84 ($generated@@276 $generated@@282 $generated@@283) ($generated@@189 $generated@@280 $generated@@281)))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@68) ($generated@@84 $generated@@203 ($generated@@85 $generated@@284)))
 :pattern ( ($generated@@84 $generated@@203 ($generated@@85 $generated@@284)))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@82) (= (type $generated@@286) $generated@@82)) (= ($generated@@195 $generated@@285 $generated@@286) (= $generated@@285 $generated@@286)))
 :pattern ( ($generated@@195 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@82) (= (type $generated@@289) $generated@@82)) (= ($generated@@287 $generated@@288 $generated@@289) (= $generated@@288 $generated@@289)))
 :pattern ( ($generated@@287 $generated@@288 $generated@@289))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@290 T@U) ($generated@@291 Int) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@81) (= (type $generated@@292) $generated@@82)) (or ($generated@@83 $generated@@291 $generated@@292) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@292 ($generated@@85 $generated@@46))))) (<= ($generated@@205 0) ($generated@@79 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@79 $generated@@290 $generated@@291 $generated@@292))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (= (type $generated@@294) $generated@@82) (= (type $generated@@295) $generated@@82)) (and ($generated@@293 $generated@@294) ($generated@@293 $generated@@295))) (= ($generated@@287 $generated@@294 $generated@@295)  (and (= ($generated@@89 $generated@@294) ($generated@@89 $generated@@295)) ($generated@@287 ($generated@@87 $generated@@294) ($generated@@87 $generated@@295)))))
 :pattern ( ($generated@@287 $generated@@294 $generated@@295) ($generated@@293 $generated@@294))
 :pattern ( ($generated@@287 $generated@@294 $generated@@295) ($generated@@293 $generated@@295))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (= (type $generated@@296) $generated@@82) (= (type $generated@@297) $generated@@82)) (or ($generated@@181 $generated@@296 $generated@@297) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@296 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@297 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@298 Int) ) (!  (and ($generated@@83 $generated@@298 $generated@@296) ($generated@@83 $generated@@298 $generated@@297))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@298 $generated@@297))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@298 $generated@@296))
)) (= ($generated@@179 $generated@@296 $generated@@297) (forall (($generated@@299 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@170) $generated@@299 $generated@@296) ($generated@@79 ($generated@@80 $generated@@170) $generated@@299 $generated@@297)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@299 $generated@@297))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@299 $generated@@296))
)))))
 :pattern ( ($generated@@179 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@68)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@303) $generated@@68)) (= ($generated@@84 $generated@@302 ($generated@@300 $generated@@303)) (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@90) ($generated@@0 ($generated@@110 $generated@@302 $generated@@304))) ($generated@@277 $generated@@304 $generated@@303))
 :pattern ( ($generated@@110 $generated@@302 $generated@@304))
))))
 :pattern ( ($generated@@84 $generated@@302 ($generated@@300 $generated@@303)))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@68)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@308) $generated@@68)) (= ($generated@@84 $generated@@307 ($generated@@305 $generated@@308)) (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@90) ($generated@@0 ($generated@@110 $generated@@307 $generated@@309))) ($generated@@277 $generated@@309 $generated@@308))
 :pattern ( ($generated@@110 $generated@@307 $generated@@309))
))))
 :pattern ( ($generated@@84 $generated@@307 ($generated@@305 $generated@@308)))
)))
(assert (forall (($generated@@310 Int) ) (! (= ($generated@@205 $generated@@310) $generated@@310)
 :pattern ( ($generated@@205 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (= ($generated@@180 $generated@@311) $generated@@311)
 :pattern ( ($generated@@180 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@312) $generated@@82) (= (type $generated@@313) $generated@@82)) (and ($generated@@86 $generated@@312) ($generated@@86 $generated@@313))) (= ($generated@@287 $generated@@312 $generated@@313) true))
 :pattern ( ($generated@@287 $generated@@312 $generated@@313) ($generated@@86 $generated@@312))
 :pattern ( ($generated@@287 $generated@@312 $generated@@313) ($generated@@86 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (! (= (type ($generated@@314 $generated@@315 $generated@@316)) $generated@@82)
 :pattern ( ($generated@@314 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) $generated@@68) (= (type $generated@@318) $generated@@90)) (= (type $generated@@319) $generated@@82)) (= ($generated@@84 ($generated@@314 $generated@@318 $generated@@319) ($generated@@85 $generated@@317))  (and ($generated@@277 $generated@@318 $generated@@317) ($generated@@84 $generated@@319 ($generated@@85 $generated@@317)))))
 :pattern ( ($generated@@84 ($generated@@314 $generated@@318 $generated@@319) ($generated@@85 $generated@@317)))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@90)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@322 T@U) ($generated@@323 Int) ($generated@@324 T@U) ) (!  (=> (and (and (= (type $generated@@322) $generated@@81) (= (type $generated@@324) $generated@@82)) (or ($generated@@162 $generated@@323 $generated@@324) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@324 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@324)) (let (($generated@@325 ($generated@@87 $generated@@324)))
(let (($generated@@326 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@324)))))
 (=> (< $generated@@326 $generated@@323) ($generated@@162 $generated@@323 $generated@@325))))) (= ($generated@@161 ($generated@@80 $generated@@322) $generated@@323 $generated@@324) (ite ($generated@@86 $generated@@324) ($generated@@314 ($generated@@320 ($generated@@8 $generated@@323)) ($generated@@180 $generated@@203)) (let (($generated@@327 ($generated@@87 $generated@@324)))
(let (($generated@@328 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@324)))))
(ite (<= $generated@@323 $generated@@328) ($generated@@314 ($generated@@320 ($generated@@8 $generated@@323)) $generated@@324) ($generated@@314 ($generated@@320 ($generated@@8 $generated@@328)) ($generated@@161 $generated@@322 $generated@@323 $generated@@327)))))))))
 :pattern ( ($generated@@161 ($generated@@80 $generated@@322) $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@330) $generated@@68) (= (type $generated@@331) $generated@@68)) (= (type $generated@@332) $generated@@90)) (= (type $generated@@333) $generated@@90)) (= (type $generated@@334) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@273 $generated@@334)) (= ($generated@@103 ($generated@@276 $generated@@332 $generated@@333) ($generated@@189 $generated@@330 $generated@@331) $generated@@334)  (and ($generated@@329 $generated@@332 $generated@@330 $generated@@334) ($generated@@329 $generated@@333 $generated@@331 $generated@@334))))
 :pattern ( ($generated@@103 ($generated@@276 $generated@@332 $generated@@333) ($generated@@189 $generated@@330 $generated@@331) $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@82) (= ($generated@@188 $generated@@335) (= ($generated@@202 $generated@@335) $generated@@61)))
 :pattern ( ($generated@@188 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@82) (= ($generated@@86 $generated@@336) (= ($generated@@202 $generated@@336) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@82) (= ($generated@@293 $generated@@337) (= ($generated@@202 $generated@@337) $generated@@65)))
 :pattern ( ($generated@@293 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@82) ($generated@@188 $generated@@338)) (exists (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (and (and (= (type $generated@@339) $generated@@90) (= (type $generated@@340) $generated@@90)) (= $generated@@338 ($generated@@276 $generated@@339 $generated@@340)))
 :no-pattern (type $generated@@339)
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
)))
 :pattern ( ($generated@@188 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@82) ($generated@@293 $generated@@341)) (exists (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (and (and (= (type $generated@@342) $generated@@90) (= (type $generated@@343) $generated@@82)) (= $generated@@341 ($generated@@314 $generated@@342 $generated@@343)))
 :no-pattern (type $generated@@342)
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
)))
 :pattern ( ($generated@@293 $generated@@341))
)))
(assert  (and (and (forall (($generated@@348 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@348)) 18)) (forall (($generated@@349 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@346 $generated@@349))
))) (forall (($generated@@350 T@T) ) (! (= (type ($generated@@344 $generated@@350)) ($generated@@346 $generated@@350))
 :pattern ( ($generated@@344 $generated@@350))
))))
(assert (forall (($generated@@351 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@351)) 0)
 :pattern ( ($generated@@344 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@82) ($generated@@86 $generated@@352)) (= $generated@@352 $generated@@203))
 :pattern ( ($generated@@86 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@68) (= (type $generated@@355) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@329 ($generated@@320 $generated@@353) $generated@@354 $generated@@355) ($generated@@103 $generated@@353 $generated@@354 $generated@@355)))
 :pattern ( ($generated@@329 ($generated@@320 $generated@@353) $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@358 T@T) ) (! (= (type ($generated@@357 $generated@@358)) ($generated@@105 $generated@@358 $generated@@2))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@108 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@105 $generated@@360 $generated@@2)) (and (= (= ($generated@@356 $generated@@359) 0) (= $generated@@359 ($generated@@357 $generated@@360))) (=> (not (= ($generated@@356 $generated@@359) 0)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) (< 0 ($generated ($generated@@110 $generated@@359 $generated@@361))))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@73)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@364)) $generated@@64) (= ($generated@@362 ($generated@@85 $generated@@364)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@364))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 19)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@105 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@110 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert  (and (and (and (and (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (= ($generated@@1 ($generated@@385 $generated@@388 $generated@@389)) 20)) (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (! (= ($generated@@386 ($generated@@385 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@385 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= ($generated@@387 ($generated@@385 $generated@@392 $generated@@393)) $generated@@393)
 :pattern ( ($generated@@385 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@386 (type $generated@@394))))
(= (type ($generated@@383 $generated@@394)) ($generated@@105 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@394))
))) (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (! (= (type ($generated@@384 $generated@@396 $generated@@397)) ($generated@@385 $generated@@396 $generated@@397))
 :pattern ( ($generated@@384 $generated@@396 $generated@@397))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@T) ) (! (let (($generated@@400 (type $generated@@398)))
 (not ($generated@@0 ($generated@@110 ($generated@@383 ($generated@@384 $generated@@400 $generated@@399)) $generated@@398))))
 :pattern ( (let (($generated@@400 (type $generated@@398)))
($generated@@110 ($generated@@383 ($generated@@384 $generated@@400 $generated@@399)) $generated@@398)))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@108 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@105 $generated@@402 $generated@@2)) (= ($generated@@213 $generated@@401) (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@402) (and (<= 0 ($generated ($generated@@110 $generated@@401 $generated@@403))) (<= ($generated ($generated@@110 $generated@@401 $generated@@403)) ($generated@@356 $generated@@401))))
 :pattern ( ($generated@@110 $generated@@401 $generated@@403))
)))))
 :pattern ( ($generated@@213 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@369 (type $generated@@404))))
(let (($generated@@406 ($generated@@368 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@367 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@366 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@365 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@369 (type $generated@@409))))
(= (type ($generated@@408 $generated@@409)) ($generated@@105 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@369 (type $generated@@411))))
(let (($generated@@413 ($generated@@368 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@367 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@366 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@412) ($generated@@0 ($generated@@110 ($generated@@408 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@408 $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@387 (type $generated@@415))))
(let (($generated@@417 ($generated@@386 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@385 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@384 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) ($generated@@0 ($generated@@110 ($generated@@383 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@383 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@387 (type $generated@@420))))
(= (type ($generated@@419 $generated@@420)) ($generated@@105 $generated@@421 $generated@@4)))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@387 (type $generated@@422))))
(let (($generated@@424 ($generated@@386 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@385 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@384 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@423) ($generated@@0 ($generated@@110 ($generated@@419 $generated@@422) $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@419 $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 Int) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@81) (= (type $generated@@428) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@426) $generated@@427 $generated@@428) ($generated@@79 $generated@@426 $generated@@427 $generated@@428)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@426) $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 Int) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@81) (= (type $generated@@431) $generated@@82)) (= ($generated@@161 ($generated@@80 $generated@@429) $generated@@430 $generated@@431) ($generated@@161 $generated@@429 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@161 ($generated@@80 $generated@@429) $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@433) $generated@@68)) (= ($generated@@84 $generated@@432 ($generated@@212 $generated@@433)) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@432 $generated@@434)))) ($generated@@277 $generated@@434 $generated@@433))
 :pattern ( ($generated@@110 $generated@@432 $generated@@434))
))))
 :pattern ( ($generated@@84 $generated@@432 ($generated@@212 $generated@@433)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@435) $generated@@82) (= (type $generated@@436) $generated@@82)) (or ($generated@@181 $generated@@435 $generated@@436) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@435 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@436 ($generated@@85 $generated@@46)))))) true)
 :pattern ( ($generated@@179 $generated@@435 $generated@@436))
))))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@82) ($generated@@437 $generated@@438)) (or ($generated@@86 $generated@@438) ($generated@@293 $generated@@438)))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (= (type $generated@@439) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@439 ($generated@@300 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@90) ($generated@@0 ($generated@@110 $generated@@439 $generated@@442))) ($generated@@329 $generated@@442 $generated@@440 $generated@@441))
 :pattern ( ($generated@@110 $generated@@439 $generated@@442))
))))
 :pattern ( ($generated@@103 $generated@@439 ($generated@@300 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (= (type $generated@@443) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@443 ($generated@@305 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@90) ($generated@@0 ($generated@@110 $generated@@443 $generated@@446))) ($generated@@329 $generated@@446 $generated@@444 $generated@@445))
 :pattern ( ($generated@@110 $generated@@443 $generated@@446))
))))
 :pattern ( ($generated@@103 $generated@@443 ($generated@@305 $generated@@444) $generated@@445))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@447 T@U) ($generated@@448 Int) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@447) $generated@@81) (= (type $generated@@449) $generated@@82)) (or ($generated@@162 ($generated@@205 $generated@@448) ($generated@@180 $generated@@449)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@449 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@180 ($generated@@11 ($generated@@86 ($generated@@180 $generated@@449)))))) (let (($generated@@450 ($generated@@180 ($generated@@87 ($generated@@180 $generated@@449)))))
(let (($generated@@451 ($generated@@205 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@180 $generated@@449)))))))
 (=> (< $generated@@451 ($generated@@205 $generated@@448)) ($generated@@162 ($generated@@205 $generated@@448) $generated@@450))))) (= ($generated@@161 ($generated@@80 $generated@@447) ($generated@@205 $generated@@448) ($generated@@180 $generated@@449)) (ite ($generated@@86 ($generated@@180 $generated@@449)) ($generated@@314 ($generated@@320 ($generated@@8 ($generated@@205 $generated@@448))) ($generated@@180 $generated@@203)) (let (($generated@@452 ($generated@@180 ($generated@@87 ($generated@@180 $generated@@449)))))
(let (($generated@@453 ($generated@@205 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@180 $generated@@449)))))))
(ite (<= ($generated@@205 $generated@@448) $generated@@453) ($generated@@314 ($generated@@320 ($generated@@8 ($generated@@205 $generated@@448))) ($generated@@180 $generated@@449)) ($generated@@314 ($generated@@320 ($generated@@8 $generated@@453)) ($generated@@180 ($generated@@161 ($generated@@80 $generated@@447) ($generated@@205 $generated@@448) $generated@@452))))))))))
 :weight 3
 :pattern ( ($generated@@161 ($generated@@80 $generated@@447) ($generated@@205 $generated@@448) ($generated@@180 $generated@@449)))
))))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 (type $generated@@454)))
(= ($generated ($generated@@110 ($generated@@357 $generated@@455) $generated@@454)) 0))
 :pattern ( (let (($generated@@455 (type $generated@@454)))
($generated@@110 ($generated@@357 $generated@@455) $generated@@454)))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@369 (type $generated@@459))))
(let (($generated@@461 ($generated@@368 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459)) ($generated@@105 $generated@@461 $generated@@460))))
 :pattern ( ($generated@@457 $generated@@459))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@463) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@456 $generated@@462) $generated@@463))  (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@462) ($generated@@196 ($generated@@88 $generated@@82 $generated@@463)))) (= ($generated@@110 ($generated@@457 $generated@@462) ($generated@@196 ($generated@@88 $generated@@82 $generated@@463))) ($generated@@197 ($generated@@88 $generated@@82 $generated@@463))))))
 :pattern ( ($generated@@110 ($generated@@456 $generated@@462) $generated@@463))
)))
(assert  (and (forall (($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@466)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@464 $generated@@466))
)) (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@387 (type $generated@@467))))
(let (($generated@@469 ($generated@@386 (type $generated@@467))))
(= (type ($generated@@465 $generated@@467)) ($generated@@105 $generated@@469 $generated@@468))))
 :pattern ( ($generated@@465 $generated@@467))
))))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) ($generated@@385 $generated@@90 $generated@@90)) (= (type $generated@@471) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@464 $generated@@470) $generated@@471))  (and ($generated@@0 ($generated@@110 ($generated@@383 $generated@@470) ($generated@@196 ($generated@@88 $generated@@82 $generated@@471)))) (= ($generated@@110 ($generated@@465 $generated@@470) ($generated@@196 ($generated@@88 $generated@@82 $generated@@471))) ($generated@@197 ($generated@@88 $generated@@82 $generated@@471))))))
 :pattern ( ($generated@@110 ($generated@@464 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 (type $generated@@473)))
(let (($generated@@475 ($generated@@368 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@367 $generated@@475 $generated@@474)) (= ($generated@@0 ($generated@@110 ($generated@@408 $generated@@472) $generated@@473)) (exists (($generated@@476 T@U) ) (!  (and (= (type $generated@@476) $generated@@475) (and ($generated@@0 ($generated@@110 ($generated@@365 $generated@@472) $generated@@476)) (= $generated@@473 ($generated@@110 ($generated@@457 $generated@@472) $generated@@476))))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@472) $generated@@476))
 :pattern ( ($generated@@110 ($generated@@457 $generated@@472) $generated@@476))
))))))
 :pattern ( ($generated@@110 ($generated@@408 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (! (let (($generated@@479 (type $generated@@478)))
(let (($generated@@480 ($generated@@386 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@385 $generated@@480 $generated@@479)) (= ($generated@@0 ($generated@@110 ($generated@@419 $generated@@477) $generated@@478)) (exists (($generated@@481 T@U) ) (!  (and (= (type $generated@@481) $generated@@480) (and ($generated@@0 ($generated@@110 ($generated@@383 $generated@@477) $generated@@481)) (= $generated@@478 ($generated@@110 ($generated@@465 $generated@@477) $generated@@481))))
 :pattern ( ($generated@@110 ($generated@@383 $generated@@477) $generated@@481))
 :pattern ( ($generated@@110 ($generated@@465 $generated@@477) $generated@@481))
))))))
 :pattern ( ($generated@@110 ($generated@@419 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (and (= (type $generated@@485) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@486) $generated@@68)) (= (type $generated@@487) $generated@@68)) (= (type $generated@@488) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@485 ($generated@@482 $generated@@486 $generated@@487) $generated@@488) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@485) $generated@@489))) (and ($generated@@329 ($generated@@110 ($generated@@457 $generated@@485) $generated@@489) $generated@@487 $generated@@488) ($generated@@329 $generated@@489 $generated@@486 $generated@@488)))
 :pattern ( ($generated@@110 ($generated@@457 $generated@@485) $generated@@489))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@485) $generated@@489))
))))
 :pattern ( ($generated@@103 $generated@@485 ($generated@@482 $generated@@486 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (and (= (type $generated@@493) ($generated@@385 $generated@@90 $generated@@90)) (= (type $generated@@494) $generated@@68)) (= (type $generated@@495) $generated@@68)) (= (type $generated@@496) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@493 ($generated@@490 $generated@@494 $generated@@495) $generated@@496) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@383 $generated@@493) $generated@@497))) (and ($generated@@329 ($generated@@110 ($generated@@465 $generated@@493) $generated@@497) $generated@@495 $generated@@496) ($generated@@329 $generated@@497 $generated@@494 $generated@@496)))
 :pattern ( ($generated@@110 ($generated@@465 $generated@@493) $generated@@497))
 :pattern ( ($generated@@110 ($generated@@383 $generated@@493) $generated@@497))
))))
 :pattern ( ($generated@@103 $generated@@493 ($generated@@490 $generated@@494 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@82)) ($generated@@84 $generated@@499 ($generated@@85 $generated@@498))) (or ($generated@@86 $generated@@499) ($generated@@293 $generated@@499)))
 :pattern ( ($generated@@293 $generated@@499) ($generated@@84 $generated@@499 ($generated@@85 $generated@@498)))
 :pattern ( ($generated@@86 $generated@@499) ($generated@@84 $generated@@499 ($generated@@85 $generated@@498)))
)))
(assert (forall (($generated@@501 T@T) ) (! (= (type ($generated@@500 $generated@@501)) ($generated@@105 $generated@@501 $generated@@4))
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@387 (type $generated@@502))))
(let (($generated@@504 ($generated@@386 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@385 $generated@@504 $generated@@503)) (= (= $generated@@502 ($generated@@384 $generated@@504 $generated@@503)) (= ($generated@@383 $generated@@502) ($generated@@500 $generated@@504))))))
 :pattern ( ($generated@@383 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@387 (type $generated@@505))))
(let (($generated@@507 ($generated@@386 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@385 $generated@@507 $generated@@506)) (= (= $generated@@505 ($generated@@384 $generated@@507 $generated@@506)) (= ($generated@@419 $generated@@505) ($generated@@500 $generated@@506))))))
 :pattern ( ($generated@@419 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@387 (type $generated@@508))))
(let (($generated@@510 ($generated@@386 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@385 $generated@@510 $generated@@509)) (= (= $generated@@508 ($generated@@384 $generated@@510 $generated@@509)) (= ($generated@@464 $generated@@508) ($generated@@500 $generated@@90))))))
 :pattern ( ($generated@@464 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@369 (type $generated@@511))))
(let (($generated@@513 ($generated@@368 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@367 $generated@@513 $generated@@512)) (or (= $generated@@511 ($generated@@366 $generated@@513 $generated@@512)) (exists (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (and (and (= (type $generated@@514) $generated@@90) (= (type $generated@@515) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@456 $generated@@511) ($generated@@320 ($generated@@276 $generated@@514 $generated@@515)))))
 :no-pattern (type $generated@@514)
 :no-pattern (type $generated@@515)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
 :no-pattern ($generated $generated@@515)
 :no-pattern ($generated@@0 $generated@@515)
))))))
 :pattern ( ($generated@@456 $generated@@511))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@387 (type $generated@@516))))
(let (($generated@@518 ($generated@@386 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@385 $generated@@518 $generated@@517)) (or (= $generated@@516 ($generated@@384 $generated@@518 $generated@@517)) (exists (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (and (and (= (type $generated@@519) $generated@@90) (= (type $generated@@520) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@464 $generated@@516) ($generated@@320 ($generated@@276 $generated@@519 $generated@@520)))))
 :no-pattern (type $generated@@519)
 :no-pattern (type $generated@@520)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
 :no-pattern ($generated $generated@@520)
 :no-pattern ($generated@@0 $generated@@520)
))))))
 :pattern ( ($generated@@464 $generated@@516))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@90) ($generated@@277 $generated@@521 $generated@@46)) (and (= ($generated@@320 ($generated@@88 $generated@@2 $generated@@521)) $generated@@521) ($generated@@84 ($generated@@88 $generated@@2 $generated@@521) $generated@@46)))
 :pattern ( ($generated@@277 $generated@@521 $generated@@46))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@90) ($generated@@277 $generated@@522 $generated@@47)) (and (= ($generated@@320 ($generated@@88 $generated@@3 $generated@@522)) $generated@@522) ($generated@@84 ($generated@@88 $generated@@3 $generated@@522) $generated@@47)))
 :pattern ( ($generated@@277 $generated@@522 $generated@@47))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@90) ($generated@@277 $generated@@523 $generated@@44)) (and (= ($generated@@320 ($generated@@88 $generated@@4 $generated@@523)) $generated@@523) ($generated@@84 ($generated@@88 $generated@@4 $generated@@523) $generated@@44)))
 :pattern ( ($generated@@277 $generated@@523 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@524) 21))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@90) ($generated@@277 $generated@@525 $generated@@45)) (and (= ($generated@@320 ($generated@@88 $generated@@524 $generated@@525)) $generated@@525) ($generated@@84 ($generated@@88 $generated@@524 $generated@@525) $generated@@45)))
 :pattern ( ($generated@@277 $generated@@525 $generated@@45))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@277 ($generated@@320 $generated@@526) $generated@@527) ($generated@@84 $generated@@526 $generated@@527)))
 :pattern ( ($generated@@277 ($generated@@320 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@108 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@105 $generated@@529 $generated@@2)) (<= 0 ($generated@@356 $generated@@528))))
 :pattern ( ($generated@@356 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@347 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@346 $generated@@531)) (<= 0 ($generated@@345 $generated@@530))))
 :pattern ( ($generated@@345 $generated@@530))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@68) (= (type $generated@@535) $generated@@68)) (= ($generated@@532 ($generated@@482 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@482 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@68) (= (type $generated@@539) $generated@@68)) (= ($generated@@536 ($generated@@482 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@482 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= ($generated@@76 ($generated@@482 $generated@@540 $generated@@541)) $generated@@58))
 :pattern ( ($generated@@482 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@68) (= (type $generated@@545) $generated@@68)) (= ($generated@@542 ($generated@@490 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@490 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@68) (= (type $generated@@549) $generated@@68)) (= ($generated@@546 ($generated@@490 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@490 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (= ($generated@@76 ($generated@@490 $generated@@550 $generated@@551)) $generated@@59))
 :pattern ( ($generated@@490 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@90) (= (type $generated@@553) $generated@@90)) (= ($generated@@202 ($generated@@276 $generated@@552 $generated@@553)) $generated@@61))
 :pattern ( ($generated@@276 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@68)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@68) (= (type $generated@@557) $generated@@68)) (= ($generated@@554 ($generated@@189 $generated@@556 $generated@@557)) $generated@@556))
 :pattern ( ($generated@@189 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@68) (= (type $generated@@561) $generated@@68)) (= ($generated@@558 ($generated@@189 $generated@@560 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@189 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@90) (= (type $generated@@563) $generated@@90)) (= ($generated@@196 ($generated@@276 $generated@@562 $generated@@563)) $generated@@562))
 :pattern ( ($generated@@276 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@90) (= (type $generated@@565) $generated@@90)) (= ($generated@@197 ($generated@@276 $generated@@564 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@276 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@90) (= (type $generated@@567) $generated@@82)) (= ($generated@@202 ($generated@@314 $generated@@566 $generated@@567)) $generated@@65))
 :pattern ( ($generated@@314 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@90) (= (type $generated@@569) $generated@@82)) (= ($generated@@89 ($generated@@314 $generated@@568 $generated@@569)) $generated@@568))
 :pattern ( ($generated@@314 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@90) (= (type $generated@@571) $generated@@82)) (= ($generated@@87 ($generated@@314 $generated@@570 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@314 $generated@@570 $generated@@571))
)))
(assert  (and (forall (($generated@@574 T@U) ) (! (= (type ($generated@@572 $generated@@574)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@574))
)) (forall (($generated@@575 T@U) ($generated@@576 Int) ) (! (let (($generated@@577 ($generated@@347 (type $generated@@575))))
(= (type ($generated@@573 $generated@@575 $generated@@576)) $generated@@577))
 :pattern ( ($generated@@573 $generated@@575 $generated@@576))
))))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@346 $generated@@90)) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@578 ($generated@@572 $generated@@579) $generated@@580) (forall (($generated@@581 Int) ) (!  (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@345 $generated@@578))) ($generated@@329 ($generated@@573 $generated@@578 $generated@@581) $generated@@579 $generated@@580))
 :pattern ( ($generated@@573 $generated@@578 $generated@@581))
))))
 :pattern ( ($generated@@103 $generated@@578 ($generated@@572 $generated@@579) $generated@@580))
)))
(assert (forall (($generated@@583 Int) ) (! (= ($generated@@582 ($generated@@104 $generated@@583)) $generated@@583)
 :pattern ( ($generated@@104 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@68)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@68) (= ($generated@@584 ($generated@@300 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@300 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@68) (= ($generated@@76 ($generated@@300 $generated@@587)) $generated@@54))
 :pattern ( ($generated@@300 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@68)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@68) (= ($generated@@588 ($generated@@305 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@305 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@68) (= ($generated@@76 ($generated@@305 $generated@@591)) $generated@@55))
 :pattern ( ($generated@@305 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@68)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@68) (= ($generated@@592 ($generated@@212 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@212 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@68) (= ($generated@@76 ($generated@@212 $generated@@595)) $generated@@56))
 :pattern ( ($generated@@212 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@68)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@68) (= ($generated@@596 ($generated@@572 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@572 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@68) (= ($generated@@76 ($generated@@572 $generated@@599)) $generated@@57))
 :pattern ( ($generated@@572 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@68)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@68) (= ($generated@@600 ($generated@@85 $generated@@602)) $generated@@602))
 :pattern ( ($generated@@85 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
(= ($generated@@88 $generated@@604 ($generated@@320 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@320 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@605) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) $generated@@68)) (= ($generated@@84 $generated@@605 ($generated@@482 $generated@@606 $generated@@607)) (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@365 $generated@@605) $generated@@608))) (and ($generated@@277 ($generated@@110 ($generated@@457 $generated@@605) $generated@@608) $generated@@607) ($generated@@277 $generated@@608 $generated@@606)))
 :pattern ( ($generated@@110 ($generated@@457 $generated@@605) $generated@@608))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@605) $generated@@608))
))))
 :pattern ( ($generated@@84 $generated@@605 ($generated@@482 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@385 $generated@@90 $generated@@90)) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) $generated@@68)) (= ($generated@@84 $generated@@609 ($generated@@490 $generated@@610 $generated@@611)) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@383 $generated@@609) $generated@@612))) (and ($generated@@277 ($generated@@110 ($generated@@465 $generated@@609) $generated@@612) $generated@@611) ($generated@@277 $generated@@612 $generated@@610)))
 :pattern ( ($generated@@110 ($generated@@465 $generated@@609) $generated@@612))
 :pattern ( ($generated@@110 ($generated@@383 $generated@@609) $generated@@612))
))))
 :pattern ( ($generated@@84 $generated@@609 ($generated@@490 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@90) (= (type $generated@@616) $generated@@90)) (< ($generated@@613 $generated@@615) ($generated@@614 ($generated@@276 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@276 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@90) (= (type $generated@@618) $generated@@90)) (< ($generated@@613 $generated@@618) ($generated@@614 ($generated@@276 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@276 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@90) (= (type $generated@@620) $generated@@82)) (< ($generated@@613 $generated@@619) ($generated@@614 ($generated@@314 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@314 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@90) (= (type $generated@@622) $generated@@82)) (< ($generated@@614 $generated@@622) ($generated@@614 ($generated@@314 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@314 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@90) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) $generated@@68)) ($generated@@277 $generated@@623 ($generated@@482 $generated@@624 $generated@@625))) (and (= ($generated@@320 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@623)) $generated@@623) ($generated@@84 ($generated@@88 ($generated@@367 $generated@@90 $generated@@90) $generated@@623) ($generated@@482 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@277 $generated@@623 ($generated@@482 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@90) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) $generated@@68)) ($generated@@277 $generated@@626 ($generated@@490 $generated@@627 $generated@@628))) (and (= ($generated@@320 ($generated@@88 ($generated@@385 $generated@@90 $generated@@90) $generated@@626)) $generated@@626) ($generated@@84 ($generated@@88 ($generated@@385 $generated@@90 $generated@@90) $generated@@626) ($generated@@490 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@277 $generated@@626 ($generated@@490 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@68) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) $generated@@90)) ($generated@@277 $generated@@631 ($generated@@189 $generated@@629 $generated@@630))) (and (= ($generated@@320 ($generated@@88 $generated@@82 $generated@@631)) $generated@@631) ($generated@@84 ($generated@@88 $generated@@82 $generated@@631) ($generated@@189 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@277 $generated@@631 ($generated@@189 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@82) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@273 $generated@@634) (and ($generated@@293 $generated@@632) ($generated@@103 $generated@@632 ($generated@@85 $generated@@633) $generated@@634)))) ($generated@@329 ($generated@@89 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@329 ($generated@@89 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 (type $generated@@635)))
 (not ($generated@@0 ($generated@@110 ($generated@@500 $generated@@636) $generated@@635))))
 :pattern ( (let (($generated@@636 (type $generated@@635)))
($generated@@110 ($generated@@500 $generated@@636) $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@68) (= (type $generated@@638) $generated@@68)) (and (= ($generated@@76 ($generated@@189 $generated@@637 $generated@@638)) $generated@@62) (= ($generated@@362 ($generated@@189 $generated@@637 $generated@@638)) $generated@@66)))
 :pattern ( ($generated@@189 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@82) (= ($generated@@613 ($generated@@320 $generated@@639)) ($generated@@614 $generated@@639)))
 :pattern ( ($generated@@613 ($generated@@320 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@90) ($generated@@277 $generated@@640 ($generated@@104 0))) (and (= ($generated@@320 ($generated@@88 $generated@@2 $generated@@640)) $generated@@640) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@640) ($generated@@104 0))))
 :pattern ( ($generated@@277 $generated@@640 ($generated@@104 0)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@90) (= (type $generated@@642) $generated@@68)) ($generated@@277 $generated@@641 ($generated@@300 $generated@@642))) (and (= ($generated@@320 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@641)) $generated@@641) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@641) ($generated@@300 $generated@@642))))
 :pattern ( ($generated@@277 $generated@@641 ($generated@@300 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@90) (= (type $generated@@644) $generated@@68)) ($generated@@277 $generated@@643 ($generated@@305 $generated@@644))) (and (= ($generated@@320 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@643)) $generated@@643) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@643) ($generated@@305 $generated@@644))))
 :pattern ( ($generated@@277 $generated@@643 ($generated@@305 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@90) (= (type $generated@@646) $generated@@68)) ($generated@@277 $generated@@645 ($generated@@212 $generated@@646))) (and (= ($generated@@320 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@645)) $generated@@645) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@645) ($generated@@212 $generated@@646))))
 :pattern ( ($generated@@277 $generated@@645 ($generated@@212 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@90) (= (type $generated@@648) $generated@@68)) ($generated@@277 $generated@@647 ($generated@@572 $generated@@648))) (and (= ($generated@@320 ($generated@@88 ($generated@@346 $generated@@90) $generated@@647)) $generated@@647) ($generated@@84 ($generated@@88 ($generated@@346 $generated@@90) $generated@@647) ($generated@@572 $generated@@648))))
 :pattern ( ($generated@@277 $generated@@647 ($generated@@572 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@649) $generated@@68) (= (type $generated@@650) $generated@@90)) ($generated@@277 $generated@@650 ($generated@@85 $generated@@649))) (and (= ($generated@@320 ($generated@@88 $generated@@82 $generated@@650)) $generated@@650) ($generated@@84 ($generated@@88 $generated@@82 $generated@@650) ($generated@@85 $generated@@649))))
 :pattern ( ($generated@@277 $generated@@650 ($generated@@85 $generated@@649)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) $generated@@82) (= (type $generated@@652) $generated@@68)) (= (type $generated@@653) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@273 $generated@@653) (and ($generated@@293 $generated@@651) ($generated@@103 $generated@@651 ($generated@@85 $generated@@652) $generated@@653)))) ($generated@@103 ($generated@@87 $generated@@651) ($generated@@85 $generated@@652) $generated@@653))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@651) ($generated@@85 $generated@@652) $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@654) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@655) $generated@@68)) (= (type $generated@@656) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@654 ($generated@@212 $generated@@655) $generated@@656) (forall (($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@654 $generated@@657)))) ($generated@@329 $generated@@657 $generated@@655 $generated@@656))
 :pattern ( ($generated@@110 $generated@@654 $generated@@657))
))))
 :pattern ( ($generated@@103 $generated@@654 ($generated@@212 $generated@@655) $generated@@656))
)))
(assert (= $generated@@203 ($generated@@180 $generated@@203)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) $generated@@82) (= (type $generated@@659) $generated@@68)) (= (type $generated@@660) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@273 $generated@@660) (and ($generated@@188 $generated@@658) (exists (($generated@@661 T@U) ) (!  (and (= (type $generated@@661) $generated@@68) ($generated@@103 $generated@@658 ($generated@@189 $generated@@659 $generated@@661) $generated@@660))
 :pattern ( ($generated@@103 $generated@@658 ($generated@@189 $generated@@659 $generated@@661) $generated@@660))
))))) ($generated@@329 ($generated@@196 $generated@@658) $generated@@659 $generated@@660))
 :pattern ( ($generated@@329 ($generated@@196 $generated@@658) $generated@@659 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) $generated@@82) (= (type $generated@@663) $generated@@68)) (= (type $generated@@664) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@273 $generated@@664) (and ($generated@@188 $generated@@662) (exists (($generated@@665 T@U) ) (!  (and (= (type $generated@@665) $generated@@68) ($generated@@103 $generated@@662 ($generated@@189 $generated@@665 $generated@@663) $generated@@664))
 :pattern ( ($generated@@103 $generated@@662 ($generated@@189 $generated@@665 $generated@@663) $generated@@664))
))))) ($generated@@329 ($generated@@197 $generated@@662) $generated@@663 $generated@@664))
 :pattern ( ($generated@@329 ($generated@@197 $generated@@662) $generated@@663 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@90) (= (type $generated@@667) $generated@@90)) (= ($generated@@276 ($generated@@180 $generated@@666) ($generated@@180 $generated@@667)) ($generated@@180 ($generated@@276 $generated@@666 $generated@@667))))
 :pattern ( ($generated@@276 ($generated@@180 $generated@@666) ($generated@@180 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@90) (= (type $generated@@669) $generated@@82)) (= ($generated@@314 ($generated@@180 $generated@@668) ($generated@@180 $generated@@669)) ($generated@@180 ($generated@@314 $generated@@668 $generated@@669))))
 :pattern ( ($generated@@314 ($generated@@180 $generated@@668) ($generated@@180 $generated@@669)))
)))
(assert (forall (($generated@@670 Int) ) (! (= ($generated@@320 ($generated@@8 ($generated@@205 $generated@@670))) ($generated@@180 ($generated@@320 ($generated@@8 $generated@@670))))
 :pattern ( ($generated@@320 ($generated@@8 ($generated@@205 $generated@@670))))
)))
(assert (forall (($generated@@671 T@U) ) (! (= ($generated@@320 ($generated@@180 $generated@@671)) ($generated@@180 ($generated@@320 $generated@@671)))
 :pattern ( ($generated@@320 ($generated@@180 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (! (let (($generated@@673 ($generated@@347 (type $generated@@672))))
 (=> (and (= (type $generated@@672) ($generated@@346 $generated@@673)) (= ($generated@@345 $generated@@672) 0)) (= $generated@@672 ($generated@@344 $generated@@673))))
 :pattern ( ($generated@@345 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (! (let (($generated@@677 (type $generated@@675)))
 (=> (and (and (= (type $generated@@674) ($generated@@105 $generated@@677 $generated@@2)) (= (type $generated@@676) $generated@@2)) (<= 0 ($generated $generated@@676))) (= ($generated@@356 ($generated@@111 $generated@@674 $generated@@675 $generated@@676)) (+ (- ($generated@@356 $generated@@674) ($generated ($generated@@110 $generated@@674 $generated@@675))) ($generated $generated@@676)))))
 :pattern ( ($generated@@356 ($generated@@111 $generated@@674 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@679) $generated@@2)) ($generated@@103 $generated@@679 $generated@@46 $generated@@678))
 :pattern ( ($generated@@103 $generated@@679 $generated@@46 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@681) $generated@@3)) ($generated@@103 $generated@@681 $generated@@47 $generated@@680))
 :pattern ( ($generated@@103 $generated@@681 $generated@@47 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@683) $generated@@4)) ($generated@@103 $generated@@683 $generated@@44 $generated@@682))
 :pattern ( ($generated@@103 $generated@@683 $generated@@44 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@685) $generated@@524)) ($generated@@103 $generated@@685 $generated@@45 $generated@@684))
 :pattern ( ($generated@@103 $generated@@685 $generated@@45 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@687) $generated@@90)) ($generated@@103 $generated@@687 $generated@@48 $generated@@686))
 :pattern ( ($generated@@103 $generated@@687 $generated@@48 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@688) $generated@@68) (= (type $generated@@689) $generated@@90)) (= (type $generated@@690) $generated@@82)) (= (type $generated@@691) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@273 $generated@@691)) (= ($generated@@103 ($generated@@314 $generated@@689 $generated@@690) ($generated@@85 $generated@@688) $generated@@691)  (and ($generated@@329 $generated@@689 $generated@@688 $generated@@691) ($generated@@103 $generated@@690 ($generated@@85 $generated@@688) $generated@@691))))
 :pattern ( ($generated@@103 ($generated@@314 $generated@@689 $generated@@690) ($generated@@85 $generated@@688) $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) ($generated@@346 $generated@@90)) (= (type $generated@@693) $generated@@68)) (= ($generated@@84 $generated@@692 ($generated@@572 $generated@@693)) (forall (($generated@@694 Int) ) (!  (=> (and (<= 0 $generated@@694) (< $generated@@694 ($generated@@345 $generated@@692))) ($generated@@277 ($generated@@573 $generated@@692 $generated@@694) $generated@@693))
 :pattern ( ($generated@@573 $generated@@692 $generated@@694))
))))
 :pattern ( ($generated@@84 $generated@@692 ($generated@@572 $generated@@693)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 Int) ) (!  (=> (= (type $generated@@696) ($generated@@346 $generated@@90)) (=> (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@345 $generated@@696))) (< ($generated@@614 ($generated@@88 $generated@@82 ($generated@@573 $generated@@696 $generated@@697))) ($generated@@695 $generated@@696))))
 :pattern ( ($generated@@614 ($generated@@88 $generated@@82 ($generated@@573 $generated@@696 $generated@@697))))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (= (type $generated@@698) ($generated@@367 $generated@@90 $generated@@90)) (= (type $generated@@699) $generated@@68)) (= (type $generated@@700) $generated@@68)) ($generated@@84 $generated@@698 ($generated@@482 $generated@@699 $generated@@700))) (and (and ($generated@@84 ($generated@@365 $generated@@698) ($generated@@300 $generated@@699)) ($generated@@84 ($generated@@408 $generated@@698) ($generated@@300 $generated@@700))) ($generated@@84 ($generated@@456 $generated@@698) ($generated@@300 ($generated@@189 $generated@@699 $generated@@700)))))
 :pattern ( ($generated@@84 $generated@@698 ($generated@@482 $generated@@699 $generated@@700)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) ($generated@@385 $generated@@90 $generated@@90)) (= (type $generated@@702) $generated@@68)) (= (type $generated@@703) $generated@@68)) ($generated@@84 $generated@@701 ($generated@@490 $generated@@702 $generated@@703))) (and (and ($generated@@84 ($generated@@383 $generated@@701) ($generated@@305 $generated@@702)) ($generated@@84 ($generated@@419 $generated@@701) ($generated@@305 $generated@@703))) ($generated@@84 ($generated@@464 $generated@@701) ($generated@@305 ($generated@@189 $generated@@702 $generated@@703)))))
 :pattern ( ($generated@@84 $generated@@701 ($generated@@490 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@2) ($generated@@84 $generated@@704 $generated@@46))
 :pattern ( ($generated@@84 $generated@@704 $generated@@46))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@3) ($generated@@84 $generated@@705 $generated@@47))
 :pattern ( ($generated@@84 $generated@@705 $generated@@47))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@4) ($generated@@84 $generated@@706 $generated@@44))
 :pattern ( ($generated@@84 $generated@@706 $generated@@44))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@524) ($generated@@84 $generated@@707 $generated@@45))
 :pattern ( ($generated@@84 $generated@@707 $generated@@45))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@90) ($generated@@84 $generated@@708 $generated@@48))
 :pattern ( ($generated@@84 $generated@@708 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@709 () Int)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@710) $generated@@82) (= (type $generated@@712) $generated@@82)) (= (type $generated@@713) ($generated@@219 $generated@@106 $generated@@4))) (= (type $generated@@714) $generated@@106)) (= (type $generated@@715) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@716) ($generated@@105 $generated@@106 $generated@@107))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@718  (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@181 ($generated@@314 ($generated@@320 ($generated@@8 $generated@@709)) $generated@@710) ($generated@@161 ($generated@@80 $generated@@170) $generated@@709 $generated@@710)) (or ($generated@@179 ($generated@@314 ($generated@@320 ($generated@@8 $generated@@709)) $generated@@710) ($generated@@161 ($generated@@80 $generated@@170) $generated@@709 $generated@@710)) (forall (($generated@@719 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@719 ($generated@@314 ($generated@@320 ($generated@@8 $generated@@709)) $generated@@710)) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@719 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@709 $generated@@710))))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@719 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@709 $generated@@710)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@719 ($generated@@314 ($generated@@320 ($generated@@8 $generated@@709)) $generated@@710)))
)))))))
(let (($generated@@720  (=> (= $generated@@710 ($generated@@314 ($generated@@320 ($generated@@8 $generated@@711)) $generated@@712)) (=> (and ($generated@@84 $generated@@712 ($generated@@85 $generated@@46)) (= (ControlFlow 0 5) 3)) $generated@@718))))
(let (($generated@@721  (=> (and (= $generated@@710 $generated@@203) (= (ControlFlow 0 4) 3)) $generated@@718)))
(let (($generated@@722 true))
(let (($generated@@723  (=> (not (= $generated@@710 $generated@@203)) (and (=> (= (ControlFlow 0 6) 5) $generated@@720) (=> (= (ControlFlow 0 6) 1) $generated@@722)))))
(let (($generated@@724  (=> (and (= $generated@@713 ($generated@@218 $generated@@714 $generated@@715 $generated@@60 false)) ($generated@@437 $generated@@710)) (=> (and (and ($generated@@273 $generated@@716) ($generated@@717 $generated@@716)) (and (= $generated@@715 $generated@@716) (forall (($generated@@725 T@U) ($generated@@726 Int) ) (!  (=> (= (type $generated@@725) $generated@@82) (=> (and (and ($generated@@84 $generated@@725 ($generated@@85 $generated@@46)) ($generated@@0 ($generated@@180 ($generated@@11 true)))) (or (< ($generated@@614 $generated@@725) ($generated@@614 $generated@@710)) (and (= ($generated@@614 $generated@@725) ($generated@@614 $generated@@710)) (and (<= 0 $generated@@726) (< $generated@@726 $generated@@709))))) ($generated@@179 ($generated@@314 ($generated@@320 ($generated@@8 $generated@@726)) $generated@@725) ($generated@@161 ($generated@@80 $generated@@170) $generated@@726 $generated@@725))))
 :no-pattern (type $generated@@725)
 :no-pattern ($generated $generated@@725)
 :no-pattern ($generated@@0 $generated@@725)
)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@721) (=> (= (ControlFlow 0 7) 6) $generated@@723))))))
(let (($generated@@727  (=> (and ($generated@@273 $generated@@715) ($generated@@717 $generated@@715)) (=> (and (and (and ($generated@@84 $generated@@710 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@710 ($generated@@85 $generated@@46) $generated@@715)) ($generated@@437 $generated@@710)) (and (= 3 $generated@@78) (= (ControlFlow 0 8) 7))) $generated@@724))))
$generated@@727))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U Int T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (Int T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@184 (T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@186 (T@T T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U T@U) Bool)
(declare-fun $generated@@318 (T@T) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@414 (T@U) Bool)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@T) T@U)
(declare-fun $generated@@503 () T@T)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@554 (T@U Int) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@684 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 T@U) ) (! (= (type ($generated@@137 $generated@@143 $generated@@144 $generated@@145)) $generated@@139)
 :pattern ( ($generated@@137 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@142 $generated@@146))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@147) $generated@@138) (= (type $generated@@149) $generated@@139)) (or ($generated@@140 $generated@@148 $generated@@149) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@149 ($generated@@142 $generated@@46))))) ($generated@@141 ($generated@@137 $generated@@147 $generated@@148 $generated@@149) ($generated@@142 $generated@@46)))
 :pattern ( ($generated@@137 $generated@@147 $generated@@148 $generated@@149))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@138) (= (type $generated@@153) $generated@@139)) (or ($generated@@151 $generated@@153) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@153 ($generated@@142 $generated@@46))))) true)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@138)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@138)))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@138) (= (type $generated@@159) $generated@@139)) (= ($generated@@137 $generated@@157 $generated@@158 $generated@@159) ($generated@@137 $generated@@155 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@137 ($generated@@154 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@141 $generated@@160 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@79 0)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@163 $generated@@164)) $generated@@68)
 :pattern ( ($generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@68) (= (type $generated@@166) $generated@@68)) (= (type $generated@@167) $generated@@139)) ($generated@@141 $generated@@167 ($generated@@162 $generated@@165 $generated@@166))) ($generated@@161 $generated@@167))
 :pattern ( ($generated@@161 $generated@@167) ($generated@@141 $generated@@167 ($generated@@162 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 16) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@139) (= (type $generated@@175) $generated@@139)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@72)
 :pattern ( ($generated@@176 $generated@@178))
)) (= (type $generated@@177) $generated@@139)))
(assert (= ($generated@@176 $generated@@177) $generated@@63))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@68)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@80 $generated@@171 $generated@@2)) (= (type $generated@@183) $generated@@68)) ($generated@@141 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@141 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (= ($generated@@1 ($generated@@186 $generated@@190 $generated@@191)) 17)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@187 ($generated@@186 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@186 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@188 ($generated@@186 $generated@@194 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@186 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@188 (type $generated@@196))))
(= (type ($generated@@184 $generated@@196 $generated@@197 $generated@@198)) $generated@@199))
 :pattern ( ($generated@@184 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(let (($generated@@205 (type $generated@@201)))
(= (type ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@186 $generated@@205 $generated@@204))))
 :pattern ( ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@188 (type $generated@@206))))
 (=> (= (type $generated@@209) $generated@@210) (= ($generated@@184 ($generated@@189 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@207 $generated@@208) $generated@@209)))
 :weight 0
))) (and (and (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@184 ($generated@@189 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@184 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@184 ($generated@@189 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@184 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or true (= ($generated@@184 ($generated@@189 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@184 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ) (! (= (type ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232)) ($generated@@186 $generated@@81 $generated@@4))
 :pattern ( ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@71 (type $generated@@238))))
 (=> (and (and (and (and (= (type $generated@@233) $generated@@81) (= (type $generated@@234) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@235) ($generated@@70 $generated@@4))) (= (type $generated@@237) $generated@@81)) (= (type $generated@@238) ($generated@@70 $generated@@239))) (= ($generated@@0 ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))  (=> (and (not (= $generated@@237 $generated@@233)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@234 $generated@@237) $generated@@235))) $generated@@236))))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@240 $generated@@242)) ($generated@@78 $generated@@177 ($generated@@142 $generated@@241) $generated@@242))
 :pattern ( ($generated@@78 $generated@@177 ($generated@@142 $generated@@241) $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@139)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@68) (= (type $generated@@248) $generated@@68)) (= (type $generated@@249) $generated@@171)) (= (type $generated@@250) $generated@@171)) (= ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@162 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@162 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@68) ($generated@@141 $generated@@177 ($generated@@142 $generated@@251)))
 :pattern ( ($generated@@141 $generated@@177 ($generated@@142 $generated@@251)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@139) (= (type $generated@@253) $generated@@139)) (= ($generated@@168 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@168 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@139) (= (type $generated@@256) $generated@@139)) (= ($generated@@254 $generated@@255 $generated@@256) (= $generated@@255 $generated@@256)))
 :pattern ( ($generated@@254 $generated@@255 $generated@@256))
)))
(assert  (and (forall (($generated@@260 T@U) ) (! (= (type ($generated@@258 $generated@@260)) $generated@@171)
 :pattern ( ($generated@@258 $generated@@260))
)) (forall (($generated@@261 T@U) ) (! (= (type ($generated@@259 $generated@@261)) $generated@@139)
 :pattern ( ($generated@@259 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@262) $generated@@139) (= (type $generated@@263) $generated@@139)) (and ($generated@@257 $generated@@262) ($generated@@257 $generated@@263))) (= ($generated@@254 $generated@@262 $generated@@263)  (and (= ($generated@@258 $generated@@262) ($generated@@258 $generated@@263)) ($generated@@254 ($generated@@259 $generated@@262) ($generated@@259 $generated@@263)))))
 :pattern ( ($generated@@254 $generated@@262 $generated@@263) ($generated@@257 $generated@@262))
 :pattern ( ($generated@@254 $generated@@262 $generated@@263) ($generated@@257 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@141 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@171) ($generated@@0 ($generated@@85 $generated@@266 $generated@@268))) ($generated@@244 $generated@@268 $generated@@267))
 :pattern ( ($generated@@85 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@141 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@141 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@171) ($generated@@0 ($generated@@85 $generated@@271 $generated@@273))) ($generated@@244 $generated@@273 $generated@@272))
 :pattern ( ($generated@@85 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@141 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (= (type $generated@@281) $generated@@139) (= (type $generated@@282) $generated@@139)) (and ($generated@@280 $generated@@281) ($generated@@280 $generated@@282))) (= ($generated@@254 $generated@@281 $generated@@282) true))
 :pattern ( ($generated@@254 $generated@@281 $generated@@282) ($generated@@280 $generated@@281))
 :pattern ( ($generated@@254 $generated@@281 $generated@@282) ($generated@@280 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@283 $generated@@284 $generated@@285)) $generated@@139)
 :pattern ( ($generated@@283 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (= (type $generated@@286) $generated@@68) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@139)) (= ($generated@@141 ($generated@@283 $generated@@287 $generated@@288) ($generated@@142 $generated@@286))  (and ($generated@@244 $generated@@287 $generated@@286) ($generated@@141 $generated@@288 ($generated@@142 $generated@@286)))))
 :pattern ( ($generated@@141 ($generated@@283 $generated@@287 $generated@@288) ($generated@@142 $generated@@286)))
)))
(assert  (and (and (forall (($generated@@292 T@U) ) (! (= (type ($generated@@289 $generated@@292)) $generated@@138)
 :pattern ( ($generated@@289 $generated@@292))
)) (forall (($generated@@293 T@T) ($generated@@294 T@U) ) (! (= (type ($generated@@290 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@U) ) (! (= (type ($generated@@291 $generated@@295)) $generated@@171)
 :pattern ( ($generated@@291 $generated@@295))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@296 T@U) ($generated@@297 Int) ($generated@@298 T@U) ) (!  (=> (and (and (= (type $generated@@296) $generated@@138) (= (type $generated@@298) $generated@@139)) (or ($generated@@140 $generated@@297 $generated@@298) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@298 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@280 $generated@@298)) (let (($generated@@299 ($generated@@259 $generated@@298)))
(let (($generated@@300 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@298)))))
 (=> (< $generated@@300 $generated@@297) ($generated@@140 $generated@@297 $generated@@299))))) (= ($generated@@137 ($generated@@289 $generated@@296) $generated@@297 $generated@@298) (ite ($generated@@280 $generated@@298) ($generated@@283 ($generated@@291 ($generated@@8 $generated@@297)) ($generated@@276 $generated@@177)) (let (($generated@@301 ($generated@@259 $generated@@298)))
(let (($generated@@302 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@298)))))
(ite (<= $generated@@297 $generated@@302) ($generated@@283 ($generated@@291 ($generated@@8 $generated@@297)) $generated@@298) ($generated@@283 ($generated@@291 ($generated@@8 $generated@@302)) ($generated@@137 $generated@@296 $generated@@297 $generated@@301)))))))))
 :pattern ( ($generated@@137 ($generated@@289 $generated@@296) $generated@@297 $generated@@298))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@304) $generated@@68) (= (type $generated@@305) $generated@@68)) (= (type $generated@@306) $generated@@171)) (= (type $generated@@307) $generated@@171)) (= (type $generated@@308) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@240 $generated@@308)) (= ($generated@@78 ($generated@@243 $generated@@306 $generated@@307) ($generated@@162 $generated@@304 $generated@@305) $generated@@308)  (and ($generated@@303 $generated@@306 $generated@@304 $generated@@308) ($generated@@303 $generated@@307 $generated@@305 $generated@@308))))
 :pattern ( ($generated@@78 ($generated@@243 $generated@@306 $generated@@307) ($generated@@162 $generated@@304 $generated@@305) $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@139) (= ($generated@@161 $generated@@309) (= ($generated@@176 $generated@@309) $generated@@61)))
 :pattern ( ($generated@@161 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@139) (= ($generated@@280 $generated@@310) (= ($generated@@176 $generated@@310) $generated@@63)))
 :pattern ( ($generated@@280 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@139) (= ($generated@@257 $generated@@311) (= ($generated@@176 $generated@@311) $generated@@65)))
 :pattern ( ($generated@@257 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@139) ($generated@@161 $generated@@312)) (exists (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (and (and (= (type $generated@@313) $generated@@171) (= (type $generated@@314) $generated@@171)) (= $generated@@312 ($generated@@243 $generated@@313 $generated@@314)))
 :no-pattern (type $generated@@313)
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@161 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@139) ($generated@@257 $generated@@315)) (exists (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (and (and (= (type $generated@@316) $generated@@171) (= (type $generated@@317) $generated@@139)) (= $generated@@315 ($generated@@283 $generated@@316 $generated@@317)))
 :no-pattern (type $generated@@316)
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@257 $generated@@315))
)))
(assert  (and (and (forall (($generated@@322 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@322)) 18)) (forall (($generated@@323 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@320 $generated@@323))
))) (forall (($generated@@324 T@T) ) (! (= (type ($generated@@318 $generated@@324)) ($generated@@320 $generated@@324))
 :pattern ( ($generated@@318 $generated@@324))
))))
(assert (forall (($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@325)) 0)
 :pattern ( ($generated@@318 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@139) ($generated@@280 $generated@@326)) (= $generated@@326 $generated@@177))
 :pattern ( ($generated@@280 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@68) (= (type $generated@@329) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@303 ($generated@@291 $generated@@327) $generated@@328 $generated@@329) ($generated@@78 $generated@@327 $generated@@328 $generated@@329)))
 :pattern ( ($generated@@303 ($generated@@291 $generated@@327) $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@80 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@83 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@80 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@85 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@73)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@68) (and (= ($generated@@76 ($generated@@142 $generated@@338)) $generated@@64) (= ($generated@@336 ($generated@@142 $generated@@338)) $generated@@67)))
 :pattern ( ($generated@@142 $generated@@338))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 19)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@80 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@85 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@85 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert  (and (and (and (and (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (= ($generated@@1 ($generated@@359 $generated@@362 $generated@@363)) 20)) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@359 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@361 ($generated@@359 $generated@@366 $generated@@367)) $generated@@367)
 :pattern ( ($generated@@359 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@360 (type $generated@@368))))
(= (type ($generated@@357 $generated@@368)) ($generated@@80 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@368))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= (type ($generated@@358 $generated@@370 $generated@@371)) ($generated@@359 $generated@@370 $generated@@371))
 :pattern ( ($generated@@358 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@T) ) (! (let (($generated@@374 (type $generated@@372)))
 (not ($generated@@0 ($generated@@85 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372))))
 :pattern ( (let (($generated@@374 (type $generated@@372)))
($generated@@85 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372)))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@83 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@80 $generated@@376 $generated@@2)) (= ($generated@@180 $generated@@375) (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@376) (and (<= 0 ($generated ($generated@@85 $generated@@375 $generated@@377))) (<= ($generated ($generated@@85 $generated@@375 $generated@@377)) ($generated@@330 $generated@@375))))
 :pattern ( ($generated@@85 $generated@@375 $generated@@377))
)))))
 :pattern ( ($generated@@180 $generated@@375))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@343 (type $generated@@378))))
(let (($generated@@380 ($generated@@342 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@341 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@340 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@85 ($generated@@339 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@339 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@343 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@80 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@343 (type $generated@@385))))
(let (($generated@@387 ($generated@@342 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@341 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@340 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@85 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@361 (type $generated@@389))))
(let (($generated@@391 ($generated@@360 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@359 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@358 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@357 $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@361 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394)) ($generated@@80 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@361 (type $generated@@396))))
(let (($generated@@398 ($generated@@360 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@359 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@358 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@397) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@393 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 Int) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@138) (= (type $generated@@402) $generated@@139)) (= ($generated@@137 ($generated@@289 $generated@@400) $generated@@401 $generated@@402) ($generated@@137 $generated@@400 $generated@@401 $generated@@402)))
 :pattern ( ($generated@@137 ($generated@@289 $generated@@400) $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@80 $generated@@171 $generated@@2)) (= (type $generated@@404) $generated@@68)) (= ($generated@@141 $generated@@403 ($generated@@179 $generated@@404)) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@171) (< 0 ($generated ($generated@@85 $generated@@403 $generated@@405)))) ($generated@@244 $generated@@405 $generated@@404))
 :pattern ( ($generated@@85 $generated@@403 $generated@@405))
))))
 :pattern ( ($generated@@141 $generated@@403 ($generated@@179 $generated@@404)))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (= (type $generated@@406) $generated@@138) (= (type $generated@@407) $generated@@139)) (or ($generated@@151 $generated@@407) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@407 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@280 $generated@@407)) (let (($generated@@408 ($generated@@259 $generated@@407)))
(let (($generated@@409 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@407)))))
 (=> (not ($generated@@280 $generated@@408)) (let (($generated@@410 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@408)))))
 (=> (<= $generated@@409 $generated@@410) ($generated@@151 $generated@@408))))))) (= ($generated@@150 ($generated@@289 $generated@@406) $generated@@407) (ite ($generated@@280 $generated@@407) true (let (($generated@@411 ($generated@@259 $generated@@407)))
(let (($generated@@412 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@407)))))
(ite ($generated@@280 $generated@@411) true (let (($generated@@413 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@411)))))
 (and (<= $generated@@412 $generated@@413) ($generated@@150 $generated@@406 $generated@@411))))))))))
 :pattern ( ($generated@@150 ($generated@@289 $generated@@406) $generated@@407))
))))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@139) ($generated@@414 $generated@@415)) (or ($generated@@280 $generated@@415) ($generated@@257 $generated@@415)))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@416 ($generated@@264 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@171) ($generated@@0 ($generated@@85 $generated@@416 $generated@@419))) ($generated@@303 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@85 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@416 ($generated@@264 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@420) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@421) $generated@@68)) (= (type $generated@@422) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@420 ($generated@@269 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@171) ($generated@@0 ($generated@@85 $generated@@420 $generated@@423))) ($generated@@303 $generated@@423 $generated@@421 $generated@@422))
 :pattern ( ($generated@@85 $generated@@420 $generated@@423))
))))
 :pattern ( ($generated@@78 $generated@@420 ($generated@@269 $generated@@421) $generated@@422))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@424 T@U) ($generated@@425 Int) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@424) $generated@@138) (= (type $generated@@426) $generated@@139)) (or ($generated@@140 ($generated@@274 $generated@@425) ($generated@@276 $generated@@426)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@426 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@276 ($generated@@11 ($generated@@280 ($generated@@276 $generated@@426)))))) (let (($generated@@427 ($generated@@276 ($generated@@259 ($generated@@276 $generated@@426)))))
(let (($generated@@428 ($generated@@274 ($generated ($generated@@290 $generated@@2 ($generated@@258 ($generated@@276 $generated@@426)))))))
 (=> (< $generated@@428 ($generated@@274 $generated@@425)) ($generated@@140 ($generated@@274 $generated@@425) $generated@@427))))) (= ($generated@@137 ($generated@@289 $generated@@424) ($generated@@274 $generated@@425) ($generated@@276 $generated@@426)) (ite ($generated@@280 ($generated@@276 $generated@@426)) ($generated@@283 ($generated@@291 ($generated@@8 ($generated@@274 $generated@@425))) ($generated@@276 $generated@@177)) (let (($generated@@429 ($generated@@276 ($generated@@259 ($generated@@276 $generated@@426)))))
(let (($generated@@430 ($generated@@274 ($generated ($generated@@290 $generated@@2 ($generated@@258 ($generated@@276 $generated@@426)))))))
(ite (<= ($generated@@274 $generated@@425) $generated@@430) ($generated@@283 ($generated@@291 ($generated@@8 ($generated@@274 $generated@@425))) ($generated@@276 $generated@@426)) ($generated@@283 ($generated@@291 ($generated@@8 $generated@@430)) ($generated@@276 ($generated@@137 ($generated@@289 $generated@@424) ($generated@@274 $generated@@425) $generated@@429))))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@289 $generated@@424) ($generated@@274 $generated@@425) ($generated@@276 $generated@@426)))
))))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(= ($generated ($generated@@85 ($generated@@331 $generated@@432) $generated@@431)) 0))
 :pattern ( (let (($generated@@432 (type $generated@@431)))
($generated@@85 ($generated@@331 $generated@@432) $generated@@431)))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@80 $generated@@171 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@343 (type $generated@@436))))
(let (($generated@@438 ($generated@@342 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@80 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@341 $generated@@171 $generated@@171)) (= (type $generated@@440) $generated@@171)) (= ($generated@@0 ($generated@@85 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@85 ($generated@@339 $generated@@439) ($generated@@169 ($generated@@290 $generated@@139 $generated@@440)))) (= ($generated@@85 ($generated@@434 $generated@@439) ($generated@@169 ($generated@@290 $generated@@139 $generated@@440))) ($generated@@170 ($generated@@290 $generated@@139 $generated@@440))))))
 :pattern ( ($generated@@85 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@80 $generated@@171 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@361 (type $generated@@444))))
(let (($generated@@446 ($generated@@360 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@80 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@359 $generated@@171 $generated@@171)) (= (type $generated@@448) $generated@@171)) (= ($generated@@0 ($generated@@85 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@85 ($generated@@357 $generated@@447) ($generated@@169 ($generated@@290 $generated@@139 $generated@@448)))) (= ($generated@@85 ($generated@@442 $generated@@447) ($generated@@169 ($generated@@290 $generated@@139 $generated@@448))) ($generated@@170 ($generated@@290 $generated@@139 $generated@@448))))))
 :pattern ( ($generated@@85 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@342 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@341 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@85 ($generated@@382 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@85 ($generated@@339 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@85 ($generated@@434 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@85 ($generated@@339 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@434 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@360 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@359 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@85 ($generated@@393 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@85 ($generated@@357 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@85 ($generated@@442 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@454) $generated@@458))
 :pattern ( ($generated@@85 ($generated@@442 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@341 $generated@@171 $generated@@171)) (= (type $generated@@463) $generated@@68)) (= (type $generated@@464) $generated@@68)) (= (type $generated@@465) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@339 $generated@@462) $generated@@466))) (and ($generated@@303 ($generated@@85 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@303 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@85 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@85 ($generated@@339 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@78 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@359 $generated@@171 $generated@@171)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@470) $generated@@474))) (and ($generated@@303 ($generated@@85 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@303 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@85 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@78 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@139)) ($generated@@141 $generated@@476 ($generated@@142 $generated@@475))) (or ($generated@@280 $generated@@476) ($generated@@257 $generated@@476)))
 :pattern ( ($generated@@257 $generated@@476) ($generated@@141 $generated@@476 ($generated@@142 $generated@@475)))
 :pattern ( ($generated@@280 $generated@@476) ($generated@@141 $generated@@476 ($generated@@142 $generated@@475)))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@138) (= (type $generated@@478) $generated@@139)) (= ($generated@@150 $generated@@477 $generated@@478) ($generated@@150 $generated@@155 $generated@@478)))
 :pattern ( ($generated@@150 ($generated@@154 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@T) ) (! (= (type ($generated@@479 $generated@@480)) ($generated@@80 $generated@@480 $generated@@4))
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@361 (type $generated@@481))))
(let (($generated@@483 ($generated@@360 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@359 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@358 $generated@@483 $generated@@482)) (= ($generated@@357 $generated@@481) ($generated@@479 $generated@@483))))))
 :pattern ( ($generated@@357 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@361 (type $generated@@484))))
(let (($generated@@486 ($generated@@360 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@359 $generated@@486 $generated@@485)) (= (= $generated@@484 ($generated@@358 $generated@@486 $generated@@485)) (= ($generated@@393 $generated@@484) ($generated@@479 $generated@@485))))))
 :pattern ( ($generated@@393 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@361 (type $generated@@487))))
(let (($generated@@489 ($generated@@360 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@359 $generated@@489 $generated@@488)) (= (= $generated@@487 ($generated@@358 $generated@@489 $generated@@488)) (= ($generated@@441 $generated@@487) ($generated@@479 $generated@@171))))))
 :pattern ( ($generated@@441 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@343 (type $generated@@490))))
(let (($generated@@492 ($generated@@342 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@341 $generated@@492 $generated@@491)) (or (= $generated@@490 ($generated@@340 $generated@@492 $generated@@491)) (exists (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (and (and (= (type $generated@@493) $generated@@171) (= (type $generated@@494) $generated@@171)) ($generated@@0 ($generated@@85 ($generated@@433 $generated@@490) ($generated@@291 ($generated@@243 $generated@@493 $generated@@494)))))
 :no-pattern (type $generated@@493)
 :no-pattern (type $generated@@494)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
))))))
 :pattern ( ($generated@@433 $generated@@490))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@361 (type $generated@@495))))
(let (($generated@@497 ($generated@@360 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@359 $generated@@497 $generated@@496)) (or (= $generated@@495 ($generated@@358 $generated@@497 $generated@@496)) (exists (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (and (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) ($generated@@0 ($generated@@85 ($generated@@441 $generated@@495) ($generated@@291 ($generated@@243 $generated@@498 $generated@@499)))))
 :no-pattern (type $generated@@498)
 :no-pattern (type $generated@@499)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
))))))
 :pattern ( ($generated@@441 $generated@@495))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@171) ($generated@@244 $generated@@500 $generated@@46)) (and (= ($generated@@291 ($generated@@290 $generated@@2 $generated@@500)) $generated@@500) ($generated@@141 ($generated@@290 $generated@@2 $generated@@500) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@500 $generated@@46))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@171) ($generated@@244 $generated@@501 $generated@@47)) (and (= ($generated@@291 ($generated@@290 $generated@@3 $generated@@501)) $generated@@501) ($generated@@141 ($generated@@290 $generated@@3 $generated@@501) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@501 $generated@@47))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@171) ($generated@@244 $generated@@502 $generated@@44)) (and (= ($generated@@291 ($generated@@290 $generated@@4 $generated@@502)) $generated@@502) ($generated@@141 ($generated@@290 $generated@@4 $generated@@502) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@502 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@503) 21))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@171) ($generated@@244 $generated@@504 $generated@@45)) (and (= ($generated@@291 ($generated@@290 $generated@@503 $generated@@504)) $generated@@504) ($generated@@141 ($generated@@290 $generated@@503 $generated@@504) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@504 $generated@@45))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@138) (= (type $generated@@506) $generated@@139)) (= ($generated@@150 ($generated@@289 $generated@@505) $generated@@506) ($generated@@150 $generated@@505 $generated@@506)))
 :pattern ( ($generated@@150 ($generated@@289 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@68) (= ($generated@@244 ($generated@@291 $generated@@507) $generated@@508) ($generated@@141 $generated@@507 $generated@@508)))
 :pattern ( ($generated@@244 ($generated@@291 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@83 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@80 $generated@@510 $generated@@2)) (<= 0 ($generated@@330 $generated@@509))))
 :pattern ( ($generated@@330 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@321 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@320 $generated@@512)) (<= 0 ($generated@@319 $generated@@511))))
 :pattern ( ($generated@@319 $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@513 ($generated@@459 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@459 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@459 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@459 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@68) (= (type $generated@@522) $generated@@68)) (= ($generated@@76 ($generated@@459 $generated@@521 $generated@@522)) $generated@@58))
 :pattern ( ($generated@@459 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@68) (= (type $generated@@526) $generated@@68)) (= ($generated@@523 ($generated@@467 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@467 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@527 ($generated@@467 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@467 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@76 ($generated@@467 $generated@@531 $generated@@532)) $generated@@59))
 :pattern ( ($generated@@467 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@171) (= (type $generated@@534) $generated@@171)) (= ($generated@@176 ($generated@@243 $generated@@533 $generated@@534)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (= ($generated@@535 ($generated@@162 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@162 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@68) (= (type $generated@@542) $generated@@68)) (= ($generated@@539 ($generated@@162 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@162 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@171) (= (type $generated@@544) $generated@@171)) (= ($generated@@169 ($generated@@243 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@243 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) (= (type $generated@@546) $generated@@171)) (= ($generated@@170 ($generated@@243 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@243 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@171) (= (type $generated@@548) $generated@@139)) (= ($generated@@176 ($generated@@283 $generated@@547 $generated@@548)) $generated@@65))
 :pattern ( ($generated@@283 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) (= (type $generated@@550) $generated@@139)) (= ($generated@@258 ($generated@@283 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@283 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@171) (= (type $generated@@552) $generated@@139)) (= ($generated@@259 ($generated@@283 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@283 $generated@@551 $generated@@552))
)))
(assert  (and (forall (($generated@@555 T@U) ) (! (= (type ($generated@@553 $generated@@555)) $generated@@68)
 :pattern ( ($generated@@553 $generated@@555))
)) (forall (($generated@@556 T@U) ($generated@@557 Int) ) (! (let (($generated@@558 ($generated@@321 (type $generated@@556))))
(= (type ($generated@@554 $generated@@556 $generated@@557)) $generated@@558))
 :pattern ( ($generated@@554 $generated@@556 $generated@@557))
))))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@320 $generated@@171)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@559 ($generated@@553 $generated@@560) $generated@@561) (forall (($generated@@562 Int) ) (!  (=> (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@319 $generated@@559))) ($generated@@303 ($generated@@554 $generated@@559 $generated@@562) $generated@@560 $generated@@561))
 :pattern ( ($generated@@554 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@78 $generated@@559 ($generated@@553 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@563 ($generated@@79 $generated@@564)) $generated@@564)
 :pattern ( ($generated@@79 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@68)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@565 ($generated@@264 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@264 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@568)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@68)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@569 ($generated@@269 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@269 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@572)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@68)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@68) (= ($generated@@573 ($generated@@179 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@179 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@76 ($generated@@179 $generated@@576)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@68)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@68) (= ($generated@@577 ($generated@@553 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@553 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@76 ($generated@@553 $generated@@580)) $generated@@57))
 :pattern ( ($generated@@553 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@68)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@68) (= ($generated@@581 ($generated@@142 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@142 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
(= ($generated@@290 $generated@@585 ($generated@@291 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@291 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@341 $generated@@171 $generated@@171)) (= (type $generated@@587) $generated@@68)) (= (type $generated@@588) $generated@@68)) (= ($generated@@141 $generated@@586 ($generated@@459 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@339 $generated@@586) $generated@@589))) (and ($generated@@244 ($generated@@85 ($generated@@434 $generated@@586) $generated@@589) $generated@@588) ($generated@@244 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@85 ($generated@@434 $generated@@586) $generated@@589))
 :pattern ( ($generated@@85 ($generated@@339 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@459 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@359 $generated@@171 $generated@@171)) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) (= ($generated@@141 $generated@@590 ($generated@@467 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@590) $generated@@593))) (and ($generated@@244 ($generated@@85 ($generated@@442 $generated@@590) $generated@@593) $generated@@592) ($generated@@244 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@85 ($generated@@442 $generated@@590) $generated@@593))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@141 $generated@@590 ($generated@@467 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@171) (= (type $generated@@597) $generated@@171)) (< ($generated@@594 $generated@@596) ($generated@@595 ($generated@@243 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@243 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (< ($generated@@594 $generated@@599) ($generated@@595 ($generated@@243 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@243 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@171) (= (type $generated@@601) $generated@@139)) (< ($generated@@594 $generated@@600) ($generated@@595 ($generated@@283 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@283 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@171) (= (type $generated@@603) $generated@@139)) (< ($generated@@595 $generated@@603) ($generated@@595 ($generated@@283 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@283 $generated@@602 $generated@@603))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@138) (= (type $generated@@605) $generated@@139)) (or ($generated@@151 ($generated@@276 $generated@@605)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@605 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@276 ($generated@@11 ($generated@@280 ($generated@@276 $generated@@605)))))) (let (($generated@@606 ($generated@@276 ($generated@@259 ($generated@@276 $generated@@605)))))
(let (($generated@@607 ($generated@@274 ($generated ($generated@@290 $generated@@2 ($generated@@258 ($generated@@276 $generated@@605)))))))
 (=> (not ($generated@@280 $generated@@606)) (let (($generated@@608 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@606)))))
 (=> (<= $generated@@607 $generated@@608) ($generated@@151 $generated@@606))))))) (= ($generated@@150 ($generated@@289 $generated@@604) ($generated@@276 $generated@@605)) (ite ($generated@@280 ($generated@@276 $generated@@605)) true (let (($generated@@609 ($generated@@276 ($generated@@259 ($generated@@276 $generated@@605)))))
(let (($generated@@610 ($generated@@274 ($generated ($generated@@290 $generated@@2 ($generated@@258 ($generated@@276 $generated@@605)))))))
(ite ($generated@@280 $generated@@609) true (let (($generated@@611 ($generated@@274 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@609))))))
 (and (<= $generated@@610 $generated@@611) ($generated@@150 ($generated@@289 $generated@@604) $generated@@609))))))))))
 :weight 3
 :pattern ( ($generated@@150 ($generated@@289 $generated@@604) ($generated@@276 $generated@@605)))
))))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@171) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) $generated@@68)) ($generated@@244 $generated@@612 ($generated@@459 $generated@@613 $generated@@614))) (and (= ($generated@@291 ($generated@@290 ($generated@@341 $generated@@171 $generated@@171) $generated@@612)) $generated@@612) ($generated@@141 ($generated@@290 ($generated@@341 $generated@@171 $generated@@171) $generated@@612) ($generated@@459 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@244 $generated@@612 ($generated@@459 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@171) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) $generated@@68)) ($generated@@244 $generated@@615 ($generated@@467 $generated@@616 $generated@@617))) (and (= ($generated@@291 ($generated@@290 ($generated@@359 $generated@@171 $generated@@171) $generated@@615)) $generated@@615) ($generated@@141 ($generated@@290 ($generated@@359 $generated@@171 $generated@@171) $generated@@615) ($generated@@467 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@244 $generated@@615 ($generated@@467 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@68) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) $generated@@171)) ($generated@@244 $generated@@620 ($generated@@162 $generated@@618 $generated@@619))) (and (= ($generated@@291 ($generated@@290 $generated@@139 $generated@@620)) $generated@@620) ($generated@@141 ($generated@@290 $generated@@139 $generated@@620) ($generated@@162 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@244 $generated@@620 ($generated@@162 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@139) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@240 $generated@@623) (and ($generated@@257 $generated@@621) ($generated@@78 $generated@@621 ($generated@@142 $generated@@622) $generated@@623)))) ($generated@@303 ($generated@@258 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@303 ($generated@@258 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@624)))
 (not ($generated@@0 ($generated@@85 ($generated@@479 $generated@@625) $generated@@624))))
 :pattern ( (let (($generated@@625 (type $generated@@624)))
($generated@@85 ($generated@@479 $generated@@625) $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@68) (= (type $generated@@627) $generated@@68)) (and (= ($generated@@76 ($generated@@162 $generated@@626 $generated@@627)) $generated@@62) (= ($generated@@336 ($generated@@162 $generated@@626 $generated@@627)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@139) (= ($generated@@594 ($generated@@291 $generated@@628)) ($generated@@595 $generated@@628)))
 :pattern ( ($generated@@594 ($generated@@291 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@171) ($generated@@244 $generated@@629 ($generated@@79 0))) (and (= ($generated@@291 ($generated@@290 $generated@@2 $generated@@629)) $generated@@629) ($generated@@141 ($generated@@290 ($generated@@80 $generated@@171 $generated@@4) $generated@@629) ($generated@@79 0))))
 :pattern ( ($generated@@244 $generated@@629 ($generated@@79 0)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@171) (= (type $generated@@631) $generated@@68)) ($generated@@244 $generated@@630 ($generated@@264 $generated@@631))) (and (= ($generated@@291 ($generated@@290 ($generated@@80 $generated@@171 $generated@@4) $generated@@630)) $generated@@630) ($generated@@141 ($generated@@290 ($generated@@80 $generated@@171 $generated@@4) $generated@@630) ($generated@@264 $generated@@631))))
 :pattern ( ($generated@@244 $generated@@630 ($generated@@264 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@171) (= (type $generated@@633) $generated@@68)) ($generated@@244 $generated@@632 ($generated@@269 $generated@@633))) (and (= ($generated@@291 ($generated@@290 ($generated@@80 $generated@@171 $generated@@4) $generated@@632)) $generated@@632) ($generated@@141 ($generated@@290 ($generated@@80 $generated@@171 $generated@@4) $generated@@632) ($generated@@269 $generated@@633))))
 :pattern ( ($generated@@244 $generated@@632 ($generated@@269 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@171) (= (type $generated@@635) $generated@@68)) ($generated@@244 $generated@@634 ($generated@@179 $generated@@635))) (and (= ($generated@@291 ($generated@@290 ($generated@@80 $generated@@171 $generated@@2) $generated@@634)) $generated@@634) ($generated@@141 ($generated@@290 ($generated@@80 $generated@@171 $generated@@2) $generated@@634) ($generated@@179 $generated@@635))))
 :pattern ( ($generated@@244 $generated@@634 ($generated@@179 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@171) (= (type $generated@@637) $generated@@68)) ($generated@@244 $generated@@636 ($generated@@553 $generated@@637))) (and (= ($generated@@291 ($generated@@290 ($generated@@320 $generated@@171) $generated@@636)) $generated@@636) ($generated@@141 ($generated@@290 ($generated@@320 $generated@@171) $generated@@636) ($generated@@553 $generated@@637))))
 :pattern ( ($generated@@244 $generated@@636 ($generated@@553 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@68) (= (type $generated@@639) $generated@@171)) ($generated@@244 $generated@@639 ($generated@@142 $generated@@638))) (and (= ($generated@@291 ($generated@@290 $generated@@139 $generated@@639)) $generated@@639) ($generated@@141 ($generated@@290 $generated@@139 $generated@@639) ($generated@@142 $generated@@638))))
 :pattern ( ($generated@@244 $generated@@639 ($generated@@142 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@139) (= (type $generated@@641) $generated@@68)) (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@240 $generated@@642) (and ($generated@@257 $generated@@640) ($generated@@78 $generated@@640 ($generated@@142 $generated@@641) $generated@@642)))) ($generated@@78 ($generated@@259 $generated@@640) ($generated@@142 $generated@@641) $generated@@642))
 :pattern ( ($generated@@78 ($generated@@259 $generated@@640) ($generated@@142 $generated@@641) $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@643) ($generated@@80 $generated@@171 $generated@@2)) (= (type $generated@@644) $generated@@68)) (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@643 ($generated@@179 $generated@@644) $generated@@645) (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@171) (< 0 ($generated ($generated@@85 $generated@@643 $generated@@646)))) ($generated@@303 $generated@@646 $generated@@644 $generated@@645))
 :pattern ( ($generated@@85 $generated@@643 $generated@@646))
))))
 :pattern ( ($generated@@78 $generated@@643 ($generated@@179 $generated@@644) $generated@@645))
)))
(assert (= $generated@@177 ($generated@@276 $generated@@177)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@139) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@240 $generated@@649) (and ($generated@@161 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@68) ($generated@@78 $generated@@647 ($generated@@162 $generated@@648 $generated@@650) $generated@@649))
 :pattern ( ($generated@@78 $generated@@647 ($generated@@162 $generated@@648 $generated@@650) $generated@@649))
))))) ($generated@@303 ($generated@@169 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@303 ($generated@@169 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) $generated@@139) (= (type $generated@@652) $generated@@68)) (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@240 $generated@@653) (and ($generated@@161 $generated@@651) (exists (($generated@@654 T@U) ) (!  (and (= (type $generated@@654) $generated@@68) ($generated@@78 $generated@@651 ($generated@@162 $generated@@654 $generated@@652) $generated@@653))
 :pattern ( ($generated@@78 $generated@@651 ($generated@@162 $generated@@654 $generated@@652) $generated@@653))
))))) ($generated@@303 ($generated@@170 $generated@@651) $generated@@652 $generated@@653))
 :pattern ( ($generated@@303 ($generated@@170 $generated@@651) $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@171) (= (type $generated@@656) $generated@@171)) (= ($generated@@243 ($generated@@276 $generated@@655) ($generated@@276 $generated@@656)) ($generated@@276 ($generated@@243 $generated@@655 $generated@@656))))
 :pattern ( ($generated@@243 ($generated@@276 $generated@@655) ($generated@@276 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@171) (= (type $generated@@658) $generated@@139)) (= ($generated@@283 ($generated@@276 $generated@@657) ($generated@@276 $generated@@658)) ($generated@@276 ($generated@@283 $generated@@657 $generated@@658))))
 :pattern ( ($generated@@283 ($generated@@276 $generated@@657) ($generated@@276 $generated@@658)))
)))
(assert (forall (($generated@@659 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@274 $generated@@659))) ($generated@@276 ($generated@@291 ($generated@@8 $generated@@659))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@274 $generated@@659))))
)))
(assert (forall (($generated@@660 T@U) ) (! (= ($generated@@291 ($generated@@276 $generated@@660)) ($generated@@276 ($generated@@291 $generated@@660)))
 :pattern ( ($generated@@291 ($generated@@276 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (! (let (($generated@@662 ($generated@@321 (type $generated@@661))))
 (=> (and (= (type $generated@@661) ($generated@@320 $generated@@662)) (= ($generated@@319 $generated@@661) 0)) (= $generated@@661 ($generated@@318 $generated@@662))))
 :pattern ( ($generated@@319 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (! (let (($generated@@666 (type $generated@@664)))
 (=> (and (and (= (type $generated@@663) ($generated@@80 $generated@@666 $generated@@2)) (= (type $generated@@665) $generated@@2)) (<= 0 ($generated $generated@@665))) (= ($generated@@330 ($generated@@86 $generated@@663 $generated@@664 $generated@@665)) (+ (- ($generated@@330 $generated@@663) ($generated ($generated@@85 $generated@@663 $generated@@664))) ($generated $generated@@665)))))
 :pattern ( ($generated@@330 ($generated@@86 $generated@@663 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@668) $generated@@2)) ($generated@@78 $generated@@668 $generated@@46 $generated@@667))
 :pattern ( ($generated@@78 $generated@@668 $generated@@46 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@670) $generated@@3)) ($generated@@78 $generated@@670 $generated@@47 $generated@@669))
 :pattern ( ($generated@@78 $generated@@670 $generated@@47 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@672) $generated@@4)) ($generated@@78 $generated@@672 $generated@@44 $generated@@671))
 :pattern ( ($generated@@78 $generated@@672 $generated@@44 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@674) $generated@@503)) ($generated@@78 $generated@@674 $generated@@45 $generated@@673))
 :pattern ( ($generated@@78 $generated@@674 $generated@@45 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@676) $generated@@171)) ($generated@@78 $generated@@676 $generated@@48 $generated@@675))
 :pattern ( ($generated@@78 $generated@@676 $generated@@48 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@677) $generated@@68) (= (type $generated@@678) $generated@@171)) (= (type $generated@@679) $generated@@139)) (= (type $generated@@680) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@240 $generated@@680)) (= ($generated@@78 ($generated@@283 $generated@@678 $generated@@679) ($generated@@142 $generated@@677) $generated@@680)  (and ($generated@@303 $generated@@678 $generated@@677 $generated@@680) ($generated@@78 $generated@@679 ($generated@@142 $generated@@677) $generated@@680))))
 :pattern ( ($generated@@78 ($generated@@283 $generated@@678 $generated@@679) ($generated@@142 $generated@@677) $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@320 $generated@@171)) (= (type $generated@@682) $generated@@68)) (= ($generated@@141 $generated@@681 ($generated@@553 $generated@@682)) (forall (($generated@@683 Int) ) (!  (=> (and (<= 0 $generated@@683) (< $generated@@683 ($generated@@319 $generated@@681))) ($generated@@244 ($generated@@554 $generated@@681 $generated@@683) $generated@@682))
 :pattern ( ($generated@@554 $generated@@681 $generated@@683))
))))
 :pattern ( ($generated@@141 $generated@@681 ($generated@@553 $generated@@682)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 Int) ) (!  (=> (= (type $generated@@685) ($generated@@320 $generated@@171)) (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@319 $generated@@685))) (< ($generated@@595 ($generated@@290 $generated@@139 ($generated@@554 $generated@@685 $generated@@686))) ($generated@@684 $generated@@685))))
 :pattern ( ($generated@@595 ($generated@@290 $generated@@139 ($generated@@554 $generated@@685 $generated@@686))))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) ($generated@@341 $generated@@171 $generated@@171)) (= (type $generated@@688) $generated@@68)) (= (type $generated@@689) $generated@@68)) ($generated@@141 $generated@@687 ($generated@@459 $generated@@688 $generated@@689))) (and (and ($generated@@141 ($generated@@339 $generated@@687) ($generated@@264 $generated@@688)) ($generated@@141 ($generated@@382 $generated@@687) ($generated@@264 $generated@@689))) ($generated@@141 ($generated@@433 $generated@@687) ($generated@@264 ($generated@@162 $generated@@688 $generated@@689)))))
 :pattern ( ($generated@@141 $generated@@687 ($generated@@459 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@359 $generated@@171 $generated@@171)) (= (type $generated@@691) $generated@@68)) (= (type $generated@@692) $generated@@68)) ($generated@@141 $generated@@690 ($generated@@467 $generated@@691 $generated@@692))) (and (and ($generated@@141 ($generated@@357 $generated@@690) ($generated@@269 $generated@@691)) ($generated@@141 ($generated@@393 $generated@@690) ($generated@@269 $generated@@692))) ($generated@@141 ($generated@@441 $generated@@690) ($generated@@269 ($generated@@162 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@141 $generated@@690 ($generated@@467 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@2) ($generated@@141 $generated@@693 $generated@@46))
 :pattern ( ($generated@@141 $generated@@693 $generated@@46))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@3) ($generated@@141 $generated@@694 $generated@@47))
 :pattern ( ($generated@@141 $generated@@694 $generated@@47))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@4) ($generated@@141 $generated@@695 $generated@@44))
 :pattern ( ($generated@@141 $generated@@695 $generated@@44))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@503) ($generated@@141 $generated@@696 $generated@@45))
 :pattern ( ($generated@@141 $generated@@696 $generated@@45))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@171) ($generated@@141 $generated@@697 $generated@@48))
 :pattern ( ($generated@@141 $generated@@697 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@699) $generated@@139) (= (type $generated@@700) $generated@@139)) (= (type $generated@@702) $generated@@139)) (= (type $generated@@704) $generated@@139)) (= (type $generated@@705) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@706) $generated@@139)) (= (type $generated@@707) ($generated@@186 $generated@@81 $generated@@4))) (= (type $generated@@708) $generated@@81)) (= (type $generated@@709) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@711  (and (=> (= (ControlFlow 0 4) (- 0 7)) (=> ($generated@@151 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (or ($generated@@150 ($generated@@289 $generated@@155) ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (=> ($generated@@280 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) ($generated@@0 ($generated@@276 ($generated@@11 true))))))) (=> (=> ($generated@@151 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (or ($generated@@150 ($generated@@289 $generated@@155) ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (=> ($generated@@280 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) ($generated@@0 ($generated@@276 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@151 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (or ($generated@@150 ($generated@@289 $generated@@155) ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (=> (not ($generated@@280 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699))) (let (($generated@@712 ($generated@@259 ($generated@@137 ($generated@@289 ($generated@@289 $generated@@155)) $generated@@698 $generated@@699))))
 (=> ($generated@@280 $generated@@712) ($generated@@0 ($generated@@276 ($generated@@11 true))))))))) (=> (=> ($generated@@151 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (or ($generated@@150 ($generated@@289 $generated@@155) ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (=> (not ($generated@@280 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699))) (let (($generated@@713 ($generated@@259 ($generated@@137 ($generated@@289 ($generated@@289 $generated@@155)) $generated@@698 $generated@@699))))
 (=> ($generated@@280 $generated@@713) ($generated@@0 ($generated@@276 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@151 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (or ($generated@@150 ($generated@@289 $generated@@155) ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (=> (not ($generated@@280 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699))) (let (($generated@@714 ($generated@@259 ($generated@@137 ($generated@@289 ($generated@@289 $generated@@155)) $generated@@698 $generated@@699))))
(let (($generated@@715 ($generated ($generated@@290 $generated@@2 ($generated@@258 ($generated@@137 ($generated@@289 ($generated@@289 $generated@@155)) $generated@@698 $generated@@699))))))
 (=> (not ($generated@@280 $generated@@714)) (let (($generated@@716 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@714)))))
(<= $generated@@715 $generated@@716))))))))) (=> (=> ($generated@@151 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (or ($generated@@150 ($generated@@289 $generated@@155) ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (=> (not ($generated@@280 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699))) (let (($generated@@717 ($generated@@259 ($generated@@137 ($generated@@289 ($generated@@289 $generated@@155)) $generated@@698 $generated@@699))))
(let (($generated@@718 ($generated ($generated@@290 $generated@@2 ($generated@@258 ($generated@@137 ($generated@@289 ($generated@@289 $generated@@155)) $generated@@698 $generated@@699))))))
 (=> (not ($generated@@280 $generated@@717)) (let (($generated@@719 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@717)))))
(<= $generated@@718 $generated@@719)))))))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@151 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (or ($generated@@150 ($generated@@289 $generated@@155) ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699)) (=> (not ($generated@@280 ($generated@@137 ($generated@@289 $generated@@155) $generated@@698 $generated@@699))) (let (($generated@@720 ($generated@@259 ($generated@@137 ($generated@@289 ($generated@@289 $generated@@155)) $generated@@698 $generated@@699))))
 (=> (not ($generated@@280 $generated@@720)) ($generated@@150 ($generated@@289 ($generated@@289 $generated@@155)) $generated@@720)))))))))))))))
(let (($generated@@721  (=> (= $generated@@700 ($generated@@283 ($generated@@291 ($generated@@8 $generated@@701)) $generated@@702)) (=> (and ($generated@@141 $generated@@702 ($generated@@142 $generated@@46)) (= (ControlFlow 0 10) 4)) $generated@@711))))
(let (($generated@@722  (=> (and (= $generated@@700 $generated@@177) (= (ControlFlow 0 9) 4)) $generated@@711)))
(let (($generated@@723  (=> (and (= $generated@@699 $generated@@177) (= (ControlFlow 0 8) 4)) $generated@@711)))
(let (($generated@@724 true))
(let (($generated@@725  (=> (not (= $generated@@700 $generated@@177)) (and (=> (= (ControlFlow 0 11) 10) $generated@@721) (=> (= (ControlFlow 0 11) 2) $generated@@724)))))
(let (($generated@@726  (=> (and (= $generated@@699 ($generated@@283 ($generated@@291 ($generated@@8 $generated@@703)) $generated@@704)) ($generated@@141 $generated@@704 ($generated@@142 $generated@@46))) (=> (and (and (and ($generated@@141 $generated@@700 ($generated@@142 $generated@@46)) ($generated@@78 $generated@@700 ($generated@@142 $generated@@46) $generated@@705)) (= $generated@@706 $generated@@704)) (and ($generated@@141 $generated@@706 ($generated@@142 $generated@@46)) (= $generated@@700 $generated@@706))) (and (=> (= (ControlFlow 0 12) 9) $generated@@722) (=> (= (ControlFlow 0 12) 11) $generated@@725))))))
(let (($generated@@727 true))
(let (($generated@@728  (=> (not (= $generated@@699 $generated@@177)) (and (=> (= (ControlFlow 0 13) 12) $generated@@726) (=> (= (ControlFlow 0 13) 1) $generated@@727)))))
(let (($generated@@729  (=> (and (= $generated@@707 ($generated@@185 $generated@@708 $generated@@709 $generated@@60 false)) ($generated@@414 $generated@@699)) (=> (and (and ($generated@@240 $generated@@705) ($generated@@710 $generated@@705)) (and (= $generated@@709 $generated@@705) (forall (($generated@@730 T@U) ($generated@@731 Int) ) (!  (=> (= (type $generated@@730) $generated@@139) (=> (and (and ($generated@@141 $generated@@730 ($generated@@142 $generated@@46)) ($generated@@150 ($generated@@289 $generated@@155) $generated@@730)) (or (< ($generated@@595 $generated@@730) ($generated@@595 $generated@@699)) (and (= ($generated@@595 $generated@@730) ($generated@@595 $generated@@699)) (and (<= 0 $generated@@731) (< $generated@@731 $generated@@698))))) ($generated@@150 ($generated@@289 $generated@@155) ($generated@@137 ($generated@@289 $generated@@155) $generated@@731 $generated@@730))))
 :no-pattern (type $generated@@730)
 :no-pattern ($generated $generated@@730)
 :no-pattern ($generated@@0 $generated@@730)
)))) (and (=> (= (ControlFlow 0 14) 8) $generated@@723) (=> (= (ControlFlow 0 14) 13) $generated@@728))))))
(let (($generated@@732  (=> (and ($generated@@240 $generated@@709) ($generated@@710 $generated@@709)) (=> (and (and (and (and ($generated@@141 $generated@@699 ($generated@@142 $generated@@46)) ($generated@@78 $generated@@699 ($generated@@142 $generated@@46) $generated@@709)) ($generated@@414 $generated@@699)) (= 2 $generated@@136)) (and (and ($generated@@151 $generated@@699) (and ($generated@@150 ($generated@@289 $generated@@155) $generated@@699) (ite ($generated@@280 $generated@@699) true (let (($generated@@733 ($generated@@259 $generated@@699)))
(let (($generated@@734 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@699)))))
(ite ($generated@@280 $generated@@733) true (let (($generated@@735 ($generated ($generated@@290 $generated@@2 ($generated@@258 $generated@@733)))))
 (and (<= $generated@@734 $generated@@735) ($generated@@150 ($generated@@289 $generated@@155) $generated@@733))))))))) (= (ControlFlow 0 15) 14))) $generated@@729))))
$generated@@732))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@198 (Int) Int)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@210 (T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@212 (T@T T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@U T@U) Bool)
(declare-fun $generated@@307 (T@U) Bool)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@328 (T@U T@U) T@U)
(declare-fun $generated@@334 (T@U T@U T@U) Bool)
(declare-fun $generated@@349 (T@T) T@U)
(declare-fun $generated@@350 (T@U) Int)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@363 (T@U) Int)
(declare-fun $generated@@364 (T@T) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@T) T@U)
(declare-fun $generated@@374 (T@T T@T) T@T)
(declare-fun $generated@@375 (T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@T T@T) T@U)
(declare-fun $generated@@392 (T@T T@T) T@T)
(declare-fun $generated@@393 (T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@488 (T@U T@U) T@U)
(declare-fun $generated@@496 (T@U T@U) T@U)
(declare-fun $generated@@508 (T@T) T@U)
(declare-fun $generated@@532 () T@T)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@583 (T@U Int) T@U)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(declare-fun $generated@@624 (T@U) Int)
(declare-fun $generated@@716 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@81) (= (type $generated@@164) $generated@@82)) (or ($generated@@162 $generated@@164) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@164 ($generated@@85 $generated@@46))))) true)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@81)
 :pattern ( ($generated@@165 $generated@@167))
)) (= (type $generated@@166) $generated@@81)))
(assert (forall (($generated@@168 T@U) ($generated@@169 Int) ($generated@@170 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@81) (= (type $generated@@170) $generated@@82)) (= ($generated@@79 $generated@@168 $generated@@169 $generated@@170) ($generated@@79 $generated@@166 $generated@@169 $generated@@170)))
 :pattern ( ($generated@@79 ($generated@@165 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> (= (type $generated@@171) $generated@@2) ($generated@@84 $generated@@171 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@171 ($generated@@104 0)))
)))
(assert (forall (($generated@@175 T@U) ) (! (let (($generated@@176 (type $generated@@175)))
(= (type ($generated@@173 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@82) (= (type $generated@@178) $generated@@82)) (or ($generated@@174 ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@177 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@178 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@179 Int) ) (!  (and ($generated@@83 $generated@@179 ($generated@@173 $generated@@177)) ($generated@@83 $generated@@179 ($generated@@173 $generated@@178)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@166) $generated@@179 $generated@@178))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@166) $generated@@179 $generated@@177))
)) (= ($generated@@172 ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)) (forall (($generated@@180 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@166) $generated@@180 ($generated@@173 $generated@@177)) ($generated@@79 ($generated@@80 $generated@@166) $generated@@180 ($generated@@173 $generated@@178))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@166) $generated@@180 $generated@@178))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@166) $generated@@180 $generated@@177))
)))))
 :weight 3
 :pattern ( ($generated@@172 ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@183 $generated@@184)) $generated@@68)
 :pattern ( ($generated@@182 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (and (= (type $generated@@185) $generated@@68) (= (type $generated@@186) $generated@@68)) (= (type $generated@@187) $generated@@82)) ($generated@@84 $generated@@187 ($generated@@182 $generated@@185 $generated@@186))) ($generated@@181 $generated@@187))
 :pattern ( ($generated@@181 $generated@@187) ($generated@@84 $generated@@187 ($generated@@182 $generated@@185 $generated@@186)))
)))
(assert  (and (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@90)
 :pattern ( ($generated@@189 $generated@@191))
)) (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@90)
 :pattern ( ($generated@@190 $generated@@192))
))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) $generated@@82) (= (type $generated@@194) $generated@@82)) true) (= ($generated@@188 $generated@@193 $generated@@194)  (and (= ($generated@@189 $generated@@193) ($generated@@189 $generated@@194)) (= ($generated@@190 $generated@@193) ($generated@@190 $generated@@194)))))
 :pattern ( ($generated@@188 $generated@@193 $generated@@194))
)))
(assert  (and (forall (($generated@@197 T@U) ) (! (= (type ($generated@@195 $generated@@197)) $generated@@72)
 :pattern ( ($generated@@195 $generated@@197))
)) (= (type $generated@@196) $generated@@82)))
(assert (= ($generated@@195 $generated@@196) $generated@@63))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@199 T@U) ($generated@@200 Int) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@199) $generated@@81) (= (type $generated@@201) $generated@@82)) (or ($generated@@83 ($generated@@198 $generated@@200) ($generated@@173 $generated@@201)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@201 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@173 ($generated@@11 ($generated@@86 ($generated@@173 $generated@@201)))))) (let (($generated@@202 ($generated@@173 ($generated@@87 ($generated@@173 $generated@@201)))))
($generated@@83 ($generated@@198 $generated@@200) $generated@@202))) (= ($generated@@79 ($generated@@80 $generated@@199) ($generated@@198 $generated@@200) ($generated@@173 $generated@@201)) (ite ($generated@@86 ($generated@@173 $generated@@201)) 0 (let (($generated@@203 ($generated@@173 ($generated@@87 ($generated@@173 $generated@@201)))))
(let (($generated@@204 ($generated@@198 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@173 $generated@@201)))))))
(+ (ite (= ($generated@@198 $generated@@200) $generated@@204) 1 0) ($generated@@79 ($generated@@80 $generated@@199) ($generated@@198 $generated@@200) $generated@@203))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@199) ($generated@@198 $generated@@200) ($generated@@173 $generated@@201)))
))))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@68)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@209) $generated@@68)) ($generated@@84 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@84 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@1 ($generated@@212 $generated@@216 $generated@@217)) 17)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@212 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@212 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@214 ($generated@@212 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@212 $generated@@220 $generated@@221))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@214 (type $generated@@222))))
(= (type ($generated@@210 $generated@@222 $generated@@223 $generated@@224)) $generated@@225))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 (type $generated@@229)))
(let (($generated@@231 (type $generated@@227)))
(= (type ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@212 $generated@@231 $generated@@230))))
 :pattern ( ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@214 (type $generated@@232))))
 (=> (= (type $generated@@235) $generated@@236) (= ($generated@@210 ($generated@@215 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@233 $generated@@234) $generated@@235)))
 :weight 0
))) (and (and (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@210 ($generated@@215 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@210 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or (= $generated@@246 $generated@@248) (= ($generated@@210 ($generated@@215 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@210 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
))) (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or true (= ($generated@@210 ($generated@@215 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@210 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
)))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ) (! (= (type ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258)) ($generated@@212 $generated@@106 $generated@@4))
 :pattern ( ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Bool) ($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@71 (type $generated@@264))))
 (=> (and (and (and (and (= (type $generated@@259) $generated@@106) (= (type $generated@@260) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@261) ($generated@@70 $generated@@4))) (= (type $generated@@263) $generated@@106)) (= (type $generated@@264) ($generated@@70 $generated@@265))) (= ($generated@@0 ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))  (=> (and (not (= $generated@@263 $generated@@259)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@260 $generated@@263) $generated@@261))) $generated@@262))))
 :pattern ( ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ) (! (= (type ($generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270)) ($generated@@212 $generated@@106 $generated@@4))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 Bool) ($generated@@275 T@U) ($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@71 (type $generated@@276))))
 (=> (and (and (and (and (= (type $generated@@271) $generated@@106) (= (type $generated@@272) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@273) ($generated@@70 $generated@@4))) (= (type $generated@@275) $generated@@106)) (= (type $generated@@276) ($generated@@70 $generated@@277))) (= ($generated@@0 ($generated@@210 ($generated@@266 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))  (=> (and (not (= $generated@@275 $generated@@271)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@272 $generated@@275) $generated@@273))) $generated@@274))))
 :pattern ( ($generated@@210 ($generated@@266 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))
)))
(assert  (and (forall (($generated@@283 T@U) ) (! (= (type ($generated@@278 $generated@@283)) $generated@@82)
 :pattern ( ($generated@@278 $generated@@283))
)) (forall (($generated@@284 T@U) ) (! (= (type ($generated@@282 $generated@@284)) $generated@@82)
 :pattern ( ($generated@@282 $generated@@284))
))))
(assert  (=> (<= 5 $generated@@78) (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@286) $generated@@82)) (or ($generated@@280 ($generated@@173 $generated@@286)) (and (not (= 5 $generated@@78)) (and ($generated@@279 $generated@@285) ($generated@@84 $generated@@286 ($generated@@85 $generated@@46)))))) (and ($generated@@281 ($generated@@173 $generated@@286)) (= ($generated@@278 ($generated@@173 $generated@@286)) (let (($generated@@287 ($generated@@282 ($generated@@173 $generated@@286))))
$generated@@287))))
 :weight 3
 :pattern ( ($generated@@278 ($generated@@173 $generated@@286)) ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@68) (= (type $generated@@289) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@279 $generated@@289)) ($generated@@103 $generated@@196 ($generated@@85 $generated@@288) $generated@@289))
 :pattern ( ($generated@@103 $generated@@196 ($generated@@85 $generated@@288) $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (! (= (type ($generated@@290 $generated@@292 $generated@@293)) $generated@@82)
 :pattern ( ($generated@@290 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) $generated@@68)) (= (type $generated@@296) $generated@@90)) (= (type $generated@@297) $generated@@90)) (= ($generated@@84 ($generated@@290 $generated@@296 $generated@@297) ($generated@@182 $generated@@294 $generated@@295))  (and ($generated@@291 $generated@@296 $generated@@294) ($generated@@291 $generated@@297 $generated@@295))))
 :pattern ( ($generated@@84 ($generated@@290 $generated@@296 $generated@@297) ($generated@@182 $generated@@294 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@68) ($generated@@84 $generated@@196 ($generated@@85 $generated@@298)))
 :pattern ( ($generated@@84 $generated@@196 ($generated@@85 $generated@@298)))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@82) (= (type $generated@@300) $generated@@82)) (= ($generated@@188 $generated@@299 $generated@@300) (= $generated@@299 $generated@@300)))
 :pattern ( ($generated@@188 $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@82) (= (type $generated@@303) $generated@@82)) (= ($generated@@301 $generated@@302 $generated@@303) (= $generated@@302 $generated@@303)))
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@304 T@U) ($generated@@305 Int) ($generated@@306 T@U) ) (!  (=> (and (and (= (type $generated@@304) $generated@@81) (= (type $generated@@306) $generated@@82)) (or ($generated@@83 $generated@@305 $generated@@306) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@306 ($generated@@85 $generated@@46))))) (<= ($generated@@198 0) ($generated@@79 $generated@@304 $generated@@305 $generated@@306)))
 :pattern ( ($generated@@79 $generated@@304 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (= (type $generated@@308) $generated@@82) (= (type $generated@@309) $generated@@82)) (and ($generated@@307 $generated@@308) ($generated@@307 $generated@@309))) (= ($generated@@301 $generated@@308 $generated@@309)  (and (= ($generated@@89 $generated@@308) ($generated@@89 $generated@@309)) ($generated@@301 ($generated@@87 $generated@@308) ($generated@@87 $generated@@309)))))
 :pattern ( ($generated@@301 $generated@@308 $generated@@309) ($generated@@307 $generated@@308))
 :pattern ( ($generated@@301 $generated@@308 $generated@@309) ($generated@@307 $generated@@309))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (= (type $generated@@310) $generated@@82) (= (type $generated@@311) $generated@@82)) (or ($generated@@174 $generated@@310 $generated@@311) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@310 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@311 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@312 Int) ) (!  (and ($generated@@83 $generated@@312 $generated@@310) ($generated@@83 $generated@@312 $generated@@311))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@166) $generated@@312 $generated@@311))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@166) $generated@@312 $generated@@310))
)) (= ($generated@@172 $generated@@310 $generated@@311) (forall (($generated@@313 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@166) $generated@@313 $generated@@310) ($generated@@79 ($generated@@80 $generated@@166) $generated@@313 $generated@@311)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@166) $generated@@313 $generated@@311))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@166) $generated@@313 $generated@@310))
)))))
 :pattern ( ($generated@@172 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@68)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@317) $generated@@68)) (= ($generated@@84 $generated@@316 ($generated@@314 $generated@@317)) (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@90) ($generated@@0 ($generated@@110 $generated@@316 $generated@@318))) ($generated@@291 $generated@@318 $generated@@317))
 :pattern ( ($generated@@110 $generated@@316 $generated@@318))
))))
 :pattern ( ($generated@@84 $generated@@316 ($generated@@314 $generated@@317)))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@68)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@322) $generated@@68)) (= ($generated@@84 $generated@@321 ($generated@@319 $generated@@322)) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@90) ($generated@@0 ($generated@@110 $generated@@321 $generated@@323))) ($generated@@291 $generated@@323 $generated@@322))
 :pattern ( ($generated@@110 $generated@@321 $generated@@323))
))))
 :pattern ( ($generated@@84 $generated@@321 ($generated@@319 $generated@@322)))
)))
(assert (forall (($generated@@324 Int) ) (! (= ($generated@@198 $generated@@324) $generated@@324)
 :pattern ( ($generated@@198 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (! (= ($generated@@173 $generated@@325) $generated@@325)
 :pattern ( ($generated@@173 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (= (type $generated@@326) $generated@@82) (= (type $generated@@327) $generated@@82)) (and ($generated@@86 $generated@@326) ($generated@@86 $generated@@327))) (= ($generated@@301 $generated@@326 $generated@@327) true))
 :pattern ( ($generated@@301 $generated@@326 $generated@@327) ($generated@@86 $generated@@326))
 :pattern ( ($generated@@301 $generated@@326 $generated@@327) ($generated@@86 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@82)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) $generated@@68) (= (type $generated@@332) $generated@@90)) (= (type $generated@@333) $generated@@82)) (= ($generated@@84 ($generated@@328 $generated@@332 $generated@@333) ($generated@@85 $generated@@331))  (and ($generated@@291 $generated@@332 $generated@@331) ($generated@@84 $generated@@333 ($generated@@85 $generated@@331)))))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@332 $generated@@333) ($generated@@85 $generated@@331)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@335) $generated@@68) (= (type $generated@@336) $generated@@68)) (= (type $generated@@337) $generated@@90)) (= (type $generated@@338) $generated@@90)) (= (type $generated@@339) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@279 $generated@@339)) (= ($generated@@103 ($generated@@290 $generated@@337 $generated@@338) ($generated@@182 $generated@@335 $generated@@336) $generated@@339)  (and ($generated@@334 $generated@@337 $generated@@335 $generated@@339) ($generated@@334 $generated@@338 $generated@@336 $generated@@339))))
 :pattern ( ($generated@@103 ($generated@@290 $generated@@337 $generated@@338) ($generated@@182 $generated@@335 $generated@@336) $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@82) (= ($generated@@181 $generated@@340) (= ($generated@@195 $generated@@340) $generated@@61)))
 :pattern ( ($generated@@181 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@82) (= ($generated@@86 $generated@@341) (= ($generated@@195 $generated@@341) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@82) (= ($generated@@307 $generated@@342) (= ($generated@@195 $generated@@342) $generated@@65)))
 :pattern ( ($generated@@307 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@82) ($generated@@181 $generated@@343)) (exists (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (and (and (= (type $generated@@344) $generated@@90) (= (type $generated@@345) $generated@@90)) (= $generated@@343 ($generated@@290 $generated@@344 $generated@@345)))
 :no-pattern (type $generated@@344)
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
)))
 :pattern ( ($generated@@181 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@82) ($generated@@307 $generated@@346)) (exists (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (and (and (= (type $generated@@347) $generated@@90) (= (type $generated@@348) $generated@@82)) (= $generated@@346 ($generated@@328 $generated@@347 $generated@@348)))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))
 :pattern ( ($generated@@307 $generated@@346))
)))
(assert  (and (and (forall (($generated@@353 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@353)) 18)) (forall (($generated@@354 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354))
))) (forall (($generated@@355 T@T) ) (! (= (type ($generated@@349 $generated@@355)) ($generated@@351 $generated@@355))
 :pattern ( ($generated@@349 $generated@@355))
))))
(assert (forall (($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@356)) 0)
 :pattern ( ($generated@@349 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@82) ($generated@@86 $generated@@357)) (= $generated@@357 $generated@@196))
 :pattern ( ($generated@@86 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@90)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@68) (= (type $generated@@362) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@334 ($generated@@358 $generated@@360) $generated@@361 $generated@@362) ($generated@@103 $generated@@360 $generated@@361 $generated@@362)))
 :pattern ( ($generated@@334 ($generated@@358 $generated@@360) $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@365 T@T) ) (! (= (type ($generated@@364 $generated@@365)) ($generated@@105 $generated@@365 $generated@@2))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@108 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@105 $generated@@367 $generated@@2)) (and (= (= ($generated@@363 $generated@@366) 0) (= $generated@@366 ($generated@@364 $generated@@367))) (=> (not (= ($generated@@363 $generated@@366) 0)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (< 0 ($generated ($generated@@110 $generated@@366 $generated@@368))))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@73)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@371)) $generated@@64) (= ($generated@@369 ($generated@@85 $generated@@371)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@371))
)))
(assert  (and (and (and (and (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (= ($generated@@1 ($generated@@374 $generated@@377 $generated@@378)) 19)) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@375 ($generated@@374 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@374 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= ($generated@@376 ($generated@@374 $generated@@381 $generated@@382)) $generated@@382)
 :pattern ( ($generated@@374 $generated@@381 $generated@@382))
))) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@375 (type $generated@@383))))
(= (type ($generated@@372 $generated@@383)) ($generated@@105 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@383))
))) (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (! (= (type ($generated@@373 $generated@@385 $generated@@386)) ($generated@@374 $generated@@385 $generated@@386))
 :pattern ( ($generated@@373 $generated@@385 $generated@@386))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@T) ) (! (let (($generated@@389 (type $generated@@387)))
 (not ($generated@@0 ($generated@@110 ($generated@@372 ($generated@@373 $generated@@389 $generated@@388)) $generated@@387))))
 :pattern ( (let (($generated@@389 (type $generated@@387)))
($generated@@110 ($generated@@372 ($generated@@373 $generated@@389 $generated@@388)) $generated@@387)))
)))
(assert  (and (and (and (and (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (= ($generated@@1 ($generated@@392 $generated@@395 $generated@@396)) 20)) (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (! (= ($generated@@393 ($generated@@392 $generated@@397 $generated@@398)) $generated@@397)
 :pattern ( ($generated@@392 $generated@@397 $generated@@398))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= ($generated@@394 ($generated@@392 $generated@@399 $generated@@400)) $generated@@400)
 :pattern ( ($generated@@392 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@393 (type $generated@@401))))
(= (type ($generated@@390 $generated@@401)) ($generated@@105 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@401))
))) (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (! (= (type ($generated@@391 $generated@@403 $generated@@404)) ($generated@@392 $generated@@403 $generated@@404))
 :pattern ( ($generated@@391 $generated@@403 $generated@@404))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@T) ) (! (let (($generated@@407 (type $generated@@405)))
 (not ($generated@@0 ($generated@@110 ($generated@@390 ($generated@@391 $generated@@407 $generated@@406)) $generated@@405))))
 :pattern ( (let (($generated@@407 (type $generated@@405)))
($generated@@110 ($generated@@390 ($generated@@391 $generated@@407 $generated@@406)) $generated@@405)))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@108 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@105 $generated@@409 $generated@@2)) (= ($generated@@206 $generated@@408) (forall (($generated@@410 T@U) ) (!  (=> (= (type $generated@@410) $generated@@409) (and (<= 0 ($generated ($generated@@110 $generated@@408 $generated@@410))) (<= ($generated ($generated@@110 $generated@@408 $generated@@410)) ($generated@@363 $generated@@408))))
 :pattern ( ($generated@@110 $generated@@408 $generated@@410))
)))))
 :pattern ( ($generated@@206 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@376 (type $generated@@411))))
(let (($generated@@413 ($generated@@375 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@374 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@373 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) ($generated@@0 ($generated@@110 ($generated@@372 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@372 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@376 (type $generated@@416))))
(= (type ($generated@@415 $generated@@416)) ($generated@@105 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@376 (type $generated@@418))))
(let (($generated@@420 ($generated@@375 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@374 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@373 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@419) ($generated@@0 ($generated@@110 ($generated@@415 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@415 $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@394 (type $generated@@422))))
(let (($generated@@424 ($generated@@393 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@392 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@391 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) ($generated@@0 ($generated@@110 ($generated@@390 $generated@@422) $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@390 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@394 (type $generated@@427))))
(= (type ($generated@@426 $generated@@427)) ($generated@@105 $generated@@428 $generated@@4)))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@394 (type $generated@@429))))
(let (($generated@@431 ($generated@@393 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@392 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@391 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@430) ($generated@@0 ($generated@@110 ($generated@@426 $generated@@429) $generated@@432)))
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@426 $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 Int) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@81) (= (type $generated@@435) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@433) $generated@@434 $generated@@435) ($generated@@79 $generated@@433 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@433) $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@437) $generated@@68)) (= ($generated@@84 $generated@@436 ($generated@@205 $generated@@437)) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@436 $generated@@438)))) ($generated@@291 $generated@@438 $generated@@437))
 :pattern ( ($generated@@110 $generated@@436 $generated@@438))
))))
 :pattern ( ($generated@@84 $generated@@436 ($generated@@205 $generated@@437)))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@82) ($generated@@281 $generated@@439)) (and ($generated@@84 ($generated@@282 $generated@@439) ($generated@@85 $generated@@46)) (and ($generated@@172 $generated@@439 ($generated@@282 $generated@@439)) ($generated@@161 ($generated@@80 $generated@@166) ($generated@@282 $generated@@439)))))
 :pattern ( ($generated@@282 $generated@@439))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (= (type $generated@@440) $generated@@81) (= (type $generated@@441) $generated@@82)) (or ($generated@@162 $generated@@441) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@441 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@441)) (let (($generated@@442 ($generated@@87 $generated@@441)))
(let (($generated@@443 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@441)))))
 (=> (not ($generated@@86 $generated@@442)) (let (($generated@@444 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@442)))))
 (=> (<= $generated@@443 $generated@@444) ($generated@@162 $generated@@442))))))) (= ($generated@@161 ($generated@@80 $generated@@440) $generated@@441) (ite ($generated@@86 $generated@@441) true (let (($generated@@445 ($generated@@87 $generated@@441)))
(let (($generated@@446 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@441)))))
(ite ($generated@@86 $generated@@445) true (let (($generated@@447 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@445)))))
 (and (<= $generated@@446 $generated@@447) ($generated@@161 $generated@@440 $generated@@445))))))))))
 :pattern ( ($generated@@161 ($generated@@80 $generated@@440) $generated@@441))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@448) $generated@@82) (= (type $generated@@449) $generated@@82)) (or ($generated@@174 $generated@@448 $generated@@449) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@448 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@449 ($generated@@85 $generated@@46)))))) true)
 :pattern ( ($generated@@172 $generated@@448 $generated@@449))
))))
(assert  (=> (<= 5 $generated@@78) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@82) (or ($generated@@280 $generated@@450) (and (not (= 5 $generated@@78)) ($generated@@84 $generated@@450 ($generated@@85 $generated@@46))))) (and (let (($generated@@451 ($generated@@278 $generated@@450)))
 (and ($generated@@172 $generated@@450 $generated@@451) ($generated@@161 ($generated@@80 $generated@@166) $generated@@451))) ($generated@@84 ($generated@@278 $generated@@450) ($generated@@85 $generated@@46))))
 :pattern ( ($generated@@278 $generated@@450))
))))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (= (type $generated@@452) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@453) $generated@@68)) (= (type $generated@@454) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@452 ($generated@@314 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@90) ($generated@@0 ($generated@@110 $generated@@452 $generated@@455))) ($generated@@334 $generated@@455 $generated@@453 $generated@@454))
 :pattern ( ($generated@@110 $generated@@452 $generated@@455))
))))
 :pattern ( ($generated@@103 $generated@@452 ($generated@@314 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (= (type $generated@@456) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@457) $generated@@68)) (= (type $generated@@458) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@456 ($generated@@319 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@90) ($generated@@0 ($generated@@110 $generated@@456 $generated@@459))) ($generated@@334 $generated@@459 $generated@@457 $generated@@458))
 :pattern ( ($generated@@110 $generated@@456 $generated@@459))
))))
 :pattern ( ($generated@@103 $generated@@456 ($generated@@319 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(= ($generated ($generated@@110 ($generated@@364 $generated@@461) $generated@@460)) 0))
 :pattern ( (let (($generated@@461 (type $generated@@460)))
($generated@@110 ($generated@@364 $generated@@461) $generated@@460)))
)))
(assert  (and (forall (($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@464)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@462 $generated@@464))
)) (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@376 (type $generated@@465))))
(let (($generated@@467 ($generated@@375 (type $generated@@465))))
(= (type ($generated@@463 $generated@@465)) ($generated@@105 $generated@@467 $generated@@466))))
 :pattern ( ($generated@@463 $generated@@465))
))))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) ($generated@@374 $generated@@90 $generated@@90)) (= (type $generated@@469) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@462 $generated@@468) $generated@@469))  (and ($generated@@0 ($generated@@110 ($generated@@372 $generated@@468) ($generated@@189 ($generated@@88 $generated@@82 $generated@@469)))) (= ($generated@@110 ($generated@@463 $generated@@468) ($generated@@189 ($generated@@88 $generated@@82 $generated@@469))) ($generated@@190 ($generated@@88 $generated@@82 $generated@@469))))))
 :pattern ( ($generated@@110 ($generated@@462 $generated@@468) $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@394 (type $generated@@473))))
(let (($generated@@475 ($generated@@393 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473)) ($generated@@105 $generated@@475 $generated@@474))))
 :pattern ( ($generated@@471 $generated@@473))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) ($generated@@392 $generated@@90 $generated@@90)) (= (type $generated@@477) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@470 $generated@@476) $generated@@477))  (and ($generated@@0 ($generated@@110 ($generated@@390 $generated@@476) ($generated@@189 ($generated@@88 $generated@@82 $generated@@477)))) (= ($generated@@110 ($generated@@471 $generated@@476) ($generated@@189 ($generated@@88 $generated@@82 $generated@@477))) ($generated@@190 ($generated@@88 $generated@@82 $generated@@477))))))
 :pattern ( ($generated@@110 ($generated@@470 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@375 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@374 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@110 ($generated@@415 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@110 ($generated@@372 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@110 ($generated@@463 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@110 ($generated@@372 $generated@@478) $generated@@482))
 :pattern ( ($generated@@110 ($generated@@463 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@110 ($generated@@415 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(let (($generated@@486 ($generated@@393 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@392 $generated@@486 $generated@@485)) (= ($generated@@0 ($generated@@110 ($generated@@426 $generated@@483) $generated@@484)) (exists (($generated@@487 T@U) ) (!  (and (= (type $generated@@487) $generated@@486) (and ($generated@@0 ($generated@@110 ($generated@@390 $generated@@483) $generated@@487)) (= $generated@@484 ($generated@@110 ($generated@@471 $generated@@483) $generated@@487))))
 :pattern ( ($generated@@110 ($generated@@390 $generated@@483) $generated@@487))
 :pattern ( ($generated@@110 ($generated@@471 $generated@@483) $generated@@487))
))))))
 :pattern ( ($generated@@110 ($generated@@426 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (and (= (type $generated@@491) ($generated@@374 $generated@@90 $generated@@90)) (= (type $generated@@492) $generated@@68)) (= (type $generated@@493) $generated@@68)) (= (type $generated@@494) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@491 ($generated@@488 $generated@@492 $generated@@493) $generated@@494) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@372 $generated@@491) $generated@@495))) (and ($generated@@334 ($generated@@110 ($generated@@463 $generated@@491) $generated@@495) $generated@@493 $generated@@494) ($generated@@334 $generated@@495 $generated@@492 $generated@@494)))
 :pattern ( ($generated@@110 ($generated@@463 $generated@@491) $generated@@495))
 :pattern ( ($generated@@110 ($generated@@372 $generated@@491) $generated@@495))
))))
 :pattern ( ($generated@@103 $generated@@491 ($generated@@488 $generated@@492 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) ($generated@@392 $generated@@90 $generated@@90)) (= (type $generated@@500) $generated@@68)) (= (type $generated@@501) $generated@@68)) (= (type $generated@@502) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@390 $generated@@499) $generated@@503))) (and ($generated@@334 ($generated@@110 ($generated@@471 $generated@@499) $generated@@503) $generated@@501 $generated@@502) ($generated@@334 $generated@@503 $generated@@500 $generated@@502)))
 :pattern ( ($generated@@110 ($generated@@471 $generated@@499) $generated@@503))
 :pattern ( ($generated@@110 ($generated@@390 $generated@@499) $generated@@503))
))))
 :pattern ( ($generated@@103 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@82)) ($generated@@84 $generated@@505 ($generated@@85 $generated@@504))) (or ($generated@@86 $generated@@505) ($generated@@307 $generated@@505)))
 :pattern ( ($generated@@307 $generated@@505) ($generated@@84 $generated@@505 ($generated@@85 $generated@@504)))
 :pattern ( ($generated@@86 $generated@@505) ($generated@@84 $generated@@505 ($generated@@85 $generated@@504)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@81) (= (type $generated@@507) $generated@@82)) (= ($generated@@161 $generated@@506 $generated@@507) ($generated@@161 $generated@@166 $generated@@507)))
 :pattern ( ($generated@@161 ($generated@@165 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@509 T@T) ) (! (= (type ($generated@@508 $generated@@509)) ($generated@@105 $generated@@509 $generated@@4))
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@394 (type $generated@@510))))
(let (($generated@@512 ($generated@@393 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@392 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@391 $generated@@512 $generated@@511)) (= ($generated@@390 $generated@@510) ($generated@@508 $generated@@512))))))
 :pattern ( ($generated@@390 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@394 (type $generated@@513))))
(let (($generated@@515 ($generated@@393 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@392 $generated@@515 $generated@@514)) (= (= $generated@@513 ($generated@@391 $generated@@515 $generated@@514)) (= ($generated@@426 $generated@@513) ($generated@@508 $generated@@514))))))
 :pattern ( ($generated@@426 $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@394 (type $generated@@516))))
(let (($generated@@518 ($generated@@393 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@392 $generated@@518 $generated@@517)) (= (= $generated@@516 ($generated@@391 $generated@@518 $generated@@517)) (= ($generated@@470 $generated@@516) ($generated@@508 $generated@@90))))))
 :pattern ( ($generated@@470 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@376 (type $generated@@519))))
(let (($generated@@521 ($generated@@375 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@374 $generated@@521 $generated@@520)) (or (= $generated@@519 ($generated@@373 $generated@@521 $generated@@520)) (exists (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (and (and (= (type $generated@@522) $generated@@90) (= (type $generated@@523) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@462 $generated@@519) ($generated@@358 ($generated@@290 $generated@@522 $generated@@523)))))
 :no-pattern (type $generated@@522)
 :no-pattern (type $generated@@523)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
))))))
 :pattern ( ($generated@@462 $generated@@519))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 ($generated@@394 (type $generated@@524))))
(let (($generated@@526 ($generated@@393 (type $generated@@524))))
 (=> (= (type $generated@@524) ($generated@@392 $generated@@526 $generated@@525)) (or (= $generated@@524 ($generated@@391 $generated@@526 $generated@@525)) (exists (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (and (and (= (type $generated@@527) $generated@@90) (= (type $generated@@528) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@470 $generated@@524) ($generated@@358 ($generated@@290 $generated@@527 $generated@@528)))))
 :no-pattern (type $generated@@527)
 :no-pattern (type $generated@@528)
 :no-pattern ($generated $generated@@527)
 :no-pattern ($generated@@0 $generated@@527)
 :no-pattern ($generated $generated@@528)
 :no-pattern ($generated@@0 $generated@@528)
))))))
 :pattern ( ($generated@@470 $generated@@524))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@90) ($generated@@291 $generated@@529 $generated@@46)) (and (= ($generated@@358 ($generated@@88 $generated@@2 $generated@@529)) $generated@@529) ($generated@@84 ($generated@@88 $generated@@2 $generated@@529) $generated@@46)))
 :pattern ( ($generated@@291 $generated@@529 $generated@@46))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@90) ($generated@@291 $generated@@530 $generated@@47)) (and (= ($generated@@358 ($generated@@88 $generated@@3 $generated@@530)) $generated@@530) ($generated@@84 ($generated@@88 $generated@@3 $generated@@530) $generated@@47)))
 :pattern ( ($generated@@291 $generated@@530 $generated@@47))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@90) ($generated@@291 $generated@@531 $generated@@44)) (and (= ($generated@@358 ($generated@@88 $generated@@4 $generated@@531)) $generated@@531) ($generated@@84 ($generated@@88 $generated@@4 $generated@@531) $generated@@44)))
 :pattern ( ($generated@@291 $generated@@531 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@532) 21))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@90) ($generated@@291 $generated@@533 $generated@@45)) (and (= ($generated@@358 ($generated@@88 $generated@@532 $generated@@533)) $generated@@533) ($generated@@84 ($generated@@88 $generated@@532 $generated@@533) $generated@@45)))
 :pattern ( ($generated@@291 $generated@@533 $generated@@45))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@81) (= (type $generated@@535) $generated@@82)) (= ($generated@@161 ($generated@@80 $generated@@534) $generated@@535) ($generated@@161 $generated@@534 $generated@@535)))
 :pattern ( ($generated@@161 ($generated@@80 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@291 ($generated@@358 $generated@@536) $generated@@537) ($generated@@84 $generated@@536 $generated@@537)))
 :pattern ( ($generated@@291 ($generated@@358 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@108 (type $generated@@538))))
 (=> (= (type $generated@@538) ($generated@@105 $generated@@539 $generated@@2)) (<= 0 ($generated@@363 $generated@@538))))
 :pattern ( ($generated@@363 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@352 (type $generated@@540))))
 (=> (= (type $generated@@540) ($generated@@351 $generated@@541)) (<= 0 ($generated@@350 $generated@@540))))
 :pattern ( ($generated@@350 $generated@@540))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@68) (= (type $generated@@545) $generated@@68)) (= ($generated@@542 ($generated@@488 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@488 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@68) (= (type $generated@@549) $generated@@68)) (= ($generated@@546 ($generated@@488 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@488 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (= ($generated@@76 ($generated@@488 $generated@@550 $generated@@551)) $generated@@58))
 :pattern ( ($generated@@488 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@68) (= (type $generated@@555) $generated@@68)) (= ($generated@@552 ($generated@@496 $generated@@554 $generated@@555)) $generated@@554))
 :pattern ( ($generated@@496 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@68) (= (type $generated@@559) $generated@@68)) (= ($generated@@556 ($generated@@496 $generated@@558 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@496 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@68) (= (type $generated@@561) $generated@@68)) (= ($generated@@76 ($generated@@496 $generated@@560 $generated@@561)) $generated@@59))
 :pattern ( ($generated@@496 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@90) (= (type $generated@@563) $generated@@90)) (= ($generated@@195 ($generated@@290 $generated@@562 $generated@@563)) $generated@@61))
 :pattern ( ($generated@@290 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@68) (= (type $generated@@567) $generated@@68)) (= ($generated@@564 ($generated@@182 $generated@@566 $generated@@567)) $generated@@566))
 :pattern ( ($generated@@182 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@68) (= (type $generated@@571) $generated@@68)) (= ($generated@@568 ($generated@@182 $generated@@570 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@182 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@90) (= (type $generated@@573) $generated@@90)) (= ($generated@@189 ($generated@@290 $generated@@572 $generated@@573)) $generated@@572))
 :pattern ( ($generated@@290 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@90) (= (type $generated@@575) $generated@@90)) (= ($generated@@190 ($generated@@290 $generated@@574 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@290 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@90) (= (type $generated@@577) $generated@@82)) (= ($generated@@195 ($generated@@328 $generated@@576 $generated@@577)) $generated@@65))
 :pattern ( ($generated@@328 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@90) (= (type $generated@@579) $generated@@82)) (= ($generated@@89 ($generated@@328 $generated@@578 $generated@@579)) $generated@@578))
 :pattern ( ($generated@@328 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@90) (= (type $generated@@581) $generated@@82)) (= ($generated@@87 ($generated@@328 $generated@@580 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@328 $generated@@580 $generated@@581))
)))
(assert  (and (forall (($generated@@584 T@U) ) (! (= (type ($generated@@582 $generated@@584)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@584))
)) (forall (($generated@@585 T@U) ($generated@@586 Int) ) (! (let (($generated@@587 ($generated@@352 (type $generated@@585))))
(= (type ($generated@@583 $generated@@585 $generated@@586)) $generated@@587))
 :pattern ( ($generated@@583 $generated@@585 $generated@@586))
))))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@351 $generated@@90)) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@588 ($generated@@582 $generated@@589) $generated@@590) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@350 $generated@@588))) ($generated@@334 ($generated@@583 $generated@@588 $generated@@591) $generated@@589 $generated@@590))
 :pattern ( ($generated@@583 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@103 $generated@@588 ($generated@@582 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@592 ($generated@@104 $generated@@593)) $generated@@593)
 :pattern ( ($generated@@104 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@68)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@68) (= ($generated@@594 ($generated@@314 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@314 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@68) (= ($generated@@76 ($generated@@314 $generated@@597)) $generated@@54))
 :pattern ( ($generated@@314 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@68)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@68) (= ($generated@@598 ($generated@@319 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@319 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@68) (= ($generated@@76 ($generated@@319 $generated@@601)) $generated@@55))
 :pattern ( ($generated@@319 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@68)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@68) (= ($generated@@602 ($generated@@205 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@205 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@68) (= ($generated@@76 ($generated@@205 $generated@@605)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@68)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@68) (= ($generated@@606 ($generated@@582 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@582 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@68) (= ($generated@@76 ($generated@@582 $generated@@609)) $generated@@57))
 :pattern ( ($generated@@582 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@68)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@68) (= ($generated@@610 ($generated@@85 $generated@@612)) $generated@@612))
 :pattern ( ($generated@@85 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@613)))
(= ($generated@@88 $generated@@614 ($generated@@358 $generated@@613)) $generated@@613))
 :pattern ( ($generated@@358 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@615) ($generated@@374 $generated@@90 $generated@@90)) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) $generated@@68)) (= ($generated@@84 $generated@@615 ($generated@@488 $generated@@616 $generated@@617)) (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@372 $generated@@615) $generated@@618))) (and ($generated@@291 ($generated@@110 ($generated@@463 $generated@@615) $generated@@618) $generated@@617) ($generated@@291 $generated@@618 $generated@@616)))
 :pattern ( ($generated@@110 ($generated@@463 $generated@@615) $generated@@618))
 :pattern ( ($generated@@110 ($generated@@372 $generated@@615) $generated@@618))
))))
 :pattern ( ($generated@@84 $generated@@615 ($generated@@488 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@619) ($generated@@392 $generated@@90 $generated@@90)) (= (type $generated@@620) $generated@@68)) (= (type $generated@@621) $generated@@68)) (= ($generated@@84 $generated@@619 ($generated@@496 $generated@@620 $generated@@621)) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@390 $generated@@619) $generated@@622))) (and ($generated@@291 ($generated@@110 ($generated@@471 $generated@@619) $generated@@622) $generated@@621) ($generated@@291 $generated@@622 $generated@@620)))
 :pattern ( ($generated@@110 ($generated@@471 $generated@@619) $generated@@622))
 :pattern ( ($generated@@110 ($generated@@390 $generated@@619) $generated@@622))
))))
 :pattern ( ($generated@@84 $generated@@619 ($generated@@496 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@90) (= (type $generated@@626) $generated@@90)) (< ($generated@@623 $generated@@625) ($generated@@624 ($generated@@290 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@290 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@90) (= (type $generated@@628) $generated@@90)) (< ($generated@@623 $generated@@628) ($generated@@624 ($generated@@290 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@290 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@90) (= (type $generated@@630) $generated@@82)) (< ($generated@@623 $generated@@629) ($generated@@624 ($generated@@328 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@328 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@90) (= (type $generated@@632) $generated@@82)) (< ($generated@@624 $generated@@632) ($generated@@624 ($generated@@328 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@328 $generated@@631 $generated@@632))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@81) (= (type $generated@@634) $generated@@82)) (or ($generated@@162 ($generated@@173 $generated@@634)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@634 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@173 ($generated@@11 ($generated@@86 ($generated@@173 $generated@@634)))))) (let (($generated@@635 ($generated@@173 ($generated@@87 ($generated@@173 $generated@@634)))))
(let (($generated@@636 ($generated@@198 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@173 $generated@@634)))))))
 (=> (not ($generated@@86 $generated@@635)) (let (($generated@@637 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@635)))))
 (=> (<= $generated@@636 $generated@@637) ($generated@@162 $generated@@635))))))) (= ($generated@@161 ($generated@@80 $generated@@633) ($generated@@173 $generated@@634)) (ite ($generated@@86 ($generated@@173 $generated@@634)) true (let (($generated@@638 ($generated@@173 ($generated@@87 ($generated@@173 $generated@@634)))))
(let (($generated@@639 ($generated@@198 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@173 $generated@@634)))))))
(ite ($generated@@86 $generated@@638) true (let (($generated@@640 ($generated@@198 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@638))))))
 (and (<= $generated@@639 $generated@@640) ($generated@@161 ($generated@@80 $generated@@633) $generated@@638))))))))))
 :weight 3
 :pattern ( ($generated@@161 ($generated@@80 $generated@@633) ($generated@@173 $generated@@634)))
))))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@90) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) $generated@@68)) ($generated@@291 $generated@@641 ($generated@@488 $generated@@642 $generated@@643))) (and (= ($generated@@358 ($generated@@88 ($generated@@374 $generated@@90 $generated@@90) $generated@@641)) $generated@@641) ($generated@@84 ($generated@@88 ($generated@@374 $generated@@90 $generated@@90) $generated@@641) ($generated@@488 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@291 $generated@@641 ($generated@@488 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@90) (= (type $generated@@645) $generated@@68)) (= (type $generated@@646) $generated@@68)) ($generated@@291 $generated@@644 ($generated@@496 $generated@@645 $generated@@646))) (and (= ($generated@@358 ($generated@@88 ($generated@@392 $generated@@90 $generated@@90) $generated@@644)) $generated@@644) ($generated@@84 ($generated@@88 ($generated@@392 $generated@@90 $generated@@90) $generated@@644) ($generated@@496 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@291 $generated@@644 ($generated@@496 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@68) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) $generated@@90)) ($generated@@291 $generated@@649 ($generated@@182 $generated@@647 $generated@@648))) (and (= ($generated@@358 ($generated@@88 $generated@@82 $generated@@649)) $generated@@649) ($generated@@84 ($generated@@88 $generated@@82 $generated@@649) ($generated@@182 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@291 $generated@@649 ($generated@@182 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@82) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@279 $generated@@652) (and ($generated@@307 $generated@@650) ($generated@@103 $generated@@650 ($generated@@85 $generated@@651) $generated@@652)))) ($generated@@334 ($generated@@89 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@334 ($generated@@89 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@653)))
 (not ($generated@@0 ($generated@@110 ($generated@@508 $generated@@654) $generated@@653))))
 :pattern ( (let (($generated@@654 (type $generated@@653)))
($generated@@110 ($generated@@508 $generated@@654) $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@68) (= (type $generated@@656) $generated@@68)) (and (= ($generated@@76 ($generated@@182 $generated@@655 $generated@@656)) $generated@@62) (= ($generated@@369 ($generated@@182 $generated@@655 $generated@@656)) $generated@@66)))
 :pattern ( ($generated@@182 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@82) (= ($generated@@623 ($generated@@358 $generated@@657)) ($generated@@624 $generated@@657)))
 :pattern ( ($generated@@623 ($generated@@358 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@90) ($generated@@291 $generated@@658 ($generated@@104 0))) (and (= ($generated@@358 ($generated@@88 $generated@@2 $generated@@658)) $generated@@658) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@658) ($generated@@104 0))))
 :pattern ( ($generated@@291 $generated@@658 ($generated@@104 0)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@659) $generated@@90) (= (type $generated@@660) $generated@@68)) ($generated@@291 $generated@@659 ($generated@@314 $generated@@660))) (and (= ($generated@@358 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@659)) $generated@@659) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@659) ($generated@@314 $generated@@660))))
 :pattern ( ($generated@@291 $generated@@659 ($generated@@314 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@661) $generated@@90) (= (type $generated@@662) $generated@@68)) ($generated@@291 $generated@@661 ($generated@@319 $generated@@662))) (and (= ($generated@@358 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@661)) $generated@@661) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@661) ($generated@@319 $generated@@662))))
 :pattern ( ($generated@@291 $generated@@661 ($generated@@319 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (= (type $generated@@663) $generated@@90) (= (type $generated@@664) $generated@@68)) ($generated@@291 $generated@@663 ($generated@@205 $generated@@664))) (and (= ($generated@@358 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@663)) $generated@@663) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@663) ($generated@@205 $generated@@664))))
 :pattern ( ($generated@@291 $generated@@663 ($generated@@205 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@665) $generated@@90) (= (type $generated@@666) $generated@@68)) ($generated@@291 $generated@@665 ($generated@@582 $generated@@666))) (and (= ($generated@@358 ($generated@@88 ($generated@@351 $generated@@90) $generated@@665)) $generated@@665) ($generated@@84 ($generated@@88 ($generated@@351 $generated@@90) $generated@@665) ($generated@@582 $generated@@666))))
 :pattern ( ($generated@@291 $generated@@665 ($generated@@582 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (= (type $generated@@667) $generated@@68) (= (type $generated@@668) $generated@@90)) ($generated@@291 $generated@@668 ($generated@@85 $generated@@667))) (and (= ($generated@@358 ($generated@@88 $generated@@82 $generated@@668)) $generated@@668) ($generated@@84 ($generated@@88 $generated@@82 $generated@@668) ($generated@@85 $generated@@667))))
 :pattern ( ($generated@@291 $generated@@668 ($generated@@85 $generated@@667)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) $generated@@82) (= (type $generated@@670) $generated@@68)) (= (type $generated@@671) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@279 $generated@@671) (and ($generated@@307 $generated@@669) ($generated@@103 $generated@@669 ($generated@@85 $generated@@670) $generated@@671)))) ($generated@@103 ($generated@@87 $generated@@669) ($generated@@85 $generated@@670) $generated@@671))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@669) ($generated@@85 $generated@@670) $generated@@671))
)))
(assert  (=> (<= 5 $generated@@78) (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (= (type $generated@@672) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@673) $generated@@82)) (or ($generated@@280 $generated@@673) (and (not (= 5 $generated@@78)) (and ($generated@@279 $generated@@672) ($generated@@84 $generated@@673 ($generated@@85 $generated@@46)))))) (and ($generated@@281 $generated@@673) (= ($generated@@278 $generated@@673) (let (($generated@@674 ($generated@@282 $generated@@673)))
$generated@@674))))
 :pattern ( ($generated@@278 $generated@@673) ($generated@@279 $generated@@672))
))))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (= (type $generated@@675) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@676) $generated@@68)) (= (type $generated@@677) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@675 ($generated@@205 $generated@@676) $generated@@677) (forall (($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@678) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@675 $generated@@678)))) ($generated@@334 $generated@@678 $generated@@676 $generated@@677))
 :pattern ( ($generated@@110 $generated@@675 $generated@@678))
))))
 :pattern ( ($generated@@103 $generated@@675 ($generated@@205 $generated@@676) $generated@@677))
)))
(assert (= $generated@@196 ($generated@@173 $generated@@196)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (and (= (type $generated@@679) $generated@@82) (= (type $generated@@680) $generated@@68)) (= (type $generated@@681) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@279 $generated@@681) (and ($generated@@181 $generated@@679) (exists (($generated@@682 T@U) ) (!  (and (= (type $generated@@682) $generated@@68) ($generated@@103 $generated@@679 ($generated@@182 $generated@@680 $generated@@682) $generated@@681))
 :pattern ( ($generated@@103 $generated@@679 ($generated@@182 $generated@@680 $generated@@682) $generated@@681))
))))) ($generated@@334 ($generated@@189 $generated@@679) $generated@@680 $generated@@681))
 :pattern ( ($generated@@334 ($generated@@189 $generated@@679) $generated@@680 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@82) (= (type $generated@@684) $generated@@68)) (= (type $generated@@685) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@279 $generated@@685) (and ($generated@@181 $generated@@683) (exists (($generated@@686 T@U) ) (!  (and (= (type $generated@@686) $generated@@68) ($generated@@103 $generated@@683 ($generated@@182 $generated@@686 $generated@@684) $generated@@685))
 :pattern ( ($generated@@103 $generated@@683 ($generated@@182 $generated@@686 $generated@@684) $generated@@685))
))))) ($generated@@334 ($generated@@190 $generated@@683) $generated@@684 $generated@@685))
 :pattern ( ($generated@@334 ($generated@@190 $generated@@683) $generated@@684 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) $generated@@90) (= (type $generated@@688) $generated@@90)) (= ($generated@@290 ($generated@@173 $generated@@687) ($generated@@173 $generated@@688)) ($generated@@173 ($generated@@290 $generated@@687 $generated@@688))))
 :pattern ( ($generated@@290 ($generated@@173 $generated@@687) ($generated@@173 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@90) (= (type $generated@@690) $generated@@82)) (= ($generated@@328 ($generated@@173 $generated@@689) ($generated@@173 $generated@@690)) ($generated@@173 ($generated@@328 $generated@@689 $generated@@690))))
 :pattern ( ($generated@@328 ($generated@@173 $generated@@689) ($generated@@173 $generated@@690)))
)))
(assert (forall (($generated@@691 Int) ) (! (= ($generated@@358 ($generated@@8 ($generated@@198 $generated@@691))) ($generated@@173 ($generated@@358 ($generated@@8 $generated@@691))))
 :pattern ( ($generated@@358 ($generated@@8 ($generated@@198 $generated@@691))))
)))
(assert (forall (($generated@@692 T@U) ) (! (= ($generated@@358 ($generated@@173 $generated@@692)) ($generated@@173 ($generated@@358 $generated@@692)))
 :pattern ( ($generated@@358 ($generated@@173 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ) (! (let (($generated@@694 ($generated@@352 (type $generated@@693))))
 (=> (and (= (type $generated@@693) ($generated@@351 $generated@@694)) (= ($generated@@350 $generated@@693) 0)) (= $generated@@693 ($generated@@349 $generated@@694))))
 :pattern ( ($generated@@350 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (! (let (($generated@@698 (type $generated@@696)))
 (=> (and (and (= (type $generated@@695) ($generated@@105 $generated@@698 $generated@@2)) (= (type $generated@@697) $generated@@2)) (<= 0 ($generated $generated@@697))) (= ($generated@@363 ($generated@@111 $generated@@695 $generated@@696 $generated@@697)) (+ (- ($generated@@363 $generated@@695) ($generated ($generated@@110 $generated@@695 $generated@@696))) ($generated $generated@@697)))))
 :pattern ( ($generated@@363 ($generated@@111 $generated@@695 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@700) $generated@@2)) ($generated@@103 $generated@@700 $generated@@46 $generated@@699))
 :pattern ( ($generated@@103 $generated@@700 $generated@@46 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@702) $generated@@3)) ($generated@@103 $generated@@702 $generated@@47 $generated@@701))
 :pattern ( ($generated@@103 $generated@@702 $generated@@47 $generated@@701))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@704) $generated@@4)) ($generated@@103 $generated@@704 $generated@@44 $generated@@703))
 :pattern ( ($generated@@103 $generated@@704 $generated@@44 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@706) $generated@@532)) ($generated@@103 $generated@@706 $generated@@45 $generated@@705))
 :pattern ( ($generated@@103 $generated@@706 $generated@@45 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@708) $generated@@90)) ($generated@@103 $generated@@708 $generated@@48 $generated@@707))
 :pattern ( ($generated@@103 $generated@@708 $generated@@48 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@709) $generated@@68) (= (type $generated@@710) $generated@@90)) (= (type $generated@@711) $generated@@82)) (= (type $generated@@712) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@279 $generated@@712)) (= ($generated@@103 ($generated@@328 $generated@@710 $generated@@711) ($generated@@85 $generated@@709) $generated@@712)  (and ($generated@@334 $generated@@710 $generated@@709 $generated@@712) ($generated@@103 $generated@@711 ($generated@@85 $generated@@709) $generated@@712))))
 :pattern ( ($generated@@103 ($generated@@328 $generated@@710 $generated@@711) ($generated@@85 $generated@@709) $generated@@712))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@713) ($generated@@351 $generated@@90)) (= (type $generated@@714) $generated@@68)) (= ($generated@@84 $generated@@713 ($generated@@582 $generated@@714)) (forall (($generated@@715 Int) ) (!  (=> (and (<= 0 $generated@@715) (< $generated@@715 ($generated@@350 $generated@@713))) ($generated@@291 ($generated@@583 $generated@@713 $generated@@715) $generated@@714))
 :pattern ( ($generated@@583 $generated@@713 $generated@@715))
))))
 :pattern ( ($generated@@84 $generated@@713 ($generated@@582 $generated@@714)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 Int) ) (!  (=> (= (type $generated@@717) ($generated@@351 $generated@@90)) (=> (and (<= 0 $generated@@718) (< $generated@@718 ($generated@@350 $generated@@717))) (< ($generated@@624 ($generated@@88 $generated@@82 ($generated@@583 $generated@@717 $generated@@718))) ($generated@@716 $generated@@717))))
 :pattern ( ($generated@@624 ($generated@@88 $generated@@82 ($generated@@583 $generated@@717 $generated@@718))))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (and (= (type $generated@@719) ($generated@@374 $generated@@90 $generated@@90)) (= (type $generated@@720) $generated@@68)) (= (type $generated@@721) $generated@@68)) ($generated@@84 $generated@@719 ($generated@@488 $generated@@720 $generated@@721))) (and (and ($generated@@84 ($generated@@372 $generated@@719) ($generated@@314 $generated@@720)) ($generated@@84 ($generated@@415 $generated@@719) ($generated@@314 $generated@@721))) ($generated@@84 ($generated@@462 $generated@@719) ($generated@@314 ($generated@@182 $generated@@720 $generated@@721)))))
 :pattern ( ($generated@@84 $generated@@719 ($generated@@488 $generated@@720 $generated@@721)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (and (= (type $generated@@722) ($generated@@392 $generated@@90 $generated@@90)) (= (type $generated@@723) $generated@@68)) (= (type $generated@@724) $generated@@68)) ($generated@@84 $generated@@722 ($generated@@496 $generated@@723 $generated@@724))) (and (and ($generated@@84 ($generated@@390 $generated@@722) ($generated@@319 $generated@@723)) ($generated@@84 ($generated@@426 $generated@@722) ($generated@@319 $generated@@724))) ($generated@@84 ($generated@@470 $generated@@722) ($generated@@319 ($generated@@182 $generated@@723 $generated@@724)))))
 :pattern ( ($generated@@84 $generated@@722 ($generated@@496 $generated@@723 $generated@@724)))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) $generated@@2) ($generated@@84 $generated@@725 $generated@@46))
 :pattern ( ($generated@@84 $generated@@725 $generated@@46))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@3) ($generated@@84 $generated@@726 $generated@@47))
 :pattern ( ($generated@@84 $generated@@726 $generated@@47))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@4) ($generated@@84 $generated@@727 $generated@@44))
 :pattern ( ($generated@@84 $generated@@727 $generated@@44))
)))
(assert (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@532) ($generated@@84 $generated@@728 $generated@@45))
 :pattern ( ($generated@@84 $generated@@728 $generated@@45))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@90) ($generated@@84 $generated@@729 $generated@@48))
 :pattern ( ($generated@@84 $generated@@729 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () T@U)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () T@U)
(declare-fun $generated@@738 (T@U) Bool)
(declare-fun $generated@@739 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@730) $generated@@82) (= (type $generated@@734) $generated@@82)) (= (type $generated@@735) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@736) ($generated@@212 $generated@@106 $generated@@4))) (= (type $generated@@737) $generated@@106)) (= (type $generated@@732) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@731) $generated@@82)) (= (type $generated@@733) $generated@@82)) (= (type $generated@@739) ($generated@@212 $generated@@106 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@740 true))
(let (($generated@@741  (=> (and (not ($generated@@172 $generated@@730 $generated@@731)) (= (ControlFlow 0 16) 14)) $generated@@740)))
(let (($generated@@742  (=> (and (and ($generated@@172 $generated@@730 $generated@@731) ($generated@@103 $generated@@731 ($generated@@85 $generated@@46) $generated@@732)) (and ($generated@@162 $generated@@731) (= (ControlFlow 0 15) 14))) $generated@@740)))
(let (($generated@@743  (=> ($generated@@84 ($generated@@278 $generated@@730) ($generated@@85 $generated@@46)) (=> (and (and ($generated@@84 $generated@@731 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@731 ($generated@@85 $generated@@46) $generated@@732)) ($generated@@103 $generated@@730 ($generated@@85 $generated@@46) $generated@@732)) (and (=> (= (ControlFlow 0 17) (- 0 18)) (or (= $generated@@730 $generated@@730) (< ($generated@@624 $generated@@730) ($generated@@624 $generated@@730)))) (=> (or (= $generated@@730 $generated@@730) (< ($generated@@624 $generated@@730) ($generated@@624 $generated@@730))) (=> (and (and (and (or (= $generated@@730 $generated@@730) ($generated@@280 $generated@@730)) (= $generated@@733 ($generated@@278 $generated@@730))) (and ($generated@@280 $generated@@730) ($generated@@84 $generated@@733 ($generated@@85 $generated@@46)))) (and (and (= $generated@@731 $generated@@733) ($generated@@103 $generated@@730 ($generated@@85 $generated@@46) $generated@@732)) (and ($generated@@103 $generated@@731 ($generated@@85 $generated@@46) $generated@@732) ($generated@@174 $generated@@730 $generated@@731)))) (and (=> (= (ControlFlow 0 17) 15) $generated@@742) (=> (= (ControlFlow 0 17) 16) $generated@@741)))))))))
(let (($generated@@744  (and (=> (= (ControlFlow 0 2) (- 0 6)) (let (($generated@@745 ($generated@@278 $generated@@730)))
 (=> ($generated@@174 $generated@@730 $generated@@745) (or ($generated@@172 $generated@@730 $generated@@745) (forall (($generated@@746 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@166)) $generated@@746 $generated@@730) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@166)) $generated@@746 $generated@@745)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@166)) $generated@@746 $generated@@745))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@166)) $generated@@746 $generated@@730))
)))))) (=> (let (($generated@@747 ($generated@@278 $generated@@730)))
 (=> ($generated@@174 $generated@@730 $generated@@747) (or ($generated@@172 $generated@@730 $generated@@747) (forall (($generated@@748 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@166)) $generated@@748 $generated@@730) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@166)) $generated@@748 $generated@@747)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@166)) $generated@@748 $generated@@747))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@166)) $generated@@748 $generated@@730))
))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (let (($generated@@749 ($generated@@278 $generated@@730)))
 (=> ($generated@@162 $generated@@749) (or ($generated@@161 ($generated@@80 $generated@@166) $generated@@749) (=> ($generated@@86 $generated@@749) ($generated@@0 ($generated@@173 ($generated@@11 true)))))))) (=> (let (($generated@@750 ($generated@@278 $generated@@730)))
 (=> ($generated@@162 $generated@@750) (or ($generated@@161 ($generated@@80 $generated@@166) $generated@@750) (=> ($generated@@86 $generated@@750) ($generated@@0 ($generated@@173 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (let (($generated@@751 ($generated@@278 $generated@@730)))
 (=> ($generated@@162 $generated@@751) (or ($generated@@161 ($generated@@80 $generated@@166) $generated@@751) (=> (not ($generated@@86 $generated@@751)) (let (($generated@@752 ($generated@@87 $generated@@751)))
 (=> ($generated@@86 $generated@@752) ($generated@@0 ($generated@@173 ($generated@@11 true)))))))))) (=> (let (($generated@@753 ($generated@@278 $generated@@730)))
 (=> ($generated@@162 $generated@@753) (or ($generated@@161 ($generated@@80 $generated@@166) $generated@@753) (=> (not ($generated@@86 $generated@@753)) (let (($generated@@754 ($generated@@87 $generated@@753)))
 (=> ($generated@@86 $generated@@754) ($generated@@0 ($generated@@173 ($generated@@11 true))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@755 ($generated@@278 $generated@@730)))
 (=> ($generated@@162 $generated@@755) (or ($generated@@161 ($generated@@80 $generated@@166) $generated@@755) (=> (not ($generated@@86 $generated@@755)) (let (($generated@@756 ($generated@@87 $generated@@755)))
(let (($generated@@757 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@755)))))
 (=> (not ($generated@@86 $generated@@756)) (let (($generated@@758 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@756)))))
(<= $generated@@757 $generated@@758)))))))))) (=> (let (($generated@@759 ($generated@@278 $generated@@730)))
 (=> ($generated@@162 $generated@@759) (or ($generated@@161 ($generated@@80 $generated@@166) $generated@@759) (=> (not ($generated@@86 $generated@@759)) (let (($generated@@760 ($generated@@87 $generated@@759)))
(let (($generated@@761 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@759)))))
 (=> (not ($generated@@86 $generated@@760)) (let (($generated@@762 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@760)))))
(<= $generated@@761 $generated@@762))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@763 ($generated@@278 $generated@@730)))
 (=> ($generated@@162 $generated@@763) (or ($generated@@161 ($generated@@80 $generated@@166) $generated@@763) (=> (not ($generated@@86 $generated@@763)) (let (($generated@@764 ($generated@@87 $generated@@763)))
 (=> (not ($generated@@86 $generated@@764)) ($generated@@161 ($generated@@80 ($generated@@80 $generated@@166)) $generated@@764))))))))))))))))))
(let (($generated@@765  (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (and ($generated@@84 ($generated@@173 $generated@@196) ($generated@@85 $generated@@46)) (and ($generated@@172 $generated@@730 ($generated@@173 $generated@@196)) ($generated@@161 ($generated@@80 $generated@@166) ($generated@@173 $generated@@196)))) (exists (($generated@@766 T@U) ) (!  (and (= (type $generated@@766) $generated@@82) (and ($generated@@84 $generated@@766 ($generated@@85 $generated@@46)) (and ($generated@@172 $generated@@730 $generated@@766) ($generated@@161 ($generated@@80 $generated@@166) $generated@@766))))
 :no-pattern (type $generated@@766)
 :no-pattern ($generated $generated@@766)
 :no-pattern ($generated@@0 $generated@@766)
)))) (=> (or (and ($generated@@84 ($generated@@173 $generated@@196) ($generated@@85 $generated@@46)) (and ($generated@@172 $generated@@730 ($generated@@173 $generated@@196)) ($generated@@161 ($generated@@80 $generated@@166) ($generated@@173 $generated@@196)))) (exists (($generated@@767 T@U) ) (!  (and (= (type $generated@@767) $generated@@82) (and ($generated@@84 $generated@@767 ($generated@@85 $generated@@46)) (and ($generated@@172 $generated@@730 $generated@@767) ($generated@@161 ($generated@@80 $generated@@166) $generated@@767))))
 :no-pattern (type $generated@@767)
 :no-pattern ($generated $generated@@767)
 :no-pattern ($generated@@0 $generated@@767)
))) (=> (and (and (and ($generated@@84 $generated@@734 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735)) (and ($generated@@172 $generated@@730 $generated@@734) ($generated@@161 ($generated@@80 $generated@@166) $generated@@734))) (and (and ($generated@@281 $generated@@730) (= ($generated@@278 $generated@@730) $generated@@734)) (and ($generated@@84 ($generated@@278 $generated@@730) ($generated@@85 $generated@@46)) (= (ControlFlow 0 7) 2)))) $generated@@744)))))
(let (($generated@@768  (=> (and (not ($generated@@172 $generated@@730 $generated@@734)) (= (ControlFlow 0 11) 7)) $generated@@765)))
(let (($generated@@769  (=> (and (and ($generated@@172 $generated@@730 $generated@@734) ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735)) (and ($generated@@162 $generated@@734) (= (ControlFlow 0 10) 7))) $generated@@765)))
(let (($generated@@770  (=> (and (and (and ($generated@@84 $generated@@734 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735)) ($generated@@103 $generated@@730 ($generated@@85 $generated@@46) $generated@@735)) (and ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735) ($generated@@174 $generated@@730 $generated@@734))) (and (=> (= (ControlFlow 0 12) 10) $generated@@769) (=> (= (ControlFlow 0 12) 11) $generated@@768)))))
(let (($generated@@771  (=> (and (not (and ($generated@@84 $generated@@734 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735))) (= (ControlFlow 0 9) 7)) $generated@@765)))
(let (($generated@@772  (=> (= $generated@@736 ($generated@@266 $generated@@737 $generated@@732 $generated@@60 false)) (=> (and (and (and ($generated@@279 $generated@@735) ($generated@@738 $generated@@735)) (forall (($generated@@773 T@U) ) (!  (=> (and (= (type $generated@@773) $generated@@82) ($generated@@84 $generated@@773 ($generated@@85 $generated@@46))) (and ($generated@@174 $generated@@730 $generated@@773) (=> ($generated@@172 $generated@@730 $generated@@773) ($generated@@162 $generated@@773))))
 :pattern ( ($generated@@161 ($generated@@80 $generated@@166) $generated@@773))
 :pattern ( ($generated@@172 $generated@@730 $generated@@773))
))) (and (exists (($generated@@774 T@U) ) (!  (and (= (type $generated@@774) $generated@@82) (and ($generated@@84 $generated@@774 ($generated@@85 $generated@@46)) (and ($generated@@172 $generated@@730 $generated@@774) ($generated@@161 ($generated@@80 ($generated@@80 $generated@@166)) $generated@@774))))
 :pattern ( ($generated@@161 ($generated@@80 ($generated@@80 $generated@@166)) $generated@@774))
 :pattern ( ($generated@@172 $generated@@730 $generated@@774))
)) (= $generated@@732 $generated@@735))) (and (=> (= (ControlFlow 0 13) 12) $generated@@770) (=> (= (ControlFlow 0 13) 9) $generated@@771))))))
(let (($generated@@775  (=> (= $generated@@739 ($generated@@211 $generated@@737 $generated@@732 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) 17) $generated@@743) (=> (= (ControlFlow 0 19) 13) $generated@@772)))))
(let (($generated@@776  (=> (and (and (and ($generated@@279 $generated@@732) ($generated@@738 $generated@@732)) ($generated@@84 $generated@@730 ($generated@@85 $generated@@46))) (and (= 5 $generated@@78) (= (ControlFlow 0 20) 19))) $generated@@775)))
$generated@@776))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U Int T@U) T@U)
(declare-fun $generated@@162 (Int T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U) T@U)
(declare-fun $generated@@199 (T@U T@U) Bool)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@209 (Int) Int)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@221 (T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@T T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U) T@U)
(declare-fun $generated@@281 (T@U T@U) Bool)
(declare-fun $generated@@291 (T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) Bool)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@318 (T@U T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@333 (T@U T@U T@U) Bool)
(declare-fun $generated@@348 (T@T) T@U)
(declare-fun $generated@@349 (T@U) Int)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@360 (T@U) Int)
(declare-fun $generated@@361 (T@T) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@T T@T) T@U)
(declare-fun $generated@@371 (T@T T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@T T@T) T@U)
(declare-fun $generated@@389 (T@T T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@391 (T@T) T@T)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@449 (T@U) Bool)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@494 (T@U T@U) T@U)
(declare-fun $generated@@502 (T@U T@U) T@U)
(declare-fun $generated@@514 (T@T) T@U)
(declare-fun $generated@@538 () T@T)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@589 (T@U Int) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@608 (T@U) T@U)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@629 (T@U) Int)
(declare-fun $generated@@630 (T@U) Int)
(declare-fun $generated@@719 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ($generated@@165 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164 $generated@@165)) $generated@@82)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164 $generated@@165))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@166 T@U) ($generated@@167 Int) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@81) (= (type $generated@@168) $generated@@82)) (or ($generated@@162 $generated@@167 $generated@@168) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@168 ($generated@@85 $generated@@46))))) ($generated@@84 ($generated@@161 $generated@@166 $generated@@167 $generated@@168) ($generated@@85 $generated@@46)))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167 $generated@@168))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@82)) (or ($generated@@170 $generated@@172) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@172 ($generated@@85 $generated@@46))))) true)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@81)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@81)))
(assert (forall (($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@81) (= (type $generated@@178) $generated@@82)) (= ($generated@@79 $generated@@176 $generated@@177 $generated@@178) ($generated@@79 $generated@@174 $generated@@177 $generated@@178)))
 :pattern ( ($generated@@79 ($generated@@173 $generated@@176) $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@81) (= (type $generated@@181) $generated@@82)) (= ($generated@@161 $generated@@179 $generated@@180 $generated@@181) ($generated@@161 $generated@@174 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@161 ($generated@@173 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@2) ($generated@@84 $generated@@182 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@182 ($generated@@104 0)))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@184 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@82) (= (type $generated@@189) $generated@@82)) (or ($generated@@185 ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@188 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@189 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@190 Int) ) (!  (and ($generated@@83 $generated@@190 ($generated@@184 $generated@@188)) ($generated@@83 $generated@@190 ($generated@@184 $generated@@189)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@190 $generated@@189))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@190 $generated@@188))
)) (= ($generated@@183 ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)) (forall (($generated@@191 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@174) $generated@@191 ($generated@@184 $generated@@188)) ($generated@@79 ($generated@@80 $generated@@174) $generated@@191 ($generated@@184 $generated@@189))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@191 $generated@@189))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@191 $generated@@188))
)))))
 :weight 3
 :pattern ( ($generated@@183 ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@194 $generated@@195)) $generated@@68)
 :pattern ( ($generated@@193 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (and (= (type $generated@@196) $generated@@68) (= (type $generated@@197) $generated@@68)) (= (type $generated@@198) $generated@@82)) ($generated@@84 $generated@@198 ($generated@@193 $generated@@196 $generated@@197))) ($generated@@192 $generated@@198))
 :pattern ( ($generated@@192 $generated@@198) ($generated@@84 $generated@@198 ($generated@@193 $generated@@196 $generated@@197)))
)))
(assert  (and (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@90)
 :pattern ( ($generated@@200 $generated@@202))
)) (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@90)
 :pattern ( ($generated@@201 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) $generated@@82) (= (type $generated@@205) $generated@@82)) true) (= ($generated@@199 $generated@@204 $generated@@205)  (and (= ($generated@@200 $generated@@204) ($generated@@200 $generated@@205)) (= ($generated@@201 $generated@@204) ($generated@@201 $generated@@205)))))
 :pattern ( ($generated@@199 $generated@@204 $generated@@205))
)))
(assert  (and (forall (($generated@@208 T@U) ) (! (= (type ($generated@@206 $generated@@208)) $generated@@72)
 :pattern ( ($generated@@206 $generated@@208))
)) (= (type $generated@@207) $generated@@82)))
(assert (= ($generated@@206 $generated@@207) $generated@@63))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@210 T@U) ($generated@@211 Int) ($generated@@212 T@U) ) (!  (=> (and (and (= (type $generated@@210) $generated@@81) (= (type $generated@@212) $generated@@82)) (or ($generated@@83 ($generated@@209 $generated@@211) ($generated@@184 $generated@@212)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@212 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@86 ($generated@@184 $generated@@212)))))) (let (($generated@@213 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@212)))))
($generated@@83 ($generated@@209 $generated@@211) $generated@@213))) (= ($generated@@79 ($generated@@80 $generated@@210) ($generated@@209 $generated@@211) ($generated@@184 $generated@@212)) (ite ($generated@@86 ($generated@@184 $generated@@212)) 0 (let (($generated@@214 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@212)))))
(let (($generated@@215 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@212)))))))
(+ (ite (= ($generated@@209 $generated@@211) $generated@@215) 1 0) ($generated@@79 ($generated@@80 $generated@@210) ($generated@@209 $generated@@211) $generated@@214))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@210) ($generated@@209 $generated@@211) ($generated@@184 $generated@@212)))
))))
(assert (forall (($generated@@218 T@U) ) (! (= (type ($generated@@216 $generated@@218)) $generated@@68)
 :pattern ( ($generated@@216 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (= (type $generated@@219) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@220) $generated@@68)) ($generated@@84 $generated@@219 ($generated@@216 $generated@@220))) ($generated@@217 $generated@@219))
 :pattern ( ($generated@@84 $generated@@219 ($generated@@216 $generated@@220)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@227 $generated@@228)) 17)) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@229 $generated@@230)) $generated@@229)
 :pattern ( ($generated@@223 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@225 ($generated@@223 $generated@@231 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@223 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@225 (type $generated@@233))))
(= (type ($generated@@221 $generated@@233 $generated@@234 $generated@@235)) $generated@@236))
 :pattern ( ($generated@@221 $generated@@233 $generated@@234 $generated@@235))
))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(let (($generated@@242 (type $generated@@238)))
(= (type ($generated@@226 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@223 $generated@@242 $generated@@241))))
 :pattern ( ($generated@@226 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@225 (type $generated@@243))))
 (=> (= (type $generated@@246) $generated@@247) (= ($generated@@221 ($generated@@226 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@244 $generated@@245) $generated@@246)))
 :weight 0
))) (and (and (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (or (= $generated@@250 $generated@@252) (= ($generated@@221 ($generated@@226 $generated@@249 $generated@@250 $generated@@251 $generated@@248) $generated@@252 $generated@@253) ($generated@@221 $generated@@249 $generated@@252 $generated@@253)))
 :weight 0
)) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (or (= $generated@@257 $generated@@259) (= ($generated@@221 ($generated@@226 $generated@@255 $generated@@256 $generated@@257 $generated@@254) $generated@@258 $generated@@259) ($generated@@221 $generated@@255 $generated@@258 $generated@@259)))
 :weight 0
))) (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (or true (= ($generated@@221 ($generated@@226 $generated@@261 $generated@@262 $generated@@263 $generated@@260) $generated@@264 $generated@@265) ($generated@@221 $generated@@261 $generated@@264 $generated@@265)))
 :weight 0
)))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ) (! (= (type ($generated@@222 $generated@@266 $generated@@267 $generated@@268 $generated@@269)) ($generated@@223 $generated@@106 $generated@@4))
 :pattern ( ($generated@@222 $generated@@266 $generated@@267 $generated@@268 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 Bool) ($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@71 (type $generated@@275))))
 (=> (and (and (and (and (= (type $generated@@270) $generated@@106) (= (type $generated@@271) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@272) ($generated@@70 $generated@@4))) (= (type $generated@@274) $generated@@106)) (= (type $generated@@275) ($generated@@70 $generated@@276))) (= ($generated@@0 ($generated@@221 ($generated@@222 $generated@@270 $generated@@271 $generated@@272 $generated@@273) $generated@@274 $generated@@275))  (=> (and (not (= $generated@@274 $generated@@270)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@271 $generated@@274) $generated@@272))) $generated@@273))))
 :pattern ( ($generated@@221 ($generated@@222 $generated@@270 $generated@@271 $generated@@272 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@68) (= (type $generated@@279) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@277 $generated@@279)) ($generated@@103 $generated@@207 ($generated@@85 $generated@@278) $generated@@279))
 :pattern ( ($generated@@103 $generated@@207 ($generated@@85 $generated@@278) $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! (= (type ($generated@@280 $generated@@282 $generated@@283)) $generated@@82)
 :pattern ( ($generated@@280 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (= (type $generated@@284) $generated@@68) (= (type $generated@@285) $generated@@68)) (= (type $generated@@286) $generated@@90)) (= (type $generated@@287) $generated@@90)) (= ($generated@@84 ($generated@@280 $generated@@286 $generated@@287) ($generated@@193 $generated@@284 $generated@@285))  (and ($generated@@281 $generated@@286 $generated@@284) ($generated@@281 $generated@@287 $generated@@285))))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@286 $generated@@287) ($generated@@193 $generated@@284 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@68) ($generated@@84 $generated@@207 ($generated@@85 $generated@@288)))
 :pattern ( ($generated@@84 $generated@@207 ($generated@@85 $generated@@288)))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@82) (= (type $generated@@290) $generated@@82)) (= ($generated@@199 $generated@@289 $generated@@290) (= $generated@@289 $generated@@290)))
 :pattern ( ($generated@@199 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@82) (= (type $generated@@293) $generated@@82)) (= ($generated@@291 $generated@@292 $generated@@293) (= $generated@@292 $generated@@293)))
 :pattern ( ($generated@@291 $generated@@292 $generated@@293))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@294 T@U) ($generated@@295 Int) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@294) $generated@@81) (= (type $generated@@296) $generated@@82)) (or ($generated@@83 $generated@@295 $generated@@296) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@296 ($generated@@85 $generated@@46))))) (<= ($generated@@209 0) ($generated@@79 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@79 $generated@@294 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) $generated@@82) (= (type $generated@@299) $generated@@82)) (and ($generated@@297 $generated@@298) ($generated@@297 $generated@@299))) (= ($generated@@291 $generated@@298 $generated@@299)  (and (= ($generated@@89 $generated@@298) ($generated@@89 $generated@@299)) ($generated@@291 ($generated@@87 $generated@@298) ($generated@@87 $generated@@299)))))
 :pattern ( ($generated@@291 $generated@@298 $generated@@299) ($generated@@297 $generated@@298))
 :pattern ( ($generated@@291 $generated@@298 $generated@@299) ($generated@@297 $generated@@299))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@300) $generated@@82) (= (type $generated@@301) $generated@@82)) (or ($generated@@185 $generated@@300 $generated@@301) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@300 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@301 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@302 Int) ) (!  (and ($generated@@83 $generated@@302 $generated@@300) ($generated@@83 $generated@@302 $generated@@301))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@302 $generated@@301))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@302 $generated@@300))
)) (= ($generated@@183 $generated@@300 $generated@@301) (forall (($generated@@303 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@174) $generated@@303 $generated@@300) ($generated@@79 ($generated@@80 $generated@@174) $generated@@303 $generated@@301)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@303 $generated@@301))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@303 $generated@@300))
)))))
 :pattern ( ($generated@@183 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@68)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@307) $generated@@68)) (= ($generated@@84 $generated@@306 ($generated@@304 $generated@@307)) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@90) ($generated@@0 ($generated@@110 $generated@@306 $generated@@308))) ($generated@@281 $generated@@308 $generated@@307))
 :pattern ( ($generated@@110 $generated@@306 $generated@@308))
))))
 :pattern ( ($generated@@84 $generated@@306 ($generated@@304 $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@68)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@312) $generated@@68)) (= ($generated@@84 $generated@@311 ($generated@@309 $generated@@312)) (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@90) ($generated@@0 ($generated@@110 $generated@@311 $generated@@313))) ($generated@@281 $generated@@313 $generated@@312))
 :pattern ( ($generated@@110 $generated@@311 $generated@@313))
))))
 :pattern ( ($generated@@84 $generated@@311 ($generated@@309 $generated@@312)))
)))
(assert (forall (($generated@@314 Int) ) (! (= ($generated@@209 $generated@@314) $generated@@314)
 :pattern ( ($generated@@209 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (= ($generated@@184 $generated@@315) $generated@@315)
 :pattern ( ($generated@@184 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (= (type $generated@@316) $generated@@82) (= (type $generated@@317) $generated@@82)) (and ($generated@@86 $generated@@316) ($generated@@86 $generated@@317))) (= ($generated@@291 $generated@@316 $generated@@317) true))
 :pattern ( ($generated@@291 $generated@@316 $generated@@317) ($generated@@86 $generated@@316))
 :pattern ( ($generated@@291 $generated@@316 $generated@@317) ($generated@@86 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (! (= (type ($generated@@318 $generated@@319 $generated@@320)) $generated@@82)
 :pattern ( ($generated@@318 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) $generated@@68) (= (type $generated@@322) $generated@@90)) (= (type $generated@@323) $generated@@82)) (= ($generated@@84 ($generated@@318 $generated@@322 $generated@@323) ($generated@@85 $generated@@321))  (and ($generated@@281 $generated@@322 $generated@@321) ($generated@@84 $generated@@323 ($generated@@85 $generated@@321)))))
 :pattern ( ($generated@@84 ($generated@@318 $generated@@322 $generated@@323) ($generated@@85 $generated@@321)))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@90)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@326 T@U) ($generated@@327 Int) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@326) $generated@@81) (= (type $generated@@328) $generated@@82)) (or ($generated@@162 $generated@@327 $generated@@328) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@328 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@328)) (let (($generated@@329 ($generated@@87 $generated@@328)))
(let (($generated@@330 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@328)))))
 (=> (< $generated@@330 $generated@@327) ($generated@@162 $generated@@327 $generated@@329))))) (= ($generated@@161 ($generated@@80 $generated@@326) $generated@@327 $generated@@328) (ite ($generated@@86 $generated@@328) ($generated@@318 ($generated@@324 ($generated@@8 $generated@@327)) ($generated@@184 $generated@@207)) (let (($generated@@331 ($generated@@87 $generated@@328)))
(let (($generated@@332 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@328)))))
(ite (<= $generated@@327 $generated@@332) ($generated@@318 ($generated@@324 ($generated@@8 $generated@@327)) $generated@@328) ($generated@@318 ($generated@@324 ($generated@@8 $generated@@332)) ($generated@@161 $generated@@326 $generated@@327 $generated@@331)))))))))
 :pattern ( ($generated@@161 ($generated@@80 $generated@@326) $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@334) $generated@@68) (= (type $generated@@335) $generated@@68)) (= (type $generated@@336) $generated@@90)) (= (type $generated@@337) $generated@@90)) (= (type $generated@@338) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@277 $generated@@338)) (= ($generated@@103 ($generated@@280 $generated@@336 $generated@@337) ($generated@@193 $generated@@334 $generated@@335) $generated@@338)  (and ($generated@@333 $generated@@336 $generated@@334 $generated@@338) ($generated@@333 $generated@@337 $generated@@335 $generated@@338))))
 :pattern ( ($generated@@103 ($generated@@280 $generated@@336 $generated@@337) ($generated@@193 $generated@@334 $generated@@335) $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@82) (= ($generated@@192 $generated@@339) (= ($generated@@206 $generated@@339) $generated@@61)))
 :pattern ( ($generated@@192 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@82) (= ($generated@@86 $generated@@340) (= ($generated@@206 $generated@@340) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@82) (= ($generated@@297 $generated@@341) (= ($generated@@206 $generated@@341) $generated@@65)))
 :pattern ( ($generated@@297 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@82) ($generated@@192 $generated@@342)) (exists (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (and (and (= (type $generated@@343) $generated@@90) (= (type $generated@@344) $generated@@90)) (= $generated@@342 ($generated@@280 $generated@@343 $generated@@344)))
 :no-pattern (type $generated@@343)
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
)))
 :pattern ( ($generated@@192 $generated@@342))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@82) ($generated@@297 $generated@@345)) (exists (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (and (and (= (type $generated@@346) $generated@@90) (= (type $generated@@347) $generated@@82)) (= $generated@@345 ($generated@@318 $generated@@346 $generated@@347)))
 :no-pattern (type $generated@@346)
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
)))
 :pattern ( ($generated@@297 $generated@@345))
)))
(assert  (and (and (forall (($generated@@352 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@352)) 18)) (forall (($generated@@353 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@350 $generated@@353))
))) (forall (($generated@@354 T@T) ) (! (= (type ($generated@@348 $generated@@354)) ($generated@@350 $generated@@354))
 :pattern ( ($generated@@348 $generated@@354))
))))
(assert (forall (($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@348 $generated@@355)) 0)
 :pattern ( ($generated@@348 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@82) ($generated@@86 $generated@@356)) (= $generated@@356 $generated@@207))
 :pattern ( ($generated@@86 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@68) (= (type $generated@@359) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@333 ($generated@@324 $generated@@357) $generated@@358 $generated@@359) ($generated@@103 $generated@@357 $generated@@358 $generated@@359)))
 :pattern ( ($generated@@333 ($generated@@324 $generated@@357) $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@362 T@T) ) (! (= (type ($generated@@361 $generated@@362)) ($generated@@105 $generated@@362 $generated@@2))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@108 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@105 $generated@@364 $generated@@2)) (and (= (= ($generated@@360 $generated@@363) 0) (= $generated@@363 ($generated@@361 $generated@@364))) (=> (not (= ($generated@@360 $generated@@363) 0)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (< 0 ($generated ($generated@@110 $generated@@363 $generated@@365))))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) $generated@@73)
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@368)) $generated@@64) (= ($generated@@366 ($generated@@85 $generated@@368)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@368))
)))
(assert  (and (and (and (and (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (= ($generated@@1 ($generated@@371 $generated@@374 $generated@@375)) 19)) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= ($generated@@372 ($generated@@371 $generated@@376 $generated@@377)) $generated@@376)
 :pattern ( ($generated@@371 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= ($generated@@373 ($generated@@371 $generated@@378 $generated@@379)) $generated@@379)
 :pattern ( ($generated@@371 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@372 (type $generated@@380))))
(= (type ($generated@@369 $generated@@380)) ($generated@@105 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@380))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= (type ($generated@@370 $generated@@382 $generated@@383)) ($generated@@371 $generated@@382 $generated@@383))
 :pattern ( ($generated@@370 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@T) ) (! (let (($generated@@386 (type $generated@@384)))
 (not ($generated@@0 ($generated@@110 ($generated@@369 ($generated@@370 $generated@@386 $generated@@385)) $generated@@384))))
 :pattern ( (let (($generated@@386 (type $generated@@384)))
($generated@@110 ($generated@@369 ($generated@@370 $generated@@386 $generated@@385)) $generated@@384)))
)))
(assert  (and (and (and (and (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (= ($generated@@1 ($generated@@389 $generated@@392 $generated@@393)) 20)) (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (! (= ($generated@@390 ($generated@@389 $generated@@394 $generated@@395)) $generated@@394)
 :pattern ( ($generated@@389 $generated@@394 $generated@@395))
))) (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (! (= ($generated@@391 ($generated@@389 $generated@@396 $generated@@397)) $generated@@397)
 :pattern ( ($generated@@389 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@390 (type $generated@@398))))
(= (type ($generated@@387 $generated@@398)) ($generated@@105 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@387 $generated@@398))
))) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= (type ($generated@@388 $generated@@400 $generated@@401)) ($generated@@389 $generated@@400 $generated@@401))
 :pattern ( ($generated@@388 $generated@@400 $generated@@401))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@T) ) (! (let (($generated@@404 (type $generated@@402)))
 (not ($generated@@0 ($generated@@110 ($generated@@387 ($generated@@388 $generated@@404 $generated@@403)) $generated@@402))))
 :pattern ( (let (($generated@@404 (type $generated@@402)))
($generated@@110 ($generated@@387 ($generated@@388 $generated@@404 $generated@@403)) $generated@@402)))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@108 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@105 $generated@@406 $generated@@2)) (= ($generated@@217 $generated@@405) (forall (($generated@@407 T@U) ) (!  (=> (= (type $generated@@407) $generated@@406) (and (<= 0 ($generated ($generated@@110 $generated@@405 $generated@@407))) (<= ($generated ($generated@@110 $generated@@405 $generated@@407)) ($generated@@360 $generated@@405))))
 :pattern ( ($generated@@110 $generated@@405 $generated@@407))
)))))
 :pattern ( ($generated@@217 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@373 (type $generated@@408))))
(let (($generated@@410 ($generated@@372 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@371 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@370 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) ($generated@@0 ($generated@@110 ($generated@@369 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@369 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@373 (type $generated@@413))))
(= (type ($generated@@412 $generated@@413)) ($generated@@105 $generated@@414 $generated@@4)))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@373 (type $generated@@415))))
(let (($generated@@417 ($generated@@372 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@371 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@370 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@416) ($generated@@0 ($generated@@110 ($generated@@412 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@412 $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@391 (type $generated@@419))))
(let (($generated@@421 ($generated@@390 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@389 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@388 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@110 ($generated@@387 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@387 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@391 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@105 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@391 (type $generated@@426))))
(let (($generated@@428 ($generated@@390 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@389 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@388 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@110 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 Int) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@81) (= (type $generated@@432) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@430) $generated@@431 $generated@@432) ($generated@@79 $generated@@430 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@430) $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 Int) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@81) (= (type $generated@@435) $generated@@82)) (= ($generated@@161 ($generated@@80 $generated@@433) $generated@@434 $generated@@435) ($generated@@161 $generated@@433 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@161 ($generated@@80 $generated@@433) $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@437) $generated@@68)) (= ($generated@@84 $generated@@436 ($generated@@216 $generated@@437)) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@436 $generated@@438)))) ($generated@@281 $generated@@438 $generated@@437))
 :pattern ( ($generated@@110 $generated@@436 $generated@@438))
))))
 :pattern ( ($generated@@84 $generated@@436 ($generated@@216 $generated@@437)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (= (type $generated@@439) $generated@@81) (= (type $generated@@440) $generated@@82)) (or ($generated@@170 $generated@@440) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@440 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@440)) (let (($generated@@441 ($generated@@87 $generated@@440)))
(let (($generated@@442 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@440)))))
 (=> (not ($generated@@86 $generated@@441)) (let (($generated@@443 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@441)))))
 (=> (<= $generated@@442 $generated@@443) ($generated@@170 $generated@@441))))))) (= ($generated@@169 ($generated@@80 $generated@@439) $generated@@440) (ite ($generated@@86 $generated@@440) true (let (($generated@@444 ($generated@@87 $generated@@440)))
(let (($generated@@445 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@440)))))
(ite ($generated@@86 $generated@@444) true (let (($generated@@446 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@444)))))
 (and (<= $generated@@445 $generated@@446) ($generated@@169 $generated@@439 $generated@@444))))))))))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@439) $generated@@440))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (= (type $generated@@447) $generated@@82) (= (type $generated@@448) $generated@@82)) (or ($generated@@185 $generated@@447 $generated@@448) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@447 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@448 ($generated@@85 $generated@@46)))))) true)
 :pattern ( ($generated@@183 $generated@@447 $generated@@448))
))))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@82) ($generated@@449 $generated@@450)) (or ($generated@@86 $generated@@450) ($generated@@297 $generated@@450)))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (= (type $generated@@451) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@452) $generated@@68)) (= (type $generated@@453) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@451 ($generated@@304 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@90) ($generated@@0 ($generated@@110 $generated@@451 $generated@@454))) ($generated@@333 $generated@@454 $generated@@452 $generated@@453))
 :pattern ( ($generated@@110 $generated@@451 $generated@@454))
))))
 :pattern ( ($generated@@103 $generated@@451 ($generated@@304 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (= (type $generated@@455) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@456) $generated@@68)) (= (type $generated@@457) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@455 ($generated@@309 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@90) ($generated@@0 ($generated@@110 $generated@@455 $generated@@458))) ($generated@@333 $generated@@458 $generated@@456 $generated@@457))
 :pattern ( ($generated@@110 $generated@@455 $generated@@458))
))))
 :pattern ( ($generated@@103 $generated@@455 ($generated@@309 $generated@@456) $generated@@457))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@459 T@U) ($generated@@460 Int) ($generated@@461 T@U) ) (!  (=> (and (and (= (type $generated@@459) $generated@@81) (= (type $generated@@461) $generated@@82)) (or ($generated@@162 ($generated@@209 $generated@@460) ($generated@@184 $generated@@461)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@461 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@86 ($generated@@184 $generated@@461)))))) (let (($generated@@462 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@461)))))
(let (($generated@@463 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@461)))))))
 (=> (< $generated@@463 ($generated@@209 $generated@@460)) ($generated@@162 ($generated@@209 $generated@@460) $generated@@462))))) (= ($generated@@161 ($generated@@80 $generated@@459) ($generated@@209 $generated@@460) ($generated@@184 $generated@@461)) (ite ($generated@@86 ($generated@@184 $generated@@461)) ($generated@@318 ($generated@@324 ($generated@@8 ($generated@@209 $generated@@460))) ($generated@@184 $generated@@207)) (let (($generated@@464 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@461)))))
(let (($generated@@465 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@461)))))))
(ite (<= ($generated@@209 $generated@@460) $generated@@465) ($generated@@318 ($generated@@324 ($generated@@8 ($generated@@209 $generated@@460))) ($generated@@184 $generated@@461)) ($generated@@318 ($generated@@324 ($generated@@8 $generated@@465)) ($generated@@184 ($generated@@161 ($generated@@80 $generated@@459) ($generated@@209 $generated@@460) $generated@@464))))))))))
 :weight 3
 :pattern ( ($generated@@161 ($generated@@80 $generated@@459) ($generated@@209 $generated@@460) ($generated@@184 $generated@@461)))
))))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 (type $generated@@466)))
(= ($generated ($generated@@110 ($generated@@361 $generated@@467) $generated@@466)) 0))
 :pattern ( (let (($generated@@467 (type $generated@@466)))
($generated@@110 ($generated@@361 $generated@@467) $generated@@466)))
)))
(assert  (and (forall (($generated@@470 T@U) ) (! (= (type ($generated@@468 $generated@@470)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@468 $generated@@470))
)) (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@373 (type $generated@@471))))
(let (($generated@@473 ($generated@@372 (type $generated@@471))))
(= (type ($generated@@469 $generated@@471)) ($generated@@105 $generated@@473 $generated@@472))))
 :pattern ( ($generated@@469 $generated@@471))
))))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) ($generated@@371 $generated@@90 $generated@@90)) (= (type $generated@@475) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@468 $generated@@474) $generated@@475))  (and ($generated@@0 ($generated@@110 ($generated@@369 $generated@@474) ($generated@@200 ($generated@@88 $generated@@82 $generated@@475)))) (= ($generated@@110 ($generated@@469 $generated@@474) ($generated@@200 ($generated@@88 $generated@@82 $generated@@475))) ($generated@@201 ($generated@@88 $generated@@82 $generated@@475))))))
 :pattern ( ($generated@@110 ($generated@@468 $generated@@474) $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@391 (type $generated@@479))))
(let (($generated@@481 ($generated@@390 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479)) ($generated@@105 $generated@@481 $generated@@480))))
 :pattern ( ($generated@@477 $generated@@479))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) ($generated@@389 $generated@@90 $generated@@90)) (= (type $generated@@483) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@476 $generated@@482) $generated@@483))  (and ($generated@@0 ($generated@@110 ($generated@@387 $generated@@482) ($generated@@200 ($generated@@88 $generated@@82 $generated@@483)))) (= ($generated@@110 ($generated@@477 $generated@@482) ($generated@@200 ($generated@@88 $generated@@82 $generated@@483))) ($generated@@201 ($generated@@88 $generated@@82 $generated@@483))))))
 :pattern ( ($generated@@110 ($generated@@476 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(let (($generated@@487 ($generated@@372 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@371 $generated@@487 $generated@@486)) (= ($generated@@0 ($generated@@110 ($generated@@412 $generated@@484) $generated@@485)) (exists (($generated@@488 T@U) ) (!  (and (= (type $generated@@488) $generated@@487) (and ($generated@@0 ($generated@@110 ($generated@@369 $generated@@484) $generated@@488)) (= $generated@@485 ($generated@@110 ($generated@@469 $generated@@484) $generated@@488))))
 :pattern ( ($generated@@110 ($generated@@369 $generated@@484) $generated@@488))
 :pattern ( ($generated@@110 ($generated@@469 $generated@@484) $generated@@488))
))))))
 :pattern ( ($generated@@110 ($generated@@412 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(let (($generated@@492 ($generated@@390 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@389 $generated@@492 $generated@@491)) (= ($generated@@0 ($generated@@110 ($generated@@423 $generated@@489) $generated@@490)) (exists (($generated@@493 T@U) ) (!  (and (= (type $generated@@493) $generated@@492) (and ($generated@@0 ($generated@@110 ($generated@@387 $generated@@489) $generated@@493)) (= $generated@@490 ($generated@@110 ($generated@@477 $generated@@489) $generated@@493))))
 :pattern ( ($generated@@110 ($generated@@387 $generated@@489) $generated@@493))
 :pattern ( ($generated@@110 ($generated@@477 $generated@@489) $generated@@493))
))))))
 :pattern ( ($generated@@110 ($generated@@423 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (! (= (type ($generated@@494 $generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@497) ($generated@@371 $generated@@90 $generated@@90)) (= (type $generated@@498) $generated@@68)) (= (type $generated@@499) $generated@@68)) (= (type $generated@@500) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@497 ($generated@@494 $generated@@498 $generated@@499) $generated@@500) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@369 $generated@@497) $generated@@501))) (and ($generated@@333 ($generated@@110 ($generated@@469 $generated@@497) $generated@@501) $generated@@499 $generated@@500) ($generated@@333 $generated@@501 $generated@@498 $generated@@500)))
 :pattern ( ($generated@@110 ($generated@@469 $generated@@497) $generated@@501))
 :pattern ( ($generated@@110 ($generated@@369 $generated@@497) $generated@@501))
))))
 :pattern ( ($generated@@103 $generated@@497 ($generated@@494 $generated@@498 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) ($generated@@389 $generated@@90 $generated@@90)) (= (type $generated@@506) $generated@@68)) (= (type $generated@@507) $generated@@68)) (= (type $generated@@508) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@505 ($generated@@502 $generated@@506 $generated@@507) $generated@@508) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@387 $generated@@505) $generated@@509))) (and ($generated@@333 ($generated@@110 ($generated@@477 $generated@@505) $generated@@509) $generated@@507 $generated@@508) ($generated@@333 $generated@@509 $generated@@506 $generated@@508)))
 :pattern ( ($generated@@110 ($generated@@477 $generated@@505) $generated@@509))
 :pattern ( ($generated@@110 ($generated@@387 $generated@@505) $generated@@509))
))))
 :pattern ( ($generated@@103 $generated@@505 ($generated@@502 $generated@@506 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@82)) ($generated@@84 $generated@@511 ($generated@@85 $generated@@510))) (or ($generated@@86 $generated@@511) ($generated@@297 $generated@@511)))
 :pattern ( ($generated@@297 $generated@@511) ($generated@@84 $generated@@511 ($generated@@85 $generated@@510)))
 :pattern ( ($generated@@86 $generated@@511) ($generated@@84 $generated@@511 ($generated@@85 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@81) (= (type $generated@@513) $generated@@82)) (= ($generated@@169 $generated@@512 $generated@@513) ($generated@@169 $generated@@174 $generated@@513)))
 :pattern ( ($generated@@169 ($generated@@173 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@515 T@T) ) (! (= (type ($generated@@514 $generated@@515)) ($generated@@105 $generated@@515 $generated@@4))
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@391 (type $generated@@516))))
(let (($generated@@518 ($generated@@390 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@389 $generated@@518 $generated@@517)) (= (= $generated@@516 ($generated@@388 $generated@@518 $generated@@517)) (= ($generated@@387 $generated@@516) ($generated@@514 $generated@@518))))))
 :pattern ( ($generated@@387 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@391 (type $generated@@519))))
(let (($generated@@521 ($generated@@390 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@389 $generated@@521 $generated@@520)) (= (= $generated@@519 ($generated@@388 $generated@@521 $generated@@520)) (= ($generated@@423 $generated@@519) ($generated@@514 $generated@@520))))))
 :pattern ( ($generated@@423 $generated@@519))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@391 (type $generated@@522))))
(let (($generated@@524 ($generated@@390 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@389 $generated@@524 $generated@@523)) (= (= $generated@@522 ($generated@@388 $generated@@524 $generated@@523)) (= ($generated@@476 $generated@@522) ($generated@@514 $generated@@90))))))
 :pattern ( ($generated@@476 $generated@@522))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@373 (type $generated@@525))))
(let (($generated@@527 ($generated@@372 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@371 $generated@@527 $generated@@526)) (or (= $generated@@525 ($generated@@370 $generated@@527 $generated@@526)) (exists (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (and (and (= (type $generated@@528) $generated@@90) (= (type $generated@@529) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@468 $generated@@525) ($generated@@324 ($generated@@280 $generated@@528 $generated@@529)))))
 :no-pattern (type $generated@@528)
 :no-pattern (type $generated@@529)
 :no-pattern ($generated $generated@@528)
 :no-pattern ($generated@@0 $generated@@528)
 :no-pattern ($generated $generated@@529)
 :no-pattern ($generated@@0 $generated@@529)
))))))
 :pattern ( ($generated@@468 $generated@@525))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@391 (type $generated@@530))))
(let (($generated@@532 ($generated@@390 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@389 $generated@@532 $generated@@531)) (or (= $generated@@530 ($generated@@388 $generated@@532 $generated@@531)) (exists (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (and (and (= (type $generated@@533) $generated@@90) (= (type $generated@@534) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@476 $generated@@530) ($generated@@324 ($generated@@280 $generated@@533 $generated@@534)))))
 :no-pattern (type $generated@@533)
 :no-pattern (type $generated@@534)
 :no-pattern ($generated $generated@@533)
 :no-pattern ($generated@@0 $generated@@533)
 :no-pattern ($generated $generated@@534)
 :no-pattern ($generated@@0 $generated@@534)
))))))
 :pattern ( ($generated@@476 $generated@@530))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@90) ($generated@@281 $generated@@535 $generated@@46)) (and (= ($generated@@324 ($generated@@88 $generated@@2 $generated@@535)) $generated@@535) ($generated@@84 ($generated@@88 $generated@@2 $generated@@535) $generated@@46)))
 :pattern ( ($generated@@281 $generated@@535 $generated@@46))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@90) ($generated@@281 $generated@@536 $generated@@47)) (and (= ($generated@@324 ($generated@@88 $generated@@3 $generated@@536)) $generated@@536) ($generated@@84 ($generated@@88 $generated@@3 $generated@@536) $generated@@47)))
 :pattern ( ($generated@@281 $generated@@536 $generated@@47))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@90) ($generated@@281 $generated@@537 $generated@@44)) (and (= ($generated@@324 ($generated@@88 $generated@@4 $generated@@537)) $generated@@537) ($generated@@84 ($generated@@88 $generated@@4 $generated@@537) $generated@@44)))
 :pattern ( ($generated@@281 $generated@@537 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@538) 21))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@90) ($generated@@281 $generated@@539 $generated@@45)) (and (= ($generated@@324 ($generated@@88 $generated@@538 $generated@@539)) $generated@@539) ($generated@@84 ($generated@@88 $generated@@538 $generated@@539) $generated@@45)))
 :pattern ( ($generated@@281 $generated@@539 $generated@@45))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@81) (= (type $generated@@541) $generated@@82)) (= ($generated@@169 ($generated@@80 $generated@@540) $generated@@541) ($generated@@169 $generated@@540 $generated@@541)))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@281 ($generated@@324 $generated@@542) $generated@@543) ($generated@@84 $generated@@542 $generated@@543)))
 :pattern ( ($generated@@281 ($generated@@324 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@108 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@105 $generated@@545 $generated@@2)) (<= 0 ($generated@@360 $generated@@544))))
 :pattern ( ($generated@@360 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@351 (type $generated@@546))))
 (=> (= (type $generated@@546) ($generated@@350 $generated@@547)) (<= 0 ($generated@@349 $generated@@546))))
 :pattern ( ($generated@@349 $generated@@546))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (= ($generated@@548 ($generated@@494 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@494 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@68) (= (type $generated@@555) $generated@@68)) (= ($generated@@552 ($generated@@494 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@494 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@68) (= (type $generated@@557) $generated@@68)) (= ($generated@@76 ($generated@@494 $generated@@556 $generated@@557)) $generated@@58))
 :pattern ( ($generated@@494 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@68) (= (type $generated@@561) $generated@@68)) (= ($generated@@558 ($generated@@502 $generated@@560 $generated@@561)) $generated@@560))
 :pattern ( ($generated@@502 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@68)) (= ($generated@@562 ($generated@@502 $generated@@564 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@502 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@68) (= (type $generated@@567) $generated@@68)) (= ($generated@@76 ($generated@@502 $generated@@566 $generated@@567)) $generated@@59))
 :pattern ( ($generated@@502 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@90) (= (type $generated@@569) $generated@@90)) (= ($generated@@206 ($generated@@280 $generated@@568 $generated@@569)) $generated@@61))
 :pattern ( ($generated@@280 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@68) (= (type $generated@@573) $generated@@68)) (= ($generated@@570 ($generated@@193 $generated@@572 $generated@@573)) $generated@@572))
 :pattern ( ($generated@@193 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@68) (= (type $generated@@577) $generated@@68)) (= ($generated@@574 ($generated@@193 $generated@@576 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@193 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@90) (= (type $generated@@579) $generated@@90)) (= ($generated@@200 ($generated@@280 $generated@@578 $generated@@579)) $generated@@578))
 :pattern ( ($generated@@280 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@90) (= (type $generated@@581) $generated@@90)) (= ($generated@@201 ($generated@@280 $generated@@580 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@280 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@90) (= (type $generated@@583) $generated@@82)) (= ($generated@@206 ($generated@@318 $generated@@582 $generated@@583)) $generated@@65))
 :pattern ( ($generated@@318 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@90) (= (type $generated@@585) $generated@@82)) (= ($generated@@89 ($generated@@318 $generated@@584 $generated@@585)) $generated@@584))
 :pattern ( ($generated@@318 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@90) (= (type $generated@@587) $generated@@82)) (= ($generated@@87 ($generated@@318 $generated@@586 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@318 $generated@@586 $generated@@587))
)))
(assert  (and (forall (($generated@@590 T@U) ) (! (= (type ($generated@@588 $generated@@590)) $generated@@68)
 :pattern ( ($generated@@588 $generated@@590))
)) (forall (($generated@@591 T@U) ($generated@@592 Int) ) (! (let (($generated@@593 ($generated@@351 (type $generated@@591))))
(= (type ($generated@@589 $generated@@591 $generated@@592)) $generated@@593))
 :pattern ( ($generated@@589 $generated@@591 $generated@@592))
))))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@350 $generated@@90)) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@594 ($generated@@588 $generated@@595) $generated@@596) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@349 $generated@@594))) ($generated@@333 ($generated@@589 $generated@@594 $generated@@597) $generated@@595 $generated@@596))
 :pattern ( ($generated@@589 $generated@@594 $generated@@597))
))))
 :pattern ( ($generated@@103 $generated@@594 ($generated@@588 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@599 Int) ) (! (= ($generated@@598 ($generated@@104 $generated@@599)) $generated@@599)
 :pattern ( ($generated@@104 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@68)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@68) (= ($generated@@600 ($generated@@304 $generated@@602)) $generated@@602))
 :pattern ( ($generated@@304 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@68) (= ($generated@@76 ($generated@@304 $generated@@603)) $generated@@54))
 :pattern ( ($generated@@304 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@68)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@68) (= ($generated@@604 ($generated@@309 $generated@@606)) $generated@@606))
 :pattern ( ($generated@@309 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@68) (= ($generated@@76 ($generated@@309 $generated@@607)) $generated@@55))
 :pattern ( ($generated@@309 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ) (! (= (type ($generated@@608 $generated@@609)) $generated@@68)
 :pattern ( ($generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@68) (= ($generated@@608 ($generated@@216 $generated@@610)) $generated@@610))
 :pattern ( ($generated@@216 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@68) (= ($generated@@76 ($generated@@216 $generated@@611)) $generated@@56))
 :pattern ( ($generated@@216 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ) (! (= (type ($generated@@612 $generated@@613)) $generated@@68)
 :pattern ( ($generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@68) (= ($generated@@612 ($generated@@588 $generated@@614)) $generated@@614))
 :pattern ( ($generated@@588 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@68) (= ($generated@@76 ($generated@@588 $generated@@615)) $generated@@57))
 :pattern ( ($generated@@588 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@68)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@68) (= ($generated@@616 ($generated@@85 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@85 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@619)))
(= ($generated@@88 $generated@@620 ($generated@@324 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@324 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@371 $generated@@90 $generated@@90)) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) $generated@@68)) (= ($generated@@84 $generated@@621 ($generated@@494 $generated@@622 $generated@@623)) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@369 $generated@@621) $generated@@624))) (and ($generated@@281 ($generated@@110 ($generated@@469 $generated@@621) $generated@@624) $generated@@623) ($generated@@281 $generated@@624 $generated@@622)))
 :pattern ( ($generated@@110 ($generated@@469 $generated@@621) $generated@@624))
 :pattern ( ($generated@@110 ($generated@@369 $generated@@621) $generated@@624))
))))
 :pattern ( ($generated@@84 $generated@@621 ($generated@@494 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@389 $generated@@90 $generated@@90)) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) $generated@@68)) (= ($generated@@84 $generated@@625 ($generated@@502 $generated@@626 $generated@@627)) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@387 $generated@@625) $generated@@628))) (and ($generated@@281 ($generated@@110 ($generated@@477 $generated@@625) $generated@@628) $generated@@627) ($generated@@281 $generated@@628 $generated@@626)))
 :pattern ( ($generated@@110 ($generated@@477 $generated@@625) $generated@@628))
 :pattern ( ($generated@@110 ($generated@@387 $generated@@625) $generated@@628))
))))
 :pattern ( ($generated@@84 $generated@@625 ($generated@@502 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@90) (= (type $generated@@632) $generated@@90)) (< ($generated@@629 $generated@@631) ($generated@@630 ($generated@@280 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@280 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@90) (= (type $generated@@634) $generated@@90)) (< ($generated@@629 $generated@@634) ($generated@@630 ($generated@@280 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@280 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@90) (= (type $generated@@636) $generated@@82)) (< ($generated@@629 $generated@@635) ($generated@@630 ($generated@@318 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@318 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@90) (= (type $generated@@638) $generated@@82)) (< ($generated@@630 $generated@@638) ($generated@@630 ($generated@@318 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@318 $generated@@637 $generated@@638))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@81) (= (type $generated@@640) $generated@@82)) (or ($generated@@170 ($generated@@184 $generated@@640)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@640 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@86 ($generated@@184 $generated@@640)))))) (let (($generated@@641 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@640)))))
(let (($generated@@642 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@640)))))))
 (=> (not ($generated@@86 $generated@@641)) (let (($generated@@643 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@641)))))
 (=> (<= $generated@@642 $generated@@643) ($generated@@170 $generated@@641))))))) (= ($generated@@169 ($generated@@80 $generated@@639) ($generated@@184 $generated@@640)) (ite ($generated@@86 ($generated@@184 $generated@@640)) true (let (($generated@@644 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@640)))))
(let (($generated@@645 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@640)))))))
(ite ($generated@@86 $generated@@644) true (let (($generated@@646 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@644))))))
 (and (<= $generated@@645 $generated@@646) ($generated@@169 ($generated@@80 $generated@@639) $generated@@644))))))))))
 :weight 3
 :pattern ( ($generated@@169 ($generated@@80 $generated@@639) ($generated@@184 $generated@@640)))
))))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@90) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) $generated@@68)) ($generated@@281 $generated@@647 ($generated@@494 $generated@@648 $generated@@649))) (and (= ($generated@@324 ($generated@@88 ($generated@@371 $generated@@90 $generated@@90) $generated@@647)) $generated@@647) ($generated@@84 ($generated@@88 ($generated@@371 $generated@@90 $generated@@90) $generated@@647) ($generated@@494 $generated@@648 $generated@@649))))
 :pattern ( ($generated@@281 $generated@@647 ($generated@@494 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@90) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) $generated@@68)) ($generated@@281 $generated@@650 ($generated@@502 $generated@@651 $generated@@652))) (and (= ($generated@@324 ($generated@@88 ($generated@@389 $generated@@90 $generated@@90) $generated@@650)) $generated@@650) ($generated@@84 ($generated@@88 ($generated@@389 $generated@@90 $generated@@90) $generated@@650) ($generated@@502 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@281 $generated@@650 ($generated@@502 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) $generated@@68) (= (type $generated@@654) $generated@@68)) (= (type $generated@@655) $generated@@90)) ($generated@@281 $generated@@655 ($generated@@193 $generated@@653 $generated@@654))) (and (= ($generated@@324 ($generated@@88 $generated@@82 $generated@@655)) $generated@@655) ($generated@@84 ($generated@@88 $generated@@82 $generated@@655) ($generated@@193 $generated@@653 $generated@@654))))
 :pattern ( ($generated@@281 $generated@@655 ($generated@@193 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@82) (= (type $generated@@657) $generated@@68)) (= (type $generated@@658) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@277 $generated@@658) (and ($generated@@297 $generated@@656) ($generated@@103 $generated@@656 ($generated@@85 $generated@@657) $generated@@658)))) ($generated@@333 ($generated@@89 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@333 ($generated@@89 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@659)))
 (not ($generated@@0 ($generated@@110 ($generated@@514 $generated@@660) $generated@@659))))
 :pattern ( (let (($generated@@660 (type $generated@@659)))
($generated@@110 ($generated@@514 $generated@@660) $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@68) (= (type $generated@@662) $generated@@68)) (and (= ($generated@@76 ($generated@@193 $generated@@661 $generated@@662)) $generated@@62) (= ($generated@@366 ($generated@@193 $generated@@661 $generated@@662)) $generated@@66)))
 :pattern ( ($generated@@193 $generated@@661 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@82) (= ($generated@@629 ($generated@@324 $generated@@663)) ($generated@@630 $generated@@663)))
 :pattern ( ($generated@@629 ($generated@@324 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@90) ($generated@@281 $generated@@664 ($generated@@104 0))) (and (= ($generated@@324 ($generated@@88 $generated@@2 $generated@@664)) $generated@@664) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@664) ($generated@@104 0))))
 :pattern ( ($generated@@281 $generated@@664 ($generated@@104 0)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@665) $generated@@90) (= (type $generated@@666) $generated@@68)) ($generated@@281 $generated@@665 ($generated@@304 $generated@@666))) (and (= ($generated@@324 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@665)) $generated@@665) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@665) ($generated@@304 $generated@@666))))
 :pattern ( ($generated@@281 $generated@@665 ($generated@@304 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (= (type $generated@@667) $generated@@90) (= (type $generated@@668) $generated@@68)) ($generated@@281 $generated@@667 ($generated@@309 $generated@@668))) (and (= ($generated@@324 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@667)) $generated@@667) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@667) ($generated@@309 $generated@@668))))
 :pattern ( ($generated@@281 $generated@@667 ($generated@@309 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (= (type $generated@@669) $generated@@90) (= (type $generated@@670) $generated@@68)) ($generated@@281 $generated@@669 ($generated@@216 $generated@@670))) (and (= ($generated@@324 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@669)) $generated@@669) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@669) ($generated@@216 $generated@@670))))
 :pattern ( ($generated@@281 $generated@@669 ($generated@@216 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@671) $generated@@90) (= (type $generated@@672) $generated@@68)) ($generated@@281 $generated@@671 ($generated@@588 $generated@@672))) (and (= ($generated@@324 ($generated@@88 ($generated@@350 $generated@@90) $generated@@671)) $generated@@671) ($generated@@84 ($generated@@88 ($generated@@350 $generated@@90) $generated@@671) ($generated@@588 $generated@@672))))
 :pattern ( ($generated@@281 $generated@@671 ($generated@@588 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) $generated@@68) (= (type $generated@@674) $generated@@90)) ($generated@@281 $generated@@674 ($generated@@85 $generated@@673))) (and (= ($generated@@324 ($generated@@88 $generated@@82 $generated@@674)) $generated@@674) ($generated@@84 ($generated@@88 $generated@@82 $generated@@674) ($generated@@85 $generated@@673))))
 :pattern ( ($generated@@281 $generated@@674 ($generated@@85 $generated@@673)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@82) (= (type $generated@@676) $generated@@68)) (= (type $generated@@677) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@277 $generated@@677) (and ($generated@@297 $generated@@675) ($generated@@103 $generated@@675 ($generated@@85 $generated@@676) $generated@@677)))) ($generated@@103 ($generated@@87 $generated@@675) ($generated@@85 $generated@@676) $generated@@677))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@675) ($generated@@85 $generated@@676) $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@678) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@679) $generated@@68)) (= (type $generated@@680) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@678 ($generated@@216 $generated@@679) $generated@@680) (forall (($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@678 $generated@@681)))) ($generated@@333 $generated@@681 $generated@@679 $generated@@680))
 :pattern ( ($generated@@110 $generated@@678 $generated@@681))
))))
 :pattern ( ($generated@@103 $generated@@678 ($generated@@216 $generated@@679) $generated@@680))
)))
(assert (= $generated@@207 ($generated@@184 $generated@@207)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (= (type $generated@@682) $generated@@82) (= (type $generated@@683) $generated@@68)) (= (type $generated@@684) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@277 $generated@@684) (and ($generated@@192 $generated@@682) (exists (($generated@@685 T@U) ) (!  (and (= (type $generated@@685) $generated@@68) ($generated@@103 $generated@@682 ($generated@@193 $generated@@683 $generated@@685) $generated@@684))
 :pattern ( ($generated@@103 $generated@@682 ($generated@@193 $generated@@683 $generated@@685) $generated@@684))
))))) ($generated@@333 ($generated@@200 $generated@@682) $generated@@683 $generated@@684))
 :pattern ( ($generated@@333 ($generated@@200 $generated@@682) $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@82) (= (type $generated@@687) $generated@@68)) (= (type $generated@@688) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@277 $generated@@688) (and ($generated@@192 $generated@@686) (exists (($generated@@689 T@U) ) (!  (and (= (type $generated@@689) $generated@@68) ($generated@@103 $generated@@686 ($generated@@193 $generated@@689 $generated@@687) $generated@@688))
 :pattern ( ($generated@@103 $generated@@686 ($generated@@193 $generated@@689 $generated@@687) $generated@@688))
))))) ($generated@@333 ($generated@@201 $generated@@686) $generated@@687 $generated@@688))
 :pattern ( ($generated@@333 ($generated@@201 $generated@@686) $generated@@687 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@90) (= (type $generated@@691) $generated@@90)) (= ($generated@@280 ($generated@@184 $generated@@690) ($generated@@184 $generated@@691)) ($generated@@184 ($generated@@280 $generated@@690 $generated@@691))))
 :pattern ( ($generated@@280 ($generated@@184 $generated@@690) ($generated@@184 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) $generated@@90) (= (type $generated@@693) $generated@@82)) (= ($generated@@318 ($generated@@184 $generated@@692) ($generated@@184 $generated@@693)) ($generated@@184 ($generated@@318 $generated@@692 $generated@@693))))
 :pattern ( ($generated@@318 ($generated@@184 $generated@@692) ($generated@@184 $generated@@693)))
)))
(assert (forall (($generated@@694 Int) ) (! (= ($generated@@324 ($generated@@8 ($generated@@209 $generated@@694))) ($generated@@184 ($generated@@324 ($generated@@8 $generated@@694))))
 :pattern ( ($generated@@324 ($generated@@8 ($generated@@209 $generated@@694))))
)))
(assert (forall (($generated@@695 T@U) ) (! (= ($generated@@324 ($generated@@184 $generated@@695)) ($generated@@184 ($generated@@324 $generated@@695)))
 :pattern ( ($generated@@324 ($generated@@184 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ) (! (let (($generated@@697 ($generated@@351 (type $generated@@696))))
 (=> (and (= (type $generated@@696) ($generated@@350 $generated@@697)) (= ($generated@@349 $generated@@696) 0)) (= $generated@@696 ($generated@@348 $generated@@697))))
 :pattern ( ($generated@@349 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (! (let (($generated@@701 (type $generated@@699)))
 (=> (and (and (= (type $generated@@698) ($generated@@105 $generated@@701 $generated@@2)) (= (type $generated@@700) $generated@@2)) (<= 0 ($generated $generated@@700))) (= ($generated@@360 ($generated@@111 $generated@@698 $generated@@699 $generated@@700)) (+ (- ($generated@@360 $generated@@698) ($generated ($generated@@110 $generated@@698 $generated@@699))) ($generated $generated@@700)))))
 :pattern ( ($generated@@360 ($generated@@111 $generated@@698 $generated@@699 $generated@@700)))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@703) $generated@@2)) ($generated@@103 $generated@@703 $generated@@46 $generated@@702))
 :pattern ( ($generated@@103 $generated@@703 $generated@@46 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@705) $generated@@3)) ($generated@@103 $generated@@705 $generated@@47 $generated@@704))
 :pattern ( ($generated@@103 $generated@@705 $generated@@47 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@707) $generated@@4)) ($generated@@103 $generated@@707 $generated@@44 $generated@@706))
 :pattern ( ($generated@@103 $generated@@707 $generated@@44 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@709) $generated@@538)) ($generated@@103 $generated@@709 $generated@@45 $generated@@708))
 :pattern ( ($generated@@103 $generated@@709 $generated@@45 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@711) $generated@@90)) ($generated@@103 $generated@@711 $generated@@48 $generated@@710))
 :pattern ( ($generated@@103 $generated@@711 $generated@@48 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@712) $generated@@68) (= (type $generated@@713) $generated@@90)) (= (type $generated@@714) $generated@@82)) (= (type $generated@@715) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@277 $generated@@715)) (= ($generated@@103 ($generated@@318 $generated@@713 $generated@@714) ($generated@@85 $generated@@712) $generated@@715)  (and ($generated@@333 $generated@@713 $generated@@712 $generated@@715) ($generated@@103 $generated@@714 ($generated@@85 $generated@@712) $generated@@715))))
 :pattern ( ($generated@@103 ($generated@@318 $generated@@713 $generated@@714) ($generated@@85 $generated@@712) $generated@@715))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) ($generated@@350 $generated@@90)) (= (type $generated@@717) $generated@@68)) (= ($generated@@84 $generated@@716 ($generated@@588 $generated@@717)) (forall (($generated@@718 Int) ) (!  (=> (and (<= 0 $generated@@718) (< $generated@@718 ($generated@@349 $generated@@716))) ($generated@@281 ($generated@@589 $generated@@716 $generated@@718) $generated@@717))
 :pattern ( ($generated@@589 $generated@@716 $generated@@718))
))))
 :pattern ( ($generated@@84 $generated@@716 ($generated@@588 $generated@@717)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 Int) ) (!  (=> (= (type $generated@@720) ($generated@@350 $generated@@90)) (=> (and (<= 0 $generated@@721) (< $generated@@721 ($generated@@349 $generated@@720))) (< ($generated@@630 ($generated@@88 $generated@@82 ($generated@@589 $generated@@720 $generated@@721))) ($generated@@719 $generated@@720))))
 :pattern ( ($generated@@630 ($generated@@88 $generated@@82 ($generated@@589 $generated@@720 $generated@@721))))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (and (= (type $generated@@722) ($generated@@371 $generated@@90 $generated@@90)) (= (type $generated@@723) $generated@@68)) (= (type $generated@@724) $generated@@68)) ($generated@@84 $generated@@722 ($generated@@494 $generated@@723 $generated@@724))) (and (and ($generated@@84 ($generated@@369 $generated@@722) ($generated@@304 $generated@@723)) ($generated@@84 ($generated@@412 $generated@@722) ($generated@@304 $generated@@724))) ($generated@@84 ($generated@@468 $generated@@722) ($generated@@304 ($generated@@193 $generated@@723 $generated@@724)))))
 :pattern ( ($generated@@84 $generated@@722 ($generated@@494 $generated@@723 $generated@@724)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (and (= (type $generated@@725) ($generated@@389 $generated@@90 $generated@@90)) (= (type $generated@@726) $generated@@68)) (= (type $generated@@727) $generated@@68)) ($generated@@84 $generated@@725 ($generated@@502 $generated@@726 $generated@@727))) (and (and ($generated@@84 ($generated@@387 $generated@@725) ($generated@@309 $generated@@726)) ($generated@@84 ($generated@@423 $generated@@725) ($generated@@309 $generated@@727))) ($generated@@84 ($generated@@476 $generated@@725) ($generated@@309 ($generated@@193 $generated@@726 $generated@@727)))))
 :pattern ( ($generated@@84 $generated@@725 ($generated@@502 $generated@@726 $generated@@727)))
)))
(assert (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@2) ($generated@@84 $generated@@728 $generated@@46))
 :pattern ( ($generated@@84 $generated@@728 $generated@@46))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@3) ($generated@@84 $generated@@729 $generated@@47))
 :pattern ( ($generated@@84 $generated@@729 $generated@@47))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@4) ($generated@@84 $generated@@730 $generated@@44))
 :pattern ( ($generated@@84 $generated@@730 $generated@@44))
)))
(assert (forall (($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@538) ($generated@@84 $generated@@731 $generated@@45))
 :pattern ( ($generated@@84 $generated@@731 $generated@@45))
)))
(assert (forall (($generated@@732 T@U) ) (!  (=> (= (type $generated@@732) $generated@@90) ($generated@@84 $generated@@732 $generated@@48))
 :pattern ( ($generated@@84 $generated@@732 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () Int)
(declare-fun $generated@@738 () T@U)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 (T@U) Bool)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () T@U)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () Int)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () Int)
(declare-fun $generated@@753 () T@U)
(declare-fun $generated@@754 () T@U)
(declare-fun $generated@@755 () T@U)
(declare-fun $generated@@756 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@736) $generated@@82) (= (type $generated@@753) $generated@@82)) (= (type $generated@@750) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@733) $generated@@82)) (= (type $generated@@734) $generated@@82)) (= (type $generated@@743) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@744) $generated@@82)) (= (type $generated@@735) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@745) $generated@@82)) (= (type $generated@@746) $generated@@82)) (= (type $generated@@739) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@741) $generated@@82)) (= (type $generated@@742) $generated@@82)) (= (type $generated@@738) $generated@@82)) (= (type $generated@@747) $generated@@82)) (= (type $generated@@749) $generated@@82)) (= (type $generated@@751) $generated@@82)) (= (type $generated@@754) ($generated@@223 $generated@@106 $generated@@4))) (= (type $generated@@755) $generated@@106)) (= (type $generated@@756) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 65) (let (($generated@@757 true))
(let (($generated@@758  (=> (and (not ($generated@@183 $generated@@733 $generated@@734)) (= (ControlFlow 0 52) 50)) $generated@@757)))
(let (($generated@@759  (=> (and (and ($generated@@183 $generated@@733 $generated@@734) ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735)) (and ($generated@@170 $generated@@734) (= (ControlFlow 0 51) 50))) $generated@@757)))
(let (($generated@@760  (=> ($generated@@103 $generated@@733 ($generated@@85 $generated@@46) $generated@@735) (=> (and ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735) ($generated@@185 $generated@@733 $generated@@734)) (and (=> (= (ControlFlow 0 53) 51) $generated@@759) (=> (= (ControlFlow 0 53) 52) $generated@@758))))))
(let (($generated@@761  (=> (and ($generated@@185 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) (=> ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) ($generated@@170 $generated@@734))) (and (=> (= (ControlFlow 0 39) (- 0 43)) (=> (and ($generated@@183 $generated@@733 $generated@@734) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@185 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) (or ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) (forall (($generated@@762 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@762 $generated@@736) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@762 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734))))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@762 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@762 $generated@@736))
)))))) (and (=> (= (ControlFlow 0 39) (- 0 42)) (=> (and ($generated@@183 $generated@@733 $generated@@734) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> ($generated@@86 $generated@@734) ($generated@@0 ($generated@@184 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 39) (- 0 41)) (=> (and ($generated@@183 $generated@@733 $generated@@734) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@763 ($generated@@87 $generated@@734)))
 (=> ($generated@@86 $generated@@763) ($generated@@0 ($generated@@184 ($generated@@11 true)))))))))) (and (=> (= (ControlFlow 0 39) (- 0 40)) (=> (and ($generated@@183 $generated@@733 $generated@@734) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@764 ($generated@@87 $generated@@734)))
(let (($generated@@765 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@734)))))
 (=> (not ($generated@@86 $generated@@764)) (let (($generated@@766 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@764)))))
(<= $generated@@765 $generated@@766)))))))))) (=> (= (ControlFlow 0 39) (- 0 38)) (=> (and ($generated@@183 $generated@@733 $generated@@734) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@767 ($generated@@87 $generated@@734)))
 (=> (not ($generated@@86 $generated@@767)) ($generated@@169 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@767)))))))))))))))
(let (($generated@@768  (=> (and (not ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734))) (= (ControlFlow 0 45) 39)) $generated@@761)))
(let (($generated@@769  (=> (and (and ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735)) (and ($generated@@170 $generated@@734) (= (ControlFlow 0 44) 39))) $generated@@761)))
(let (($generated@@770  (=> (and (and (and ($generated@@185 $generated@@733 $generated@@734) (=> ($generated@@183 $generated@@733 $generated@@734) ($generated@@170 $generated@@734))) (and ($generated@@183 $generated@@733 $generated@@734) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734))) (and (and ($generated@@103 $generated@@736 ($generated@@85 $generated@@46) $generated@@735) (= $generated@@738 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734))) (and ($generated@@103 $generated@@738 ($generated@@85 $generated@@46) $generated@@735) ($generated@@185 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734))))) (and (=> (= (ControlFlow 0 46) 44) $generated@@769) (=> (= (ControlFlow 0 46) 45) $generated@@768)))))
(let (($generated@@771  (=> (and (not ($generated@@183 $generated@@733 $generated@@734)) (= (ControlFlow 0 48) 46)) $generated@@770)))
(let (($generated@@772  (=> (and (and ($generated@@183 $generated@@733 $generated@@734) ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735)) (and ($generated@@170 $generated@@734) (= (ControlFlow 0 47) 46))) $generated@@770)))
(let (($generated@@773  (=> ($generated@@103 $generated@@733 ($generated@@85 $generated@@46) $generated@@735) (=> (and ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735) ($generated@@185 $generated@@733 $generated@@734)) (and (=> (= (ControlFlow 0 49) 47) $generated@@772) (=> (= (ControlFlow 0 49) 48) $generated@@771))))))
(let (($generated@@774  (=> (and (and ($generated@@162 $generated@@737 $generated@@734) ($generated@@185 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (=> ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@170 $generated@@734))) (and (=> (= (ControlFlow 0 27) (- 0 31)) (=> (and ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@185 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (or ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (forall (($generated@@775 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@775 $generated@@736) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@775 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@737 $generated@@734))))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@775 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@737 $generated@@734)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@775 $generated@@736))
)))))) (and (=> (= (ControlFlow 0 27) (- 0 30)) (=> (and ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> ($generated@@86 $generated@@734) ($generated@@0 ($generated@@184 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 27) (- 0 29)) (=> (and ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@776 ($generated@@87 $generated@@734)))
 (=> ($generated@@86 $generated@@776) ($generated@@0 ($generated@@184 ($generated@@11 true)))))))))) (and (=> (= (ControlFlow 0 27) (- 0 28)) (=> (and ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@777 ($generated@@87 $generated@@734)))
(let (($generated@@778 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@734)))))
 (=> (not ($generated@@86 $generated@@777)) (let (($generated@@779 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@777)))))
(<= $generated@@778 $generated@@779)))))))))) (=> (= (ControlFlow 0 27) (- 0 26)) (=> (and ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@780 ($generated@@87 $generated@@734)))
 (=> (not ($generated@@86 $generated@@780)) ($generated@@169 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@780)))))))))))))))
(let (($generated@@781  (=> (and (not ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (= (ControlFlow 0 33) 27)) $generated@@774)))
(let (($generated@@782  (=> (and (and ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@739)) (and ($generated@@170 $generated@@734) (= (ControlFlow 0 32) 27))) $generated@@774)))
(let (($generated@@783  (=> (and ($generated@@185 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) (=> ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) ($generated@@170 $generated@@734))) (=> (and (and (and (and ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (and ($generated@@277 $generated@@739) ($generated@@740 $generated@@739))) (and (and ($generated@@162 $generated@@737 $generated@@734) ($generated@@185 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734) ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (and ($generated@@185 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734) ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (and ($generated@@183 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734) ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (forall (($generated@@784 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@174) $generated@@784 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) ($generated@@79 ($generated@@80 $generated@@174) $generated@@784 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@784 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@784 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)))
)))))) (and (and (and (= $generated@@735 $generated@@739) ($generated@@103 ($generated@@8 $generated@@737) $generated@@46 $generated@@739)) (and ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@739) ($generated@@162 $generated@@737 $generated@@734))) (and (and ($generated@@103 $generated@@736 ($generated@@85 $generated@@46) $generated@@739) (= $generated@@741 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (and ($generated@@103 $generated@@741 ($generated@@85 $generated@@46) $generated@@739) ($generated@@185 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)))))) (and (=> (= (ControlFlow 0 34) 32) $generated@@782) (=> (= (ControlFlow 0 34) 33) $generated@@781))))))
(let (($generated@@785  (=> (and (not ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734))) (= (ControlFlow 0 36) 34)) $generated@@783)))
(let (($generated@@786  (=> (and (and ($generated@@183 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)) ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735)) (and ($generated@@170 $generated@@734) (= (ControlFlow 0 35) 34))) $generated@@783)))
(let (($generated@@787  (=> (and (and ($generated@@103 $generated@@736 ($generated@@85 $generated@@46) $generated@@735) (= $generated@@742 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734))) (and ($generated@@103 $generated@@742 ($generated@@85 $generated@@46) $generated@@735) ($generated@@185 $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@737)) $generated@@734)))) (and (=> (= (ControlFlow 0 37) 35) $generated@@786) (=> (= (ControlFlow 0 37) 36) $generated@@785)))))
(let (($generated@@788  (=> (and (and ($generated@@162 $generated@@737 $generated@@734) ($generated@@185 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (=> ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (and ($generated@@162 $generated@@737 $generated@@734) ($generated@@170 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))))) (and (=> (= (ControlFlow 0 11) (- 0 15)) (=> (and ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@185 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (or ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (forall (($generated@@789 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@789 $generated@@736) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@789 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@737 $generated@@734))))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@789 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@737 $generated@@734)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@789 $generated@@736))
)))))) (and (=> (= (ControlFlow 0 11) (- 0 14)) (=> (and ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (or ($generated@@169 ($generated@@80 $generated@@174) ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (=> ($generated@@86 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@0 ($generated@@184 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 11) (- 0 13)) (=> (and ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (or ($generated@@169 ($generated@@80 $generated@@174) ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (=> (not ($generated@@86 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (let (($generated@@790 ($generated@@87 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@737 $generated@@734))))
 (=> ($generated@@86 $generated@@790) ($generated@@0 ($generated@@184 ($generated@@11 true)))))))))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (=> (and ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (or ($generated@@169 ($generated@@80 $generated@@174) ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (=> (not ($generated@@86 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (let (($generated@@791 ($generated@@87 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@737 $generated@@734))))
(let (($generated@@792 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@737 $generated@@734))))))
 (=> (not ($generated@@86 $generated@@791)) (let (($generated@@793 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@791)))))
(<= $generated@@792 $generated@@793)))))))))) (=> (= (ControlFlow 0 11) (- 0 10)) (=> (and ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (=> ($generated@@170 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (or ($generated@@169 ($generated@@80 $generated@@174) ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (=> (not ($generated@@86 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (let (($generated@@794 ($generated@@87 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@737 $generated@@734))))
 (=> (not ($generated@@86 $generated@@794)) ($generated@@169 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@794)))))))))))))))
(let (($generated@@795  (=> (and (not ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (= (ControlFlow 0 17) 11)) $generated@@788)))
(let (($generated@@796  (=> (and (and (and ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@103 ($generated@@8 $generated@@737) $generated@@46 $generated@@743)) (and ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@743) ($generated@@162 $generated@@737 $generated@@734))) (and (and (= $generated@@744 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@103 $generated@@744 ($generated@@85 $generated@@46) $generated@@743)) (and ($generated@@170 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (= (ControlFlow 0 16) 11)))) $generated@@788)))
(let (($generated@@797  (=> (and (and (and ($generated@@162 $generated@@737 $generated@@734) ($generated@@185 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (=> ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@170 $generated@@734))) (and ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734))) (and (=> (= (ControlFlow 0 18) (- 0 22)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> ($generated@@86 $generated@@734) ($generated@@0 ($generated@@184 ($generated@@11 true))))))) (=> (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> ($generated@@86 $generated@@734) ($generated@@0 ($generated@@184 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 18) (- 0 21)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@798 ($generated@@87 $generated@@734)))
 (=> ($generated@@86 $generated@@798) ($generated@@0 ($generated@@184 ($generated@@11 true))))))))) (=> (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@799 ($generated@@87 $generated@@734)))
 (=> ($generated@@86 $generated@@799) ($generated@@0 ($generated@@184 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@800 ($generated@@87 $generated@@734)))
(let (($generated@@801 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@734)))))
 (=> (not ($generated@@86 $generated@@800)) (let (($generated@@802 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@800)))))
(<= $generated@@801 $generated@@802))))))))) (=> (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@803 ($generated@@87 $generated@@734)))
(let (($generated@@804 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@734)))))
 (=> (not ($generated@@86 $generated@@803)) (let (($generated@@805 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@803)))))
(<= $generated@@804 $generated@@805)))))))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@806 ($generated@@87 $generated@@734)))
 (=> (not ($generated@@86 $generated@@806)) ($generated@@169 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@806))))))) (=> (=> ($generated@@170 $generated@@734) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@734) (=> (not ($generated@@86 $generated@@734)) (let (($generated@@807 ($generated@@87 $generated@@734)))
 (=> (not ($generated@@86 $generated@@807)) ($generated@@169 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@807)))))) (=> (and ($generated@@277 $generated@@743) ($generated@@740 $generated@@743)) (=> (and (and ($generated@@162 $generated@@737 $generated@@734) ($generated@@170 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (and ($generated@@170 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (and ($generated@@169 ($generated@@80 $generated@@174) ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) (ite ($generated@@86 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) true (let (($generated@@808 ($generated@@87 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))))
(let (($generated@@809 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))))))
(ite ($generated@@86 $generated@@808) true (let (($generated@@810 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@808)))))
 (and (<= $generated@@809 $generated@@810) ($generated@@169 ($generated@@80 $generated@@174) $generated@@808)))))))))) (=> (and (and (and (= $generated@@735 $generated@@743) ($generated@@103 ($generated@@8 $generated@@737) $generated@@46 $generated@@743)) (and ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@743) ($generated@@162 $generated@@737 $generated@@734))) (and (and ($generated@@103 $generated@@736 ($generated@@85 $generated@@46) $generated@@743) (= $generated@@745 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (and ($generated@@103 $generated@@745 ($generated@@85 $generated@@46) $generated@@743) ($generated@@185 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))))) (and (=> (= (ControlFlow 0 18) 16) $generated@@796) (=> (= (ControlFlow 0 18) 17) $generated@@795))))))))))))))))
(let (($generated@@811  (=> (and (not ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (= (ControlFlow 0 24) 18)) $generated@@797)))
(let (($generated@@812  (=> (and (and ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735)) (and ($generated@@170 $generated@@734) (= (ControlFlow 0 23) 18))) $generated@@797)))
(let (($generated@@813  (=> ($generated@@103 ($generated@@8 $generated@@737) $generated@@46 $generated@@735) (=> (and ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735) ($generated@@162 $generated@@737 $generated@@734)) (=> (and (and ($generated@@103 $generated@@736 ($generated@@85 $generated@@46) $generated@@735) (= $generated@@746 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734))) (and ($generated@@103 $generated@@746 ($generated@@85 $generated@@46) $generated@@735) ($generated@@185 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)))) (and (=> (= (ControlFlow 0 25) 23) $generated@@812) (=> (= (ControlFlow 0 25) 24) $generated@@811)))))))
(let (($generated@@814  (=> (= (ControlFlow 0 3) (- 0 2)) (exists (($generated@@815 T@U) ) (!  (and (= (type $generated@@815) $generated@@82) (and ($generated@@84 $generated@@815 ($generated@@85 $generated@@46)) (and ($generated@@183 $generated@@736 $generated@@815) ($generated@@169 ($generated@@80 $generated@@174) $generated@@815))))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@174) $generated@@815))
 :pattern ( ($generated@@183 $generated@@736 $generated@@815))
)))))
(let (($generated@@816  (=> (and (=> (and ($generated@@183 $generated@@733 $generated@@734) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734)) (and ($generated@@183 $generated@@736 ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)) ($generated@@169 ($generated@@80 $generated@@174) ($generated@@161 ($generated@@80 $generated@@174) $generated@@737 $generated@@734)))) (= (ControlFlow 0 9) 3)) $generated@@814)))
(let (($generated@@817  (and (=> (= (ControlFlow 0 54) (- 0 55)) (or (and ($generated@@84 ($generated@@184 $generated@@207) ($generated@@85 $generated@@46)) (and ($generated@@183 $generated@@733 ($generated@@184 $generated@@207)) ($generated@@169 ($generated@@80 $generated@@174) ($generated@@184 $generated@@207)))) (exists (($generated@@818 T@U) ) (!  (and (= (type $generated@@818) $generated@@82) (and ($generated@@84 $generated@@818 ($generated@@85 $generated@@46)) (and ($generated@@183 $generated@@733 $generated@@818) ($generated@@169 ($generated@@80 $generated@@174) $generated@@818))))
 :no-pattern (type $generated@@818)
 :no-pattern ($generated $generated@@818)
 :no-pattern ($generated@@0 $generated@@818)
)))) (=> (or (and ($generated@@84 ($generated@@184 $generated@@207) ($generated@@85 $generated@@46)) (and ($generated@@183 $generated@@733 ($generated@@184 $generated@@207)) ($generated@@169 ($generated@@80 $generated@@174) ($generated@@184 $generated@@207)))) (exists (($generated@@819 T@U) ) (!  (and (= (type $generated@@819) $generated@@82) (and ($generated@@84 $generated@@819 ($generated@@85 $generated@@46)) (and ($generated@@183 $generated@@733 $generated@@819) ($generated@@169 ($generated@@80 $generated@@174) $generated@@819))))
 :no-pattern (type $generated@@819)
 :no-pattern ($generated $generated@@819)
 :no-pattern ($generated@@0 $generated@@819)
))) (=> (and (and ($generated@@84 $generated@@734 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@734 ($generated@@85 $generated@@46) $generated@@735)) (and ($generated@@183 $generated@@733 $generated@@734) ($generated@@169 ($generated@@80 $generated@@174) $generated@@734))) (and (and (and (and (=> (= (ControlFlow 0 54) 53) $generated@@760) (=> (= (ControlFlow 0 54) 49) $generated@@773)) (=> (= (ControlFlow 0 54) 37) $generated@@787)) (=> (= (ControlFlow 0 54) 25) $generated@@813)) (=> (= (ControlFlow 0 54) 9) $generated@@816)))))))
(let (($generated@@820  (=> (and (and ($generated@@185 $generated@@733 $generated@@747) (=> ($generated@@183 $generated@@733 $generated@@747) ($generated@@170 $generated@@747))) (= (ControlFlow 0 57) 54)) $generated@@817)))
(let (($generated@@821  (=> (and (not ($generated@@183 $generated@@733 $generated@@747)) (= (ControlFlow 0 59) 57)) $generated@@820)))
(let (($generated@@822  (=> (and (and ($generated@@183 $generated@@733 $generated@@747) ($generated@@103 $generated@@747 ($generated@@85 $generated@@46) $generated@@735)) (and ($generated@@170 $generated@@747) (= (ControlFlow 0 58) 57))) $generated@@820)))
(let (($generated@@823  (=> (and (and (and ($generated@@84 $generated@@747 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@747 ($generated@@85 $generated@@46) $generated@@735)) ($generated@@103 $generated@@733 ($generated@@85 $generated@@46) $generated@@735)) (and ($generated@@103 $generated@@747 ($generated@@85 $generated@@46) $generated@@735) ($generated@@185 $generated@@733 $generated@@747))) (and (=> (= (ControlFlow 0 60) 58) $generated@@822) (=> (= (ControlFlow 0 60) 59) $generated@@821)))))
(let (($generated@@824  (=> (and (not (and ($generated@@84 $generated@@747 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@747 ($generated@@85 $generated@@46) $generated@@735))) (= (ControlFlow 0 56) 54)) $generated@@817)))
(let (($generated@@825  (=> (and (= $generated@@736 ($generated@@318 ($generated@@324 ($generated@@8 $generated@@748)) $generated@@749)) ($generated@@84 $generated@@749 ($generated@@85 $generated@@46))) (=> (and (and (and ($generated@@84 $generated@@733 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@733 ($generated@@85 $generated@@46) $generated@@750)) (and (= $generated@@751 $generated@@749) ($generated@@84 $generated@@751 ($generated@@85 $generated@@46)))) (and (and (= $generated@@733 $generated@@751) (= $generated@@752 $generated@@748)) (and ($generated@@84 ($generated@@8 $generated@@752) $generated@@46) (= $generated@@737 $generated@@752)))) (and (=> (= (ControlFlow 0 61) (- 0 62)) (< ($generated@@630 $generated@@733) ($generated@@630 $generated@@736))) (=> (< ($generated@@630 $generated@@733) ($generated@@630 $generated@@736)) (=> (and (and (and ($generated@@277 $generated@@735) ($generated@@740 $generated@@735)) (forall (($generated@@826 T@U) ) (!  (=> (and (= (type $generated@@826) $generated@@82) ($generated@@84 $generated@@826 ($generated@@85 $generated@@46))) (and ($generated@@185 $generated@@733 $generated@@826) (=> ($generated@@183 $generated@@733 $generated@@826) ($generated@@170 $generated@@826))))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@174) $generated@@826))
 :pattern ( ($generated@@183 $generated@@733 $generated@@826))
))) (and (exists (($generated@@827 T@U) ) (!  (and (= (type $generated@@827) $generated@@82) (and ($generated@@84 $generated@@827 ($generated@@85 $generated@@46)) (and ($generated@@183 $generated@@733 $generated@@827) ($generated@@169 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@827))))
 :pattern ( ($generated@@169 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@827))
 :pattern ( ($generated@@183 $generated@@733 $generated@@827))
)) (= $generated@@750 $generated@@735))) (and (=> (= (ControlFlow 0 61) 60) $generated@@823) (=> (= (ControlFlow 0 61) 56) $generated@@824)))))))))
(let (($generated@@828  (=> (= $generated@@736 $generated@@207) (=> (and (and (= $generated@@753 ($generated@@184 $generated@@207)) ($generated@@103 $generated@@753 ($generated@@85 $generated@@46) $generated@@750)) (and ($generated@@170 ($generated@@184 $generated@@207)) ($generated@@170 ($generated@@184 $generated@@207)))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (=> ($generated@@170 ($generated@@184 $generated@@207)) (or ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@169 ($generated@@80 $generated@@174) ($generated@@184 $generated@@207))))) (=> ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@86 ($generated@@184 $generated@@207))))) ($generated@@0 ($generated@@184 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (=> ($generated@@170 ($generated@@184 $generated@@207)) (or ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@169 ($generated@@80 $generated@@174) ($generated@@184 $generated@@207))))) (=> (not ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@86 ($generated@@184 $generated@@207)))))) (let (($generated@@829 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@207)))))
 (=> ($generated@@86 $generated@@829) ($generated@@0 ($generated@@184 ($generated@@11 true))))))))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@170 ($generated@@184 $generated@@207)) (or ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@169 ($generated@@80 $generated@@174) ($generated@@184 $generated@@207))))) (=> (not ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@86 ($generated@@184 $generated@@207)))))) (let (($generated@@830 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@207)))))
(let (($generated@@831 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@207)))))))
 (=> (not ($generated@@86 $generated@@830)) (let (($generated@@832 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@830)))))
(<= $generated@@831 $generated@@832))))))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@170 ($generated@@184 $generated@@207)) (or ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@169 ($generated@@80 $generated@@174) ($generated@@184 $generated@@207))))) (=> (not ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@86 ($generated@@184 $generated@@207)))))) (let (($generated@@833 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@207)))))
 (=> (not ($generated@@86 $generated@@833)) ($generated@@169 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@833))))))) (=> (and ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@169 ($generated@@80 $generated@@174) ($generated@@184 $generated@@207))))) (= (ControlFlow 0 4) 3)) $generated@@814)))))))))
(let (($generated@@834 true))
(let (($generated@@835  (=> (not (= $generated@@736 $generated@@207)) (and (=> (= (ControlFlow 0 63) 61) $generated@@825) (=> (= (ControlFlow 0 63) 1) $generated@@834)))))
(let (($generated@@836  (=> (= $generated@@754 ($generated@@222 $generated@@755 $generated@@750 $generated@@60 false)) (and (=> (= (ControlFlow 0 64) 4) $generated@@828) (=> (= (ControlFlow 0 64) 63) $generated@@835)))))
(let (($generated@@837  (=> (and ($generated@@277 $generated@@750) ($generated@@740 $generated@@750)) (=> (and (and ($generated@@84 $generated@@736 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@736 ($generated@@85 $generated@@46) $generated@@750)) ($generated@@449 $generated@@736)) (=> (and (and (and ($generated@@84 $generated@@756 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@756 ($generated@@85 $generated@@46) $generated@@750)) true) (and (= 4 $generated@@78) (= (ControlFlow 0 65) 64))) $generated@@836)))))
$generated@@837))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U Int T@U) T@U)
(declare-fun $generated@@162 (Int T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U) T@U)
(declare-fun $generated@@199 (T@U T@U) Bool)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@209 (Int) Int)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@221 (T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@T T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@277 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@293 (T@U T@U) Bool)
(declare-fun $generated@@303 (T@U T@U) Bool)
(declare-fun $generated@@309 (T@U) Bool)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@330 (T@U T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@345 (T@U T@U T@U) Bool)
(declare-fun $generated@@360 (T@T) T@U)
(declare-fun $generated@@361 (T@U) Int)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@372 (T@U) Int)
(declare-fun $generated@@373 (T@T) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@T T@T) T@U)
(declare-fun $generated@@383 (T@T T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@385 (T@T) T@T)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@T T@T) T@U)
(declare-fun $generated@@401 (T@T T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@403 (T@T) T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@504 (T@U T@U) T@U)
(declare-fun $generated@@512 (T@U T@U) T@U)
(declare-fun $generated@@524 (T@T) T@U)
(declare-fun $generated@@548 () T@T)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@598 (T@U T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@604 (T@U Int) T@U)
(declare-fun $generated@@613 (T@U) Int)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@644 (T@U) Int)
(declare-fun $generated@@645 (T@U) Int)
(declare-fun $generated@@664 (T@U) Bool)
(declare-fun $generated@@755 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ($generated@@165 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164 $generated@@165)) $generated@@82)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164 $generated@@165))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@166 T@U) ($generated@@167 Int) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@81) (= (type $generated@@168) $generated@@82)) (or ($generated@@162 $generated@@167 $generated@@168) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@168 ($generated@@85 $generated@@46))))) ($generated@@84 ($generated@@161 $generated@@166 $generated@@167 $generated@@168) ($generated@@85 $generated@@46)))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167 $generated@@168))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@82)) (or ($generated@@170 $generated@@172) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@172 ($generated@@85 $generated@@46))))) true)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@81)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@81)))
(assert (forall (($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@81) (= (type $generated@@178) $generated@@82)) (= ($generated@@79 $generated@@176 $generated@@177 $generated@@178) ($generated@@79 $generated@@174 $generated@@177 $generated@@178)))
 :pattern ( ($generated@@79 ($generated@@173 $generated@@176) $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@81) (= (type $generated@@181) $generated@@82)) (= ($generated@@161 $generated@@179 $generated@@180 $generated@@181) ($generated@@161 $generated@@174 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@161 ($generated@@173 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@2) ($generated@@84 $generated@@182 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@182 ($generated@@104 0)))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@184 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@82) (= (type $generated@@189) $generated@@82)) (or ($generated@@185 ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@188 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@189 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@190 Int) ) (!  (and ($generated@@83 $generated@@190 ($generated@@184 $generated@@188)) ($generated@@83 $generated@@190 ($generated@@184 $generated@@189)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@190 $generated@@189))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@190 $generated@@188))
)) (= ($generated@@183 ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)) (forall (($generated@@191 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@174) $generated@@191 ($generated@@184 $generated@@188)) ($generated@@79 ($generated@@80 $generated@@174) $generated@@191 ($generated@@184 $generated@@189))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@191 $generated@@189))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@191 $generated@@188))
)))))
 :weight 3
 :pattern ( ($generated@@183 ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@194 $generated@@195)) $generated@@68)
 :pattern ( ($generated@@193 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (and (= (type $generated@@196) $generated@@68) (= (type $generated@@197) $generated@@68)) (= (type $generated@@198) $generated@@82)) ($generated@@84 $generated@@198 ($generated@@193 $generated@@196 $generated@@197))) ($generated@@192 $generated@@198))
 :pattern ( ($generated@@192 $generated@@198) ($generated@@84 $generated@@198 ($generated@@193 $generated@@196 $generated@@197)))
)))
(assert  (and (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@90)
 :pattern ( ($generated@@200 $generated@@202))
)) (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@90)
 :pattern ( ($generated@@201 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) $generated@@82) (= (type $generated@@205) $generated@@82)) true) (= ($generated@@199 $generated@@204 $generated@@205)  (and (= ($generated@@200 $generated@@204) ($generated@@200 $generated@@205)) (= ($generated@@201 $generated@@204) ($generated@@201 $generated@@205)))))
 :pattern ( ($generated@@199 $generated@@204 $generated@@205))
)))
(assert  (and (forall (($generated@@208 T@U) ) (! (= (type ($generated@@206 $generated@@208)) $generated@@72)
 :pattern ( ($generated@@206 $generated@@208))
)) (= (type $generated@@207) $generated@@82)))
(assert (= ($generated@@206 $generated@@207) $generated@@63))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@210 T@U) ($generated@@211 Int) ($generated@@212 T@U) ) (!  (=> (and (and (= (type $generated@@210) $generated@@81) (= (type $generated@@212) $generated@@82)) (or ($generated@@83 ($generated@@209 $generated@@211) ($generated@@184 $generated@@212)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@212 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@86 ($generated@@184 $generated@@212)))))) (let (($generated@@213 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@212)))))
($generated@@83 ($generated@@209 $generated@@211) $generated@@213))) (= ($generated@@79 ($generated@@80 $generated@@210) ($generated@@209 $generated@@211) ($generated@@184 $generated@@212)) (ite ($generated@@86 ($generated@@184 $generated@@212)) 0 (let (($generated@@214 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@212)))))
(let (($generated@@215 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@212)))))))
(+ (ite (= ($generated@@209 $generated@@211) $generated@@215) 1 0) ($generated@@79 ($generated@@80 $generated@@210) ($generated@@209 $generated@@211) $generated@@214))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@210) ($generated@@209 $generated@@211) ($generated@@184 $generated@@212)))
))))
(assert (forall (($generated@@218 T@U) ) (! (= (type ($generated@@216 $generated@@218)) $generated@@68)
 :pattern ( ($generated@@216 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (= (type $generated@@219) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@220) $generated@@68)) ($generated@@84 $generated@@219 ($generated@@216 $generated@@220))) ($generated@@217 $generated@@219))
 :pattern ( ($generated@@84 $generated@@219 ($generated@@216 $generated@@220)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@227 $generated@@228)) 17)) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@229 $generated@@230)) $generated@@229)
 :pattern ( ($generated@@223 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@225 ($generated@@223 $generated@@231 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@223 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@225 (type $generated@@233))))
(= (type ($generated@@221 $generated@@233 $generated@@234 $generated@@235)) $generated@@236))
 :pattern ( ($generated@@221 $generated@@233 $generated@@234 $generated@@235))
))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(let (($generated@@242 (type $generated@@238)))
(= (type ($generated@@226 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@223 $generated@@242 $generated@@241))))
 :pattern ( ($generated@@226 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@225 (type $generated@@243))))
 (=> (= (type $generated@@246) $generated@@247) (= ($generated@@221 ($generated@@226 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@244 $generated@@245) $generated@@246)))
 :weight 0
))) (and (and (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (or (= $generated@@250 $generated@@252) (= ($generated@@221 ($generated@@226 $generated@@249 $generated@@250 $generated@@251 $generated@@248) $generated@@252 $generated@@253) ($generated@@221 $generated@@249 $generated@@252 $generated@@253)))
 :weight 0
)) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (or (= $generated@@257 $generated@@259) (= ($generated@@221 ($generated@@226 $generated@@255 $generated@@256 $generated@@257 $generated@@254) $generated@@258 $generated@@259) ($generated@@221 $generated@@255 $generated@@258 $generated@@259)))
 :weight 0
))) (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (or true (= ($generated@@221 ($generated@@226 $generated@@261 $generated@@262 $generated@@263 $generated@@260) $generated@@264 $generated@@265) ($generated@@221 $generated@@261 $generated@@264 $generated@@265)))
 :weight 0
)))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ) (! (= (type ($generated@@222 $generated@@266 $generated@@267 $generated@@268 $generated@@269)) ($generated@@223 $generated@@106 $generated@@4))
 :pattern ( ($generated@@222 $generated@@266 $generated@@267 $generated@@268 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 Bool) ($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@71 (type $generated@@275))))
 (=> (and (and (and (and (= (type $generated@@270) $generated@@106) (= (type $generated@@271) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@272) ($generated@@70 $generated@@4))) (= (type $generated@@274) $generated@@106)) (= (type $generated@@275) ($generated@@70 $generated@@276))) (= ($generated@@0 ($generated@@221 ($generated@@222 $generated@@270 $generated@@271 $generated@@272 $generated@@273) $generated@@274 $generated@@275))  (=> (and (not (= $generated@@274 $generated@@270)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@271 $generated@@274) $generated@@272))) $generated@@273))))
 :pattern ( ($generated@@221 ($generated@@222 $generated@@270 $generated@@271 $generated@@272 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 Bool) ) (! (= (type ($generated@@277 $generated@@278 $generated@@279 $generated@@280 $generated@@281)) ($generated@@223 $generated@@106 $generated@@4))
 :pattern ( ($generated@@277 $generated@@278 $generated@@279 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 Bool) ($generated@@286 T@U) ($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@71 (type $generated@@287))))
 (=> (and (and (and (and (= (type $generated@@282) $generated@@106) (= (type $generated@@283) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@284) ($generated@@70 $generated@@4))) (= (type $generated@@286) $generated@@106)) (= (type $generated@@287) ($generated@@70 $generated@@288))) (= ($generated@@0 ($generated@@221 ($generated@@277 $generated@@282 $generated@@283 $generated@@284 $generated@@285) $generated@@286 $generated@@287))  (=> (and (not (= $generated@@286 $generated@@282)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@283 $generated@@286) $generated@@284))) $generated@@285))))
 :pattern ( ($generated@@221 ($generated@@277 $generated@@282 $generated@@283 $generated@@284 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@68) (= (type $generated@@291) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@289 $generated@@291)) ($generated@@103 $generated@@207 ($generated@@85 $generated@@290) $generated@@291))
 :pattern ( ($generated@@103 $generated@@207 ($generated@@85 $generated@@290) $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@292 $generated@@294 $generated@@295)) $generated@@82)
 :pattern ( ($generated@@292 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (= (type $generated@@296) $generated@@68) (= (type $generated@@297) $generated@@68)) (= (type $generated@@298) $generated@@90)) (= (type $generated@@299) $generated@@90)) (= ($generated@@84 ($generated@@292 $generated@@298 $generated@@299) ($generated@@193 $generated@@296 $generated@@297))  (and ($generated@@293 $generated@@298 $generated@@296) ($generated@@293 $generated@@299 $generated@@297))))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@298 $generated@@299) ($generated@@193 $generated@@296 $generated@@297)))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@68) ($generated@@84 $generated@@207 ($generated@@85 $generated@@300)))
 :pattern ( ($generated@@84 $generated@@207 ($generated@@85 $generated@@300)))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@82) (= (type $generated@@302) $generated@@82)) (= ($generated@@199 $generated@@301 $generated@@302) (= $generated@@301 $generated@@302)))
 :pattern ( ($generated@@199 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@82) (= (type $generated@@305) $generated@@82)) (= ($generated@@303 $generated@@304 $generated@@305) (= $generated@@304 $generated@@305)))
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@306 T@U) ($generated@@307 Int) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@81) (= (type $generated@@308) $generated@@82)) (or ($generated@@83 $generated@@307 $generated@@308) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@308 ($generated@@85 $generated@@46))))) (<= ($generated@@209 0) ($generated@@79 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@79 $generated@@306 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (= (type $generated@@310) $generated@@82) (= (type $generated@@311) $generated@@82)) (and ($generated@@309 $generated@@310) ($generated@@309 $generated@@311))) (= ($generated@@303 $generated@@310 $generated@@311)  (and (= ($generated@@89 $generated@@310) ($generated@@89 $generated@@311)) ($generated@@303 ($generated@@87 $generated@@310) ($generated@@87 $generated@@311)))))
 :pattern ( ($generated@@303 $generated@@310 $generated@@311) ($generated@@309 $generated@@310))
 :pattern ( ($generated@@303 $generated@@310 $generated@@311) ($generated@@309 $generated@@311))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@312) $generated@@82) (= (type $generated@@313) $generated@@82)) (or ($generated@@185 $generated@@312 $generated@@313) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@312 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@313 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@314 Int) ) (!  (and ($generated@@83 $generated@@314 $generated@@312) ($generated@@83 $generated@@314 $generated@@313))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@314 $generated@@313))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@314 $generated@@312))
)) (= ($generated@@183 $generated@@312 $generated@@313) (forall (($generated@@315 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@174) $generated@@315 $generated@@312) ($generated@@79 ($generated@@80 $generated@@174) $generated@@315 $generated@@313)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@315 $generated@@313))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@315 $generated@@312))
)))))
 :pattern ( ($generated@@183 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@68)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@319) $generated@@68)) (= ($generated@@84 $generated@@318 ($generated@@316 $generated@@319)) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@90) ($generated@@0 ($generated@@110 $generated@@318 $generated@@320))) ($generated@@293 $generated@@320 $generated@@319))
 :pattern ( ($generated@@110 $generated@@318 $generated@@320))
))))
 :pattern ( ($generated@@84 $generated@@318 ($generated@@316 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@68)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@324) $generated@@68)) (= ($generated@@84 $generated@@323 ($generated@@321 $generated@@324)) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@90) ($generated@@0 ($generated@@110 $generated@@323 $generated@@325))) ($generated@@293 $generated@@325 $generated@@324))
 :pattern ( ($generated@@110 $generated@@323 $generated@@325))
))))
 :pattern ( ($generated@@84 $generated@@323 ($generated@@321 $generated@@324)))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@209 $generated@@326) $generated@@326)
 :pattern ( ($generated@@209 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (! (= ($generated@@184 $generated@@327) $generated@@327)
 :pattern ( ($generated@@184 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@328) $generated@@82) (= (type $generated@@329) $generated@@82)) (and ($generated@@86 $generated@@328) ($generated@@86 $generated@@329))) (= ($generated@@303 $generated@@328 $generated@@329) true))
 :pattern ( ($generated@@303 $generated@@328 $generated@@329) ($generated@@86 $generated@@328))
 :pattern ( ($generated@@303 $generated@@328 $generated@@329) ($generated@@86 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@82)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) $generated@@68) (= (type $generated@@334) $generated@@90)) (= (type $generated@@335) $generated@@82)) (= ($generated@@84 ($generated@@330 $generated@@334 $generated@@335) ($generated@@85 $generated@@333))  (and ($generated@@293 $generated@@334 $generated@@333) ($generated@@84 $generated@@335 ($generated@@85 $generated@@333)))))
 :pattern ( ($generated@@84 ($generated@@330 $generated@@334 $generated@@335) ($generated@@85 $generated@@333)))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@90)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@338 T@U) ($generated@@339 Int) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) $generated@@81) (= (type $generated@@340) $generated@@82)) (or ($generated@@162 $generated@@339 $generated@@340) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@340 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@340)) (let (($generated@@341 ($generated@@87 $generated@@340)))
(let (($generated@@342 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@340)))))
 (=> (< $generated@@342 $generated@@339) ($generated@@162 $generated@@339 $generated@@341))))) (= ($generated@@161 ($generated@@80 $generated@@338) $generated@@339 $generated@@340) (ite ($generated@@86 $generated@@340) ($generated@@330 ($generated@@336 ($generated@@8 $generated@@339)) ($generated@@184 $generated@@207)) (let (($generated@@343 ($generated@@87 $generated@@340)))
(let (($generated@@344 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@340)))))
(ite (<= $generated@@339 $generated@@344) ($generated@@330 ($generated@@336 ($generated@@8 $generated@@339)) $generated@@340) ($generated@@330 ($generated@@336 ($generated@@8 $generated@@344)) ($generated@@161 $generated@@338 $generated@@339 $generated@@343)))))))))
 :pattern ( ($generated@@161 ($generated@@80 $generated@@338) $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@346) $generated@@68) (= (type $generated@@347) $generated@@68)) (= (type $generated@@348) $generated@@90)) (= (type $generated@@349) $generated@@90)) (= (type $generated@@350) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@289 $generated@@350)) (= ($generated@@103 ($generated@@292 $generated@@348 $generated@@349) ($generated@@193 $generated@@346 $generated@@347) $generated@@350)  (and ($generated@@345 $generated@@348 $generated@@346 $generated@@350) ($generated@@345 $generated@@349 $generated@@347 $generated@@350))))
 :pattern ( ($generated@@103 ($generated@@292 $generated@@348 $generated@@349) ($generated@@193 $generated@@346 $generated@@347) $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@82) (= ($generated@@192 $generated@@351) (= ($generated@@206 $generated@@351) $generated@@61)))
 :pattern ( ($generated@@192 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@82) (= ($generated@@86 $generated@@352) (= ($generated@@206 $generated@@352) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@82) (= ($generated@@309 $generated@@353) (= ($generated@@206 $generated@@353) $generated@@65)))
 :pattern ( ($generated@@309 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@82) ($generated@@192 $generated@@354)) (exists (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (and (and (= (type $generated@@355) $generated@@90) (= (type $generated@@356) $generated@@90)) (= $generated@@354 ($generated@@292 $generated@@355 $generated@@356)))
 :no-pattern (type $generated@@355)
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
)))
 :pattern ( ($generated@@192 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@82) ($generated@@309 $generated@@357)) (exists (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (and (and (= (type $generated@@358) $generated@@90) (= (type $generated@@359) $generated@@82)) (= $generated@@357 ($generated@@330 $generated@@358 $generated@@359)))
 :no-pattern (type $generated@@358)
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
)))
 :pattern ( ($generated@@309 $generated@@357))
)))
(assert  (and (and (forall (($generated@@364 T@T) ) (= ($generated@@1 ($generated@@362 $generated@@364)) 18)) (forall (($generated@@365 T@T) ) (! (= ($generated@@363 ($generated@@362 $generated@@365)) $generated@@365)
 :pattern ( ($generated@@362 $generated@@365))
))) (forall (($generated@@366 T@T) ) (! (= (type ($generated@@360 $generated@@366)) ($generated@@362 $generated@@366))
 :pattern ( ($generated@@360 $generated@@366))
))))
(assert (forall (($generated@@367 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@367)) 0)
 :pattern ( ($generated@@360 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@82) ($generated@@86 $generated@@368)) (= $generated@@368 $generated@@207))
 :pattern ( ($generated@@86 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@68) (= (type $generated@@371) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@345 ($generated@@336 $generated@@369) $generated@@370 $generated@@371) ($generated@@103 $generated@@369 $generated@@370 $generated@@371)))
 :pattern ( ($generated@@345 ($generated@@336 $generated@@369) $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@374 T@T) ) (! (= (type ($generated@@373 $generated@@374)) ($generated@@105 $generated@@374 $generated@@2))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@108 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@105 $generated@@376 $generated@@2)) (and (= (= ($generated@@372 $generated@@375) 0) (= $generated@@375 ($generated@@373 $generated@@376))) (=> (not (= ($generated@@372 $generated@@375) 0)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (< 0 ($generated ($generated@@110 $generated@@375 $generated@@377))))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (= (type ($generated@@378 $generated@@379)) $generated@@73)
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@380)) $generated@@64) (= ($generated@@378 ($generated@@85 $generated@@380)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@380))
)))
(assert  (and (and (and (and (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (= ($generated@@1 ($generated@@383 $generated@@386 $generated@@387)) 19)) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= ($generated@@384 ($generated@@383 $generated@@388 $generated@@389)) $generated@@388)
 :pattern ( ($generated@@383 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (! (= ($generated@@385 ($generated@@383 $generated@@390 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@383 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@384 (type $generated@@392))))
(= (type ($generated@@381 $generated@@392)) ($generated@@105 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@392))
))) (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (! (= (type ($generated@@382 $generated@@394 $generated@@395)) ($generated@@383 $generated@@394 $generated@@395))
 :pattern ( ($generated@@382 $generated@@394 $generated@@395))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@T) ) (! (let (($generated@@398 (type $generated@@396)))
 (not ($generated@@0 ($generated@@110 ($generated@@381 ($generated@@382 $generated@@398 $generated@@397)) $generated@@396))))
 :pattern ( (let (($generated@@398 (type $generated@@396)))
($generated@@110 ($generated@@381 ($generated@@382 $generated@@398 $generated@@397)) $generated@@396)))
)))
(assert  (and (and (and (and (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (= ($generated@@1 ($generated@@401 $generated@@404 $generated@@405)) 20)) (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (! (= ($generated@@402 ($generated@@401 $generated@@406 $generated@@407)) $generated@@406)
 :pattern ( ($generated@@401 $generated@@406 $generated@@407))
))) (forall (($generated@@408 T@T) ($generated@@409 T@T) ) (! (= ($generated@@403 ($generated@@401 $generated@@408 $generated@@409)) $generated@@409)
 :pattern ( ($generated@@401 $generated@@408 $generated@@409))
))) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@402 (type $generated@@410))))
(= (type ($generated@@399 $generated@@410)) ($generated@@105 $generated@@411 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@410))
))) (forall (($generated@@412 T@T) ($generated@@413 T@T) ) (! (= (type ($generated@@400 $generated@@412 $generated@@413)) ($generated@@401 $generated@@412 $generated@@413))
 :pattern ( ($generated@@400 $generated@@412 $generated@@413))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@T) ) (! (let (($generated@@416 (type $generated@@414)))
 (not ($generated@@0 ($generated@@110 ($generated@@399 ($generated@@400 $generated@@416 $generated@@415)) $generated@@414))))
 :pattern ( (let (($generated@@416 (type $generated@@414)))
($generated@@110 ($generated@@399 ($generated@@400 $generated@@416 $generated@@415)) $generated@@414)))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@108 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@105 $generated@@418 $generated@@2)) (= ($generated@@217 $generated@@417) (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@418) (and (<= 0 ($generated ($generated@@110 $generated@@417 $generated@@419))) (<= ($generated ($generated@@110 $generated@@417 $generated@@419)) ($generated@@372 $generated@@417))))
 :pattern ( ($generated@@110 $generated@@417 $generated@@419))
)))))
 :pattern ( ($generated@@217 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@385 (type $generated@@420))))
(let (($generated@@422 ($generated@@384 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@383 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@382 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) ($generated@@0 ($generated@@110 ($generated@@381 $generated@@420) $generated@@423)))
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@381 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@385 (type $generated@@425))))
(= (type ($generated@@424 $generated@@425)) ($generated@@105 $generated@@426 $generated@@4)))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@385 (type $generated@@427))))
(let (($generated@@429 ($generated@@384 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@383 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@382 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@428) ($generated@@0 ($generated@@110 ($generated@@424 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@424 $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@403 (type $generated@@431))))
(let (($generated@@433 ($generated@@402 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@401 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@400 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) ($generated@@0 ($generated@@110 ($generated@@399 $generated@@431) $generated@@434)))
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@399 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@403 (type $generated@@436))))
(= (type ($generated@@435 $generated@@436)) ($generated@@105 $generated@@437 $generated@@4)))
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@403 (type $generated@@438))))
(let (($generated@@440 ($generated@@402 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@401 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@400 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@439) ($generated@@0 ($generated@@110 ($generated@@435 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@435 $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 Int) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@81) (= (type $generated@@444) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@442) $generated@@443 $generated@@444) ($generated@@79 $generated@@442 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@442) $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 Int) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@81) (= (type $generated@@447) $generated@@82)) (= ($generated@@161 ($generated@@80 $generated@@445) $generated@@446 $generated@@447) ($generated@@161 $generated@@445 $generated@@446 $generated@@447)))
 :pattern ( ($generated@@161 ($generated@@80 $generated@@445) $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@449) $generated@@68)) (= ($generated@@84 $generated@@448 ($generated@@216 $generated@@449)) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@448 $generated@@450)))) ($generated@@293 $generated@@450 $generated@@449))
 :pattern ( ($generated@@110 $generated@@448 $generated@@450))
))))
 :pattern ( ($generated@@84 $generated@@448 ($generated@@216 $generated@@449)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (= (type $generated@@451) $generated@@81) (= (type $generated@@452) $generated@@82)) (or ($generated@@170 $generated@@452) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@452 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@452)) (let (($generated@@453 ($generated@@87 $generated@@452)))
(let (($generated@@454 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@452)))))
 (=> (not ($generated@@86 $generated@@453)) (let (($generated@@455 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@453)))))
 (=> (<= $generated@@454 $generated@@455) ($generated@@170 $generated@@453))))))) (= ($generated@@169 ($generated@@80 $generated@@451) $generated@@452) (ite ($generated@@86 $generated@@452) true (let (($generated@@456 ($generated@@87 $generated@@452)))
(let (($generated@@457 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@452)))))
(ite ($generated@@86 $generated@@456) true (let (($generated@@458 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@456)))))
 (and (<= $generated@@457 $generated@@458) ($generated@@169 $generated@@451 $generated@@456))))))))))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@451) $generated@@452))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (= (type $generated@@459) $generated@@82) (= (type $generated@@460) $generated@@82)) (or ($generated@@185 $generated@@459 $generated@@460) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@459 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@460 ($generated@@85 $generated@@46)))))) true)
 :pattern ( ($generated@@183 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (= (type $generated@@461) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@462) $generated@@68)) (= (type $generated@@463) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@461 ($generated@@316 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@90) ($generated@@0 ($generated@@110 $generated@@461 $generated@@464))) ($generated@@345 $generated@@464 $generated@@462 $generated@@463))
 :pattern ( ($generated@@110 $generated@@461 $generated@@464))
))))
 :pattern ( ($generated@@103 $generated@@461 ($generated@@316 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (= (type $generated@@465) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@465 ($generated@@321 $generated@@466) $generated@@467) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@90) ($generated@@0 ($generated@@110 $generated@@465 $generated@@468))) ($generated@@345 $generated@@468 $generated@@466 $generated@@467))
 :pattern ( ($generated@@110 $generated@@465 $generated@@468))
))))
 :pattern ( ($generated@@103 $generated@@465 ($generated@@321 $generated@@466) $generated@@467))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@469 T@U) ($generated@@470 Int) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@469) $generated@@81) (= (type $generated@@471) $generated@@82)) (or ($generated@@162 ($generated@@209 $generated@@470) ($generated@@184 $generated@@471)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@471 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@86 ($generated@@184 $generated@@471)))))) (let (($generated@@472 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@471)))))
(let (($generated@@473 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@471)))))))
 (=> (< $generated@@473 ($generated@@209 $generated@@470)) ($generated@@162 ($generated@@209 $generated@@470) $generated@@472))))) (= ($generated@@161 ($generated@@80 $generated@@469) ($generated@@209 $generated@@470) ($generated@@184 $generated@@471)) (ite ($generated@@86 ($generated@@184 $generated@@471)) ($generated@@330 ($generated@@336 ($generated@@8 ($generated@@209 $generated@@470))) ($generated@@184 $generated@@207)) (let (($generated@@474 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@471)))))
(let (($generated@@475 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@471)))))))
(ite (<= ($generated@@209 $generated@@470) $generated@@475) ($generated@@330 ($generated@@336 ($generated@@8 ($generated@@209 $generated@@470))) ($generated@@184 $generated@@471)) ($generated@@330 ($generated@@336 ($generated@@8 $generated@@475)) ($generated@@184 ($generated@@161 ($generated@@80 $generated@@469) ($generated@@209 $generated@@470) $generated@@474))))))))))
 :weight 3
 :pattern ( ($generated@@161 ($generated@@80 $generated@@469) ($generated@@209 $generated@@470) ($generated@@184 $generated@@471)))
))))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(= ($generated ($generated@@110 ($generated@@373 $generated@@477) $generated@@476)) 0))
 :pattern ( (let (($generated@@477 (type $generated@@476)))
($generated@@110 ($generated@@373 $generated@@477) $generated@@476)))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@385 (type $generated@@481))))
(let (($generated@@483 ($generated@@384 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481)) ($generated@@105 $generated@@483 $generated@@482))))
 :pattern ( ($generated@@479 $generated@@481))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) ($generated@@383 $generated@@90 $generated@@90)) (= (type $generated@@485) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@478 $generated@@484) $generated@@485))  (and ($generated@@0 ($generated@@110 ($generated@@381 $generated@@484) ($generated@@200 ($generated@@88 $generated@@82 $generated@@485)))) (= ($generated@@110 ($generated@@479 $generated@@484) ($generated@@200 ($generated@@88 $generated@@82 $generated@@485))) ($generated@@201 ($generated@@88 $generated@@82 $generated@@485))))))
 :pattern ( ($generated@@110 ($generated@@478 $generated@@484) $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@403 (type $generated@@489))))
(let (($generated@@491 ($generated@@402 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489)) ($generated@@105 $generated@@491 $generated@@490))))
 :pattern ( ($generated@@487 $generated@@489))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) ($generated@@401 $generated@@90 $generated@@90)) (= (type $generated@@493) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@486 $generated@@492) $generated@@493))  (and ($generated@@0 ($generated@@110 ($generated@@399 $generated@@492) ($generated@@200 ($generated@@88 $generated@@82 $generated@@493)))) (= ($generated@@110 ($generated@@487 $generated@@492) ($generated@@200 ($generated@@88 $generated@@82 $generated@@493))) ($generated@@201 ($generated@@88 $generated@@82 $generated@@493))))))
 :pattern ( ($generated@@110 ($generated@@486 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(let (($generated@@497 ($generated@@384 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@383 $generated@@497 $generated@@496)) (= ($generated@@0 ($generated@@110 ($generated@@424 $generated@@494) $generated@@495)) (exists (($generated@@498 T@U) ) (!  (and (= (type $generated@@498) $generated@@497) (and ($generated@@0 ($generated@@110 ($generated@@381 $generated@@494) $generated@@498)) (= $generated@@495 ($generated@@110 ($generated@@479 $generated@@494) $generated@@498))))
 :pattern ( ($generated@@110 ($generated@@381 $generated@@494) $generated@@498))
 :pattern ( ($generated@@110 ($generated@@479 $generated@@494) $generated@@498))
))))))
 :pattern ( ($generated@@110 ($generated@@424 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(let (($generated@@502 ($generated@@402 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@401 $generated@@502 $generated@@501)) (= ($generated@@0 ($generated@@110 ($generated@@435 $generated@@499) $generated@@500)) (exists (($generated@@503 T@U) ) (!  (and (= (type $generated@@503) $generated@@502) (and ($generated@@0 ($generated@@110 ($generated@@399 $generated@@499) $generated@@503)) (= $generated@@500 ($generated@@110 ($generated@@487 $generated@@499) $generated@@503))))
 :pattern ( ($generated@@110 ($generated@@399 $generated@@499) $generated@@503))
 :pattern ( ($generated@@110 ($generated@@487 $generated@@499) $generated@@503))
))))))
 :pattern ( ($generated@@110 ($generated@@435 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) ($generated@@383 $generated@@90 $generated@@90)) (= (type $generated@@508) $generated@@68)) (= (type $generated@@509) $generated@@68)) (= (type $generated@@510) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@381 $generated@@507) $generated@@511))) (and ($generated@@345 ($generated@@110 ($generated@@479 $generated@@507) $generated@@511) $generated@@509 $generated@@510) ($generated@@345 $generated@@511 $generated@@508 $generated@@510)))
 :pattern ( ($generated@@110 ($generated@@479 $generated@@507) $generated@@511))
 :pattern ( ($generated@@110 ($generated@@381 $generated@@507) $generated@@511))
))))
 :pattern ( ($generated@@103 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) ($generated@@401 $generated@@90 $generated@@90)) (= (type $generated@@516) $generated@@68)) (= (type $generated@@517) $generated@@68)) (= (type $generated@@518) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@515 ($generated@@512 $generated@@516 $generated@@517) $generated@@518) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@399 $generated@@515) $generated@@519))) (and ($generated@@345 ($generated@@110 ($generated@@487 $generated@@515) $generated@@519) $generated@@517 $generated@@518) ($generated@@345 $generated@@519 $generated@@516 $generated@@518)))
 :pattern ( ($generated@@110 ($generated@@487 $generated@@515) $generated@@519))
 :pattern ( ($generated@@110 ($generated@@399 $generated@@515) $generated@@519))
))))
 :pattern ( ($generated@@103 $generated@@515 ($generated@@512 $generated@@516 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@82)) ($generated@@84 $generated@@521 ($generated@@85 $generated@@520))) (or ($generated@@86 $generated@@521) ($generated@@309 $generated@@521)))
 :pattern ( ($generated@@309 $generated@@521) ($generated@@84 $generated@@521 ($generated@@85 $generated@@520)))
 :pattern ( ($generated@@86 $generated@@521) ($generated@@84 $generated@@521 ($generated@@85 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@81) (= (type $generated@@523) $generated@@82)) (= ($generated@@169 $generated@@522 $generated@@523) ($generated@@169 $generated@@174 $generated@@523)))
 :pattern ( ($generated@@169 ($generated@@173 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@T) ) (! (= (type ($generated@@524 $generated@@525)) ($generated@@105 $generated@@525 $generated@@4))
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@403 (type $generated@@526))))
(let (($generated@@528 ($generated@@402 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@401 $generated@@528 $generated@@527)) (= (= $generated@@526 ($generated@@400 $generated@@528 $generated@@527)) (= ($generated@@399 $generated@@526) ($generated@@524 $generated@@528))))))
 :pattern ( ($generated@@399 $generated@@526))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@403 (type $generated@@529))))
(let (($generated@@531 ($generated@@402 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@401 $generated@@531 $generated@@530)) (= (= $generated@@529 ($generated@@400 $generated@@531 $generated@@530)) (= ($generated@@435 $generated@@529) ($generated@@524 $generated@@530))))))
 :pattern ( ($generated@@435 $generated@@529))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@403 (type $generated@@532))))
(let (($generated@@534 ($generated@@402 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@401 $generated@@534 $generated@@533)) (= (= $generated@@532 ($generated@@400 $generated@@534 $generated@@533)) (= ($generated@@486 $generated@@532) ($generated@@524 $generated@@90))))))
 :pattern ( ($generated@@486 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@385 (type $generated@@535))))
(let (($generated@@537 ($generated@@384 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@383 $generated@@537 $generated@@536)) (or (= $generated@@535 ($generated@@382 $generated@@537 $generated@@536)) (exists (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (and (and (= (type $generated@@538) $generated@@90) (= (type $generated@@539) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@478 $generated@@535) ($generated@@336 ($generated@@292 $generated@@538 $generated@@539)))))
 :no-pattern (type $generated@@538)
 :no-pattern (type $generated@@539)
 :no-pattern ($generated $generated@@538)
 :no-pattern ($generated@@0 $generated@@538)
 :no-pattern ($generated $generated@@539)
 :no-pattern ($generated@@0 $generated@@539)
))))))
 :pattern ( ($generated@@478 $generated@@535))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@403 (type $generated@@540))))
(let (($generated@@542 ($generated@@402 (type $generated@@540))))
 (=> (= (type $generated@@540) ($generated@@401 $generated@@542 $generated@@541)) (or (= $generated@@540 ($generated@@400 $generated@@542 $generated@@541)) (exists (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (and (and (= (type $generated@@543) $generated@@90) (= (type $generated@@544) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@486 $generated@@540) ($generated@@336 ($generated@@292 $generated@@543 $generated@@544)))))
 :no-pattern (type $generated@@543)
 :no-pattern (type $generated@@544)
 :no-pattern ($generated $generated@@543)
 :no-pattern ($generated@@0 $generated@@543)
 :no-pattern ($generated $generated@@544)
 :no-pattern ($generated@@0 $generated@@544)
))))))
 :pattern ( ($generated@@486 $generated@@540))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@90) ($generated@@293 $generated@@545 $generated@@46)) (and (= ($generated@@336 ($generated@@88 $generated@@2 $generated@@545)) $generated@@545) ($generated@@84 ($generated@@88 $generated@@2 $generated@@545) $generated@@46)))
 :pattern ( ($generated@@293 $generated@@545 $generated@@46))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@90) ($generated@@293 $generated@@546 $generated@@47)) (and (= ($generated@@336 ($generated@@88 $generated@@3 $generated@@546)) $generated@@546) ($generated@@84 ($generated@@88 $generated@@3 $generated@@546) $generated@@47)))
 :pattern ( ($generated@@293 $generated@@546 $generated@@47))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@90) ($generated@@293 $generated@@547 $generated@@44)) (and (= ($generated@@336 ($generated@@88 $generated@@4 $generated@@547)) $generated@@547) ($generated@@84 ($generated@@88 $generated@@4 $generated@@547) $generated@@44)))
 :pattern ( ($generated@@293 $generated@@547 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@548) 21))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@90) ($generated@@293 $generated@@549 $generated@@45)) (and (= ($generated@@336 ($generated@@88 $generated@@548 $generated@@549)) $generated@@549) ($generated@@84 ($generated@@88 $generated@@548 $generated@@549) $generated@@45)))
 :pattern ( ($generated@@293 $generated@@549 $generated@@45))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@81) (= (type $generated@@551) $generated@@82)) (= ($generated@@169 ($generated@@80 $generated@@550) $generated@@551) ($generated@@169 $generated@@550 $generated@@551)))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@293 ($generated@@336 $generated@@552) $generated@@553) ($generated@@84 $generated@@552 $generated@@553)))
 :pattern ( ($generated@@293 ($generated@@336 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@108 (type $generated@@554))))
 (=> (= (type $generated@@554) ($generated@@105 $generated@@555 $generated@@2)) (<= 0 ($generated@@372 $generated@@554))))
 :pattern ( ($generated@@372 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@363 (type $generated@@556))))
 (=> (= (type $generated@@556) ($generated@@362 $generated@@557)) (<= 0 ($generated@@361 $generated@@556))))
 :pattern ( ($generated@@361 $generated@@556))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@68) (= (type $generated@@561) $generated@@68)) (= ($generated@@558 ($generated@@504 $generated@@560 $generated@@561)) $generated@@560))
 :pattern ( ($generated@@504 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@68)) (= ($generated@@562 ($generated@@504 $generated@@564 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@504 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@68) (= (type $generated@@567) $generated@@68)) (= ($generated@@76 ($generated@@504 $generated@@566 $generated@@567)) $generated@@58))
 :pattern ( ($generated@@504 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@68) (= (type $generated@@571) $generated@@68)) (= ($generated@@568 ($generated@@512 $generated@@570 $generated@@571)) $generated@@570))
 :pattern ( ($generated@@512 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (= ($generated@@572 ($generated@@512 $generated@@574 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@512 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@68) (= (type $generated@@577) $generated@@68)) (= ($generated@@76 ($generated@@512 $generated@@576 $generated@@577)) $generated@@59))
 :pattern ( ($generated@@512 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@90) (= (type $generated@@579) $generated@@90)) (= ($generated@@206 ($generated@@292 $generated@@578 $generated@@579)) $generated@@61))
 :pattern ( ($generated@@292 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@68)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@68) (= (type $generated@@583) $generated@@68)) (= ($generated@@580 ($generated@@193 $generated@@582 $generated@@583)) $generated@@582))
 :pattern ( ($generated@@193 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@68)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@68) (= (type $generated@@587) $generated@@68)) (= ($generated@@584 ($generated@@193 $generated@@586 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@193 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@90) (= (type $generated@@589) $generated@@90)) (= ($generated@@200 ($generated@@292 $generated@@588 $generated@@589)) $generated@@588))
 :pattern ( ($generated@@292 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@90) (= (type $generated@@591) $generated@@90)) (= ($generated@@201 ($generated@@292 $generated@@590 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@292 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@90) (= (type $generated@@593) $generated@@82)) (= ($generated@@206 ($generated@@330 $generated@@592 $generated@@593)) $generated@@65))
 :pattern ( ($generated@@330 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@90) (= (type $generated@@595) $generated@@82)) (= ($generated@@89 ($generated@@330 $generated@@594 $generated@@595)) $generated@@594))
 :pattern ( ($generated@@330 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@90) (= (type $generated@@597) $generated@@82)) (= ($generated@@87 ($generated@@330 $generated@@596 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@330 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (! (= (type ($generated@@598 $generated@@599 $generated@@600)) $generated@@82)
 :pattern ( ($generated@@598 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@81) (= (type $generated@@602) $generated@@82)) (= ($generated@@598 $generated@@601 $generated@@602) ($generated@@598 $generated@@174 $generated@@602)))
 :pattern ( ($generated@@598 ($generated@@173 $generated@@601) $generated@@602))
)))
(assert  (and (forall (($generated@@605 T@U) ) (! (= (type ($generated@@603 $generated@@605)) $generated@@68)
 :pattern ( ($generated@@603 $generated@@605))
)) (forall (($generated@@606 T@U) ($generated@@607 Int) ) (! (let (($generated@@608 ($generated@@363 (type $generated@@606))))
(= (type ($generated@@604 $generated@@606 $generated@@607)) $generated@@608))
 :pattern ( ($generated@@604 $generated@@606 $generated@@607))
))))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@362 $generated@@90)) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@609 ($generated@@603 $generated@@610) $generated@@611) (forall (($generated@@612 Int) ) (!  (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@361 $generated@@609))) ($generated@@345 ($generated@@604 $generated@@609 $generated@@612) $generated@@610 $generated@@611))
 :pattern ( ($generated@@604 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@103 $generated@@609 ($generated@@603 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@613 ($generated@@104 $generated@@614)) $generated@@614)
 :pattern ( ($generated@@104 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@68)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@68) (= ($generated@@615 ($generated@@316 $generated@@617)) $generated@@617))
 :pattern ( ($generated@@316 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@68) (= ($generated@@76 ($generated@@316 $generated@@618)) $generated@@54))
 :pattern ( ($generated@@316 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@68)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@68) (= ($generated@@619 ($generated@@321 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@321 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@68) (= ($generated@@76 ($generated@@321 $generated@@622)) $generated@@55))
 :pattern ( ($generated@@321 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@68)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@68) (= ($generated@@623 ($generated@@216 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@216 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@68) (= ($generated@@76 ($generated@@216 $generated@@626)) $generated@@56))
 :pattern ( ($generated@@216 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@68)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@68) (= ($generated@@627 ($generated@@603 $generated@@629)) $generated@@629))
 :pattern ( ($generated@@603 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@68) (= ($generated@@76 ($generated@@603 $generated@@630)) $generated@@57))
 :pattern ( ($generated@@603 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (! (= (type ($generated@@631 $generated@@632)) $generated@@68)
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@68) (= ($generated@@631 ($generated@@85 $generated@@633)) $generated@@633))
 :pattern ( ($generated@@85 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@634)))
(= ($generated@@88 $generated@@635 ($generated@@336 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@336 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@636) ($generated@@383 $generated@@90 $generated@@90)) (= (type $generated@@637) $generated@@68)) (= (type $generated@@638) $generated@@68)) (= ($generated@@84 $generated@@636 ($generated@@504 $generated@@637 $generated@@638)) (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@381 $generated@@636) $generated@@639))) (and ($generated@@293 ($generated@@110 ($generated@@479 $generated@@636) $generated@@639) $generated@@638) ($generated@@293 $generated@@639 $generated@@637)))
 :pattern ( ($generated@@110 ($generated@@479 $generated@@636) $generated@@639))
 :pattern ( ($generated@@110 ($generated@@381 $generated@@636) $generated@@639))
))))
 :pattern ( ($generated@@84 $generated@@636 ($generated@@504 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@401 $generated@@90 $generated@@90)) (= (type $generated@@641) $generated@@68)) (= (type $generated@@642) $generated@@68)) (= ($generated@@84 $generated@@640 ($generated@@512 $generated@@641 $generated@@642)) (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@399 $generated@@640) $generated@@643))) (and ($generated@@293 ($generated@@110 ($generated@@487 $generated@@640) $generated@@643) $generated@@642) ($generated@@293 $generated@@643 $generated@@641)))
 :pattern ( ($generated@@110 ($generated@@487 $generated@@640) $generated@@643))
 :pattern ( ($generated@@110 ($generated@@399 $generated@@640) $generated@@643))
))))
 :pattern ( ($generated@@84 $generated@@640 ($generated@@512 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@90) (= (type $generated@@647) $generated@@90)) (< ($generated@@644 $generated@@646) ($generated@@645 ($generated@@292 $generated@@646 $generated@@647))))
 :pattern ( ($generated@@292 $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@90) (= (type $generated@@649) $generated@@90)) (< ($generated@@644 $generated@@649) ($generated@@645 ($generated@@292 $generated@@648 $generated@@649))))
 :pattern ( ($generated@@292 $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@90) (= (type $generated@@651) $generated@@82)) (< ($generated@@644 $generated@@650) ($generated@@645 ($generated@@330 $generated@@650 $generated@@651))))
 :pattern ( ($generated@@330 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@90) (= (type $generated@@653) $generated@@82)) (< ($generated@@645 $generated@@653) ($generated@@645 ($generated@@330 $generated@@652 $generated@@653))))
 :pattern ( ($generated@@330 $generated@@652 $generated@@653))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@81) (= (type $generated@@655) $generated@@82)) (or ($generated@@170 ($generated@@184 $generated@@655)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@655 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@86 ($generated@@184 $generated@@655)))))) (let (($generated@@656 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@655)))))
(let (($generated@@657 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@655)))))))
 (=> (not ($generated@@86 $generated@@656)) (let (($generated@@658 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@656)))))
 (=> (<= $generated@@657 $generated@@658) ($generated@@170 $generated@@656))))))) (= ($generated@@169 ($generated@@80 $generated@@654) ($generated@@184 $generated@@655)) (ite ($generated@@86 ($generated@@184 $generated@@655)) true (let (($generated@@659 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@655)))))
(let (($generated@@660 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@655)))))))
(ite ($generated@@86 $generated@@659) true (let (($generated@@661 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@659))))))
 (and (<= $generated@@660 $generated@@661) ($generated@@169 ($generated@@80 $generated@@654) $generated@@659))))))))))
 :weight 3
 :pattern ( ($generated@@169 ($generated@@80 $generated@@654) ($generated@@184 $generated@@655)))
))))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@81) (= (type $generated@@663) $generated@@82)) (= ($generated@@598 ($generated@@80 $generated@@662) $generated@@663) ($generated@@598 $generated@@662 $generated@@663)))
 :pattern ( ($generated@@598 ($generated@@80 $generated@@662) $generated@@663))
)))
(assert  (=> (<= 4 $generated@@78) (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@665) $generated@@81) (= (type $generated@@666) $generated@@82)) (or ($generated@@664 $generated@@666) (and (not (= 4 $generated@@78)) ($generated@@84 $generated@@666 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@666)) (let (($generated@@667 ($generated@@87 $generated@@666)))
(let (($generated@@668 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@666)))))
 (and ($generated@@664 $generated@@667) (let (($generated@@669 ($generated@@598 $generated@@665 $generated@@667)))
($generated@@162 $generated@@668 $generated@@669)))))) (= ($generated@@598 ($generated@@80 $generated@@665) $generated@@666) (ite ($generated@@86 $generated@@666) $generated@@666 (let (($generated@@670 ($generated@@87 $generated@@666)))
(let (($generated@@671 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@666)))))
(let (($generated@@672 ($generated@@598 $generated@@665 $generated@@670)))
($generated@@161 ($generated@@80 $generated@@174) $generated@@671 $generated@@672))))))))
 :pattern ( ($generated@@598 ($generated@@80 $generated@@665) $generated@@666))
))))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) $generated@@90) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@293 $generated@@673 ($generated@@504 $generated@@674 $generated@@675))) (and (= ($generated@@336 ($generated@@88 ($generated@@383 $generated@@90 $generated@@90) $generated@@673)) $generated@@673) ($generated@@84 ($generated@@88 ($generated@@383 $generated@@90 $generated@@90) $generated@@673) ($generated@@504 $generated@@674 $generated@@675))))
 :pattern ( ($generated@@293 $generated@@673 ($generated@@504 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) $generated@@90) (= (type $generated@@677) $generated@@68)) (= (type $generated@@678) $generated@@68)) ($generated@@293 $generated@@676 ($generated@@512 $generated@@677 $generated@@678))) (and (= ($generated@@336 ($generated@@88 ($generated@@401 $generated@@90 $generated@@90) $generated@@676)) $generated@@676) ($generated@@84 ($generated@@88 ($generated@@401 $generated@@90 $generated@@90) $generated@@676) ($generated@@512 $generated@@677 $generated@@678))))
 :pattern ( ($generated@@293 $generated@@676 ($generated@@512 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (and (= (type $generated@@679) $generated@@68) (= (type $generated@@680) $generated@@68)) (= (type $generated@@681) $generated@@90)) ($generated@@293 $generated@@681 ($generated@@193 $generated@@679 $generated@@680))) (and (= ($generated@@336 ($generated@@88 $generated@@82 $generated@@681)) $generated@@681) ($generated@@84 ($generated@@88 $generated@@82 $generated@@681) ($generated@@193 $generated@@679 $generated@@680))))
 :pattern ( ($generated@@293 $generated@@681 ($generated@@193 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (= (type $generated@@682) $generated@@82) (= (type $generated@@683) $generated@@68)) (= (type $generated@@684) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@289 $generated@@684) (and ($generated@@309 $generated@@682) ($generated@@103 $generated@@682 ($generated@@85 $generated@@683) $generated@@684)))) ($generated@@345 ($generated@@89 $generated@@682) $generated@@683 $generated@@684))
 :pattern ( ($generated@@345 ($generated@@89 $generated@@682) $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ) (! (let (($generated@@686 (type $generated@@685)))
 (not ($generated@@0 ($generated@@110 ($generated@@524 $generated@@686) $generated@@685))))
 :pattern ( (let (($generated@@686 (type $generated@@685)))
($generated@@110 ($generated@@524 $generated@@686) $generated@@685)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) $generated@@68) (= (type $generated@@688) $generated@@68)) (and (= ($generated@@76 ($generated@@193 $generated@@687 $generated@@688)) $generated@@62) (= ($generated@@378 ($generated@@193 $generated@@687 $generated@@688)) $generated@@66)))
 :pattern ( ($generated@@193 $generated@@687 $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@82) (= ($generated@@644 ($generated@@336 $generated@@689)) ($generated@@645 $generated@@689)))
 :pattern ( ($generated@@644 ($generated@@336 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@90) ($generated@@293 $generated@@690 ($generated@@104 0))) (and (= ($generated@@336 ($generated@@88 $generated@@2 $generated@@690)) $generated@@690) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@690) ($generated@@104 0))))
 :pattern ( ($generated@@293 $generated@@690 ($generated@@104 0)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@90) (= (type $generated@@692) $generated@@68)) ($generated@@293 $generated@@691 ($generated@@316 $generated@@692))) (and (= ($generated@@336 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@691)) $generated@@691) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@691) ($generated@@316 $generated@@692))))
 :pattern ( ($generated@@293 $generated@@691 ($generated@@316 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (= (type $generated@@693) $generated@@90) (= (type $generated@@694) $generated@@68)) ($generated@@293 $generated@@693 ($generated@@321 $generated@@694))) (and (= ($generated@@336 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@693)) $generated@@693) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@693) ($generated@@321 $generated@@694))))
 :pattern ( ($generated@@293 $generated@@693 ($generated@@321 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@695) $generated@@90) (= (type $generated@@696) $generated@@68)) ($generated@@293 $generated@@695 ($generated@@216 $generated@@696))) (and (= ($generated@@336 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@695)) $generated@@695) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@695) ($generated@@216 $generated@@696))))
 :pattern ( ($generated@@293 $generated@@695 ($generated@@216 $generated@@696)))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (= (type $generated@@697) $generated@@90) (= (type $generated@@698) $generated@@68)) ($generated@@293 $generated@@697 ($generated@@603 $generated@@698))) (and (= ($generated@@336 ($generated@@88 ($generated@@362 $generated@@90) $generated@@697)) $generated@@697) ($generated@@84 ($generated@@88 ($generated@@362 $generated@@90) $generated@@697) ($generated@@603 $generated@@698))))
 :pattern ( ($generated@@293 $generated@@697 ($generated@@603 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@699) $generated@@68) (= (type $generated@@700) $generated@@90)) ($generated@@293 $generated@@700 ($generated@@85 $generated@@699))) (and (= ($generated@@336 ($generated@@88 $generated@@82 $generated@@700)) $generated@@700) ($generated@@84 ($generated@@88 $generated@@82 $generated@@700) ($generated@@85 $generated@@699))))
 :pattern ( ($generated@@293 $generated@@700 ($generated@@85 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) $generated@@82) (= (type $generated@@702) $generated@@68)) (= (type $generated@@703) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@289 $generated@@703) (and ($generated@@309 $generated@@701) ($generated@@103 $generated@@701 ($generated@@85 $generated@@702) $generated@@703)))) ($generated@@103 ($generated@@87 $generated@@701) ($generated@@85 $generated@@702) $generated@@703))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@701) ($generated@@85 $generated@@702) $generated@@703))
)))
(assert  (=> (<= 4 $generated@@78) (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (and (= (type $generated@@704) $generated@@81) (= (type $generated@@705) $generated@@82)) (or ($generated@@664 ($generated@@184 $generated@@705)) (and (not (= 4 $generated@@78)) ($generated@@84 $generated@@705 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@184 ($generated@@11 ($generated@@86 ($generated@@184 $generated@@705)))))) (let (($generated@@706 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@705)))))
(let (($generated@@707 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@705)))))))
 (and ($generated@@664 $generated@@706) (let (($generated@@708 ($generated@@598 ($generated@@80 $generated@@704) $generated@@706)))
($generated@@162 $generated@@707 $generated@@708)))))) (= ($generated@@598 ($generated@@80 $generated@@704) ($generated@@184 $generated@@705)) (ite ($generated@@86 ($generated@@184 $generated@@705)) $generated@@705 (let (($generated@@709 ($generated@@184 ($generated@@87 ($generated@@184 $generated@@705)))))
(let (($generated@@710 ($generated@@209 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@184 $generated@@705)))))))
(let (($generated@@711 ($generated@@184 ($generated@@598 ($generated@@80 $generated@@704) $generated@@709))))
($generated@@184 ($generated@@161 ($generated@@80 $generated@@174) $generated@@710 $generated@@711)))))))))
 :weight 3
 :pattern ( ($generated@@598 ($generated@@80 $generated@@704) ($generated@@184 $generated@@705)))
))))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (= (type $generated@@712) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@713) $generated@@68)) (= (type $generated@@714) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@712 ($generated@@216 $generated@@713) $generated@@714) (forall (($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@715) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@712 $generated@@715)))) ($generated@@345 $generated@@715 $generated@@713 $generated@@714))
 :pattern ( ($generated@@110 $generated@@712 $generated@@715))
))))
 :pattern ( ($generated@@103 $generated@@712 ($generated@@216 $generated@@713) $generated@@714))
)))
(assert (= $generated@@207 ($generated@@184 $generated@@207)))
(assert  (=> (<= 4 $generated@@78) (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (= (type $generated@@716) $generated@@81) (= (type $generated@@717) $generated@@82)) (or ($generated@@664 $generated@@717) (and (not (= 4 $generated@@78)) ($generated@@84 $generated@@717 ($generated@@85 $generated@@46))))) (and (and ($generated@@183 $generated@@717 ($generated@@598 $generated@@716 $generated@@717)) ($generated@@169 ($generated@@80 $generated@@174) ($generated@@598 $generated@@716 $generated@@717))) ($generated@@84 ($generated@@598 $generated@@716 $generated@@717) ($generated@@85 $generated@@46))))
 :pattern ( ($generated@@598 $generated@@716 $generated@@717))
))))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (and (= (type $generated@@718) $generated@@82) (= (type $generated@@719) $generated@@68)) (= (type $generated@@720) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@289 $generated@@720) (and ($generated@@192 $generated@@718) (exists (($generated@@721 T@U) ) (!  (and (= (type $generated@@721) $generated@@68) ($generated@@103 $generated@@718 ($generated@@193 $generated@@719 $generated@@721) $generated@@720))
 :pattern ( ($generated@@103 $generated@@718 ($generated@@193 $generated@@719 $generated@@721) $generated@@720))
))))) ($generated@@345 ($generated@@200 $generated@@718) $generated@@719 $generated@@720))
 :pattern ( ($generated@@345 ($generated@@200 $generated@@718) $generated@@719 $generated@@720))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (and (= (type $generated@@722) $generated@@82) (= (type $generated@@723) $generated@@68)) (= (type $generated@@724) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@289 $generated@@724) (and ($generated@@192 $generated@@722) (exists (($generated@@725 T@U) ) (!  (and (= (type $generated@@725) $generated@@68) ($generated@@103 $generated@@722 ($generated@@193 $generated@@725 $generated@@723) $generated@@724))
 :pattern ( ($generated@@103 $generated@@722 ($generated@@193 $generated@@725 $generated@@723) $generated@@724))
))))) ($generated@@345 ($generated@@201 $generated@@722) $generated@@723 $generated@@724))
 :pattern ( ($generated@@345 ($generated@@201 $generated@@722) $generated@@723 $generated@@724))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) $generated@@90) (= (type $generated@@727) $generated@@90)) (= ($generated@@292 ($generated@@184 $generated@@726) ($generated@@184 $generated@@727)) ($generated@@184 ($generated@@292 $generated@@726 $generated@@727))))
 :pattern ( ($generated@@292 ($generated@@184 $generated@@726) ($generated@@184 $generated@@727)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@728) $generated@@90) (= (type $generated@@729) $generated@@82)) (= ($generated@@330 ($generated@@184 $generated@@728) ($generated@@184 $generated@@729)) ($generated@@184 ($generated@@330 $generated@@728 $generated@@729))))
 :pattern ( ($generated@@330 ($generated@@184 $generated@@728) ($generated@@184 $generated@@729)))
)))
(assert (forall (($generated@@730 Int) ) (! (= ($generated@@336 ($generated@@8 ($generated@@209 $generated@@730))) ($generated@@184 ($generated@@336 ($generated@@8 $generated@@730))))
 :pattern ( ($generated@@336 ($generated@@8 ($generated@@209 $generated@@730))))
)))
(assert (forall (($generated@@731 T@U) ) (! (= ($generated@@336 ($generated@@184 $generated@@731)) ($generated@@184 ($generated@@336 $generated@@731)))
 :pattern ( ($generated@@336 ($generated@@184 $generated@@731)))
)))
(assert (forall (($generated@@732 T@U) ) (! (let (($generated@@733 ($generated@@363 (type $generated@@732))))
 (=> (and (= (type $generated@@732) ($generated@@362 $generated@@733)) (= ($generated@@361 $generated@@732) 0)) (= $generated@@732 ($generated@@360 $generated@@733))))
 :pattern ( ($generated@@361 $generated@@732))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ($generated@@736 T@U) ) (! (let (($generated@@737 (type $generated@@735)))
 (=> (and (and (= (type $generated@@734) ($generated@@105 $generated@@737 $generated@@2)) (= (type $generated@@736) $generated@@2)) (<= 0 ($generated $generated@@736))) (= ($generated@@372 ($generated@@111 $generated@@734 $generated@@735 $generated@@736)) (+ (- ($generated@@372 $generated@@734) ($generated ($generated@@110 $generated@@734 $generated@@735))) ($generated $generated@@736)))))
 :pattern ( ($generated@@372 ($generated@@111 $generated@@734 $generated@@735 $generated@@736)))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@738) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@739) $generated@@2)) ($generated@@103 $generated@@739 $generated@@46 $generated@@738))
 :pattern ( ($generated@@103 $generated@@739 $generated@@46 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (= (type $generated@@740) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@741) $generated@@3)) ($generated@@103 $generated@@741 $generated@@47 $generated@@740))
 :pattern ( ($generated@@103 $generated@@741 $generated@@47 $generated@@740))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@742) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@743) $generated@@4)) ($generated@@103 $generated@@743 $generated@@44 $generated@@742))
 :pattern ( ($generated@@103 $generated@@743 $generated@@44 $generated@@742))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@745) $generated@@548)) ($generated@@103 $generated@@745 $generated@@45 $generated@@744))
 :pattern ( ($generated@@103 $generated@@745 $generated@@45 $generated@@744))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (= (type $generated@@746) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@747) $generated@@90)) ($generated@@103 $generated@@747 $generated@@48 $generated@@746))
 :pattern ( ($generated@@103 $generated@@747 $generated@@48 $generated@@746))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@748) $generated@@68) (= (type $generated@@749) $generated@@90)) (= (type $generated@@750) $generated@@82)) (= (type $generated@@751) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@289 $generated@@751)) (= ($generated@@103 ($generated@@330 $generated@@749 $generated@@750) ($generated@@85 $generated@@748) $generated@@751)  (and ($generated@@345 $generated@@749 $generated@@748 $generated@@751) ($generated@@103 $generated@@750 ($generated@@85 $generated@@748) $generated@@751))))
 :pattern ( ($generated@@103 ($generated@@330 $generated@@749 $generated@@750) ($generated@@85 $generated@@748) $generated@@751))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (= (type $generated@@752) ($generated@@362 $generated@@90)) (= (type $generated@@753) $generated@@68)) (= ($generated@@84 $generated@@752 ($generated@@603 $generated@@753)) (forall (($generated@@754 Int) ) (!  (=> (and (<= 0 $generated@@754) (< $generated@@754 ($generated@@361 $generated@@752))) ($generated@@293 ($generated@@604 $generated@@752 $generated@@754) $generated@@753))
 :pattern ( ($generated@@604 $generated@@752 $generated@@754))
))))
 :pattern ( ($generated@@84 $generated@@752 ($generated@@603 $generated@@753)))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 Int) ) (!  (=> (= (type $generated@@756) ($generated@@362 $generated@@90)) (=> (and (<= 0 $generated@@757) (< $generated@@757 ($generated@@361 $generated@@756))) (< ($generated@@645 ($generated@@88 $generated@@82 ($generated@@604 $generated@@756 $generated@@757))) ($generated@@755 $generated@@756))))
 :pattern ( ($generated@@645 ($generated@@88 $generated@@82 ($generated@@604 $generated@@756 $generated@@757))))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (and (and (= (type $generated@@758) ($generated@@383 $generated@@90 $generated@@90)) (= (type $generated@@759) $generated@@68)) (= (type $generated@@760) $generated@@68)) ($generated@@84 $generated@@758 ($generated@@504 $generated@@759 $generated@@760))) (and (and ($generated@@84 ($generated@@381 $generated@@758) ($generated@@316 $generated@@759)) ($generated@@84 ($generated@@424 $generated@@758) ($generated@@316 $generated@@760))) ($generated@@84 ($generated@@478 $generated@@758) ($generated@@316 ($generated@@193 $generated@@759 $generated@@760)))))
 :pattern ( ($generated@@84 $generated@@758 ($generated@@504 $generated@@759 $generated@@760)))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (and (and (= (type $generated@@761) ($generated@@401 $generated@@90 $generated@@90)) (= (type $generated@@762) $generated@@68)) (= (type $generated@@763) $generated@@68)) ($generated@@84 $generated@@761 ($generated@@512 $generated@@762 $generated@@763))) (and (and ($generated@@84 ($generated@@399 $generated@@761) ($generated@@321 $generated@@762)) ($generated@@84 ($generated@@435 $generated@@761) ($generated@@321 $generated@@763))) ($generated@@84 ($generated@@486 $generated@@761) ($generated@@321 ($generated@@193 $generated@@762 $generated@@763)))))
 :pattern ( ($generated@@84 $generated@@761 ($generated@@512 $generated@@762 $generated@@763)))
)))
(assert (forall (($generated@@764 T@U) ) (!  (=> (= (type $generated@@764) $generated@@2) ($generated@@84 $generated@@764 $generated@@46))
 :pattern ( ($generated@@84 $generated@@764 $generated@@46))
)))
(assert (forall (($generated@@765 T@U) ) (!  (=> (= (type $generated@@765) $generated@@3) ($generated@@84 $generated@@765 $generated@@47))
 :pattern ( ($generated@@84 $generated@@765 $generated@@47))
)))
(assert (forall (($generated@@766 T@U) ) (!  (=> (= (type $generated@@766) $generated@@4) ($generated@@84 $generated@@766 $generated@@44))
 :pattern ( ($generated@@84 $generated@@766 $generated@@44))
)))
(assert (forall (($generated@@767 T@U) ) (!  (=> (= (type $generated@@767) $generated@@548) ($generated@@84 $generated@@767 $generated@@45))
 :pattern ( ($generated@@84 $generated@@767 $generated@@45))
)))
(assert (forall (($generated@@768 T@U) ) (!  (=> (= (type $generated@@768) $generated@@90) ($generated@@84 $generated@@768 $generated@@48))
 :pattern ( ($generated@@84 $generated@@768 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@769 () T@U)
(declare-fun $generated@@770 () Int)
(declare-fun $generated@@771 () T@U)
(declare-fun $generated@@772 () T@U)
(declare-fun $generated@@773 () T@U)
(declare-fun $generated@@774 () T@U)
(declare-fun $generated@@775 () Int)
(declare-fun $generated@@776 () Int)
(declare-fun $generated@@777 () T@U)
(declare-fun $generated@@778 () T@U)
(declare-fun $generated@@779 () T@U)
(declare-fun $generated@@780 () T@U)
(declare-fun $generated@@781 (T@U) Bool)
(declare-fun $generated@@782 () T@U)
(declare-fun $generated@@783 () T@U)
(declare-fun $generated@@784 () T@U)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@769) $generated@@82) (= (type $generated@@773) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@785) $generated@@82)) (= (type $generated@@771) $generated@@82)) (= (type $generated@@772) $generated@@82)) (= (type $generated@@774) $generated@@82)) (= (type $generated@@777) $generated@@82)) (= (type $generated@@778) $generated@@82)) (= (type $generated@@779) $generated@@82)) (= (type $generated@@780) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@782) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@783) ($generated@@223 $generated@@106 $generated@@4))) (= (type $generated@@784) $generated@@106)) (= (type $generated@@786) ($generated@@223 $generated@@106 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@787  (and (=> (= (ControlFlow 0 6) (- 0 10)) (=> ($generated@@185 $generated@@769 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (or ($generated@@183 $generated@@769 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (forall (($generated@@788 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@788 $generated@@769) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@788 ($generated@@598 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@769))))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@788 ($generated@@598 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@769)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@788 $generated@@769))
))))) (=> (=> ($generated@@185 $generated@@769 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (or ($generated@@183 $generated@@769 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (forall (($generated@@789 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@789 $generated@@769) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@789 ($generated@@598 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@769))))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@789 ($generated@@598 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@769)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@789 $generated@@769))
)))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (=> ($generated@@170 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (or ($generated@@169 ($generated@@80 $generated@@174) ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (=> ($generated@@86 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) ($generated@@0 ($generated@@184 ($generated@@11 true))))))) (=> (=> ($generated@@170 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (or ($generated@@169 ($generated@@80 $generated@@174) ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (=> ($generated@@86 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) ($generated@@0 ($generated@@184 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> ($generated@@170 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (or ($generated@@169 ($generated@@80 $generated@@174) ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (=> (not ($generated@@86 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769))) (let (($generated@@790 ($generated@@87 ($generated@@598 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@769))))
 (=> ($generated@@86 $generated@@790) ($generated@@0 ($generated@@184 ($generated@@11 true))))))))) (=> (=> ($generated@@170 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (or ($generated@@169 ($generated@@80 $generated@@174) ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (=> (not ($generated@@86 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769))) (let (($generated@@791 ($generated@@87 ($generated@@598 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@769))))
 (=> ($generated@@86 $generated@@791) ($generated@@0 ($generated@@184 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> ($generated@@170 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (or ($generated@@169 ($generated@@80 $generated@@174) ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (=> (not ($generated@@86 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769))) (let (($generated@@792 ($generated@@87 ($generated@@598 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@769))))
(let (($generated@@793 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@598 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@769))))))
 (=> (not ($generated@@86 $generated@@792)) (let (($generated@@794 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@792)))))
(<= $generated@@793 $generated@@794))))))))) (=> (=> ($generated@@170 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (or ($generated@@169 ($generated@@80 $generated@@174) ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (=> (not ($generated@@86 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769))) (let (($generated@@795 ($generated@@87 ($generated@@598 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@769))))
(let (($generated@@796 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@598 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@769))))))
 (=> (not ($generated@@86 $generated@@795)) (let (($generated@@797 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@795)))))
(<= $generated@@796 $generated@@797)))))))) (=> (= (ControlFlow 0 6) (- 0 5)) (=> ($generated@@170 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (or ($generated@@169 ($generated@@80 $generated@@174) ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) (=> (not ($generated@@86 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769))) (let (($generated@@798 ($generated@@87 ($generated@@598 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@769))))
 (=> (not ($generated@@86 $generated@@798)) ($generated@@169 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@798)))))))))))))))))
(let (($generated@@799  (=> (and (= $generated@@769 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@770)) $generated@@771)) ($generated@@84 $generated@@771 ($generated@@85 $generated@@46))) (=> (and (and ($generated@@84 $generated@@772 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@772 ($generated@@85 $generated@@46) $generated@@773)) (and (= $generated@@774 $generated@@771) ($generated@@84 $generated@@774 ($generated@@85 $generated@@46)))) (=> (and (and (and (= $generated@@772 $generated@@774) (= $generated@@775 $generated@@770)) (and ($generated@@84 ($generated@@8 $generated@@775) $generated@@46) (= $generated@@776 $generated@@775))) (and (and ($generated@@84 $generated@@777 ($generated@@85 $generated@@46)) ($generated@@103 $generated@@777 ($generated@@85 $generated@@46) $generated@@773)) ($generated@@103 $generated@@772 ($generated@@85 $generated@@46) $generated@@773))) (and (=> (= (ControlFlow 0 12) (- 0 18)) (< ($generated@@645 $generated@@772) ($generated@@645 $generated@@769))) (=> (< ($generated@@645 $generated@@772) ($generated@@645 $generated@@769)) (=> (and ($generated@@664 $generated@@772) (= $generated@@778 ($generated@@598 ($generated@@80 $generated@@174) $generated@@772))) (=> (and (and (and ($generated@@664 $generated@@772) ($generated@@84 $generated@@778 ($generated@@85 $generated@@46))) (and (= $generated@@777 $generated@@778) ($generated@@103 $generated@@769 ($generated@@85 $generated@@46) $generated@@773))) (and (and (= $generated@@779 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777)) ($generated@@103 $generated@@779 ($generated@@85 $generated@@46) $generated@@773)) (and ($generated@@185 $generated@@769 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777)) ($generated@@185 $generated@@769 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777))))) (and (=> (= (ControlFlow 0 12) (- 0 17)) (=> ($generated@@185 $generated@@769 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777)) (or ($generated@@183 $generated@@769 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777)) (forall (($generated@@800 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@800 $generated@@769) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@800 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777))))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@800 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@800 $generated@@769))
))))) (=> ($generated@@183 $generated@@769 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777)) (=> (and (and (and ($generated@@289 $generated@@780) ($generated@@781 $generated@@780)) (and ($generated@@162 $generated@@776 $generated@@777) ($generated@@185 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777) ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777)))) (and (and ($generated@@185 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777) ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777)) (and ($generated@@183 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777) ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777)) (forall (($generated@@801 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@174) $generated@@801 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777)) ($generated@@79 ($generated@@80 $generated@@174) $generated@@801 ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@801 ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@174) $generated@@801 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@776)) $generated@@777)))
)))) (= $generated@@773 $generated@@780))) (and (=> (= (ControlFlow 0 12) (- 0 16)) (=> ($generated@@170 $generated@@777) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@777) (=> ($generated@@86 $generated@@777) ($generated@@0 ($generated@@184 ($generated@@11 true))))))) (=> (=> ($generated@@170 $generated@@777) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@777) (=> ($generated@@86 $generated@@777) ($generated@@0 ($generated@@184 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 12) (- 0 15)) (=> ($generated@@170 $generated@@777) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@777) (=> (not ($generated@@86 $generated@@777)) (let (($generated@@802 ($generated@@87 $generated@@777)))
 (=> ($generated@@86 $generated@@802) ($generated@@0 ($generated@@184 ($generated@@11 true))))))))) (=> (=> ($generated@@170 $generated@@777) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@777) (=> (not ($generated@@86 $generated@@777)) (let (($generated@@803 ($generated@@87 $generated@@777)))
 (=> ($generated@@86 $generated@@803) ($generated@@0 ($generated@@184 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (=> ($generated@@170 $generated@@777) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@777) (=> (not ($generated@@86 $generated@@777)) (let (($generated@@804 ($generated@@87 $generated@@777)))
(let (($generated@@805 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@777)))))
 (=> (not ($generated@@86 $generated@@804)) (let (($generated@@806 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@804)))))
(<= $generated@@805 $generated@@806))))))))) (=> (=> ($generated@@170 $generated@@777) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@777) (=> (not ($generated@@86 $generated@@777)) (let (($generated@@807 ($generated@@87 $generated@@777)))
(let (($generated@@808 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@777)))))
 (=> (not ($generated@@86 $generated@@807)) (let (($generated@@809 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@807)))))
(<= $generated@@808 $generated@@809)))))))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (=> ($generated@@170 $generated@@777) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@777) (=> (not ($generated@@86 $generated@@777)) (let (($generated@@810 ($generated@@87 $generated@@777)))
 (=> (not ($generated@@86 $generated@@810)) ($generated@@169 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@810))))))) (=> (=> ($generated@@170 $generated@@777) (or ($generated@@169 ($generated@@80 $generated@@174) $generated@@777) (=> (not ($generated@@86 $generated@@777)) (let (($generated@@811 ($generated@@87 $generated@@777)))
 (=> (not ($generated@@86 $generated@@811)) ($generated@@169 ($generated@@80 ($generated@@80 $generated@@174)) $generated@@811)))))) (=> (and ($generated@@289 $generated@@782) ($generated@@781 $generated@@782)) (=> (and (and ($generated@@162 $generated@@776 $generated@@777) ($generated@@170 ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777))) (and ($generated@@170 ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777)) (and ($generated@@169 ($generated@@80 $generated@@174) ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777)) (ite ($generated@@86 ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777)) true (let (($generated@@812 ($generated@@87 ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777))))
(let (($generated@@813 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777))))))
(ite ($generated@@86 $generated@@812) true (let (($generated@@814 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@812)))))
 (and (<= $generated@@813 $generated@@814) ($generated@@169 ($generated@@80 $generated@@174) $generated@@812)))))))))) (=> (and (and (and (= $generated@@780 $generated@@782) ($generated@@103 ($generated@@8 $generated@@776) $generated@@46 $generated@@782)) (and ($generated@@103 $generated@@777 ($generated@@85 $generated@@46) $generated@@782) ($generated@@162 $generated@@776 $generated@@777))) (and (and (= ($generated@@598 ($generated@@80 $generated@@174) $generated@@769) ($generated@@161 ($generated@@80 $generated@@174) $generated@@776 $generated@@777)) ($generated@@162 $generated@@776 $generated@@777)) (and ($generated@@84 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769) ($generated@@85 $generated@@46)) (= (ControlFlow 0 12) 6)))) $generated@@787)))))))))))))))))))))))
(let (($generated@@815  (=> (and (and (= $generated@@769 $generated@@207) (= ($generated@@598 ($generated@@80 $generated@@174) $generated@@769) $generated@@769)) (and ($generated@@84 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769) ($generated@@85 $generated@@46)) (= (ControlFlow 0 11) 6))) $generated@@787)))
(let (($generated@@816 true))
(let (($generated@@817  (=> (not (= $generated@@769 $generated@@207)) (and (=> (= (ControlFlow 0 19) 12) $generated@@799) (=> (= (ControlFlow 0 19) 4) $generated@@816)))))
(let (($generated@@818  (=> (= $generated@@783 ($generated@@277 $generated@@784 $generated@@773 $generated@@60 false)) (and (=> (= (ControlFlow 0 20) 11) $generated@@815) (=> (= (ControlFlow 0 20) 19) $generated@@817)))))
(let (($generated@@819  (=> (and ($generated@@84 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769) ($generated@@85 $generated@@46)) ($generated@@103 $generated@@769 ($generated@@85 $generated@@46) $generated@@773)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@769 $generated@@769) (< ($generated@@645 $generated@@769) ($generated@@645 $generated@@769)))) (=> (or (= $generated@@769 $generated@@769) (< ($generated@@645 $generated@@769) ($generated@@645 $generated@@769))) (=> (and (and (and (or (= $generated@@769 $generated@@769) ($generated@@664 $generated@@769)) ($generated@@103 $generated@@769 ($generated@@85 $generated@@46) $generated@@773)) (and (= $generated@@785 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) ($generated@@103 $generated@@785 ($generated@@85 $generated@@46) $generated@@773))) (and (and ($generated@@185 $generated@@769 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769)) ($generated@@183 $generated@@769 ($generated@@598 ($generated@@80 $generated@@174) $generated@@769))) (and ($generated@@103 $generated@@769 ($generated@@85 $generated@@46) $generated@@773) (= (ControlFlow 0 2) (- 0 1))))) (or (= $generated@@769 $generated@@769) (< ($generated@@645 $generated@@769) ($generated@@645 $generated@@769)))))))))
(let (($generated@@820  (=> (= $generated@@786 ($generated@@222 $generated@@784 $generated@@773 $generated@@60 false)) (and (=> (= (ControlFlow 0 21) 2) $generated@@819) (=> (= (ControlFlow 0 21) 20) $generated@@818)))))
(let (($generated@@821  (=> (and (and (and ($generated@@289 $generated@@773) ($generated@@781 $generated@@773)) ($generated@@84 $generated@@769 ($generated@@85 $generated@@46))) (and (= 4 $generated@@78) (= (ControlFlow 0 22) 21))) $generated@@820)))
$generated@@821))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U Int T@U) T@U)
(declare-fun $generated@@162 (Int T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@205 (Int) Int)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@217 (T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@219 (T@T T@T) T@T)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@273 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@285 (T@U) Bool)
(declare-fun $generated@@288 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@296 (T@U Int) Bool)
(declare-fun $generated@@297 (T@U Int) Bool)
(declare-fun $generated@@303 (T@U T@U) Bool)
(declare-fun $generated@@309 (T@U) Bool)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@330 (T@U T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@345 (T@U T@U T@U) Bool)
(declare-fun $generated@@360 (T@T) T@U)
(declare-fun $generated@@361 (T@U) Int)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@372 (T@U) Int)
(declare-fun $generated@@373 (T@T) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@T T@T) T@U)
(declare-fun $generated@@383 (T@T T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@385 (T@T) T@T)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@T T@T) T@U)
(declare-fun $generated@@401 (T@T T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@403 (T@T) T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@496 (T@U T@U) T@U)
(declare-fun $generated@@504 (T@U T@U) T@U)
(declare-fun $generated@@514 (T@T) T@U)
(declare-fun $generated@@538 () T@T)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@589 (T@U Int) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@608 (T@U) T@U)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@629 (T@U) Int)
(declare-fun $generated@@630 (T@U) Int)
(declare-fun $generated@@713 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@80 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@87 $generated@@93)) $generated@@82)
 :pattern ( ($generated@@87 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@U) ) (! (= (type ($generated@@88 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@88 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@96 T@U) ) (! (= (type ($generated@@89 $generated@@96)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (=> (and (and (= (type $generated@@97) $generated@@81) (= (type $generated@@99) $generated@@82)) (or ($generated@@83 $generated@@98 $generated@@99) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@99 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@99)) (let (($generated@@100 ($generated@@87 $generated@@99)))
($generated@@83 $generated@@98 $generated@@100))) (= ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@86 $generated@@99) 0 (let (($generated@@101 ($generated@@87 $generated@@99)))
(let (($generated@@102 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@99)))))
(+ (ite (= $generated@@98 $generated@@102) 1 0) ($generated@@79 $generated@@97 $generated@@98 $generated@@101))))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@97) $generated@@98 $generated@@99))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 14)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@71 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@71 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ($generated@@165 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164 $generated@@165)) $generated@@82)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164 $generated@@165))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@166 T@U) ($generated@@167 Int) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@81) (= (type $generated@@168) $generated@@82)) (or ($generated@@162 $generated@@167 $generated@@168) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@168 ($generated@@85 $generated@@46))))) ($generated@@84 ($generated@@161 $generated@@166 $generated@@167 $generated@@168) ($generated@@85 $generated@@46)))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167 $generated@@168))
))))
(assert  (and (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@81)
 :pattern ( ($generated@@169 $generated@@171))
)) (= (type $generated@@170) $generated@@81)))
(assert (forall (($generated@@172 T@U) ($generated@@173 Int) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@81) (= (type $generated@@174) $generated@@82)) (= ($generated@@79 $generated@@172 $generated@@173 $generated@@174) ($generated@@79 $generated@@170 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@79 ($generated@@169 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 T@U) ) (!  (=> (and (= (type $generated@@175) $generated@@81) (= (type $generated@@177) $generated@@82)) (= ($generated@@161 $generated@@175 $generated@@176 $generated@@177) ($generated@@161 $generated@@170 $generated@@176 $generated@@177)))
 :pattern ( ($generated@@161 ($generated@@169 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@2) ($generated@@84 $generated@@178 ($generated@@104 0)))
 :pattern ( ($generated@@84 $generated@@178 ($generated@@104 0)))
)))
(assert (forall (($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(= (type ($generated@@180 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@82) (= (type $generated@@185) $generated@@82)) (or ($generated@@181 ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@184 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@185 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@186 Int) ) (!  (and ($generated@@83 $generated@@186 ($generated@@180 $generated@@184)) ($generated@@83 $generated@@186 ($generated@@180 $generated@@185)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@186 $generated@@185))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@186 $generated@@184))
)) (= ($generated@@179 ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (forall (($generated@@187 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@170) $generated@@187 ($generated@@180 $generated@@184)) ($generated@@79 ($generated@@80 $generated@@170) $generated@@187 ($generated@@180 $generated@@185))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@187 $generated@@185))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@187 $generated@@184))
)))))
 :weight 3
 :pattern ( ($generated@@179 ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@190 $generated@@191)) $generated@@68)
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@68) (= (type $generated@@193) $generated@@68)) (= (type $generated@@194) $generated@@82)) ($generated@@84 $generated@@194 ($generated@@189 $generated@@192 $generated@@193))) ($generated@@188 $generated@@194))
 :pattern ( ($generated@@188 $generated@@194) ($generated@@84 $generated@@194 ($generated@@189 $generated@@192 $generated@@193)))
)))
(assert  (and (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@90)
 :pattern ( ($generated@@196 $generated@@198))
)) (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@90)
 :pattern ( ($generated@@197 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) $generated@@82) (= (type $generated@@201) $generated@@82)) true) (= ($generated@@195 $generated@@200 $generated@@201)  (and (= ($generated@@196 $generated@@200) ($generated@@196 $generated@@201)) (= ($generated@@197 $generated@@200) ($generated@@197 $generated@@201)))))
 :pattern ( ($generated@@195 $generated@@200 $generated@@201))
)))
(assert  (and (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@204))
)) (= (type $generated@@203) $generated@@82)))
(assert (= ($generated@@202 $generated@@203) $generated@@63))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@206 T@U) ($generated@@207 Int) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@206) $generated@@81) (= (type $generated@@208) $generated@@82)) (or ($generated@@83 ($generated@@205 $generated@@207) ($generated@@180 $generated@@208)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@208 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@180 ($generated@@11 ($generated@@86 ($generated@@180 $generated@@208)))))) (let (($generated@@209 ($generated@@180 ($generated@@87 ($generated@@180 $generated@@208)))))
($generated@@83 ($generated@@205 $generated@@207) $generated@@209))) (= ($generated@@79 ($generated@@80 $generated@@206) ($generated@@205 $generated@@207) ($generated@@180 $generated@@208)) (ite ($generated@@86 ($generated@@180 $generated@@208)) 0 (let (($generated@@210 ($generated@@180 ($generated@@87 ($generated@@180 $generated@@208)))))
(let (($generated@@211 ($generated@@205 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@180 $generated@@208)))))))
(+ (ite (= ($generated@@205 $generated@@207) $generated@@211) 1 0) ($generated@@79 ($generated@@80 $generated@@206) ($generated@@205 $generated@@207) $generated@@210))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@206) ($generated@@205 $generated@@207) ($generated@@180 $generated@@208)))
))))
(assert (forall (($generated@@214 T@U) ) (! (= (type ($generated@@212 $generated@@214)) $generated@@68)
 :pattern ( ($generated@@212 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (and (= (type $generated@@215) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@216) $generated@@68)) ($generated@@84 $generated@@215 ($generated@@212 $generated@@216))) ($generated@@213 $generated@@215))
 :pattern ( ($generated@@84 $generated@@215 ($generated@@212 $generated@@216)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (= ($generated@@1 ($generated@@219 $generated@@223 $generated@@224)) 17)) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@220 ($generated@@219 $generated@@225 $generated@@226)) $generated@@225)
 :pattern ( ($generated@@219 $generated@@225 $generated@@226))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@221 ($generated@@219 $generated@@227 $generated@@228)) $generated@@228)
 :pattern ( ($generated@@219 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@221 (type $generated@@229))))
(= (type ($generated@@217 $generated@@229 $generated@@230 $generated@@231)) $generated@@232))
 :pattern ( ($generated@@217 $generated@@229 $generated@@230 $generated@@231))
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(let (($generated@@238 (type $generated@@234)))
(= (type ($generated@@222 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@219 $generated@@238 $generated@@237))))
 :pattern ( ($generated@@222 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@221 (type $generated@@239))))
 (=> (= (type $generated@@242) $generated@@243) (= ($generated@@217 ($generated@@222 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@240 $generated@@241) $generated@@242)))
 :weight 0
))) (and (and (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or (= $generated@@246 $generated@@248) (= ($generated@@217 ($generated@@222 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@217 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (or (= $generated@@253 $generated@@255) (= ($generated@@217 ($generated@@222 $generated@@251 $generated@@252 $generated@@253 $generated@@250) $generated@@254 $generated@@255) ($generated@@217 $generated@@251 $generated@@254 $generated@@255)))
 :weight 0
))) (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (or true (= ($generated@@217 ($generated@@222 $generated@@257 $generated@@258 $generated@@259 $generated@@256) $generated@@260 $generated@@261) ($generated@@217 $generated@@257 $generated@@260 $generated@@261)))
 :weight 0
)))) (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ) (! (= (type ($generated@@218 $generated@@262 $generated@@263 $generated@@264 $generated@@265)) ($generated@@219 $generated@@106 $generated@@4))
 :pattern ( ($generated@@218 $generated@@262 $generated@@263 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@71 (type $generated@@271))))
 (=> (and (and (and (and (= (type $generated@@266) $generated@@106) (= (type $generated@@267) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@268) ($generated@@70 $generated@@4))) (= (type $generated@@270) $generated@@106)) (= (type $generated@@271) ($generated@@70 $generated@@272))) (= ($generated@@0 ($generated@@217 ($generated@@218 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))  (=> (and (not (= $generated@@270 $generated@@266)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@267 $generated@@270) $generated@@268))) $generated@@269))))
 :pattern ( ($generated@@217 ($generated@@218 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 Bool) ) (! (= (type ($generated@@273 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@219 $generated@@106 $generated@@4))
 :pattern ( ($generated@@273 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 Bool) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@71 (type $generated@@283))))
 (=> (and (and (and (and (= (type $generated@@278) $generated@@106) (= (type $generated@@279) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@280) ($generated@@70 $generated@@4))) (= (type $generated@@282) $generated@@106)) (= (type $generated@@283) ($generated@@70 $generated@@284))) (= ($generated@@0 ($generated@@217 ($generated@@273 $generated@@278 $generated@@279 $generated@@280 $generated@@281) $generated@@282 $generated@@283))  (=> (and (not (= $generated@@282 $generated@@278)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@279 $generated@@282) $generated@@280))) $generated@@281))))
 :pattern ( ($generated@@217 ($generated@@273 $generated@@278 $generated@@279 $generated@@280 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (= (type $generated@@286) $generated@@68) (= (type $generated@@287) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@285 $generated@@287)) ($generated@@103 $generated@@203 ($generated@@85 $generated@@286) $generated@@287))
 :pattern ( ($generated@@103 $generated@@203 ($generated@@85 $generated@@286) $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (= (type ($generated@@288 $generated@@290 $generated@@291)) $generated@@82)
 :pattern ( ($generated@@288 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (= (type $generated@@292) $generated@@68) (= (type $generated@@293) $generated@@68)) (= (type $generated@@294) $generated@@90)) (= (type $generated@@295) $generated@@90)) (= ($generated@@84 ($generated@@288 $generated@@294 $generated@@295) ($generated@@189 $generated@@292 $generated@@293))  (and ($generated@@289 $generated@@294 $generated@@292) ($generated@@289 $generated@@295 $generated@@293))))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@294 $generated@@295) ($generated@@189 $generated@@292 $generated@@293)))
)))
(assert  (=> (<= 4 $generated@@78) (forall (($generated@@298 T@U) ($generated@@299 Int) ) (!  (=> (and (= (type $generated@@298) $generated@@82) (or ($generated@@297 $generated@@298 $generated@@299) (and (not (= 4 $generated@@78)) ($generated@@84 $generated@@298 ($generated@@85 $generated@@46))))) (= ($generated@@296 $generated@@298 $generated@@299) ($generated@@0 ($generated@@180 ($generated@@11 true)))))
 :pattern ( ($generated@@296 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@68) ($generated@@84 $generated@@203 ($generated@@85 $generated@@300)))
 :pattern ( ($generated@@84 $generated@@203 ($generated@@85 $generated@@300)))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@82) (= (type $generated@@302) $generated@@82)) (= ($generated@@195 $generated@@301 $generated@@302) (= $generated@@301 $generated@@302)))
 :pattern ( ($generated@@195 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@82) (= (type $generated@@305) $generated@@82)) (= ($generated@@303 $generated@@304 $generated@@305) (= $generated@@304 $generated@@305)))
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@306 T@U) ($generated@@307 Int) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@81) (= (type $generated@@308) $generated@@82)) (or ($generated@@83 $generated@@307 $generated@@308) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@308 ($generated@@85 $generated@@46))))) (<= ($generated@@205 0) ($generated@@79 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@79 $generated@@306 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (= (type $generated@@310) $generated@@82) (= (type $generated@@311) $generated@@82)) (and ($generated@@309 $generated@@310) ($generated@@309 $generated@@311))) (= ($generated@@303 $generated@@310 $generated@@311)  (and (= ($generated@@89 $generated@@310) ($generated@@89 $generated@@311)) ($generated@@303 ($generated@@87 $generated@@310) ($generated@@87 $generated@@311)))))
 :pattern ( ($generated@@303 $generated@@310 $generated@@311) ($generated@@309 $generated@@310))
 :pattern ( ($generated@@303 $generated@@310 $generated@@311) ($generated@@309 $generated@@311))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@312) $generated@@82) (= (type $generated@@313) $generated@@82)) (or ($generated@@181 $generated@@312 $generated@@313) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@312 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@313 ($generated@@85 $generated@@46)))))) (and (forall (($generated@@314 Int) ) (!  (and ($generated@@83 $generated@@314 $generated@@312) ($generated@@83 $generated@@314 $generated@@313))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@314 $generated@@313))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@314 $generated@@312))
)) (= ($generated@@179 $generated@@312 $generated@@313) (forall (($generated@@315 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@170) $generated@@315 $generated@@312) ($generated@@79 ($generated@@80 $generated@@170) $generated@@315 $generated@@313)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@315 $generated@@313))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@315 $generated@@312))
)))))
 :pattern ( ($generated@@179 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@68)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@319) $generated@@68)) (= ($generated@@84 $generated@@318 ($generated@@316 $generated@@319)) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@90) ($generated@@0 ($generated@@110 $generated@@318 $generated@@320))) ($generated@@289 $generated@@320 $generated@@319))
 :pattern ( ($generated@@110 $generated@@318 $generated@@320))
))))
 :pattern ( ($generated@@84 $generated@@318 ($generated@@316 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@68)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@324) $generated@@68)) (= ($generated@@84 $generated@@323 ($generated@@321 $generated@@324)) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@90) ($generated@@0 ($generated@@110 $generated@@323 $generated@@325))) ($generated@@289 $generated@@325 $generated@@324))
 :pattern ( ($generated@@110 $generated@@323 $generated@@325))
))))
 :pattern ( ($generated@@84 $generated@@323 ($generated@@321 $generated@@324)))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@205 $generated@@326) $generated@@326)
 :pattern ( ($generated@@205 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (! (= ($generated@@180 $generated@@327) $generated@@327)
 :pattern ( ($generated@@180 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@328) $generated@@82) (= (type $generated@@329) $generated@@82)) (and ($generated@@86 $generated@@328) ($generated@@86 $generated@@329))) (= ($generated@@303 $generated@@328 $generated@@329) true))
 :pattern ( ($generated@@303 $generated@@328 $generated@@329) ($generated@@86 $generated@@328))
 :pattern ( ($generated@@303 $generated@@328 $generated@@329) ($generated@@86 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@82)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) $generated@@68) (= (type $generated@@334) $generated@@90)) (= (type $generated@@335) $generated@@82)) (= ($generated@@84 ($generated@@330 $generated@@334 $generated@@335) ($generated@@85 $generated@@333))  (and ($generated@@289 $generated@@334 $generated@@333) ($generated@@84 $generated@@335 ($generated@@85 $generated@@333)))))
 :pattern ( ($generated@@84 ($generated@@330 $generated@@334 $generated@@335) ($generated@@85 $generated@@333)))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@90)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@338 T@U) ($generated@@339 Int) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) $generated@@81) (= (type $generated@@340) $generated@@82)) (or ($generated@@162 $generated@@339 $generated@@340) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@340 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@86 $generated@@340)) (let (($generated@@341 ($generated@@87 $generated@@340)))
(let (($generated@@342 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@340)))))
 (=> (< $generated@@342 $generated@@339) ($generated@@162 $generated@@339 $generated@@341))))) (= ($generated@@161 ($generated@@80 $generated@@338) $generated@@339 $generated@@340) (ite ($generated@@86 $generated@@340) ($generated@@330 ($generated@@336 ($generated@@8 $generated@@339)) ($generated@@180 $generated@@203)) (let (($generated@@343 ($generated@@87 $generated@@340)))
(let (($generated@@344 ($generated ($generated@@88 $generated@@2 ($generated@@89 $generated@@340)))))
(ite (<= $generated@@339 $generated@@344) ($generated@@330 ($generated@@336 ($generated@@8 $generated@@339)) $generated@@340) ($generated@@330 ($generated@@336 ($generated@@8 $generated@@344)) ($generated@@161 $generated@@338 $generated@@339 $generated@@343)))))))))
 :pattern ( ($generated@@161 ($generated@@80 $generated@@338) $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@346) $generated@@68) (= (type $generated@@347) $generated@@68)) (= (type $generated@@348) $generated@@90)) (= (type $generated@@349) $generated@@90)) (= (type $generated@@350) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@285 $generated@@350)) (= ($generated@@103 ($generated@@288 $generated@@348 $generated@@349) ($generated@@189 $generated@@346 $generated@@347) $generated@@350)  (and ($generated@@345 $generated@@348 $generated@@346 $generated@@350) ($generated@@345 $generated@@349 $generated@@347 $generated@@350))))
 :pattern ( ($generated@@103 ($generated@@288 $generated@@348 $generated@@349) ($generated@@189 $generated@@346 $generated@@347) $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@82) (= ($generated@@188 $generated@@351) (= ($generated@@202 $generated@@351) $generated@@61)))
 :pattern ( ($generated@@188 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@82) (= ($generated@@86 $generated@@352) (= ($generated@@202 $generated@@352) $generated@@63)))
 :pattern ( ($generated@@86 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@82) (= ($generated@@309 $generated@@353) (= ($generated@@202 $generated@@353) $generated@@65)))
 :pattern ( ($generated@@309 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@82) ($generated@@188 $generated@@354)) (exists (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (and (and (= (type $generated@@355) $generated@@90) (= (type $generated@@356) $generated@@90)) (= $generated@@354 ($generated@@288 $generated@@355 $generated@@356)))
 :no-pattern (type $generated@@355)
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
)))
 :pattern ( ($generated@@188 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@82) ($generated@@309 $generated@@357)) (exists (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (and (and (= (type $generated@@358) $generated@@90) (= (type $generated@@359) $generated@@82)) (= $generated@@357 ($generated@@330 $generated@@358 $generated@@359)))
 :no-pattern (type $generated@@358)
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
)))
 :pattern ( ($generated@@309 $generated@@357))
)))
(assert  (and (and (forall (($generated@@364 T@T) ) (= ($generated@@1 ($generated@@362 $generated@@364)) 18)) (forall (($generated@@365 T@T) ) (! (= ($generated@@363 ($generated@@362 $generated@@365)) $generated@@365)
 :pattern ( ($generated@@362 $generated@@365))
))) (forall (($generated@@366 T@T) ) (! (= (type ($generated@@360 $generated@@366)) ($generated@@362 $generated@@366))
 :pattern ( ($generated@@360 $generated@@366))
))))
(assert (forall (($generated@@367 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@367)) 0)
 :pattern ( ($generated@@360 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@82) ($generated@@86 $generated@@368)) (= $generated@@368 $generated@@203))
 :pattern ( ($generated@@86 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@68) (= (type $generated@@371) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@345 ($generated@@336 $generated@@369) $generated@@370 $generated@@371) ($generated@@103 $generated@@369 $generated@@370 $generated@@371)))
 :pattern ( ($generated@@345 ($generated@@336 $generated@@369) $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@374 T@T) ) (! (= (type ($generated@@373 $generated@@374)) ($generated@@105 $generated@@374 $generated@@2))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@108 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@105 $generated@@376 $generated@@2)) (and (= (= ($generated@@372 $generated@@375) 0) (= $generated@@375 ($generated@@373 $generated@@376))) (=> (not (= ($generated@@372 $generated@@375) 0)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (< 0 ($generated ($generated@@110 $generated@@375 $generated@@377))))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (= (type ($generated@@378 $generated@@379)) $generated@@73)
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@68) (and (= ($generated@@76 ($generated@@85 $generated@@380)) $generated@@64) (= ($generated@@378 ($generated@@85 $generated@@380)) $generated@@67)))
 :pattern ( ($generated@@85 $generated@@380))
)))
(assert  (and (and (and (and (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (= ($generated@@1 ($generated@@383 $generated@@386 $generated@@387)) 19)) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= ($generated@@384 ($generated@@383 $generated@@388 $generated@@389)) $generated@@388)
 :pattern ( ($generated@@383 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (! (= ($generated@@385 ($generated@@383 $generated@@390 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@383 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@384 (type $generated@@392))))
(= (type ($generated@@381 $generated@@392)) ($generated@@105 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@392))
))) (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (! (= (type ($generated@@382 $generated@@394 $generated@@395)) ($generated@@383 $generated@@394 $generated@@395))
 :pattern ( ($generated@@382 $generated@@394 $generated@@395))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@T) ) (! (let (($generated@@398 (type $generated@@396)))
 (not ($generated@@0 ($generated@@110 ($generated@@381 ($generated@@382 $generated@@398 $generated@@397)) $generated@@396))))
 :pattern ( (let (($generated@@398 (type $generated@@396)))
($generated@@110 ($generated@@381 ($generated@@382 $generated@@398 $generated@@397)) $generated@@396)))
)))
(assert  (and (and (and (and (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (= ($generated@@1 ($generated@@401 $generated@@404 $generated@@405)) 20)) (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (! (= ($generated@@402 ($generated@@401 $generated@@406 $generated@@407)) $generated@@406)
 :pattern ( ($generated@@401 $generated@@406 $generated@@407))
))) (forall (($generated@@408 T@T) ($generated@@409 T@T) ) (! (= ($generated@@403 ($generated@@401 $generated@@408 $generated@@409)) $generated@@409)
 :pattern ( ($generated@@401 $generated@@408 $generated@@409))
))) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@402 (type $generated@@410))))
(= (type ($generated@@399 $generated@@410)) ($generated@@105 $generated@@411 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@410))
))) (forall (($generated@@412 T@T) ($generated@@413 T@T) ) (! (= (type ($generated@@400 $generated@@412 $generated@@413)) ($generated@@401 $generated@@412 $generated@@413))
 :pattern ( ($generated@@400 $generated@@412 $generated@@413))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@T) ) (! (let (($generated@@416 (type $generated@@414)))
 (not ($generated@@0 ($generated@@110 ($generated@@399 ($generated@@400 $generated@@416 $generated@@415)) $generated@@414))))
 :pattern ( (let (($generated@@416 (type $generated@@414)))
($generated@@110 ($generated@@399 ($generated@@400 $generated@@416 $generated@@415)) $generated@@414)))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@108 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@105 $generated@@418 $generated@@2)) (= ($generated@@213 $generated@@417) (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@418) (and (<= 0 ($generated ($generated@@110 $generated@@417 $generated@@419))) (<= ($generated ($generated@@110 $generated@@417 $generated@@419)) ($generated@@372 $generated@@417))))
 :pattern ( ($generated@@110 $generated@@417 $generated@@419))
)))))
 :pattern ( ($generated@@213 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@385 (type $generated@@420))))
(let (($generated@@422 ($generated@@384 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@383 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@382 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) ($generated@@0 ($generated@@110 ($generated@@381 $generated@@420) $generated@@423)))
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@381 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@385 (type $generated@@425))))
(= (type ($generated@@424 $generated@@425)) ($generated@@105 $generated@@426 $generated@@4)))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@385 (type $generated@@427))))
(let (($generated@@429 ($generated@@384 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@383 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@382 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@428) ($generated@@0 ($generated@@110 ($generated@@424 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@424 $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@403 (type $generated@@431))))
(let (($generated@@433 ($generated@@402 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@401 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@400 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) ($generated@@0 ($generated@@110 ($generated@@399 $generated@@431) $generated@@434)))
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@399 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@403 (type $generated@@436))))
(= (type ($generated@@435 $generated@@436)) ($generated@@105 $generated@@437 $generated@@4)))
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@403 (type $generated@@438))))
(let (($generated@@440 ($generated@@402 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@401 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@400 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@439) ($generated@@0 ($generated@@110 ($generated@@435 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@435 $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 Int) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@81) (= (type $generated@@444) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@442) $generated@@443 $generated@@444) ($generated@@79 $generated@@442 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@442) $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 Int) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@81) (= (type $generated@@447) $generated@@82)) (= ($generated@@161 ($generated@@80 $generated@@445) $generated@@446 $generated@@447) ($generated@@161 $generated@@445 $generated@@446 $generated@@447)))
 :pattern ( ($generated@@161 ($generated@@80 $generated@@445) $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@449) $generated@@68)) (= ($generated@@84 $generated@@448 ($generated@@212 $generated@@449)) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@448 $generated@@450)))) ($generated@@289 $generated@@450 $generated@@449))
 :pattern ( ($generated@@110 $generated@@448 $generated@@450))
))))
 :pattern ( ($generated@@84 $generated@@448 ($generated@@212 $generated@@449)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (= (type $generated@@451) $generated@@82) (= (type $generated@@452) $generated@@82)) (or ($generated@@181 $generated@@451 $generated@@452) (and (not (= 2 $generated@@78)) (and ($generated@@84 $generated@@451 ($generated@@85 $generated@@46)) ($generated@@84 $generated@@452 ($generated@@85 $generated@@46)))))) true)
 :pattern ( ($generated@@179 $generated@@451 $generated@@452))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@453) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@454) $generated@@68)) (= (type $generated@@455) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@453 ($generated@@316 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@90) ($generated@@0 ($generated@@110 $generated@@453 $generated@@456))) ($generated@@345 $generated@@456 $generated@@454 $generated@@455))
 :pattern ( ($generated@@110 $generated@@453 $generated@@456))
))))
 :pattern ( ($generated@@103 $generated@@453 ($generated@@316 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@105 $generated@@90 $generated@@4)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@457 ($generated@@321 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@90) ($generated@@0 ($generated@@110 $generated@@457 $generated@@460))) ($generated@@345 $generated@@460 $generated@@458 $generated@@459))
 :pattern ( ($generated@@110 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@103 $generated@@457 ($generated@@321 $generated@@458) $generated@@459))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@461 T@U) ($generated@@462 Int) ($generated@@463 T@U) ) (!  (=> (and (and (= (type $generated@@461) $generated@@81) (= (type $generated@@463) $generated@@82)) (or ($generated@@162 ($generated@@205 $generated@@462) ($generated@@180 $generated@@463)) (and (not (= 1 $generated@@78)) ($generated@@84 $generated@@463 ($generated@@85 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@180 ($generated@@11 ($generated@@86 ($generated@@180 $generated@@463)))))) (let (($generated@@464 ($generated@@180 ($generated@@87 ($generated@@180 $generated@@463)))))
(let (($generated@@465 ($generated@@205 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@180 $generated@@463)))))))
 (=> (< $generated@@465 ($generated@@205 $generated@@462)) ($generated@@162 ($generated@@205 $generated@@462) $generated@@464))))) (= ($generated@@161 ($generated@@80 $generated@@461) ($generated@@205 $generated@@462) ($generated@@180 $generated@@463)) (ite ($generated@@86 ($generated@@180 $generated@@463)) ($generated@@330 ($generated@@336 ($generated@@8 ($generated@@205 $generated@@462))) ($generated@@180 $generated@@203)) (let (($generated@@466 ($generated@@180 ($generated@@87 ($generated@@180 $generated@@463)))))
(let (($generated@@467 ($generated@@205 ($generated ($generated@@88 $generated@@2 ($generated@@89 ($generated@@180 $generated@@463)))))))
(ite (<= ($generated@@205 $generated@@462) $generated@@467) ($generated@@330 ($generated@@336 ($generated@@8 ($generated@@205 $generated@@462))) ($generated@@180 $generated@@463)) ($generated@@330 ($generated@@336 ($generated@@8 $generated@@467)) ($generated@@180 ($generated@@161 ($generated@@80 $generated@@461) ($generated@@205 $generated@@462) $generated@@466))))))))))
 :weight 3
 :pattern ( ($generated@@161 ($generated@@80 $generated@@461) ($generated@@205 $generated@@462) ($generated@@180 $generated@@463)))
))))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 (type $generated@@468)))
(= ($generated ($generated@@110 ($generated@@373 $generated@@469) $generated@@468)) 0))
 :pattern ( (let (($generated@@469 (type $generated@@468)))
($generated@@110 ($generated@@373 $generated@@469) $generated@@468)))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@385 (type $generated@@473))))
(let (($generated@@475 ($generated@@384 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473)) ($generated@@105 $generated@@475 $generated@@474))))
 :pattern ( ($generated@@471 $generated@@473))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) ($generated@@383 $generated@@90 $generated@@90)) (= (type $generated@@477) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@470 $generated@@476) $generated@@477))  (and ($generated@@0 ($generated@@110 ($generated@@381 $generated@@476) ($generated@@196 ($generated@@88 $generated@@82 $generated@@477)))) (= ($generated@@110 ($generated@@471 $generated@@476) ($generated@@196 ($generated@@88 $generated@@82 $generated@@477))) ($generated@@197 ($generated@@88 $generated@@82 $generated@@477))))))
 :pattern ( ($generated@@110 ($generated@@470 $generated@@476) $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) ($generated@@105 $generated@@90 $generated@@4))
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@403 (type $generated@@481))))
(let (($generated@@483 ($generated@@402 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481)) ($generated@@105 $generated@@483 $generated@@482))))
 :pattern ( ($generated@@479 $generated@@481))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) ($generated@@401 $generated@@90 $generated@@90)) (= (type $generated@@485) $generated@@90)) (= ($generated@@0 ($generated@@110 ($generated@@478 $generated@@484) $generated@@485))  (and ($generated@@0 ($generated@@110 ($generated@@399 $generated@@484) ($generated@@196 ($generated@@88 $generated@@82 $generated@@485)))) (= ($generated@@110 ($generated@@479 $generated@@484) ($generated@@196 ($generated@@88 $generated@@82 $generated@@485))) ($generated@@197 ($generated@@88 $generated@@82 $generated@@485))))))
 :pattern ( ($generated@@110 ($generated@@478 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
(let (($generated@@489 ($generated@@384 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@383 $generated@@489 $generated@@488)) (= ($generated@@0 ($generated@@110 ($generated@@424 $generated@@486) $generated@@487)) (exists (($generated@@490 T@U) ) (!  (and (= (type $generated@@490) $generated@@489) (and ($generated@@0 ($generated@@110 ($generated@@381 $generated@@486) $generated@@490)) (= $generated@@487 ($generated@@110 ($generated@@471 $generated@@486) $generated@@490))))
 :pattern ( ($generated@@110 ($generated@@381 $generated@@486) $generated@@490))
 :pattern ( ($generated@@110 ($generated@@471 $generated@@486) $generated@@490))
))))))
 :pattern ( ($generated@@110 ($generated@@424 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
(let (($generated@@494 ($generated@@402 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@401 $generated@@494 $generated@@493)) (= ($generated@@0 ($generated@@110 ($generated@@435 $generated@@491) $generated@@492)) (exists (($generated@@495 T@U) ) (!  (and (= (type $generated@@495) $generated@@494) (and ($generated@@0 ($generated@@110 ($generated@@399 $generated@@491) $generated@@495)) (= $generated@@492 ($generated@@110 ($generated@@479 $generated@@491) $generated@@495))))
 :pattern ( ($generated@@110 ($generated@@399 $generated@@491) $generated@@495))
 :pattern ( ($generated@@110 ($generated@@479 $generated@@491) $generated@@495))
))))))
 :pattern ( ($generated@@110 ($generated@@435 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) ($generated@@383 $generated@@90 $generated@@90)) (= (type $generated@@500) $generated@@68)) (= (type $generated@@501) $generated@@68)) (= (type $generated@@502) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@381 $generated@@499) $generated@@503))) (and ($generated@@345 ($generated@@110 ($generated@@471 $generated@@499) $generated@@503) $generated@@501 $generated@@502) ($generated@@345 $generated@@503 $generated@@500 $generated@@502)))
 :pattern ( ($generated@@110 ($generated@@471 $generated@@499) $generated@@503))
 :pattern ( ($generated@@110 ($generated@@381 $generated@@499) $generated@@503))
))))
 :pattern ( ($generated@@103 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) ($generated@@401 $generated@@90 $generated@@90)) (= (type $generated@@508) $generated@@68)) (= (type $generated@@509) $generated@@68)) (= (type $generated@@510) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@399 $generated@@507) $generated@@511))) (and ($generated@@345 ($generated@@110 ($generated@@479 $generated@@507) $generated@@511) $generated@@509 $generated@@510) ($generated@@345 $generated@@511 $generated@@508 $generated@@510)))
 :pattern ( ($generated@@110 ($generated@@479 $generated@@507) $generated@@511))
 :pattern ( ($generated@@110 ($generated@@399 $generated@@507) $generated@@511))
))))
 :pattern ( ($generated@@103 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@82)) ($generated@@84 $generated@@513 ($generated@@85 $generated@@512))) (or ($generated@@86 $generated@@513) ($generated@@309 $generated@@513)))
 :pattern ( ($generated@@309 $generated@@513) ($generated@@84 $generated@@513 ($generated@@85 $generated@@512)))
 :pattern ( ($generated@@86 $generated@@513) ($generated@@84 $generated@@513 ($generated@@85 $generated@@512)))
)))
(assert (forall (($generated@@515 T@T) ) (! (= (type ($generated@@514 $generated@@515)) ($generated@@105 $generated@@515 $generated@@4))
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@403 (type $generated@@516))))
(let (($generated@@518 ($generated@@402 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@401 $generated@@518 $generated@@517)) (= (= $generated@@516 ($generated@@400 $generated@@518 $generated@@517)) (= ($generated@@399 $generated@@516) ($generated@@514 $generated@@518))))))
 :pattern ( ($generated@@399 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@403 (type $generated@@519))))
(let (($generated@@521 ($generated@@402 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@401 $generated@@521 $generated@@520)) (= (= $generated@@519 ($generated@@400 $generated@@521 $generated@@520)) (= ($generated@@435 $generated@@519) ($generated@@514 $generated@@520))))))
 :pattern ( ($generated@@435 $generated@@519))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@403 (type $generated@@522))))
(let (($generated@@524 ($generated@@402 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@401 $generated@@524 $generated@@523)) (= (= $generated@@522 ($generated@@400 $generated@@524 $generated@@523)) (= ($generated@@478 $generated@@522) ($generated@@514 $generated@@90))))))
 :pattern ( ($generated@@478 $generated@@522))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@385 (type $generated@@525))))
(let (($generated@@527 ($generated@@384 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@383 $generated@@527 $generated@@526)) (or (= $generated@@525 ($generated@@382 $generated@@527 $generated@@526)) (exists (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (and (and (= (type $generated@@528) $generated@@90) (= (type $generated@@529) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@470 $generated@@525) ($generated@@336 ($generated@@288 $generated@@528 $generated@@529)))))
 :no-pattern (type $generated@@528)
 :no-pattern (type $generated@@529)
 :no-pattern ($generated $generated@@528)
 :no-pattern ($generated@@0 $generated@@528)
 :no-pattern ($generated $generated@@529)
 :no-pattern ($generated@@0 $generated@@529)
))))))
 :pattern ( ($generated@@470 $generated@@525))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@403 (type $generated@@530))))
(let (($generated@@532 ($generated@@402 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@401 $generated@@532 $generated@@531)) (or (= $generated@@530 ($generated@@400 $generated@@532 $generated@@531)) (exists (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (and (and (= (type $generated@@533) $generated@@90) (= (type $generated@@534) $generated@@90)) ($generated@@0 ($generated@@110 ($generated@@478 $generated@@530) ($generated@@336 ($generated@@288 $generated@@533 $generated@@534)))))
 :no-pattern (type $generated@@533)
 :no-pattern (type $generated@@534)
 :no-pattern ($generated $generated@@533)
 :no-pattern ($generated@@0 $generated@@533)
 :no-pattern ($generated $generated@@534)
 :no-pattern ($generated@@0 $generated@@534)
))))))
 :pattern ( ($generated@@478 $generated@@530))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@90) ($generated@@289 $generated@@535 $generated@@46)) (and (= ($generated@@336 ($generated@@88 $generated@@2 $generated@@535)) $generated@@535) ($generated@@84 ($generated@@88 $generated@@2 $generated@@535) $generated@@46)))
 :pattern ( ($generated@@289 $generated@@535 $generated@@46))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@90) ($generated@@289 $generated@@536 $generated@@47)) (and (= ($generated@@336 ($generated@@88 $generated@@3 $generated@@536)) $generated@@536) ($generated@@84 ($generated@@88 $generated@@3 $generated@@536) $generated@@47)))
 :pattern ( ($generated@@289 $generated@@536 $generated@@47))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@90) ($generated@@289 $generated@@537 $generated@@44)) (and (= ($generated@@336 ($generated@@88 $generated@@4 $generated@@537)) $generated@@537) ($generated@@84 ($generated@@88 $generated@@4 $generated@@537) $generated@@44)))
 :pattern ( ($generated@@289 $generated@@537 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@538) 21))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@90) ($generated@@289 $generated@@539 $generated@@45)) (and (= ($generated@@336 ($generated@@88 $generated@@538 $generated@@539)) $generated@@539) ($generated@@84 ($generated@@88 $generated@@538 $generated@@539) $generated@@45)))
 :pattern ( ($generated@@289 $generated@@539 $generated@@45))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@289 ($generated@@336 $generated@@540) $generated@@541) ($generated@@84 $generated@@540 $generated@@541)))
 :pattern ( ($generated@@289 ($generated@@336 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@108 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@105 $generated@@543 $generated@@2)) (<= 0 ($generated@@372 $generated@@542))))
 :pattern ( ($generated@@372 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@363 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@362 $generated@@545)) (<= 0 ($generated@@361 $generated@@544))))
 :pattern ( ($generated@@361 $generated@@544))
)))
(assert  (=> (<= 4 $generated@@78) (forall (($generated@@546 T@U) ($generated@@547 Int) ) (!  (=> (and (= (type $generated@@546) $generated@@82) (or ($generated@@297 $generated@@546 $generated@@547) (and (not (= 4 $generated@@78)) ($generated@@84 $generated@@546 ($generated@@85 $generated@@46))))) ($generated@@179 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@547)) $generated@@546) ($generated@@161 ($generated@@80 $generated@@170) $generated@@547 $generated@@546)))
 :pattern ( ($generated@@296 $generated@@546 $generated@@547))
))))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (= ($generated@@548 ($generated@@496 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@496 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@68) (= (type $generated@@555) $generated@@68)) (= ($generated@@552 ($generated@@496 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@496 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@68) (= (type $generated@@557) $generated@@68)) (= ($generated@@76 ($generated@@496 $generated@@556 $generated@@557)) $generated@@58))
 :pattern ( ($generated@@496 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@68) (= (type $generated@@561) $generated@@68)) (= ($generated@@558 ($generated@@504 $generated@@560 $generated@@561)) $generated@@560))
 :pattern ( ($generated@@504 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@68)) (= ($generated@@562 ($generated@@504 $generated@@564 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@504 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@68) (= (type $generated@@567) $generated@@68)) (= ($generated@@76 ($generated@@504 $generated@@566 $generated@@567)) $generated@@59))
 :pattern ( ($generated@@504 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@90) (= (type $generated@@569) $generated@@90)) (= ($generated@@202 ($generated@@288 $generated@@568 $generated@@569)) $generated@@61))
 :pattern ( ($generated@@288 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@68) (= (type $generated@@573) $generated@@68)) (= ($generated@@570 ($generated@@189 $generated@@572 $generated@@573)) $generated@@572))
 :pattern ( ($generated@@189 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@68) (= (type $generated@@577) $generated@@68)) (= ($generated@@574 ($generated@@189 $generated@@576 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@189 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@90) (= (type $generated@@579) $generated@@90)) (= ($generated@@196 ($generated@@288 $generated@@578 $generated@@579)) $generated@@578))
 :pattern ( ($generated@@288 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@90) (= (type $generated@@581) $generated@@90)) (= ($generated@@197 ($generated@@288 $generated@@580 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@288 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@90) (= (type $generated@@583) $generated@@82)) (= ($generated@@202 ($generated@@330 $generated@@582 $generated@@583)) $generated@@65))
 :pattern ( ($generated@@330 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@90) (= (type $generated@@585) $generated@@82)) (= ($generated@@89 ($generated@@330 $generated@@584 $generated@@585)) $generated@@584))
 :pattern ( ($generated@@330 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@90) (= (type $generated@@587) $generated@@82)) (= ($generated@@87 ($generated@@330 $generated@@586 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@330 $generated@@586 $generated@@587))
)))
(assert  (and (forall (($generated@@590 T@U) ) (! (= (type ($generated@@588 $generated@@590)) $generated@@68)
 :pattern ( ($generated@@588 $generated@@590))
)) (forall (($generated@@591 T@U) ($generated@@592 Int) ) (! (let (($generated@@593 ($generated@@363 (type $generated@@591))))
(= (type ($generated@@589 $generated@@591 $generated@@592)) $generated@@593))
 :pattern ( ($generated@@589 $generated@@591 $generated@@592))
))))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@362 $generated@@90)) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@594 ($generated@@588 $generated@@595) $generated@@596) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@361 $generated@@594))) ($generated@@345 ($generated@@589 $generated@@594 $generated@@597) $generated@@595 $generated@@596))
 :pattern ( ($generated@@589 $generated@@594 $generated@@597))
))))
 :pattern ( ($generated@@103 $generated@@594 ($generated@@588 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@599 Int) ) (! (= ($generated@@598 ($generated@@104 $generated@@599)) $generated@@599)
 :pattern ( ($generated@@104 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@68)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@68) (= ($generated@@600 ($generated@@316 $generated@@602)) $generated@@602))
 :pattern ( ($generated@@316 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@68) (= ($generated@@76 ($generated@@316 $generated@@603)) $generated@@54))
 :pattern ( ($generated@@316 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@68)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@68) (= ($generated@@604 ($generated@@321 $generated@@606)) $generated@@606))
 :pattern ( ($generated@@321 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@68) (= ($generated@@76 ($generated@@321 $generated@@607)) $generated@@55))
 :pattern ( ($generated@@321 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ) (! (= (type ($generated@@608 $generated@@609)) $generated@@68)
 :pattern ( ($generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@68) (= ($generated@@608 ($generated@@212 $generated@@610)) $generated@@610))
 :pattern ( ($generated@@212 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@68) (= ($generated@@76 ($generated@@212 $generated@@611)) $generated@@56))
 :pattern ( ($generated@@212 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ) (! (= (type ($generated@@612 $generated@@613)) $generated@@68)
 :pattern ( ($generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@68) (= ($generated@@612 ($generated@@588 $generated@@614)) $generated@@614))
 :pattern ( ($generated@@588 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@68) (= ($generated@@76 ($generated@@588 $generated@@615)) $generated@@57))
 :pattern ( ($generated@@588 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@68)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@68) (= ($generated@@616 ($generated@@85 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@85 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@619)))
(= ($generated@@88 $generated@@620 ($generated@@336 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@336 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@383 $generated@@90 $generated@@90)) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) $generated@@68)) (= ($generated@@84 $generated@@621 ($generated@@496 $generated@@622 $generated@@623)) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@381 $generated@@621) $generated@@624))) (and ($generated@@289 ($generated@@110 ($generated@@471 $generated@@621) $generated@@624) $generated@@623) ($generated@@289 $generated@@624 $generated@@622)))
 :pattern ( ($generated@@110 ($generated@@471 $generated@@621) $generated@@624))
 :pattern ( ($generated@@110 ($generated@@381 $generated@@621) $generated@@624))
))))
 :pattern ( ($generated@@84 $generated@@621 ($generated@@496 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@401 $generated@@90 $generated@@90)) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) $generated@@68)) (= ($generated@@84 $generated@@625 ($generated@@504 $generated@@626 $generated@@627)) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@90) ($generated@@0 ($generated@@110 ($generated@@399 $generated@@625) $generated@@628))) (and ($generated@@289 ($generated@@110 ($generated@@479 $generated@@625) $generated@@628) $generated@@627) ($generated@@289 $generated@@628 $generated@@626)))
 :pattern ( ($generated@@110 ($generated@@479 $generated@@625) $generated@@628))
 :pattern ( ($generated@@110 ($generated@@399 $generated@@625) $generated@@628))
))))
 :pattern ( ($generated@@84 $generated@@625 ($generated@@504 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@90) (= (type $generated@@632) $generated@@90)) (< ($generated@@629 $generated@@631) ($generated@@630 ($generated@@288 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@288 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@90) (= (type $generated@@634) $generated@@90)) (< ($generated@@629 $generated@@634) ($generated@@630 ($generated@@288 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@288 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@90) (= (type $generated@@636) $generated@@82)) (< ($generated@@629 $generated@@635) ($generated@@630 ($generated@@330 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@330 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@90) (= (type $generated@@638) $generated@@82)) (< ($generated@@630 $generated@@638) ($generated@@630 ($generated@@330 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@330 $generated@@637 $generated@@638))
)))
(assert  (=> (<= 4 $generated@@78) (forall (($generated@@639 T@U) ($generated@@640 Int) ) (!  (=> (and (= (type $generated@@639) $generated@@82) (or ($generated@@297 ($generated@@180 $generated@@639) ($generated@@205 $generated@@640)) (and (not (= 4 $generated@@78)) ($generated@@84 $generated@@639 ($generated@@85 $generated@@46))))) (= ($generated@@296 ($generated@@180 $generated@@639) ($generated@@205 $generated@@640)) ($generated@@0 ($generated@@180 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@296 ($generated@@180 $generated@@639) ($generated@@205 $generated@@640)))
))))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@90) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) $generated@@68)) ($generated@@289 $generated@@641 ($generated@@496 $generated@@642 $generated@@643))) (and (= ($generated@@336 ($generated@@88 ($generated@@383 $generated@@90 $generated@@90) $generated@@641)) $generated@@641) ($generated@@84 ($generated@@88 ($generated@@383 $generated@@90 $generated@@90) $generated@@641) ($generated@@496 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@289 $generated@@641 ($generated@@496 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@90) (= (type $generated@@645) $generated@@68)) (= (type $generated@@646) $generated@@68)) ($generated@@289 $generated@@644 ($generated@@504 $generated@@645 $generated@@646))) (and (= ($generated@@336 ($generated@@88 ($generated@@401 $generated@@90 $generated@@90) $generated@@644)) $generated@@644) ($generated@@84 ($generated@@88 ($generated@@401 $generated@@90 $generated@@90) $generated@@644) ($generated@@504 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@289 $generated@@644 ($generated@@504 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@68) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) $generated@@90)) ($generated@@289 $generated@@649 ($generated@@189 $generated@@647 $generated@@648))) (and (= ($generated@@336 ($generated@@88 $generated@@82 $generated@@649)) $generated@@649) ($generated@@84 ($generated@@88 $generated@@82 $generated@@649) ($generated@@189 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@289 $generated@@649 ($generated@@189 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@82) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@285 $generated@@652) (and ($generated@@309 $generated@@650) ($generated@@103 $generated@@650 ($generated@@85 $generated@@651) $generated@@652)))) ($generated@@345 ($generated@@89 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@345 ($generated@@89 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@653)))
 (not ($generated@@0 ($generated@@110 ($generated@@514 $generated@@654) $generated@@653))))
 :pattern ( (let (($generated@@654 (type $generated@@653)))
($generated@@110 ($generated@@514 $generated@@654) $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@68) (= (type $generated@@656) $generated@@68)) (and (= ($generated@@76 ($generated@@189 $generated@@655 $generated@@656)) $generated@@62) (= ($generated@@378 ($generated@@189 $generated@@655 $generated@@656)) $generated@@66)))
 :pattern ( ($generated@@189 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@82) (= ($generated@@629 ($generated@@336 $generated@@657)) ($generated@@630 $generated@@657)))
 :pattern ( ($generated@@629 ($generated@@336 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@90) ($generated@@289 $generated@@658 ($generated@@104 0))) (and (= ($generated@@336 ($generated@@88 $generated@@2 $generated@@658)) $generated@@658) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@658) ($generated@@104 0))))
 :pattern ( ($generated@@289 $generated@@658 ($generated@@104 0)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@659) $generated@@90) (= (type $generated@@660) $generated@@68)) ($generated@@289 $generated@@659 ($generated@@316 $generated@@660))) (and (= ($generated@@336 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@659)) $generated@@659) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@659) ($generated@@316 $generated@@660))))
 :pattern ( ($generated@@289 $generated@@659 ($generated@@316 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@661) $generated@@90) (= (type $generated@@662) $generated@@68)) ($generated@@289 $generated@@661 ($generated@@321 $generated@@662))) (and (= ($generated@@336 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@661)) $generated@@661) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@4) $generated@@661) ($generated@@321 $generated@@662))))
 :pattern ( ($generated@@289 $generated@@661 ($generated@@321 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (= (type $generated@@663) $generated@@90) (= (type $generated@@664) $generated@@68)) ($generated@@289 $generated@@663 ($generated@@212 $generated@@664))) (and (= ($generated@@336 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@663)) $generated@@663) ($generated@@84 ($generated@@88 ($generated@@105 $generated@@90 $generated@@2) $generated@@663) ($generated@@212 $generated@@664))))
 :pattern ( ($generated@@289 $generated@@663 ($generated@@212 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@665) $generated@@90) (= (type $generated@@666) $generated@@68)) ($generated@@289 $generated@@665 ($generated@@588 $generated@@666))) (and (= ($generated@@336 ($generated@@88 ($generated@@362 $generated@@90) $generated@@665)) $generated@@665) ($generated@@84 ($generated@@88 ($generated@@362 $generated@@90) $generated@@665) ($generated@@588 $generated@@666))))
 :pattern ( ($generated@@289 $generated@@665 ($generated@@588 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (= (type $generated@@667) $generated@@68) (= (type $generated@@668) $generated@@90)) ($generated@@289 $generated@@668 ($generated@@85 $generated@@667))) (and (= ($generated@@336 ($generated@@88 $generated@@82 $generated@@668)) $generated@@668) ($generated@@84 ($generated@@88 $generated@@82 $generated@@668) ($generated@@85 $generated@@667))))
 :pattern ( ($generated@@289 $generated@@668 ($generated@@85 $generated@@667)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) $generated@@82) (= (type $generated@@670) $generated@@68)) (= (type $generated@@671) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@285 $generated@@671) (and ($generated@@309 $generated@@669) ($generated@@103 $generated@@669 ($generated@@85 $generated@@670) $generated@@671)))) ($generated@@103 ($generated@@87 $generated@@669) ($generated@@85 $generated@@670) $generated@@671))
 :pattern ( ($generated@@103 ($generated@@87 $generated@@669) ($generated@@85 $generated@@670) $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@672) ($generated@@105 $generated@@90 $generated@@2)) (= (type $generated@@673) $generated@@68)) (= (type $generated@@674) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@672 ($generated@@212 $generated@@673) $generated@@674) (forall (($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@90) (< 0 ($generated ($generated@@110 $generated@@672 $generated@@675)))) ($generated@@345 $generated@@675 $generated@@673 $generated@@674))
 :pattern ( ($generated@@110 $generated@@672 $generated@@675))
))))
 :pattern ( ($generated@@103 $generated@@672 ($generated@@212 $generated@@673) $generated@@674))
)))
(assert (= $generated@@203 ($generated@@180 $generated@@203)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) $generated@@82) (= (type $generated@@677) $generated@@68)) (= (type $generated@@678) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@285 $generated@@678) (and ($generated@@188 $generated@@676) (exists (($generated@@679 T@U) ) (!  (and (= (type $generated@@679) $generated@@68) ($generated@@103 $generated@@676 ($generated@@189 $generated@@677 $generated@@679) $generated@@678))
 :pattern ( ($generated@@103 $generated@@676 ($generated@@189 $generated@@677 $generated@@679) $generated@@678))
))))) ($generated@@345 ($generated@@196 $generated@@676) $generated@@677 $generated@@678))
 :pattern ( ($generated@@345 ($generated@@196 $generated@@676) $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) $generated@@82) (= (type $generated@@681) $generated@@68)) (= (type $generated@@682) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@285 $generated@@682) (and ($generated@@188 $generated@@680) (exists (($generated@@683 T@U) ) (!  (and (= (type $generated@@683) $generated@@68) ($generated@@103 $generated@@680 ($generated@@189 $generated@@683 $generated@@681) $generated@@682))
 :pattern ( ($generated@@103 $generated@@680 ($generated@@189 $generated@@683 $generated@@681) $generated@@682))
))))) ($generated@@345 ($generated@@197 $generated@@680) $generated@@681 $generated@@682))
 :pattern ( ($generated@@345 ($generated@@197 $generated@@680) $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) $generated@@90) (= (type $generated@@685) $generated@@90)) (= ($generated@@288 ($generated@@180 $generated@@684) ($generated@@180 $generated@@685)) ($generated@@180 ($generated@@288 $generated@@684 $generated@@685))))
 :pattern ( ($generated@@288 ($generated@@180 $generated@@684) ($generated@@180 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@90) (= (type $generated@@687) $generated@@82)) (= ($generated@@330 ($generated@@180 $generated@@686) ($generated@@180 $generated@@687)) ($generated@@180 ($generated@@330 $generated@@686 $generated@@687))))
 :pattern ( ($generated@@330 ($generated@@180 $generated@@686) ($generated@@180 $generated@@687)))
)))
(assert (forall (($generated@@688 Int) ) (! (= ($generated@@336 ($generated@@8 ($generated@@205 $generated@@688))) ($generated@@180 ($generated@@336 ($generated@@8 $generated@@688))))
 :pattern ( ($generated@@336 ($generated@@8 ($generated@@205 $generated@@688))))
)))
(assert (forall (($generated@@689 T@U) ) (! (= ($generated@@336 ($generated@@180 $generated@@689)) ($generated@@180 ($generated@@336 $generated@@689)))
 :pattern ( ($generated@@336 ($generated@@180 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ) (! (let (($generated@@691 ($generated@@363 (type $generated@@690))))
 (=> (and (= (type $generated@@690) ($generated@@362 $generated@@691)) (= ($generated@@361 $generated@@690) 0)) (= $generated@@690 ($generated@@360 $generated@@691))))
 :pattern ( ($generated@@361 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (! (let (($generated@@695 (type $generated@@693)))
 (=> (and (and (= (type $generated@@692) ($generated@@105 $generated@@695 $generated@@2)) (= (type $generated@@694) $generated@@2)) (<= 0 ($generated $generated@@694))) (= ($generated@@372 ($generated@@111 $generated@@692 $generated@@693 $generated@@694)) (+ (- ($generated@@372 $generated@@692) ($generated ($generated@@110 $generated@@692 $generated@@693))) ($generated $generated@@694)))))
 :pattern ( ($generated@@372 ($generated@@111 $generated@@692 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@697) $generated@@2)) ($generated@@103 $generated@@697 $generated@@46 $generated@@696))
 :pattern ( ($generated@@103 $generated@@697 $generated@@46 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@699) $generated@@3)) ($generated@@103 $generated@@699 $generated@@47 $generated@@698))
 :pattern ( ($generated@@103 $generated@@699 $generated@@47 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@700) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@701) $generated@@4)) ($generated@@103 $generated@@701 $generated@@44 $generated@@700))
 :pattern ( ($generated@@103 $generated@@701 $generated@@44 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@703) $generated@@538)) ($generated@@103 $generated@@703 $generated@@45 $generated@@702))
 :pattern ( ($generated@@103 $generated@@703 $generated@@45 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@705) $generated@@90)) ($generated@@103 $generated@@705 $generated@@48 $generated@@704))
 :pattern ( ($generated@@103 $generated@@705 $generated@@48 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@706) $generated@@68) (= (type $generated@@707) $generated@@90)) (= (type $generated@@708) $generated@@82)) (= (type $generated@@709) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@285 $generated@@709)) (= ($generated@@103 ($generated@@330 $generated@@707 $generated@@708) ($generated@@85 $generated@@706) $generated@@709)  (and ($generated@@345 $generated@@707 $generated@@706 $generated@@709) ($generated@@103 $generated@@708 ($generated@@85 $generated@@706) $generated@@709))))
 :pattern ( ($generated@@103 ($generated@@330 $generated@@707 $generated@@708) ($generated@@85 $generated@@706) $generated@@709))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) ($generated@@362 $generated@@90)) (= (type $generated@@711) $generated@@68)) (= ($generated@@84 $generated@@710 ($generated@@588 $generated@@711)) (forall (($generated@@712 Int) ) (!  (=> (and (<= 0 $generated@@712) (< $generated@@712 ($generated@@361 $generated@@710))) ($generated@@289 ($generated@@589 $generated@@710 $generated@@712) $generated@@711))
 :pattern ( ($generated@@589 $generated@@710 $generated@@712))
))))
 :pattern ( ($generated@@84 $generated@@710 ($generated@@588 $generated@@711)))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 Int) ) (!  (=> (= (type $generated@@714) ($generated@@362 $generated@@90)) (=> (and (<= 0 $generated@@715) (< $generated@@715 ($generated@@361 $generated@@714))) (< ($generated@@630 ($generated@@88 $generated@@82 ($generated@@589 $generated@@714 $generated@@715))) ($generated@@713 $generated@@714))))
 :pattern ( ($generated@@630 ($generated@@88 $generated@@82 ($generated@@589 $generated@@714 $generated@@715))))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (and (= (type $generated@@716) ($generated@@383 $generated@@90 $generated@@90)) (= (type $generated@@717) $generated@@68)) (= (type $generated@@718) $generated@@68)) ($generated@@84 $generated@@716 ($generated@@496 $generated@@717 $generated@@718))) (and (and ($generated@@84 ($generated@@381 $generated@@716) ($generated@@316 $generated@@717)) ($generated@@84 ($generated@@424 $generated@@716) ($generated@@316 $generated@@718))) ($generated@@84 ($generated@@470 $generated@@716) ($generated@@316 ($generated@@189 $generated@@717 $generated@@718)))))
 :pattern ( ($generated@@84 $generated@@716 ($generated@@496 $generated@@717 $generated@@718)))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (and (= (type $generated@@719) ($generated@@401 $generated@@90 $generated@@90)) (= (type $generated@@720) $generated@@68)) (= (type $generated@@721) $generated@@68)) ($generated@@84 $generated@@719 ($generated@@504 $generated@@720 $generated@@721))) (and (and ($generated@@84 ($generated@@399 $generated@@719) ($generated@@321 $generated@@720)) ($generated@@84 ($generated@@435 $generated@@719) ($generated@@321 $generated@@721))) ($generated@@84 ($generated@@478 $generated@@719) ($generated@@321 ($generated@@189 $generated@@720 $generated@@721)))))
 :pattern ( ($generated@@84 $generated@@719 ($generated@@504 $generated@@720 $generated@@721)))
)))
(assert (forall (($generated@@722 T@U) ) (!  (=> (= (type $generated@@722) $generated@@2) ($generated@@84 $generated@@722 $generated@@46))
 :pattern ( ($generated@@84 $generated@@722 $generated@@46))
)))
(assert (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@3) ($generated@@84 $generated@@723 $generated@@47))
 :pattern ( ($generated@@84 $generated@@723 $generated@@47))
)))
(assert (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@4) ($generated@@84 $generated@@724 $generated@@44))
 :pattern ( ($generated@@84 $generated@@724 $generated@@44))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) $generated@@538) ($generated@@84 $generated@@725 $generated@@45))
 :pattern ( ($generated@@84 $generated@@725 $generated@@45))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@90) ($generated@@84 $generated@@726 $generated@@48))
 :pattern ( ($generated@@84 $generated@@726 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@727 () Int)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () T@U)
(declare-fun $generated@@733 (T@U) Bool)
(declare-fun $generated@@734 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@728) $generated@@82) (= (type $generated@@729) ($generated@@219 $generated@@106 $generated@@4))) (= (type $generated@@730) $generated@@106)) (= (type $generated@@731) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@732) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@734) ($generated@@219 $generated@@106 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@735  (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@181 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@727)) $generated@@728) ($generated@@161 ($generated@@80 $generated@@170) $generated@@727 $generated@@728)) (or ($generated@@179 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@727)) $generated@@728) ($generated@@161 ($generated@@80 $generated@@170) $generated@@727 $generated@@728)) (forall (($generated@@736 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@736 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@727)) $generated@@728)) ($generated@@79 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@736 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@727 $generated@@728))))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@736 ($generated@@161 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@727 $generated@@728)))
 :pattern ( ($generated@@79 ($generated@@80 ($generated@@80 $generated@@170)) $generated@@736 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@727)) $generated@@728)))
)))))))
(let (($generated@@737  (=> (= $generated@@729 ($generated@@273 $generated@@730 $generated@@731 $generated@@60 false)) (=> (and ($generated@@285 $generated@@732) ($generated@@733 $generated@@732)) (=> (and (and (and ($generated@@162 $generated@@727 $generated@@728) ($generated@@181 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@727)) $generated@@728) ($generated@@161 ($generated@@80 $generated@@170) $generated@@727 $generated@@728))) (and ($generated@@181 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@727)) $generated@@728) ($generated@@161 ($generated@@80 $generated@@170) $generated@@727 $generated@@728)) (and ($generated@@179 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@727)) $generated@@728) ($generated@@161 ($generated@@80 $generated@@170) $generated@@727 $generated@@728)) (forall (($generated@@738 Int) ) (!  (=> true (= ($generated@@79 ($generated@@80 $generated@@170) $generated@@738 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@727)) $generated@@728)) ($generated@@79 ($generated@@80 $generated@@170) $generated@@738 ($generated@@161 ($generated@@80 $generated@@170) $generated@@727 $generated@@728))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@738 ($generated@@161 ($generated@@80 $generated@@170) $generated@@727 $generated@@728)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@170) $generated@@738 ($generated@@330 ($generated@@336 ($generated@@8 $generated@@727)) $generated@@728)))
))))) (and (and (= $generated@@731 $generated@@732) (= ($generated@@296 $generated@@728 $generated@@727) ($generated@@0 ($generated@@180 ($generated@@11 true))))) (and ($generated@@84 ($generated@@11 ($generated@@296 $generated@@728 $generated@@727)) $generated@@44) (= (ControlFlow 0 4) 3)))) $generated@@735)))))
(let (($generated@@739 true))
(let (($generated@@740  (=> (= $generated@@734 ($generated@@218 $generated@@730 $generated@@731 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@739) (=> (= (ControlFlow 0 5) 4) $generated@@737)))))
(let (($generated@@741  (=> (and (and (and ($generated@@285 $generated@@731) ($generated@@733 $generated@@731)) ($generated@@84 $generated@@728 ($generated@@85 $generated@@46))) (and (= 4 $generated@@78) (= (ControlFlow 0 6) 5))) $generated@@740)))
$generated@@741))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U Int T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (Int T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@184 (T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@186 (T@T T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U Int) Bool)
(declare-fun $generated@@277 (T@U Int) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (Int) Int)
(declare-fun $generated@@298 (T@U) Bool)
(declare-fun $generated@@301 (T@U T@U) T@U)
(declare-fun $generated@@307 (T@T T@U) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@319 (T@U T@U T@U) Bool)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@335 (T@U) Int)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@347 (T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@T) T@U)
(declare-fun $generated@@357 (T@T T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@375 (T@T T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@473 (T@U T@U) T@U)
(declare-fun $generated@@481 (T@U T@U) T@U)
(declare-fun $generated@@493 (T@T) T@U)
(declare-fun $generated@@517 () T@T)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@568 (T@U Int) T@U)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@610 (T@U) Int)
(declare-fun $generated@@611 (T@U) Int)
(declare-fun $generated@@702 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 T@U) ) (! (= (type ($generated@@137 $generated@@143 $generated@@144 $generated@@145)) $generated@@139)
 :pattern ( ($generated@@137 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@142 $generated@@146))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@147) $generated@@138) (= (type $generated@@149) $generated@@139)) (or ($generated@@140 $generated@@148 $generated@@149) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@149 ($generated@@142 $generated@@46))))) ($generated@@141 ($generated@@137 $generated@@147 $generated@@148 $generated@@149) ($generated@@142 $generated@@46)))
 :pattern ( ($generated@@137 $generated@@147 $generated@@148 $generated@@149))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@138) (= (type $generated@@153) $generated@@139)) (or ($generated@@151 $generated@@153) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@153 ($generated@@142 $generated@@46))))) true)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@138)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@138)))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@138) (= (type $generated@@159) $generated@@139)) (= ($generated@@137 $generated@@157 $generated@@158 $generated@@159) ($generated@@137 $generated@@155 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@137 ($generated@@154 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@141 $generated@@160 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@79 0)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@163 $generated@@164)) $generated@@68)
 :pattern ( ($generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@68) (= (type $generated@@166) $generated@@68)) (= (type $generated@@167) $generated@@139)) ($generated@@141 $generated@@167 ($generated@@162 $generated@@165 $generated@@166))) ($generated@@161 $generated@@167))
 :pattern ( ($generated@@161 $generated@@167) ($generated@@141 $generated@@167 ($generated@@162 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 16) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@139) (= (type $generated@@175) $generated@@139)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@72)
 :pattern ( ($generated@@176 $generated@@178))
)) (= (type $generated@@177) $generated@@139)))
(assert (= ($generated@@176 $generated@@177) $generated@@63))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@68)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@80 $generated@@171 $generated@@2)) (= (type $generated@@183) $generated@@68)) ($generated@@141 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@141 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (= ($generated@@1 ($generated@@186 $generated@@190 $generated@@191)) 17)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@187 ($generated@@186 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@186 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@188 ($generated@@186 $generated@@194 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@186 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@188 (type $generated@@196))))
(= (type ($generated@@184 $generated@@196 $generated@@197 $generated@@198)) $generated@@199))
 :pattern ( ($generated@@184 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(let (($generated@@205 (type $generated@@201)))
(= (type ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@186 $generated@@205 $generated@@204))))
 :pattern ( ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@188 (type $generated@@206))))
 (=> (= (type $generated@@209) $generated@@210) (= ($generated@@184 ($generated@@189 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@207 $generated@@208) $generated@@209)))
 :weight 0
))) (and (and (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@184 ($generated@@189 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@184 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@184 ($generated@@189 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@184 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or true (= ($generated@@184 ($generated@@189 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@184 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ) (! (= (type ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232)) ($generated@@186 $generated@@81 $generated@@4))
 :pattern ( ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@71 (type $generated@@238))))
 (=> (and (and (and (and (= (type $generated@@233) $generated@@81) (= (type $generated@@234) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@235) ($generated@@70 $generated@@4))) (= (type $generated@@237) $generated@@81)) (= (type $generated@@238) ($generated@@70 $generated@@239))) (= ($generated@@0 ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))  (=> (and (not (= $generated@@237 $generated@@233)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@234 $generated@@237) $generated@@235))) $generated@@236))))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@186 $generated@@81 $generated@@4))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@71 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@81) (= (type $generated@@246) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@247) ($generated@@70 $generated@@4))) (= (type $generated@@249) $generated@@81)) (= (type $generated@@250) ($generated@@70 $generated@@251))) (= ($generated@@0 ($generated@@184 ($generated@@240 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@184 ($generated@@240 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@252 $generated@@254)) ($generated@@78 $generated@@177 ($generated@@142 $generated@@253) $generated@@254))
 :pattern ( ($generated@@78 $generated@@177 ($generated@@142 $generated@@253) $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= (type ($generated@@255 $generated@@257 $generated@@258)) $generated@@139)
 :pattern ( ($generated@@255 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) $generated@@68) (= (type $generated@@260) $generated@@68)) (= (type $generated@@261) $generated@@171)) (= (type $generated@@262) $generated@@171)) (= ($generated@@141 ($generated@@255 $generated@@261 $generated@@262) ($generated@@162 $generated@@259 $generated@@260))  (and ($generated@@256 $generated@@261 $generated@@259) ($generated@@256 $generated@@262 $generated@@260))))
 :pattern ( ($generated@@141 ($generated@@255 $generated@@261 $generated@@262) ($generated@@162 $generated@@259 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@68) ($generated@@141 $generated@@177 ($generated@@142 $generated@@263)))
 :pattern ( ($generated@@141 $generated@@177 ($generated@@142 $generated@@263)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@139) (= (type $generated@@265) $generated@@139)) (= ($generated@@168 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@168 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@139) (= (type $generated@@268) $generated@@139)) (= ($generated@@266 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268))
)))
(assert  (and (forall (($generated@@272 T@U) ) (! (= (type ($generated@@270 $generated@@272)) $generated@@171)
 :pattern ( ($generated@@270 $generated@@272))
)) (forall (($generated@@273 T@U) ) (! (= (type ($generated@@271 $generated@@273)) $generated@@139)
 :pattern ( ($generated@@271 $generated@@273))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@139) (= (type $generated@@275) $generated@@139)) (and ($generated@@269 $generated@@274) ($generated@@269 $generated@@275))) (= ($generated@@266 $generated@@274 $generated@@275)  (and (= ($generated@@270 $generated@@274) ($generated@@270 $generated@@275)) ($generated@@266 ($generated@@271 $generated@@274) ($generated@@271 $generated@@275)))))
 :pattern ( ($generated@@266 $generated@@274 $generated@@275) ($generated@@269 $generated@@274))
 :pattern ( ($generated@@266 $generated@@274 $generated@@275) ($generated@@269 $generated@@275))
)))
(assert  (and (forall (($generated@@280 T@U) ) (! (= (type ($generated@@278 $generated@@280)) $generated@@138)
 :pattern ( ($generated@@278 $generated@@280))
)) (forall (($generated@@281 T@U) ) (! (let (($generated@@282 (type $generated@@281)))
(= (type ($generated@@279 $generated@@281)) $generated@@282))
 :pattern ( ($generated@@279 $generated@@281))
))))
(assert  (=> (<= 3 $generated@@136) (forall (($generated@@283 T@U) ($generated@@284 Int) ) (!  (=> (and (= (type $generated@@283) $generated@@139) (or ($generated@@277 $generated@@283 $generated@@284) (and (not (= 3 $generated@@136)) (and ($generated@@141 $generated@@283 ($generated@@142 $generated@@46)) ($generated@@150 ($generated@@278 $generated@@155) $generated@@283))))) (= ($generated@@276 $generated@@283 $generated@@284) ($generated@@0 ($generated@@279 ($generated@@11 true)))))
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@68)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@288) $generated@@68)) (= ($generated@@141 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@171) ($generated@@0 ($generated@@85 $generated@@287 $generated@@289))) ($generated@@256 $generated@@289 $generated@@288))
 :pattern ( ($generated@@85 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@141 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@68)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@293) $generated@@68)) (= ($generated@@141 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@171) ($generated@@0 ($generated@@85 $generated@@292 $generated@@294))) ($generated@@256 $generated@@294 $generated@@293))
 :pattern ( ($generated@@85 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@141 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@296 Int) ) (! (= ($generated@@295 $generated@@296) $generated@@296)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (= ($generated@@279 $generated@@297) $generated@@297)
 :pattern ( ($generated@@279 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (= (type $generated@@299) $generated@@139) (= (type $generated@@300) $generated@@139)) (and ($generated@@298 $generated@@299) ($generated@@298 $generated@@300))) (= ($generated@@266 $generated@@299 $generated@@300) true))
 :pattern ( ($generated@@266 $generated@@299 $generated@@300) ($generated@@298 $generated@@299))
 :pattern ( ($generated@@266 $generated@@299 $generated@@300) ($generated@@298 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@302 $generated@@303)) $generated@@139)
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (= (type $generated@@304) $generated@@68) (= (type $generated@@305) $generated@@171)) (= (type $generated@@306) $generated@@139)) (= ($generated@@141 ($generated@@301 $generated@@305 $generated@@306) ($generated@@142 $generated@@304))  (and ($generated@@256 $generated@@305 $generated@@304) ($generated@@141 $generated@@306 ($generated@@142 $generated@@304)))))
 :pattern ( ($generated@@141 ($generated@@301 $generated@@305 $generated@@306) ($generated@@142 $generated@@304)))
)))
(assert  (and (forall (($generated@@309 T@T) ($generated@@310 T@U) ) (! (= (type ($generated@@307 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@307 $generated@@309 $generated@@310))
)) (forall (($generated@@311 T@U) ) (! (= (type ($generated@@308 $generated@@311)) $generated@@171)
 :pattern ( ($generated@@308 $generated@@311))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@312 T@U) ($generated@@313 Int) ($generated@@314 T@U) ) (!  (=> (and (and (= (type $generated@@312) $generated@@138) (= (type $generated@@314) $generated@@139)) (or ($generated@@140 $generated@@313 $generated@@314) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@314 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@298 $generated@@314)) (let (($generated@@315 ($generated@@271 $generated@@314)))
(let (($generated@@316 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@314)))))
 (=> (< $generated@@316 $generated@@313) ($generated@@140 $generated@@313 $generated@@315))))) (= ($generated@@137 ($generated@@278 $generated@@312) $generated@@313 $generated@@314) (ite ($generated@@298 $generated@@314) ($generated@@301 ($generated@@308 ($generated@@8 $generated@@313)) ($generated@@279 $generated@@177)) (let (($generated@@317 ($generated@@271 $generated@@314)))
(let (($generated@@318 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@314)))))
(ite (<= $generated@@313 $generated@@318) ($generated@@301 ($generated@@308 ($generated@@8 $generated@@313)) $generated@@314) ($generated@@301 ($generated@@308 ($generated@@8 $generated@@318)) ($generated@@137 $generated@@312 $generated@@313 $generated@@317)))))))))
 :pattern ( ($generated@@137 ($generated@@278 $generated@@312) $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@320) $generated@@68) (= (type $generated@@321) $generated@@68)) (= (type $generated@@322) $generated@@171)) (= (type $generated@@323) $generated@@171)) (= (type $generated@@324) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@252 $generated@@324)) (= ($generated@@78 ($generated@@255 $generated@@322 $generated@@323) ($generated@@162 $generated@@320 $generated@@321) $generated@@324)  (and ($generated@@319 $generated@@322 $generated@@320 $generated@@324) ($generated@@319 $generated@@323 $generated@@321 $generated@@324))))
 :pattern ( ($generated@@78 ($generated@@255 $generated@@322 $generated@@323) ($generated@@162 $generated@@320 $generated@@321) $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@139) (= ($generated@@161 $generated@@325) (= ($generated@@176 $generated@@325) $generated@@61)))
 :pattern ( ($generated@@161 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@139) (= ($generated@@298 $generated@@326) (= ($generated@@176 $generated@@326) $generated@@63)))
 :pattern ( ($generated@@298 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@139) (= ($generated@@269 $generated@@327) (= ($generated@@176 $generated@@327) $generated@@65)))
 :pattern ( ($generated@@269 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@139) ($generated@@161 $generated@@328)) (exists (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (and (and (= (type $generated@@329) $generated@@171) (= (type $generated@@330) $generated@@171)) (= $generated@@328 ($generated@@255 $generated@@329 $generated@@330)))
 :no-pattern (type $generated@@329)
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
)))
 :pattern ( ($generated@@161 $generated@@328))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@139) ($generated@@269 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@171) (= (type $generated@@333) $generated@@139)) (= $generated@@331 ($generated@@301 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@269 $generated@@331))
)))
(assert  (and (and (forall (($generated@@338 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@338)) 18)) (forall (($generated@@339 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
))) (forall (($generated@@340 T@T) ) (! (= (type ($generated@@334 $generated@@340)) ($generated@@336 $generated@@340))
 :pattern ( ($generated@@334 $generated@@340))
))))
(assert (forall (($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@341)) 0)
 :pattern ( ($generated@@334 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@139) ($generated@@298 $generated@@342)) (= $generated@@342 $generated@@177))
 :pattern ( ($generated@@298 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@68) (= (type $generated@@345) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@319 ($generated@@308 $generated@@343) $generated@@344 $generated@@345) ($generated@@78 $generated@@343 $generated@@344 $generated@@345)))
 :pattern ( ($generated@@319 ($generated@@308 $generated@@343) $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@348 T@T) ) (! (= (type ($generated@@347 $generated@@348)) ($generated@@80 $generated@@348 $generated@@2))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@83 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@80 $generated@@350 $generated@@2)) (and (= (= ($generated@@346 $generated@@349) 0) (= $generated@@349 ($generated@@347 $generated@@350))) (=> (not (= ($generated@@346 $generated@@349) 0)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) (< 0 ($generated ($generated@@85 $generated@@349 $generated@@351))))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (= (type ($generated@@352 $generated@@353)) $generated@@73)
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@68) (and (= ($generated@@76 ($generated@@142 $generated@@354)) $generated@@64) (= ($generated@@352 ($generated@@142 $generated@@354)) $generated@@67)))
 :pattern ( ($generated@@142 $generated@@354))
)))
(assert  (and (and (and (and (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (= ($generated@@1 ($generated@@357 $generated@@360 $generated@@361)) 19)) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@358 ($generated@@357 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@357 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@359 ($generated@@357 $generated@@364 $generated@@365)) $generated@@365)
 :pattern ( ($generated@@357 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@358 (type $generated@@366))))
(= (type ($generated@@355 $generated@@366)) ($generated@@80 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@366))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= (type ($generated@@356 $generated@@368 $generated@@369)) ($generated@@357 $generated@@368 $generated@@369))
 :pattern ( ($generated@@356 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@T) ) (! (let (($generated@@372 (type $generated@@370)))
 (not ($generated@@0 ($generated@@85 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370))))
 :pattern ( (let (($generated@@372 (type $generated@@370)))
($generated@@85 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370)))
)))
(assert  (and (and (and (and (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (= ($generated@@1 ($generated@@375 $generated@@378 $generated@@379)) 20)) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@375 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@377 ($generated@@375 $generated@@382 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@375 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@376 (type $generated@@384))))
(= (type ($generated@@373 $generated@@384)) ($generated@@80 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@384))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= (type ($generated@@374 $generated@@386 $generated@@387)) ($generated@@375 $generated@@386 $generated@@387))
 :pattern ( ($generated@@374 $generated@@386 $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@T) ) (! (let (($generated@@390 (type $generated@@388)))
 (not ($generated@@0 ($generated@@85 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388))))
 :pattern ( (let (($generated@@390 (type $generated@@388)))
($generated@@85 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388)))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@83 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@80 $generated@@392 $generated@@2)) (= ($generated@@180 $generated@@391) (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@392) (and (<= 0 ($generated ($generated@@85 $generated@@391 $generated@@393))) (<= ($generated ($generated@@85 $generated@@391 $generated@@393)) ($generated@@346 $generated@@391))))
 :pattern ( ($generated@@85 $generated@@391 $generated@@393))
)))))
 :pattern ( ($generated@@180 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@359 (type $generated@@394))))
(let (($generated@@396 ($generated@@358 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@357 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@356 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@355 $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@359 (type $generated@@399))))
(= (type ($generated@@398 $generated@@399)) ($generated@@80 $generated@@400 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@359 (type $generated@@401))))
(let (($generated@@403 ($generated@@358 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@357 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@356 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@402) ($generated@@0 ($generated@@85 ($generated@@398 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@398 $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@377 (type $generated@@405))))
(let (($generated@@407 ($generated@@376 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@375 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@374 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) ($generated@@0 ($generated@@85 ($generated@@373 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@373 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@377 (type $generated@@410))))
(= (type ($generated@@409 $generated@@410)) ($generated@@80 $generated@@411 $generated@@4)))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@377 (type $generated@@412))))
(let (($generated@@414 ($generated@@376 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@375 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@374 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@413) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@409 $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 Int) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@138) (= (type $generated@@418) $generated@@139)) (= ($generated@@137 ($generated@@278 $generated@@416) $generated@@417 $generated@@418) ($generated@@137 $generated@@416 $generated@@417 $generated@@418)))
 :pattern ( ($generated@@137 ($generated@@278 $generated@@416) $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@80 $generated@@171 $generated@@2)) (= (type $generated@@420) $generated@@68)) (= ($generated@@141 $generated@@419 ($generated@@179 $generated@@420)) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@171) (< 0 ($generated ($generated@@85 $generated@@419 $generated@@421)))) ($generated@@256 $generated@@421 $generated@@420))
 :pattern ( ($generated@@85 $generated@@419 $generated@@421))
))))
 :pattern ( ($generated@@141 $generated@@419 ($generated@@179 $generated@@420)))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@422) $generated@@138) (= (type $generated@@423) $generated@@139)) (or ($generated@@151 $generated@@423) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@423 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@298 $generated@@423)) (let (($generated@@424 ($generated@@271 $generated@@423)))
(let (($generated@@425 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@423)))))
 (=> (not ($generated@@298 $generated@@424)) (let (($generated@@426 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@424)))))
 (=> (<= $generated@@425 $generated@@426) ($generated@@151 $generated@@424))))))) (= ($generated@@150 ($generated@@278 $generated@@422) $generated@@423) (ite ($generated@@298 $generated@@423) true (let (($generated@@427 ($generated@@271 $generated@@423)))
(let (($generated@@428 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@423)))))
(ite ($generated@@298 $generated@@427) true (let (($generated@@429 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@427)))))
 (and (<= $generated@@428 $generated@@429) ($generated@@150 $generated@@422 $generated@@427))))))))))
 :pattern ( ($generated@@150 ($generated@@278 $generated@@422) $generated@@423))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@431) $generated@@68)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@430 ($generated@@285 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@171) ($generated@@0 ($generated@@85 $generated@@430 $generated@@433))) ($generated@@319 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@85 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@78 $generated@@430 ($generated@@285 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@434) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@434 ($generated@@290 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@85 $generated@@434 $generated@@437))) ($generated@@319 $generated@@437 $generated@@435 $generated@@436))
 :pattern ( ($generated@@85 $generated@@434 $generated@@437))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@290 $generated@@435) $generated@@436))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@438 T@U) ($generated@@439 Int) ($generated@@440 T@U) ) (!  (=> (and (and (= (type $generated@@438) $generated@@138) (= (type $generated@@440) $generated@@139)) (or ($generated@@140 ($generated@@295 $generated@@439) ($generated@@279 $generated@@440)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@440 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@279 ($generated@@11 ($generated@@298 ($generated@@279 $generated@@440)))))) (let (($generated@@441 ($generated@@279 ($generated@@271 ($generated@@279 $generated@@440)))))
(let (($generated@@442 ($generated@@295 ($generated ($generated@@307 $generated@@2 ($generated@@270 ($generated@@279 $generated@@440)))))))
 (=> (< $generated@@442 ($generated@@295 $generated@@439)) ($generated@@140 ($generated@@295 $generated@@439) $generated@@441))))) (= ($generated@@137 ($generated@@278 $generated@@438) ($generated@@295 $generated@@439) ($generated@@279 $generated@@440)) (ite ($generated@@298 ($generated@@279 $generated@@440)) ($generated@@301 ($generated@@308 ($generated@@8 ($generated@@295 $generated@@439))) ($generated@@279 $generated@@177)) (let (($generated@@443 ($generated@@279 ($generated@@271 ($generated@@279 $generated@@440)))))
(let (($generated@@444 ($generated@@295 ($generated ($generated@@307 $generated@@2 ($generated@@270 ($generated@@279 $generated@@440)))))))
(ite (<= ($generated@@295 $generated@@439) $generated@@444) ($generated@@301 ($generated@@308 ($generated@@8 ($generated@@295 $generated@@439))) ($generated@@279 $generated@@440)) ($generated@@301 ($generated@@308 ($generated@@8 $generated@@444)) ($generated@@279 ($generated@@137 ($generated@@278 $generated@@438) ($generated@@295 $generated@@439) $generated@@443))))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@278 $generated@@438) ($generated@@295 $generated@@439) ($generated@@279 $generated@@440)))
))))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(= ($generated ($generated@@85 ($generated@@347 $generated@@446) $generated@@445)) 0))
 :pattern ( (let (($generated@@446 (type $generated@@445)))
($generated@@85 ($generated@@347 $generated@@446) $generated@@445)))
)))
(assert  (and (forall (($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@449)) ($generated@@80 $generated@@171 $generated@@4))
 :pattern ( ($generated@@447 $generated@@449))
)) (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@359 (type $generated@@450))))
(let (($generated@@452 ($generated@@358 (type $generated@@450))))
(= (type ($generated@@448 $generated@@450)) ($generated@@80 $generated@@452 $generated@@451))))
 :pattern ( ($generated@@448 $generated@@450))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) ($generated@@357 $generated@@171 $generated@@171)) (= (type $generated@@454) $generated@@171)) (= ($generated@@0 ($generated@@85 ($generated@@447 $generated@@453) $generated@@454))  (and ($generated@@0 ($generated@@85 ($generated@@355 $generated@@453) ($generated@@169 ($generated@@307 $generated@@139 $generated@@454)))) (= ($generated@@85 ($generated@@448 $generated@@453) ($generated@@169 ($generated@@307 $generated@@139 $generated@@454))) ($generated@@170 ($generated@@307 $generated@@139 $generated@@454))))))
 :pattern ( ($generated@@85 ($generated@@447 $generated@@453) $generated@@454))
)))
(assert  (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@457)) ($generated@@80 $generated@@171 $generated@@4))
 :pattern ( ($generated@@455 $generated@@457))
)) (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@377 (type $generated@@458))))
(let (($generated@@460 ($generated@@376 (type $generated@@458))))
(= (type ($generated@@456 $generated@@458)) ($generated@@80 $generated@@460 $generated@@459))))
 :pattern ( ($generated@@456 $generated@@458))
))))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) ($generated@@375 $generated@@171 $generated@@171)) (= (type $generated@@462) $generated@@171)) (= ($generated@@0 ($generated@@85 ($generated@@455 $generated@@461) $generated@@462))  (and ($generated@@0 ($generated@@85 ($generated@@373 $generated@@461) ($generated@@169 ($generated@@307 $generated@@139 $generated@@462)))) (= ($generated@@85 ($generated@@456 $generated@@461) ($generated@@169 ($generated@@307 $generated@@139 $generated@@462))) ($generated@@170 ($generated@@307 $generated@@139 $generated@@462))))))
 :pattern ( ($generated@@85 ($generated@@455 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@464)))
(let (($generated@@466 ($generated@@358 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@357 $generated@@466 $generated@@465)) (= ($generated@@0 ($generated@@85 ($generated@@398 $generated@@463) $generated@@464)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@466) (and ($generated@@0 ($generated@@85 ($generated@@355 $generated@@463) $generated@@467)) (= $generated@@464 ($generated@@85 ($generated@@448 $generated@@463) $generated@@467))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@463) $generated@@467))
 :pattern ( ($generated@@85 ($generated@@448 $generated@@463) $generated@@467))
))))))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
(let (($generated@@471 ($generated@@376 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@375 $generated@@471 $generated@@470)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@468) $generated@@469)) (exists (($generated@@472 T@U) ) (!  (and (= (type $generated@@472) $generated@@471) (and ($generated@@0 ($generated@@85 ($generated@@373 $generated@@468) $generated@@472)) (= $generated@@469 ($generated@@85 ($generated@@456 $generated@@468) $generated@@472))))
 :pattern ( ($generated@@85 ($generated@@373 $generated@@468) $generated@@472))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@468) $generated@@472))
))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@473 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (and (= (type $generated@@476) ($generated@@357 $generated@@171 $generated@@171)) (= (type $generated@@477) $generated@@68)) (= (type $generated@@478) $generated@@68)) (= (type $generated@@479) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479) (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@476) $generated@@480))) (and ($generated@@319 ($generated@@85 ($generated@@448 $generated@@476) $generated@@480) $generated@@478 $generated@@479) ($generated@@319 $generated@@480 $generated@@477 $generated@@479)))
 :pattern ( ($generated@@85 ($generated@@448 $generated@@476) $generated@@480))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@476) $generated@@480))
))))
 :pattern ( ($generated@@78 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (and (= (type $generated@@484) ($generated@@375 $generated@@171 $generated@@171)) (= (type $generated@@485) $generated@@68)) (= (type $generated@@486) $generated@@68)) (= (type $generated@@487) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@484 ($generated@@481 $generated@@485 $generated@@486) $generated@@487) (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@373 $generated@@484) $generated@@488))) (and ($generated@@319 ($generated@@85 ($generated@@456 $generated@@484) $generated@@488) $generated@@486 $generated@@487) ($generated@@319 $generated@@488 $generated@@485 $generated@@487)))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@484) $generated@@488))
 :pattern ( ($generated@@85 ($generated@@373 $generated@@484) $generated@@488))
))))
 :pattern ( ($generated@@78 $generated@@484 ($generated@@481 $generated@@485 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@139)) ($generated@@141 $generated@@490 ($generated@@142 $generated@@489))) (or ($generated@@298 $generated@@490) ($generated@@269 $generated@@490)))
 :pattern ( ($generated@@269 $generated@@490) ($generated@@141 $generated@@490 ($generated@@142 $generated@@489)))
 :pattern ( ($generated@@298 $generated@@490) ($generated@@141 $generated@@490 ($generated@@142 $generated@@489)))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@138) (= (type $generated@@492) $generated@@139)) (= ($generated@@150 $generated@@491 $generated@@492) ($generated@@150 $generated@@155 $generated@@492)))
 :pattern ( ($generated@@150 ($generated@@154 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@494 T@T) ) (! (= (type ($generated@@493 $generated@@494)) ($generated@@80 $generated@@494 $generated@@4))
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@377 (type $generated@@495))))
(let (($generated@@497 ($generated@@376 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@375 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@374 $generated@@497 $generated@@496)) (= ($generated@@373 $generated@@495) ($generated@@493 $generated@@497))))))
 :pattern ( ($generated@@373 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@377 (type $generated@@498))))
(let (($generated@@500 ($generated@@376 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@375 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@374 $generated@@500 $generated@@499)) (= ($generated@@409 $generated@@498) ($generated@@493 $generated@@499))))))
 :pattern ( ($generated@@409 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@377 (type $generated@@501))))
(let (($generated@@503 ($generated@@376 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@375 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@374 $generated@@503 $generated@@502)) (= ($generated@@455 $generated@@501) ($generated@@493 $generated@@171))))))
 :pattern ( ($generated@@455 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@359 (type $generated@@504))))
(let (($generated@@506 ($generated@@358 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@357 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@356 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@171) (= (type $generated@@508) $generated@@171)) ($generated@@0 ($generated@@85 ($generated@@447 $generated@@504) ($generated@@308 ($generated@@255 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@447 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@377 (type $generated@@509))))
(let (($generated@@511 ($generated@@376 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@375 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@374 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@171) (= (type $generated@@513) $generated@@171)) ($generated@@0 ($generated@@85 ($generated@@455 $generated@@509) ($generated@@308 ($generated@@255 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@455 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@171) ($generated@@256 $generated@@514 $generated@@46)) (and (= ($generated@@308 ($generated@@307 $generated@@2 $generated@@514)) $generated@@514) ($generated@@141 ($generated@@307 $generated@@2 $generated@@514) $generated@@46)))
 :pattern ( ($generated@@256 $generated@@514 $generated@@46))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@171) ($generated@@256 $generated@@515 $generated@@47)) (and (= ($generated@@308 ($generated@@307 $generated@@3 $generated@@515)) $generated@@515) ($generated@@141 ($generated@@307 $generated@@3 $generated@@515) $generated@@47)))
 :pattern ( ($generated@@256 $generated@@515 $generated@@47))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@171) ($generated@@256 $generated@@516 $generated@@44)) (and (= ($generated@@308 ($generated@@307 $generated@@4 $generated@@516)) $generated@@516) ($generated@@141 ($generated@@307 $generated@@4 $generated@@516) $generated@@44)))
 :pattern ( ($generated@@256 $generated@@516 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@517) 21))
(assert (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@171) ($generated@@256 $generated@@518 $generated@@45)) (and (= ($generated@@308 ($generated@@307 $generated@@517 $generated@@518)) $generated@@518) ($generated@@141 ($generated@@307 $generated@@517 $generated@@518) $generated@@45)))
 :pattern ( ($generated@@256 $generated@@518 $generated@@45))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@138) (= (type $generated@@520) $generated@@139)) (= ($generated@@150 ($generated@@278 $generated@@519) $generated@@520) ($generated@@150 $generated@@519 $generated@@520)))
 :pattern ( ($generated@@150 ($generated@@278 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@256 ($generated@@308 $generated@@521) $generated@@522) ($generated@@141 $generated@@521 $generated@@522)))
 :pattern ( ($generated@@256 ($generated@@308 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@83 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@80 $generated@@524 $generated@@2)) (<= 0 ($generated@@346 $generated@@523))))
 :pattern ( ($generated@@346 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@337 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@336 $generated@@526)) (<= 0 ($generated@@335 $generated@@525))))
 :pattern ( ($generated@@335 $generated@@525))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@527 ($generated@@473 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@473 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@531 ($generated@@473 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@473 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (= ($generated@@76 ($generated@@473 $generated@@535 $generated@@536)) $generated@@58))
 :pattern ( ($generated@@473 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@68) (= (type $generated@@540) $generated@@68)) (= ($generated@@537 ($generated@@481 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@481 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@68) (= (type $generated@@544) $generated@@68)) (= ($generated@@541 ($generated@@481 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@481 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@68) (= (type $generated@@546) $generated@@68)) (= ($generated@@76 ($generated@@481 $generated@@545 $generated@@546)) $generated@@59))
 :pattern ( ($generated@@481 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@171) (= (type $generated@@548) $generated@@171)) (= ($generated@@176 ($generated@@255 $generated@@547 $generated@@548)) $generated@@61))
 :pattern ( ($generated@@255 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@68)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@68) (= (type $generated@@552) $generated@@68)) (= ($generated@@549 ($generated@@162 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@162 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@68)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@68) (= (type $generated@@556) $generated@@68)) (= ($generated@@553 ($generated@@162 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@162 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@171) (= (type $generated@@558) $generated@@171)) (= ($generated@@169 ($generated@@255 $generated@@557 $generated@@558)) $generated@@557))
 :pattern ( ($generated@@255 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@171)) (= ($generated@@170 ($generated@@255 $generated@@559 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@255 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@171) (= (type $generated@@562) $generated@@139)) (= ($generated@@176 ($generated@@301 $generated@@561 $generated@@562)) $generated@@65))
 :pattern ( ($generated@@301 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@171) (= (type $generated@@564) $generated@@139)) (= ($generated@@270 ($generated@@301 $generated@@563 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@301 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@171) (= (type $generated@@566) $generated@@139)) (= ($generated@@271 ($generated@@301 $generated@@565 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@301 $generated@@565 $generated@@566))
)))
(assert  (and (forall (($generated@@569 T@U) ) (! (= (type ($generated@@567 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@569))
)) (forall (($generated@@570 T@U) ($generated@@571 Int) ) (! (let (($generated@@572 ($generated@@337 (type $generated@@570))))
(= (type ($generated@@568 $generated@@570 $generated@@571)) $generated@@572))
 :pattern ( ($generated@@568 $generated@@570 $generated@@571))
))))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@336 $generated@@171)) (= (type $generated@@574) $generated@@68)) (= (type $generated@@575) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@573 ($generated@@567 $generated@@574) $generated@@575) (forall (($generated@@576 Int) ) (!  (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@335 $generated@@573))) ($generated@@319 ($generated@@568 $generated@@573 $generated@@576) $generated@@574 $generated@@575))
 :pattern ( ($generated@@568 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@78 $generated@@573 ($generated@@567 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@577 ($generated@@79 $generated@@578)) $generated@@578)
 :pattern ( ($generated@@79 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@68)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@579 ($generated@@285 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@285 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@68) (= ($generated@@76 ($generated@@285 $generated@@582)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@68)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@68) (= ($generated@@583 ($generated@@290 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@290 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@68) (= ($generated@@76 ($generated@@290 $generated@@586)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@68)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@68) (= ($generated@@587 ($generated@@179 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@179 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@68) (= ($generated@@76 ($generated@@179 $generated@@590)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@68)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@68) (= ($generated@@591 ($generated@@567 $generated@@593)) $generated@@593))
 :pattern ( ($generated@@567 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@68) (= ($generated@@76 ($generated@@567 $generated@@594)) $generated@@57))
 :pattern ( ($generated@@567 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@68)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@68) (= ($generated@@595 ($generated@@142 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@142 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
(= ($generated@@307 $generated@@599 ($generated@@308 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@308 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@600) ($generated@@357 $generated@@171 $generated@@171)) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) $generated@@68)) (= ($generated@@141 $generated@@600 ($generated@@473 $generated@@601 $generated@@602)) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@600) $generated@@603))) (and ($generated@@256 ($generated@@85 ($generated@@448 $generated@@600) $generated@@603) $generated@@602) ($generated@@256 $generated@@603 $generated@@601)))
 :pattern ( ($generated@@85 ($generated@@448 $generated@@600) $generated@@603))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@600) $generated@@603))
))))
 :pattern ( ($generated@@141 $generated@@600 ($generated@@473 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@604) ($generated@@375 $generated@@171 $generated@@171)) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@68)) (= ($generated@@141 $generated@@604 ($generated@@481 $generated@@605 $generated@@606)) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@373 $generated@@604) $generated@@607))) (and ($generated@@256 ($generated@@85 ($generated@@456 $generated@@604) $generated@@607) $generated@@606) ($generated@@256 $generated@@607 $generated@@605)))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@604) $generated@@607))
 :pattern ( ($generated@@85 ($generated@@373 $generated@@604) $generated@@607))
))))
 :pattern ( ($generated@@141 $generated@@604 ($generated@@481 $generated@@605 $generated@@606)))
)))
(assert  (=> (<= 3 $generated@@136) (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (and (= (type $generated@@608) $generated@@139) (or ($generated@@277 $generated@@608 $generated@@609) (and (not (= 3 $generated@@136)) (and ($generated@@141 $generated@@608 ($generated@@142 $generated@@46)) ($generated@@150 ($generated@@278 $generated@@155) $generated@@608))))) ($generated@@150 ($generated@@278 $generated@@155) ($generated@@137 ($generated@@278 $generated@@155) $generated@@609 $generated@@608)))
 :pattern ( ($generated@@276 $generated@@608 $generated@@609))
))))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@171) (= (type $generated@@613) $generated@@171)) (< ($generated@@610 $generated@@612) ($generated@@611 ($generated@@255 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@255 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@171) (= (type $generated@@615) $generated@@171)) (< ($generated@@610 $generated@@615) ($generated@@611 ($generated@@255 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@255 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@171) (= (type $generated@@617) $generated@@139)) (< ($generated@@610 $generated@@616) ($generated@@611 ($generated@@301 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@301 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@171) (= (type $generated@@619) $generated@@139)) (< ($generated@@611 $generated@@619) ($generated@@611 ($generated@@301 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@301 $generated@@618 $generated@@619))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@138) (= (type $generated@@621) $generated@@139)) (or ($generated@@151 ($generated@@279 $generated@@621)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@621 ($generated@@142 $generated@@46))))) (and (=> (not ($generated@@0 ($generated@@279 ($generated@@11 ($generated@@298 ($generated@@279 $generated@@621)))))) (let (($generated@@622 ($generated@@279 ($generated@@271 ($generated@@279 $generated@@621)))))
(let (($generated@@623 ($generated@@295 ($generated ($generated@@307 $generated@@2 ($generated@@270 ($generated@@279 $generated@@621)))))))
 (=> (not ($generated@@298 $generated@@622)) (let (($generated@@624 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@622)))))
 (=> (<= $generated@@623 $generated@@624) ($generated@@151 $generated@@622))))))) (= ($generated@@150 ($generated@@278 $generated@@620) ($generated@@279 $generated@@621)) (ite ($generated@@298 ($generated@@279 $generated@@621)) true (let (($generated@@625 ($generated@@279 ($generated@@271 ($generated@@279 $generated@@621)))))
(let (($generated@@626 ($generated@@295 ($generated ($generated@@307 $generated@@2 ($generated@@270 ($generated@@279 $generated@@621)))))))
(ite ($generated@@298 $generated@@625) true (let (($generated@@627 ($generated@@295 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@625))))))
 (and (<= $generated@@626 $generated@@627) ($generated@@150 ($generated@@278 $generated@@620) $generated@@625))))))))))
 :weight 3
 :pattern ( ($generated@@150 ($generated@@278 $generated@@620) ($generated@@279 $generated@@621)))
))))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@171) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@256 $generated@@628 ($generated@@473 $generated@@629 $generated@@630))) (and (= ($generated@@308 ($generated@@307 ($generated@@357 $generated@@171 $generated@@171) $generated@@628)) $generated@@628) ($generated@@141 ($generated@@307 ($generated@@357 $generated@@171 $generated@@171) $generated@@628) ($generated@@473 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@256 $generated@@628 ($generated@@473 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@171) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@256 $generated@@631 ($generated@@481 $generated@@632 $generated@@633))) (and (= ($generated@@308 ($generated@@307 ($generated@@375 $generated@@171 $generated@@171) $generated@@631)) $generated@@631) ($generated@@141 ($generated@@307 ($generated@@375 $generated@@171 $generated@@171) $generated@@631) ($generated@@481 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@256 $generated@@631 ($generated@@481 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@68) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) $generated@@171)) ($generated@@256 $generated@@636 ($generated@@162 $generated@@634 $generated@@635))) (and (= ($generated@@308 ($generated@@307 $generated@@139 $generated@@636)) $generated@@636) ($generated@@141 ($generated@@307 $generated@@139 $generated@@636) ($generated@@162 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@256 $generated@@636 ($generated@@162 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@139) (= (type $generated@@638) $generated@@68)) (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@639) (and ($generated@@269 $generated@@637) ($generated@@78 $generated@@637 ($generated@@142 $generated@@638) $generated@@639)))) ($generated@@319 ($generated@@270 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@319 ($generated@@270 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@640)))
 (not ($generated@@0 ($generated@@85 ($generated@@493 $generated@@641) $generated@@640))))
 :pattern ( (let (($generated@@641 (type $generated@@640)))
($generated@@85 ($generated@@493 $generated@@641) $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@68) (= (type $generated@@643) $generated@@68)) (and (= ($generated@@76 ($generated@@162 $generated@@642 $generated@@643)) $generated@@62) (= ($generated@@352 ($generated@@162 $generated@@642 $generated@@643)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@139) (= ($generated@@610 ($generated@@308 $generated@@644)) ($generated@@611 $generated@@644)))
 :pattern ( ($generated@@610 ($generated@@308 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@171) ($generated@@256 $generated@@645 ($generated@@79 0))) (and (= ($generated@@308 ($generated@@307 $generated@@2 $generated@@645)) $generated@@645) ($generated@@141 ($generated@@307 ($generated@@80 $generated@@171 $generated@@4) $generated@@645) ($generated@@79 0))))
 :pattern ( ($generated@@256 $generated@@645 ($generated@@79 0)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@171) (= (type $generated@@647) $generated@@68)) ($generated@@256 $generated@@646 ($generated@@285 $generated@@647))) (and (= ($generated@@308 ($generated@@307 ($generated@@80 $generated@@171 $generated@@4) $generated@@646)) $generated@@646) ($generated@@141 ($generated@@307 ($generated@@80 $generated@@171 $generated@@4) $generated@@646) ($generated@@285 $generated@@647))))
 :pattern ( ($generated@@256 $generated@@646 ($generated@@285 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) $generated@@171) (= (type $generated@@649) $generated@@68)) ($generated@@256 $generated@@648 ($generated@@290 $generated@@649))) (and (= ($generated@@308 ($generated@@307 ($generated@@80 $generated@@171 $generated@@4) $generated@@648)) $generated@@648) ($generated@@141 ($generated@@307 ($generated@@80 $generated@@171 $generated@@4) $generated@@648) ($generated@@290 $generated@@649))))
 :pattern ( ($generated@@256 $generated@@648 ($generated@@290 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@650) $generated@@171) (= (type $generated@@651) $generated@@68)) ($generated@@256 $generated@@650 ($generated@@179 $generated@@651))) (and (= ($generated@@308 ($generated@@307 ($generated@@80 $generated@@171 $generated@@2) $generated@@650)) $generated@@650) ($generated@@141 ($generated@@307 ($generated@@80 $generated@@171 $generated@@2) $generated@@650) ($generated@@179 $generated@@651))))
 :pattern ( ($generated@@256 $generated@@650 ($generated@@179 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (= (type $generated@@652) $generated@@171) (= (type $generated@@653) $generated@@68)) ($generated@@256 $generated@@652 ($generated@@567 $generated@@653))) (and (= ($generated@@308 ($generated@@307 ($generated@@336 $generated@@171) $generated@@652)) $generated@@652) ($generated@@141 ($generated@@307 ($generated@@336 $generated@@171) $generated@@652) ($generated@@567 $generated@@653))))
 :pattern ( ($generated@@256 $generated@@652 ($generated@@567 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@68) (= (type $generated@@655) $generated@@171)) ($generated@@256 $generated@@655 ($generated@@142 $generated@@654))) (and (= ($generated@@308 ($generated@@307 $generated@@139 $generated@@655)) $generated@@655) ($generated@@141 ($generated@@307 $generated@@139 $generated@@655) ($generated@@142 $generated@@654))))
 :pattern ( ($generated@@256 $generated@@655 ($generated@@142 $generated@@654)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@139) (= (type $generated@@657) $generated@@68)) (= (type $generated@@658) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@658) (and ($generated@@269 $generated@@656) ($generated@@78 $generated@@656 ($generated@@142 $generated@@657) $generated@@658)))) ($generated@@78 ($generated@@271 $generated@@656) ($generated@@142 $generated@@657) $generated@@658))
 :pattern ( ($generated@@78 ($generated@@271 $generated@@656) ($generated@@142 $generated@@657) $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@659) ($generated@@80 $generated@@171 $generated@@2)) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@659 ($generated@@179 $generated@@660) $generated@@661) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@171) (< 0 ($generated ($generated@@85 $generated@@659 $generated@@662)))) ($generated@@319 $generated@@662 $generated@@660 $generated@@661))
 :pattern ( ($generated@@85 $generated@@659 $generated@@662))
))))
 :pattern ( ($generated@@78 $generated@@659 ($generated@@179 $generated@@660) $generated@@661))
)))
(assert (= $generated@@177 ($generated@@279 $generated@@177)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) $generated@@139) (= (type $generated@@664) $generated@@68)) (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@665) (and ($generated@@161 $generated@@663) (exists (($generated@@666 T@U) ) (!  (and (= (type $generated@@666) $generated@@68) ($generated@@78 $generated@@663 ($generated@@162 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@78 $generated@@663 ($generated@@162 $generated@@664 $generated@@666) $generated@@665))
))))) ($generated@@319 ($generated@@169 $generated@@663) $generated@@664 $generated@@665))
 :pattern ( ($generated@@319 ($generated@@169 $generated@@663) $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@139) (= (type $generated@@668) $generated@@68)) (= (type $generated@@669) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@669) (and ($generated@@161 $generated@@667) (exists (($generated@@670 T@U) ) (!  (and (= (type $generated@@670) $generated@@68) ($generated@@78 $generated@@667 ($generated@@162 $generated@@670 $generated@@668) $generated@@669))
 :pattern ( ($generated@@78 $generated@@667 ($generated@@162 $generated@@670 $generated@@668) $generated@@669))
))))) ($generated@@319 ($generated@@170 $generated@@667) $generated@@668 $generated@@669))
 :pattern ( ($generated@@319 ($generated@@170 $generated@@667) $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@171) (= (type $generated@@672) $generated@@171)) (= ($generated@@255 ($generated@@279 $generated@@671) ($generated@@279 $generated@@672)) ($generated@@279 ($generated@@255 $generated@@671 $generated@@672))))
 :pattern ( ($generated@@255 ($generated@@279 $generated@@671) ($generated@@279 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@171) (= (type $generated@@674) $generated@@139)) (= ($generated@@301 ($generated@@279 $generated@@673) ($generated@@279 $generated@@674)) ($generated@@279 ($generated@@301 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@301 ($generated@@279 $generated@@673) ($generated@@279 $generated@@674)))
)))
(assert (forall (($generated@@675 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@295 $generated@@675))) ($generated@@279 ($generated@@308 ($generated@@8 $generated@@675))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@295 $generated@@675))))
)))
(assert (forall (($generated@@676 T@U) ) (! (= ($generated@@308 ($generated@@279 $generated@@676)) ($generated@@279 ($generated@@308 $generated@@676)))
 :pattern ( ($generated@@308 ($generated@@279 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (! (let (($generated@@678 ($generated@@337 (type $generated@@677))))
 (=> (and (= (type $generated@@677) ($generated@@336 $generated@@678)) (= ($generated@@335 $generated@@677) 0)) (= $generated@@677 ($generated@@334 $generated@@678))))
 :pattern ( ($generated@@335 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (! (let (($generated@@682 (type $generated@@680)))
 (=> (and (and (= (type $generated@@679) ($generated@@80 $generated@@682 $generated@@2)) (= (type $generated@@681) $generated@@2)) (<= 0 ($generated $generated@@681))) (= ($generated@@346 ($generated@@86 $generated@@679 $generated@@680 $generated@@681)) (+ (- ($generated@@346 $generated@@679) ($generated ($generated@@85 $generated@@679 $generated@@680))) ($generated $generated@@681)))))
 :pattern ( ($generated@@346 ($generated@@86 $generated@@679 $generated@@680 $generated@@681)))
)))
(assert  (=> (<= 3 $generated@@136) (forall (($generated@@683 T@U) ($generated@@684 Int) ) (!  (=> (and (= (type $generated@@683) $generated@@139) (or ($generated@@277 ($generated@@279 $generated@@683) ($generated@@295 $generated@@684)) (and (not (= 3 $generated@@136)) (and ($generated@@141 $generated@@683 ($generated@@142 $generated@@46)) ($generated@@0 ($generated@@279 ($generated@@11 ($generated@@150 ($generated@@278 $generated@@155) ($generated@@279 $generated@@683))))))))) (= ($generated@@276 ($generated@@279 $generated@@683) ($generated@@295 $generated@@684)) ($generated@@0 ($generated@@279 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@276 ($generated@@279 $generated@@683) ($generated@@295 $generated@@684)))
))))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@686) $generated@@2)) ($generated@@78 $generated@@686 $generated@@46 $generated@@685))
 :pattern ( ($generated@@78 $generated@@686 $generated@@46 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@688) $generated@@3)) ($generated@@78 $generated@@688 $generated@@47 $generated@@687))
 :pattern ( ($generated@@78 $generated@@688 $generated@@47 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@690) $generated@@4)) ($generated@@78 $generated@@690 $generated@@44 $generated@@689))
 :pattern ( ($generated@@78 $generated@@690 $generated@@44 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@692) $generated@@517)) ($generated@@78 $generated@@692 $generated@@45 $generated@@691))
 :pattern ( ($generated@@78 $generated@@692 $generated@@45 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@694) $generated@@171)) ($generated@@78 $generated@@694 $generated@@48 $generated@@693))
 :pattern ( ($generated@@78 $generated@@694 $generated@@48 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@695) $generated@@68) (= (type $generated@@696) $generated@@171)) (= (type $generated@@697) $generated@@139)) (= (type $generated@@698) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@252 $generated@@698)) (= ($generated@@78 ($generated@@301 $generated@@696 $generated@@697) ($generated@@142 $generated@@695) $generated@@698)  (and ($generated@@319 $generated@@696 $generated@@695 $generated@@698) ($generated@@78 $generated@@697 ($generated@@142 $generated@@695) $generated@@698))))
 :pattern ( ($generated@@78 ($generated@@301 $generated@@696 $generated@@697) ($generated@@142 $generated@@695) $generated@@698))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@336 $generated@@171)) (= (type $generated@@700) $generated@@68)) (= ($generated@@141 $generated@@699 ($generated@@567 $generated@@700)) (forall (($generated@@701 Int) ) (!  (=> (and (<= 0 $generated@@701) (< $generated@@701 ($generated@@335 $generated@@699))) ($generated@@256 ($generated@@568 $generated@@699 $generated@@701) $generated@@700))
 :pattern ( ($generated@@568 $generated@@699 $generated@@701))
))))
 :pattern ( ($generated@@141 $generated@@699 ($generated@@567 $generated@@700)))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 Int) ) (!  (=> (= (type $generated@@703) ($generated@@336 $generated@@171)) (=> (and (<= 0 $generated@@704) (< $generated@@704 ($generated@@335 $generated@@703))) (< ($generated@@611 ($generated@@307 $generated@@139 ($generated@@568 $generated@@703 $generated@@704))) ($generated@@702 $generated@@703))))
 :pattern ( ($generated@@611 ($generated@@307 $generated@@139 ($generated@@568 $generated@@703 $generated@@704))))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) ($generated@@357 $generated@@171 $generated@@171)) (= (type $generated@@706) $generated@@68)) (= (type $generated@@707) $generated@@68)) ($generated@@141 $generated@@705 ($generated@@473 $generated@@706 $generated@@707))) (and (and ($generated@@141 ($generated@@355 $generated@@705) ($generated@@285 $generated@@706)) ($generated@@141 ($generated@@398 $generated@@705) ($generated@@285 $generated@@707))) ($generated@@141 ($generated@@447 $generated@@705) ($generated@@285 ($generated@@162 $generated@@706 $generated@@707)))))
 :pattern ( ($generated@@141 $generated@@705 ($generated@@473 $generated@@706 $generated@@707)))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (and (= (type $generated@@708) ($generated@@375 $generated@@171 $generated@@171)) (= (type $generated@@709) $generated@@68)) (= (type $generated@@710) $generated@@68)) ($generated@@141 $generated@@708 ($generated@@481 $generated@@709 $generated@@710))) (and (and ($generated@@141 ($generated@@373 $generated@@708) ($generated@@290 $generated@@709)) ($generated@@141 ($generated@@409 $generated@@708) ($generated@@290 $generated@@710))) ($generated@@141 ($generated@@455 $generated@@708) ($generated@@290 ($generated@@162 $generated@@709 $generated@@710)))))
 :pattern ( ($generated@@141 $generated@@708 ($generated@@481 $generated@@709 $generated@@710)))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@2) ($generated@@141 $generated@@711 $generated@@46))
 :pattern ( ($generated@@141 $generated@@711 $generated@@46))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@3) ($generated@@141 $generated@@712 $generated@@47))
 :pattern ( ($generated@@141 $generated@@712 $generated@@47))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@4) ($generated@@141 $generated@@713 $generated@@44))
 :pattern ( ($generated@@141 $generated@@713 $generated@@44))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@517) ($generated@@141 $generated@@714 $generated@@45))
 :pattern ( ($generated@@141 $generated@@714 $generated@@45))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@171) ($generated@@141 $generated@@715 $generated@@48))
 :pattern ( ($generated@@141 $generated@@715 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@716 () Int)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 (T@U) Bool)
(declare-fun $generated@@723 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@717) $generated@@139) (= (type $generated@@718) ($generated@@186 $generated@@81 $generated@@4))) (= (type $generated@@719) $generated@@81)) (= (type $generated@@720) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@721) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@723) ($generated@@186 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@724  (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@151 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (or ($generated@@150 ($generated@@278 $generated@@155) ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (=> ($generated@@298 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) ($generated@@0 ($generated@@279 ($generated@@11 true))))))) (=> (=> ($generated@@151 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (or ($generated@@150 ($generated@@278 $generated@@155) ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (=> ($generated@@298 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) ($generated@@0 ($generated@@279 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@151 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (or ($generated@@150 ($generated@@278 $generated@@155) ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (=> (not ($generated@@298 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717))) (let (($generated@@725 ($generated@@271 ($generated@@137 ($generated@@278 ($generated@@278 $generated@@155)) $generated@@716 $generated@@717))))
 (=> ($generated@@298 $generated@@725) ($generated@@0 ($generated@@279 ($generated@@11 true))))))))) (=> (=> ($generated@@151 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (or ($generated@@150 ($generated@@278 $generated@@155) ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (=> (not ($generated@@298 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717))) (let (($generated@@726 ($generated@@271 ($generated@@137 ($generated@@278 ($generated@@278 $generated@@155)) $generated@@716 $generated@@717))))
 (=> ($generated@@298 $generated@@726) ($generated@@0 ($generated@@279 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@151 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (or ($generated@@150 ($generated@@278 $generated@@155) ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (=> (not ($generated@@298 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717))) (let (($generated@@727 ($generated@@271 ($generated@@137 ($generated@@278 ($generated@@278 $generated@@155)) $generated@@716 $generated@@717))))
(let (($generated@@728 ($generated ($generated@@307 $generated@@2 ($generated@@270 ($generated@@137 ($generated@@278 ($generated@@278 $generated@@155)) $generated@@716 $generated@@717))))))
 (=> (not ($generated@@298 $generated@@727)) (let (($generated@@729 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@727)))))
(<= $generated@@728 $generated@@729))))))))) (=> (=> ($generated@@151 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (or ($generated@@150 ($generated@@278 $generated@@155) ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (=> (not ($generated@@298 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717))) (let (($generated@@730 ($generated@@271 ($generated@@137 ($generated@@278 ($generated@@278 $generated@@155)) $generated@@716 $generated@@717))))
(let (($generated@@731 ($generated ($generated@@307 $generated@@2 ($generated@@270 ($generated@@137 ($generated@@278 ($generated@@278 $generated@@155)) $generated@@716 $generated@@717))))))
 (=> (not ($generated@@298 $generated@@730)) (let (($generated@@732 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@730)))))
(<= $generated@@731 $generated@@732)))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@151 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (or ($generated@@150 ($generated@@278 $generated@@155) ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (=> (not ($generated@@298 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717))) (let (($generated@@733 ($generated@@271 ($generated@@137 ($generated@@278 ($generated@@278 $generated@@155)) $generated@@716 $generated@@717))))
 (=> (not ($generated@@298 $generated@@733)) ($generated@@150 ($generated@@278 ($generated@@278 $generated@@155)) $generated@@733)))))))))))))))
(let (($generated@@734  (=> (= $generated@@718 ($generated@@240 $generated@@719 $generated@@720 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) (- 0 11)) (=> ($generated@@151 $generated@@717) (or ($generated@@150 ($generated@@278 $generated@@155) $generated@@717) (=> ($generated@@298 $generated@@717) ($generated@@0 ($generated@@279 ($generated@@11 true))))))) (=> (=> ($generated@@151 $generated@@717) (or ($generated@@150 ($generated@@278 $generated@@155) $generated@@717) (=> ($generated@@298 $generated@@717) ($generated@@0 ($generated@@279 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (=> ($generated@@151 $generated@@717) (or ($generated@@150 ($generated@@278 $generated@@155) $generated@@717) (=> (not ($generated@@298 $generated@@717)) (let (($generated@@735 ($generated@@271 $generated@@717)))
 (=> ($generated@@298 $generated@@735) ($generated@@0 ($generated@@279 ($generated@@11 true))))))))) (=> (=> ($generated@@151 $generated@@717) (or ($generated@@150 ($generated@@278 $generated@@155) $generated@@717) (=> (not ($generated@@298 $generated@@717)) (let (($generated@@736 ($generated@@271 $generated@@717)))
 (=> ($generated@@298 $generated@@736) ($generated@@0 ($generated@@279 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (=> ($generated@@151 $generated@@717) (or ($generated@@150 ($generated@@278 $generated@@155) $generated@@717) (=> (not ($generated@@298 $generated@@717)) (let (($generated@@737 ($generated@@271 $generated@@717)))
(let (($generated@@738 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@717)))))
 (=> (not ($generated@@298 $generated@@737)) (let (($generated@@739 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@737)))))
(<= $generated@@738 $generated@@739))))))))) (=> (=> ($generated@@151 $generated@@717) (or ($generated@@150 ($generated@@278 $generated@@155) $generated@@717) (=> (not ($generated@@298 $generated@@717)) (let (($generated@@740 ($generated@@271 $generated@@717)))
(let (($generated@@741 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@717)))))
 (=> (not ($generated@@298 $generated@@740)) (let (($generated@@742 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@740)))))
(<= $generated@@741 $generated@@742)))))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> ($generated@@151 $generated@@717) (or ($generated@@150 ($generated@@278 $generated@@155) $generated@@717) (=> (not ($generated@@298 $generated@@717)) (let (($generated@@743 ($generated@@271 $generated@@717)))
 (=> (not ($generated@@298 $generated@@743)) ($generated@@150 ($generated@@278 ($generated@@278 $generated@@155)) $generated@@743))))))) (=> (=> ($generated@@151 $generated@@717) (or ($generated@@150 ($generated@@278 $generated@@155) $generated@@717) (=> (not ($generated@@298 $generated@@717)) (let (($generated@@744 ($generated@@271 $generated@@717)))
 (=> (not ($generated@@298 $generated@@744)) ($generated@@150 ($generated@@278 ($generated@@278 $generated@@155)) $generated@@744)))))) (=> (and ($generated@@252 $generated@@721) ($generated@@722 $generated@@721)) (=> (and (and (and ($generated@@140 $generated@@716 $generated@@717) ($generated@@151 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717))) (and ($generated@@151 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (and ($generated@@150 ($generated@@278 $generated@@155) ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) (ite ($generated@@298 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717)) true (let (($generated@@745 ($generated@@271 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717))))
(let (($generated@@746 ($generated ($generated@@307 $generated@@2 ($generated@@270 ($generated@@137 ($generated@@278 $generated@@155) $generated@@716 $generated@@717))))))
(ite ($generated@@298 $generated@@745) true (let (($generated@@747 ($generated ($generated@@307 $generated@@2 ($generated@@270 $generated@@745)))))
 (and (<= $generated@@746 $generated@@747) ($generated@@150 ($generated@@278 $generated@@155) $generated@@745)))))))))) (and (and (= $generated@@720 $generated@@721) (= ($generated@@276 $generated@@717 $generated@@716) ($generated@@0 ($generated@@279 ($generated@@11 true))))) (and ($generated@@141 ($generated@@11 ($generated@@276 $generated@@717 $generated@@716)) $generated@@44) (= (ControlFlow 0 7) 3)))) $generated@@724)))))))))))))
(let (($generated@@748 true))
(let (($generated@@749  (=> (and (and (= $generated@@723 ($generated@@185 $generated@@719 $generated@@720 $generated@@60 false)) ($generated@@78 $generated@@717 ($generated@@142 $generated@@46) $generated@@720)) (and ($generated@@151 $generated@@717) ($generated@@150 ($generated@@278 $generated@@155) $generated@@717))) (and (=> (= (ControlFlow 0 12) 1) $generated@@748) (=> (= (ControlFlow 0 12) 7) $generated@@734)))))
(let (($generated@@750  (=> (and (and (and ($generated@@252 $generated@@720) ($generated@@722 $generated@@720)) ($generated@@141 $generated@@717 ($generated@@142 $generated@@46))) (and (= 3 $generated@@136) (= (ControlFlow 0 13) 12))) $generated@@749)))
$generated@@750))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
