(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 (T@T) T@U)
(declare-fun $generated@@138 (T@T) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U Int) T@U)
(declare-fun $generated@@230 (T@U) Int)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@361 (T@U T@U) Bool)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@T) T@U)
(declare-fun $generated@@451 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 (T@U) Bool)
(declare-fun $generated@@614 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert  (and (and (and (and (forall (($generated@@141 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@141)) 14)) (forall (($generated@@142 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@139 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@140 (type $generated@@143))))
(= (type ($generated@@136 $generated@@143)) ($generated@@76 $generated@@144 $generated@@2)))
 :pattern ( ($generated@@136 $generated@@143))
))) (forall (($generated@@145 T@T) ) (! (= (type ($generated@@137 $generated@@145)) ($generated@@139 $generated@@145))
 :pattern ( ($generated@@137 $generated@@145))
))) (forall (($generated@@146 T@T) ) (! (= (type ($generated@@138 $generated@@146)) ($generated@@76 $generated@@146 $generated@@2))
 :pattern ( ($generated@@138 $generated@@146))
))))
(assert (forall (($generated@@147 T@T) ) (= ($generated@@136 ($generated@@137 $generated@@147)) ($generated@@138 $generated@@147))))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@75 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@64) (= (type $generated@@156) $generated@@64)) (= (type $generated@@157) $generated@@152)) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156))) ($generated@@150 $generated@@157))
 :pattern ( ($generated@@150 $generated@@157) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@152) (= (type $generated@@165) $generated@@152)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@64)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@76 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@64)) ($generated@@148 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@148 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@140 (type $generated@@171))))
 (=> (= (type $generated@@171) ($generated@@139 $generated@@172)) ($generated@@167 ($generated@@136 $generated@@171))))
 :pattern ( ($generated@@136 $generated@@171))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 17)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@77 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@67 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@77) (= (type $generated@@223) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@224) ($generated@@66 $generated@@4))) (= (type $generated@@226) $generated@@77)) (= (type $generated@@227) ($generated@@66 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 Int) ) (! (let (($generated@@233 ($generated@@140 (type $generated@@231))))
(= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 (type $generated@@235)))
 (=> (= (type $generated@@234) ($generated@@139 $generated@@236)) (= (exists (($generated@@237 Int) ) (!  (and (and (<= 0 $generated@@237) (< $generated@@237 ($generated@@230 $generated@@234))) (= $generated@@235 ($generated@@229 $generated@@234 $generated@@237)))
 :pattern ( ($generated@@229 $generated@@234 $generated@@237))
)) (< 0 ($generated ($generated@@81 ($generated@@136 $generated@@234) $generated@@235))))))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@234) $generated@@235))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@152)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@161)) (= (type $generated@@245) $generated@@161)) (= ($generated@@148 ($generated@@238 $generated@@244 $generated@@245) ($generated@@151 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@148 ($generated@@238 $generated@@244 $generated@@245) ($generated@@151 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@152) (= (type $generated@@247) $generated@@152)) (= ($generated@@158 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@158 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@64)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@148 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@161) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@148 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@256) $generated@@64)) (= ($generated@@148 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@161) ($generated@@0 ($generated@@81 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@81 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@148 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@64) (= (type $generated@@267) $generated@@64)) (= (type $generated@@268) $generated@@161)) (= (type $generated@@269) $generated@@161)) (= (type $generated@@270) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@264 $generated@@270)) (= ($generated@@74 ($generated@@238 $generated@@268 $generated@@269) ($generated@@151 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@74 ($generated@@238 $generated@@268 $generated@@269) ($generated@@151 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@68)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@152) (= ($generated@@150 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@152) ($generated@@150 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@161) (= (type $generated@@276) $generated@@161)) (= $generated@@274 ($generated@@238 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@150 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@230 ($generated@@137 $generated@@277)) 0)
 :pattern ( ($generated@@137 $generated@@277))
)))
(assert (= (type $generated@@279) $generated@@64))
(assert ($generated@@278 $generated@@279))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@161)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@265 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@265 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@286) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@287) $generated@@161)) (= (type $generated@@288) $generated@@64)) ($generated@@132 $generated@@285 $generated@@286)) ($generated@@265 $generated@@287 $generated@@288 $generated@@285)) ($generated@@265 $generated@@287 $generated@@288 $generated@@286))
 :pattern ( ($generated@@132 $generated@@285 $generated@@286) ($generated@@265 $generated@@287 $generated@@288 $generated@@285))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@290) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@292) $generated@@64)) ($generated@@132 $generated@@289 $generated@@290)) ($generated@@74 $generated@@291 $generated@@292 $generated@@289)) ($generated@@74 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@132 $generated@@289 $generated@@290) ($generated@@74 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@79 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@295 $generated@@2)) (and (= (= ($generated@@293 $generated@@294) 0) (= $generated@@294 ($generated@@138 $generated@@295))) (=> (not (= ($generated@@293 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@81 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@167 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@293 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@167 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(let (($generated@@338 ($generated@@300 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@299 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@298 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@297 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@301 (type $generated@@343))))
(let (($generated@@345 ($generated@@300 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@299 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@298 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@319 (type $generated@@347))))
(let (($generated@@349 ($generated@@318 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@317 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@316 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@315 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@76 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@319 (type $generated@@354))))
(let (($generated@@356 ($generated@@318 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@317 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@316 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@76 $generated@@161 $generated@@2)) (= (type $generated@@359) $generated@@64)) (= ($generated@@148 $generated@@358 ($generated@@166 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@161) (< 0 ($generated ($generated@@81 $generated@@358 $generated@@360)))) ($generated@@239 $generated@@360 $generated@@359))
 :pattern ( ($generated@@81 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@148 $generated@@358 ($generated@@166 $generated@@359)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@79 (type $generated@@362))))
 (=> (and (= (type $generated@@362) ($generated@@76 $generated@@364 $generated@@2)) (= (type $generated@@363) ($generated@@76 $generated@@364 $generated@@2))) (= ($generated@@361 $generated@@362 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (= ($generated ($generated@@81 $generated@@362 $generated@@365)) ($generated ($generated@@81 $generated@@363 $generated@@365))))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
 :pattern ( ($generated@@81 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@366 ($generated@@248 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@161) ($generated@@0 ($generated@@81 $generated@@366 $generated@@369))) ($generated@@265 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@81 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@74 $generated@@366 ($generated@@248 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@371) $generated@@64)) (= (type $generated@@372) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@370 ($generated@@253 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@161) ($generated@@0 ($generated@@81 $generated@@370 $generated@@373))) ($generated@@265 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@81 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@74 $generated@@370 ($generated@@253 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@81 ($generated@@138 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@81 ($generated@@138 $generated@@375) $generated@@374)))
)))
(assert  (and (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@376 $generated@@379)) ($generated@@76 $generated@@161 $generated@@4))
 :pattern ( ($generated@@376 $generated@@379))
)) (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@377 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@377 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@301 (type $generated@@382))))
(let (($generated@@384 ($generated@@300 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@378 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@386) $generated@@161)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@385) ($generated@@159 ($generated@@377 $generated@@152 $generated@@386)))) (= ($generated@@81 ($generated@@378 $generated@@385) ($generated@@159 ($generated@@377 $generated@@152 $generated@@386))) ($generated@@160 ($generated@@377 $generated@@152 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@76 $generated@@161 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@319 (type $generated@@390))))
(let (($generated@@392 ($generated@@318 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@76 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@394) $generated@@161)) (= ($generated@@0 ($generated@@81 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@393) ($generated@@159 ($generated@@377 $generated@@152 $generated@@394)))) (= ($generated@@81 ($generated@@388 $generated@@393) ($generated@@159 ($generated@@377 $generated@@152 $generated@@394))) ($generated@@160 ($generated@@377 $generated@@152 $generated@@394))))))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@300 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@299 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@378 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@318 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@317 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@81 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@408) $generated@@412))) (and ($generated@@265 ($generated@@81 ($generated@@378 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@265 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@416) $generated@@420))) (and ($generated@@265 ($generated@@81 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@265 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@79 (type $generated@@421))))
 (=> (and (and (= (type $generated@@421) ($generated@@76 $generated@@423 $generated@@2)) (= (type $generated@@422) ($generated@@76 $generated@@423 $generated@@2))) ($generated@@361 $generated@@421 $generated@@422)) (= $generated@@421 $generated@@422)))
 :pattern ( ($generated@@361 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@424) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@425) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@426) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@424 $generated@@426))) (and ($generated@@132 $generated@@424 $generated@@425) ($generated@@132 $generated@@425 $generated@@426))) ($generated@@132 $generated@@424 $generated@@426))
 :pattern ( ($generated@@132 $generated@@424 $generated@@425) ($generated@@132 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@T) ) (! (= (type ($generated@@427 $generated@@428)) ($generated@@76 $generated@@428 $generated@@4))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@319 (type $generated@@429))))
(let (($generated@@431 ($generated@@318 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@317 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@316 $generated@@431 $generated@@430)) (= ($generated@@315 $generated@@429) ($generated@@427 $generated@@431))))))
 :pattern ( ($generated@@315 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@319 (type $generated@@432))))
(let (($generated@@434 ($generated@@318 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@317 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@316 $generated@@434 $generated@@433)) (= ($generated@@351 $generated@@432) ($generated@@427 $generated@@433))))))
 :pattern ( ($generated@@351 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@319 (type $generated@@435))))
(let (($generated@@437 ($generated@@318 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@317 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@316 $generated@@437 $generated@@436)) (= ($generated@@387 $generated@@435) ($generated@@427 $generated@@161))))))
 :pattern ( ($generated@@387 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@301 (type $generated@@438))))
(let (($generated@@440 ($generated@@300 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@299 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@298 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@161) (= (type $generated@@442) $generated@@161)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@438) ($generated@@280 ($generated@@238 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@376 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@319 (type $generated@@443))))
(let (($generated@@445 ($generated@@318 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@317 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@316 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@161) (= (type $generated@@447) $generated@@161)) ($generated@@0 ($generated@@81 ($generated@@387 $generated@@443) ($generated@@280 ($generated@@238 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@387 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@161) ($generated@@239 $generated@@448 $generated@@46)) (and (= ($generated@@280 ($generated@@377 $generated@@2 $generated@@448)) $generated@@448) ($generated@@148 ($generated@@377 $generated@@2 $generated@@448) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@448 $generated@@46))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@161) ($generated@@239 $generated@@449 $generated@@47)) (and (= ($generated@@280 ($generated@@377 $generated@@3 $generated@@449)) $generated@@449) ($generated@@148 ($generated@@377 $generated@@3 $generated@@449) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@449 $generated@@47))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@161) ($generated@@239 $generated@@450 $generated@@44)) (and (= ($generated@@280 ($generated@@377 $generated@@4 $generated@@450)) $generated@@450) ($generated@@148 ($generated@@377 $generated@@4 $generated@@450) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@450 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@451) 20))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@161) ($generated@@239 $generated@@452 $generated@@45)) (and (= ($generated@@280 ($generated@@377 $generated@@451 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@377 $generated@@451 $generated@@452) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@452 $generated@@45))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@64) (= ($generated@@239 ($generated@@280 $generated@@453) $generated@@454) ($generated@@148 $generated@@453 $generated@@454)))
 :pattern ( ($generated@@239 ($generated@@280 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@79 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@76 $generated@@456 $generated@@2)) (<= 0 ($generated@@293 $generated@@455))))
 :pattern ( ($generated@@293 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@140 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@139 $generated@@458)) (<= 0 ($generated@@230 $generated@@457))))
 :pattern ( ($generated@@230 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) ($generated@@278 $generated@@459)) (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@461) $generated@@161)) ($generated@@239 $generated@@461 $generated@@459)) ($generated@@265 $generated@@461 $generated@@459 $generated@@460))
 :pattern ( ($generated@@265 $generated@@461 $generated@@459 $generated@@460))
)))
 :pattern ( ($generated@@278 $generated@@459))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@405 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@405 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@405 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@405 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@413 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@413 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@413 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@413 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@72 ($generated@@413 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@161) (= (type $generated@@483) $generated@@161)) (= ($generated@@271 ($generated@@238 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@238 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@151 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@151 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@151 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@151 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@161) (= (type $generated@@493) $generated@@161)) (= ($generated@@159 ($generated@@238 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@238 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@161) (= (type $generated@@495) $generated@@161)) (= ($generated@@160 ($generated@@238 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@238 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@139 $generated@@161)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@498 ($generated@@496 $generated@@499) $generated@@500) (forall (($generated@@501 Int) ) (!  (=> (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@230 $generated@@498))) ($generated@@265 ($generated@@229 $generated@@498 $generated@@501) $generated@@499 $generated@@500))
 :pattern ( ($generated@@229 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@74 $generated@@498 ($generated@@496 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@75 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@75 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@248 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@248 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@248 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@253 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@253 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@166 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@166 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@166 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@496 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@496 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@496 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated@@377 $generated@@521 ($generated@@280 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@280 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) (= ($generated@@148 $generated@@522 ($generated@@405 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@522) $generated@@525))) (and ($generated@@239 ($generated@@81 ($generated@@378 $generated@@522) $generated@@525) $generated@@524) ($generated@@239 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@522) $generated@@525))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@148 $generated@@522 ($generated@@405 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) (= ($generated@@148 $generated@@526 ($generated@@413 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@526) $generated@@529))) (and ($generated@@239 ($generated@@81 ($generated@@388 $generated@@526) $generated@@529) $generated@@528) ($generated@@239 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@526) $generated@@529))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@148 $generated@@526 ($generated@@413 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) (= (type $generated@@533) $generated@@161)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@238 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@238 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@161) (= (type $generated@@535) $generated@@161)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@238 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@238 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@161) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) ($generated@@239 $generated@@536 ($generated@@405 $generated@@537 $generated@@538))) (and (= ($generated@@280 ($generated@@377 ($generated@@299 $generated@@161 $generated@@161) $generated@@536)) $generated@@536) ($generated@@148 ($generated@@377 ($generated@@299 $generated@@161 $generated@@161) $generated@@536) ($generated@@405 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@239 $generated@@536 ($generated@@405 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@161) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) ($generated@@239 $generated@@539 ($generated@@413 $generated@@540 $generated@@541))) (and (= ($generated@@280 ($generated@@377 ($generated@@317 $generated@@161 $generated@@161) $generated@@539)) $generated@@539) ($generated@@148 ($generated@@377 ($generated@@317 $generated@@161 $generated@@161) $generated@@539) ($generated@@413 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@239 $generated@@539 ($generated@@413 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@161)) ($generated@@239 $generated@@544 ($generated@@151 $generated@@542 $generated@@543))) (and (= ($generated@@280 ($generated@@377 $generated@@152 $generated@@544)) $generated@@544) ($generated@@148 ($generated@@377 $generated@@152 $generated@@544) ($generated@@151 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@239 $generated@@544 ($generated@@151 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@81 ($generated@@427 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@81 ($generated@@427 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@69)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (and (= ($generated@@72 ($generated@@151 $generated@@549 $generated@@550)) $generated@@62) (= ($generated@@547 ($generated@@151 $generated@@549 $generated@@550)) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@152) (= ($generated@@530 ($generated@@280 $generated@@551)) ($generated@@531 $generated@@551)))
 :pattern ( ($generated@@530 ($generated@@280 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@140 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@139 $generated@@553)) (= ($generated@@293 ($generated@@136 $generated@@552)) ($generated@@230 $generated@@552))))
 :pattern ( ($generated@@293 ($generated@@136 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@161) ($generated@@239 $generated@@554 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@377 $generated@@2 $generated@@554)) $generated@@554) ($generated@@148 ($generated@@377 ($generated@@76 $generated@@161 $generated@@4) $generated@@554) ($generated@@75 0))))
 :pattern ( ($generated@@239 $generated@@554 ($generated@@75 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@161) (= (type $generated@@556) $generated@@64)) ($generated@@239 $generated@@555 ($generated@@248 $generated@@556))) (and (= ($generated@@280 ($generated@@377 ($generated@@76 $generated@@161 $generated@@4) $generated@@555)) $generated@@555) ($generated@@148 ($generated@@377 ($generated@@76 $generated@@161 $generated@@4) $generated@@555) ($generated@@248 $generated@@556))))
 :pattern ( ($generated@@239 $generated@@555 ($generated@@248 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@161) (= (type $generated@@558) $generated@@64)) ($generated@@239 $generated@@557 ($generated@@253 $generated@@558))) (and (= ($generated@@280 ($generated@@377 ($generated@@76 $generated@@161 $generated@@4) $generated@@557)) $generated@@557) ($generated@@148 ($generated@@377 ($generated@@76 $generated@@161 $generated@@4) $generated@@557) ($generated@@253 $generated@@558))))
 :pattern ( ($generated@@239 $generated@@557 ($generated@@253 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@161) (= (type $generated@@560) $generated@@64)) ($generated@@239 $generated@@559 ($generated@@166 $generated@@560))) (and (= ($generated@@280 ($generated@@377 ($generated@@76 $generated@@161 $generated@@2) $generated@@559)) $generated@@559) ($generated@@148 ($generated@@377 ($generated@@76 $generated@@161 $generated@@2) $generated@@559) ($generated@@166 $generated@@560))))
 :pattern ( ($generated@@239 $generated@@559 ($generated@@166 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@161) (= (type $generated@@562) $generated@@64)) ($generated@@239 $generated@@561 ($generated@@496 $generated@@562))) (and (= ($generated@@280 ($generated@@377 ($generated@@139 $generated@@161) $generated@@561)) $generated@@561) ($generated@@148 ($generated@@377 ($generated@@139 $generated@@161) $generated@@561) ($generated@@496 $generated@@562))))
 :pattern ( ($generated@@239 $generated@@561 ($generated@@496 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@76 $generated@@161 $generated@@2)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@563 ($generated@@166 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@161) (< 0 ($generated ($generated@@81 $generated@@563 $generated@@566)))) ($generated@@265 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@81 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@166 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@152) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@264 $generated@@569) (and ($generated@@150 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@64) ($generated@@74 $generated@@567 ($generated@@151 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@151 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@265 ($generated@@159 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@265 ($generated@@159 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@152) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@264 $generated@@573) (and ($generated@@150 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@64) ($generated@@74 $generated@@571 ($generated@@151 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@74 $generated@@571 ($generated@@151 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@265 ($generated@@160 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@265 ($generated@@160 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@161) (= (type $generated@@576) $generated@@161)) (= ($generated@@238 ($generated@@260 $generated@@575) ($generated@@260 $generated@@576)) ($generated@@260 ($generated@@238 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@575) ($generated@@260 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@258 $generated@@577))) ($generated@@260 ($generated@@280 ($generated@@8 $generated@@577))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@258 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@280 ($generated@@260 $generated@@578)) ($generated@@260 ($generated@@280 $generated@@578)))
 :pattern ( ($generated@@280 ($generated@@260 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@140 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@139 $generated@@580)) (= ($generated@@230 $generated@@579) 0)) (= $generated@@579 ($generated@@137 $generated@@580))))
 :pattern ( ($generated@@230 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@76 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@293 ($generated@@82 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@293 $generated@@581) ($generated ($generated@@81 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@293 ($generated@@82 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@2)) ($generated@@74 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@3)) ($generated@@74 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@4)) ($generated@@74 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@451)) ($generated@@74 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@594) $generated@@161)) ($generated@@74 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@74 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@139 $generated@@161)) (= (type $generated@@596) $generated@@64)) (= ($generated@@148 $generated@@595 ($generated@@496 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@230 $generated@@595))) ($generated@@239 ($generated@@229 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@229 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@148 $generated@@595 ($generated@@496 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@139 $generated@@161)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@230 $generated@@599))) (< ($generated@@531 ($generated@@377 $generated@@152 ($generated@@229 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@531 ($generated@@377 $generated@@152 ($generated@@229 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@64)) ($generated@@148 $generated@@601 ($generated@@405 $generated@@602 $generated@@603))) (and (and ($generated@@148 ($generated@@297 $generated@@601) ($generated@@248 $generated@@602)) ($generated@@148 ($generated@@340 $generated@@601) ($generated@@248 $generated@@603))) ($generated@@148 ($generated@@376 $generated@@601) ($generated@@248 ($generated@@151 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@148 $generated@@601 ($generated@@405 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) $generated@@64)) ($generated@@148 $generated@@604 ($generated@@413 $generated@@605 $generated@@606))) (and (and ($generated@@148 ($generated@@315 $generated@@604) ($generated@@253 $generated@@605)) ($generated@@148 ($generated@@351 $generated@@604) ($generated@@253 $generated@@606))) ($generated@@148 ($generated@@387 $generated@@604) ($generated@@253 ($generated@@151 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@148 $generated@@604 ($generated@@413 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@148 $generated@@607 $generated@@46))
 :pattern ( ($generated@@148 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@148 $generated@@608 $generated@@47))
 :pattern ( ($generated@@148 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@148 $generated@@609 $generated@@44))
 :pattern ( ($generated@@148 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@451) ($generated@@148 $generated@@610 $generated@@45))
 :pattern ( ($generated@@148 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@161) ($generated@@148 $generated@@611 $generated@@48))
 :pattern ( ($generated@@148 $generated@@611 $generated@@48))
)))
(assert  (=> (<= 0 $generated@@612) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@161) (or ($generated@@614 $generated@@615) (and (not (= 0 $generated@@612)) ($generated@@239 $generated@@615 $generated@@279)))) true)
 :pattern ( ($generated@@613 $generated@@615))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@616) ($generated@@175 $generated@@77 $generated@@4)) (= (type $generated@@617) $generated@@77)) (= (type $generated@@618) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@619) ($generated@@139 $generated@@161))) (= (type $generated@@620) ($generated@@139 $generated@@161))) (= (type $generated@@621) ($generated@@139 $generated@@161))) (= (type $generated@@622) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@624) ($generated@@139 $generated@@161))) (= (type $generated@@625) ($generated@@139 $generated@@161))) (= (type $generated@@626) ($generated@@139 $generated@@161))) (= (type $generated@@627) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@628) ($generated@@139 $generated@@161))) (= (type $generated@@629) ($generated@@139 $generated@@161))) (= (type $generated@@630) ($generated@@139 $generated@@161))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@631  (=> (= $generated@@616 ($generated@@174 $generated@@617 $generated@@618 $generated@@60 false)) (=> (and (and ($generated@@148 $generated@@619 ($generated@@496 $generated@@279)) ($generated@@74 $generated@@619 ($generated@@496 $generated@@279) $generated@@618)) (and ($generated@@148 $generated@@620 ($generated@@496 $generated@@279)) ($generated@@74 $generated@@620 ($generated@@496 $generated@@279) $generated@@618))) (=> (and (and (and (and (and ($generated@@148 $generated@@621 ($generated@@496 $generated@@279)) ($generated@@74 $generated@@621 ($generated@@496 $generated@@279) $generated@@618)) (and ($generated@@264 $generated@@622) ($generated@@623 $generated@@622))) (and (and ($generated@@148 $generated@@624 ($generated@@496 $generated@@279)) ($generated@@74 $generated@@624 ($generated@@496 $generated@@279) $generated@@622)) (and (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@161) ($generated@@239 $generated@@632 $generated@@279)) ($generated@@614 $generated@@632))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@624) $generated@@632))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@625) $generated@@632))
 :pattern ( ($generated@@613 $generated@@632))
)) (forall (($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@161) ($generated@@239 $generated@@633 $generated@@279)) ($generated@@613 $generated@@633)) (= ($generated ($generated@@81 ($generated@@136 $generated@@625) $generated@@633)) ($generated ($generated@@81 ($generated@@136 $generated@@624) $generated@@633))))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@624) $generated@@633))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@625) $generated@@633))
 :pattern ( ($generated@@613 $generated@@633))
))))) (and (and (and (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@161) ($generated@@239 $generated@@634 $generated@@279)) ($generated@@614 $generated@@634))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@624) $generated@@634))
 :pattern ( ($generated@@613 $generated@@634))
)) (forall (($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@161) ($generated@@239 $generated@@635 $generated@@279)) (not ($generated@@613 $generated@@635))) (= ($generated@@258 0) ($generated ($generated@@81 ($generated@@136 $generated@@624) $generated@@635))))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@624) $generated@@635))
 :pattern ( ($generated@@613 $generated@@635))
))) (and (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@77) (=> (and (not (= $generated@@636 $generated@@617)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@618 $generated@@636) $generated@@60))) (= ($generated@@81 $generated@@622 $generated@@636) ($generated@@81 $generated@@618 $generated@@636))))
 :pattern ( ($generated@@81 $generated@@622 $generated@@636))
)) ($generated@@132 $generated@@618 $generated@@622))) (and (and ($generated@@148 $generated@@626 ($generated@@496 $generated@@279)) ($generated@@74 $generated@@626 ($generated@@496 $generated@@279) $generated@@618)) (and ($generated@@264 $generated@@627) ($generated@@623 $generated@@627))))) (and (and (and (and ($generated@@148 $generated@@628 ($generated@@496 $generated@@279)) ($generated@@74 $generated@@628 ($generated@@496 $generated@@279) $generated@@627)) (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@161) ($generated@@239 $generated@@637 $generated@@279)) ($generated@@614 $generated@@637))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@628) $generated@@637))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@625) $generated@@637))
 :pattern ( ($generated@@613 $generated@@637))
))) (and (forall (($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@161) ($generated@@239 $generated@@638 $generated@@279)) ($generated@@613 $generated@@638)) (= ($generated ($generated@@81 ($generated@@136 $generated@@625) $generated@@638)) ($generated ($generated@@81 ($generated@@136 $generated@@628) $generated@@638))))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@628) $generated@@638))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@625) $generated@@638))
 :pattern ( ($generated@@613 $generated@@638))
)) (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@161) ($generated@@239 $generated@@639 $generated@@279)) ($generated@@614 $generated@@639))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@628) $generated@@639))
 :pattern ( ($generated@@613 $generated@@639))
)))) (and (and (forall (($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@161) ($generated@@239 $generated@@640 $generated@@279)) (not ($generated@@613 $generated@@640))) (= ($generated@@258 0) ($generated ($generated@@81 ($generated@@136 $generated@@628) $generated@@640))))
 :pattern ( ($generated@@81 ($generated@@136 $generated@@628) $generated@@640))
 :pattern ( ($generated@@613 $generated@@640))
)) (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@77) (=> (and (not (= $generated@@641 $generated@@617)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@622 $generated@@641) $generated@@60))) (= ($generated@@81 $generated@@627 $generated@@641) ($generated@@81 $generated@@622 $generated@@641))))
 :pattern ( ($generated@@81 $generated@@627 $generated@@641))
))) (and ($generated@@132 $generated@@622 $generated@@627) (= (ControlFlow 0 2) (- 0 1)))))) ($generated@@361 ($generated@@136 $generated@@624) ($generated@@136 $generated@@628)))))))
(let (($generated@@642  (=> (and (and (and (and ($generated@@264 $generated@@618) ($generated@@623 $generated@@618)) (and ($generated@@148 $generated@@625 ($generated@@496 $generated@@279)) ($generated@@74 $generated@@625 ($generated@@496 $generated@@279) $generated@@618))) (and (and ($generated@@148 $generated@@629 ($generated@@496 $generated@@279)) ($generated@@74 $generated@@629 ($generated@@496 $generated@@279) $generated@@618)) true)) (and (and (and ($generated@@148 $generated@@630 ($generated@@496 $generated@@279)) ($generated@@74 $generated@@630 ($generated@@496 $generated@@279) $generated@@618)) true) (and (= 2 $generated@@612) (= (ControlFlow 0 3) 2)))) $generated@@631)))
$generated@@642)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
