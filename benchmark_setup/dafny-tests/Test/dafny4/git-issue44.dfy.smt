(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 4294967296))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 (Int) T@U)
(declare-fun $generated@@235 (Int) Bool)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@237 (T@U T@U Int) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@U T@U Int) T@U)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U Int) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= (type $generated@@136) $generated@@68))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
 :pattern ( ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
)))
(assert (= (type $generated@@139) $generated@@68))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@140 $generated@@139 $generated@@141))
 :pattern ( ($generated@@78 $generated@@140 $generated@@139 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@142 $generated@@143 ($generated@@79 0)))
 :pattern ( ($generated@@142 $generated@@143 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@146)) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@142 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@142 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@81 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@81) (= (type $generated@@215) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@81)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@81 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@71 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@81) (= (type $generated@@227) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@228) ($generated@@70 $generated@@4))) (= (type $generated@@230) $generated@@81)) (= (type $generated@@231) ($generated@@70 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert  (and (and (and (and (forall (($generated@@242 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@242)) 17)) (forall (($generated@@243 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@240 $generated@@243))
))) (forall (($generated@@244 Int) ) (! (= (type ($generated@@234 $generated@@244)) ($generated@@240 $generated@@155))
 :pattern ( ($generated@@234 $generated@@244))
))) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@238 $generated@@245)) $generated@@155)
 :pattern ( ($generated@@238 $generated@@245))
))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Int) ) (! (= (type ($generated@@239 $generated@@246 $generated@@247 $generated@@248)) ($generated@@240 $generated@@155))
 :pattern ( ($generated@@239 $generated@@246 $generated@@247 $generated@@248))
))))
(assert  (=> (<= 2 $generated@@233) (forall (($generated@@249 Int) ) (!  (=> (or ($generated@@235 $generated@@249) (and (not (= 2 $generated@@233)) (<= ($generated@@236 0) $generated@@249))) (and ($generated@@237 $generated@@139 ($generated@@238 ($generated@@8 ($generated@@236 5))) $generated@@249) (= ($generated@@234 $generated@@249) ($generated@@239 $generated@@139 ($generated@@238 ($generated@@8 ($generated@@236 5))) $generated@@249))))
 :pattern ( ($generated@@234 $generated@@249))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@146)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@68) (= (type $generated@@255) $generated@@68)) (= (type $generated@@256) $generated@@155)) (= (type $generated@@257) $generated@@155)) (= ($generated@@142 ($generated@@250 $generated@@256 $generated@@257) ($generated@@145 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@142 ($generated@@250 $generated@@256 $generated@@257) ($generated@@145 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@146) (= (type $generated@@259) $generated@@146)) (= ($generated@@152 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@152 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@263) $generated@@68)) (= ($generated@@142 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@155) ($generated@@0 ($generated@@85 $generated@@262 $generated@@264))) ($generated@@251 $generated@@264 $generated@@263))
 :pattern ( ($generated@@85 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@142 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@268) $generated@@68)) (= ($generated@@142 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@155) ($generated@@0 ($generated@@85 $generated@@267 $generated@@269))) ($generated@@251 $generated@@269 $generated@@268))
 :pattern ( ($generated@@85 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@142 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@236 $generated@@270) $generated@@270)
 :pattern ( ($generated@@236 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@68) (= (type $generated@@278) $generated@@68)) (= (type $generated@@279) $generated@@155)) (= (type $generated@@280) $generated@@155)) (= (type $generated@@281) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@275 $generated@@281)) (= ($generated@@78 ($generated@@250 $generated@@279 $generated@@280) ($generated@@145 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@78 ($generated@@250 $generated@@279 $generated@@280) ($generated@@145 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@72)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@146) (= ($generated@@144 $generated@@284) (= ($generated@@282 $generated@@284) $generated@@62)))
 :pattern ( ($generated@@144 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@146) ($generated@@144 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@155) (= (type $generated@@287) $generated@@155)) (= $generated@@285 ($generated@@250 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@144 $generated@@285))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@288 $generated@@290)) ($generated@@240 $generated@@290))
 :pattern ( ($generated@@288 $generated@@290))
)))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) 0)
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@2) (= ($generated@@142 $generated@@292 $generated@@136) (<= ($generated@@236 0) ($generated $generated@@292))))
 :pattern ( ($generated@@142 $generated@@292 $generated@@136))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@276 ($generated@@238 $generated@@293) $generated@@294 $generated@@295) ($generated@@78 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@276 ($generated@@238 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@80 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@83 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@80 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@85 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (=> (<= 2 $generated@@233) (forall (($generated@@302 Int) ) (!  (=> (or ($generated@@235 ($generated@@236 $generated@@302)) (and (not (= 2 $generated@@233)) (<= ($generated@@236 0) $generated@@302))) (and ($generated@@237 $generated@@139 ($generated@@238 ($generated@@8 ($generated@@236 5))) ($generated@@236 $generated@@302)) (= ($generated@@234 ($generated@@236 $generated@@302)) ($generated@@239 $generated@@139 ($generated@@238 ($generated@@8 ($generated@@236 5))) ($generated@@236 $generated@@302)))))
 :weight 3
 :pattern ( ($generated@@234 ($generated@@236 $generated@@302)))
))))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@80 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@85 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@85 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@80 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@85 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@85 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@83 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@80 $generated@@340 $generated@@2)) (= ($generated@@161 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@85 $generated@@339 $generated@@341))) (<= ($generated ($generated@@85 $generated@@339 $generated@@341)) ($generated@@296 $generated@@339))))
 :pattern ( ($generated@@85 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@161 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@155) ($generated@@251 $generated@@345 $generated@@136)) (and (= ($generated@@238 ($generated@@342 $generated@@2 $generated@@345)) $generated@@345) ($generated@@142 ($generated@@342 $generated@@2 $generated@@345) $generated@@136)))
 :pattern ( ($generated@@251 $generated@@345 $generated@@136))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@155) ($generated@@251 $generated@@346 $generated@@139)) (and (= ($generated@@238 ($generated@@342 $generated@@2 $generated@@346)) $generated@@346) ($generated@@142 ($generated@@342 $generated@@2 $generated@@346) $generated@@139)))
 :pattern ( ($generated@@251 $generated@@346 $generated@@139))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@307 (type $generated@@347))))
(let (($generated@@349 ($generated@@306 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@305 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@304 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@85 ($generated@@303 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@303 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@307 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@80 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@307 (type $generated@@354))))
(let (($generated@@356 ($generated@@306 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@305 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@304 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@325 (type $generated@@358))))
(let (($generated@@360 ($generated@@324 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@323 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@322 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@85 ($generated@@321 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@321 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@325 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@80 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@325 (type $generated@@365))))
(let (($generated@@367 ($generated@@324 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@323 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@322 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@370) $generated@@68)) (= ($generated@@142 $generated@@369 ($generated@@160 $generated@@370)) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@155) (< 0 ($generated ($generated@@85 $generated@@369 $generated@@371)))) ($generated@@251 $generated@@371 $generated@@370))
 :pattern ( ($generated@@85 $generated@@369 $generated@@371))
))))
 :pattern ( ($generated@@142 $generated@@369 ($generated@@160 $generated@@370)))
)))
(assert (forall (($generated@@373 T@U) ) (! (= (type ($generated@@372 $generated@@373)) $generated@@68)
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert  (=> (<= 2 $generated@@233) (forall (($generated@@374 Int) ) (!  (=> (or ($generated@@235 $generated@@374) (and (not (= 2 $generated@@233)) (<= ($generated@@236 0) $generated@@374))) ($generated@@142 ($generated@@234 $generated@@374) ($generated@@372 $generated@@139)))
 :pattern ( ($generated@@234 $generated@@374))
))))
(assert  (=> (<= 1 $generated@@233) (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 Int) ) (!  (=> (and (and (= (type $generated@@375) $generated@@68) (= (type $generated@@376) $generated@@155)) (or ($generated@@237 $generated@@375 $generated@@376 $generated@@377) (and (not (= 1 $generated@@233)) (and ($generated@@251 $generated@@376 $generated@@375) (<= ($generated@@236 0) $generated@@377))))) ($generated@@142 ($generated@@239 $generated@@375 $generated@@376 $generated@@377) ($generated@@372 $generated@@375)))
 :pattern ( ($generated@@239 $generated@@375 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@379) $generated@@68)) (= (type $generated@@380) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@378 ($generated@@260 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@155) ($generated@@0 ($generated@@85 $generated@@378 $generated@@381))) ($generated@@276 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@85 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@78 $generated@@378 ($generated@@260 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@383) $generated@@68)) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@382 ($generated@@265 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@155) ($generated@@0 ($generated@@85 $generated@@382 $generated@@385))) ($generated@@276 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@85 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@265 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@85 ($generated@@297 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@85 ($generated@@297 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@80 $generated@@155 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@307 (type $generated@@391))))
(let (($generated@@393 ($generated@@306 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@80 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@305 $generated@@155 $generated@@155)) (= (type $generated@@395) $generated@@155)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@85 ($generated@@303 $generated@@394) ($generated@@153 ($generated@@342 $generated@@146 $generated@@395)))) (= ($generated@@85 ($generated@@389 $generated@@394) ($generated@@153 ($generated@@342 $generated@@146 $generated@@395))) ($generated@@154 ($generated@@342 $generated@@146 $generated@@395))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@80 $generated@@155 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@325 (type $generated@@399))))
(let (($generated@@401 ($generated@@324 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@403) $generated@@155)) (= ($generated@@0 ($generated@@85 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@85 ($generated@@321 $generated@@402) ($generated@@153 ($generated@@342 $generated@@146 $generated@@403)))) (= ($generated@@85 ($generated@@397 $generated@@402) ($generated@@153 ($generated@@342 $generated@@146 $generated@@403))) ($generated@@154 ($generated@@342 $generated@@146 $generated@@403))))))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@306 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@305 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@85 ($generated@@351 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@85 ($generated@@303 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@85 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@85 ($generated@@303 $generated@@404) $generated@@408))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@324 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@323 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@85 ($generated@@362 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@85 ($generated@@321 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@85 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@85 ($generated@@321 $generated@@409) $generated@@413))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@85 ($generated@@362 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@68)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@305 $generated@@155 $generated@@155)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@303 $generated@@417) $generated@@421))) (and ($generated@@276 ($generated@@85 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@276 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@303 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@78 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@68)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@426) $generated@@68)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@321 $generated@@425) $generated@@429))) (and ($generated@@276 ($generated@@85 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@276 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@85 ($generated@@321 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@78 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@80 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@325 (type $generated@@432))))
(let (($generated@@434 ($generated@@324 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@323 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@322 $generated@@434 $generated@@433)) (= ($generated@@321 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@321 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@325 (type $generated@@435))))
(let (($generated@@437 ($generated@@324 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@323 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@322 $generated@@437 $generated@@436)) (= ($generated@@362 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@362 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@325 (type $generated@@438))))
(let (($generated@@440 ($generated@@324 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@323 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@322 $generated@@440 $generated@@439)) (= ($generated@@396 $generated@@438) ($generated@@430 $generated@@155))))))
 :pattern ( ($generated@@396 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@307 (type $generated@@441))))
(let (($generated@@443 ($generated@@306 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@305 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@304 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@155) (= (type $generated@@445) $generated@@155)) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@441) ($generated@@238 ($generated@@250 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@388 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@325 (type $generated@@446))))
(let (($generated@@448 ($generated@@324 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@323 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@322 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@155) (= (type $generated@@450) $generated@@155)) ($generated@@0 ($generated@@85 ($generated@@396 $generated@@446) ($generated@@238 ($generated@@250 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@396 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@155) ($generated@@251 $generated@@451 $generated@@46)) (and (= ($generated@@238 ($generated@@342 $generated@@2 $generated@@451)) $generated@@451) ($generated@@142 ($generated@@342 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@155) ($generated@@251 $generated@@452 $generated@@47)) (and (= ($generated@@238 ($generated@@342 $generated@@3 $generated@@452)) $generated@@452) ($generated@@142 ($generated@@342 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@155) ($generated@@251 $generated@@453 $generated@@44)) (and (= ($generated@@238 ($generated@@342 $generated@@4 $generated@@453)) $generated@@453) ($generated@@142 ($generated@@342 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@155) ($generated@@251 $generated@@455 $generated@@45)) (and (= ($generated@@238 ($generated@@342 $generated@@454 $generated@@455)) $generated@@455) ($generated@@142 ($generated@@342 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@68) (= ($generated@@251 ($generated@@238 $generated@@456) $generated@@457) ($generated@@142 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@251 ($generated@@238 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@83 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@80 $generated@@459 $generated@@2)) (<= 0 ($generated@@296 $generated@@458))))
 :pattern ( ($generated@@296 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@241 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@240 $generated@@461)) (<= 0 ($generated@@289 $generated@@460))))
 :pattern ( ($generated@@289 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@414 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@414 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@76 ($generated@@414 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@68)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@472 ($generated@@422 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@422 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@76 ($generated@@422 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@155) (= (type $generated@@483) $generated@@155)) (= ($generated@@282 ($generated@@250 $generated@@482 $generated@@483)) $generated@@62))
 :pattern ( ($generated@@250 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@145 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@145 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@145 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@145 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@155) (= (type $generated@@493) $generated@@155)) (= ($generated@@153 ($generated@@250 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@250 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@155) (= (type $generated@@495) $generated@@155)) (= ($generated@@154 ($generated@@250 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@250 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 Int) ) (! (let (($generated@@499 ($generated@@241 (type $generated@@497))))
(= (type ($generated@@496 $generated@@497 $generated@@498)) $generated@@499))
 :pattern ( ($generated@@496 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@240 $generated@@155)) (= (type $generated@@501) $generated@@68)) (= (type $generated@@502) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@500 ($generated@@372 $generated@@501) $generated@@502) (forall (($generated@@503 Int) ) (!  (=> (and (<= 0 $generated@@503) (< $generated@@503 ($generated@@289 $generated@@500))) ($generated@@276 ($generated@@496 $generated@@500 $generated@@503) $generated@@501 $generated@@502))
 :pattern ( ($generated@@496 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@78 $generated@@500 ($generated@@372 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@79 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@79 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@68) (= ($generated@@506 ($generated@@260 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@260 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@68) (= ($generated@@76 ($generated@@260 $generated@@509)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@510 ($generated@@265 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@265 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@76 ($generated@@265 $generated@@513)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@514 ($generated@@160 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@160 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@517)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@518 ($generated@@372 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@372 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@76 ($generated@@372 $generated@@521)) $generated@@57))
 :pattern ( ($generated@@372 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@342 $generated@@523 ($generated@@238 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@238 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@305 $generated@@155 $generated@@155)) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) $generated@@68)) (= ($generated@@142 $generated@@524 ($generated@@414 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@303 $generated@@524) $generated@@527))) (and ($generated@@251 ($generated@@85 ($generated@@389 $generated@@524) $generated@@527) $generated@@526) ($generated@@251 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@524) $generated@@527))
 :pattern ( ($generated@@85 ($generated@@303 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@142 $generated@@524 ($generated@@414 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@529) $generated@@68)) (= (type $generated@@530) $generated@@68)) (= ($generated@@142 $generated@@528 ($generated@@422 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@321 $generated@@528) $generated@@531))) (and ($generated@@251 ($generated@@85 ($generated@@397 $generated@@528) $generated@@531) $generated@@530) ($generated@@251 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@528) $generated@@531))
 :pattern ( ($generated@@85 ($generated@@321 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@142 $generated@@528 ($generated@@422 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@155) (= (type $generated@@535) $generated@@155)) (< ($generated@@532 $generated@@534) ($generated@@533 ($generated@@250 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@250 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@155) (= (type $generated@@537) $generated@@155)) (< ($generated@@532 $generated@@537) ($generated@@533 ($generated@@250 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@250 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@155) (= (type $generated@@539) $generated@@68)) (= (type $generated@@540) $generated@@68)) ($generated@@251 $generated@@538 ($generated@@414 $generated@@539 $generated@@540))) (and (= ($generated@@238 ($generated@@342 ($generated@@305 $generated@@155 $generated@@155) $generated@@538)) $generated@@538) ($generated@@142 ($generated@@342 ($generated@@305 $generated@@155 $generated@@155) $generated@@538) ($generated@@414 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@251 $generated@@538 ($generated@@414 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@155) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) $generated@@68)) ($generated@@251 $generated@@541 ($generated@@422 $generated@@542 $generated@@543))) (and (= ($generated@@238 ($generated@@342 ($generated@@323 $generated@@155 $generated@@155) $generated@@541)) $generated@@541) ($generated@@142 ($generated@@342 ($generated@@323 $generated@@155 $generated@@155) $generated@@541) ($generated@@422 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@251 $generated@@541 ($generated@@422 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@68) (= (type $generated@@545) $generated@@68)) (= (type $generated@@546) $generated@@155)) ($generated@@251 $generated@@546 ($generated@@145 $generated@@544 $generated@@545))) (and (= ($generated@@238 ($generated@@342 $generated@@146 $generated@@546)) $generated@@546) ($generated@@142 ($generated@@342 $generated@@146 $generated@@546) ($generated@@145 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@251 $generated@@546 ($generated@@145 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@85 ($generated@@430 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@85 ($generated@@430 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@73)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@68) (= (type $generated@@552) $generated@@68)) (and (= ($generated@@76 ($generated@@145 $generated@@551 $generated@@552)) $generated@@63) (= ($generated@@549 ($generated@@145 $generated@@551 $generated@@552)) $generated@@66)))
 :pattern ( ($generated@@145 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@146) (= ($generated@@532 ($generated@@238 $generated@@553)) ($generated@@533 $generated@@553)))
 :pattern ( ($generated@@532 ($generated@@238 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@155) ($generated@@251 $generated@@554 ($generated@@79 0))) (and (= ($generated@@238 ($generated@@342 $generated@@2 $generated@@554)) $generated@@554) ($generated@@142 ($generated@@342 ($generated@@80 $generated@@155 $generated@@4) $generated@@554) ($generated@@79 0))))
 :pattern ( ($generated@@251 $generated@@554 ($generated@@79 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@155) (= (type $generated@@556) $generated@@68)) ($generated@@251 $generated@@555 ($generated@@260 $generated@@556))) (and (= ($generated@@238 ($generated@@342 ($generated@@80 $generated@@155 $generated@@4) $generated@@555)) $generated@@555) ($generated@@142 ($generated@@342 ($generated@@80 $generated@@155 $generated@@4) $generated@@555) ($generated@@260 $generated@@556))))
 :pattern ( ($generated@@251 $generated@@555 ($generated@@260 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@155) (= (type $generated@@558) $generated@@68)) ($generated@@251 $generated@@557 ($generated@@265 $generated@@558))) (and (= ($generated@@238 ($generated@@342 ($generated@@80 $generated@@155 $generated@@4) $generated@@557)) $generated@@557) ($generated@@142 ($generated@@342 ($generated@@80 $generated@@155 $generated@@4) $generated@@557) ($generated@@265 $generated@@558))))
 :pattern ( ($generated@@251 $generated@@557 ($generated@@265 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@155) (= (type $generated@@560) $generated@@68)) ($generated@@251 $generated@@559 ($generated@@160 $generated@@560))) (and (= ($generated@@238 ($generated@@342 ($generated@@80 $generated@@155 $generated@@2) $generated@@559)) $generated@@559) ($generated@@142 ($generated@@342 ($generated@@80 $generated@@155 $generated@@2) $generated@@559) ($generated@@160 $generated@@560))))
 :pattern ( ($generated@@251 $generated@@559 ($generated@@160 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@155) (= (type $generated@@562) $generated@@68)) ($generated@@251 $generated@@561 ($generated@@372 $generated@@562))) (and (= ($generated@@238 ($generated@@342 ($generated@@240 $generated@@155) $generated@@561)) $generated@@561) ($generated@@142 ($generated@@342 ($generated@@240 $generated@@155) $generated@@561) ($generated@@372 $generated@@562))))
 :pattern ( ($generated@@251 $generated@@561 ($generated@@372 $generated@@562)))
)))
(assert (= ($generated@@76 $generated@@136) $generated@@61))
(assert (= ($generated@@549 $generated@@136) $generated@@65))
(assert (= ($generated@@76 $generated@@139) $generated@@64))
(assert (= ($generated@@549 $generated@@139) $generated@@67))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@563 ($generated@@160 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@155) (< 0 ($generated ($generated@@85 $generated@@563 $generated@@566)))) ($generated@@276 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@85 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@78 $generated@@563 ($generated@@160 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@146) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@275 $generated@@569) (and ($generated@@144 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@68) ($generated@@78 $generated@@567 ($generated@@145 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@78 $generated@@567 ($generated@@145 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@276 ($generated@@153 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@276 ($generated@@153 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@146) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@275 $generated@@573) (and ($generated@@144 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@68) ($generated@@78 $generated@@571 ($generated@@145 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@78 $generated@@571 ($generated@@145 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@276 ($generated@@154 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@276 ($generated@@154 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@2) (= ($generated@@142 $generated@@575 $generated@@139)  (and (<= ($generated@@236 0) ($generated $generated@@575)) (< ($generated $generated@@575) 4294967296))))
 :pattern ( ($generated@@142 $generated@@575 $generated@@139))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@155) (= (type $generated@@577) $generated@@155)) (= ($generated@@250 ($generated@@271 $generated@@576) ($generated@@271 $generated@@577)) ($generated@@271 ($generated@@250 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@250 ($generated@@271 $generated@@576) ($generated@@271 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@238 ($generated@@8 ($generated@@236 $generated@@578))) ($generated@@271 ($generated@@238 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@238 ($generated@@8 ($generated@@236 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@238 ($generated@@271 $generated@@579)) ($generated@@271 ($generated@@238 $generated@@579)))
 :pattern ( ($generated@@238 ($generated@@271 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@241 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@240 $generated@@581)) (= ($generated@@289 $generated@@580) 0)) (= $generated@@580 ($generated@@288 $generated@@581))))
 :pattern ( ($generated@@289 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@80 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@296 ($generated@@86 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@296 $generated@@582) ($generated ($generated@@85 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@296 ($generated@@86 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@587) $generated@@2)) ($generated@@78 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@78 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@589) $generated@@3)) ($generated@@78 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@78 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@591) $generated@@4)) ($generated@@78 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@78 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@593) $generated@@454)) ($generated@@78 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@78 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@595) $generated@@155)) ($generated@@78 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@78 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@240 $generated@@155)) (= (type $generated@@597) $generated@@68)) (= ($generated@@142 $generated@@596 ($generated@@372 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@289 $generated@@596))) ($generated@@251 ($generated@@496 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@496 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@142 $generated@@596 ($generated@@372 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@240 $generated@@155)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@289 $generated@@600))) (< ($generated@@533 ($generated@@342 $generated@@146 ($generated@@496 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@533 ($generated@@342 $generated@@146 ($generated@@496 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@305 $generated@@155 $generated@@155)) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) $generated@@68)) ($generated@@142 $generated@@602 ($generated@@414 $generated@@603 $generated@@604))) (and (and ($generated@@142 ($generated@@303 $generated@@602) ($generated@@260 $generated@@603)) ($generated@@142 ($generated@@351 $generated@@602) ($generated@@260 $generated@@604))) ($generated@@142 ($generated@@388 $generated@@602) ($generated@@260 ($generated@@145 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@142 $generated@@602 ($generated@@414 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) $generated@@68)) ($generated@@142 $generated@@605 ($generated@@422 $generated@@606 $generated@@607))) (and (and ($generated@@142 ($generated@@321 $generated@@605) ($generated@@265 $generated@@606)) ($generated@@142 ($generated@@362 $generated@@605) ($generated@@265 $generated@@607))) ($generated@@142 ($generated@@396 $generated@@605) ($generated@@265 ($generated@@145 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@142 $generated@@605 ($generated@@422 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@142 $generated@@608 $generated@@46))
 :pattern ( ($generated@@142 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@142 $generated@@609 $generated@@47))
 :pattern ( ($generated@@142 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@142 $generated@@610 $generated@@44))
 :pattern ( ($generated@@142 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@454) ($generated@@142 $generated@@611 $generated@@45))
 :pattern ( ($generated@@142 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@155) ($generated@@142 $generated@@612 $generated@@48))
 :pattern ( ($generated@@142 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(declare-fun $generated@@619 () Int)
(assert  (and (and (and (= (type $generated@@613) ($generated@@167 $generated@@81 $generated@@4)) (= (type $generated@@614) $generated@@81)) (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@617) ($generated@@167 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@620  (=> (= $generated@@613 ($generated@@221 $generated@@614 $generated@@615 $generated@@60 false)) (=> (and (= $generated@@616 ($generated@@236 5)) (= (ControlFlow 0 3) (- 0 2))) (and (<= ($generated@@236 0) $generated@@616) (< $generated@@616 4294967296))))))
(let (($generated@@621 true))
(let (($generated@@622  (=> (= $generated@@617 ($generated@@166 $generated@@614 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@621) (=> (= (ControlFlow 0 4) 3) $generated@@620)))))
(let (($generated@@623  (=> (and (and (and ($generated@@275 $generated@@615) ($generated@@618 $generated@@615)) (<= ($generated@@236 0) $generated@@619)) (and (= 2 $generated@@233) (= (ControlFlow 0 5) 4))) $generated@@622)))
$generated@@623)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 (Int) T@U)
(declare-fun $generated@@235 (Int) Bool)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@237 (T@U T@U Int) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@U T@U Int) T@U)
(declare-fun $generated@@240 (T@T T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@495 (T@U Int) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= (type $generated@@136) $generated@@68))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
 :pattern ( ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
)))
(assert (= (type $generated@@139) $generated@@68))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@140 $generated@@139 $generated@@141))
 :pattern ( ($generated@@78 $generated@@140 $generated@@139 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@142 $generated@@143 ($generated@@79 0)))
 :pattern ( ($generated@@142 $generated@@143 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@146)) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@142 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@142 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@81 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@81) (= (type $generated@@215) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@81)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@81 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@71 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@81) (= (type $generated@@227) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@228) ($generated@@70 $generated@@4))) (= (type $generated@@230) $generated@@81)) (= (type $generated@@231) ($generated@@70 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert  (and (and (and (and (and (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@243 $generated@@244)) 17)) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@245 $generated@@246)) $generated@@245)
 :pattern ( ($generated@@240 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@242 ($generated@@240 $generated@@247 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@240 $generated@@247 $generated@@248))
))) (forall (($generated@@249 Int) ) (! (= (type ($generated@@234 $generated@@249)) ($generated@@240 $generated@@155 $generated@@155))
 :pattern ( ($generated@@234 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@238 $generated@@250)) $generated@@155)
 :pattern ( ($generated@@238 $generated@@250))
))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Int) ) (! (= (type ($generated@@239 $generated@@251 $generated@@252 $generated@@253)) ($generated@@240 $generated@@155 $generated@@155))
 :pattern ( ($generated@@239 $generated@@251 $generated@@252 $generated@@253))
))))
(assert  (=> (<= 2 $generated@@233) (forall (($generated@@254 Int) ) (!  (=> (or ($generated@@235 $generated@@254) (and (not (= 2 $generated@@233)) (<= ($generated@@236 0) $generated@@254))) (and ($generated@@237 $generated@@139 ($generated@@238 ($generated@@8 ($generated@@236 5))) $generated@@254) (= ($generated@@234 $generated@@254) ($generated@@239 $generated@@139 ($generated@@238 ($generated@@8 ($generated@@236 5))) $generated@@254))))
 :pattern ( ($generated@@234 $generated@@254))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= (type ($generated@@255 $generated@@257 $generated@@258)) $generated@@146)
 :pattern ( ($generated@@255 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) $generated@@68) (= (type $generated@@260) $generated@@68)) (= (type $generated@@261) $generated@@155)) (= (type $generated@@262) $generated@@155)) (= ($generated@@142 ($generated@@255 $generated@@261 $generated@@262) ($generated@@145 $generated@@259 $generated@@260))  (and ($generated@@256 $generated@@261 $generated@@259) ($generated@@256 $generated@@262 $generated@@260))))
 :pattern ( ($generated@@142 ($generated@@255 $generated@@261 $generated@@262) ($generated@@145 $generated@@259 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@146) (= (type $generated@@264) $generated@@146)) (= ($generated@@152 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@152 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@268) $generated@@68)) (= ($generated@@142 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@155) ($generated@@0 ($generated@@85 $generated@@267 $generated@@269))) ($generated@@256 $generated@@269 $generated@@268))
 :pattern ( ($generated@@85 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@142 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@68)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@273) $generated@@68)) (= ($generated@@142 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@155) ($generated@@0 ($generated@@85 $generated@@272 $generated@@274))) ($generated@@256 $generated@@274 $generated@@273))
 :pattern ( ($generated@@85 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@142 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@236 $generated@@275) $generated@@275)
 :pattern ( ($generated@@236 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@68) (= (type $generated@@283) $generated@@68)) (= (type $generated@@284) $generated@@155)) (= (type $generated@@285) $generated@@155)) (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@280 $generated@@286)) (= ($generated@@78 ($generated@@255 $generated@@284 $generated@@285) ($generated@@145 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@78 ($generated@@255 $generated@@284 $generated@@285) ($generated@@145 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@72)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@146) (= ($generated@@144 $generated@@289) (= ($generated@@287 $generated@@289) $generated@@62)))
 :pattern ( ($generated@@144 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@146) ($generated@@144 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@155) (= (type $generated@@292) $generated@@155)) (= $generated@@290 ($generated@@255 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@144 $generated@@290))
)))
(assert  (and (and (forall (($generated@@297 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@297)) 18)) (forall (($generated@@298 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
))) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@293 $generated@@299)) ($generated@@295 $generated@@299))
 :pattern ( ($generated@@293 $generated@@299))
))))
(assert (forall (($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@300)) 0)
 :pattern ( ($generated@@293 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@2) (= ($generated@@142 $generated@@301 $generated@@136) (<= ($generated@@236 0) ($generated $generated@@301))))
 :pattern ( ($generated@@142 $generated@@301 $generated@@136))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@68) (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@281 ($generated@@238 $generated@@302) $generated@@303 $generated@@304) ($generated@@78 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@281 ($generated@@238 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@80 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@83 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@80 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@85 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (=> (<= 2 $generated@@233) (forall (($generated@@311 Int) ) (!  (=> (or ($generated@@235 ($generated@@236 $generated@@311)) (and (not (= 2 $generated@@233)) (<= ($generated@@236 0) $generated@@311))) (and ($generated@@237 $generated@@139 ($generated@@238 ($generated@@8 ($generated@@236 5))) ($generated@@236 $generated@@311)) (= ($generated@@234 ($generated@@236 $generated@@311)) ($generated@@239 $generated@@139 ($generated@@238 ($generated@@8 ($generated@@236 5))) ($generated@@236 $generated@@311)))))
 :weight 3
 :pattern ( ($generated@@234 ($generated@@236 $generated@@311)))
))))
(assert  (and (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@241 (type $generated@@314))))
(= (type ($generated@@312 $generated@@314)) ($generated@@80 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@314))
)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@313 $generated@@316 $generated@@317)) ($generated@@240 $generated@@316 $generated@@317))
 :pattern ( ($generated@@313 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@85 ($generated@@312 ($generated@@313 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@85 ($generated@@312 ($generated@@313 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@80 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@85 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@85 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@83 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@80 $generated@@340 $generated@@2)) (= ($generated@@161 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@85 $generated@@339 $generated@@341))) (<= ($generated ($generated@@85 $generated@@339 $generated@@341)) ($generated@@305 $generated@@339))))
 :pattern ( ($generated@@85 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@161 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@155) ($generated@@256 $generated@@345 $generated@@136)) (and (= ($generated@@238 ($generated@@342 $generated@@2 $generated@@345)) $generated@@345) ($generated@@142 ($generated@@342 $generated@@2 $generated@@345) $generated@@136)))
 :pattern ( ($generated@@256 $generated@@345 $generated@@136))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@155) ($generated@@256 $generated@@346 $generated@@139)) (and (= ($generated@@238 ($generated@@342 $generated@@2 $generated@@346)) $generated@@346) ($generated@@142 ($generated@@342 $generated@@2 $generated@@346) $generated@@139)))
 :pattern ( ($generated@@256 $generated@@346 $generated@@139))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@242 (type $generated@@347))))
(let (($generated@@349 ($generated@@241 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@240 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@313 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@312 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@242 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@80 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@242 (type $generated@@354))))
(let (($generated@@356 ($generated@@241 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@240 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@313 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@325 (type $generated@@358))))
(let (($generated@@360 ($generated@@324 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@323 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@322 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@85 ($generated@@321 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@321 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@325 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@80 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@325 (type $generated@@365))))
(let (($generated@@367 ($generated@@324 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@323 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@322 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@370) $generated@@68)) (= ($generated@@142 $generated@@369 ($generated@@160 $generated@@370)) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@155) (< 0 ($generated ($generated@@85 $generated@@369 $generated@@371)))) ($generated@@256 $generated@@371 $generated@@370))
 :pattern ( ($generated@@85 $generated@@369 $generated@@371))
))))
 :pattern ( ($generated@@142 $generated@@369 ($generated@@160 $generated@@370)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@68)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert  (=> (<= 1 $generated@@233) (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 Int) ) (!  (=> (and (and (= (type $generated@@375) $generated@@68) (= (type $generated@@376) $generated@@155)) (or ($generated@@237 $generated@@375 $generated@@376 $generated@@377) (and (not (= 1 $generated@@233)) (and ($generated@@256 $generated@@376 $generated@@375) (<= ($generated@@236 0) $generated@@377))))) ($generated@@142 ($generated@@239 $generated@@375 $generated@@376 $generated@@377) ($generated@@372 $generated@@375 $generated@@375)))
 :pattern ( ($generated@@239 $generated@@375 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@379) $generated@@68)) (= (type $generated@@380) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@378 ($generated@@265 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@155) ($generated@@0 ($generated@@85 $generated@@378 $generated@@381))) ($generated@@281 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@85 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@78 $generated@@378 ($generated@@265 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@383) $generated@@68)) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@382 ($generated@@270 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@155) ($generated@@0 ($generated@@85 $generated@@382 $generated@@385))) ($generated@@281 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@85 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@270 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@85 ($generated@@306 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@85 ($generated@@306 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@80 $generated@@155 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@242 (type $generated@@391))))
(let (($generated@@393 ($generated@@241 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@80 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@240 $generated@@155 $generated@@155)) (= (type $generated@@395) $generated@@155)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@394) ($generated@@153 ($generated@@342 $generated@@146 $generated@@395)))) (= ($generated@@85 ($generated@@389 $generated@@394) ($generated@@153 ($generated@@342 $generated@@146 $generated@@395))) ($generated@@154 ($generated@@342 $generated@@146 $generated@@395))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@80 $generated@@155 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@325 (type $generated@@399))))
(let (($generated@@401 ($generated@@324 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@403) $generated@@155)) (= ($generated@@0 ($generated@@85 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@85 ($generated@@321 $generated@@402) ($generated@@153 ($generated@@342 $generated@@146 $generated@@403)))) (= ($generated@@85 ($generated@@397 $generated@@402) ($generated@@153 ($generated@@342 $generated@@146 $generated@@403))) ($generated@@154 ($generated@@342 $generated@@146 $generated@@403))))))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@241 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@240 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@85 ($generated@@351 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@85 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@404) $generated@@408))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@324 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@323 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@85 ($generated@@362 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@85 ($generated@@321 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@85 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@85 ($generated@@321 $generated@@409) $generated@@413))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@85 ($generated@@362 $generated@@409) $generated@@410))
)))
(assert  (=> (<= 2 $generated@@233) (forall (($generated@@414 Int) ) (!  (=> (or ($generated@@235 $generated@@414) (and (not (= 2 $generated@@233)) (<= ($generated@@236 0) $generated@@414))) ($generated@@142 ($generated@@234 $generated@@414) ($generated@@372 $generated@@139 $generated@@139)))
 :pattern ( ($generated@@234 $generated@@414))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@240 $generated@@155 $generated@@155)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@372 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@415) $generated@@419))) (and ($generated@@281 ($generated@@85 ($generated@@389 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@281 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@372 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@321 $generated@@423) $generated@@427))) (and ($generated@@281 ($generated@@85 ($generated@@397 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@281 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@321 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@80 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@325 (type $generated@@430))))
(let (($generated@@432 ($generated@@324 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@323 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@322 $generated@@432 $generated@@431)) (= ($generated@@321 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@321 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@325 (type $generated@@433))))
(let (($generated@@435 ($generated@@324 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@323 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@322 $generated@@435 $generated@@434)) (= ($generated@@362 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@362 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@325 (type $generated@@436))))
(let (($generated@@438 ($generated@@324 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@323 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@322 $generated@@438 $generated@@437)) (= ($generated@@396 $generated@@436) ($generated@@428 $generated@@155))))))
 :pattern ( ($generated@@396 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@242 (type $generated@@439))))
(let (($generated@@441 ($generated@@241 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@240 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@313 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@155) (= (type $generated@@443) $generated@@155)) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@439) ($generated@@238 ($generated@@255 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@388 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@325 (type $generated@@444))))
(let (($generated@@446 ($generated@@324 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@323 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@322 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@155) (= (type $generated@@448) $generated@@155)) ($generated@@0 ($generated@@85 ($generated@@396 $generated@@444) ($generated@@238 ($generated@@255 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@396 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@155) ($generated@@256 $generated@@449 $generated@@46)) (and (= ($generated@@238 ($generated@@342 $generated@@2 $generated@@449)) $generated@@449) ($generated@@142 ($generated@@342 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@256 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@155) ($generated@@256 $generated@@450 $generated@@47)) (and (= ($generated@@238 ($generated@@342 $generated@@3 $generated@@450)) $generated@@450) ($generated@@142 ($generated@@342 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@256 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@155) ($generated@@256 $generated@@451 $generated@@44)) (and (= ($generated@@238 ($generated@@342 $generated@@4 $generated@@451)) $generated@@451) ($generated@@142 ($generated@@342 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@256 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 20))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@155) ($generated@@256 $generated@@453 $generated@@45)) (and (= ($generated@@238 ($generated@@342 $generated@@452 $generated@@453)) $generated@@453) ($generated@@142 ($generated@@342 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@256 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@68) (= ($generated@@256 ($generated@@238 $generated@@454) $generated@@455) ($generated@@142 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@256 ($generated@@238 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@83 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@80 $generated@@457 $generated@@2)) (<= 0 ($generated@@305 $generated@@456))))
 :pattern ( ($generated@@305 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@296 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@295 $generated@@459)) (<= 0 ($generated@@294 $generated@@458))))
 :pattern ( ($generated@@294 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@460 ($generated@@372 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@372 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@372 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@372 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@76 ($generated@@372 $generated@@468 $generated@@469)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@420 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@420 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@76 ($generated@@420 $generated@@478 $generated@@479)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@155) (= (type $generated@@481) $generated@@155)) (= ($generated@@287 ($generated@@255 $generated@@480 $generated@@481)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@68) (= (type $generated@@485) $generated@@68)) (= ($generated@@482 ($generated@@145 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@145 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@145 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@145 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@155) (= (type $generated@@491) $generated@@155)) (= ($generated@@153 ($generated@@255 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@255 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@155) (= (type $generated@@493) $generated@@155)) (= ($generated@@154 ($generated@@255 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@255 $generated@@492 $generated@@493))
)))
(assert  (and (forall (($generated@@496 T@U) ) (! (= (type ($generated@@494 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@496))
)) (forall (($generated@@497 T@U) ($generated@@498 Int) ) (! (let (($generated@@499 ($generated@@296 (type $generated@@497))))
(= (type ($generated@@495 $generated@@497 $generated@@498)) $generated@@499))
 :pattern ( ($generated@@495 $generated@@497 $generated@@498))
))))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@295 $generated@@155)) (= (type $generated@@501) $generated@@68)) (= (type $generated@@502) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@500 ($generated@@494 $generated@@501) $generated@@502) (forall (($generated@@503 Int) ) (!  (=> (and (<= 0 $generated@@503) (< $generated@@503 ($generated@@294 $generated@@500))) ($generated@@281 ($generated@@495 $generated@@500 $generated@@503) $generated@@501 $generated@@502))
 :pattern ( ($generated@@495 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@78 $generated@@500 ($generated@@494 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@79 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@79 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@68) (= ($generated@@506 ($generated@@265 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@265 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@68) (= ($generated@@76 ($generated@@265 $generated@@509)) $generated@@54))
 :pattern ( ($generated@@265 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@510 ($generated@@270 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@270 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@76 ($generated@@270 $generated@@513)) $generated@@55))
 :pattern ( ($generated@@270 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@514 ($generated@@160 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@160 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@517)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@518 ($generated@@494 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@494 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@76 ($generated@@494 $generated@@521)) $generated@@57))
 :pattern ( ($generated@@494 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@342 $generated@@523 ($generated@@238 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@238 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@240 $generated@@155 $generated@@155)) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) $generated@@68)) (= ($generated@@142 $generated@@524 ($generated@@372 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@524) $generated@@527))) (and ($generated@@256 ($generated@@85 ($generated@@389 $generated@@524) $generated@@527) $generated@@526) ($generated@@256 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@524) $generated@@527))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@142 $generated@@524 ($generated@@372 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@529) $generated@@68)) (= (type $generated@@530) $generated@@68)) (= ($generated@@142 $generated@@528 ($generated@@420 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@321 $generated@@528) $generated@@531))) (and ($generated@@256 ($generated@@85 ($generated@@397 $generated@@528) $generated@@531) $generated@@530) ($generated@@256 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@528) $generated@@531))
 :pattern ( ($generated@@85 ($generated@@321 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@142 $generated@@528 ($generated@@420 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@155) (= (type $generated@@535) $generated@@155)) (< ($generated@@532 $generated@@534) ($generated@@533 ($generated@@255 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@255 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@155) (= (type $generated@@537) $generated@@155)) (< ($generated@@532 $generated@@537) ($generated@@533 ($generated@@255 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@255 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@155) (= (type $generated@@539) $generated@@68)) (= (type $generated@@540) $generated@@68)) ($generated@@256 $generated@@538 ($generated@@372 $generated@@539 $generated@@540))) (and (= ($generated@@238 ($generated@@342 ($generated@@240 $generated@@155 $generated@@155) $generated@@538)) $generated@@538) ($generated@@142 ($generated@@342 ($generated@@240 $generated@@155 $generated@@155) $generated@@538) ($generated@@372 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@256 $generated@@538 ($generated@@372 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@155) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) $generated@@68)) ($generated@@256 $generated@@541 ($generated@@420 $generated@@542 $generated@@543))) (and (= ($generated@@238 ($generated@@342 ($generated@@323 $generated@@155 $generated@@155) $generated@@541)) $generated@@541) ($generated@@142 ($generated@@342 ($generated@@323 $generated@@155 $generated@@155) $generated@@541) ($generated@@420 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@256 $generated@@541 ($generated@@420 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@68) (= (type $generated@@545) $generated@@68)) (= (type $generated@@546) $generated@@155)) ($generated@@256 $generated@@546 ($generated@@145 $generated@@544 $generated@@545))) (and (= ($generated@@238 ($generated@@342 $generated@@146 $generated@@546)) $generated@@546) ($generated@@142 ($generated@@342 $generated@@146 $generated@@546) ($generated@@145 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@256 $generated@@546 ($generated@@145 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@85 ($generated@@428 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@85 ($generated@@428 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@73)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@68) (= (type $generated@@552) $generated@@68)) (and (= ($generated@@76 ($generated@@145 $generated@@551 $generated@@552)) $generated@@63) (= ($generated@@549 ($generated@@145 $generated@@551 $generated@@552)) $generated@@66)))
 :pattern ( ($generated@@145 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@146) (= ($generated@@532 ($generated@@238 $generated@@553)) ($generated@@533 $generated@@553)))
 :pattern ( ($generated@@532 ($generated@@238 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@155) ($generated@@256 $generated@@554 ($generated@@79 0))) (and (= ($generated@@238 ($generated@@342 $generated@@2 $generated@@554)) $generated@@554) ($generated@@142 ($generated@@342 ($generated@@80 $generated@@155 $generated@@4) $generated@@554) ($generated@@79 0))))
 :pattern ( ($generated@@256 $generated@@554 ($generated@@79 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@155) (= (type $generated@@556) $generated@@68)) ($generated@@256 $generated@@555 ($generated@@265 $generated@@556))) (and (= ($generated@@238 ($generated@@342 ($generated@@80 $generated@@155 $generated@@4) $generated@@555)) $generated@@555) ($generated@@142 ($generated@@342 ($generated@@80 $generated@@155 $generated@@4) $generated@@555) ($generated@@265 $generated@@556))))
 :pattern ( ($generated@@256 $generated@@555 ($generated@@265 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@155) (= (type $generated@@558) $generated@@68)) ($generated@@256 $generated@@557 ($generated@@270 $generated@@558))) (and (= ($generated@@238 ($generated@@342 ($generated@@80 $generated@@155 $generated@@4) $generated@@557)) $generated@@557) ($generated@@142 ($generated@@342 ($generated@@80 $generated@@155 $generated@@4) $generated@@557) ($generated@@270 $generated@@558))))
 :pattern ( ($generated@@256 $generated@@557 ($generated@@270 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@155) (= (type $generated@@560) $generated@@68)) ($generated@@256 $generated@@559 ($generated@@160 $generated@@560))) (and (= ($generated@@238 ($generated@@342 ($generated@@80 $generated@@155 $generated@@2) $generated@@559)) $generated@@559) ($generated@@142 ($generated@@342 ($generated@@80 $generated@@155 $generated@@2) $generated@@559) ($generated@@160 $generated@@560))))
 :pattern ( ($generated@@256 $generated@@559 ($generated@@160 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@155) (= (type $generated@@562) $generated@@68)) ($generated@@256 $generated@@561 ($generated@@494 $generated@@562))) (and (= ($generated@@238 ($generated@@342 ($generated@@295 $generated@@155) $generated@@561)) $generated@@561) ($generated@@142 ($generated@@342 ($generated@@295 $generated@@155) $generated@@561) ($generated@@494 $generated@@562))))
 :pattern ( ($generated@@256 $generated@@561 ($generated@@494 $generated@@562)))
)))
(assert (= ($generated@@76 $generated@@136) $generated@@61))
(assert (= ($generated@@549 $generated@@136) $generated@@65))
(assert (= ($generated@@76 $generated@@139) $generated@@64))
(assert (= ($generated@@549 $generated@@139) $generated@@67))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@563 ($generated@@160 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@155) (< 0 ($generated ($generated@@85 $generated@@563 $generated@@566)))) ($generated@@281 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@85 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@78 $generated@@563 ($generated@@160 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@146) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@280 $generated@@569) (and ($generated@@144 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@68) ($generated@@78 $generated@@567 ($generated@@145 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@78 $generated@@567 ($generated@@145 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@281 ($generated@@153 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@281 ($generated@@153 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@146) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@280 $generated@@573) (and ($generated@@144 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@68) ($generated@@78 $generated@@571 ($generated@@145 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@78 $generated@@571 ($generated@@145 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@281 ($generated@@154 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@281 ($generated@@154 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@2) (= ($generated@@142 $generated@@575 $generated@@139)  (and (<= ($generated@@236 0) ($generated $generated@@575)) (< ($generated $generated@@575) 4294967296))))
 :pattern ( ($generated@@142 $generated@@575 $generated@@139))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@155) (= (type $generated@@577) $generated@@155)) (= ($generated@@255 ($generated@@276 $generated@@576) ($generated@@276 $generated@@577)) ($generated@@276 ($generated@@255 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@255 ($generated@@276 $generated@@576) ($generated@@276 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@238 ($generated@@8 ($generated@@236 $generated@@578))) ($generated@@276 ($generated@@238 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@238 ($generated@@8 ($generated@@236 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@238 ($generated@@276 $generated@@579)) ($generated@@276 ($generated@@238 $generated@@579)))
 :pattern ( ($generated@@238 ($generated@@276 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@296 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@295 $generated@@581)) (= ($generated@@294 $generated@@580) 0)) (= $generated@@580 ($generated@@293 $generated@@581))))
 :pattern ( ($generated@@294 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@80 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@305 ($generated@@86 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@305 $generated@@582) ($generated ($generated@@85 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@305 ($generated@@86 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@587) $generated@@2)) ($generated@@78 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@78 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@589) $generated@@3)) ($generated@@78 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@78 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@591) $generated@@4)) ($generated@@78 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@78 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@593) $generated@@452)) ($generated@@78 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@78 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@595) $generated@@155)) ($generated@@78 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@78 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@295 $generated@@155)) (= (type $generated@@597) $generated@@68)) (= ($generated@@142 $generated@@596 ($generated@@494 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@294 $generated@@596))) ($generated@@256 ($generated@@495 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@495 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@142 $generated@@596 ($generated@@494 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@295 $generated@@155)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@294 $generated@@600))) (< ($generated@@533 ($generated@@342 $generated@@146 ($generated@@495 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@533 ($generated@@342 $generated@@146 ($generated@@495 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@240 $generated@@155 $generated@@155)) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) $generated@@68)) ($generated@@142 $generated@@602 ($generated@@372 $generated@@603 $generated@@604))) (and (and ($generated@@142 ($generated@@312 $generated@@602) ($generated@@265 $generated@@603)) ($generated@@142 ($generated@@351 $generated@@602) ($generated@@265 $generated@@604))) ($generated@@142 ($generated@@388 $generated@@602) ($generated@@265 ($generated@@145 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@142 $generated@@602 ($generated@@372 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) $generated@@68)) ($generated@@142 $generated@@605 ($generated@@420 $generated@@606 $generated@@607))) (and (and ($generated@@142 ($generated@@321 $generated@@605) ($generated@@270 $generated@@606)) ($generated@@142 ($generated@@362 $generated@@605) ($generated@@270 $generated@@607))) ($generated@@142 ($generated@@396 $generated@@605) ($generated@@270 ($generated@@145 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@142 $generated@@605 ($generated@@420 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@142 $generated@@608 $generated@@46))
 :pattern ( ($generated@@142 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@142 $generated@@609 $generated@@47))
 :pattern ( ($generated@@142 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@142 $generated@@610 $generated@@44))
 :pattern ( ($generated@@142 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@452) ($generated@@142 $generated@@611 $generated@@45))
 :pattern ( ($generated@@142 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@155) ($generated@@142 $generated@@612 $generated@@48))
 :pattern ( ($generated@@142 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(declare-fun $generated@@619 () Int)
(assert  (and (and (and (= (type $generated@@613) ($generated@@167 $generated@@81 $generated@@4)) (= (type $generated@@614) $generated@@81)) (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@617) ($generated@@167 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@620  (=> (= $generated@@613 ($generated@@221 $generated@@614 $generated@@615 $generated@@60 false)) (=> (and (= $generated@@616 ($generated@@236 5)) (= (ControlFlow 0 3) (- 0 2))) (and (<= ($generated@@236 0) $generated@@616) (< $generated@@616 4294967296))))))
(let (($generated@@621 true))
(let (($generated@@622  (=> (= $generated@@617 ($generated@@166 $generated@@614 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@621) (=> (= (ControlFlow 0 4) 3) $generated@@620)))))
(let (($generated@@623  (=> (and (and (and ($generated@@280 $generated@@615) ($generated@@618 $generated@@615)) (<= ($generated@@236 0) $generated@@619)) (and (= 2 $generated@@233) (= (ControlFlow 0 5) 4))) $generated@@622)))
$generated@@623)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 (Int) T@U)
(declare-fun $generated@@249 (Int) Bool)
(declare-fun $generated@@250 (Int) Int)
(declare-fun $generated@@251 (T@U T@U Int) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@253 (T@U T@U Int) T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Bool)
(declare-fun $generated@@286 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@T) T@U)
(declare-fun $generated@@343 (T@T T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@64) $generated@@75)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@72)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@74 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@74 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@71)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert  (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@139 $generated@@141))
)) (= (type $generated@@140) $generated@@84)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@71) (= (type $generated@@143) $generated@@84)) (= (type $generated@@144) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@143 ($generated@@139 $generated@@142) $generated@@144)  (or (= $generated@@143 $generated@@140) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@143 ($generated@@139 $generated@@142) $generated@@144))
)))
(assert (= (type $generated@@145) $generated@@71))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@146 $generated@@145 $generated@@147))
 :pattern ( ($generated@@81 $generated@@146 $generated@@145 $generated@@147))
)))
(assert (= (type $generated@@148) $generated@@71))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@2) (= (type $generated@@150) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@149 $generated@@148 $generated@@150))
 :pattern ( ($generated@@81 $generated@@149 $generated@@148 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@82 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@82 0)))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@153 $generated@@154)) $generated@@71)
 :pattern ( ($generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@71) (= (type $generated@@156) $generated@@84)) (= (type $generated@@157) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@156 ($generated@@153 $generated@@155) $generated@@157) ($generated@@81 $generated@@156 ($generated@@139 $generated@@155) $generated@@157)))
 :pattern ( ($generated@@81 $generated@@156 ($generated@@153 $generated@@155) $generated@@157))
)))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@71)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@71) (= (type $generated@@164) $generated@@71)) (= (type $generated@@165) $generated@@160)) ($generated@@151 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@151 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@71)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@83 $generated@@169 $generated@@2)) (= (type $generated@@178) $generated@@71)) ($generated@@151 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@151 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 16)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@84 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@74 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@84) (= (type $generated@@229) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@230) ($generated@@73 $generated@@4))) (= (type $generated@@232) $generated@@84)) (= (type $generated@@233) ($generated@@73 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@181 $generated@@84 $generated@@4))
 :pattern ( ($generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@74 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@84) (= (type $generated@@241) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@242) ($generated@@73 $generated@@4))) (= (type $generated@@244) $generated@@84)) (= (type $generated@@245) ($generated@@73 $generated@@246))) (= ($generated@@0 ($generated@@179 ($generated@@235 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@179 ($generated@@235 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert  (and (and (forall (($generated@@254 Int) ) (! (= (type ($generated@@248 $generated@@254)) $generated@@84)
 :pattern ( ($generated@@248 $generated@@254))
)) (forall (($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@255)) $generated@@169)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Int) ) (! (= (type ($generated@@253 $generated@@256 $generated@@257 $generated@@258)) $generated@@84)
 :pattern ( ($generated@@253 $generated@@256 $generated@@257 $generated@@258))
))))
(assert  (=> (<= 2 $generated@@247) (forall (($generated@@259 Int) ) (!  (=> (or ($generated@@249 $generated@@259) (and (not (= 2 $generated@@247)) (<= ($generated@@250 0) $generated@@259))) (and ($generated@@251 $generated@@148 ($generated@@252 ($generated@@8 ($generated@@250 5))) $generated@@259) (= ($generated@@248 $generated@@259) ($generated@@253 $generated@@148 ($generated@@252 ($generated@@8 ($generated@@250 5))) $generated@@259))))
 :pattern ( ($generated@@248 $generated@@259))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@260 $generated@@262 $generated@@263)) $generated@@160)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (= (type $generated@@264) $generated@@71) (= (type $generated@@265) $generated@@71)) (= (type $generated@@266) $generated@@169)) (= (type $generated@@267) $generated@@169)) (= ($generated@@151 ($generated@@260 $generated@@266 $generated@@267) ($generated@@159 $generated@@264 $generated@@265))  (and ($generated@@261 $generated@@266 $generated@@264) ($generated@@261 $generated@@267 $generated@@265))))
 :pattern ( ($generated@@151 ($generated@@260 $generated@@266 $generated@@267) ($generated@@159 $generated@@264 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@160) (= (type $generated@@269) $generated@@160)) (= ($generated@@166 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@166 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@83 $generated@@169 $generated@@4)) (= (type $generated@@273) $generated@@71)) (= ($generated@@151 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@169) ($generated@@0 ($generated@@88 $generated@@272 $generated@@274))) ($generated@@261 $generated@@274 $generated@@273))
 :pattern ( ($generated@@88 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@151 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@71)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@83 $generated@@169 $generated@@4)) (= (type $generated@@278) $generated@@71)) (= ($generated@@151 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@169) ($generated@@0 ($generated@@88 $generated@@277 $generated@@279))) ($generated@@261 $generated@@279 $generated@@278))
 :pattern ( ($generated@@88 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@151 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@280 Int) ) (! (= ($generated@@250 $generated@@280) $generated@@280)
 :pattern ( ($generated@@250 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
(= (type ($generated@@281 $generated@@282)) $generated@@283))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= ($generated@@281 $generated@@284) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) $generated@@71) (= (type $generated@@288) $generated@@71)) (= (type $generated@@289) $generated@@169)) (= (type $generated@@290) $generated@@169)) (= (type $generated@@291) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@285 $generated@@291)) (= ($generated@@81 ($generated@@260 $generated@@289 $generated@@290) ($generated@@159 $generated@@287 $generated@@288) $generated@@291)  (and ($generated@@286 $generated@@289 $generated@@287 $generated@@291) ($generated@@286 $generated@@290 $generated@@288 $generated@@291))))
 :pattern ( ($generated@@81 ($generated@@260 $generated@@289 $generated@@290) ($generated@@159 $generated@@287 $generated@@288) $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@75)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@160) (= ($generated@@158 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@64)))
 :pattern ( ($generated@@158 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@160) ($generated@@158 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@169) (= (type $generated@@297) $generated@@169)) (= $generated@@295 ($generated@@260 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@158 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@151 $generated@@306 $generated@@145) (<= ($generated@@250 0) ($generated $generated@@306))))
 :pattern ( ($generated@@151 $generated@@306 $generated@@145))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@71) (= (type $generated@@308) $generated@@84)) (= ($generated@@151 $generated@@308 ($generated@@153 $generated@@307))  (and ($generated@@151 $generated@@308 ($generated@@139 $generated@@307)) (not (= $generated@@308 $generated@@140)))))
 :pattern ( ($generated@@151 $generated@@308 ($generated@@153 $generated@@307)))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@71) (= (type $generated@@311) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@286 ($generated@@252 $generated@@309) $generated@@310 $generated@@311) ($generated@@81 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@286 ($generated@@252 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@83 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@86 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@83 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@88 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (=> (<= 2 $generated@@247) (forall (($generated@@318 Int) ) (!  (=> (or ($generated@@249 ($generated@@250 $generated@@318)) (and (not (= 2 $generated@@247)) (<= ($generated@@250 0) $generated@@318))) (and ($generated@@251 $generated@@148 ($generated@@252 ($generated@@8 ($generated@@250 5))) ($generated@@250 $generated@@318)) (= ($generated@@248 ($generated@@250 $generated@@318)) ($generated@@253 $generated@@148 ($generated@@252 ($generated@@8 ($generated@@250 5))) ($generated@@250 $generated@@318)))))
 :weight 3
 :pattern ( ($generated@@248 ($generated@@250 $generated@@318)))
))))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@76)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@71) (and (= ($generated@@79 ($generated@@139 $generated@@321)) $generated@@62) (= ($generated@@319 ($generated@@139 $generated@@321)) $generated@@68)))
 :pattern ( ($generated@@139 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@71) (and (= ($generated@@79 ($generated@@153 $generated@@322)) $generated@@63) (= ($generated@@319 ($generated@@153 $generated@@322)) $generated@@68)))
 :pattern ( ($generated@@153 $generated@@322))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 18)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@83 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@88 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@88 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert  (and (and (and (and (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (= ($generated@@1 ($generated@@343 $generated@@346 $generated@@347)) 19)) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@344 ($generated@@343 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@343 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@345 ($generated@@343 $generated@@350 $generated@@351)) $generated@@351)
 :pattern ( ($generated@@343 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@344 (type $generated@@352))))
(= (type ($generated@@341 $generated@@352)) ($generated@@83 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@352))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= (type ($generated@@342 $generated@@354 $generated@@355)) ($generated@@343 $generated@@354 $generated@@355))
 :pattern ( ($generated@@342 $generated@@354 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@T) ) (! (let (($generated@@358 (type $generated@@356)))
 (not ($generated@@0 ($generated@@88 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356))))
 :pattern ( (let (($generated@@358 (type $generated@@356)))
($generated@@88 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@86 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@83 $generated@@360 $generated@@2)) (= ($generated@@175 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (and (<= 0 ($generated ($generated@@88 $generated@@359 $generated@@361))) (<= ($generated ($generated@@88 $generated@@359 $generated@@361)) ($generated@@312 $generated@@359))))
 :pattern ( ($generated@@88 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@175 $generated@@359))
)))
(assert (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@169) ($generated@@261 $generated@@365 $generated@@145)) (and (= ($generated@@252 ($generated@@362 $generated@@2 $generated@@365)) $generated@@365) ($generated@@151 ($generated@@362 $generated@@2 $generated@@365) $generated@@145)))
 :pattern ( ($generated@@261 $generated@@365 $generated@@145))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@169) ($generated@@261 $generated@@366 $generated@@148)) (and (= ($generated@@252 ($generated@@362 $generated@@2 $generated@@366)) $generated@@366) ($generated@@151 ($generated@@362 $generated@@2 $generated@@366) $generated@@148)))
 :pattern ( ($generated@@261 $generated@@366 $generated@@148))
)))
(assert (forall (($generated@@368 T@U) ) (! (= (type ($generated@@367 $generated@@368)) $generated@@71)
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@71) (= (type $generated@@370) $generated@@84)) (= ($generated@@151 $generated@@370 ($generated@@139 $generated@@369))  (or (= $generated@@370 $generated@@140) (= ($generated@@367 $generated@@370) ($generated@@139 $generated@@369)))))
 :pattern ( ($generated@@151 $generated@@370 ($generated@@139 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@88 ($generated@@323 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@323 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@327 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@83 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@327 (type $generated@@378))))
(let (($generated@@380 ($generated@@326 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@325 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@324 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@88 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@345 (type $generated@@382))))
(let (($generated@@384 ($generated@@344 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@343 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@342 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@88 ($generated@@341 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@341 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@345 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@83 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@345 (type $generated@@389))))
(let (($generated@@391 ($generated@@344 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@343 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@342 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@88 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@83 $generated@@169 $generated@@2)) (= (type $generated@@394) $generated@@71)) (= ($generated@@151 $generated@@393 ($generated@@174 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@169) (< 0 ($generated ($generated@@88 $generated@@393 $generated@@395)))) ($generated@@261 $generated@@395 $generated@@394))
 :pattern ( ($generated@@88 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@151 $generated@@393 ($generated@@174 $generated@@394)))
)))
(assert  (=> (<= 2 $generated@@247) (forall (($generated@@396 Int) ) (!  (=> (or ($generated@@249 $generated@@396) (and (not (= 2 $generated@@247)) (<= ($generated@@250 0) $generated@@396))) ($generated@@151 ($generated@@248 $generated@@396) ($generated@@153 $generated@@148)))
 :pattern ( ($generated@@248 $generated@@396))
))))
(assert  (=> (<= 1 $generated@@247) (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 Int) ) (!  (=> (and (and (= (type $generated@@397) $generated@@71) (= (type $generated@@398) $generated@@169)) (or ($generated@@251 $generated@@397 $generated@@398 $generated@@399) (and (not (= 1 $generated@@247)) (and ($generated@@261 $generated@@398 $generated@@397) (<= ($generated@@250 0) $generated@@399))))) ($generated@@151 ($generated@@253 $generated@@397 $generated@@398 $generated@@399) ($generated@@153 $generated@@397)))
 :pattern ( ($generated@@253 $generated@@397 $generated@@398 $generated@@399))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@83 $generated@@169 $generated@@4)) (= (type $generated@@401) $generated@@71)) (= (type $generated@@402) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@400 ($generated@@270 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@169) ($generated@@0 ($generated@@88 $generated@@400 $generated@@403))) ($generated@@286 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@88 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@81 $generated@@400 ($generated@@270 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@83 $generated@@169 $generated@@4)) (= (type $generated@@405) $generated@@71)) (= (type $generated@@406) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@404 ($generated@@275 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@169) ($generated@@0 ($generated@@88 $generated@@404 $generated@@407))) ($generated@@286 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@88 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@81 $generated@@404 ($generated@@275 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(= ($generated ($generated@@88 ($generated@@313 $generated@@409) $generated@@408)) 0))
 :pattern ( (let (($generated@@409 (type $generated@@408)))
($generated@@88 ($generated@@313 $generated@@409) $generated@@408)))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@83 $generated@@169 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@327 (type $generated@@413))))
(let (($generated@@415 ($generated@@326 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@83 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@325 $generated@@169 $generated@@169)) (= (type $generated@@417) $generated@@169)) (= ($generated@@0 ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@88 ($generated@@323 $generated@@416) ($generated@@167 ($generated@@362 $generated@@160 $generated@@417)))) (= ($generated@@88 ($generated@@411 $generated@@416) ($generated@@167 ($generated@@362 $generated@@160 $generated@@417))) ($generated@@168 ($generated@@362 $generated@@160 $generated@@417))))))
 :pattern ( ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert  (and (forall (($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@420)) ($generated@@83 $generated@@169 $generated@@4))
 :pattern ( ($generated@@418 $generated@@420))
)) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@345 (type $generated@@421))))
(let (($generated@@423 ($generated@@344 (type $generated@@421))))
(= (type ($generated@@419 $generated@@421)) ($generated@@83 $generated@@423 $generated@@422))))
 :pattern ( ($generated@@419 $generated@@421))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@343 $generated@@169 $generated@@169)) (= (type $generated@@425) $generated@@169)) (= ($generated@@0 ($generated@@88 ($generated@@418 $generated@@424) $generated@@425))  (and ($generated@@0 ($generated@@88 ($generated@@341 $generated@@424) ($generated@@167 ($generated@@362 $generated@@160 $generated@@425)))) (= ($generated@@88 ($generated@@419 $generated@@424) ($generated@@167 ($generated@@362 $generated@@160 $generated@@425))) ($generated@@168 ($generated@@362 $generated@@160 $generated@@425))))))
 :pattern ( ($generated@@88 ($generated@@418 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@326 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@325 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@88 ($generated@@375 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@88 ($generated@@323 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@88 ($generated@@411 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@88 ($generated@@323 $generated@@426) $generated@@430))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@88 ($generated@@375 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@344 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@343 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@88 ($generated@@386 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@88 ($generated@@341 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@88 ($generated@@419 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@88 ($generated@@341 $generated@@431) $generated@@435))
 :pattern ( ($generated@@88 ($generated@@419 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@88 ($generated@@386 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@71)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@325 $generated@@169 $generated@@169)) (= (type $generated@@440) $generated@@71)) (= (type $generated@@441) $generated@@71)) (= (type $generated@@442) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@323 $generated@@439) $generated@@443))) (and ($generated@@286 ($generated@@88 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@286 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@88 ($generated@@323 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@71)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@343 $generated@@169 $generated@@169)) (= (type $generated@@448) $generated@@71)) (= (type $generated@@449) $generated@@71)) (= (type $generated@@450) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@341 $generated@@447) $generated@@451))) (and ($generated@@286 ($generated@@88 ($generated@@419 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@286 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@88 ($generated@@419 $generated@@447) $generated@@451))
 :pattern ( ($generated@@88 ($generated@@341 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@81 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@83 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@345 (type $generated@@454))))
(let (($generated@@456 ($generated@@344 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@343 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@342 $generated@@456 $generated@@455)) (= ($generated@@341 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@341 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@345 (type $generated@@457))))
(let (($generated@@459 ($generated@@344 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@343 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@342 $generated@@459 $generated@@458)) (= ($generated@@386 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@386 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@345 (type $generated@@460))))
(let (($generated@@462 ($generated@@344 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@343 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@342 $generated@@462 $generated@@461)) (= ($generated@@418 $generated@@460) ($generated@@452 $generated@@169))))))
 :pattern ( ($generated@@418 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@327 (type $generated@@463))))
(let (($generated@@465 ($generated@@326 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@325 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@324 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@169) (= (type $generated@@467) $generated@@169)) ($generated@@0 ($generated@@88 ($generated@@410 $generated@@463) ($generated@@252 ($generated@@260 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@410 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@345 (type $generated@@468))))
(let (($generated@@470 ($generated@@344 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@343 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@342 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@169) (= (type $generated@@472) $generated@@169)) ($generated@@0 ($generated@@88 ($generated@@418 $generated@@468) ($generated@@252 ($generated@@260 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@418 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@169) ($generated@@261 $generated@@473 $generated@@46)) (and (= ($generated@@252 ($generated@@362 $generated@@2 $generated@@473)) $generated@@473) ($generated@@151 ($generated@@362 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@261 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@169) ($generated@@261 $generated@@474 $generated@@47)) (and (= ($generated@@252 ($generated@@362 $generated@@3 $generated@@474)) $generated@@474) ($generated@@151 ($generated@@362 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@261 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@169) ($generated@@261 $generated@@475 $generated@@44)) (and (= ($generated@@252 ($generated@@362 $generated@@4 $generated@@475)) $generated@@475) ($generated@@151 ($generated@@362 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@261 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 20))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@169) ($generated@@261 $generated@@477 $generated@@45)) (and (= ($generated@@252 ($generated@@362 $generated@@476 $generated@@477)) $generated@@477) ($generated@@151 ($generated@@362 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@261 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@71) (= ($generated@@261 ($generated@@252 $generated@@478) $generated@@479) ($generated@@151 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@261 ($generated@@252 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@86 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@83 $generated@@481 $generated@@2)) (<= 0 ($generated@@312 $generated@@480))))
 :pattern ( ($generated@@312 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@301 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@300 $generated@@483)) (<= 0 ($generated@@299 $generated@@482))))
 :pattern ( ($generated@@299 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@71)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@71) (= (type $generated@@487) $generated@@71)) (= ($generated@@484 ($generated@@436 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@436 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@71)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@71) (= (type $generated@@491) $generated@@71)) (= ($generated@@488 ($generated@@436 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@436 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@71) (= (type $generated@@493) $generated@@71)) (= ($generated@@79 ($generated@@436 $generated@@492 $generated@@493)) $generated@@58))
 :pattern ( ($generated@@436 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@71)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@71) (= (type $generated@@497) $generated@@71)) (= ($generated@@494 ($generated@@444 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@444 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@71)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@71) (= (type $generated@@501) $generated@@71)) (= ($generated@@498 ($generated@@444 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@444 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@71) (= (type $generated@@503) $generated@@71)) (= ($generated@@79 ($generated@@444 $generated@@502 $generated@@503)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@169) (= (type $generated@@505) $generated@@169)) (= ($generated@@292 ($generated@@260 $generated@@504 $generated@@505)) $generated@@64))
 :pattern ( ($generated@@260 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@71)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@71) (= (type $generated@@509) $generated@@71)) (= ($generated@@506 ($generated@@159 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@159 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@71)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@71) (= (type $generated@@513) $generated@@71)) (= ($generated@@510 ($generated@@159 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@159 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@169) (= (type $generated@@515) $generated@@169)) (= ($generated@@167 ($generated@@260 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@260 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@169) (= (type $generated@@517) $generated@@169)) (= ($generated@@168 ($generated@@260 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@260 $generated@@516 $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@71)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@301 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@300 $generated@@169)) (= (type $generated@@525) $generated@@71)) (= (type $generated@@526) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@299 $generated@@524))) ($generated@@286 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@81 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@82 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@82 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@71) (= ($generated@@530 ($generated@@270 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@270 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@71) (= ($generated@@79 ($generated@@270 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@71)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@71) (= ($generated@@534 ($generated@@275 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@275 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@71) (= ($generated@@79 ($generated@@275 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@71)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@71) (= ($generated@@538 ($generated@@174 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@174 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@71) (= ($generated@@79 ($generated@@174 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@71)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@71) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@71) (= ($generated@@79 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@71)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@71) (= ($generated@@546 ($generated@@139 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@139 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@71)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@71) (= ($generated@@549 ($generated@@153 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@153 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(= ($generated@@362 $generated@@553 ($generated@@252 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@252 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@325 $generated@@169 $generated@@169)) (= (type $generated@@555) $generated@@71)) (= (type $generated@@556) $generated@@71)) (= ($generated@@151 $generated@@554 ($generated@@436 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@323 $generated@@554) $generated@@557))) (and ($generated@@261 ($generated@@88 ($generated@@411 $generated@@554) $generated@@557) $generated@@556) ($generated@@261 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@554) $generated@@557))
 :pattern ( ($generated@@88 ($generated@@323 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@151 $generated@@554 ($generated@@436 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@343 $generated@@169 $generated@@169)) (= (type $generated@@559) $generated@@71)) (= (type $generated@@560) $generated@@71)) (= ($generated@@151 $generated@@558 ($generated@@444 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@341 $generated@@558) $generated@@561))) (and ($generated@@261 ($generated@@88 ($generated@@419 $generated@@558) $generated@@561) $generated@@560) ($generated@@261 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@88 ($generated@@419 $generated@@558) $generated@@561))
 :pattern ( ($generated@@88 ($generated@@341 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@151 $generated@@558 ($generated@@444 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@169) (= (type $generated@@565) $generated@@169)) (< ($generated@@562 $generated@@564) ($generated@@563 ($generated@@260 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@260 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@169) (= (type $generated@@567) $generated@@169)) (< ($generated@@562 $generated@@567) ($generated@@563 ($generated@@260 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@260 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@169) (= (type $generated@@569) $generated@@71)) (= (type $generated@@570) $generated@@71)) ($generated@@261 $generated@@568 ($generated@@436 $generated@@569 $generated@@570))) (and (= ($generated@@252 ($generated@@362 ($generated@@325 $generated@@169 $generated@@169) $generated@@568)) $generated@@568) ($generated@@151 ($generated@@362 ($generated@@325 $generated@@169 $generated@@169) $generated@@568) ($generated@@436 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@261 $generated@@568 ($generated@@436 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@169) (= (type $generated@@572) $generated@@71)) (= (type $generated@@573) $generated@@71)) ($generated@@261 $generated@@571 ($generated@@444 $generated@@572 $generated@@573))) (and (= ($generated@@252 ($generated@@362 ($generated@@343 $generated@@169 $generated@@169) $generated@@571)) $generated@@571) ($generated@@151 ($generated@@362 ($generated@@343 $generated@@169 $generated@@169) $generated@@571) ($generated@@444 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@261 $generated@@571 ($generated@@444 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@71) (= (type $generated@@575) $generated@@71)) (= (type $generated@@576) $generated@@169)) ($generated@@261 $generated@@576 ($generated@@159 $generated@@574 $generated@@575))) (and (= ($generated@@252 ($generated@@362 $generated@@160 $generated@@576)) $generated@@576) ($generated@@151 ($generated@@362 $generated@@160 $generated@@576) ($generated@@159 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@261 $generated@@576 ($generated@@159 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
 (not ($generated@@0 ($generated@@88 ($generated@@452 $generated@@578) $generated@@577))))
 :pattern ( (let (($generated@@578 (type $generated@@577)))
($generated@@88 ($generated@@452 $generated@@578) $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@71) (= (type $generated@@580) $generated@@71)) (and (= ($generated@@79 ($generated@@159 $generated@@579 $generated@@580)) $generated@@65) (= ($generated@@319 ($generated@@159 $generated@@579 $generated@@580)) $generated@@69)))
 :pattern ( ($generated@@159 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@160) (= ($generated@@562 ($generated@@252 $generated@@581)) ($generated@@563 $generated@@581)))
 :pattern ( ($generated@@562 ($generated@@252 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@169) ($generated@@261 $generated@@582 ($generated@@82 0))) (and (= ($generated@@252 ($generated@@362 $generated@@2 $generated@@582)) $generated@@582) ($generated@@151 ($generated@@362 ($generated@@83 $generated@@169 $generated@@4) $generated@@582) ($generated@@82 0))))
 :pattern ( ($generated@@261 $generated@@582 ($generated@@82 0)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@169) (= (type $generated@@584) $generated@@71)) ($generated@@261 $generated@@583 ($generated@@270 $generated@@584))) (and (= ($generated@@252 ($generated@@362 ($generated@@83 $generated@@169 $generated@@4) $generated@@583)) $generated@@583) ($generated@@151 ($generated@@362 ($generated@@83 $generated@@169 $generated@@4) $generated@@583) ($generated@@270 $generated@@584))))
 :pattern ( ($generated@@261 $generated@@583 ($generated@@270 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@169) (= (type $generated@@586) $generated@@71)) ($generated@@261 $generated@@585 ($generated@@275 $generated@@586))) (and (= ($generated@@252 ($generated@@362 ($generated@@83 $generated@@169 $generated@@4) $generated@@585)) $generated@@585) ($generated@@151 ($generated@@362 ($generated@@83 $generated@@169 $generated@@4) $generated@@585) ($generated@@275 $generated@@586))))
 :pattern ( ($generated@@261 $generated@@585 ($generated@@275 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@169) (= (type $generated@@588) $generated@@71)) ($generated@@261 $generated@@587 ($generated@@174 $generated@@588))) (and (= ($generated@@252 ($generated@@362 ($generated@@83 $generated@@169 $generated@@2) $generated@@587)) $generated@@587) ($generated@@151 ($generated@@362 ($generated@@83 $generated@@169 $generated@@2) $generated@@587) ($generated@@174 $generated@@588))))
 :pattern ( ($generated@@261 $generated@@587 ($generated@@174 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@169) (= (type $generated@@590) $generated@@71)) ($generated@@261 $generated@@589 ($generated@@518 $generated@@590))) (and (= ($generated@@252 ($generated@@362 ($generated@@300 $generated@@169) $generated@@589)) $generated@@589) ($generated@@151 ($generated@@362 ($generated@@300 $generated@@169) $generated@@589) ($generated@@518 $generated@@590))))
 :pattern ( ($generated@@261 $generated@@589 ($generated@@518 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@71) (= (type $generated@@592) $generated@@169)) ($generated@@261 $generated@@592 ($generated@@139 $generated@@591))) (and (= ($generated@@252 ($generated@@362 $generated@@84 $generated@@592)) $generated@@592) ($generated@@151 ($generated@@362 $generated@@84 $generated@@592) ($generated@@139 $generated@@591))))
 :pattern ( ($generated@@261 $generated@@592 ($generated@@139 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@71) (= (type $generated@@594) $generated@@169)) ($generated@@261 $generated@@594 ($generated@@153 $generated@@593))) (and (= ($generated@@252 ($generated@@362 $generated@@84 $generated@@594)) $generated@@594) ($generated@@151 ($generated@@362 $generated@@84 $generated@@594) ($generated@@153 $generated@@593))))
 :pattern ( ($generated@@261 $generated@@594 ($generated@@153 $generated@@593)))
)))
(assert (= ($generated@@79 $generated@@145) $generated@@61))
(assert (= ($generated@@319 $generated@@145) $generated@@67))
(assert (= ($generated@@79 $generated@@148) $generated@@66))
(assert (= ($generated@@319 $generated@@148) $generated@@70))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@83 $generated@@169 $generated@@2)) (= (type $generated@@596) $generated@@71)) (= (type $generated@@597) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@595 ($generated@@174 $generated@@596) $generated@@597) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@169) (< 0 ($generated ($generated@@88 $generated@@595 $generated@@598)))) ($generated@@286 $generated@@598 $generated@@596 $generated@@597))
 :pattern ( ($generated@@88 $generated@@595 $generated@@598))
))))
 :pattern ( ($generated@@81 $generated@@595 ($generated@@174 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@160) (= (type $generated@@600) $generated@@71)) (= (type $generated@@601) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@285 $generated@@601) (and ($generated@@158 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@71) ($generated@@81 $generated@@599 ($generated@@159 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@159 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@286 ($generated@@167 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@286 ($generated@@167 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@160) (= (type $generated@@604) $generated@@71)) (= (type $generated@@605) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@285 $generated@@605) (and ($generated@@158 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@71) ($generated@@81 $generated@@603 ($generated@@159 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@81 $generated@@603 ($generated@@159 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@286 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@286 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) (= ($generated@@151 $generated@@607 $generated@@148)  (and (<= ($generated@@250 0) ($generated $generated@@607)) (< ($generated $generated@@607) 4294967296))))
 :pattern ( ($generated@@151 $generated@@607 $generated@@148))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@169) (= (type $generated@@609) $generated@@169)) (= ($generated@@260 ($generated@@281 $generated@@608) ($generated@@281 $generated@@609)) ($generated@@281 ($generated@@260 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@260 ($generated@@281 $generated@@608) ($generated@@281 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@252 ($generated@@8 ($generated@@250 $generated@@610))) ($generated@@281 ($generated@@252 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@252 ($generated@@8 ($generated@@250 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@252 ($generated@@281 $generated@@611)) ($generated@@281 ($generated@@252 $generated@@611)))
 :pattern ( ($generated@@252 ($generated@@281 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@301 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@300 $generated@@613)) (= ($generated@@299 $generated@@612) 0)) (= $generated@@612 ($generated@@298 $generated@@613))))
 :pattern ( ($generated@@299 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@83 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@312 ($generated@@89 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@312 $generated@@614) ($generated ($generated@@88 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@312 ($generated@@89 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@619) $generated@@2)) ($generated@@81 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@81 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@621) $generated@@3)) ($generated@@81 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@81 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@623) $generated@@4)) ($generated@@81 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@81 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@625) $generated@@476)) ($generated@@81 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@81 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@627) $generated@@169)) ($generated@@81 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@81 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@300 $generated@@169)) (= (type $generated@@629) $generated@@71)) (= ($generated@@151 $generated@@628 ($generated@@518 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@299 $generated@@628))) ($generated@@261 ($generated@@519 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@519 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@151 $generated@@628 ($generated@@518 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@300 $generated@@169)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@299 $generated@@632))) (< ($generated@@563 ($generated@@362 $generated@@160 ($generated@@519 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@563 ($generated@@362 $generated@@160 ($generated@@519 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@325 $generated@@169 $generated@@169)) (= (type $generated@@635) $generated@@71)) (= (type $generated@@636) $generated@@71)) ($generated@@151 $generated@@634 ($generated@@436 $generated@@635 $generated@@636))) (and (and ($generated@@151 ($generated@@323 $generated@@634) ($generated@@270 $generated@@635)) ($generated@@151 ($generated@@375 $generated@@634) ($generated@@270 $generated@@636))) ($generated@@151 ($generated@@410 $generated@@634) ($generated@@270 ($generated@@159 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@151 $generated@@634 ($generated@@436 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@343 $generated@@169 $generated@@169)) (= (type $generated@@638) $generated@@71)) (= (type $generated@@639) $generated@@71)) ($generated@@151 $generated@@637 ($generated@@444 $generated@@638 $generated@@639))) (and (and ($generated@@151 ($generated@@341 $generated@@637) ($generated@@275 $generated@@638)) ($generated@@151 ($generated@@386 $generated@@637) ($generated@@275 $generated@@639))) ($generated@@151 ($generated@@418 $generated@@637) ($generated@@275 ($generated@@159 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@151 $generated@@637 ($generated@@444 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@151 $generated@@640 $generated@@46))
 :pattern ( ($generated@@151 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@151 $generated@@641 $generated@@47))
 :pattern ( ($generated@@151 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@151 $generated@@642 $generated@@44))
 :pattern ( ($generated@@151 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@476) ($generated@@151 $generated@@643 $generated@@45))
 :pattern ( ($generated@@151 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@169) ($generated@@151 $generated@@644 $generated@@48))
 :pattern ( ($generated@@151 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () Int)
(assert  (and (and (= (type $generated@@645) ($generated@@181 $generated@@84 $generated@@4)) (= (type $generated@@646) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@648) ($generated@@181 $generated@@84 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@651  (=> (= $generated@@645 ($generated@@235 $generated@@140 $generated@@646 $generated@@60 false)) (=> (and (= $generated@@647 ($generated@@250 5)) (= (ControlFlow 0 3) (- 0 2))) (and (<= ($generated@@250 0) $generated@@647) (< $generated@@647 4294967296))))))
(let (($generated@@652 true))
(let (($generated@@653  (=> (= $generated@@648 ($generated@@180 $generated@@140 $generated@@646 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@652) (=> (= (ControlFlow 0 4) 3) $generated@@651)))))
(let (($generated@@654  (=> (and (and (and ($generated@@285 $generated@@646) ($generated@@649 $generated@@646)) (<= ($generated@@250 0) $generated@@650)) (and (= 2 $generated@@247) (= (ControlFlow 0 5) 4))) $generated@@653)))
$generated@@654)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
