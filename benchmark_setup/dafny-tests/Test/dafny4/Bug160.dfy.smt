(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 (T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 (T@T T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@197 (T@U T@U) T@U)
(declare-fun $generated@@198 (T@U T@U) Bool)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@233 (T@T) T@U)
(declare-fun $generated@@234 (T@U) Int)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@290 (T@T T@U) T@U)
(declare-fun $generated@@296 (T@U T@U) T@U)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@368 (T@U T@U) T@U)
(declare-fun $generated@@379 (T@T) T@U)
(declare-fun $generated@@403 () T@T)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@449 (T@U Int) T@U)
(declare-fun $generated@@458 (T@U) Int)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@503 (T@U T@U T@U) T@U)
(declare-fun $generated@@504 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@505 (T@T T@T) T@T)
(declare-fun $generated@@506 (T@T) T@T)
(declare-fun $generated@@507 (T@T) T@T)
(declare-fun $generated@@508 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Bool)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (= ($generated@@1 ($generated@@144 $generated@@148 $generated@@149)) 14)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@145 ($generated@@144 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@146 ($generated@@144 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@144 $generated@@152 $generated@@153))
))) (= ($generated@@1 $generated@@147) 15)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@136 $generated@@154 $generated@@155)) ($generated@@144 $generated@@147 $generated@@147))
 :pattern ( ($generated@@136 $generated@@154 $generated@@155))
))) (= (type $generated@@139) $generated@@80)) (= (type $generated@@141) $generated@@67)) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@142 $generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@156 $generated@@157))
))) (= (type $generated@@143) $generated@@67)))
(assert  (=> (<= 0 $generated@@135) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@159) $generated@@80)) (or ($generated@@137 $generated@@158 $generated@@159) (and (not (= 0 $generated@@135)) (and ($generated@@138 $generated@@158) (and (not (= $generated@@159 $generated@@139)) (and ($generated@@140 $generated@@159 $generated@@141) ($generated@@77 $generated@@159 $generated@@141 $generated@@158))))))) ($generated@@140 ($generated@@136 $generated@@158 $generated@@159) ($generated@@142 $generated@@143 $generated@@143)))
 :pattern ( ($generated@@136 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@162) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (= (type $generated@@164) $generated@@67))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@80) (= (type $generated@@166) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@165 $generated@@164 $generated@@166)  (or (= $generated@@165 $generated@@139) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@165 $generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@140 $generated@@167 ($generated@@78 0)))
 :pattern ( ($generated@@140 $generated@@167 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@170) 16) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@67)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@67) (= (type $generated@@174) $generated@@67)) (= (type $generated@@175) $generated@@170)) ($generated@@140 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@140 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@147)
 :pattern ( ($generated@@177 $generated@@179))
)) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@147)
 :pattern ( ($generated@@178 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@170) (= (type $generated@@182) $generated@@170)) true) (= ($generated@@176 $generated@@181 $generated@@182)  (and (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)) (= ($generated@@178 $generated@@181) ($generated@@178 $generated@@182)))))
 :pattern ( ($generated@@176 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@67)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@79 $generated@@147 $generated@@2)) (= (type $generated@@187) $generated@@67)) ($generated@@140 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@140 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@67)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> (= (type $generated@@190) $generated@@80) (= ($generated@@140 $generated@@190 $generated@@164)  (or (= $generated@@190 $generated@@139) (= ($generated@@188 $generated@@190) $generated@@164))))
 :pattern ( ($generated@@140 $generated@@190 $generated@@164))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> (= (type $generated@@194) $generated@@67) ($generated@@192 ($generated@@191 $generated@@194)))
 :pattern ( ($generated@@191 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) $generated@@80) (= (type $generated@@196) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@195 $generated@@141 $generated@@196) ($generated@@77 $generated@@195 $generated@@164 $generated@@196)))
 :pattern ( ($generated@@77 $generated@@195 $generated@@141 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! (= (type ($generated@@197 $generated@@199 $generated@@200)) $generated@@170)
 :pattern ( ($generated@@197 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (and (= (type $generated@@201) $generated@@67) (= (type $generated@@202) $generated@@67)) (= (type $generated@@203) $generated@@147)) (= (type $generated@@204) $generated@@147)) (= ($generated@@140 ($generated@@197 $generated@@203 $generated@@204) ($generated@@169 $generated@@201 $generated@@202))  (and ($generated@@198 $generated@@203 $generated@@201) ($generated@@198 $generated@@204 $generated@@202))))
 :pattern ( ($generated@@140 ($generated@@197 $generated@@203 $generated@@204) ($generated@@169 $generated@@201 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (= (type $generated@@205) $generated@@170) (= (type $generated@@206) $generated@@170)) (= ($generated@@176 $generated@@205 $generated@@206) (= $generated@@205 $generated@@206)))
 :pattern ( ($generated@@176 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= (type ($generated@@207 $generated@@208)) $generated@@67)
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (= (type $generated@@209) ($generated@@79 $generated@@147 $generated@@4)) (= (type $generated@@210) $generated@@67)) (= ($generated@@140 $generated@@209 ($generated@@207 $generated@@210)) (forall (($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@211) $generated@@147) ($generated@@0 ($generated@@84 $generated@@209 $generated@@211))) ($generated@@198 $generated@@211 $generated@@210))
 :pattern ( ($generated@@84 $generated@@209 $generated@@211))
))))
 :pattern ( ($generated@@140 $generated@@209 ($generated@@207 $generated@@210)))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@212 $generated@@213)) $generated@@67)
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@214) ($generated@@79 $generated@@147 $generated@@4)) (= (type $generated@@215) $generated@@67)) (= ($generated@@140 $generated@@214 ($generated@@212 $generated@@215)) (forall (($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@216) $generated@@147) ($generated@@0 ($generated@@84 $generated@@214 $generated@@216))) ($generated@@198 $generated@@216 $generated@@215))
 :pattern ( ($generated@@84 $generated@@214 $generated@@216))
))))
 :pattern ( ($generated@@140 $generated@@214 ($generated@@212 $generated@@215)))
)))
(assert (forall (($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(= (type ($generated@@217 $generated@@218)) $generated@@219))
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@217 $generated@@220) $generated@@220)
 :pattern ( ($generated@@217 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@222) $generated@@67) (= (type $generated@@223) $generated@@67)) (= (type $generated@@224) $generated@@147)) (= (type $generated@@225) $generated@@147)) (= (type $generated@@226) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@138 $generated@@226)) (= ($generated@@77 ($generated@@197 $generated@@224 $generated@@225) ($generated@@169 $generated@@222 $generated@@223) $generated@@226)  (and ($generated@@221 $generated@@224 $generated@@222 $generated@@226) ($generated@@221 $generated@@225 $generated@@223 $generated@@226))))
 :pattern ( ($generated@@77 ($generated@@197 $generated@@224 $generated@@225) ($generated@@169 $generated@@222 $generated@@223) $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@227 $generated@@228)) $generated@@71)
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@170) (= ($generated@@168 $generated@@229) (= ($generated@@227 $generated@@229) $generated@@61)))
 :pattern ( ($generated@@168 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@170) ($generated@@168 $generated@@230)) (exists (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (and (and (= (type $generated@@231) $generated@@147) (= (type $generated@@232) $generated@@147)) (= $generated@@230 ($generated@@197 $generated@@231 $generated@@232)))
 :no-pattern (type $generated@@231)
 :no-pattern (type $generated@@232)
 :no-pattern ($generated $generated@@231)
 :no-pattern ($generated@@0 $generated@@231)
 :no-pattern ($generated $generated@@232)
 :no-pattern ($generated@@0 $generated@@232)
)))
 :pattern ( ($generated@@168 $generated@@230))
)))
(assert  (and (and (forall (($generated@@237 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@237)) 17)) (forall (($generated@@238 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@238)) $generated@@238)
 :pattern ( ($generated@@235 $generated@@238))
))) (forall (($generated@@239 T@T) ) (! (= (type ($generated@@233 $generated@@239)) ($generated@@235 $generated@@239))
 :pattern ( ($generated@@233 $generated@@239))
))))
(assert (forall (($generated@@240 T@T) ) (! (= ($generated@@234 ($generated@@233 $generated@@240)) 0)
 :pattern ( ($generated@@233 $generated@@240))
)))
(assert ($generated@@192 $generated@@143))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@147)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@67) (= (type $generated@@245) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@221 ($generated@@241 $generated@@243) $generated@@244 $generated@@245) ($generated@@77 $generated@@243 $generated@@244 $generated@@245)))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@247) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@248) $generated@@147)) (= (type $generated@@249) $generated@@67)) ($generated@@160 $generated@@246 $generated@@247)) ($generated@@221 $generated@@248 $generated@@249 $generated@@246)) ($generated@@221 $generated@@248 $generated@@249 $generated@@247))
 :pattern ( ($generated@@160 $generated@@246 $generated@@247) ($generated@@221 $generated@@248 $generated@@249 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@250) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@253) $generated@@67)) ($generated@@160 $generated@@250 $generated@@251)) ($generated@@77 $generated@@252 $generated@@253 $generated@@250)) ($generated@@77 $generated@@252 $generated@@253 $generated@@251))
 :pattern ( ($generated@@160 $generated@@250 $generated@@251) ($generated@@77 $generated@@252 $generated@@253 $generated@@250))
)))
(assert (forall (($generated@@256 T@T) ) (! (= (type ($generated@@255 $generated@@256)) ($generated@@79 $generated@@256 $generated@@2))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@82 (type $generated@@257))))
 (=> (= (type $generated@@257) ($generated@@79 $generated@@258 $generated@@2)) (and (= (= ($generated@@254 $generated@@257) 0) (= $generated@@257 ($generated@@255 $generated@@258))) (=> (not (= ($generated@@254 $generated@@257) 0)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) (< 0 ($generated ($generated@@84 $generated@@257 $generated@@259))))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert  (and (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@145 (type $generated@@262))))
(= (type ($generated@@260 $generated@@262)) ($generated@@79 $generated@@263 $generated@@4)))
 :pattern ( ($generated@@260 $generated@@262))
)) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= (type ($generated@@261 $generated@@264 $generated@@265)) ($generated@@144 $generated@@264 $generated@@265))
 :pattern ( ($generated@@261 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@T) ) (! (let (($generated@@268 (type $generated@@266)))
 (not ($generated@@0 ($generated@@84 ($generated@@260 ($generated@@261 $generated@@268 $generated@@267)) $generated@@266))))
 :pattern ( (let (($generated@@268 (type $generated@@266)))
($generated@@84 ($generated@@260 ($generated@@261 $generated@@268 $generated@@267)) $generated@@266)))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@79 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@82 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@79 $generated@@288 $generated@@2)) (= ($generated@@184 $generated@@287) (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@288) (and (<= 0 ($generated ($generated@@84 $generated@@287 $generated@@289))) (<= ($generated ($generated@@84 $generated@@287 $generated@@289)) ($generated@@254 $generated@@287))))
 :pattern ( ($generated@@84 $generated@@287 $generated@@289))
)))))
 :pattern ( ($generated@@184 $generated@@287))
)))
(assert (forall (($generated@@291 T@T) ($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@147) ($generated@@198 $generated@@293 $generated@@164)) (and (= ($generated@@241 ($generated@@290 $generated@@80 $generated@@293)) $generated@@293) ($generated@@140 ($generated@@290 $generated@@80 $generated@@293) $generated@@164)))
 :pattern ( ($generated@@198 $generated@@293 $generated@@164))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@147) ($generated@@198 $generated@@294 $generated@@141)) (and (= ($generated@@241 ($generated@@290 $generated@@80 $generated@@294)) $generated@@294) ($generated@@140 ($generated@@290 $generated@@80 $generated@@294) $generated@@141)))
 :pattern ( ($generated@@198 $generated@@294 $generated@@141))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@80) (= ($generated@@140 $generated@@295 $generated@@141)  (and ($generated@@140 $generated@@295 $generated@@164) (not (= $generated@@295 $generated@@139)))))
 :pattern ( ($generated@@140 $generated@@295 $generated@@141))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (! (= (type ($generated@@296 $generated@@298 $generated@@299)) $generated@@147)
 :pattern ( ($generated@@296 $generated@@298 $generated@@299))
)))
(assert  (=> (<= 0 $generated@@135) (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@300) $generated@@67) (= (type $generated@@301) $generated@@147)) (or ($generated@@297 $generated@@300 $generated@@301) (and (not (= 0 $generated@@135)) ($generated@@198 $generated@@301 $generated@@300)))) ($generated@@198 ($generated@@296 $generated@@300 $generated@@301) $generated@@143))
 :pattern ( ($generated@@296 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@146 (type $generated@@302))))
(let (($generated@@304 ($generated@@145 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@144 $generated@@304 $generated@@303)) (or (= $generated@@302 ($generated@@261 $generated@@304 $generated@@303)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) ($generated@@0 ($generated@@84 ($generated@@260 $generated@@302) $generated@@305)))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@260 $generated@@302))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@146 (type $generated@@307))))
(= (type ($generated@@306 $generated@@307)) ($generated@@79 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@146 (type $generated@@309))))
(let (($generated@@311 ($generated@@145 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@144 $generated@@311 $generated@@310)) (or (= $generated@@309 ($generated@@261 $generated@@311 $generated@@310)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@310) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@309) $generated@@312)))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
))))))
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(let (($generated@@315 ($generated@@272 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@271 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@270 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@269 $generated@@313))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@273 (type $generated@@318))))
(= (type ($generated@@317 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@273 (type $generated@@320))))
(let (($generated@@322 ($generated@@272 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@271 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@270 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@321) ($generated@@0 ($generated@@84 ($generated@@317 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) ($generated@@79 $generated@@147 $generated@@2)) (= (type $generated@@325) $generated@@67)) (= ($generated@@140 $generated@@324 ($generated@@183 $generated@@325)) (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@147) (< 0 ($generated ($generated@@84 $generated@@324 $generated@@326)))) ($generated@@198 $generated@@326 $generated@@325))
 :pattern ( ($generated@@84 $generated@@324 $generated@@326))
))))
 :pattern ( ($generated@@140 $generated@@324 ($generated@@183 $generated@@325)))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@327) ($generated@@79 $generated@@147 $generated@@4)) (= (type $generated@@328) $generated@@67)) (= (type $generated@@329) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@327 ($generated@@207 $generated@@328) $generated@@329) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@147) ($generated@@0 ($generated@@84 $generated@@327 $generated@@330))) ($generated@@221 $generated@@330 $generated@@328 $generated@@329))
 :pattern ( ($generated@@84 $generated@@327 $generated@@330))
))))
 :pattern ( ($generated@@77 $generated@@327 ($generated@@207 $generated@@328) $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@79 $generated@@147 $generated@@4)) (= (type $generated@@332) $generated@@67)) (= (type $generated@@333) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@331 ($generated@@212 $generated@@332) $generated@@333) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@147) ($generated@@0 ($generated@@84 $generated@@331 $generated@@334))) ($generated@@221 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@84 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@77 $generated@@331 ($generated@@212 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 (type $generated@@335)))
(= ($generated ($generated@@84 ($generated@@255 $generated@@336) $generated@@335)) 0))
 :pattern ( (let (($generated@@336 (type $generated@@335)))
($generated@@84 ($generated@@255 $generated@@336) $generated@@335)))
)))
(assert  (and (forall (($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@339)) ($generated@@79 $generated@@147 $generated@@4))
 :pattern ( ($generated@@337 $generated@@339))
)) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@146 (type $generated@@340))))
(let (($generated@@342 ($generated@@145 (type $generated@@340))))
(= (type ($generated@@338 $generated@@340)) ($generated@@79 $generated@@342 $generated@@341))))
 :pattern ( ($generated@@338 $generated@@340))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@144 $generated@@147 $generated@@147)) (= (type $generated@@344) $generated@@147)) (= ($generated@@0 ($generated@@84 ($generated@@337 $generated@@343) $generated@@344))  (and ($generated@@0 ($generated@@84 ($generated@@260 $generated@@343) ($generated@@177 ($generated@@290 $generated@@170 $generated@@344)))) (= ($generated@@84 ($generated@@338 $generated@@343) ($generated@@177 ($generated@@290 $generated@@170 $generated@@344))) ($generated@@178 ($generated@@290 $generated@@170 $generated@@344))))))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@343) $generated@@344))
)))
(assert  (and (forall (($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@347)) ($generated@@79 $generated@@147 $generated@@4))
 :pattern ( ($generated@@345 $generated@@347))
)) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@273 (type $generated@@348))))
(let (($generated@@350 ($generated@@272 (type $generated@@348))))
(= (type ($generated@@346 $generated@@348)) ($generated@@79 $generated@@350 $generated@@349))))
 :pattern ( ($generated@@346 $generated@@348))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@352) $generated@@147)) (= ($generated@@0 ($generated@@84 ($generated@@345 $generated@@351) $generated@@352))  (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@351) ($generated@@177 ($generated@@290 $generated@@170 $generated@@352)))) (= ($generated@@84 ($generated@@346 $generated@@351) ($generated@@177 ($generated@@290 $generated@@170 $generated@@352))) ($generated@@178 ($generated@@290 $generated@@170 $generated@@352))))))
 :pattern ( ($generated@@84 ($generated@@345 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 (type $generated@@354)))
(let (($generated@@356 ($generated@@145 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@144 $generated@@356 $generated@@355)) (= ($generated@@0 ($generated@@84 ($generated@@306 $generated@@353) $generated@@354)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) (and ($generated@@0 ($generated@@84 ($generated@@260 $generated@@353) $generated@@357)) (= $generated@@354 ($generated@@84 ($generated@@338 $generated@@353) $generated@@357))))
 :pattern ( ($generated@@84 ($generated@@260 $generated@@353) $generated@@357))
 :pattern ( ($generated@@84 ($generated@@338 $generated@@353) $generated@@357))
))))))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(let (($generated@@361 ($generated@@272 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@271 $generated@@361 $generated@@360)) (= ($generated@@0 ($generated@@84 ($generated@@317 $generated@@358) $generated@@359)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@358) $generated@@362)) (= $generated@@359 ($generated@@84 ($generated@@346 $generated@@358) $generated@@362))))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@358) $generated@@362))
 :pattern ( ($generated@@84 ($generated@@346 $generated@@358) $generated@@362))
))))))
 :pattern ( ($generated@@84 ($generated@@317 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (and (= (type $generated@@363) ($generated@@144 $generated@@147 $generated@@147)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) $generated@@67)) (= (type $generated@@366) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@363 ($generated@@142 $generated@@364 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@147) ($generated@@0 ($generated@@84 ($generated@@260 $generated@@363) $generated@@367))) (and ($generated@@221 ($generated@@84 ($generated@@338 $generated@@363) $generated@@367) $generated@@365 $generated@@366) ($generated@@221 $generated@@367 $generated@@364 $generated@@366)))
 :pattern ( ($generated@@84 ($generated@@338 $generated@@363) $generated@@367))
 :pattern ( ($generated@@84 ($generated@@260 $generated@@363) $generated@@367))
))))
 :pattern ( ($generated@@77 $generated@@363 ($generated@@142 $generated@@364 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@67)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (= (type $generated@@371) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) $generated@@67)) (= (type $generated@@374) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@147) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@371) $generated@@375))) (and ($generated@@221 ($generated@@84 ($generated@@346 $generated@@371) $generated@@375) $generated@@373 $generated@@374) ($generated@@221 $generated@@375 $generated@@372 $generated@@374)))
 :pattern ( ($generated@@84 ($generated@@346 $generated@@371) $generated@@375))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@371) $generated@@375))
))))
 :pattern ( ($generated@@77 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@376) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@378) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@376 $generated@@378))) (and ($generated@@160 $generated@@376 $generated@@377) ($generated@@160 $generated@@377 $generated@@378))) ($generated@@160 $generated@@376 $generated@@378))
 :pattern ( ($generated@@160 $generated@@376 $generated@@377) ($generated@@160 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@T) ) (! (= (type ($generated@@379 $generated@@380)) ($generated@@79 $generated@@380 $generated@@4))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@273 (type $generated@@381))))
(let (($generated@@383 ($generated@@272 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@271 $generated@@383 $generated@@382)) (= (= $generated@@381 ($generated@@270 $generated@@383 $generated@@382)) (= ($generated@@269 $generated@@381) ($generated@@379 $generated@@383))))))
 :pattern ( ($generated@@269 $generated@@381))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@273 (type $generated@@384))))
(let (($generated@@386 ($generated@@272 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@271 $generated@@386 $generated@@385)) (= (= $generated@@384 ($generated@@270 $generated@@386 $generated@@385)) (= ($generated@@317 $generated@@384) ($generated@@379 $generated@@385))))))
 :pattern ( ($generated@@317 $generated@@384))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@273 (type $generated@@387))))
(let (($generated@@389 ($generated@@272 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@271 $generated@@389 $generated@@388)) (= (= $generated@@387 ($generated@@270 $generated@@389 $generated@@388)) (= ($generated@@345 $generated@@387) ($generated@@379 $generated@@147))))))
 :pattern ( ($generated@@345 $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@146 (type $generated@@390))))
(let (($generated@@392 ($generated@@145 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@144 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@261 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (and (and (= (type $generated@@393) $generated@@147) (= (type $generated@@394) $generated@@147)) ($generated@@0 ($generated@@84 ($generated@@337 $generated@@390) ($generated@@241 ($generated@@197 $generated@@393 $generated@@394)))))
 :no-pattern (type $generated@@393)
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@337 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@273 (type $generated@@395))))
(let (($generated@@397 ($generated@@272 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@271 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@270 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (and (and (= (type $generated@@398) $generated@@147) (= (type $generated@@399) $generated@@147)) ($generated@@0 ($generated@@84 ($generated@@345 $generated@@395) ($generated@@241 ($generated@@197 $generated@@398 $generated@@399)))))
 :no-pattern (type $generated@@398)
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@345 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@147) ($generated@@198 $generated@@400 $generated@@46)) (and (= ($generated@@241 ($generated@@290 $generated@@2 $generated@@400)) $generated@@400) ($generated@@140 ($generated@@290 $generated@@2 $generated@@400) $generated@@46)))
 :pattern ( ($generated@@198 $generated@@400 $generated@@46))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@147) ($generated@@198 $generated@@401 $generated@@47)) (and (= ($generated@@241 ($generated@@290 $generated@@3 $generated@@401)) $generated@@401) ($generated@@140 ($generated@@290 $generated@@3 $generated@@401) $generated@@47)))
 :pattern ( ($generated@@198 $generated@@401 $generated@@47))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@147) ($generated@@198 $generated@@402 $generated@@44)) (and (= ($generated@@241 ($generated@@290 $generated@@4 $generated@@402)) $generated@@402) ($generated@@140 ($generated@@290 $generated@@4 $generated@@402) $generated@@44)))
 :pattern ( ($generated@@198 $generated@@402 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@403) 19))
(assert (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@147) ($generated@@198 $generated@@404 $generated@@45)) (and (= ($generated@@241 ($generated@@290 $generated@@403 $generated@@404)) $generated@@404) ($generated@@140 ($generated@@290 $generated@@403 $generated@@404) $generated@@45)))
 :pattern ( ($generated@@198 $generated@@404 $generated@@45))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@67) (= ($generated@@198 ($generated@@241 $generated@@405) $generated@@406) ($generated@@140 $generated@@405 $generated@@406)))
 :pattern ( ($generated@@198 ($generated@@241 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@82 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@79 $generated@@408 $generated@@2)) (<= 0 ($generated@@254 $generated@@407))))
 :pattern ( ($generated@@254 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@236 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@235 $generated@@410)) (<= 0 ($generated@@234 $generated@@409))))
 :pattern ( ($generated@@234 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@67) ($generated@@192 $generated@@411)) (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@413) $generated@@147)) ($generated@@198 $generated@@413 $generated@@411)) ($generated@@221 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@221 $generated@@413 $generated@@411 $generated@@412))
)))
 :pattern ( ($generated@@192 $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ) (! (= (type ($generated@@414 $generated@@415)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@67) (= (type $generated@@417) $generated@@67)) (= ($generated@@414 ($generated@@142 $generated@@416 $generated@@417)) $generated@@416))
 :pattern ( ($generated@@142 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@67) (= (type $generated@@421) $generated@@67)) (= ($generated@@418 ($generated@@142 $generated@@420 $generated@@421)) $generated@@421))
 :pattern ( ($generated@@142 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@67) (= (type $generated@@423) $generated@@67)) (= ($generated@@75 ($generated@@142 $generated@@422 $generated@@423)) $generated@@58))
 :pattern ( ($generated@@142 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@67) (= (type $generated@@427) $generated@@67)) (= ($generated@@424 ($generated@@368 $generated@@426 $generated@@427)) $generated@@426))
 :pattern ( ($generated@@368 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@67)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@67) (= (type $generated@@431) $generated@@67)) (= ($generated@@428 ($generated@@368 $generated@@430 $generated@@431)) $generated@@431))
 :pattern ( ($generated@@368 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@67) (= (type $generated@@433) $generated@@67)) (= ($generated@@75 ($generated@@368 $generated@@432 $generated@@433)) $generated@@59))
 :pattern ( ($generated@@368 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@147) (= (type $generated@@435) $generated@@147)) (= ($generated@@227 ($generated@@197 $generated@@434 $generated@@435)) $generated@@61))
 :pattern ( ($generated@@197 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@169 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@169 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@169 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@169 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@147) (= (type $generated@@445) $generated@@147)) (= ($generated@@177 ($generated@@197 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@197 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@147) (= (type $generated@@447) $generated@@147)) (= ($generated@@178 ($generated@@197 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@197 $generated@@446 $generated@@447))
)))
(assert  (and (forall (($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@448 $generated@@450))
)) (forall (($generated@@451 T@U) ($generated@@452 Int) ) (! (let (($generated@@453 ($generated@@236 (type $generated@@451))))
(= (type ($generated@@449 $generated@@451 $generated@@452)) $generated@@453))
 :pattern ( ($generated@@449 $generated@@451 $generated@@452))
))))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (= (type $generated@@454) ($generated@@235 $generated@@147)) (= (type $generated@@455) $generated@@67)) (= (type $generated@@456) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@454 ($generated@@448 $generated@@455) $generated@@456) (forall (($generated@@457 Int) ) (!  (=> (and (<= 0 $generated@@457) (< $generated@@457 ($generated@@234 $generated@@454))) ($generated@@221 ($generated@@449 $generated@@454 $generated@@457) $generated@@455 $generated@@456))
 :pattern ( ($generated@@449 $generated@@454 $generated@@457))
))))
 :pattern ( ($generated@@77 $generated@@454 ($generated@@448 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@459 Int) ) (! (= ($generated@@458 ($generated@@78 $generated@@459)) $generated@@459)
 :pattern ( ($generated@@78 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@67)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@67) (= ($generated@@460 ($generated@@207 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@207 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@67) (= ($generated@@75 ($generated@@207 $generated@@463)) $generated@@54))
 :pattern ( ($generated@@207 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@67) (= ($generated@@464 ($generated@@212 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@212 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@67) (= ($generated@@75 ($generated@@212 $generated@@467)) $generated@@55))
 :pattern ( ($generated@@212 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@468 ($generated@@183 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@183 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@67) (= ($generated@@75 ($generated@@183 $generated@@471)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@472 ($generated@@448 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@448 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@67) (= ($generated@@75 ($generated@@448 $generated@@475)) $generated@@57))
 :pattern ( ($generated@@448 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(= ($generated@@290 $generated@@477 ($generated@@241 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@241 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@144 $generated@@147 $generated@@147)) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) $generated@@67)) (= ($generated@@140 $generated@@478 ($generated@@142 $generated@@479 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@147) ($generated@@0 ($generated@@84 ($generated@@260 $generated@@478) $generated@@481))) (and ($generated@@198 ($generated@@84 ($generated@@338 $generated@@478) $generated@@481) $generated@@480) ($generated@@198 $generated@@481 $generated@@479)))
 :pattern ( ($generated@@84 ($generated@@338 $generated@@478) $generated@@481))
 :pattern ( ($generated@@84 ($generated@@260 $generated@@478) $generated@@481))
))))
 :pattern ( ($generated@@140 $generated@@478 ($generated@@142 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) $generated@@67)) (= ($generated@@140 $generated@@482 ($generated@@368 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@147) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))) (and ($generated@@198 ($generated@@84 ($generated@@346 $generated@@482) $generated@@485) $generated@@484) ($generated@@198 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@84 ($generated@@346 $generated@@482) $generated@@485))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@140 $generated@@482 ($generated@@368 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@147) (= (type $generated@@489) $generated@@147)) (< ($generated@@486 $generated@@488) ($generated@@487 ($generated@@197 $generated@@488 $generated@@489))))
 :pattern ( ($generated@@197 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@147) (= (type $generated@@491) $generated@@147)) (< ($generated@@486 $generated@@491) ($generated@@487 ($generated@@197 $generated@@490 $generated@@491))))
 :pattern ( ($generated@@197 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (and (= (type $generated@@492) $generated@@147) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) $generated@@67)) ($generated@@198 $generated@@492 ($generated@@142 $generated@@493 $generated@@494))) (and (= ($generated@@241 ($generated@@290 ($generated@@144 $generated@@147 $generated@@147) $generated@@492)) $generated@@492) ($generated@@140 ($generated@@290 ($generated@@144 $generated@@147 $generated@@147) $generated@@492) ($generated@@142 $generated@@493 $generated@@494))))
 :pattern ( ($generated@@198 $generated@@492 ($generated@@142 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@495) $generated@@147) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) ($generated@@198 $generated@@495 ($generated@@368 $generated@@496 $generated@@497))) (and (= ($generated@@241 ($generated@@290 ($generated@@271 $generated@@147 $generated@@147) $generated@@495)) $generated@@495) ($generated@@140 ($generated@@290 ($generated@@271 $generated@@147 $generated@@147) $generated@@495) ($generated@@368 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@198 $generated@@495 ($generated@@368 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= (type $generated@@500) $generated@@147)) ($generated@@198 $generated@@500 ($generated@@169 $generated@@498 $generated@@499))) (and (= ($generated@@241 ($generated@@290 $generated@@170 $generated@@500)) $generated@@500) ($generated@@140 ($generated@@290 $generated@@170 $generated@@500) ($generated@@169 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@198 $generated@@500 ($generated@@169 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
 (not ($generated@@0 ($generated@@84 ($generated@@379 $generated@@502) $generated@@501))))
 :pattern ( (let (($generated@@502 (type $generated@@501)))
($generated@@84 ($generated@@379 $generated@@502) $generated@@501)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@509 T@T) ($generated@@510 T@T) ) (= ($generated@@1 ($generated@@505 $generated@@509 $generated@@510)) 20)) (forall (($generated@@511 T@T) ($generated@@512 T@T) ) (! (= ($generated@@506 ($generated@@505 $generated@@511 $generated@@512)) $generated@@511)
 :pattern ( ($generated@@505 $generated@@511 $generated@@512))
))) (forall (($generated@@513 T@T) ($generated@@514 T@T) ) (! (= ($generated@@507 ($generated@@505 $generated@@513 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@505 $generated@@513 $generated@@514))
))) (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@507 (type $generated@@515))))
(= (type ($generated@@503 $generated@@515 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@503 $generated@@515 $generated@@516 $generated@@517))
))) (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(let (($generated@@524 (type $generated@@520)))
(= (type ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522)) ($generated@@505 $generated@@524 $generated@@523))))
 :pattern ( ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522))
))) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@507 (type $generated@@525))))
 (=> (= (type $generated@@528) $generated@@529) (= ($generated@@503 ($generated@@508 $generated@@525 $generated@@526 $generated@@527 $generated@@528) $generated@@526 $generated@@527) $generated@@528)))
 :weight 0
))) (and (and (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (or (= $generated@@532 $generated@@534) (= ($generated@@503 ($generated@@508 $generated@@531 $generated@@532 $generated@@533 $generated@@530) $generated@@534 $generated@@535) ($generated@@503 $generated@@531 $generated@@534 $generated@@535)))
 :weight 0
)) (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (or (= $generated@@539 $generated@@541) (= ($generated@@503 ($generated@@508 $generated@@537 $generated@@538 $generated@@539 $generated@@536) $generated@@540 $generated@@541) ($generated@@503 $generated@@537 $generated@@540 $generated@@541)))
 :weight 0
))) (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (or true (= ($generated@@503 ($generated@@508 $generated@@543 $generated@@544 $generated@@545 $generated@@542) $generated@@546 $generated@@547) ($generated@@503 $generated@@543 $generated@@546 $generated@@547)))
 :weight 0
)))) (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (= (type ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551)) ($generated@@505 $generated@@80 $generated@@4))
 :pattern ( ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@70 (type $generated@@557))))
 (=> (and (and (and (and (and (= (type $generated@@552) $generated@@80) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@554) ($generated@@69 $generated@@4))) (= (type $generated@@555) $generated@@80)) (= (type $generated@@556) $generated@@80)) (= (type $generated@@557) ($generated@@69 $generated@@558))) (= ($generated@@0 ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))  (=> (and (not (= $generated@@556 $generated@@552)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@553 $generated@@556) $generated@@554))) (= $generated@@556 $generated@@555)))))
 :pattern ( ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@72)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@169 $generated@@561 $generated@@562)) $generated@@62) (= ($generated@@559 ($generated@@169 $generated@@561 $generated@@562)) $generated@@65)))
 :pattern ( ($generated@@169 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@566) $generated@@80)) (=> (and (and (and ($generated@@138 $generated@@564) ($generated@@138 $generated@@565)) (and (not (= $generated@@566 $generated@@139)) ($generated@@140 $generated@@566 $generated@@141))) (and ($generated@@563 $generated@@564) ($generated@@160 $generated@@564 $generated@@565))) (=> (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@70 (type $generated@@568))))
 (=> (and (and (= (type $generated@@567) $generated@@80) (= (type $generated@@568) ($generated@@69 $generated@@569))) (and (not (= $generated@@567 $generated@@139)) (= $generated@@567 $generated@@566))) (= ($generated@@86 ($generated@@84 $generated@@564 $generated@@567) $generated@@568) ($generated@@86 ($generated@@84 $generated@@565 $generated@@567) $generated@@568))))
 :no-pattern (type $generated@@567)
 :no-pattern (type $generated@@568)
 :no-pattern ($generated $generated@@567)
 :no-pattern ($generated@@0 $generated@@567)
 :no-pattern ($generated $generated@@568)
 :no-pattern ($generated@@0 $generated@@568)
)) (= ($generated@@136 $generated@@564 $generated@@566) ($generated@@136 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@563 $generated@@564) ($generated@@160 $generated@@564 $generated@@565) ($generated@@136 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@170) (= ($generated@@486 ($generated@@241 $generated@@570)) ($generated@@487 $generated@@570)))
 :pattern ( ($generated@@486 ($generated@@241 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@147) ($generated@@198 $generated@@571 ($generated@@78 0))) (and (= ($generated@@241 ($generated@@290 $generated@@2 $generated@@571)) $generated@@571) ($generated@@140 ($generated@@290 ($generated@@79 $generated@@147 $generated@@4) $generated@@571) ($generated@@78 0))))
 :pattern ( ($generated@@198 $generated@@571 ($generated@@78 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@147) (= (type $generated@@573) $generated@@67)) ($generated@@198 $generated@@572 ($generated@@207 $generated@@573))) (and (= ($generated@@241 ($generated@@290 ($generated@@79 $generated@@147 $generated@@4) $generated@@572)) $generated@@572) ($generated@@140 ($generated@@290 ($generated@@79 $generated@@147 $generated@@4) $generated@@572) ($generated@@207 $generated@@573))))
 :pattern ( ($generated@@198 $generated@@572 ($generated@@207 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@147) (= (type $generated@@575) $generated@@67)) ($generated@@198 $generated@@574 ($generated@@212 $generated@@575))) (and (= ($generated@@241 ($generated@@290 ($generated@@79 $generated@@147 $generated@@4) $generated@@574)) $generated@@574) ($generated@@140 ($generated@@290 ($generated@@79 $generated@@147 $generated@@4) $generated@@574) ($generated@@212 $generated@@575))))
 :pattern ( ($generated@@198 $generated@@574 ($generated@@212 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@147) (= (type $generated@@577) $generated@@67)) ($generated@@198 $generated@@576 ($generated@@183 $generated@@577))) (and (= ($generated@@241 ($generated@@290 ($generated@@79 $generated@@147 $generated@@2) $generated@@576)) $generated@@576) ($generated@@140 ($generated@@290 ($generated@@79 $generated@@147 $generated@@2) $generated@@576) ($generated@@183 $generated@@577))))
 :pattern ( ($generated@@198 $generated@@576 ($generated@@183 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@147) (= (type $generated@@579) $generated@@67)) ($generated@@198 $generated@@578 ($generated@@448 $generated@@579))) (and (= ($generated@@241 ($generated@@290 ($generated@@235 $generated@@147) $generated@@578)) $generated@@578) ($generated@@140 ($generated@@290 ($generated@@235 $generated@@147) $generated@@578) ($generated@@448 $generated@@579))))
 :pattern ( ($generated@@198 $generated@@578 ($generated@@448 $generated@@579)))
)))
(assert (= ($generated@@75 $generated@@164) $generated@@63))
(assert (= ($generated@@559 $generated@@164) $generated@@66))
(assert (= ($generated@@75 $generated@@141) $generated@@64))
(assert (= ($generated@@559 $generated@@141) $generated@@66))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@79 $generated@@147 $generated@@2)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@580 ($generated@@183 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@147) (< 0 ($generated ($generated@@84 $generated@@580 $generated@@583)))) ($generated@@221 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@84 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@77 $generated@@580 ($generated@@183 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@170) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@138 $generated@@586) (and ($generated@@168 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@67) ($generated@@77 $generated@@584 ($generated@@169 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@77 $generated@@584 ($generated@@169 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@221 ($generated@@177 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@221 ($generated@@177 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@170) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@138 $generated@@590) (and ($generated@@168 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@67) ($generated@@77 $generated@@588 ($generated@@169 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@77 $generated@@588 ($generated@@169 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@221 ($generated@@178 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@221 ($generated@@178 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@147) (= (type $generated@@593) $generated@@147)) (= ($generated@@197 ($generated@@217 $generated@@592) ($generated@@217 $generated@@593)) ($generated@@217 ($generated@@197 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@197 ($generated@@217 $generated@@592) ($generated@@217 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@241 ($generated@@217 $generated@@594)) ($generated@@217 ($generated@@241 $generated@@594)))
 :pattern ( ($generated@@241 ($generated@@217 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@236 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@235 $generated@@596)) (= ($generated@@234 $generated@@595) 0)) (= $generated@@595 ($generated@@233 $generated@@596))))
 :pattern ( ($generated@@234 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@79 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@254 ($generated@@85 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@254 $generated@@597) ($generated ($generated@@84 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@254 ($generated@@85 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@602) $generated@@2)) ($generated@@77 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@77 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@604) $generated@@3)) ($generated@@77 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@77 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@4)) ($generated@@77 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@403)) ($generated@@77 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@610) $generated@@147)) ($generated@@77 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@77 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@235 $generated@@147)) (= (type $generated@@612) $generated@@67)) (= ($generated@@140 $generated@@611 ($generated@@448 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@234 $generated@@611))) ($generated@@198 ($generated@@449 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@449 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@140 $generated@@611 ($generated@@448 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@235 $generated@@147)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@234 $generated@@615))) (< ($generated@@487 ($generated@@290 $generated@@170 ($generated@@449 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@487 ($generated@@290 $generated@@170 ($generated@@449 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@144 $generated@@147 $generated@@147)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) ($generated@@140 $generated@@617 ($generated@@142 $generated@@618 $generated@@619))) (and (and ($generated@@140 ($generated@@260 $generated@@617) ($generated@@207 $generated@@618)) ($generated@@140 ($generated@@306 $generated@@617) ($generated@@207 $generated@@619))) ($generated@@140 ($generated@@337 $generated@@617) ($generated@@207 ($generated@@169 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@140 $generated@@617 ($generated@@142 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@140 $generated@@620 ($generated@@368 $generated@@621 $generated@@622))) (and (and ($generated@@140 ($generated@@269 $generated@@620) ($generated@@212 $generated@@621)) ($generated@@140 ($generated@@317 $generated@@620) ($generated@@212 $generated@@622))) ($generated@@140 ($generated@@345 $generated@@620) ($generated@@212 ($generated@@169 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@140 $generated@@620 ($generated@@368 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@140 $generated@@623 $generated@@46))
 :pattern ( ($generated@@140 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@140 $generated@@624 $generated@@47))
 :pattern ( ($generated@@140 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@140 $generated@@625 $generated@@44))
 :pattern ( ($generated@@140 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@403) ($generated@@140 $generated@@626 $generated@@45))
 :pattern ( ($generated@@140 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@147) ($generated@@140 $generated@@627 $generated@@48))
 :pattern ( ($generated@@140 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@639) 21) (forall (($generated@@640 T@U) ) (! (= (type ($generated@@628 $generated@@640)) $generated@@639)
 :pattern ( ($generated@@628 $generated@@640))
))) (= (type $generated@@629) $generated@@639)) (= (type $generated@@630) $generated@@639)) (= (type $generated@@631) ($generated@@505 $generated@@80 $generated@@4))) (= (type $generated@@632) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@633) $generated@@80)) (= (type $generated@@634) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@635) $generated@@147)) (= (type $generated@@636) $generated@@67)) (= (type $generated@@637) $generated@@147)) (= (type $generated@@638) $generated@@147)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@641  (=> (= ($generated@@628 $generated@@629) $generated@@629) (=> (and (= ($generated@@628 $generated@@630) $generated@@630) (= $generated@@631 ($generated@@504 $generated@@139 $generated@@632 $generated@@60 $generated@@633))) (=> (and (and ($generated@@138 $generated@@634) ($generated@@563 $generated@@634)) (and (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@80) (=> (and (not (= $generated@@642 $generated@@139)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@632 $generated@@642) $generated@@60))) (or (= ($generated@@84 $generated@@634 $generated@@642) ($generated@@84 $generated@@632 $generated@@642)) (= $generated@@642 $generated@@633))))
 :pattern ( ($generated@@84 $generated@@634 $generated@@642))
)) ($generated@@160 $generated@@632 $generated@@634))) (=> (and (and (and ($generated@@198 $generated@@635 ($generated@@191 $generated@@636)) ($generated@@221 $generated@@635 ($generated@@191 $generated@@636) $generated@@634)) ($generated@@221 $generated@@635 ($generated@@191 $generated@@636) $generated@@634)) (and ($generated@@297 ($generated@@191 $generated@@636) $generated@@635) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@633 $generated@@139))))))))
(let (($generated@@643  (=> (and ($generated@@138 $generated@@632) ($generated@@563 $generated@@632)) (=> (and (and (and ($generated@@198 $generated@@637 $generated@@636) ($generated@@221 $generated@@637 $generated@@636 $generated@@632)) (and ($generated@@140 $generated@@633 $generated@@141) ($generated@@77 $generated@@633 $generated@@141 $generated@@632))) (and (and ($generated@@198 $generated@@638 ($generated@@191 $generated@@636)) ($generated@@221 $generated@@638 ($generated@@191 $generated@@636) $generated@@632)) (and (= 1 $generated@@135) (= (ControlFlow 0 3) 2)))) $generated@@641))))
$generated@@643)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 (T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 (T@T T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@197 (T@U T@U) T@U)
(declare-fun $generated@@198 (T@U T@U) Bool)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@217 (Int) Int)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U) Bool)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@235 (T@T) T@U)
(declare-fun $generated@@236 (T@U) Int)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@263 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (T@T T@T) T@U)
(declare-fun $generated@@273 (T@T T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@292 (T@T T@U) T@U)
(declare-fun $generated@@298 (T@U T@U) T@U)
(declare-fun $generated@@299 (T@U T@U) Bool)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@381 (T@T) T@U)
(declare-fun $generated@@405 () T@T)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@451 (T@U Int) T@U)
(declare-fun $generated@@460 (T@U) Int)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@505 (T@U T@U T@U) T@U)
(declare-fun $generated@@506 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@507 (T@T T@T) T@T)
(declare-fun $generated@@508 (T@T) T@T)
(declare-fun $generated@@509 (T@T) T@T)
(declare-fun $generated@@510 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Bool)
(declare-fun $generated@@617 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (= ($generated@@1 ($generated@@144 $generated@@148 $generated@@149)) 14)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@145 ($generated@@144 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@146 ($generated@@144 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@144 $generated@@152 $generated@@153))
))) (= ($generated@@1 $generated@@147) 15)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@136 $generated@@154 $generated@@155)) ($generated@@144 $generated@@147 $generated@@147))
 :pattern ( ($generated@@136 $generated@@154 $generated@@155))
))) (= (type $generated@@139) $generated@@80)) (= (type $generated@@141) $generated@@67)) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@142 $generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@156 $generated@@157))
))) (= (type $generated@@143) $generated@@67)))
(assert  (=> (<= 0 $generated@@135) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@159) $generated@@80)) (or ($generated@@137 $generated@@158 $generated@@159) (and (not (= 0 $generated@@135)) (and ($generated@@138 $generated@@158) (and (not (= $generated@@159 $generated@@139)) (and ($generated@@140 $generated@@159 $generated@@141) ($generated@@77 $generated@@159 $generated@@141 $generated@@158))))))) ($generated@@140 ($generated@@136 $generated@@158 $generated@@159) ($generated@@142 $generated@@143 $generated@@143)))
 :pattern ( ($generated@@136 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@162) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (= (type $generated@@164) $generated@@67))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@80) (= (type $generated@@166) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@165 $generated@@164 $generated@@166)  (or (= $generated@@165 $generated@@139) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@165 $generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@140 $generated@@167 ($generated@@78 0)))
 :pattern ( ($generated@@140 $generated@@167 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@170) 16) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@67)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@67) (= (type $generated@@174) $generated@@67)) (= (type $generated@@175) $generated@@170)) ($generated@@140 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@140 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@147)
 :pattern ( ($generated@@177 $generated@@179))
)) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@147)
 :pattern ( ($generated@@178 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@170) (= (type $generated@@182) $generated@@170)) true) (= ($generated@@176 $generated@@181 $generated@@182)  (and (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)) (= ($generated@@178 $generated@@181) ($generated@@178 $generated@@182)))))
 :pattern ( ($generated@@176 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@67)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@79 $generated@@147 $generated@@2)) (= (type $generated@@187) $generated@@67)) ($generated@@140 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@140 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@67)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> (= (type $generated@@190) $generated@@80) (= ($generated@@140 $generated@@190 $generated@@164)  (or (= $generated@@190 $generated@@139) (= ($generated@@188 $generated@@190) $generated@@164))))
 :pattern ( ($generated@@140 $generated@@190 $generated@@164))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> (= (type $generated@@194) $generated@@67) ($generated@@192 ($generated@@191 $generated@@194)))
 :pattern ( ($generated@@191 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) $generated@@80) (= (type $generated@@196) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@195 $generated@@141 $generated@@196) ($generated@@77 $generated@@195 $generated@@164 $generated@@196)))
 :pattern ( ($generated@@77 $generated@@195 $generated@@141 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! (= (type ($generated@@197 $generated@@199 $generated@@200)) $generated@@170)
 :pattern ( ($generated@@197 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (and (= (type $generated@@201) $generated@@67) (= (type $generated@@202) $generated@@67)) (= (type $generated@@203) $generated@@147)) (= (type $generated@@204) $generated@@147)) (= ($generated@@140 ($generated@@197 $generated@@203 $generated@@204) ($generated@@169 $generated@@201 $generated@@202))  (and ($generated@@198 $generated@@203 $generated@@201) ($generated@@198 $generated@@204 $generated@@202))))
 :pattern ( ($generated@@140 ($generated@@197 $generated@@203 $generated@@204) ($generated@@169 $generated@@201 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (= (type $generated@@205) $generated@@170) (= (type $generated@@206) $generated@@170)) (= ($generated@@176 $generated@@205 $generated@@206) (= $generated@@205 $generated@@206)))
 :pattern ( ($generated@@176 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= (type ($generated@@207 $generated@@208)) $generated@@67)
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (= (type $generated@@209) ($generated@@79 $generated@@147 $generated@@4)) (= (type $generated@@210) $generated@@67)) (= ($generated@@140 $generated@@209 ($generated@@207 $generated@@210)) (forall (($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@211) $generated@@147) ($generated@@0 ($generated@@84 $generated@@209 $generated@@211))) ($generated@@198 $generated@@211 $generated@@210))
 :pattern ( ($generated@@84 $generated@@209 $generated@@211))
))))
 :pattern ( ($generated@@140 $generated@@209 ($generated@@207 $generated@@210)))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@212 $generated@@213)) $generated@@67)
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@214) ($generated@@79 $generated@@147 $generated@@4)) (= (type $generated@@215) $generated@@67)) (= ($generated@@140 $generated@@214 ($generated@@212 $generated@@215)) (forall (($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@216) $generated@@147) ($generated@@0 ($generated@@84 $generated@@214 $generated@@216))) ($generated@@198 $generated@@216 $generated@@215))
 :pattern ( ($generated@@84 $generated@@214 $generated@@216))
))))
 :pattern ( ($generated@@140 $generated@@214 ($generated@@212 $generated@@215)))
)))
(assert (forall (($generated@@218 Int) ) (! (= ($generated@@217 $generated@@218) $generated@@218)
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(= (type ($generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= ($generated@@219 $generated@@222) $generated@@222)
 :pattern ( ($generated@@219 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@224) $generated@@67) (= (type $generated@@225) $generated@@67)) (= (type $generated@@226) $generated@@147)) (= (type $generated@@227) $generated@@147)) (= (type $generated@@228) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@138 $generated@@228)) (= ($generated@@77 ($generated@@197 $generated@@226 $generated@@227) ($generated@@169 $generated@@224 $generated@@225) $generated@@228)  (and ($generated@@223 $generated@@226 $generated@@224 $generated@@228) ($generated@@223 $generated@@227 $generated@@225 $generated@@228))))
 :pattern ( ($generated@@77 ($generated@@197 $generated@@226 $generated@@227) ($generated@@169 $generated@@224 $generated@@225) $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@229 $generated@@230)) $generated@@71)
 :pattern ( ($generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@170) (= ($generated@@168 $generated@@231) (= ($generated@@229 $generated@@231) $generated@@61)))
 :pattern ( ($generated@@168 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@170) ($generated@@168 $generated@@232)) (exists (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (and (and (= (type $generated@@233) $generated@@147) (= (type $generated@@234) $generated@@147)) (= $generated@@232 ($generated@@197 $generated@@233 $generated@@234)))
 :no-pattern (type $generated@@233)
 :no-pattern (type $generated@@234)
 :no-pattern ($generated $generated@@233)
 :no-pattern ($generated@@0 $generated@@233)
 :no-pattern ($generated $generated@@234)
 :no-pattern ($generated@@0 $generated@@234)
)))
 :pattern ( ($generated@@168 $generated@@232))
)))
(assert  (and (and (forall (($generated@@239 T@T) ) (= ($generated@@1 ($generated@@237 $generated@@239)) 17)) (forall (($generated@@240 T@T) ) (! (= ($generated@@238 ($generated@@237 $generated@@240)) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
))) (forall (($generated@@241 T@T) ) (! (= (type ($generated@@235 $generated@@241)) ($generated@@237 $generated@@241))
 :pattern ( ($generated@@235 $generated@@241))
))))
(assert (forall (($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@242)) 0)
 :pattern ( ($generated@@235 $generated@@242))
)))
(assert ($generated@@192 $generated@@143))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@147)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@67) (= (type $generated@@247) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@223 ($generated@@243 $generated@@245) $generated@@246 $generated@@247) ($generated@@77 $generated@@245 $generated@@246 $generated@@247)))
 :pattern ( ($generated@@223 ($generated@@243 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@249) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@250) $generated@@147)) (= (type $generated@@251) $generated@@67)) ($generated@@160 $generated@@248 $generated@@249)) ($generated@@223 $generated@@250 $generated@@251 $generated@@248)) ($generated@@223 $generated@@250 $generated@@251 $generated@@249))
 :pattern ( ($generated@@160 $generated@@248 $generated@@249) ($generated@@223 $generated@@250 $generated@@251 $generated@@248))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@252) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@253) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@255) $generated@@67)) ($generated@@160 $generated@@252 $generated@@253)) ($generated@@77 $generated@@254 $generated@@255 $generated@@252)) ($generated@@77 $generated@@254 $generated@@255 $generated@@253))
 :pattern ( ($generated@@160 $generated@@252 $generated@@253) ($generated@@77 $generated@@254 $generated@@255 $generated@@252))
)))
(assert (forall (($generated@@258 T@T) ) (! (= (type ($generated@@257 $generated@@258)) ($generated@@79 $generated@@258 $generated@@2))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@82 (type $generated@@259))))
 (=> (= (type $generated@@259) ($generated@@79 $generated@@260 $generated@@2)) (and (= (= ($generated@@256 $generated@@259) 0) (= $generated@@259 ($generated@@257 $generated@@260))) (=> (not (= ($generated@@256 $generated@@259) 0)) (exists (($generated@@261 T@U) ) (!  (and (= (type $generated@@261) $generated@@260) (< 0 ($generated ($generated@@84 $generated@@259 $generated@@261))))
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
))))))
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert  (and (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@145 (type $generated@@264))))
(= (type ($generated@@262 $generated@@264)) ($generated@@79 $generated@@265 $generated@@4)))
 :pattern ( ($generated@@262 $generated@@264))
)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= (type ($generated@@263 $generated@@266 $generated@@267)) ($generated@@144 $generated@@266 $generated@@267))
 :pattern ( ($generated@@263 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@T) ) (! (let (($generated@@270 (type $generated@@268)))
 (not ($generated@@0 ($generated@@84 ($generated@@262 ($generated@@263 $generated@@270 $generated@@269)) $generated@@268))))
 :pattern ( (let (($generated@@270 (type $generated@@268)))
($generated@@84 ($generated@@262 ($generated@@263 $generated@@270 $generated@@269)) $generated@@268)))
)))
(assert  (and (and (and (and (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@276 $generated@@277)) 18)) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@278 $generated@@279)) $generated@@278)
 :pattern ( ($generated@@273 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@273 $generated@@280 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@273 $generated@@280 $generated@@281))
))) (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@274 (type $generated@@282))))
(= (type ($generated@@271 $generated@@282)) ($generated@@79 $generated@@283 $generated@@4)))
 :pattern ( ($generated@@271 $generated@@282))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= (type ($generated@@272 $generated@@284 $generated@@285)) ($generated@@273 $generated@@284 $generated@@285))
 :pattern ( ($generated@@272 $generated@@284 $generated@@285))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@T) ) (! (let (($generated@@288 (type $generated@@286)))
 (not ($generated@@0 ($generated@@84 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286))))
 :pattern ( (let (($generated@@288 (type $generated@@286)))
($generated@@84 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286)))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@82 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@79 $generated@@290 $generated@@2)) (= ($generated@@184 $generated@@289) (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@290) (and (<= 0 ($generated ($generated@@84 $generated@@289 $generated@@291))) (<= ($generated ($generated@@84 $generated@@289 $generated@@291)) ($generated@@256 $generated@@289))))
 :pattern ( ($generated@@84 $generated@@289 $generated@@291))
)))))
 :pattern ( ($generated@@184 $generated@@289))
)))
(assert (forall (($generated@@293 T@T) ($generated@@294 T@U) ) (! (= (type ($generated@@292 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@147) ($generated@@198 $generated@@295 $generated@@164)) (and (= ($generated@@243 ($generated@@292 $generated@@80 $generated@@295)) $generated@@295) ($generated@@140 ($generated@@292 $generated@@80 $generated@@295) $generated@@164)))
 :pattern ( ($generated@@198 $generated@@295 $generated@@164))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@147) ($generated@@198 $generated@@296 $generated@@141)) (and (= ($generated@@243 ($generated@@292 $generated@@80 $generated@@296)) $generated@@296) ($generated@@140 ($generated@@292 $generated@@80 $generated@@296) $generated@@141)))
 :pattern ( ($generated@@198 $generated@@296 $generated@@141))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@80) (= ($generated@@140 $generated@@297 $generated@@141)  (and ($generated@@140 $generated@@297 $generated@@164) (not (= $generated@@297 $generated@@139)))))
 :pattern ( ($generated@@140 $generated@@297 $generated@@141))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (= (type ($generated@@298 $generated@@300 $generated@@301)) $generated@@147)
 :pattern ( ($generated@@298 $generated@@300 $generated@@301))
)))
(assert  (=> (<= 0 $generated@@135) (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (= (type $generated@@302) $generated@@67) (= (type $generated@@303) $generated@@147)) (or ($generated@@299 $generated@@302 $generated@@303) (and (not (= 0 $generated@@135)) ($generated@@198 $generated@@303 $generated@@302)))) ($generated@@198 ($generated@@298 $generated@@302 $generated@@303) $generated@@143))
 :pattern ( ($generated@@298 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@146 (type $generated@@304))))
(let (($generated@@306 ($generated@@145 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@144 $generated@@306 $generated@@305)) (or (= $generated@@304 ($generated@@263 $generated@@306 $generated@@305)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) ($generated@@0 ($generated@@84 ($generated@@262 $generated@@304) $generated@@307)))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@262 $generated@@304))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@146 (type $generated@@309))))
(= (type ($generated@@308 $generated@@309)) ($generated@@79 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@146 (type $generated@@311))))
(let (($generated@@313 ($generated@@145 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@144 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@263 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@312) ($generated@@0 ($generated@@84 ($generated@@308 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@275 (type $generated@@315))))
(let (($generated@@317 ($generated@@274 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@273 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@272 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) ($generated@@0 ($generated@@84 ($generated@@271 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@271 $generated@@315))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@275 (type $generated@@320))))
(= (type ($generated@@319 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@275 (type $generated@@322))))
(let (($generated@@324 ($generated@@274 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@273 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@272 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@323) ($generated@@0 ($generated@@84 ($generated@@319 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@79 $generated@@147 $generated@@2)) (= (type $generated@@327) $generated@@67)) (= ($generated@@140 $generated@@326 ($generated@@183 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@147) (< 0 ($generated ($generated@@84 $generated@@326 $generated@@328)))) ($generated@@198 $generated@@328 $generated@@327))
 :pattern ( ($generated@@84 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@140 $generated@@326 ($generated@@183 $generated@@327)))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (= (type $generated@@329) ($generated@@79 $generated@@147 $generated@@4)) (= (type $generated@@330) $generated@@67)) (= (type $generated@@331) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@329 ($generated@@207 $generated@@330) $generated@@331) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@147) ($generated@@0 ($generated@@84 $generated@@329 $generated@@332))) ($generated@@223 $generated@@332 $generated@@330 $generated@@331))
 :pattern ( ($generated@@84 $generated@@329 $generated@@332))
))))
 :pattern ( ($generated@@77 $generated@@329 ($generated@@207 $generated@@330) $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@79 $generated@@147 $generated@@4)) (= (type $generated@@334) $generated@@67)) (= (type $generated@@335) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@333 ($generated@@212 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@147) ($generated@@0 ($generated@@84 $generated@@333 $generated@@336))) ($generated@@223 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@84 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@77 $generated@@333 ($generated@@212 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
(= ($generated ($generated@@84 ($generated@@257 $generated@@338) $generated@@337)) 0))
 :pattern ( (let (($generated@@338 (type $generated@@337)))
($generated@@84 ($generated@@257 $generated@@338) $generated@@337)))
)))
(assert  (and (forall (($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@341)) ($generated@@79 $generated@@147 $generated@@4))
 :pattern ( ($generated@@339 $generated@@341))
)) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@146 (type $generated@@342))))
(let (($generated@@344 ($generated@@145 (type $generated@@342))))
(= (type ($generated@@340 $generated@@342)) ($generated@@79 $generated@@344 $generated@@343))))
 :pattern ( ($generated@@340 $generated@@342))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) ($generated@@144 $generated@@147 $generated@@147)) (= (type $generated@@346) $generated@@147)) (= ($generated@@0 ($generated@@84 ($generated@@339 $generated@@345) $generated@@346))  (and ($generated@@0 ($generated@@84 ($generated@@262 $generated@@345) ($generated@@177 ($generated@@292 $generated@@170 $generated@@346)))) (= ($generated@@84 ($generated@@340 $generated@@345) ($generated@@177 ($generated@@292 $generated@@170 $generated@@346))) ($generated@@178 ($generated@@292 $generated@@170 $generated@@346))))))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@345) $generated@@346))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) ($generated@@79 $generated@@147 $generated@@4))
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@275 (type $generated@@350))))
(let (($generated@@352 ($generated@@274 (type $generated@@350))))
(= (type ($generated@@348 $generated@@350)) ($generated@@79 $generated@@352 $generated@@351))))
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@273 $generated@@147 $generated@@147)) (= (type $generated@@354) $generated@@147)) (= ($generated@@0 ($generated@@84 ($generated@@347 $generated@@353) $generated@@354))  (and ($generated@@0 ($generated@@84 ($generated@@271 $generated@@353) ($generated@@177 ($generated@@292 $generated@@170 $generated@@354)))) (= ($generated@@84 ($generated@@348 $generated@@353) ($generated@@177 ($generated@@292 $generated@@170 $generated@@354))) ($generated@@178 ($generated@@292 $generated@@170 $generated@@354))))))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 (type $generated@@356)))
(let (($generated@@358 ($generated@@145 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@144 $generated@@358 $generated@@357)) (= ($generated@@0 ($generated@@84 ($generated@@308 $generated@@355) $generated@@356)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) (and ($generated@@0 ($generated@@84 ($generated@@262 $generated@@355) $generated@@359)) (= $generated@@356 ($generated@@84 ($generated@@340 $generated@@355) $generated@@359))))
 :pattern ( ($generated@@84 ($generated@@262 $generated@@355) $generated@@359))
 :pattern ( ($generated@@84 ($generated@@340 $generated@@355) $generated@@359))
))))))
 :pattern ( ($generated@@84 ($generated@@308 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(let (($generated@@363 ($generated@@274 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@273 $generated@@363 $generated@@362)) (= ($generated@@0 ($generated@@84 ($generated@@319 $generated@@360) $generated@@361)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (and ($generated@@0 ($generated@@84 ($generated@@271 $generated@@360) $generated@@364)) (= $generated@@361 ($generated@@84 ($generated@@348 $generated@@360) $generated@@364))))
 :pattern ( ($generated@@84 ($generated@@271 $generated@@360) $generated@@364))
 :pattern ( ($generated@@84 ($generated@@348 $generated@@360) $generated@@364))
))))))
 :pattern ( ($generated@@84 ($generated@@319 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (and (= (type $generated@@365) ($generated@@144 $generated@@147 $generated@@147)) (= (type $generated@@366) $generated@@67)) (= (type $generated@@367) $generated@@67)) (= (type $generated@@368) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@365 ($generated@@142 $generated@@366 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@147) ($generated@@0 ($generated@@84 ($generated@@262 $generated@@365) $generated@@369))) (and ($generated@@223 ($generated@@84 ($generated@@340 $generated@@365) $generated@@369) $generated@@367 $generated@@368) ($generated@@223 $generated@@369 $generated@@366 $generated@@368)))
 :pattern ( ($generated@@84 ($generated@@340 $generated@@365) $generated@@369))
 :pattern ( ($generated@@84 ($generated@@262 $generated@@365) $generated@@369))
))))
 :pattern ( ($generated@@77 $generated@@365 ($generated@@142 $generated@@366 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@67)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@373) ($generated@@273 $generated@@147 $generated@@147)) (= (type $generated@@374) $generated@@67)) (= (type $generated@@375) $generated@@67)) (= (type $generated@@376) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@147) ($generated@@0 ($generated@@84 ($generated@@271 $generated@@373) $generated@@377))) (and ($generated@@223 ($generated@@84 ($generated@@348 $generated@@373) $generated@@377) $generated@@375 $generated@@376) ($generated@@223 $generated@@377 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@84 ($generated@@348 $generated@@373) $generated@@377))
 :pattern ( ($generated@@84 ($generated@@271 $generated@@373) $generated@@377))
))))
 :pattern ( ($generated@@77 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@378) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@379) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@380) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@378 $generated@@380))) (and ($generated@@160 $generated@@378 $generated@@379) ($generated@@160 $generated@@379 $generated@@380))) ($generated@@160 $generated@@378 $generated@@380))
 :pattern ( ($generated@@160 $generated@@378 $generated@@379) ($generated@@160 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@T) ) (! (= (type ($generated@@381 $generated@@382)) ($generated@@79 $generated@@382 $generated@@4))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@275 (type $generated@@383))))
(let (($generated@@385 ($generated@@274 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@273 $generated@@385 $generated@@384)) (= (= $generated@@383 ($generated@@272 $generated@@385 $generated@@384)) (= ($generated@@271 $generated@@383) ($generated@@381 $generated@@385))))))
 :pattern ( ($generated@@271 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@275 (type $generated@@386))))
(let (($generated@@388 ($generated@@274 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@273 $generated@@388 $generated@@387)) (= (= $generated@@386 ($generated@@272 $generated@@388 $generated@@387)) (= ($generated@@319 $generated@@386) ($generated@@381 $generated@@387))))))
 :pattern ( ($generated@@319 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@275 (type $generated@@389))))
(let (($generated@@391 ($generated@@274 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@273 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@272 $generated@@391 $generated@@390)) (= ($generated@@347 $generated@@389) ($generated@@381 $generated@@147))))))
 :pattern ( ($generated@@347 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@146 (type $generated@@392))))
(let (($generated@@394 ($generated@@145 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@144 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@263 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (and (and (= (type $generated@@395) $generated@@147) (= (type $generated@@396) $generated@@147)) ($generated@@0 ($generated@@84 ($generated@@339 $generated@@392) ($generated@@243 ($generated@@197 $generated@@395 $generated@@396)))))
 :no-pattern (type $generated@@395)
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@339 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@275 (type $generated@@397))))
(let (($generated@@399 ($generated@@274 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@273 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@272 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (and (and (= (type $generated@@400) $generated@@147) (= (type $generated@@401) $generated@@147)) ($generated@@0 ($generated@@84 ($generated@@347 $generated@@397) ($generated@@243 ($generated@@197 $generated@@400 $generated@@401)))))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@347 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@147) ($generated@@198 $generated@@402 $generated@@46)) (and (= ($generated@@243 ($generated@@292 $generated@@2 $generated@@402)) $generated@@402) ($generated@@140 ($generated@@292 $generated@@2 $generated@@402) $generated@@46)))
 :pattern ( ($generated@@198 $generated@@402 $generated@@46))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@147) ($generated@@198 $generated@@403 $generated@@47)) (and (= ($generated@@243 ($generated@@292 $generated@@3 $generated@@403)) $generated@@403) ($generated@@140 ($generated@@292 $generated@@3 $generated@@403) $generated@@47)))
 :pattern ( ($generated@@198 $generated@@403 $generated@@47))
)))
(assert (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@147) ($generated@@198 $generated@@404 $generated@@44)) (and (= ($generated@@243 ($generated@@292 $generated@@4 $generated@@404)) $generated@@404) ($generated@@140 ($generated@@292 $generated@@4 $generated@@404) $generated@@44)))
 :pattern ( ($generated@@198 $generated@@404 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@405) 19))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@147) ($generated@@198 $generated@@406 $generated@@45)) (and (= ($generated@@243 ($generated@@292 $generated@@405 $generated@@406)) $generated@@406) ($generated@@140 ($generated@@292 $generated@@405 $generated@@406) $generated@@45)))
 :pattern ( ($generated@@198 $generated@@406 $generated@@45))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (= (type $generated@@408) $generated@@67) (= ($generated@@198 ($generated@@243 $generated@@407) $generated@@408) ($generated@@140 $generated@@407 $generated@@408)))
 :pattern ( ($generated@@198 ($generated@@243 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@82 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@79 $generated@@410 $generated@@2)) (<= 0 ($generated@@256 $generated@@409))))
 :pattern ( ($generated@@256 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@238 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@237 $generated@@412)) (<= 0 ($generated@@236 $generated@@411))))
 :pattern ( ($generated@@236 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@67) ($generated@@192 $generated@@413)) (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@415) $generated@@147)) ($generated@@198 $generated@@415 $generated@@413)) ($generated@@223 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@223 $generated@@415 $generated@@413 $generated@@414))
)))
 :pattern ( ($generated@@192 $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ) (! (= (type ($generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@67) (= (type $generated@@419) $generated@@67)) (= ($generated@@416 ($generated@@142 $generated@@418 $generated@@419)) $generated@@418))
 :pattern ( ($generated@@142 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@67)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@67) (= (type $generated@@423) $generated@@67)) (= ($generated@@420 ($generated@@142 $generated@@422 $generated@@423)) $generated@@423))
 :pattern ( ($generated@@142 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@67) (= (type $generated@@425) $generated@@67)) (= ($generated@@75 ($generated@@142 $generated@@424 $generated@@425)) $generated@@58))
 :pattern ( ($generated@@142 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@67)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@67) (= (type $generated@@429) $generated@@67)) (= ($generated@@426 ($generated@@370 $generated@@428 $generated@@429)) $generated@@428))
 :pattern ( ($generated@@370 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@67) (= (type $generated@@433) $generated@@67)) (= ($generated@@430 ($generated@@370 $generated@@432 $generated@@433)) $generated@@433))
 :pattern ( ($generated@@370 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@67) (= (type $generated@@435) $generated@@67)) (= ($generated@@75 ($generated@@370 $generated@@434 $generated@@435)) $generated@@59))
 :pattern ( ($generated@@370 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@147) (= (type $generated@@437) $generated@@147)) (= ($generated@@229 ($generated@@197 $generated@@436 $generated@@437)) $generated@@61))
 :pattern ( ($generated@@197 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@67)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@67) (= (type $generated@@441) $generated@@67)) (= ($generated@@438 ($generated@@169 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@169 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@169 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@169 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@147) (= (type $generated@@447) $generated@@147)) (= ($generated@@177 ($generated@@197 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@197 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@147) (= (type $generated@@449) $generated@@147)) (= ($generated@@178 ($generated@@197 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@197 $generated@@448 $generated@@449))
)))
(assert  (and (forall (($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@452))
)) (forall (($generated@@453 T@U) ($generated@@454 Int) ) (! (let (($generated@@455 ($generated@@238 (type $generated@@453))))
(= (type ($generated@@451 $generated@@453 $generated@@454)) $generated@@455))
 :pattern ( ($generated@@451 $generated@@453 $generated@@454))
))))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (= (type $generated@@456) ($generated@@237 $generated@@147)) (= (type $generated@@457) $generated@@67)) (= (type $generated@@458) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@456 ($generated@@450 $generated@@457) $generated@@458) (forall (($generated@@459 Int) ) (!  (=> (and (<= 0 $generated@@459) (< $generated@@459 ($generated@@236 $generated@@456))) ($generated@@223 ($generated@@451 $generated@@456 $generated@@459) $generated@@457 $generated@@458))
 :pattern ( ($generated@@451 $generated@@456 $generated@@459))
))))
 :pattern ( ($generated@@77 $generated@@456 ($generated@@450 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@461 Int) ) (! (= ($generated@@460 ($generated@@78 $generated@@461)) $generated@@461)
 :pattern ( ($generated@@78 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@462 ($generated@@207 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@207 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@75 ($generated@@207 $generated@@465)) $generated@@54))
 :pattern ( ($generated@@207 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@67) (= ($generated@@466 ($generated@@212 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@212 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@75 ($generated@@212 $generated@@469)) $generated@@55))
 :pattern ( ($generated@@212 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@67) (= ($generated@@470 ($generated@@183 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@183 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@75 ($generated@@183 $generated@@473)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@67) (= ($generated@@474 ($generated@@450 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@450 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@75 ($generated@@450 $generated@@477)) $generated@@57))
 :pattern ( ($generated@@450 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 (type $generated@@478)))
(= ($generated@@292 $generated@@479 ($generated@@243 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@243 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@144 $generated@@147 $generated@@147)) (= (type $generated@@481) $generated@@67)) (= (type $generated@@482) $generated@@67)) (= ($generated@@140 $generated@@480 ($generated@@142 $generated@@481 $generated@@482)) (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@147) ($generated@@0 ($generated@@84 ($generated@@262 $generated@@480) $generated@@483))) (and ($generated@@198 ($generated@@84 ($generated@@340 $generated@@480) $generated@@483) $generated@@482) ($generated@@198 $generated@@483 $generated@@481)))
 :pattern ( ($generated@@84 ($generated@@340 $generated@@480) $generated@@483))
 :pattern ( ($generated@@84 ($generated@@262 $generated@@480) $generated@@483))
))))
 :pattern ( ($generated@@140 $generated@@480 ($generated@@142 $generated@@481 $generated@@482)))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@273 $generated@@147 $generated@@147)) (= (type $generated@@485) $generated@@67)) (= (type $generated@@486) $generated@@67)) (= ($generated@@140 $generated@@484 ($generated@@370 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@147) ($generated@@0 ($generated@@84 ($generated@@271 $generated@@484) $generated@@487))) (and ($generated@@198 ($generated@@84 ($generated@@348 $generated@@484) $generated@@487) $generated@@486) ($generated@@198 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@84 ($generated@@348 $generated@@484) $generated@@487))
 :pattern ( ($generated@@84 ($generated@@271 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@140 $generated@@484 ($generated@@370 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@147) (= (type $generated@@491) $generated@@147)) (< ($generated@@488 $generated@@490) ($generated@@489 ($generated@@197 $generated@@490 $generated@@491))))
 :pattern ( ($generated@@197 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@147) (= (type $generated@@493) $generated@@147)) (< ($generated@@488 $generated@@493) ($generated@@489 ($generated@@197 $generated@@492 $generated@@493))))
 :pattern ( ($generated@@197 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) $generated@@147) (= (type $generated@@495) $generated@@67)) (= (type $generated@@496) $generated@@67)) ($generated@@198 $generated@@494 ($generated@@142 $generated@@495 $generated@@496))) (and (= ($generated@@243 ($generated@@292 ($generated@@144 $generated@@147 $generated@@147) $generated@@494)) $generated@@494) ($generated@@140 ($generated@@292 ($generated@@144 $generated@@147 $generated@@147) $generated@@494) ($generated@@142 $generated@@495 $generated@@496))))
 :pattern ( ($generated@@198 $generated@@494 ($generated@@142 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (and (= (type $generated@@497) $generated@@147) (= (type $generated@@498) $generated@@67)) (= (type $generated@@499) $generated@@67)) ($generated@@198 $generated@@497 ($generated@@370 $generated@@498 $generated@@499))) (and (= ($generated@@243 ($generated@@292 ($generated@@273 $generated@@147 $generated@@147) $generated@@497)) $generated@@497) ($generated@@140 ($generated@@292 ($generated@@273 $generated@@147 $generated@@147) $generated@@497) ($generated@@370 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@198 $generated@@497 ($generated@@370 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@147)) ($generated@@198 $generated@@502 ($generated@@169 $generated@@500 $generated@@501))) (and (= ($generated@@243 ($generated@@292 $generated@@170 $generated@@502)) $generated@@502) ($generated@@140 ($generated@@292 $generated@@170 $generated@@502) ($generated@@169 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@198 $generated@@502 ($generated@@169 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
 (not ($generated@@0 ($generated@@84 ($generated@@381 $generated@@504) $generated@@503))))
 :pattern ( (let (($generated@@504 (type $generated@@503)))
($generated@@84 ($generated@@381 $generated@@504) $generated@@503)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@511 T@T) ($generated@@512 T@T) ) (= ($generated@@1 ($generated@@507 $generated@@511 $generated@@512)) 20)) (forall (($generated@@513 T@T) ($generated@@514 T@T) ) (! (= ($generated@@508 ($generated@@507 $generated@@513 $generated@@514)) $generated@@513)
 :pattern ( ($generated@@507 $generated@@513 $generated@@514))
))) (forall (($generated@@515 T@T) ($generated@@516 T@T) ) (! (= ($generated@@509 ($generated@@507 $generated@@515 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@507 $generated@@515 $generated@@516))
))) (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@509 (type $generated@@517))))
(= (type ($generated@@505 $generated@@517 $generated@@518 $generated@@519)) $generated@@520))
 :pattern ( ($generated@@505 $generated@@517 $generated@@518 $generated@@519))
))) (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(let (($generated@@526 (type $generated@@522)))
(= (type ($generated@@510 $generated@@521 $generated@@522 $generated@@523 $generated@@524)) ($generated@@507 $generated@@526 $generated@@525))))
 :pattern ( ($generated@@510 $generated@@521 $generated@@522 $generated@@523 $generated@@524))
))) (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@509 (type $generated@@527))))
 (=> (= (type $generated@@530) $generated@@531) (= ($generated@@505 ($generated@@510 $generated@@527 $generated@@528 $generated@@529 $generated@@530) $generated@@528 $generated@@529) $generated@@530)))
 :weight 0
))) (and (and (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (or (= $generated@@534 $generated@@536) (= ($generated@@505 ($generated@@510 $generated@@533 $generated@@534 $generated@@535 $generated@@532) $generated@@536 $generated@@537) ($generated@@505 $generated@@533 $generated@@536 $generated@@537)))
 :weight 0
)) (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (or (= $generated@@541 $generated@@543) (= ($generated@@505 ($generated@@510 $generated@@539 $generated@@540 $generated@@541 $generated@@538) $generated@@542 $generated@@543) ($generated@@505 $generated@@539 $generated@@542 $generated@@543)))
 :weight 0
))) (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (or true (= ($generated@@505 ($generated@@510 $generated@@545 $generated@@546 $generated@@547 $generated@@544) $generated@@548 $generated@@549) ($generated@@505 $generated@@545 $generated@@548 $generated@@549)))
 :weight 0
)))) (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (! (= (type ($generated@@506 $generated@@550 $generated@@551 $generated@@552 $generated@@553)) ($generated@@507 $generated@@80 $generated@@4))
 :pattern ( ($generated@@506 $generated@@550 $generated@@551 $generated@@552 $generated@@553))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@70 (type $generated@@559))))
 (=> (and (and (and (and (and (= (type $generated@@554) $generated@@80) (= (type $generated@@555) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@556) ($generated@@69 $generated@@4))) (= (type $generated@@557) $generated@@80)) (= (type $generated@@558) $generated@@80)) (= (type $generated@@559) ($generated@@69 $generated@@560))) (= ($generated@@0 ($generated@@505 ($generated@@506 $generated@@554 $generated@@555 $generated@@556 $generated@@557) $generated@@558 $generated@@559))  (=> (and (not (= $generated@@558 $generated@@554)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@555 $generated@@558) $generated@@556))) (= $generated@@558 $generated@@557)))))
 :pattern ( ($generated@@505 ($generated@@506 $generated@@554 $generated@@555 $generated@@556 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@72)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@67) (= (type $generated@@564) $generated@@67)) (and (= ($generated@@75 ($generated@@169 $generated@@563 $generated@@564)) $generated@@62) (= ($generated@@561 ($generated@@169 $generated@@563 $generated@@564)) $generated@@65)))
 :pattern ( ($generated@@169 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@568) $generated@@80)) (=> (and (and (and ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) (and (not (= $generated@@568 $generated@@139)) ($generated@@140 $generated@@568 $generated@@141))) (and ($generated@@565 $generated@@566) ($generated@@160 $generated@@566 $generated@@567))) (=> (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@70 (type $generated@@570))))
 (=> (and (and (= (type $generated@@569) $generated@@80) (= (type $generated@@570) ($generated@@69 $generated@@571))) (and (not (= $generated@@569 $generated@@139)) (= $generated@@569 $generated@@568))) (= ($generated@@86 ($generated@@84 $generated@@566 $generated@@569) $generated@@570) ($generated@@86 ($generated@@84 $generated@@567 $generated@@569) $generated@@570))))
 :no-pattern (type $generated@@569)
 :no-pattern (type $generated@@570)
 :no-pattern ($generated $generated@@569)
 :no-pattern ($generated@@0 $generated@@569)
 :no-pattern ($generated $generated@@570)
 :no-pattern ($generated@@0 $generated@@570)
)) (= ($generated@@136 $generated@@566 $generated@@568) ($generated@@136 $generated@@567 $generated@@568)))))
 :pattern ( ($generated@@565 $generated@@566) ($generated@@160 $generated@@566 $generated@@567) ($generated@@136 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@170) (= ($generated@@488 ($generated@@243 $generated@@572)) ($generated@@489 $generated@@572)))
 :pattern ( ($generated@@488 ($generated@@243 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@147) ($generated@@198 $generated@@573 ($generated@@78 0))) (and (= ($generated@@243 ($generated@@292 $generated@@2 $generated@@573)) $generated@@573) ($generated@@140 ($generated@@292 ($generated@@79 $generated@@147 $generated@@4) $generated@@573) ($generated@@78 0))))
 :pattern ( ($generated@@198 $generated@@573 ($generated@@78 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@147) (= (type $generated@@575) $generated@@67)) ($generated@@198 $generated@@574 ($generated@@207 $generated@@575))) (and (= ($generated@@243 ($generated@@292 ($generated@@79 $generated@@147 $generated@@4) $generated@@574)) $generated@@574) ($generated@@140 ($generated@@292 ($generated@@79 $generated@@147 $generated@@4) $generated@@574) ($generated@@207 $generated@@575))))
 :pattern ( ($generated@@198 $generated@@574 ($generated@@207 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@147) (= (type $generated@@577) $generated@@67)) ($generated@@198 $generated@@576 ($generated@@212 $generated@@577))) (and (= ($generated@@243 ($generated@@292 ($generated@@79 $generated@@147 $generated@@4) $generated@@576)) $generated@@576) ($generated@@140 ($generated@@292 ($generated@@79 $generated@@147 $generated@@4) $generated@@576) ($generated@@212 $generated@@577))))
 :pattern ( ($generated@@198 $generated@@576 ($generated@@212 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@147) (= (type $generated@@579) $generated@@67)) ($generated@@198 $generated@@578 ($generated@@183 $generated@@579))) (and (= ($generated@@243 ($generated@@292 ($generated@@79 $generated@@147 $generated@@2) $generated@@578)) $generated@@578) ($generated@@140 ($generated@@292 ($generated@@79 $generated@@147 $generated@@2) $generated@@578) ($generated@@183 $generated@@579))))
 :pattern ( ($generated@@198 $generated@@578 ($generated@@183 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@147) (= (type $generated@@581) $generated@@67)) ($generated@@198 $generated@@580 ($generated@@450 $generated@@581))) (and (= ($generated@@243 ($generated@@292 ($generated@@237 $generated@@147) $generated@@580)) $generated@@580) ($generated@@140 ($generated@@292 ($generated@@237 $generated@@147) $generated@@580) ($generated@@450 $generated@@581))))
 :pattern ( ($generated@@198 $generated@@580 ($generated@@450 $generated@@581)))
)))
(assert (= ($generated@@75 $generated@@164) $generated@@63))
(assert (= ($generated@@561 $generated@@164) $generated@@66))
(assert (= ($generated@@75 $generated@@141) $generated@@64))
(assert (= ($generated@@561 $generated@@141) $generated@@66))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@79 $generated@@147 $generated@@2)) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@582 ($generated@@183 $generated@@583) $generated@@584) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@147) (< 0 ($generated ($generated@@84 $generated@@582 $generated@@585)))) ($generated@@223 $generated@@585 $generated@@583 $generated@@584))
 :pattern ( ($generated@@84 $generated@@582 $generated@@585))
))))
 :pattern ( ($generated@@77 $generated@@582 ($generated@@183 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@170) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@138 $generated@@588) (and ($generated@@168 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@67) ($generated@@77 $generated@@586 ($generated@@169 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@77 $generated@@586 ($generated@@169 $generated@@587 $generated@@589) $generated@@588))
))))) ($generated@@223 ($generated@@177 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@223 ($generated@@177 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@170) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@138 $generated@@592) (and ($generated@@168 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@67) ($generated@@77 $generated@@590 ($generated@@169 $generated@@593 $generated@@591) $generated@@592))
 :pattern ( ($generated@@77 $generated@@590 ($generated@@169 $generated@@593 $generated@@591) $generated@@592))
))))) ($generated@@223 ($generated@@178 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@223 ($generated@@178 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@147) (= (type $generated@@595) $generated@@147)) (= ($generated@@197 ($generated@@219 $generated@@594) ($generated@@219 $generated@@595)) ($generated@@219 ($generated@@197 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@197 ($generated@@219 $generated@@594) ($generated@@219 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@243 ($generated@@8 ($generated@@217 $generated@@596))) ($generated@@219 ($generated@@243 ($generated@@8 $generated@@596))))
 :pattern ( ($generated@@243 ($generated@@8 ($generated@@217 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ) (! (= ($generated@@243 ($generated@@219 $generated@@597)) ($generated@@219 ($generated@@243 $generated@@597)))
 :pattern ( ($generated@@243 ($generated@@219 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@238 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@237 $generated@@599)) (= ($generated@@236 $generated@@598) 0)) (= $generated@@598 ($generated@@235 $generated@@599))))
 :pattern ( ($generated@@236 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@79 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@256 ($generated@@85 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@256 $generated@@600) ($generated ($generated@@84 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@256 ($generated@@85 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@2)) ($generated@@77 $generated@@605 $generated@@46 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@46 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@3)) ($generated@@77 $generated@@607 $generated@@47 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@47 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@609) $generated@@4)) ($generated@@77 $generated@@609 $generated@@44 $generated@@608))
 :pattern ( ($generated@@77 $generated@@609 $generated@@44 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@611) $generated@@405)) ($generated@@77 $generated@@611 $generated@@45 $generated@@610))
 :pattern ( ($generated@@77 $generated@@611 $generated@@45 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@613) $generated@@147)) ($generated@@77 $generated@@613 $generated@@48 $generated@@612))
 :pattern ( ($generated@@77 $generated@@613 $generated@@48 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@237 $generated@@147)) (= (type $generated@@615) $generated@@67)) (= ($generated@@140 $generated@@614 ($generated@@450 $generated@@615)) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@236 $generated@@614))) ($generated@@198 ($generated@@451 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@451 $generated@@614 $generated@@616))
))))
 :pattern ( ($generated@@140 $generated@@614 ($generated@@450 $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ) (!  (=> (= (type $generated@@618) ($generated@@237 $generated@@147)) (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@236 $generated@@618))) (< ($generated@@489 ($generated@@292 $generated@@170 ($generated@@451 $generated@@618 $generated@@619))) ($generated@@617 $generated@@618))))
 :pattern ( ($generated@@489 ($generated@@292 $generated@@170 ($generated@@451 $generated@@618 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@144 $generated@@147 $generated@@147)) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@140 $generated@@620 ($generated@@142 $generated@@621 $generated@@622))) (and (and ($generated@@140 ($generated@@262 $generated@@620) ($generated@@207 $generated@@621)) ($generated@@140 ($generated@@308 $generated@@620) ($generated@@207 $generated@@622))) ($generated@@140 ($generated@@339 $generated@@620) ($generated@@207 ($generated@@169 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@140 $generated@@620 ($generated@@142 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@273 $generated@@147 $generated@@147)) (= (type $generated@@624) $generated@@67)) (= (type $generated@@625) $generated@@67)) ($generated@@140 $generated@@623 ($generated@@370 $generated@@624 $generated@@625))) (and (and ($generated@@140 ($generated@@271 $generated@@623) ($generated@@212 $generated@@624)) ($generated@@140 ($generated@@319 $generated@@623) ($generated@@212 $generated@@625))) ($generated@@140 ($generated@@347 $generated@@623) ($generated@@212 ($generated@@169 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@140 $generated@@623 ($generated@@370 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@2) ($generated@@140 $generated@@626 $generated@@46))
 :pattern ( ($generated@@140 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@3) ($generated@@140 $generated@@627 $generated@@47))
 :pattern ( ($generated@@140 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@4) ($generated@@140 $generated@@628 $generated@@44))
 :pattern ( ($generated@@140 $generated@@628 $generated@@44))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@405) ($generated@@140 $generated@@629 $generated@@45))
 :pattern ( ($generated@@140 $generated@@629 $generated@@45))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@147) ($generated@@140 $generated@@630 $generated@@48))
 :pattern ( ($generated@@140 $generated@@630 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Bool)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@645) 21) (forall (($generated@@646 T@U) ) (! (= (type ($generated@@631 $generated@@646)) $generated@@645)
 :pattern ( ($generated@@631 $generated@@646))
))) (= (type $generated@@632) $generated@@645)) (= (type $generated@@633) $generated@@645)) (= (type $generated@@634) ($generated@@507 $generated@@80 $generated@@4))) (= (type $generated@@635) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@636) $generated@@80)) (= (type $generated@@638) $generated@@147)) (= (type $generated@@639) $generated@@67)) (= (type $generated@@640) $generated@@147)) (= (type $generated@@641) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@642) $generated@@147)) (= (type $generated@@644) $generated@@147)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@647  (=> (and (and (= ($generated@@631 $generated@@632) $generated@@632) (= ($generated@@631 $generated@@633) $generated@@633)) (and (= $generated@@634 ($generated@@506 $generated@@139 $generated@@635 $generated@@60 $generated@@636)) (= $generated@@637 ($generated@@217 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (! (let (($generated@@650 ($generated@@70 (type $generated@@649))))
 (=> (and (= (type $generated@@648) $generated@@80) (= (type $generated@@649) ($generated@@69 $generated@@650))) (=> (and (and (not (= $generated@@648 $generated@@139)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@635 $generated@@648) $generated@@60))) (= $generated@@648 $generated@@636)) ($generated@@0 ($generated@@505 $generated@@634 $generated@@648 $generated@@649)))))
 :no-pattern (type $generated@@648)
 :no-pattern (type $generated@@649)
 :no-pattern ($generated $generated@@648)
 :no-pattern ($generated@@0 $generated@@648)
 :no-pattern ($generated $generated@@649)
 :no-pattern ($generated@@0 $generated@@649)
))) (=> (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@70 (type $generated@@652))))
 (=> (and (= (type $generated@@651) $generated@@80) (= (type $generated@@652) ($generated@@69 $generated@@653))) (=> (and (and (not (= $generated@@651 $generated@@139)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@635 $generated@@651) $generated@@60))) (= $generated@@651 $generated@@636)) ($generated@@0 ($generated@@505 $generated@@634 $generated@@651 $generated@@652)))))
 :no-pattern (type $generated@@651)
 :no-pattern (type $generated@@652)
 :no-pattern ($generated $generated@@651)
 :no-pattern ($generated@@0 $generated@@651)
 :no-pattern ($generated $generated@@652)
 :no-pattern ($generated@@0 $generated@@652)
)) (=> (and (and (and (and ($generated@@198 $generated@@638 ($generated@@191 $generated@@639)) ($generated@@223 $generated@@638 ($generated@@191 $generated@@639) $generated@@635)) (= $generated@@640 ($generated@@243 ($generated@@8 $generated@@637)))) (and (and ($generated@@138 $generated@@641) ($generated@@565 $generated@@641)) (and ($generated@@198 $generated@@642 ($generated@@191 $generated@@46)) ($generated@@223 $generated@@642 ($generated@@191 $generated@@46) $generated@@641)))) (and (and (and ($generated@@299 ($generated@@191 $generated@@46) $generated@@642) ($generated@@137 $generated@@641 $generated@@636)) ($generated@@0 ($generated@@84 ($generated@@262 ($generated@@136 $generated@@641 $generated@@636)) ($generated@@298 ($generated@@191 $generated@@46) $generated@@642)))) (and (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@80) (=> (and (not (= $generated@@654 $generated@@139)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@635 $generated@@654) $generated@@60))) (or (= ($generated@@84 $generated@@641 $generated@@654) ($generated@@84 $generated@@635 $generated@@654)) (= $generated@@654 $generated@@636))))
 :pattern ( ($generated@@84 $generated@@641 $generated@@654))
)) ($generated@@160 $generated@@635 $generated@@641)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (and ($generated@@223 $generated@@642 ($generated@@191 $generated@@46) $generated@@641) ($generated@@299 ($generated@@191 $generated@@46) $generated@@642)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@636 $generated@@139))) (=> (and ($generated@@77 $generated@@636 $generated@@164 $generated@@641) ($generated@@137 $generated@@641 $generated@@636)) (=> (and (and ($generated@@299 ($generated@@191 $generated@@46) $generated@@642) ($generated@@137 $generated@@641 $generated@@636)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@0 ($generated@@84 ($generated@@262 ($generated@@136 $generated@@641 $generated@@636)) ($generated@@298 ($generated@@191 $generated@@46) $generated@@642))))))))))))))
(let (($generated@@655  (=> (and (and (and ($generated@@138 $generated@@635) ($generated@@565 $generated@@635)) (and ($generated@@140 $generated@@636 $generated@@141) ($generated@@77 $generated@@636 $generated@@141 $generated@@635))) (and (and (=> $generated@@643 (and ($generated@@198 $generated@@644 ($generated@@191 $generated@@46)) ($generated@@223 $generated@@644 ($generated@@191 $generated@@46) $generated@@635))) true) (and (= 2 $generated@@135) (= (ControlFlow 0 6) 2)))) $generated@@647)))
$generated@@655)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U Int Int) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@231 (T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 () Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (Int Int) Bool)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@285 (Int Int) Bool)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@T T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (Int Int) Bool)
(declare-fun $generated@@426 (T@T) T@U)
(declare-fun $generated@@450 () T@T)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@493 (T@U Int) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@133 $generated@@136)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@136))
))) (= (type $generated@@135) $generated@@134)))
(assert (forall (($generated@@137 T@U) ($generated@@138 Int) ($generated@@139 Int) ) (!  (=> (= (type $generated@@137) $generated@@134) (= ($generated@@132 $generated@@137 $generated@@138 $generated@@139) ($generated@@132 $generated@@135 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 15) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@64) (= (type $generated@@148) $generated@@64)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 16) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@64)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 17)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@67 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@77) (= (type $generated@@213) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@214) ($generated@@66 $generated@@4))) (= (type $generated@@216) $generated@@77)) (= (type $generated@@217) ($generated@@66 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@67 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@77) (= (type $generated@@225) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@226) ($generated@@66 $generated@@4))) (= (type $generated@@228) $generated@@77)) (= (type $generated@@229) ($generated@@66 $generated@@230))) (= ($generated@@0 ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@231 $generated@@233 $generated@@234)) $generated@@144)
 :pattern ( ($generated@@231 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@64) (= (type $generated@@236) $generated@@64)) (= (type $generated@@237) $generated@@153)) (= (type $generated@@238) $generated@@153)) (= ($generated@@140 ($generated@@231 $generated@@237 $generated@@238) ($generated@@143 $generated@@235 $generated@@236))  (and ($generated@@232 $generated@@237 $generated@@235) ($generated@@232 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@140 ($generated@@231 $generated@@237 $generated@@238) ($generated@@143 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@144) (= (type $generated@@240) $generated@@144)) (= ($generated@@150 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@150 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@140 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@153) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@232 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@140 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@153) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@232 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@258 $generated@@260)) $generated@@134)
 :pattern ( ($generated@@258 $generated@@260))
)))
(assert  (=> (<= 1 $generated@@257) (forall (($generated@@261 T@U) ($generated@@262 Int) ($generated@@263 Int) ) (!  (=> (and (= (type $generated@@261) $generated@@134) (or ($generated@@259 $generated@@262 $generated@@263) (not (= 1 $generated@@257)))) (= ($generated@@132 ($generated@@258 $generated@@261) $generated@@262 $generated@@263) ($generated@@251 2)))
 :pattern ( ($generated@@132 ($generated@@258 $generated@@261) $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@64) (= (type $generated@@267) $generated@@64)) (= (type $generated@@268) $generated@@153)) (= (type $generated@@269) $generated@@153)) (= (type $generated@@270) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@264 $generated@@270)) (= ($generated@@74 ($generated@@231 $generated@@268 $generated@@269) ($generated@@143 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@74 ($generated@@231 $generated@@268 $generated@@269) ($generated@@143 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@68)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@144) (= ($generated@@142 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@144) ($generated@@142 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@153) (= (type $generated@@276) $generated@@153)) (= $generated@@274 ($generated@@231 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@142 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 18)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert  (=> (<= 1 $generated@@257) (forall (($generated@@286 T@U) ($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (and (= (type $generated@@286) $generated@@134) (or ($generated@@259 $generated@@287 $generated@@288) (not (= 1 $generated@@257)))) (forall (($generated@@289 Int) ) (!  (=> true ($generated@@285 $generated@@289 ($generated@@132 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@285 $generated@@289 ($generated@@132 $generated@@286 $generated@@287 $generated@@288)))
)))
 :pattern ( ($generated@@132 $generated@@286 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@153)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@64) (= (type $generated@@294) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@265 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@74 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@265 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@76 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@79 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@76 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@81 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@76 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 20)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@81 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@81 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@79 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@76 $generated@@338 $generated@@2)) (= ($generated@@159 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@81 $generated@@337 $generated@@339))) (<= ($generated ($generated@@81 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@81 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@159 $generated@@337))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@305 (type $generated@@340))))
(let (($generated@@342 ($generated@@304 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@303 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@302 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@301 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@305 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@76 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@305 (type $generated@@347))))
(let (($generated@@349 ($generated@@304 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@303 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@302 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@323 (type $generated@@351))))
(let (($generated@@353 ($generated@@322 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@321 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@320 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@81 ($generated@@319 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@319 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@323 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@76 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@323 (type $generated@@358))))
(let (($generated@@360 ($generated@@322 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@321 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@320 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 Int) ($generated@@364 Int) ) (!  (=> (= (type $generated@@362) $generated@@134) (= ($generated@@132 ($generated@@258 $generated@@362) $generated@@363 $generated@@364) ($generated@@132 $generated@@362 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@132 ($generated@@258 $generated@@362) $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@366) $generated@@64)) (= ($generated@@140 $generated@@365 ($generated@@158 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@153) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367)))) ($generated@@232 $generated@@367 $generated@@366))
 :pattern ( ($generated@@81 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@140 $generated@@365 ($generated@@158 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@241 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@153) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@265 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@241 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@246 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@153) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@265 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@246 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@81 ($generated@@296 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@81 ($generated@@296 $generated@@377) $generated@@376)))
)))
(assert  (and (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@378 $generated@@381)) ($generated@@76 $generated@@153 $generated@@4))
 :pattern ( ($generated@@378 $generated@@381))
)) (forall (($generated@@382 T@T) ($generated@@383 T@U) ) (! (= (type ($generated@@379 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@379 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@305 (type $generated@@384))))
(let (($generated@@386 ($generated@@304 (type $generated@@384))))
(= (type ($generated@@380 $generated@@384)) ($generated@@76 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@380 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@388) $generated@@153)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@387) ($generated@@151 ($generated@@379 $generated@@144 $generated@@388)))) (= ($generated@@81 ($generated@@380 $generated@@387) ($generated@@151 ($generated@@379 $generated@@144 $generated@@388))) ($generated@@152 ($generated@@379 $generated@@144 $generated@@388))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@76 $generated@@153 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@323 (type $generated@@392))))
(let (($generated@@394 ($generated@@322 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@76 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@396) $generated@@153)) (= ($generated@@0 ($generated@@81 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@81 ($generated@@319 $generated@@395) ($generated@@151 ($generated@@379 $generated@@144 $generated@@396)))) (= ($generated@@81 ($generated@@390 $generated@@395) ($generated@@151 ($generated@@379 $generated@@144 $generated@@396))) ($generated@@152 ($generated@@379 $generated@@144 $generated@@396))))))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@304 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@303 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@81 ($generated@@344 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@81 ($generated@@380 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@81 ($generated@@344 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@322 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@321 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@81 ($generated@@319 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@81 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@81 ($generated@@319 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@64)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@410) $generated@@414))) (and ($generated@@265 ($generated@@81 ($generated@@380 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@265 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@64)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@319 $generated@@418) $generated@@422))) (and ($generated@@265 ($generated@@81 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@265 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@319 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert  (=> (<= 0 $generated@@257) (forall (($generated@@424 Int) ($generated@@425 Int) ) (!  (=> (or ($generated@@423 $generated@@424 $generated@@425) (not (= 0 $generated@@257))) true)
 :pattern ( ($generated@@285 $generated@@424 $generated@@425))
))))
(assert (forall (($generated@@427 T@T) ) (! (= (type ($generated@@426 $generated@@427)) ($generated@@76 $generated@@427 $generated@@4))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@323 (type $generated@@428))))
(let (($generated@@430 ($generated@@322 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@321 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@320 $generated@@430 $generated@@429)) (= ($generated@@319 $generated@@428) ($generated@@426 $generated@@430))))))
 :pattern ( ($generated@@319 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@323 (type $generated@@431))))
(let (($generated@@433 ($generated@@322 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@321 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@320 $generated@@433 $generated@@432)) (= ($generated@@355 $generated@@431) ($generated@@426 $generated@@432))))))
 :pattern ( ($generated@@355 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@323 (type $generated@@434))))
(let (($generated@@436 ($generated@@322 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@321 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@320 $generated@@436 $generated@@435)) (= ($generated@@389 $generated@@434) ($generated@@426 $generated@@153))))))
 :pattern ( ($generated@@389 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@305 (type $generated@@437))))
(let (($generated@@439 ($generated@@304 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@303 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@302 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@153) (= (type $generated@@441) $generated@@153)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@437) ($generated@@290 ($generated@@231 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@378 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@323 (type $generated@@442))))
(let (($generated@@444 ($generated@@322 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@321 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@320 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@153) (= (type $generated@@446) $generated@@153)) ($generated@@0 ($generated@@81 ($generated@@389 $generated@@442) ($generated@@290 ($generated@@231 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@153) ($generated@@232 $generated@@447 $generated@@46)) (and (= ($generated@@290 ($generated@@379 $generated@@2 $generated@@447)) $generated@@447) ($generated@@140 ($generated@@379 $generated@@2 $generated@@447) $generated@@46)))
 :pattern ( ($generated@@232 $generated@@447 $generated@@46))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@153) ($generated@@232 $generated@@448 $generated@@47)) (and (= ($generated@@290 ($generated@@379 $generated@@3 $generated@@448)) $generated@@448) ($generated@@140 ($generated@@379 $generated@@3 $generated@@448) $generated@@47)))
 :pattern ( ($generated@@232 $generated@@448 $generated@@47))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@153) ($generated@@232 $generated@@449 $generated@@44)) (and (= ($generated@@290 ($generated@@379 $generated@@4 $generated@@449)) $generated@@449) ($generated@@140 ($generated@@379 $generated@@4 $generated@@449) $generated@@44)))
 :pattern ( ($generated@@232 $generated@@449 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@450) 21))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@153) ($generated@@232 $generated@@451 $generated@@45)) (and (= ($generated@@290 ($generated@@379 $generated@@450 $generated@@451)) $generated@@451) ($generated@@140 ($generated@@379 $generated@@450 $generated@@451) $generated@@45)))
 :pattern ( ($generated@@232 $generated@@451 $generated@@45))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (= (type $generated@@453) $generated@@64) (= ($generated@@232 ($generated@@290 $generated@@452) $generated@@453) ($generated@@140 $generated@@452 $generated@@453)))
 :pattern ( ($generated@@232 ($generated@@290 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@79 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@76 $generated@@455 $generated@@2)) (<= 0 ($generated@@295 $generated@@454))))
 :pattern ( ($generated@@295 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@280 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@279 $generated@@457)) (<= 0 ($generated@@278 $generated@@456))))
 :pattern ( ($generated@@278 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@407 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@407 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@407 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@407 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@72 ($generated@@407 $generated@@466 $generated@@467)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@415 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@415 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@415 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@72 ($generated@@415 $generated@@476 $generated@@477)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@153) (= (type $generated@@479) $generated@@153)) (= ($generated@@271 ($generated@@231 $generated@@478 $generated@@479)) $generated@@61))
 :pattern ( ($generated@@231 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@143 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@143 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@143 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@143 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@153) (= (type $generated@@489) $generated@@153)) (= ($generated@@151 ($generated@@231 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@231 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@153) (= (type $generated@@491) $generated@@153)) (= ($generated@@152 ($generated@@231 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@231 $generated@@490 $generated@@491))
)))
(assert  (and (forall (($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@494))
)) (forall (($generated@@495 T@U) ($generated@@496 Int) ) (! (let (($generated@@497 ($generated@@280 (type $generated@@495))))
(= (type ($generated@@493 $generated@@495 $generated@@496)) $generated@@497))
 :pattern ( ($generated@@493 $generated@@495 $generated@@496))
))))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@279 $generated@@153)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@498 ($generated@@492 $generated@@499) $generated@@500) (forall (($generated@@501 Int) ) (!  (=> (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@278 $generated@@498))) ($generated@@265 ($generated@@493 $generated@@498 $generated@@501) $generated@@499 $generated@@500))
 :pattern ( ($generated@@493 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@74 $generated@@498 ($generated@@492 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@75 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@75 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@241 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@241 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@246 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@246 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@158 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@158 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@158 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@492 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@492 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@492 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@492 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated@@379 $generated@@521 ($generated@@290 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@290 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) (= ($generated@@140 $generated@@522 ($generated@@407 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@522) $generated@@525))) (and ($generated@@232 ($generated@@81 ($generated@@380 $generated@@522) $generated@@525) $generated@@524) ($generated@@232 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@522) $generated@@525))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@140 $generated@@522 ($generated@@407 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) (= ($generated@@140 $generated@@526 ($generated@@415 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@319 $generated@@526) $generated@@529))) (and ($generated@@232 ($generated@@81 ($generated@@390 $generated@@526) $generated@@529) $generated@@528) ($generated@@232 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@526) $generated@@529))
 :pattern ( ($generated@@81 ($generated@@319 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@140 $generated@@526 ($generated@@415 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@153) (= (type $generated@@533) $generated@@153)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@231 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@231 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@153) (= (type $generated@@535) $generated@@153)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@231 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@231 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@153) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) ($generated@@232 $generated@@536 ($generated@@407 $generated@@537 $generated@@538))) (and (= ($generated@@290 ($generated@@379 ($generated@@303 $generated@@153 $generated@@153) $generated@@536)) $generated@@536) ($generated@@140 ($generated@@379 ($generated@@303 $generated@@153 $generated@@153) $generated@@536) ($generated@@407 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@232 $generated@@536 ($generated@@407 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@153) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) ($generated@@232 $generated@@539 ($generated@@415 $generated@@540 $generated@@541))) (and (= ($generated@@290 ($generated@@379 ($generated@@321 $generated@@153 $generated@@153) $generated@@539)) $generated@@539) ($generated@@140 ($generated@@379 ($generated@@321 $generated@@153 $generated@@153) $generated@@539) ($generated@@415 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@232 $generated@@539 ($generated@@415 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@153)) ($generated@@232 $generated@@544 ($generated@@143 $generated@@542 $generated@@543))) (and (= ($generated@@290 ($generated@@379 $generated@@144 $generated@@544)) $generated@@544) ($generated@@140 ($generated@@379 $generated@@144 $generated@@544) ($generated@@143 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@232 $generated@@544 ($generated@@143 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@81 ($generated@@426 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@81 ($generated@@426 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@69)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (and (= ($generated@@72 ($generated@@143 $generated@@549 $generated@@550)) $generated@@62) (= ($generated@@547 ($generated@@143 $generated@@549 $generated@@550)) $generated@@63)))
 :pattern ( ($generated@@143 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@144) (= ($generated@@530 ($generated@@290 $generated@@551)) ($generated@@531 $generated@@551)))
 :pattern ( ($generated@@530 ($generated@@290 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@153) ($generated@@232 $generated@@552 ($generated@@75 0))) (and (= ($generated@@290 ($generated@@379 $generated@@2 $generated@@552)) $generated@@552) ($generated@@140 ($generated@@379 ($generated@@76 $generated@@153 $generated@@4) $generated@@552) ($generated@@75 0))))
 :pattern ( ($generated@@232 $generated@@552 ($generated@@75 0)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@153) (= (type $generated@@554) $generated@@64)) ($generated@@232 $generated@@553 ($generated@@241 $generated@@554))) (and (= ($generated@@290 ($generated@@379 ($generated@@76 $generated@@153 $generated@@4) $generated@@553)) $generated@@553) ($generated@@140 ($generated@@379 ($generated@@76 $generated@@153 $generated@@4) $generated@@553) ($generated@@241 $generated@@554))))
 :pattern ( ($generated@@232 $generated@@553 ($generated@@241 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@153) (= (type $generated@@556) $generated@@64)) ($generated@@232 $generated@@555 ($generated@@246 $generated@@556))) (and (= ($generated@@290 ($generated@@379 ($generated@@76 $generated@@153 $generated@@4) $generated@@555)) $generated@@555) ($generated@@140 ($generated@@379 ($generated@@76 $generated@@153 $generated@@4) $generated@@555) ($generated@@246 $generated@@556))))
 :pattern ( ($generated@@232 $generated@@555 ($generated@@246 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@153) (= (type $generated@@558) $generated@@64)) ($generated@@232 $generated@@557 ($generated@@158 $generated@@558))) (and (= ($generated@@290 ($generated@@379 ($generated@@76 $generated@@153 $generated@@2) $generated@@557)) $generated@@557) ($generated@@140 ($generated@@379 ($generated@@76 $generated@@153 $generated@@2) $generated@@557) ($generated@@158 $generated@@558))))
 :pattern ( ($generated@@232 $generated@@557 ($generated@@158 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@153) (= (type $generated@@560) $generated@@64)) ($generated@@232 $generated@@559 ($generated@@492 $generated@@560))) (and (= ($generated@@290 ($generated@@379 ($generated@@279 $generated@@153) $generated@@559)) $generated@@559) ($generated@@140 ($generated@@379 ($generated@@279 $generated@@153) $generated@@559) ($generated@@492 $generated@@560))))
 :pattern ( ($generated@@232 $generated@@559 ($generated@@492 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@561 ($generated@@158 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@153) (< 0 ($generated ($generated@@81 $generated@@561 $generated@@564)))) ($generated@@265 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@81 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@158 $generated@@562) $generated@@563))
)))
(assert  (=> (<= 1 $generated@@257) (forall (($generated@@565 T@U) ($generated@@566 Int) ($generated@@567 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@134) (or ($generated@@259 ($generated@@251 $generated@@566) ($generated@@251 $generated@@567)) (not (= 1 $generated@@257)))) (= ($generated@@132 ($generated@@258 $generated@@565) ($generated@@251 $generated@@566) ($generated@@251 $generated@@567)) ($generated@@251 2)))
 :weight 3
 :pattern ( ($generated@@132 ($generated@@258 $generated@@565) ($generated@@251 $generated@@566) ($generated@@251 $generated@@567)))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@144) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@264 $generated@@570) (and ($generated@@142 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@64) ($generated@@74 $generated@@568 ($generated@@143 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@74 $generated@@568 ($generated@@143 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@265 ($generated@@151 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@265 ($generated@@151 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@144) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@264 $generated@@574) (and ($generated@@142 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@74 $generated@@572 ($generated@@143 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@143 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@265 ($generated@@152 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@265 ($generated@@152 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@153) (= (type $generated@@577) $generated@@153)) (= ($generated@@231 ($generated@@253 $generated@@576) ($generated@@253 $generated@@577)) ($generated@@253 ($generated@@231 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@231 ($generated@@253 $generated@@576) ($generated@@253 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@251 $generated@@578))) ($generated@@253 ($generated@@290 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@251 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@290 ($generated@@253 $generated@@579)) ($generated@@253 ($generated@@290 $generated@@579)))
 :pattern ( ($generated@@290 ($generated@@253 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@280 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@279 $generated@@581)) (= ($generated@@278 $generated@@580) 0)) (= $generated@@580 ($generated@@277 $generated@@581))))
 :pattern ( ($generated@@278 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@76 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@295 ($generated@@82 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@295 $generated@@582) ($generated ($generated@@81 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@295 ($generated@@82 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@2)) ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@3)) ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@4)) ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@450)) ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@153)) ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@279 $generated@@153)) (= (type $generated@@597) $generated@@64)) (= ($generated@@140 $generated@@596 ($generated@@492 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@278 $generated@@596))) ($generated@@232 ($generated@@493 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@493 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@140 $generated@@596 ($generated@@492 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@279 $generated@@153)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@278 $generated@@600))) (< ($generated@@531 ($generated@@379 $generated@@144 ($generated@@493 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@531 ($generated@@379 $generated@@144 ($generated@@493 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) ($generated@@140 $generated@@602 ($generated@@407 $generated@@603 $generated@@604))) (and (and ($generated@@140 ($generated@@301 $generated@@602) ($generated@@241 $generated@@603)) ($generated@@140 ($generated@@344 $generated@@602) ($generated@@241 $generated@@604))) ($generated@@140 ($generated@@378 $generated@@602) ($generated@@241 ($generated@@143 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@140 $generated@@602 ($generated@@407 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) $generated@@64)) ($generated@@140 $generated@@605 ($generated@@415 $generated@@606 $generated@@607))) (and (and ($generated@@140 ($generated@@319 $generated@@605) ($generated@@246 $generated@@606)) ($generated@@140 ($generated@@355 $generated@@605) ($generated@@246 $generated@@607))) ($generated@@140 ($generated@@389 $generated@@605) ($generated@@246 ($generated@@143 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@140 $generated@@605 ($generated@@415 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@140 $generated@@608 $generated@@46))
 :pattern ( ($generated@@140 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@140 $generated@@609 $generated@@47))
 :pattern ( ($generated@@140 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@140 $generated@@610 $generated@@44))
 :pattern ( ($generated@@140 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@450) ($generated@@140 $generated@@611 $generated@@45))
 :pattern ( ($generated@@140 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@153) ($generated@@140 $generated@@612 $generated@@48))
 :pattern ( ($generated@@140 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@618) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@613) $generated@@134)) (= (type $generated@@616) ($generated@@165 $generated@@77 $generated@@4))) (= (type $generated@@617) $generated@@77)) (= (type $generated@@619) $generated@@134)) (= (type $generated@@620) ($generated@@165 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@622  (=> (= (ControlFlow 0 6) (- 0 5)) (forall (($generated@@623 Int) ) (!  (=> true ($generated@@285 $generated@@623 ($generated@@132 $generated@@613 $generated@@614 $generated@@615)))
 :pattern ( ($generated@@285 $generated@@623 ($generated@@132 $generated@@613 $generated@@614 $generated@@615)))
)))))
(let (($generated@@624  (=> (and (and (= $generated@@616 ($generated@@219 $generated@@617 $generated@@618 $generated@@60 false)) (= ($generated@@132 $generated@@619 $generated@@614 $generated@@615) ($generated@@251 2))) (and ($generated@@140 ($generated@@8 ($generated@@132 $generated@@619 $generated@@614 $generated@@615)) $generated@@46) (= (ControlFlow 0 7) 6))) $generated@@622)))
(let (($generated@@625  (=> (and ($generated@@74 ($generated@@8 $generated@@614) $generated@@46 $generated@@618) ($generated@@74 ($generated@@8 $generated@@615) $generated@@46 $generated@@618)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (<= 0 $generated@@614) (= $generated@@614 $generated@@614))) (=> (or (<= 0 $generated@@614) (= $generated@@614 $generated@@614)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@615) (< $generated@@614 $generated@@614)) (= $generated@@615 $generated@@615))) (=> (or (or (<= 0 $generated@@615) (< $generated@@614 $generated@@614)) (= $generated@@615 $generated@@615)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@614 $generated@@614) (= $generated@@615 $generated@@615)) (or (< $generated@@614 $generated@@614) (and (= $generated@@614 $generated@@614) (< $generated@@615 $generated@@615))))))))))))
(let (($generated@@626  (=> (= $generated@@620 ($generated@@164 $generated@@617 $generated@@618 $generated@@60 false)) (=> (and (= ($generated@@133 $generated@@619) $generated@@619) (= ($generated@@133 $generated@@613) $generated@@613)) (and (=> (= (ControlFlow 0 8) 2) $generated@@625) (=> (= (ControlFlow 0 8) 7) $generated@@624))))))
(let (($generated@@627  (=> (and (and ($generated@@264 $generated@@618) ($generated@@621 $generated@@618)) (and (= 1 $generated@@257) (= (ControlFlow 0 9) 8))) $generated@@626)))
$generated@@627))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
