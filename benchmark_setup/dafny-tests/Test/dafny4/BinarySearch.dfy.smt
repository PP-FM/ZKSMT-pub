(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 2147483648))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 2147483648)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 2147483648)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 2147483648))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U T@U) Bool)
(declare-fun $generated@@179 (T@T) T@U)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@192 (T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@377 (Int) T@U)
(declare-fun $generated@@378 (T@U Int) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@T T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@457 (T@T) T@U)
(declare-fun $generated@@481 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@644 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert  (and (and (forall (($generated@@182 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@182)) 16)) (forall (($generated@@183 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@T) ) (! (= (type ($generated@@179 $generated@@184)) ($generated@@180 $generated@@184))
 :pattern ( ($generated@@179 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
 (not ($generated@@178 ($generated@@179 $generated@@186) $generated@@185)))
 :pattern ( (let (($generated@@186 (type $generated@@185)))
($generated@@178 ($generated@@179 $generated@@186) $generated@@185)))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@67)
 :pattern ( ($generated@@187 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@191) $generated@@67)) ($generated@@140 $generated@@190 ($generated@@187 $generated@@191))) ($generated@@188 $generated@@190))
 :pattern ( ($generated@@140 $generated@@190 ($generated@@187 $generated@@191)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@1 ($generated@@194 $generated@@198 $generated@@199)) 17)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@196 ($generated@@194 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@194 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@196 (type $generated@@204))))
(= (type ($generated@@192 $generated@@204 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(let (($generated@@213 (type $generated@@209)))
(= (type ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@194 $generated@@213 $generated@@212))))
 :pattern ( ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@196 (type $generated@@214))))
 (=> (= (type $generated@@217) $generated@@218) (= ($generated@@192 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@215 $generated@@216) $generated@@217)))
 :weight 0
))) (and (and (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@192 ($generated@@197 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@192 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@192 ($generated@@197 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@192 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or true (= ($generated@@192 ($generated@@197 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@192 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@194 $generated@@81 $generated@@4))
 :pattern ( ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@70 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@81) (= (type $generated@@242) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) ($generated@@69 $generated@@4))) (= (type $generated@@245) $generated@@81)) (= (type $generated@@246) ($generated@@69 $generated@@247))) (= ($generated@@0 ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@250 $generated@@251)) $generated@@164)
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@173)) (= (type $generated@@255) $generated@@173)) (= ($generated@@140 ($generated@@248 $generated@@254 $generated@@255) ($generated@@163 $generated@@252 $generated@@253))  (and ($generated@@249 $generated@@254 $generated@@252) ($generated@@249 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@140 ($generated@@248 $generated@@254 $generated@@255) ($generated@@163 $generated@@252 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@164) (= (type $generated@@257) $generated@@164)) (= ($generated@@170 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@170 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@67)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@261) $generated@@67)) (= ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@173) ($generated@@0 ($generated@@85 $generated@@260 $generated@@262))) ($generated@@249 $generated@@262 $generated@@261))
 :pattern ( ($generated@@85 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@67)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@266) $generated@@67)) (= ($generated@@140 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@173) ($generated@@0 ($generated@@85 $generated@@265 $generated@@267))) ($generated@@249 $generated@@267 $generated@@266))
 :pattern ( ($generated@@85 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@140 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@268 $generated@@269) $generated@@269)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@67) (= (type $generated@@276) $generated@@67)) (= (type $generated@@277) $generated@@173)) (= (type $generated@@278) $generated@@173)) (= (type $generated@@279) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@279)) (= ($generated@@78 ($generated@@248 $generated@@277 $generated@@278) ($generated@@163 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@78 ($generated@@248 $generated@@277 $generated@@278) ($generated@@163 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@71)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@164) (= ($generated@@162 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@164) ($generated@@162 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@173) (= (type $generated@@285) $generated@@173)) (= $generated@@283 ($generated@@248 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@162 $generated@@283))
)))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@286 ($generated@@179 $generated@@287)) 0)
 :pattern ( ($generated@@179 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@67) (= (type $generated@@289) $generated@@81)) (= ($generated@@140 $generated@@289 ($generated@@157 $generated@@288))  (and ($generated@@140 $generated@@289 ($generated@@137 $generated@@288)) (not (= $generated@@289 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@289 ($generated@@157 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@173)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@274 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@78 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@274 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@297) $generated@@173)) (= (type $generated@@298) $generated@@67)) ($generated@@145 $generated@@295 $generated@@296)) ($generated@@274 $generated@@297 $generated@@298 $generated@@295)) ($generated@@274 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@145 $generated@@295 $generated@@296) ($generated@@274 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@302) $generated@@67)) ($generated@@145 $generated@@299 $generated@@300)) ($generated@@78 $generated@@301 $generated@@302 $generated@@299)) ($generated@@78 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@145 $generated@@299 $generated@@300) ($generated@@78 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@80 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@83 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@80 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@85 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@72)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@311)) $generated@@61) (= ($generated@@309 ($generated@@137 $generated@@311)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@312)) $generated@@62) (= ($generated@@309 ($generated@@157 $generated@@312)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@80 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@80 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@83 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@80 $generated@@350 $generated@@2)) (= ($generated@@188 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@85 $generated@@349 $generated@@351))) (<= ($generated ($generated@@85 $generated@@349 $generated@@351)) ($generated@@303 $generated@@349))))
 :pattern ( ($generated@@85 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@188 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@67) (= (type $generated@@353) $generated@@81)) (= ($generated@@140 $generated@@353 ($generated@@137 $generated@@352))  (or (= $generated@@353 $generated@@138) (= ($generated@@139 $generated@@353) ($generated@@137 $generated@@352)))))
 :pattern ( ($generated@@140 $generated@@353 ($generated@@137 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@317 (type $generated@@354))))
(let (($generated@@356 ($generated@@316 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@315 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@314 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@313 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@317 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@80 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(let (($generated@@363 ($generated@@316 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@315 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@314 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@335 (type $generated@@365))))
(let (($generated@@367 ($generated@@334 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@333 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@332 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@331 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@335 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@80 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@335 (type $generated@@372))))
(let (($generated@@374 ($generated@@334 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@333 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@332 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert  (and (and (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@376 $generated@@379 $generated@@380)) ($generated@@180 $generated@@173))
 :pattern ( ($generated@@376 $generated@@379 $generated@@380))
)) (forall (($generated@@381 Int) ) (! (= (type ($generated@@377 $generated@@381)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@377 $generated@@381))
))) (forall (($generated@@382 T@U) ($generated@@383 Int) ) (! (let (($generated@@384 ($generated@@181 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382 $generated@@383)) $generated@@384))
 :pattern ( ($generated@@378 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@386) $generated@@81)) (forall (($generated@@387 Int) ) (!  (=> (and (<= 0 $generated@@387) (< $generated@@387 ($generated@@286 ($generated@@376 $generated@@385 $generated@@386)))) (= ($generated@@378 ($generated@@376 $generated@@385 $generated@@386) $generated@@387) ($generated@@87 ($generated@@85 $generated@@385 $generated@@386) ($generated@@377 $generated@@387))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@385 $generated@@386) ($generated@@377 $generated@@387)))
 :pattern ( ($generated@@378 ($generated@@376 $generated@@385 $generated@@386) $generated@@387))
)))
 :pattern ( ($generated@@376 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@389) $generated@@67)) (= ($generated@@140 $generated@@388 ($generated@@187 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@249 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@140 $generated@@388 ($generated@@187 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
 (=> (= (type $generated@@391) ($generated@@180 $generated@@393)) (= ($generated@@178 $generated@@391 $generated@@392) (exists (($generated@@394 Int) ) (!  (and (and (<= 0 $generated@@394) (< $generated@@394 ($generated@@286 $generated@@391))) (= ($generated@@378 $generated@@391 $generated@@394) $generated@@392))
 :pattern ( ($generated@@378 $generated@@391 $generated@@394))
)))))
 :pattern ( ($generated@@178 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@258 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@173) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@274 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@258 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@399 ($generated@@263 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@173) ($generated@@0 ($generated@@85 $generated@@399 $generated@@402))) ($generated@@274 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@85 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@78 $generated@@399 ($generated@@263 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(= ($generated ($generated@@85 ($generated@@304 $generated@@404) $generated@@403)) 0))
 :pattern ( (let (($generated@@404 (type $generated@@403)))
($generated@@85 ($generated@@304 $generated@@404) $generated@@403)))
)))
(assert  (and (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@405 $generated@@408)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@405 $generated@@408))
)) (forall (($generated@@409 T@T) ($generated@@410 T@U) ) (! (= (type ($generated@@406 $generated@@409 $generated@@410)) $generated@@409)
 :pattern ( ($generated@@406 $generated@@409 $generated@@410))
))) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@317 (type $generated@@411))))
(let (($generated@@413 ($generated@@316 (type $generated@@411))))
(= (type ($generated@@407 $generated@@411)) ($generated@@80 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@407 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@415) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@405 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@414) ($generated@@171 ($generated@@406 $generated@@164 $generated@@415)))) (= ($generated@@85 ($generated@@407 $generated@@414) ($generated@@171 ($generated@@406 $generated@@164 $generated@@415))) ($generated@@172 ($generated@@406 $generated@@164 $generated@@415))))))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@414) $generated@@415))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@335 (type $generated@@419))))
(let (($generated@@421 ($generated@@334 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@80 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@423) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@422) ($generated@@171 ($generated@@406 $generated@@164 $generated@@423)))) (= ($generated@@85 ($generated@@417 $generated@@422) ($generated@@171 ($generated@@406 $generated@@164 $generated@@423))) ($generated@@172 ($generated@@406 $generated@@164 $generated@@423))))))
 :pattern ( ($generated@@85 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@316 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@315 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@85 ($generated@@358 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@85 ($generated@@407 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@424) $generated@@428))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@334 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@333 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@85 ($generated@@369 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@85 ($generated@@417 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@429) $generated@@433))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@438) $generated@@67)) (= (type $generated@@439) $generated@@67)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@437) $generated@@441))) (and ($generated@@274 ($generated@@85 ($generated@@407 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@274 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@437) $generated@@441))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@446) $generated@@67)) (= (type $generated@@447) $generated@@67)) (= (type $generated@@448) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@445) $generated@@449))) (and ($generated@@274 ($generated@@85 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@274 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@450) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@450 $generated@@452))) (and ($generated@@145 $generated@@450 $generated@@451) ($generated@@145 $generated@@451 $generated@@452))) ($generated@@145 $generated@@450 $generated@@452))
 :pattern ( ($generated@@145 $generated@@450 $generated@@451) ($generated@@145 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 Int) ) (!  (=> (and (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@455) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@454) (and (not (= $generated@@455 $generated@@138)) (= ($generated@@139 $generated@@455) ($generated@@137 $generated@@453)))) (and (<= 0 $generated@@456) (< $generated@@456 ($generated@@136 $generated@@455)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@454 $generated@@455) $generated@@60))) ($generated@@274 ($generated@@87 ($generated@@85 $generated@@454 $generated@@455) ($generated@@377 $generated@@456)) $generated@@453 $generated@@454)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@454 $generated@@455) ($generated@@377 $generated@@456)) ($generated@@137 $generated@@453))
)))
(assert (forall (($generated@@458 T@T) ) (! (= (type ($generated@@457 $generated@@458)) ($generated@@80 $generated@@458 $generated@@4))
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@335 (type $generated@@459))))
(let (($generated@@461 ($generated@@334 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@333 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@332 $generated@@461 $generated@@460)) (= ($generated@@331 $generated@@459) ($generated@@457 $generated@@461))))))
 :pattern ( ($generated@@331 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@335 (type $generated@@462))))
(let (($generated@@464 ($generated@@334 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@333 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@332 $generated@@464 $generated@@463)) (= ($generated@@369 $generated@@462) ($generated@@457 $generated@@463))))))
 :pattern ( ($generated@@369 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@335 (type $generated@@465))))
(let (($generated@@467 ($generated@@334 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@333 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@332 $generated@@467 $generated@@466)) (= ($generated@@416 $generated@@465) ($generated@@457 $generated@@173))))))
 :pattern ( ($generated@@416 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@317 (type $generated@@468))))
(let (($generated@@470 ($generated@@316 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@315 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@314 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@173) (= (type $generated@@472) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@405 $generated@@468) ($generated@@290 ($generated@@248 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@405 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@335 (type $generated@@473))))
(let (($generated@@475 ($generated@@334 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@333 $generated@@475 $generated@@474)) (or (= $generated@@473 ($generated@@332 $generated@@475 $generated@@474)) (exists (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (and (and (= (type $generated@@476) $generated@@173) (= (type $generated@@477) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@416 $generated@@473) ($generated@@290 ($generated@@248 $generated@@476 $generated@@477)))))
 :no-pattern (type $generated@@476)
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@416 $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@173) ($generated@@249 $generated@@478 $generated@@46)) (and (= ($generated@@290 ($generated@@406 $generated@@2 $generated@@478)) $generated@@478) ($generated@@140 ($generated@@406 $generated@@2 $generated@@478) $generated@@46)))
 :pattern ( ($generated@@249 $generated@@478 $generated@@46))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@173) ($generated@@249 $generated@@479 $generated@@47)) (and (= ($generated@@290 ($generated@@406 $generated@@3 $generated@@479)) $generated@@479) ($generated@@140 ($generated@@406 $generated@@3 $generated@@479) $generated@@47)))
 :pattern ( ($generated@@249 $generated@@479 $generated@@47))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@173) ($generated@@249 $generated@@480 $generated@@44)) (and (= ($generated@@290 ($generated@@406 $generated@@4 $generated@@480)) $generated@@480) ($generated@@140 ($generated@@406 $generated@@4 $generated@@480) $generated@@44)))
 :pattern ( ($generated@@249 $generated@@480 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@481) 20))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@173) ($generated@@249 $generated@@482 $generated@@45)) (and (= ($generated@@290 ($generated@@406 $generated@@481 $generated@@482)) $generated@@482) ($generated@@140 ($generated@@406 $generated@@481 $generated@@482) $generated@@45)))
 :pattern ( ($generated@@249 $generated@@482 $generated@@45))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@249 ($generated@@290 $generated@@483) $generated@@484) ($generated@@140 $generated@@483 $generated@@484)))
 :pattern ( ($generated@@249 ($generated@@290 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@81) (<= 0 ($generated@@136 $generated@@485)))
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@83 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@80 $generated@@487 $generated@@2)) (<= 0 ($generated@@303 $generated@@486))))
 :pattern ( ($generated@@303 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@181 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@180 $generated@@489)) (<= 0 ($generated@@286 $generated@@488))))
 :pattern ( ($generated@@286 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@434 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@434 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@494 ($generated@@434 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@434 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= ($generated@@76 ($generated@@434 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@442 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@442 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@442 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@442 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@76 ($generated@@442 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@173) (= (type $generated@@511) $generated@@173)) (= ($generated@@280 ($generated@@248 $generated@@510 $generated@@511)) $generated@@63))
 :pattern ( ($generated@@248 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= ($generated@@512 ($generated@@163 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@163 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= ($generated@@516 ($generated@@163 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@163 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@173) (= (type $generated@@521) $generated@@173)) (= ($generated@@171 ($generated@@248 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@248 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@173) (= (type $generated@@523) $generated@@173)) (= ($generated@@172 ($generated@@248 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@248 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@180 $generated@@173)) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@526 ($generated@@524 $generated@@527) $generated@@528) (forall (($generated@@529 Int) ) (!  (=> (and (<= 0 $generated@@529) (< $generated@@529 ($generated@@286 $generated@@526))) ($generated@@274 ($generated@@378 $generated@@526 $generated@@529) $generated@@527 $generated@@528))
 :pattern ( ($generated@@378 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@78 $generated@@526 ($generated@@524 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@531 Int) ) (! (= ($generated@@530 ($generated@@79 $generated@@531)) $generated@@531)
 :pattern ( ($generated@@79 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@532 ($generated@@258 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@258 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@76 ($generated@@258 $generated@@535)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@536 ($generated@@263 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@263 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@67) (= ($generated@@76 ($generated@@263 $generated@@539)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@187 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@187 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@76 ($generated@@187 $generated@@543)) $generated@@56))
 :pattern ( ($generated@@187 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@524 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@524 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@76 ($generated@@524 $generated@@547)) $generated@@57))
 :pattern ( ($generated@@524 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@75 ($generated@@377 $generated@@548)) 1)
 :pattern ( ($generated@@377 $generated@@548))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@549 ($generated@@377 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@377 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@67)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@67) (= ($generated@@551 ($generated@@137 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@137 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@67)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@67) (= ($generated@@554 ($generated@@157 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@157 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
(= ($generated@@406 $generated@@558 ($generated@@290 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@290 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@560) $generated@@67)) (= (type $generated@@561) $generated@@67)) (= ($generated@@140 $generated@@559 ($generated@@434 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@559) $generated@@562))) (and ($generated@@249 ($generated@@85 ($generated@@407 $generated@@559) $generated@@562) $generated@@561) ($generated@@249 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@559) $generated@@562))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@140 $generated@@559 ($generated@@434 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) $generated@@67)) (= ($generated@@140 $generated@@563 ($generated@@442 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@563) $generated@@566))) (and ($generated@@249 ($generated@@85 ($generated@@417 $generated@@563) $generated@@566) $generated@@565) ($generated@@249 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@563) $generated@@566))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@140 $generated@@563 ($generated@@442 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 Int) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@67) (= (type $generated@@568) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@569) $generated@@81)) (and (and ($generated@@152 $generated@@568) (and (not (= $generated@@569 $generated@@138)) (= ($generated@@139 $generated@@569) ($generated@@137 $generated@@567)))) (and (<= 0 $generated@@570) (< $generated@@570 ($generated@@136 $generated@@569))))) ($generated@@249 ($generated@@87 ($generated@@85 $generated@@568 $generated@@569) ($generated@@377 $generated@@570)) $generated@@567))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@568 $generated@@569) ($generated@@377 $generated@@570)) ($generated@@137 $generated@@567))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@173) (= (type $generated@@574) $generated@@173)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@248 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@248 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@173) (= (type $generated@@576) $generated@@173)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@248 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@248 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@173) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) ($generated@@249 $generated@@577 ($generated@@434 $generated@@578 $generated@@579))) (and (= ($generated@@290 ($generated@@406 ($generated@@315 $generated@@173 $generated@@173) $generated@@577)) $generated@@577) ($generated@@140 ($generated@@406 ($generated@@315 $generated@@173 $generated@@173) $generated@@577) ($generated@@434 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@249 $generated@@577 ($generated@@434 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@173) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@249 $generated@@580 ($generated@@442 $generated@@581 $generated@@582))) (and (= ($generated@@290 ($generated@@406 ($generated@@333 $generated@@173 $generated@@173) $generated@@580)) $generated@@580) ($generated@@140 ($generated@@406 ($generated@@333 $generated@@173 $generated@@173) $generated@@580) ($generated@@442 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@249 $generated@@580 ($generated@@442 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@67) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@173)) ($generated@@249 $generated@@585 ($generated@@163 $generated@@583 $generated@@584))) (and (= ($generated@@290 ($generated@@406 $generated@@164 $generated@@585)) $generated@@585) ($generated@@140 ($generated@@406 $generated@@164 $generated@@585) ($generated@@163 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@249 $generated@@585 ($generated@@163 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (not ($generated@@0 ($generated@@85 ($generated@@457 $generated@@587) $generated@@586))))
 :pattern ( (let (($generated@@587 (type $generated@@586)))
($generated@@85 ($generated@@457 $generated@@587) $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@590) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@588) ($generated@@152 $generated@@589)) ($generated@@145 $generated@@588 $generated@@589)) (= ($generated@@85 $generated@@588 $generated@@590) ($generated@@85 $generated@@589 $generated@@590))) (= ($generated@@376 $generated@@588 $generated@@590) ($generated@@376 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@376 $generated@@589 $generated@@590) ($generated@@145 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@81)) (= ($generated@@286 ($generated@@376 $generated@@591 $generated@@592)) ($generated@@136 $generated@@592)))
 :pattern ( ($generated@@286 ($generated@@376 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@67) (= (type $generated@@594) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@593 $generated@@594)) $generated@@64) (= ($generated@@309 ($generated@@163 $generated@@593 $generated@@594)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@164) (= ($generated@@571 ($generated@@290 $generated@@595)) ($generated@@572 $generated@@595)))
 :pattern ( ($generated@@571 ($generated@@290 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@173) ($generated@@249 $generated@@596 ($generated@@79 0))) (and (= ($generated@@290 ($generated@@406 $generated@@2 $generated@@596)) $generated@@596) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@596) ($generated@@79 0))))
 :pattern ( ($generated@@249 $generated@@596 ($generated@@79 0)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@173) (= (type $generated@@598) $generated@@67)) ($generated@@249 $generated@@597 ($generated@@258 $generated@@598))) (and (= ($generated@@290 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@597)) $generated@@597) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@597) ($generated@@258 $generated@@598))))
 :pattern ( ($generated@@249 $generated@@597 ($generated@@258 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@173) (= (type $generated@@600) $generated@@67)) ($generated@@249 $generated@@599 ($generated@@263 $generated@@600))) (and (= ($generated@@290 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@599)) $generated@@599) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@599) ($generated@@263 $generated@@600))))
 :pattern ( ($generated@@249 $generated@@599 ($generated@@263 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@173) (= (type $generated@@602) $generated@@67)) ($generated@@249 $generated@@601 ($generated@@187 $generated@@602))) (and (= ($generated@@290 ($generated@@406 ($generated@@80 $generated@@173 $generated@@2) $generated@@601)) $generated@@601) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@2) $generated@@601) ($generated@@187 $generated@@602))))
 :pattern ( ($generated@@249 $generated@@601 ($generated@@187 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@173) (= (type $generated@@604) $generated@@67)) ($generated@@249 $generated@@603 ($generated@@524 $generated@@604))) (and (= ($generated@@290 ($generated@@406 ($generated@@180 $generated@@173) $generated@@603)) $generated@@603) ($generated@@140 ($generated@@406 ($generated@@180 $generated@@173) $generated@@603) ($generated@@524 $generated@@604))))
 :pattern ( ($generated@@249 $generated@@603 ($generated@@524 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@67) (= (type $generated@@606) $generated@@173)) ($generated@@249 $generated@@606 ($generated@@137 $generated@@605))) (and (= ($generated@@290 ($generated@@406 $generated@@81 $generated@@606)) $generated@@606) ($generated@@140 ($generated@@406 $generated@@81 $generated@@606) ($generated@@137 $generated@@605))))
 :pattern ( ($generated@@249 $generated@@606 ($generated@@137 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@67) (= (type $generated@@608) $generated@@173)) ($generated@@249 $generated@@608 ($generated@@157 $generated@@607))) (and (= ($generated@@290 ($generated@@406 $generated@@81 $generated@@608)) $generated@@608) ($generated@@140 ($generated@@406 $generated@@81 $generated@@608) ($generated@@157 $generated@@607))))
 :pattern ( ($generated@@249 $generated@@608 ($generated@@157 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@610) $generated@@67)) (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@609 ($generated@@187 $generated@@610) $generated@@611) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@609 $generated@@612)))) ($generated@@274 $generated@@612 $generated@@610 $generated@@611))
 :pattern ( ($generated@@85 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@78 $generated@@609 ($generated@@187 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@164) (= (type $generated@@614) $generated@@67)) (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@615) (and ($generated@@162 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@67) ($generated@@78 $generated@@613 ($generated@@163 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@78 $generated@@613 ($generated@@163 $generated@@614 $generated@@616) $generated@@615))
))))) ($generated@@274 ($generated@@171 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@274 ($generated@@171 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@164) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@619) (and ($generated@@162 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@67) ($generated@@78 $generated@@617 ($generated@@163 $generated@@620 $generated@@618) $generated@@619))
 :pattern ( ($generated@@78 $generated@@617 ($generated@@163 $generated@@620 $generated@@618) $generated@@619))
))))) ($generated@@274 ($generated@@172 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@274 ($generated@@172 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@173) (= (type $generated@@622) $generated@@173)) (= ($generated@@248 ($generated@@270 $generated@@621) ($generated@@270 $generated@@622)) ($generated@@270 ($generated@@248 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@248 ($generated@@270 $generated@@621) ($generated@@270 $generated@@622)))
)))
(assert (forall (($generated@@623 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@268 $generated@@623))) ($generated@@270 ($generated@@290 ($generated@@8 $generated@@623))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@268 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ) (! (= ($generated@@290 ($generated@@270 $generated@@624)) ($generated@@270 ($generated@@290 $generated@@624)))
 :pattern ( ($generated@@290 ($generated@@270 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@181 (type $generated@@625))))
 (=> (and (= (type $generated@@625) ($generated@@180 $generated@@626)) (= ($generated@@286 $generated@@625) 0)) (= $generated@@625 ($generated@@179 $generated@@626))))
 :pattern ( ($generated@@286 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@628)))
 (=> (and (and (= (type $generated@@627) ($generated@@80 $generated@@630 $generated@@2)) (= (type $generated@@629) $generated@@2)) (<= 0 ($generated $generated@@629))) (= ($generated@@303 ($generated@@86 $generated@@627 $generated@@628 $generated@@629)) (+ (- ($generated@@303 $generated@@627) ($generated ($generated@@85 $generated@@627 $generated@@628))) ($generated $generated@@629)))))
 :pattern ( ($generated@@303 ($generated@@86 $generated@@627 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@632) $generated@@2)) ($generated@@78 $generated@@632 $generated@@46 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@46 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@634) $generated@@3)) ($generated@@78 $generated@@634 $generated@@47 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@47 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@636) $generated@@4)) ($generated@@78 $generated@@636 $generated@@44 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@44 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@638) $generated@@481)) ($generated@@78 $generated@@638 $generated@@45 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@45 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@640) $generated@@173)) ($generated@@78 $generated@@640 $generated@@48 $generated@@639))
 :pattern ( ($generated@@78 $generated@@640 $generated@@48 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@180 $generated@@173)) (= (type $generated@@642) $generated@@67)) (= ($generated@@140 $generated@@641 ($generated@@524 $generated@@642)) (forall (($generated@@643 Int) ) (!  (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@286 $generated@@641))) ($generated@@249 ($generated@@378 $generated@@641 $generated@@643) $generated@@642))
 :pattern ( ($generated@@378 $generated@@641 $generated@@643))
))))
 :pattern ( ($generated@@140 $generated@@641 ($generated@@524 $generated@@642)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ) (!  (=> (= (type $generated@@645) ($generated@@180 $generated@@173)) (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@286 $generated@@645))) (< ($generated@@572 ($generated@@406 $generated@@164 ($generated@@378 $generated@@645 $generated@@646))) ($generated@@644 $generated@@645))))
 :pattern ( ($generated@@572 ($generated@@406 $generated@@164 ($generated@@378 $generated@@645 $generated@@646))))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@648) $generated@@67)) (= (type $generated@@649) $generated@@67)) ($generated@@140 $generated@@647 ($generated@@434 $generated@@648 $generated@@649))) (and (and ($generated@@140 ($generated@@313 $generated@@647) ($generated@@258 $generated@@648)) ($generated@@140 ($generated@@358 $generated@@647) ($generated@@258 $generated@@649))) ($generated@@140 ($generated@@405 $generated@@647) ($generated@@258 ($generated@@163 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@140 $generated@@647 ($generated@@434 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@651) $generated@@67)) (= (type $generated@@652) $generated@@67)) ($generated@@140 $generated@@650 ($generated@@442 $generated@@651 $generated@@652))) (and (and ($generated@@140 ($generated@@331 $generated@@650) ($generated@@263 $generated@@651)) ($generated@@140 ($generated@@369 $generated@@650) ($generated@@263 $generated@@652))) ($generated@@140 ($generated@@416 $generated@@650) ($generated@@263 ($generated@@163 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@140 $generated@@650 ($generated@@442 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@140 $generated@@653 $generated@@46))
 :pattern ( ($generated@@140 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@140 $generated@@654 $generated@@47))
 :pattern ( ($generated@@140 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@140 $generated@@655 $generated@@44))
 :pattern ( ($generated@@140 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@481) ($generated@@140 $generated@@656 $generated@@45))
 :pattern ( ($generated@@140 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@173) ($generated@@140 $generated@@657 $generated@@48))
 :pattern ( ($generated@@140 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 (T@U) Bool)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(assert  (and (and (and (= (type $generated@@659) $generated@@81) (= (type $generated@@660) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@666) ($generated@@194 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@668 true))
(let (($generated@@669  (=> (and (< $generated@@658 0) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@659 $generated@@138)))))
(let (($generated@@670  (=> (=> (<= ($generated@@268 0) $generated@@658) (and (< $generated@@658 ($generated@@136 $generated@@659)) (= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@660 $generated@@659) ($generated@@377 $generated@@658)))) $generated@@661))) (and (=> (= (ControlFlow 0 8) 2) $generated@@669) (=> (= (ControlFlow 0 8) 3) $generated@@668)))))
(let (($generated@@671  (=> (<= ($generated@@268 0) $generated@@658) (and (=> (= (ControlFlow 0 4) (- 0 7)) (not (= $generated@@659 $generated@@138))) (=> (not (= $generated@@659 $generated@@138)) (=> (< $generated@@658 ($generated@@136 $generated@@659)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not (= $generated@@659 $generated@@138))) (=> (not (= $generated@@659 $generated@@138)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@136 $generated@@659)))) (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@136 $generated@@659))) (=> (= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@660 $generated@@659) ($generated@@377 $generated@@658)))) $generated@@661) (and (=> (= (ControlFlow 0 4) 2) $generated@@669) (=> (= (ControlFlow 0 4) 3) $generated@@668)))))))))))))
(let (($generated@@672  (=> (forall (($generated@@673 Int) ($generated@@674 Int) ) (!  (=> true (=> (and (and (<= ($generated@@268 0) $generated@@673) (< $generated@@673 $generated@@674)) (< $generated@@674 ($generated@@136 $generated@@659))) (<= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@659) ($generated@@377 $generated@@673)))) ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@659) ($generated@@377 $generated@@674)))))))
 :pattern ( ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@659) ($generated@@377 $generated@@674))) ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@659) ($generated@@377 $generated@@673))))
)) (=> (and (and ($generated@@152 $generated@@660) ($generated@@663 $generated@@660)) (and (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@81) (=> (and (not (= $generated@@675 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@662 $generated@@675) $generated@@60))) (= ($generated@@85 $generated@@660 $generated@@675) ($generated@@85 $generated@@662 $generated@@675))))
 :pattern ( ($generated@@85 $generated@@660 $generated@@675))
)) ($generated@@145 $generated@@662 $generated@@660))) (and (=> (= (ControlFlow 0 9) 4) $generated@@671) (=> (= (ControlFlow 0 9) 8) $generated@@670))))))
(let (($generated@@676  (=> (and (=> (and (and (<= ($generated@@268 0) $generated@@664) (< $generated@@664 $generated@@665)) (< $generated@@665 ($generated@@136 $generated@@659))) (<= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@659) ($generated@@377 $generated@@664)))) ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@659) ($generated@@377 $generated@@665)))))) (= (ControlFlow 0 16) 9)) $generated@@672)))
(let (($generated@@677  (=> (and (<= ($generated@@268 0) $generated@@664) (< $generated@@664 $generated@@665)) (and (=> (= (ControlFlow 0 10) (- 0 15)) (not (= $generated@@659 $generated@@138))) (=> (not (= $generated@@659 $generated@@138)) (=> (< $generated@@665 ($generated@@136 $generated@@659)) (and (=> (= (ControlFlow 0 10) (- 0 14)) (not (= $generated@@659 $generated@@138))) (=> (not (= $generated@@659 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 13)) (and (<= 0 $generated@@664) (< $generated@@664 ($generated@@136 $generated@@659)))) (=> (and (<= 0 $generated@@664) (< $generated@@664 ($generated@@136 $generated@@659))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (not (= $generated@@659 $generated@@138))) (=> (not (= $generated@@659 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@136 $generated@@659)))) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@136 $generated@@659))) (=> (and (<= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@659) ($generated@@377 $generated@@664)))) ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@659) ($generated@@377 $generated@@665))))) (= (ControlFlow 0 10) 9)) $generated@@672)))))))))))))))
(let (($generated@@678  (=> (= $generated@@666 ($generated@@193 $generated@@138 $generated@@662 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 10) $generated@@677) (=> (= (ControlFlow 0 17) 16) $generated@@676)))))
(let (($generated@@679  (=> (and ($generated@@152 $generated@@662) ($generated@@663 $generated@@662)) (=> (and (and ($generated@@140 $generated@@659 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@659 ($generated@@157 $generated@@46) $generated@@662)) (and (= 1 $generated@@667) (= (ControlFlow 0 18) 17))) $generated@@678))))
$generated@@679))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@191 (T@T) T@U)
(declare-fun $generated@@195 (T@U Int) T@U)
(declare-fun $generated@@196 (T@U) Int)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@209 (T@U T@U T@U) T@U)
(declare-fun $generated@@210 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U Int) T@U)
(declare-fun $generated@@274 (T@U T@U) T@U)
(declare-fun $generated@@275 (Int) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (Int) Int)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U Int) T@U)
(declare-fun $generated@@320 (T@U T@U T@U) Bool)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@365 (T@U) Int)
(declare-fun $generated@@366 (T@T) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@T) T@U)
(declare-fun $generated@@377 (T@T T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@T T@T) T@U)
(declare-fun $generated@@395 (T@T T@T) T@T)
(declare-fun $generated@@396 (T@T) T@T)
(declare-fun $generated@@397 (T@T) T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@T T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@496 (T@U T@U) T@U)
(declare-fun $generated@@504 (T@U T@U) T@U)
(declare-fun $generated@@512 (Int Int) Int)
(declare-fun $generated@@525 (T@T) T@U)
(declare-fun $generated@@549 () T@T)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@637 (T@U) Int)
(declare-fun $generated@@638 (T@U) Int)
(declare-fun $generated@@661 (T@U) T@U)
(declare-fun $generated@@662 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert  (and (and (forall (($generated@@156 T@T) ) (= ($generated@@1 ($generated@@154 $generated@@156)) 14)) (forall (($generated@@157 T@T) ) (! (= ($generated@@155 ($generated@@154 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 (type $generated@@159)))
(= (type ($generated@@153 $generated@@158 $generated@@159)) ($generated@@154 $generated@@160)))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@162)))
 (=> (and (= (type $generated@@161) ($generated@@154 $generated@@164)) (= (type $generated@@163) $generated@@164)) (= ($generated@@152 ($generated@@153 $generated@@161 $generated@@162) $generated@@163)  (or (= $generated@@162 $generated@@163) ($generated@@152 $generated@@161 $generated@@163)))))
 :pattern ( ($generated@@152 ($generated@@153 $generated@@161 $generated@@162) $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@168) $generated@@81)) (and (and ($generated@@165 $generated@@167) (and (not (= $generated@@168 $generated@@138)) (= ($generated@@139 $generated@@168) ($generated@@137 $generated@@166)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@167 $generated@@168) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@168)) $generated@@46 $generated@@167))
 :pattern ( ($generated@@136 $generated@@168) ($generated@@87 ($generated@@85 $generated@@167 $generated@@168) $generated@@60) ($generated@@137 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@2) ($generated@@140 $generated@@169 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@169 ($generated@@79 0)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@67)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@67) (= (type $generated@@173) $generated@@81)) (= (type $generated@@174) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@173 ($generated@@170 $generated@@172) $generated@@174) ($generated@@78 $generated@@173 ($generated@@137 $generated@@172) $generated@@174)))
 :pattern ( ($generated@@78 $generated@@173 ($generated@@170 $generated@@172) $generated@@174))
)))
(assert  (and (= ($generated@@1 $generated@@177) 15) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@178 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@176 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@67) (= (type $generated@@181) $generated@@67)) (= (type $generated@@182) $generated@@177)) ($generated@@140 $generated@@182 ($generated@@176 $generated@@180 $generated@@181))) ($generated@@175 $generated@@182))
 :pattern ( ($generated@@175 $generated@@182) ($generated@@140 $generated@@182 ($generated@@176 $generated@@180 $generated@@181)))
)))
(assert  (and (and (= ($generated@@1 $generated@@186) 16) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@184 $generated@@187))
))) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@188)) $generated@@186)
 :pattern ( ($generated@@185 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@177) (= (type $generated@@190) $generated@@177)) true) (= ($generated@@183 $generated@@189 $generated@@190)  (and (= ($generated@@184 $generated@@189) ($generated@@184 $generated@@190)) (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)))))
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@T) ) (! (= (type ($generated@@191 $generated@@192)) ($generated@@154 $generated@@192))
 :pattern ( ($generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
 (not ($generated@@152 ($generated@@191 $generated@@194) $generated@@193)))
 :pattern ( (let (($generated@@194 (type $generated@@193)))
($generated@@152 ($generated@@191 $generated@@194) $generated@@193)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 Int) ) (! (let (($generated@@199 ($generated@@155 (type $generated@@197))))
(= (type ($generated@@195 $generated@@197 $generated@@198)) ($generated@@154 $generated@@199)))
 :pattern ( ($generated@@195 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Int) ) (! (let (($generated@@203 (type $generated@@201)))
 (=> (= (type $generated@@200) ($generated@@154 $generated@@203)) (=> (and (<= 0 $generated@@202) (<= $generated@@202 ($generated@@196 $generated@@200))) (= ($generated@@195 ($generated@@153 $generated@@200 $generated@@201) $generated@@202) ($generated@@153 ($generated@@195 $generated@@200 $generated@@202) $generated@@201)))))
 :pattern ( ($generated@@195 ($generated@@153 $generated@@200 $generated@@201) $generated@@202))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@204 $generated@@206)) $generated@@67)
 :pattern ( ($generated@@204 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@207) ($generated@@80 $generated@@186 $generated@@2)) (= (type $generated@@208) $generated@@67)) ($generated@@140 $generated@@207 ($generated@@204 $generated@@208))) ($generated@@205 $generated@@207))
 :pattern ( ($generated@@140 $generated@@207 ($generated@@204 $generated@@208)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (= ($generated@@1 ($generated@@211 $generated@@215 $generated@@216)) 17)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@211 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@213 ($generated@@211 $generated@@219 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@211 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@213 (type $generated@@221))))
(= (type ($generated@@209 $generated@@221 $generated@@222 $generated@@223)) $generated@@224))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222 $generated@@223))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(let (($generated@@230 (type $generated@@226)))
(= (type ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@211 $generated@@230 $generated@@229))))
 :pattern ( ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@213 (type $generated@@231))))
 (=> (= (type $generated@@234) $generated@@235) (= ($generated@@209 ($generated@@214 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@232 $generated@@233) $generated@@234)))
 :weight 0
))) (and (and (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@238 $generated@@240) (= ($generated@@209 ($generated@@214 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@209 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
)) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or (= $generated@@245 $generated@@247) (= ($generated@@209 ($generated@@214 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@209 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (or true (= ($generated@@209 ($generated@@214 $generated@@249 $generated@@250 $generated@@251 $generated@@248) $generated@@252 $generated@@253) ($generated@@209 $generated@@249 $generated@@252 $generated@@253)))
 :weight 0
)))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ) (! (= (type ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@211 $generated@@81 $generated@@4))
 :pattern ( ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@70 (type $generated@@263))))
 (=> (and (and (and (and (= (type $generated@@258) $generated@@81) (= (type $generated@@259) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@260) ($generated@@69 $generated@@4))) (= (type $generated@@262) $generated@@81)) (= (type $generated@@263) ($generated@@69 $generated@@264))) (= ($generated@@0 ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))  (=> (and (not (= $generated@@262 $generated@@258)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@259 $generated@@262) $generated@@260))) $generated@@261))))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@177)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) $generated@@67)) (= (type $generated@@271) $generated@@186)) (= (type $generated@@272) $generated@@186)) (= ($generated@@140 ($generated@@265 $generated@@271 $generated@@272) ($generated@@176 $generated@@269 $generated@@270))  (and ($generated@@266 $generated@@271 $generated@@269) ($generated@@266 $generated@@272 $generated@@270))))
 :pattern ( ($generated@@140 ($generated@@265 $generated@@271 $generated@@272) ($generated@@176 $generated@@269 $generated@@270)))
)))
(assert  (and (and (forall (($generated@@276 T@U) ($generated@@277 Int) ) (! (let (($generated@@278 ($generated@@155 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276 $generated@@277)) ($generated@@154 $generated@@278)))
 :pattern ( ($generated@@273 $generated@@276 $generated@@277))
)) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@274 $generated@@279 $generated@@280)) ($generated@@154 $generated@@186))
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 Int) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@69 $generated@@186))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 Int) ($generated@@285 Int) ) (!  (=> (and (= (type $generated@@282) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@283) $generated@@81)) (=> (and (and (= (+ $generated@@284 1) $generated@@285) (<= 0 $generated@@284)) (<= $generated@@285 ($generated@@136 $generated@@283))) (= ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@285) ($generated@@153 ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@284) ($generated@@87 ($generated@@85 $generated@@282 $generated@@283) ($generated@@275 $generated@@284))))))
 :pattern ( ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@284) ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@177) (= (type $generated@@287) $generated@@177)) (= ($generated@@183 $generated@@286 $generated@@287) (= $generated@@286 $generated@@287)))
 :pattern ( ($generated@@183 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 Int) ) (! (let (($generated@@290 ($generated@@155 (type $generated@@288))))
 (=> (and (= (type $generated@@288) ($generated@@154 $generated@@290)) (= $generated@@289 0)) (= ($generated@@195 $generated@@288 $generated@@289) $generated@@288)))
 :pattern ( ($generated@@195 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@67)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@294) $generated@@67)) (= ($generated@@140 $generated@@293 ($generated@@291 $generated@@294)) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@186) ($generated@@0 ($generated@@85 $generated@@293 $generated@@295))) ($generated@@266 $generated@@295 $generated@@294))
 :pattern ( ($generated@@85 $generated@@293 $generated@@295))
))))
 :pattern ( ($generated@@140 $generated@@293 ($generated@@291 $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@67)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@299) $generated@@67)) (= ($generated@@140 $generated@@298 ($generated@@296 $generated@@299)) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@186) ($generated@@0 ($generated@@85 $generated@@298 $generated@@300))) ($generated@@266 $generated@@300 $generated@@299))
 :pattern ( ($generated@@85 $generated@@298 $generated@@300))
))))
 :pattern ( ($generated@@140 $generated@@298 ($generated@@296 $generated@@299)))
)))
(assert (forall (($generated@@302 Int) ) (! (= ($generated@@301 $generated@@302) $generated@@302)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 (type $generated@@304)))
(= (type ($generated@@303 $generated@@304)) $generated@@305))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= ($generated@@303 $generated@@306) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@67)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@309) ($generated@@154 $generated@@186)) (= (type $generated@@310) $generated@@186)) (= (type $generated@@311) $generated@@67)) (and ($generated@@140 $generated@@309 ($generated@@307 $generated@@311)) ($generated@@266 $generated@@310 $generated@@311))) ($generated@@140 ($generated@@153 $generated@@309 $generated@@310) ($generated@@307 $generated@@311)))
 :pattern ( ($generated@@140 ($generated@@153 $generated@@309 $generated@@310) ($generated@@307 $generated@@311)))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 Int) ) (! (let (($generated@@315 ($generated@@155 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313 $generated@@314)) $generated@@315))
 :pattern ( ($generated@@312 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 Int) ($generated@@318 Int) ) (! (let (($generated@@319 ($generated@@155 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@154 $generated@@319)) (=> (and (and (<= 0 $generated@@318) (< $generated@@318 $generated@@317)) (< $generated@@318 ($generated@@196 $generated@@316))) (= ($generated@@312 ($generated@@273 $generated@@316 $generated@@317) $generated@@318) ($generated@@312 $generated@@316 $generated@@318)))))
 :weight 25
 :pattern ( ($generated@@312 ($generated@@273 $generated@@316 $generated@@317) $generated@@318))
 :pattern ( ($generated@@312 $generated@@316 $generated@@318) ($generated@@273 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@321) $generated@@67) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) $generated@@186)) (= (type $generated@@324) $generated@@186)) (= (type $generated@@325) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@165 $generated@@325)) (= ($generated@@78 ($generated@@265 $generated@@323 $generated@@324) ($generated@@176 $generated@@321 $generated@@322) $generated@@325)  (and ($generated@@320 $generated@@323 $generated@@321 $generated@@325) ($generated@@320 $generated@@324 $generated@@322 $generated@@325))))
 :pattern ( ($generated@@78 ($generated@@265 $generated@@323 $generated@@324) ($generated@@176 $generated@@321 $generated@@322) $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (! (let (($generated@@328 ($generated@@155 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@154 $generated@@328)) (=> (and (<= 0 $generated@@327) (<= $generated@@327 ($generated@@196 $generated@@326))) (= ($generated@@196 ($generated@@195 $generated@@326 $generated@@327)) (- ($generated@@196 $generated@@326) $generated@@327)))))
 :pattern ( ($generated@@196 ($generated@@195 $generated@@326 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@71)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@177) (= ($generated@@175 $generated@@331) (= ($generated@@329 $generated@@331) $generated@@63)))
 :pattern ( ($generated@@175 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 Int) ) (! (let (($generated@@335 ($generated@@155 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@154 $generated@@335)) (=> (and (<= 0 $generated@@334) (< $generated@@334 ($generated@@196 $generated@@333))) (< ($generated@@332 ($generated@@273 $generated@@333 $generated@@334)) ($generated@@332 $generated@@333)))))
 :pattern ( ($generated@@332 ($generated@@273 $generated@@333 $generated@@334)))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@177) ($generated@@175 $generated@@336)) (exists (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (and (and (= (type $generated@@337) $generated@@186) (= (type $generated@@338) $generated@@186)) (= $generated@@336 ($generated@@265 $generated@@337 $generated@@338)))
 :no-pattern (type $generated@@337)
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
)))
 :pattern ( ($generated@@175 $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= ($generated@@196 ($generated@@191 $generated@@339)) 0)
 :pattern ( ($generated@@191 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 Int) ) (! (let (($generated@@342 ($generated@@155 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@154 $generated@@342)) (=> (and (< 0 $generated@@341) (<= $generated@@341 ($generated@@196 $generated@@340))) (< ($generated@@332 ($generated@@195 $generated@@340 $generated@@341)) ($generated@@332 $generated@@340)))))
 :pattern ( ($generated@@332 ($generated@@195 $generated@@340 $generated@@341)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
 (=> (= (type $generated@@343) ($generated@@154 $generated@@345)) (= ($generated@@196 ($generated@@153 $generated@@343 $generated@@344)) (+ 1 ($generated@@196 $generated@@343)))))
 :pattern ( ($generated@@153 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@67) (= (type $generated@@347) $generated@@81)) (= ($generated@@140 $generated@@347 ($generated@@170 $generated@@346))  (and ($generated@@140 $generated@@347 ($generated@@137 $generated@@346)) (not (= $generated@@347 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@347 ($generated@@170 $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (= (type ($generated@@348 $generated@@349)) $generated@@186)
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@67) (= (type $generated@@352) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@320 ($generated@@348 $generated@@350) $generated@@351 $generated@@352) ($generated@@78 $generated@@350 $generated@@351 $generated@@352)))
 :pattern ( ($generated@@320 ($generated@@348 $generated@@350) $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@353) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@354) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@355) $generated@@186)) (= (type $generated@@356) $generated@@67)) ($generated@@145 $generated@@353 $generated@@354)) ($generated@@320 $generated@@355 $generated@@356 $generated@@353)) ($generated@@320 $generated@@355 $generated@@356 $generated@@354))
 :pattern ( ($generated@@145 $generated@@353 $generated@@354) ($generated@@320 $generated@@355 $generated@@356 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@357) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@358) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@360) $generated@@67)) ($generated@@145 $generated@@357 $generated@@358)) ($generated@@78 $generated@@359 $generated@@360 $generated@@357)) ($generated@@78 $generated@@359 $generated@@360 $generated@@358))
 :pattern ( ($generated@@145 $generated@@357 $generated@@358) ($generated@@78 $generated@@359 $generated@@360 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 Int) ($generated@@363 Int) ) (! (let (($generated@@364 ($generated@@155 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@154 $generated@@364)) (=> (and (and (<= 0 $generated@@362) (<= 0 $generated@@363)) (< $generated@@363 (- ($generated@@196 $generated@@361) $generated@@362))) (= ($generated@@312 ($generated@@195 $generated@@361 $generated@@362) $generated@@363) ($generated@@312 $generated@@361 (+ $generated@@363 $generated@@362))))))
 :weight 25
 :pattern ( ($generated@@312 ($generated@@195 $generated@@361 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@T) ) (! (= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@367 $generated@@2))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@83 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@80 $generated@@369 $generated@@2)) (and (= (= ($generated@@365 $generated@@368) 0) (= $generated@@368 ($generated@@366 $generated@@369))) (=> (not (= ($generated@@365 $generated@@368) 0)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) (< 0 ($generated ($generated@@85 $generated@@368 $generated@@370))))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (= (type ($generated@@371 $generated@@372)) $generated@@72)
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@373)) $generated@@61) (= ($generated@@371 ($generated@@137 $generated@@373)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@67) (and (= ($generated@@76 ($generated@@170 $generated@@374)) $generated@@62) (= ($generated@@371 ($generated@@170 $generated@@374)) $generated@@65)))
 :pattern ( ($generated@@170 $generated@@374))
)))
(assert  (and (and (and (and (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (= ($generated@@1 ($generated@@377 $generated@@380 $generated@@381)) 18)) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@378 ($generated@@377 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@377 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@379 ($generated@@377 $generated@@384 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@377 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@378 (type $generated@@386))))
(= (type ($generated@@375 $generated@@386)) ($generated@@80 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@386))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= (type ($generated@@376 $generated@@388 $generated@@389)) ($generated@@377 $generated@@388 $generated@@389))
 :pattern ( ($generated@@376 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@T) ) (! (let (($generated@@392 (type $generated@@390)))
 (not ($generated@@0 ($generated@@85 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390))))
 :pattern ( (let (($generated@@392 (type $generated@@390)))
($generated@@85 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390)))
)))
(assert  (and (and (and (and (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (= ($generated@@1 ($generated@@395 $generated@@398 $generated@@399)) 19)) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@396 ($generated@@395 $generated@@400 $generated@@401)) $generated@@400)
 :pattern ( ($generated@@395 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@T) ($generated@@403 T@T) ) (! (= ($generated@@397 ($generated@@395 $generated@@402 $generated@@403)) $generated@@403)
 :pattern ( ($generated@@395 $generated@@402 $generated@@403))
))) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@396 (type $generated@@404))))
(= (type ($generated@@393 $generated@@404)) ($generated@@80 $generated@@405 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@404))
))) (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (! (= (type ($generated@@394 $generated@@406 $generated@@407)) ($generated@@395 $generated@@406 $generated@@407))
 :pattern ( ($generated@@394 $generated@@406 $generated@@407))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@T) ) (! (let (($generated@@410 (type $generated@@408)))
 (not ($generated@@0 ($generated@@85 ($generated@@393 ($generated@@394 $generated@@410 $generated@@409)) $generated@@408))))
 :pattern ( (let (($generated@@410 (type $generated@@408)))
($generated@@85 ($generated@@393 ($generated@@394 $generated@@410 $generated@@409)) $generated@@408)))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@83 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@80 $generated@@412 $generated@@2)) (= ($generated@@205 $generated@@411) (forall (($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@412) (and (<= 0 ($generated ($generated@@85 $generated@@411 $generated@@413))) (<= ($generated ($generated@@85 $generated@@411 $generated@@413)) ($generated@@365 $generated@@411))))
 :pattern ( ($generated@@85 $generated@@411 $generated@@413))
)))))
 :pattern ( ($generated@@205 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@67) (= (type $generated@@415) $generated@@81)) (= ($generated@@140 $generated@@415 ($generated@@137 $generated@@414))  (or (= $generated@@415 $generated@@138) (= ($generated@@139 $generated@@415) ($generated@@137 $generated@@414)))))
 :pattern ( ($generated@@140 $generated@@415 ($generated@@137 $generated@@414)))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 Int) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
 (=> (= (type $generated@@416) ($generated@@154 $generated@@419)) (and (=> (= $generated@@417 ($generated@@196 $generated@@416)) (= ($generated@@312 ($generated@@153 $generated@@416 $generated@@418) $generated@@417) $generated@@418)) (=> (not (= $generated@@417 ($generated@@196 $generated@@416))) (= ($generated@@312 ($generated@@153 $generated@@416 $generated@@418) $generated@@417) ($generated@@312 $generated@@416 $generated@@417))))))
 :pattern ( ($generated@@312 ($generated@@153 $generated@@416 $generated@@418) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@379 (type $generated@@420))))
(let (($generated@@422 ($generated@@378 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@377 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@376 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@420) $generated@@423)))
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@375 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@379 (type $generated@@425))))
(= (type ($generated@@424 $generated@@425)) ($generated@@80 $generated@@426 $generated@@4)))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@379 (type $generated@@427))))
(let (($generated@@429 ($generated@@378 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@377 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@376 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@428) ($generated@@0 ($generated@@85 ($generated@@424 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@424 $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@397 (type $generated@@431))))
(let (($generated@@433 ($generated@@396 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@395 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@394 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@431) $generated@@434)))
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@393 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@397 (type $generated@@436))))
(= (type ($generated@@435 $generated@@436)) ($generated@@80 $generated@@437 $generated@@4)))
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@397 (type $generated@@438))))
(let (($generated@@440 ($generated@@396 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@395 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@394 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@439) ($generated@@0 ($generated@@85 ($generated@@435 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@435 $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@443) $generated@@81)) (forall (($generated@@444 Int) ) (!  (=> (and (<= 0 $generated@@444) (< $generated@@444 ($generated@@196 ($generated@@274 $generated@@442 $generated@@443)))) (= ($generated@@312 ($generated@@274 $generated@@442 $generated@@443) $generated@@444) ($generated@@87 ($generated@@85 $generated@@442 $generated@@443) ($generated@@275 $generated@@444))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@442 $generated@@443) ($generated@@275 $generated@@444)))
 :pattern ( ($generated@@312 ($generated@@274 $generated@@442 $generated@@443) $generated@@444))
)))
 :pattern ( ($generated@@274 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@80 $generated@@186 $generated@@2)) (= (type $generated@@446) $generated@@67)) (= ($generated@@140 $generated@@445 ($generated@@204 $generated@@446)) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@186) (< 0 ($generated ($generated@@85 $generated@@445 $generated@@447)))) ($generated@@266 $generated@@447 $generated@@446))
 :pattern ( ($generated@@85 $generated@@445 $generated@@447))
))))
 :pattern ( ($generated@@140 $generated@@445 ($generated@@204 $generated@@446)))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 Int) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
 (=> (= (type $generated@@448) ($generated@@154 $generated@@451)) (= ($generated@@152 ($generated@@273 $generated@@448 $generated@@449) $generated@@450) (exists (($generated@@452 Int) ) (!  (and (and (and (<= 0 $generated@@452) (< $generated@@452 $generated@@449)) (< $generated@@452 ($generated@@196 $generated@@448))) (= ($generated@@312 $generated@@448 $generated@@452) $generated@@450))
 :pattern ( ($generated@@312 $generated@@448 $generated@@452))
)))))
 :pattern ( ($generated@@152 ($generated@@273 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 (type $generated@@454)))
 (=> (= (type $generated@@453) ($generated@@154 $generated@@455)) (= ($generated@@152 $generated@@453 $generated@@454) (exists (($generated@@456 Int) ) (!  (and (and (<= 0 $generated@@456) (< $generated@@456 ($generated@@196 $generated@@453))) (= ($generated@@312 $generated@@453 $generated@@456) $generated@@454))
 :pattern ( ($generated@@312 $generated@@453 $generated@@456))
)))))
 :pattern ( ($generated@@152 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@291 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@186) ($generated@@0 ($generated@@85 $generated@@457 $generated@@460))) ($generated@@320 $generated@@460 $generated@@458 $generated@@459))
 :pattern ( ($generated@@85 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@291 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (= (type $generated@@461) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@462) $generated@@67)) (= (type $generated@@463) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@461 ($generated@@296 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@186) ($generated@@0 ($generated@@85 $generated@@461 $generated@@464))) ($generated@@320 $generated@@464 $generated@@462 $generated@@463))
 :pattern ( ($generated@@85 $generated@@461 $generated@@464))
))))
 :pattern ( ($generated@@78 $generated@@461 ($generated@@296 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
(= ($generated ($generated@@85 ($generated@@366 $generated@@466) $generated@@465)) 0))
 :pattern ( (let (($generated@@466 (type $generated@@465)))
($generated@@85 ($generated@@366 $generated@@466) $generated@@465)))
)))
(assert  (and (and (forall (($generated@@470 T@U) ) (! (= (type ($generated@@467 $generated@@470)) ($generated@@80 $generated@@186 $generated@@4))
 :pattern ( ($generated@@467 $generated@@470))
)) (forall (($generated@@471 T@T) ($generated@@472 T@U) ) (! (= (type ($generated@@468 $generated@@471 $generated@@472)) $generated@@471)
 :pattern ( ($generated@@468 $generated@@471 $generated@@472))
))) (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@379 (type $generated@@473))))
(let (($generated@@475 ($generated@@378 (type $generated@@473))))
(= (type ($generated@@469 $generated@@473)) ($generated@@80 $generated@@475 $generated@@474))))
 :pattern ( ($generated@@469 $generated@@473))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@477) $generated@@186)) (= ($generated@@0 ($generated@@85 ($generated@@467 $generated@@476) $generated@@477))  (and ($generated@@0 ($generated@@85 ($generated@@375 $generated@@476) ($generated@@184 ($generated@@468 $generated@@177 $generated@@477)))) (= ($generated@@85 ($generated@@469 $generated@@476) ($generated@@184 ($generated@@468 $generated@@177 $generated@@477))) ($generated@@185 ($generated@@468 $generated@@177 $generated@@477))))))
 :pattern ( ($generated@@85 ($generated@@467 $generated@@476) $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) ($generated@@80 $generated@@186 $generated@@4))
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@397 (type $generated@@481))))
(let (($generated@@483 ($generated@@396 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481)) ($generated@@80 $generated@@483 $generated@@482))))
 :pattern ( ($generated@@479 $generated@@481))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@485) $generated@@186)) (= ($generated@@0 ($generated@@85 ($generated@@478 $generated@@484) $generated@@485))  (and ($generated@@0 ($generated@@85 ($generated@@393 $generated@@484) ($generated@@184 ($generated@@468 $generated@@177 $generated@@485)))) (= ($generated@@85 ($generated@@479 $generated@@484) ($generated@@184 ($generated@@468 $generated@@177 $generated@@485))) ($generated@@185 ($generated@@468 $generated@@177 $generated@@485))))))
 :pattern ( ($generated@@85 ($generated@@478 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
(let (($generated@@489 ($generated@@378 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@377 $generated@@489 $generated@@488)) (= ($generated@@0 ($generated@@85 ($generated@@424 $generated@@486) $generated@@487)) (exists (($generated@@490 T@U) ) (!  (and (= (type $generated@@490) $generated@@489) (and ($generated@@0 ($generated@@85 ($generated@@375 $generated@@486) $generated@@490)) (= $generated@@487 ($generated@@85 ($generated@@469 $generated@@486) $generated@@490))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@486) $generated@@490))
 :pattern ( ($generated@@85 ($generated@@469 $generated@@486) $generated@@490))
))))))
 :pattern ( ($generated@@85 ($generated@@424 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
(let (($generated@@494 ($generated@@396 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@395 $generated@@494 $generated@@493)) (= ($generated@@0 ($generated@@85 ($generated@@435 $generated@@491) $generated@@492)) (exists (($generated@@495 T@U) ) (!  (and (= (type $generated@@495) $generated@@494) (and ($generated@@0 ($generated@@85 ($generated@@393 $generated@@491) $generated@@495)) (= $generated@@492 ($generated@@85 ($generated@@479 $generated@@491) $generated@@495))))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@491) $generated@@495))
 :pattern ( ($generated@@85 ($generated@@479 $generated@@491) $generated@@495))
))))))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@499) $generated@@503))) (and ($generated@@320 ($generated@@85 ($generated@@469 $generated@@499) $generated@@503) $generated@@501 $generated@@502) ($generated@@320 $generated@@503 $generated@@500 $generated@@502)))
 :pattern ( ($generated@@85 ($generated@@469 $generated@@499) $generated@@503))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@499) $generated@@503))
))))
 :pattern ( ($generated@@78 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@508) $generated@@67)) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@507) $generated@@511))) (and ($generated@@320 ($generated@@85 ($generated@@479 $generated@@507) $generated@@511) $generated@@509 $generated@@510) ($generated@@320 $generated@@511 $generated@@508 $generated@@510)))
 :pattern ( ($generated@@85 ($generated@@479 $generated@@507) $generated@@511))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@507) $generated@@511))
))))
 :pattern ( ($generated@@78 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ($generated@@514 Int) ) (! (= ($generated@@512 $generated@@513 $generated@@514) (div $generated@@513 $generated@@514))
 :pattern ( ($generated@@512 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@155 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@154 $generated@@517)) (=> (and (<= 0 $generated@@516) (<= $generated@@516 ($generated@@196 $generated@@515))) (= ($generated@@196 ($generated@@273 $generated@@515 $generated@@516)) $generated@@516))))
 :pattern ( ($generated@@196 ($generated@@273 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@518) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@519) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@520) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@518 $generated@@520))) (and ($generated@@145 $generated@@518 $generated@@519) ($generated@@145 $generated@@519 $generated@@520))) ($generated@@145 $generated@@518 $generated@@520))
 :pattern ( ($generated@@145 $generated@@518 $generated@@519) ($generated@@145 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 Int) ) (!  (=> (and (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@523) $generated@@81)) (=> (and (and (and ($generated@@165 $generated@@522) (and (not (= $generated@@523 $generated@@138)) (= ($generated@@139 $generated@@523) ($generated@@137 $generated@@521)))) (and (<= 0 $generated@@524) (< $generated@@524 ($generated@@136 $generated@@523)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@522 $generated@@523) $generated@@60))) ($generated@@320 ($generated@@87 ($generated@@85 $generated@@522 $generated@@523) ($generated@@275 $generated@@524)) $generated@@521 $generated@@522)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@522 $generated@@523) ($generated@@275 $generated@@524)) ($generated@@137 $generated@@521))
)))
(assert (forall (($generated@@526 T@T) ) (! (= (type ($generated@@525 $generated@@526)) ($generated@@80 $generated@@526 $generated@@4))
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@397 (type $generated@@527))))
(let (($generated@@529 ($generated@@396 (type $generated@@527))))
 (=> (= (type $generated@@527) ($generated@@395 $generated@@529 $generated@@528)) (= (= $generated@@527 ($generated@@394 $generated@@529 $generated@@528)) (= ($generated@@393 $generated@@527) ($generated@@525 $generated@@529))))))
 :pattern ( ($generated@@393 $generated@@527))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@397 (type $generated@@530))))
(let (($generated@@532 ($generated@@396 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@395 $generated@@532 $generated@@531)) (= (= $generated@@530 ($generated@@394 $generated@@532 $generated@@531)) (= ($generated@@435 $generated@@530) ($generated@@525 $generated@@531))))))
 :pattern ( ($generated@@435 $generated@@530))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@397 (type $generated@@533))))
(let (($generated@@535 ($generated@@396 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@395 $generated@@535 $generated@@534)) (= (= $generated@@533 ($generated@@394 $generated@@535 $generated@@534)) (= ($generated@@478 $generated@@533) ($generated@@525 $generated@@186))))))
 :pattern ( ($generated@@478 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@379 (type $generated@@536))))
(let (($generated@@538 ($generated@@378 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@377 $generated@@538 $generated@@537)) (or (= $generated@@536 ($generated@@376 $generated@@538 $generated@@537)) (exists (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (and (and (= (type $generated@@539) $generated@@186) (= (type $generated@@540) $generated@@186)) ($generated@@0 ($generated@@85 ($generated@@467 $generated@@536) ($generated@@348 ($generated@@265 $generated@@539 $generated@@540)))))
 :no-pattern (type $generated@@539)
 :no-pattern (type $generated@@540)
 :no-pattern ($generated $generated@@539)
 :no-pattern ($generated@@0 $generated@@539)
 :no-pattern ($generated $generated@@540)
 :no-pattern ($generated@@0 $generated@@540)
))))))
 :pattern ( ($generated@@467 $generated@@536))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@397 (type $generated@@541))))
(let (($generated@@543 ($generated@@396 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@395 $generated@@543 $generated@@542)) (or (= $generated@@541 ($generated@@394 $generated@@543 $generated@@542)) (exists (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (and (and (= (type $generated@@544) $generated@@186) (= (type $generated@@545) $generated@@186)) ($generated@@0 ($generated@@85 ($generated@@478 $generated@@541) ($generated@@348 ($generated@@265 $generated@@544 $generated@@545)))))
 :no-pattern (type $generated@@544)
 :no-pattern (type $generated@@545)
 :no-pattern ($generated $generated@@544)
 :no-pattern ($generated@@0 $generated@@544)
 :no-pattern ($generated $generated@@545)
 :no-pattern ($generated@@0 $generated@@545)
))))))
 :pattern ( ($generated@@478 $generated@@541))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@186) ($generated@@266 $generated@@546 $generated@@46)) (and (= ($generated@@348 ($generated@@468 $generated@@2 $generated@@546)) $generated@@546) ($generated@@140 ($generated@@468 $generated@@2 $generated@@546) $generated@@46)))
 :pattern ( ($generated@@266 $generated@@546 $generated@@46))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@186) ($generated@@266 $generated@@547 $generated@@47)) (and (= ($generated@@348 ($generated@@468 $generated@@3 $generated@@547)) $generated@@547) ($generated@@140 ($generated@@468 $generated@@3 $generated@@547) $generated@@47)))
 :pattern ( ($generated@@266 $generated@@547 $generated@@47))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@186) ($generated@@266 $generated@@548 $generated@@44)) (and (= ($generated@@348 ($generated@@468 $generated@@4 $generated@@548)) $generated@@548) ($generated@@140 ($generated@@468 $generated@@4 $generated@@548) $generated@@44)))
 :pattern ( ($generated@@266 $generated@@548 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@549) 20))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@186) ($generated@@266 $generated@@550 $generated@@45)) (and (= ($generated@@348 ($generated@@468 $generated@@549 $generated@@550)) $generated@@550) ($generated@@140 ($generated@@468 $generated@@549 $generated@@550) $generated@@45)))
 :pattern ( ($generated@@266 $generated@@550 $generated@@45))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@67) (= ($generated@@266 ($generated@@348 $generated@@551) $generated@@552) ($generated@@140 $generated@@551 $generated@@552)))
 :pattern ( ($generated@@266 ($generated@@348 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@81) (<= 0 ($generated@@136 $generated@@553)))
 :no-pattern (type $generated@@553)
 :no-pattern ($generated $generated@@553)
 :no-pattern ($generated@@0 $generated@@553)
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@83 (type $generated@@554))))
 (=> (= (type $generated@@554) ($generated@@80 $generated@@555 $generated@@2)) (<= 0 ($generated@@365 $generated@@554))))
 :pattern ( ($generated@@365 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@155 (type $generated@@556))))
 (=> (= (type $generated@@556) ($generated@@154 $generated@@557)) (<= 0 ($generated@@196 $generated@@556))))
 :pattern ( ($generated@@196 $generated@@556))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@67)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@67) (= (type $generated@@561) $generated@@67)) (= ($generated@@558 ($generated@@496 $generated@@560 $generated@@561)) $generated@@560))
 :pattern ( ($generated@@496 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@67)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@67) (= (type $generated@@565) $generated@@67)) (= ($generated@@562 ($generated@@496 $generated@@564 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@496 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@67) (= (type $generated@@567) $generated@@67)) (= ($generated@@76 ($generated@@496 $generated@@566 $generated@@567)) $generated@@58))
 :pattern ( ($generated@@496 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@67)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= ($generated@@568 ($generated@@504 $generated@@570 $generated@@571)) $generated@@570))
 :pattern ( ($generated@@504 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@67)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@67) (= (type $generated@@575) $generated@@67)) (= ($generated@@572 ($generated@@504 $generated@@574 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@504 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@67) (= (type $generated@@577) $generated@@67)) (= ($generated@@76 ($generated@@504 $generated@@576 $generated@@577)) $generated@@59))
 :pattern ( ($generated@@504 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@186) (= (type $generated@@579) $generated@@186)) (= ($generated@@329 ($generated@@265 $generated@@578 $generated@@579)) $generated@@63))
 :pattern ( ($generated@@265 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@67)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@67) (= (type $generated@@583) $generated@@67)) (= ($generated@@580 ($generated@@176 $generated@@582 $generated@@583)) $generated@@582))
 :pattern ( ($generated@@176 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@67)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@67) (= (type $generated@@587) $generated@@67)) (= ($generated@@584 ($generated@@176 $generated@@586 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@176 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@186) (= (type $generated@@589) $generated@@186)) (= ($generated@@184 ($generated@@265 $generated@@588 $generated@@589)) $generated@@588))
 :pattern ( ($generated@@265 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@186) (= (type $generated@@591) $generated@@186)) (= ($generated@@185 ($generated@@265 $generated@@590 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@265 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@154 $generated@@186)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@592 ($generated@@307 $generated@@593) $generated@@594) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@196 $generated@@592))) ($generated@@320 ($generated@@312 $generated@@592 $generated@@595) $generated@@593 $generated@@594))
 :pattern ( ($generated@@312 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@307 $generated@@593) $generated@@594))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@596 ($generated@@79 $generated@@597)) $generated@@597)
 :pattern ( ($generated@@79 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@67)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@67) (= ($generated@@598 ($generated@@291 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@291 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@67) (= ($generated@@76 ($generated@@291 $generated@@601)) $generated@@54))
 :pattern ( ($generated@@291 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@67)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@67) (= ($generated@@602 ($generated@@296 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@296 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@67) (= ($generated@@76 ($generated@@296 $generated@@605)) $generated@@55))
 :pattern ( ($generated@@296 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@67)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@67) (= ($generated@@606 ($generated@@204 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@204 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@67) (= ($generated@@76 ($generated@@204 $generated@@609)) $generated@@56))
 :pattern ( ($generated@@204 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@67)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@67) (= ($generated@@610 ($generated@@307 $generated@@612)) $generated@@612))
 :pattern ( ($generated@@307 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@67) (= ($generated@@76 ($generated@@307 $generated@@613)) $generated@@57))
 :pattern ( ($generated@@307 $generated@@613))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@75 ($generated@@275 $generated@@614)) 1)
 :pattern ( ($generated@@275 $generated@@614))
)))
(assert (forall (($generated@@616 Int) ) (! (= ($generated@@615 ($generated@@275 $generated@@616)) $generated@@616)
 :pattern ( ($generated@@275 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@67)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@67) (= ($generated@@617 ($generated@@137 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@137 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@67)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@67) (= ($generated@@620 ($generated@@170 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@170 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@623)))
(= ($generated@@468 $generated@@624 ($generated@@348 $generated@@623)) $generated@@623))
 :pattern ( ($generated@@348 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) $generated@@67)) (= ($generated@@140 $generated@@625 ($generated@@496 $generated@@626 $generated@@627)) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@625) $generated@@628))) (and ($generated@@266 ($generated@@85 ($generated@@469 $generated@@625) $generated@@628) $generated@@627) ($generated@@266 $generated@@628 $generated@@626)))
 :pattern ( ($generated@@85 ($generated@@469 $generated@@625) $generated@@628))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@625) $generated@@628))
))))
 :pattern ( ($generated@@140 $generated@@625 ($generated@@496 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@630) $generated@@67)) (= (type $generated@@631) $generated@@67)) (= ($generated@@140 $generated@@629 ($generated@@504 $generated@@630 $generated@@631)) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@629) $generated@@632))) (and ($generated@@266 ($generated@@85 ($generated@@479 $generated@@629) $generated@@632) $generated@@631) ($generated@@266 $generated@@632 $generated@@630)))
 :pattern ( ($generated@@85 ($generated@@479 $generated@@629) $generated@@632))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@629) $generated@@632))
))))
 :pattern ( ($generated@@140 $generated@@629 ($generated@@504 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 Int) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@67) (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@635) $generated@@81)) (and (and ($generated@@165 $generated@@634) (and (not (= $generated@@635 $generated@@138)) (= ($generated@@139 $generated@@635) ($generated@@137 $generated@@633)))) (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@136 $generated@@635))))) ($generated@@266 ($generated@@87 ($generated@@85 $generated@@634 $generated@@635) ($generated@@275 $generated@@636)) $generated@@633))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@634 $generated@@635) ($generated@@275 $generated@@636)) ($generated@@137 $generated@@633))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@186) (= (type $generated@@640) $generated@@186)) (< ($generated@@637 $generated@@639) ($generated@@638 ($generated@@265 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@265 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@186) (= (type $generated@@642) $generated@@186)) (< ($generated@@637 $generated@@642) ($generated@@638 ($generated@@265 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@265 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@186) (= (type $generated@@644) $generated@@67)) (= (type $generated@@645) $generated@@67)) ($generated@@266 $generated@@643 ($generated@@496 $generated@@644 $generated@@645))) (and (= ($generated@@348 ($generated@@468 ($generated@@377 $generated@@186 $generated@@186) $generated@@643)) $generated@@643) ($generated@@140 ($generated@@468 ($generated@@377 $generated@@186 $generated@@186) $generated@@643) ($generated@@496 $generated@@644 $generated@@645))))
 :pattern ( ($generated@@266 $generated@@643 ($generated@@496 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@186) (= (type $generated@@647) $generated@@67)) (= (type $generated@@648) $generated@@67)) ($generated@@266 $generated@@646 ($generated@@504 $generated@@647 $generated@@648))) (and (= ($generated@@348 ($generated@@468 ($generated@@395 $generated@@186 $generated@@186) $generated@@646)) $generated@@646) ($generated@@140 ($generated@@468 ($generated@@395 $generated@@186 $generated@@186) $generated@@646) ($generated@@504 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@266 $generated@@646 ($generated@@504 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@67) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) $generated@@186)) ($generated@@266 $generated@@651 ($generated@@176 $generated@@649 $generated@@650))) (and (= ($generated@@348 ($generated@@468 $generated@@177 $generated@@651)) $generated@@651) ($generated@@140 ($generated@@468 $generated@@177 $generated@@651) ($generated@@176 $generated@@649 $generated@@650))))
 :pattern ( ($generated@@266 $generated@@651 ($generated@@176 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@652)))
 (not ($generated@@0 ($generated@@85 ($generated@@525 $generated@@653) $generated@@652))))
 :pattern ( (let (($generated@@653 (type $generated@@652)))
($generated@@85 ($generated@@525 $generated@@653) $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@654) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@656) $generated@@81)) (=> (and (and (and ($generated@@165 $generated@@654) ($generated@@165 $generated@@655)) ($generated@@145 $generated@@654 $generated@@655)) (= ($generated@@85 $generated@@654 $generated@@656) ($generated@@85 $generated@@655 $generated@@656))) (= ($generated@@274 $generated@@654 $generated@@656) ($generated@@274 $generated@@655 $generated@@656))))
 :pattern ( ($generated@@274 $generated@@655 $generated@@656) ($generated@@145 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@658) $generated@@81)) (= ($generated@@196 ($generated@@274 $generated@@657 $generated@@658)) ($generated@@136 $generated@@658)))
 :pattern ( ($generated@@196 ($generated@@274 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@67) (= (type $generated@@660) $generated@@67)) (and (= ($generated@@76 ($generated@@176 $generated@@659 $generated@@660)) $generated@@64) (= ($generated@@371 ($generated@@176 $generated@@659 $generated@@660)) $generated@@66)))
 :pattern ( ($generated@@176 $generated@@659 $generated@@660))
)))
(assert  (and (forall (($generated@@663 T@U) ) (! (let (($generated@@664 ($generated@@155 (type $generated@@663))))
(= (type ($generated@@661 $generated@@663)) ($generated@@154 $generated@@664)))
 :pattern ( ($generated@@661 $generated@@663))
)) (forall (($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@155 (type $generated@@665))))
(= (type ($generated@@662 $generated@@665)) $generated@@666))
 :pattern ( ($generated@@662 $generated@@665))
))))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@668)))
 (=> (= (type $generated@@667) ($generated@@154 $generated@@669)) (and (= ($generated@@661 ($generated@@153 $generated@@667 $generated@@668)) $generated@@667) (= ($generated@@662 ($generated@@153 $generated@@667 $generated@@668)) $generated@@668))))
 :pattern ( ($generated@@153 $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@177) (= ($generated@@637 ($generated@@348 $generated@@670)) ($generated@@638 $generated@@670)))
 :pattern ( ($generated@@637 ($generated@@348 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 Int) ($generated@@673 T@U) ) (! (let (($generated@@674 (type $generated@@673)))
 (=> (= (type $generated@@671) ($generated@@154 $generated@@674)) (= ($generated@@152 ($generated@@195 $generated@@671 $generated@@672) $generated@@673) (exists (($generated@@675 Int) ) (!  (and (and (and (<= 0 $generated@@672) (<= $generated@@672 $generated@@675)) (< $generated@@675 ($generated@@196 $generated@@671))) (= ($generated@@312 $generated@@671 $generated@@675) $generated@@673))
 :pattern ( ($generated@@312 $generated@@671 $generated@@675))
)))))
 :pattern ( ($generated@@152 ($generated@@195 $generated@@671 $generated@@672) $generated@@673))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@676) $generated@@186) ($generated@@266 $generated@@676 ($generated@@79 0))) (and (= ($generated@@348 ($generated@@468 $generated@@2 $generated@@676)) $generated@@676) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@676) ($generated@@79 0))))
 :pattern ( ($generated@@266 $generated@@676 ($generated@@79 0)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) $generated@@186) (= (type $generated@@678) $generated@@67)) ($generated@@266 $generated@@677 ($generated@@291 $generated@@678))) (and (= ($generated@@348 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@677)) $generated@@677) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@677) ($generated@@291 $generated@@678))))
 :pattern ( ($generated@@266 $generated@@677 ($generated@@291 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@186) (= (type $generated@@680) $generated@@67)) ($generated@@266 $generated@@679 ($generated@@296 $generated@@680))) (and (= ($generated@@348 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@679)) $generated@@679) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@679) ($generated@@296 $generated@@680))))
 :pattern ( ($generated@@266 $generated@@679 ($generated@@296 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@186) (= (type $generated@@682) $generated@@67)) ($generated@@266 $generated@@681 ($generated@@204 $generated@@682))) (and (= ($generated@@348 ($generated@@468 ($generated@@80 $generated@@186 $generated@@2) $generated@@681)) $generated@@681) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@2) $generated@@681) ($generated@@204 $generated@@682))))
 :pattern ( ($generated@@266 $generated@@681 ($generated@@204 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@683) $generated@@186) (= (type $generated@@684) $generated@@67)) ($generated@@266 $generated@@683 ($generated@@307 $generated@@684))) (and (= ($generated@@348 ($generated@@468 ($generated@@154 $generated@@186) $generated@@683)) $generated@@683) ($generated@@140 ($generated@@468 ($generated@@154 $generated@@186) $generated@@683) ($generated@@307 $generated@@684))))
 :pattern ( ($generated@@266 $generated@@683 ($generated@@307 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@67) (= (type $generated@@686) $generated@@186)) ($generated@@266 $generated@@686 ($generated@@137 $generated@@685))) (and (= ($generated@@348 ($generated@@468 $generated@@81 $generated@@686)) $generated@@686) ($generated@@140 ($generated@@468 $generated@@81 $generated@@686) ($generated@@137 $generated@@685))))
 :pattern ( ($generated@@266 $generated@@686 ($generated@@137 $generated@@685)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) $generated@@67) (= (type $generated@@688) $generated@@186)) ($generated@@266 $generated@@688 ($generated@@170 $generated@@687))) (and (= ($generated@@348 ($generated@@468 $generated@@81 $generated@@688)) $generated@@688) ($generated@@140 ($generated@@468 $generated@@81 $generated@@688) ($generated@@170 $generated@@687))))
 :pattern ( ($generated@@266 $generated@@688 ($generated@@170 $generated@@687)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 Int) ($generated@@691 Int) ) (! (let (($generated@@692 ($generated@@155 (type $generated@@689))))
 (=> (= (type $generated@@689) ($generated@@154 $generated@@692)) (=> (and (and (<= 0 $generated@@690) (<= $generated@@690 $generated@@691)) (< $generated@@691 ($generated@@196 $generated@@689))) (= ($generated@@312 ($generated@@195 $generated@@689 $generated@@690) (- $generated@@691 $generated@@690)) ($generated@@312 $generated@@689 $generated@@691)))))
 :weight 25
 :pattern ( ($generated@@312 $generated@@689 $generated@@691) ($generated@@195 $generated@@689 $generated@@690))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@693) ($generated@@80 $generated@@186 $generated@@2)) (= (type $generated@@694) $generated@@67)) (= (type $generated@@695) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@693 ($generated@@204 $generated@@694) $generated@@695) (forall (($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@186) (< 0 ($generated ($generated@@85 $generated@@693 $generated@@696)))) ($generated@@320 $generated@@696 $generated@@694 $generated@@695))
 :pattern ( ($generated@@85 $generated@@693 $generated@@696))
))))
 :pattern ( ($generated@@78 $generated@@693 ($generated@@204 $generated@@694) $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 Int) ($generated@@699 Int) ) (! (let (($generated@@700 ($generated@@155 (type $generated@@697))))
 (=> (= (type $generated@@697) ($generated@@154 $generated@@700)) (=> (and (and (<= 0 $generated@@698) (<= 0 $generated@@699)) (<= (+ $generated@@698 $generated@@699) ($generated@@196 $generated@@697))) (= ($generated@@195 ($generated@@195 $generated@@697 $generated@@698) $generated@@699) ($generated@@195 $generated@@697 (+ $generated@@698 $generated@@699))))))
 :pattern ( ($generated@@195 ($generated@@195 $generated@@697 $generated@@698) $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) $generated@@177) (= (type $generated@@702) $generated@@67)) (= (type $generated@@703) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@165 $generated@@703) (and ($generated@@175 $generated@@701) (exists (($generated@@704 T@U) ) (!  (and (= (type $generated@@704) $generated@@67) ($generated@@78 $generated@@701 ($generated@@176 $generated@@702 $generated@@704) $generated@@703))
 :pattern ( ($generated@@78 $generated@@701 ($generated@@176 $generated@@702 $generated@@704) $generated@@703))
))))) ($generated@@320 ($generated@@184 $generated@@701) $generated@@702 $generated@@703))
 :pattern ( ($generated@@320 ($generated@@184 $generated@@701) $generated@@702 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) $generated@@177) (= (type $generated@@706) $generated@@67)) (= (type $generated@@707) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@165 $generated@@707) (and ($generated@@175 $generated@@705) (exists (($generated@@708 T@U) ) (!  (and (= (type $generated@@708) $generated@@67) ($generated@@78 $generated@@705 ($generated@@176 $generated@@708 $generated@@706) $generated@@707))
 :pattern ( ($generated@@78 $generated@@705 ($generated@@176 $generated@@708 $generated@@706) $generated@@707))
))))) ($generated@@320 ($generated@@185 $generated@@705) $generated@@706 $generated@@707))
 :pattern ( ($generated@@320 ($generated@@185 $generated@@705) $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) $generated@@186) (= (type $generated@@710) $generated@@186)) (= ($generated@@265 ($generated@@303 $generated@@709) ($generated@@303 $generated@@710)) ($generated@@303 ($generated@@265 $generated@@709 $generated@@710))))
 :pattern ( ($generated@@265 ($generated@@303 $generated@@709) ($generated@@303 $generated@@710)))
)))
(assert (forall (($generated@@711 Int) ) (! (= ($generated@@348 ($generated@@8 ($generated@@301 $generated@@711))) ($generated@@303 ($generated@@348 ($generated@@8 $generated@@711))))
 :pattern ( ($generated@@348 ($generated@@8 ($generated@@301 $generated@@711))))
)))
(assert (forall (($generated@@712 T@U) ) (! (= ($generated@@348 ($generated@@303 $generated@@712)) ($generated@@303 ($generated@@348 $generated@@712)))
 :pattern ( ($generated@@348 ($generated@@303 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ) (! (let (($generated@@714 ($generated@@155 (type $generated@@713))))
 (=> (and (= (type $generated@@713) ($generated@@154 $generated@@714)) (= ($generated@@196 $generated@@713) 0)) (= $generated@@713 ($generated@@191 $generated@@714))))
 :pattern ( ($generated@@196 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 Int) ) (! (let (($generated@@717 ($generated@@155 (type $generated@@715))))
 (=> (and (= (type $generated@@715) ($generated@@154 $generated@@717)) (= $generated@@716 0)) (= ($generated@@273 $generated@@715 $generated@@716) ($generated@@191 $generated@@717))))
 :pattern ( ($generated@@273 $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (! (let (($generated@@721 (type $generated@@719)))
 (=> (and (and (= (type $generated@@718) ($generated@@80 $generated@@721 $generated@@2)) (= (type $generated@@720) $generated@@2)) (<= 0 ($generated $generated@@720))) (= ($generated@@365 ($generated@@86 $generated@@718 $generated@@719 $generated@@720)) (+ (- ($generated@@365 $generated@@718) ($generated ($generated@@85 $generated@@718 $generated@@719))) ($generated $generated@@720)))))
 :pattern ( ($generated@@365 ($generated@@86 $generated@@718 $generated@@719 $generated@@720)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@723) $generated@@2)) ($generated@@78 $generated@@723 $generated@@46 $generated@@722))
 :pattern ( ($generated@@78 $generated@@723 $generated@@46 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@725) $generated@@3)) ($generated@@78 $generated@@725 $generated@@47 $generated@@724))
 :pattern ( ($generated@@78 $generated@@725 $generated@@47 $generated@@724))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@727) $generated@@4)) ($generated@@78 $generated@@727 $generated@@44 $generated@@726))
 :pattern ( ($generated@@78 $generated@@727 $generated@@44 $generated@@726))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@728) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@729) $generated@@549)) ($generated@@78 $generated@@729 $generated@@45 $generated@@728))
 :pattern ( ($generated@@78 $generated@@729 $generated@@45 $generated@@728))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (= (type $generated@@730) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@731) $generated@@186)) ($generated@@78 $generated@@731 $generated@@48 $generated@@730))
 :pattern ( ($generated@@78 $generated@@731 $generated@@48 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@732) ($generated@@154 $generated@@186)) (= (type $generated@@733) $generated@@67)) (= ($generated@@140 $generated@@732 ($generated@@307 $generated@@733)) (forall (($generated@@734 Int) ) (!  (=> (and (<= 0 $generated@@734) (< $generated@@734 ($generated@@196 $generated@@732))) ($generated@@266 ($generated@@312 $generated@@732 $generated@@734) $generated@@733))
 :pattern ( ($generated@@312 $generated@@732 $generated@@734))
))))
 :pattern ( ($generated@@140 $generated@@732 ($generated@@307 $generated@@733)))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 Int) ) (!  (=> (= (type $generated@@735) ($generated@@154 $generated@@186)) (=> (and (<= 0 $generated@@736) (< $generated@@736 ($generated@@196 $generated@@735))) (< ($generated@@638 ($generated@@468 $generated@@177 ($generated@@312 $generated@@735 $generated@@736))) ($generated@@332 $generated@@735))))
 :pattern ( ($generated@@638 ($generated@@468 $generated@@177 ($generated@@312 $generated@@735 $generated@@736))))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (and (= (type $generated@@737) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@738) $generated@@67)) (= (type $generated@@739) $generated@@67)) ($generated@@140 $generated@@737 ($generated@@496 $generated@@738 $generated@@739))) (and (and ($generated@@140 ($generated@@375 $generated@@737) ($generated@@291 $generated@@738)) ($generated@@140 ($generated@@424 $generated@@737) ($generated@@291 $generated@@739))) ($generated@@140 ($generated@@467 $generated@@737) ($generated@@291 ($generated@@176 $generated@@738 $generated@@739)))))
 :pattern ( ($generated@@140 $generated@@737 ($generated@@496 $generated@@738 $generated@@739)))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (and (= (type $generated@@740) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@741) $generated@@67)) (= (type $generated@@742) $generated@@67)) ($generated@@140 $generated@@740 ($generated@@504 $generated@@741 $generated@@742))) (and (and ($generated@@140 ($generated@@393 $generated@@740) ($generated@@296 $generated@@741)) ($generated@@140 ($generated@@435 $generated@@740) ($generated@@296 $generated@@742))) ($generated@@140 ($generated@@478 $generated@@740) ($generated@@296 ($generated@@176 $generated@@741 $generated@@742)))))
 :pattern ( ($generated@@140 $generated@@740 ($generated@@504 $generated@@741 $generated@@742)))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@2) ($generated@@140 $generated@@743 $generated@@46))
 :pattern ( ($generated@@140 $generated@@743 $generated@@46))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@3) ($generated@@140 $generated@@744 $generated@@47))
 :pattern ( ($generated@@140 $generated@@744 $generated@@47))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@4) ($generated@@140 $generated@@745 $generated@@44))
 :pattern ( ($generated@@140 $generated@@745 $generated@@44))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) $generated@@549) ($generated@@140 $generated@@746 $generated@@45))
 :pattern ( ($generated@@140 $generated@@746 $generated@@45))
)))
(assert (forall (($generated@@747 T@U) ) (!  (=> (= (type $generated@@747) $generated@@186) ($generated@@140 $generated@@747 $generated@@48))
 :pattern ( ($generated@@140 $generated@@747 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@748 () T@U)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () Int)
(declare-fun $generated@@751 () Int)
(declare-fun $generated@@752 () Int)
(declare-fun $generated@@753 () Bool)
(declare-fun $generated@@754 () Int)
(declare-fun $generated@@755 () Int)
(declare-fun $generated@@756 () Int)
(declare-fun $generated@@757 () Int)
(declare-fun $generated@@758 () Int)
(declare-fun $generated@@759 () Int)
(declare-fun $generated@@760 () Int)
(declare-fun $generated@@761 () Int)
(declare-fun $generated@@762 () T@U)
(declare-fun $generated@@763 () Int)
(declare-fun $generated@@764 () Int)
(declare-fun $generated@@765 (T@U) Bool)
(declare-fun $generated@@766 () Int)
(assert  (and (and (= (type $generated@@749) $generated@@81) (= (type $generated@@748) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@762) ($generated@@211 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 49) (let (($generated@@767 true))
(let (($generated@@768  (=> (and ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@750) ($generated@@348 ($generated@@8 $generated@@751))) (= (ControlFlow 0 30) 26)) $generated@@767)))
(let (($generated@@769  (=> (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@750) ($generated@@348 ($generated@@8 $generated@@751)))) (and (=> (= (ControlFlow 0 27) (- 0 29)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 27) (- 0 28)) (and (<= 0 $generated@@752) (<= $generated@@752 ($generated@@136 $generated@@749)))) (=> (= (ControlFlow 0 27) 26) $generated@@767)))))))
(let (($generated@@770  (=> (and (and (<= ($generated@@301 0) $generated@@750) (<= $generated@@750 $generated@@752)) (<= $generated@@752 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 31) (- 0 33)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 31) (- 0 32)) (and (<= 0 $generated@@750) (<= $generated@@750 ($generated@@136 $generated@@749)))) (and (=> (= (ControlFlow 0 31) 27) $generated@@769) (=> (= (ControlFlow 0 31) 30) $generated@@768))))))))
(let (($generated@@771  (=> (and (not (and (<= ($generated@@301 0) $generated@@750) (<= $generated@@750 $generated@@752))) (= (ControlFlow 0 36) 31)) $generated@@770)))
(let (($generated@@772  (=> (and (<= ($generated@@301 0) $generated@@750) (<= $generated@@750 $generated@@752)) (and (=> (= (ControlFlow 0 34) (- 0 35)) (not (= $generated@@749 $generated@@138))) (=> (= (ControlFlow 0 34) 31) $generated@@770)))))
(let (($generated@@773  (=> (< $generated@@750 ($generated@@301 0)) (and (=> (= (ControlFlow 0 38) 34) $generated@@772) (=> (= (ControlFlow 0 38) 36) $generated@@771)))))
(let (($generated@@774  (=> (<= ($generated@@301 0) $generated@@750) (and (=> (= (ControlFlow 0 37) 34) $generated@@772) (=> (= (ControlFlow 0 37) 36) $generated@@771)))))
(let (($generated@@775  (=> (not $generated@@753) (and (=> (= (ControlFlow 0 39) 37) $generated@@774) (=> (= (ControlFlow 0 39) 38) $generated@@773)))))
(let (($generated@@776  (and (=> (= (ControlFlow 0 9) (- 0 15)) (or (<= 0 $generated@@754) (= (- $generated@@755 $generated@@756) $generated@@754))) (=> (or (<= 0 $generated@@754) (= (- $generated@@755 $generated@@756) $generated@@754)) (and (=> (= (ControlFlow 0 9) (- 0 14)) (< (- $generated@@755 $generated@@756) $generated@@754)) (=> (< (- $generated@@755 $generated@@756) $generated@@754) (and (=> (= (ControlFlow 0 9) (- 0 13)) (=> $generated@@753 (<= ($generated@@301 0) $generated@@756))) (=> (=> $generated@@753 (<= ($generated@@301 0) $generated@@756)) (and (=> (= (ControlFlow 0 9) (- 0 12)) (=> $generated@@753 (<= $generated@@756 $generated@@755))) (=> (=> $generated@@753 (<= $generated@@756 $generated@@755)) (and (=> (= (ControlFlow 0 9) (- 0 11)) (=> $generated@@753 (<= $generated@@755 ($generated@@136 $generated@@749)))) (=> (=> $generated@@753 (<= $generated@@755 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (=> $generated@@753 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@756) ($generated@@348 ($generated@@8 $generated@@751)))))) (=> (=> $generated@@753 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@756) ($generated@@348 ($generated@@8 $generated@@751))))) (=> (= (ControlFlow 0 9) (- 0 8)) (=> $generated@@753 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@755) ($generated@@348 ($generated@@8 $generated@@751))))))))))))))))))))
(let (($generated@@777  (=> (< ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@757)))) $generated@@751) (=> (and (and (= $generated@@758 (+ $generated@@757 1)) (= $generated@@756 $generated@@758)) (and (= $generated@@755 $generated@@752) (= (ControlFlow 0 17) 9))) $generated@@776))))
(let (($generated@@778  (=> (and (and (< $generated@@751 ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@757))))) (= $generated@@756 $generated@@750)) (and (= $generated@@755 $generated@@757) (= (ControlFlow 0 16) 9))) $generated@@776)))
(let (($generated@@779  (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> (<= ($generated@@301 0) $generated@@759) (< $generated@@759 ($generated@@136 $generated@@749)))) (=> (=> (<= ($generated@@301 0) $generated@@759) (< $generated@@759 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> (<= ($generated@@301 0) $generated@@759) (= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@759)))) $generated@@751))) (=> (=> (<= ($generated@@301 0) $generated@@759) (= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@759)))) $generated@@751)) (=> (= (ControlFlow 0 3) (- 0 2)) (=> (< $generated@@759 0) (not ($generated@@152 ($generated@@274 $generated@@748 $generated@@749) ($generated@@348 ($generated@@8 $generated@@751))))))))))))
(let (($generated@@780  (=> (<= $generated@@751 ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@757))))) (=> (and (= $generated@@759 $generated@@757) (= (ControlFlow 0 7) 3)) $generated@@779))))
(let (($generated@@781  (=> (<= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@757)))) $generated@@751) (and (=> (= (ControlFlow 0 18) (- 0 20)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= 0 $generated@@757) (< $generated@@757 ($generated@@136 $generated@@749)))) (=> (and (<= 0 $generated@@757) (< $generated@@757 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 18) 17) $generated@@777) (=> (= (ControlFlow 0 18) 7) $generated@@780)))))))))
(let (($generated@@782  (=> (and (< $generated@@750 $generated@@752) (= $generated@@754 (- $generated@@752 $generated@@750))) (and (=> (= (ControlFlow 0 21) (- 0 24)) (not (= ($generated@@301 2) 0))) (=> (not (= ($generated@@301 2) 0)) (=> (= $generated@@757 ($generated@@512 (+ $generated@@750 $generated@@752) ($generated@@301 2))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (and (<= 0 $generated@@757) (< $generated@@757 ($generated@@136 $generated@@749)))) (=> (and (<= 0 $generated@@757) (< $generated@@757 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 21) 16) $generated@@778) (=> (= (ControlFlow 0 21) 18) $generated@@781))))))))))))
(let (($generated@@783  (=> (and (and (<= $generated@@752 $generated@@750) (= $generated@@760 ($generated@@301 (- 0 1)))) (and (= $generated@@759 $generated@@760) (= (ControlFlow 0 6) 3))) $generated@@779)))
(let (($generated@@784  (=> $generated@@753 (and (=> (= (ControlFlow 0 25) 6) $generated@@783) (=> (= (ControlFlow 0 25) 21) $generated@@782)))))
(let (($generated@@785  (and (=> (= (ControlFlow 0 40) 39) $generated@@775) (=> (= (ControlFlow 0 40) 25) $generated@@784))))
(let (($generated@@786 true))
(let (($generated@@787  (=> (and (and (and (and (not false) (<= 0 $generated@@750)) (= $generated@@761 0)) (and (and (=> $generated@@753 true) (=> $generated@@753 (<= ($generated@@301 0) $generated@@750))) (and (=> $generated@@753 (<= $generated@@750 $generated@@752)) (=> $generated@@753 (<= $generated@@752 ($generated@@136 $generated@@749)))))) (and (and (and (=> $generated@@753 true) (=> $generated@@753 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@750) ($generated@@348 ($generated@@8 $generated@@751)))))) (and (=> $generated@@753 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@752) ($generated@@348 ($generated@@8 $generated@@751))))) (forall (($generated@@788 T@U) ) (!  (=> (= (type $generated@@788) $generated@@81) (=> (and (not (= $generated@@788 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@748 $generated@@788) $generated@@60))) (= ($generated@@85 $generated@@748 $generated@@788) ($generated@@85 $generated@@748 $generated@@788))))
 :pattern ( ($generated@@85 $generated@@748 $generated@@788))
)))) (and (and ($generated@@145 $generated@@748 $generated@@748) (forall (($generated@@789 T@U) ($generated@@790 T@U) ) (! (let (($generated@@791 ($generated@@70 (type $generated@@790))))
 (=> (and (and (= (type $generated@@789) $generated@@81) (= (type $generated@@790) ($generated@@69 $generated@@791))) (and (not (= $generated@@789 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@748 $generated@@789) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@748 $generated@@789) $generated@@790) ($generated@@87 ($generated@@85 $generated@@748 $generated@@789) $generated@@790)) ($generated@@0 ($generated@@209 $generated@@762 $generated@@789 $generated@@790)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@748 $generated@@789) $generated@@790))
))) (and (<= (- $generated@@752 $generated@@750) $generated@@763) (=> (= (- $generated@@752 $generated@@750) $generated@@763) true))))) (and (=> (= (ControlFlow 0 41) 1) $generated@@786) (=> (= (ControlFlow 0 41) 40) $generated@@785)))))
(let (($generated@@792  (=> (and (= $generated@@762 ($generated@@210 $generated@@138 $generated@@748 $generated@@60 false)) (= $generated@@761 ($generated@@301 0))) (and (=> (= (ControlFlow 0 42) (- 0 48)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (=> (and (= $generated@@764 ($generated@@136 $generated@@749)) (= $generated@@763 (- $generated@@764 $generated@@761))) (and (=> (= (ControlFlow 0 42) (- 0 47)) (=> $generated@@753 (<= ($generated@@301 0) $generated@@761))) (=> (=> $generated@@753 (<= ($generated@@301 0) $generated@@761)) (and (=> (= (ControlFlow 0 42) (- 0 46)) (=> $generated@@753 (<= $generated@@761 $generated@@764))) (=> (=> $generated@@753 (<= $generated@@761 $generated@@764)) (and (=> (= (ControlFlow 0 42) (- 0 45)) (=> $generated@@753 (<= $generated@@764 ($generated@@136 $generated@@749)))) (=> (=> $generated@@753 (<= $generated@@764 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 42) (- 0 44)) (=> $generated@@753 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@761) ($generated@@348 ($generated@@8 $generated@@751)))))) (=> (=> $generated@@753 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@761) ($generated@@348 ($generated@@8 $generated@@751))))) (and (=> (= (ControlFlow 0 42) (- 0 43)) (=> $generated@@753 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@764) ($generated@@348 ($generated@@8 $generated@@751)))))) (=> (=> $generated@@753 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@764) ($generated@@348 ($generated@@8 $generated@@751))))) (=> (= (ControlFlow 0 42) 41) $generated@@787)))))))))))))))))
(let (($generated@@793  (=> (and ($generated@@165 $generated@@748) ($generated@@765 $generated@@748)) (=> (and (and (and ($generated@@140 $generated@@749 ($generated@@170 $generated@@46)) ($generated@@78 $generated@@749 ($generated@@170 $generated@@46) $generated@@748)) (= 1 $generated@@766)) (and (forall (($generated@@794 Int) ($generated@@795 Int) ) (!  (=> true (=> (and (and (<= ($generated@@301 0) $generated@@794) (< $generated@@794 $generated@@795)) (< $generated@@795 ($generated@@136 $generated@@749))) (<= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@794)))) ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@795)))))))
 :pattern ( ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@795))) ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@794))))
)) (= (ControlFlow 0 49) 42))) $generated@@792))))
$generated@@793))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U T@U) Bool)
(declare-fun $generated@@179 (T@T) T@U)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@192 (T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@377 (Int) T@U)
(declare-fun $generated@@378 (T@U Int) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@T T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@457 (T@T) T@U)
(declare-fun $generated@@481 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@644 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert  (and (and (forall (($generated@@182 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@182)) 16)) (forall (($generated@@183 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@T) ) (! (= (type ($generated@@179 $generated@@184)) ($generated@@180 $generated@@184))
 :pattern ( ($generated@@179 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
 (not ($generated@@178 ($generated@@179 $generated@@186) $generated@@185)))
 :pattern ( (let (($generated@@186 (type $generated@@185)))
($generated@@178 ($generated@@179 $generated@@186) $generated@@185)))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@67)
 :pattern ( ($generated@@187 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@191) $generated@@67)) ($generated@@140 $generated@@190 ($generated@@187 $generated@@191))) ($generated@@188 $generated@@190))
 :pattern ( ($generated@@140 $generated@@190 ($generated@@187 $generated@@191)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@1 ($generated@@194 $generated@@198 $generated@@199)) 17)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@196 ($generated@@194 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@194 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@196 (type $generated@@204))))
(= (type ($generated@@192 $generated@@204 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(let (($generated@@213 (type $generated@@209)))
(= (type ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@194 $generated@@213 $generated@@212))))
 :pattern ( ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@196 (type $generated@@214))))
 (=> (= (type $generated@@217) $generated@@218) (= ($generated@@192 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@215 $generated@@216) $generated@@217)))
 :weight 0
))) (and (and (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@192 ($generated@@197 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@192 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@192 ($generated@@197 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@192 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or true (= ($generated@@192 ($generated@@197 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@192 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@194 $generated@@81 $generated@@4))
 :pattern ( ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@70 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@81) (= (type $generated@@242) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) ($generated@@69 $generated@@4))) (= (type $generated@@245) $generated@@81)) (= (type $generated@@246) ($generated@@69 $generated@@247))) (= ($generated@@0 ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@250 $generated@@251)) $generated@@164)
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@173)) (= (type $generated@@255) $generated@@173)) (= ($generated@@140 ($generated@@248 $generated@@254 $generated@@255) ($generated@@163 $generated@@252 $generated@@253))  (and ($generated@@249 $generated@@254 $generated@@252) ($generated@@249 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@140 ($generated@@248 $generated@@254 $generated@@255) ($generated@@163 $generated@@252 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@164) (= (type $generated@@257) $generated@@164)) (= ($generated@@170 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@170 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@67)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@261) $generated@@67)) (= ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@173) ($generated@@0 ($generated@@85 $generated@@260 $generated@@262))) ($generated@@249 $generated@@262 $generated@@261))
 :pattern ( ($generated@@85 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@67)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@266) $generated@@67)) (= ($generated@@140 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@173) ($generated@@0 ($generated@@85 $generated@@265 $generated@@267))) ($generated@@249 $generated@@267 $generated@@266))
 :pattern ( ($generated@@85 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@140 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@268 $generated@@269) $generated@@269)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@67) (= (type $generated@@276) $generated@@67)) (= (type $generated@@277) $generated@@173)) (= (type $generated@@278) $generated@@173)) (= (type $generated@@279) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@279)) (= ($generated@@78 ($generated@@248 $generated@@277 $generated@@278) ($generated@@163 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@78 ($generated@@248 $generated@@277 $generated@@278) ($generated@@163 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@71)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@164) (= ($generated@@162 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@164) ($generated@@162 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@173) (= (type $generated@@285) $generated@@173)) (= $generated@@283 ($generated@@248 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@162 $generated@@283))
)))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@286 ($generated@@179 $generated@@287)) 0)
 :pattern ( ($generated@@179 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@67) (= (type $generated@@289) $generated@@81)) (= ($generated@@140 $generated@@289 ($generated@@157 $generated@@288))  (and ($generated@@140 $generated@@289 ($generated@@137 $generated@@288)) (not (= $generated@@289 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@289 ($generated@@157 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@173)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@274 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@78 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@274 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@297) $generated@@173)) (= (type $generated@@298) $generated@@67)) ($generated@@145 $generated@@295 $generated@@296)) ($generated@@274 $generated@@297 $generated@@298 $generated@@295)) ($generated@@274 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@145 $generated@@295 $generated@@296) ($generated@@274 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@302) $generated@@67)) ($generated@@145 $generated@@299 $generated@@300)) ($generated@@78 $generated@@301 $generated@@302 $generated@@299)) ($generated@@78 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@145 $generated@@299 $generated@@300) ($generated@@78 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@80 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@83 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@80 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@85 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@72)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@311)) $generated@@61) (= ($generated@@309 ($generated@@137 $generated@@311)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@312)) $generated@@62) (= ($generated@@309 ($generated@@157 $generated@@312)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@80 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@80 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@83 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@80 $generated@@350 $generated@@2)) (= ($generated@@188 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@85 $generated@@349 $generated@@351))) (<= ($generated ($generated@@85 $generated@@349 $generated@@351)) ($generated@@303 $generated@@349))))
 :pattern ( ($generated@@85 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@188 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@67) (= (type $generated@@353) $generated@@81)) (= ($generated@@140 $generated@@353 ($generated@@137 $generated@@352))  (or (= $generated@@353 $generated@@138) (= ($generated@@139 $generated@@353) ($generated@@137 $generated@@352)))))
 :pattern ( ($generated@@140 $generated@@353 ($generated@@137 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@317 (type $generated@@354))))
(let (($generated@@356 ($generated@@316 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@315 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@314 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@313 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@317 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@80 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(let (($generated@@363 ($generated@@316 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@315 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@314 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@335 (type $generated@@365))))
(let (($generated@@367 ($generated@@334 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@333 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@332 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@331 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@335 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@80 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@335 (type $generated@@372))))
(let (($generated@@374 ($generated@@334 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@333 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@332 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert  (and (and (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@376 $generated@@379 $generated@@380)) ($generated@@180 $generated@@173))
 :pattern ( ($generated@@376 $generated@@379 $generated@@380))
)) (forall (($generated@@381 Int) ) (! (= (type ($generated@@377 $generated@@381)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@377 $generated@@381))
))) (forall (($generated@@382 T@U) ($generated@@383 Int) ) (! (let (($generated@@384 ($generated@@181 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382 $generated@@383)) $generated@@384))
 :pattern ( ($generated@@378 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@386) $generated@@81)) (forall (($generated@@387 Int) ) (!  (=> (and (<= 0 $generated@@387) (< $generated@@387 ($generated@@286 ($generated@@376 $generated@@385 $generated@@386)))) (= ($generated@@378 ($generated@@376 $generated@@385 $generated@@386) $generated@@387) ($generated@@87 ($generated@@85 $generated@@385 $generated@@386) ($generated@@377 $generated@@387))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@385 $generated@@386) ($generated@@377 $generated@@387)))
 :pattern ( ($generated@@378 ($generated@@376 $generated@@385 $generated@@386) $generated@@387))
)))
 :pattern ( ($generated@@376 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@389) $generated@@67)) (= ($generated@@140 $generated@@388 ($generated@@187 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@249 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@140 $generated@@388 ($generated@@187 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
 (=> (= (type $generated@@391) ($generated@@180 $generated@@393)) (= ($generated@@178 $generated@@391 $generated@@392) (exists (($generated@@394 Int) ) (!  (and (and (<= 0 $generated@@394) (< $generated@@394 ($generated@@286 $generated@@391))) (= ($generated@@378 $generated@@391 $generated@@394) $generated@@392))
 :pattern ( ($generated@@378 $generated@@391 $generated@@394))
)))))
 :pattern ( ($generated@@178 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@258 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@173) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@274 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@258 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@399 ($generated@@263 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@173) ($generated@@0 ($generated@@85 $generated@@399 $generated@@402))) ($generated@@274 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@85 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@78 $generated@@399 ($generated@@263 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(= ($generated ($generated@@85 ($generated@@304 $generated@@404) $generated@@403)) 0))
 :pattern ( (let (($generated@@404 (type $generated@@403)))
($generated@@85 ($generated@@304 $generated@@404) $generated@@403)))
)))
(assert  (and (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@405 $generated@@408)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@405 $generated@@408))
)) (forall (($generated@@409 T@T) ($generated@@410 T@U) ) (! (= (type ($generated@@406 $generated@@409 $generated@@410)) $generated@@409)
 :pattern ( ($generated@@406 $generated@@409 $generated@@410))
))) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@317 (type $generated@@411))))
(let (($generated@@413 ($generated@@316 (type $generated@@411))))
(= (type ($generated@@407 $generated@@411)) ($generated@@80 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@407 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@415) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@405 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@414) ($generated@@171 ($generated@@406 $generated@@164 $generated@@415)))) (= ($generated@@85 ($generated@@407 $generated@@414) ($generated@@171 ($generated@@406 $generated@@164 $generated@@415))) ($generated@@172 ($generated@@406 $generated@@164 $generated@@415))))))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@414) $generated@@415))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@335 (type $generated@@419))))
(let (($generated@@421 ($generated@@334 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@80 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@423) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@422) ($generated@@171 ($generated@@406 $generated@@164 $generated@@423)))) (= ($generated@@85 ($generated@@417 $generated@@422) ($generated@@171 ($generated@@406 $generated@@164 $generated@@423))) ($generated@@172 ($generated@@406 $generated@@164 $generated@@423))))))
 :pattern ( ($generated@@85 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@316 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@315 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@85 ($generated@@358 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@85 ($generated@@407 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@424) $generated@@428))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@334 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@333 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@85 ($generated@@369 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@85 ($generated@@417 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@429) $generated@@433))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@438) $generated@@67)) (= (type $generated@@439) $generated@@67)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@437) $generated@@441))) (and ($generated@@274 ($generated@@85 ($generated@@407 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@274 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@437) $generated@@441))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@446) $generated@@67)) (= (type $generated@@447) $generated@@67)) (= (type $generated@@448) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@445) $generated@@449))) (and ($generated@@274 ($generated@@85 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@274 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@450) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@450 $generated@@452))) (and ($generated@@145 $generated@@450 $generated@@451) ($generated@@145 $generated@@451 $generated@@452))) ($generated@@145 $generated@@450 $generated@@452))
 :pattern ( ($generated@@145 $generated@@450 $generated@@451) ($generated@@145 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 Int) ) (!  (=> (and (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@455) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@454) (and (not (= $generated@@455 $generated@@138)) (= ($generated@@139 $generated@@455) ($generated@@137 $generated@@453)))) (and (<= 0 $generated@@456) (< $generated@@456 ($generated@@136 $generated@@455)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@454 $generated@@455) $generated@@60))) ($generated@@274 ($generated@@87 ($generated@@85 $generated@@454 $generated@@455) ($generated@@377 $generated@@456)) $generated@@453 $generated@@454)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@454 $generated@@455) ($generated@@377 $generated@@456)) ($generated@@137 $generated@@453))
)))
(assert (forall (($generated@@458 T@T) ) (! (= (type ($generated@@457 $generated@@458)) ($generated@@80 $generated@@458 $generated@@4))
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@335 (type $generated@@459))))
(let (($generated@@461 ($generated@@334 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@333 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@332 $generated@@461 $generated@@460)) (= ($generated@@331 $generated@@459) ($generated@@457 $generated@@461))))))
 :pattern ( ($generated@@331 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@335 (type $generated@@462))))
(let (($generated@@464 ($generated@@334 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@333 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@332 $generated@@464 $generated@@463)) (= ($generated@@369 $generated@@462) ($generated@@457 $generated@@463))))))
 :pattern ( ($generated@@369 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@335 (type $generated@@465))))
(let (($generated@@467 ($generated@@334 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@333 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@332 $generated@@467 $generated@@466)) (= ($generated@@416 $generated@@465) ($generated@@457 $generated@@173))))))
 :pattern ( ($generated@@416 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@317 (type $generated@@468))))
(let (($generated@@470 ($generated@@316 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@315 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@314 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@173) (= (type $generated@@472) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@405 $generated@@468) ($generated@@290 ($generated@@248 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@405 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@335 (type $generated@@473))))
(let (($generated@@475 ($generated@@334 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@333 $generated@@475 $generated@@474)) (or (= $generated@@473 ($generated@@332 $generated@@475 $generated@@474)) (exists (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (and (and (= (type $generated@@476) $generated@@173) (= (type $generated@@477) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@416 $generated@@473) ($generated@@290 ($generated@@248 $generated@@476 $generated@@477)))))
 :no-pattern (type $generated@@476)
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@416 $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@173) ($generated@@249 $generated@@478 $generated@@46)) (and (= ($generated@@290 ($generated@@406 $generated@@2 $generated@@478)) $generated@@478) ($generated@@140 ($generated@@406 $generated@@2 $generated@@478) $generated@@46)))
 :pattern ( ($generated@@249 $generated@@478 $generated@@46))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@173) ($generated@@249 $generated@@479 $generated@@47)) (and (= ($generated@@290 ($generated@@406 $generated@@3 $generated@@479)) $generated@@479) ($generated@@140 ($generated@@406 $generated@@3 $generated@@479) $generated@@47)))
 :pattern ( ($generated@@249 $generated@@479 $generated@@47))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@173) ($generated@@249 $generated@@480 $generated@@44)) (and (= ($generated@@290 ($generated@@406 $generated@@4 $generated@@480)) $generated@@480) ($generated@@140 ($generated@@406 $generated@@4 $generated@@480) $generated@@44)))
 :pattern ( ($generated@@249 $generated@@480 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@481) 20))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@173) ($generated@@249 $generated@@482 $generated@@45)) (and (= ($generated@@290 ($generated@@406 $generated@@481 $generated@@482)) $generated@@482) ($generated@@140 ($generated@@406 $generated@@481 $generated@@482) $generated@@45)))
 :pattern ( ($generated@@249 $generated@@482 $generated@@45))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@249 ($generated@@290 $generated@@483) $generated@@484) ($generated@@140 $generated@@483 $generated@@484)))
 :pattern ( ($generated@@249 ($generated@@290 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@81) (<= 0 ($generated@@136 $generated@@485)))
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@83 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@80 $generated@@487 $generated@@2)) (<= 0 ($generated@@303 $generated@@486))))
 :pattern ( ($generated@@303 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@181 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@180 $generated@@489)) (<= 0 ($generated@@286 $generated@@488))))
 :pattern ( ($generated@@286 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@434 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@434 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@494 ($generated@@434 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@434 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= ($generated@@76 ($generated@@434 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@442 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@442 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@442 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@442 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@76 ($generated@@442 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@173) (= (type $generated@@511) $generated@@173)) (= ($generated@@280 ($generated@@248 $generated@@510 $generated@@511)) $generated@@63))
 :pattern ( ($generated@@248 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= ($generated@@512 ($generated@@163 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@163 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= ($generated@@516 ($generated@@163 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@163 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@173) (= (type $generated@@521) $generated@@173)) (= ($generated@@171 ($generated@@248 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@248 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@173) (= (type $generated@@523) $generated@@173)) (= ($generated@@172 ($generated@@248 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@248 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@180 $generated@@173)) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@526 ($generated@@524 $generated@@527) $generated@@528) (forall (($generated@@529 Int) ) (!  (=> (and (<= 0 $generated@@529) (< $generated@@529 ($generated@@286 $generated@@526))) ($generated@@274 ($generated@@378 $generated@@526 $generated@@529) $generated@@527 $generated@@528))
 :pattern ( ($generated@@378 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@78 $generated@@526 ($generated@@524 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@531 Int) ) (! (= ($generated@@530 ($generated@@79 $generated@@531)) $generated@@531)
 :pattern ( ($generated@@79 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@532 ($generated@@258 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@258 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@76 ($generated@@258 $generated@@535)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@536 ($generated@@263 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@263 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@67) (= ($generated@@76 ($generated@@263 $generated@@539)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@187 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@187 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@76 ($generated@@187 $generated@@543)) $generated@@56))
 :pattern ( ($generated@@187 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@524 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@524 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@76 ($generated@@524 $generated@@547)) $generated@@57))
 :pattern ( ($generated@@524 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@75 ($generated@@377 $generated@@548)) 1)
 :pattern ( ($generated@@377 $generated@@548))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@549 ($generated@@377 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@377 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@67)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@67) (= ($generated@@551 ($generated@@137 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@137 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@67)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@67) (= ($generated@@554 ($generated@@157 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@157 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
(= ($generated@@406 $generated@@558 ($generated@@290 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@290 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@560) $generated@@67)) (= (type $generated@@561) $generated@@67)) (= ($generated@@140 $generated@@559 ($generated@@434 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@559) $generated@@562))) (and ($generated@@249 ($generated@@85 ($generated@@407 $generated@@559) $generated@@562) $generated@@561) ($generated@@249 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@559) $generated@@562))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@140 $generated@@559 ($generated@@434 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) $generated@@67)) (= ($generated@@140 $generated@@563 ($generated@@442 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@563) $generated@@566))) (and ($generated@@249 ($generated@@85 ($generated@@417 $generated@@563) $generated@@566) $generated@@565) ($generated@@249 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@563) $generated@@566))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@140 $generated@@563 ($generated@@442 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 Int) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@67) (= (type $generated@@568) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@569) $generated@@81)) (and (and ($generated@@152 $generated@@568) (and (not (= $generated@@569 $generated@@138)) (= ($generated@@139 $generated@@569) ($generated@@137 $generated@@567)))) (and (<= 0 $generated@@570) (< $generated@@570 ($generated@@136 $generated@@569))))) ($generated@@249 ($generated@@87 ($generated@@85 $generated@@568 $generated@@569) ($generated@@377 $generated@@570)) $generated@@567))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@568 $generated@@569) ($generated@@377 $generated@@570)) ($generated@@137 $generated@@567))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@173) (= (type $generated@@574) $generated@@173)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@248 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@248 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@173) (= (type $generated@@576) $generated@@173)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@248 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@248 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@173) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) ($generated@@249 $generated@@577 ($generated@@434 $generated@@578 $generated@@579))) (and (= ($generated@@290 ($generated@@406 ($generated@@315 $generated@@173 $generated@@173) $generated@@577)) $generated@@577) ($generated@@140 ($generated@@406 ($generated@@315 $generated@@173 $generated@@173) $generated@@577) ($generated@@434 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@249 $generated@@577 ($generated@@434 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@173) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@249 $generated@@580 ($generated@@442 $generated@@581 $generated@@582))) (and (= ($generated@@290 ($generated@@406 ($generated@@333 $generated@@173 $generated@@173) $generated@@580)) $generated@@580) ($generated@@140 ($generated@@406 ($generated@@333 $generated@@173 $generated@@173) $generated@@580) ($generated@@442 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@249 $generated@@580 ($generated@@442 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@67) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@173)) ($generated@@249 $generated@@585 ($generated@@163 $generated@@583 $generated@@584))) (and (= ($generated@@290 ($generated@@406 $generated@@164 $generated@@585)) $generated@@585) ($generated@@140 ($generated@@406 $generated@@164 $generated@@585) ($generated@@163 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@249 $generated@@585 ($generated@@163 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (not ($generated@@0 ($generated@@85 ($generated@@457 $generated@@587) $generated@@586))))
 :pattern ( (let (($generated@@587 (type $generated@@586)))
($generated@@85 ($generated@@457 $generated@@587) $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@590) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@588) ($generated@@152 $generated@@589)) ($generated@@145 $generated@@588 $generated@@589)) (= ($generated@@85 $generated@@588 $generated@@590) ($generated@@85 $generated@@589 $generated@@590))) (= ($generated@@376 $generated@@588 $generated@@590) ($generated@@376 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@376 $generated@@589 $generated@@590) ($generated@@145 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@81)) (= ($generated@@286 ($generated@@376 $generated@@591 $generated@@592)) ($generated@@136 $generated@@592)))
 :pattern ( ($generated@@286 ($generated@@376 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@67) (= (type $generated@@594) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@593 $generated@@594)) $generated@@64) (= ($generated@@309 ($generated@@163 $generated@@593 $generated@@594)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@164) (= ($generated@@571 ($generated@@290 $generated@@595)) ($generated@@572 $generated@@595)))
 :pattern ( ($generated@@571 ($generated@@290 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@173) ($generated@@249 $generated@@596 ($generated@@79 0))) (and (= ($generated@@290 ($generated@@406 $generated@@2 $generated@@596)) $generated@@596) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@596) ($generated@@79 0))))
 :pattern ( ($generated@@249 $generated@@596 ($generated@@79 0)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@173) (= (type $generated@@598) $generated@@67)) ($generated@@249 $generated@@597 ($generated@@258 $generated@@598))) (and (= ($generated@@290 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@597)) $generated@@597) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@597) ($generated@@258 $generated@@598))))
 :pattern ( ($generated@@249 $generated@@597 ($generated@@258 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@173) (= (type $generated@@600) $generated@@67)) ($generated@@249 $generated@@599 ($generated@@263 $generated@@600))) (and (= ($generated@@290 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@599)) $generated@@599) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@599) ($generated@@263 $generated@@600))))
 :pattern ( ($generated@@249 $generated@@599 ($generated@@263 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@173) (= (type $generated@@602) $generated@@67)) ($generated@@249 $generated@@601 ($generated@@187 $generated@@602))) (and (= ($generated@@290 ($generated@@406 ($generated@@80 $generated@@173 $generated@@2) $generated@@601)) $generated@@601) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@2) $generated@@601) ($generated@@187 $generated@@602))))
 :pattern ( ($generated@@249 $generated@@601 ($generated@@187 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@173) (= (type $generated@@604) $generated@@67)) ($generated@@249 $generated@@603 ($generated@@524 $generated@@604))) (and (= ($generated@@290 ($generated@@406 ($generated@@180 $generated@@173) $generated@@603)) $generated@@603) ($generated@@140 ($generated@@406 ($generated@@180 $generated@@173) $generated@@603) ($generated@@524 $generated@@604))))
 :pattern ( ($generated@@249 $generated@@603 ($generated@@524 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@67) (= (type $generated@@606) $generated@@173)) ($generated@@249 $generated@@606 ($generated@@137 $generated@@605))) (and (= ($generated@@290 ($generated@@406 $generated@@81 $generated@@606)) $generated@@606) ($generated@@140 ($generated@@406 $generated@@81 $generated@@606) ($generated@@137 $generated@@605))))
 :pattern ( ($generated@@249 $generated@@606 ($generated@@137 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@67) (= (type $generated@@608) $generated@@173)) ($generated@@249 $generated@@608 ($generated@@157 $generated@@607))) (and (= ($generated@@290 ($generated@@406 $generated@@81 $generated@@608)) $generated@@608) ($generated@@140 ($generated@@406 $generated@@81 $generated@@608) ($generated@@157 $generated@@607))))
 :pattern ( ($generated@@249 $generated@@608 ($generated@@157 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@610) $generated@@67)) (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@609 ($generated@@187 $generated@@610) $generated@@611) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@609 $generated@@612)))) ($generated@@274 $generated@@612 $generated@@610 $generated@@611))
 :pattern ( ($generated@@85 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@78 $generated@@609 ($generated@@187 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@164) (= (type $generated@@614) $generated@@67)) (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@615) (and ($generated@@162 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@67) ($generated@@78 $generated@@613 ($generated@@163 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@78 $generated@@613 ($generated@@163 $generated@@614 $generated@@616) $generated@@615))
))))) ($generated@@274 ($generated@@171 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@274 ($generated@@171 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@164) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@619) (and ($generated@@162 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@67) ($generated@@78 $generated@@617 ($generated@@163 $generated@@620 $generated@@618) $generated@@619))
 :pattern ( ($generated@@78 $generated@@617 ($generated@@163 $generated@@620 $generated@@618) $generated@@619))
))))) ($generated@@274 ($generated@@172 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@274 ($generated@@172 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@173) (= (type $generated@@622) $generated@@173)) (= ($generated@@248 ($generated@@270 $generated@@621) ($generated@@270 $generated@@622)) ($generated@@270 ($generated@@248 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@248 ($generated@@270 $generated@@621) ($generated@@270 $generated@@622)))
)))
(assert (forall (($generated@@623 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@268 $generated@@623))) ($generated@@270 ($generated@@290 ($generated@@8 $generated@@623))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@268 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ) (! (= ($generated@@290 ($generated@@270 $generated@@624)) ($generated@@270 ($generated@@290 $generated@@624)))
 :pattern ( ($generated@@290 ($generated@@270 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@181 (type $generated@@625))))
 (=> (and (= (type $generated@@625) ($generated@@180 $generated@@626)) (= ($generated@@286 $generated@@625) 0)) (= $generated@@625 ($generated@@179 $generated@@626))))
 :pattern ( ($generated@@286 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@628)))
 (=> (and (and (= (type $generated@@627) ($generated@@80 $generated@@630 $generated@@2)) (= (type $generated@@629) $generated@@2)) (<= 0 ($generated $generated@@629))) (= ($generated@@303 ($generated@@86 $generated@@627 $generated@@628 $generated@@629)) (+ (- ($generated@@303 $generated@@627) ($generated ($generated@@85 $generated@@627 $generated@@628))) ($generated $generated@@629)))))
 :pattern ( ($generated@@303 ($generated@@86 $generated@@627 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@632) $generated@@2)) ($generated@@78 $generated@@632 $generated@@46 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@46 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@634) $generated@@3)) ($generated@@78 $generated@@634 $generated@@47 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@47 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@636) $generated@@4)) ($generated@@78 $generated@@636 $generated@@44 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@44 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@638) $generated@@481)) ($generated@@78 $generated@@638 $generated@@45 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@45 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@640) $generated@@173)) ($generated@@78 $generated@@640 $generated@@48 $generated@@639))
 :pattern ( ($generated@@78 $generated@@640 $generated@@48 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@180 $generated@@173)) (= (type $generated@@642) $generated@@67)) (= ($generated@@140 $generated@@641 ($generated@@524 $generated@@642)) (forall (($generated@@643 Int) ) (!  (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@286 $generated@@641))) ($generated@@249 ($generated@@378 $generated@@641 $generated@@643) $generated@@642))
 :pattern ( ($generated@@378 $generated@@641 $generated@@643))
))))
 :pattern ( ($generated@@140 $generated@@641 ($generated@@524 $generated@@642)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ) (!  (=> (= (type $generated@@645) ($generated@@180 $generated@@173)) (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@286 $generated@@645))) (< ($generated@@572 ($generated@@406 $generated@@164 ($generated@@378 $generated@@645 $generated@@646))) ($generated@@644 $generated@@645))))
 :pattern ( ($generated@@572 ($generated@@406 $generated@@164 ($generated@@378 $generated@@645 $generated@@646))))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@648) $generated@@67)) (= (type $generated@@649) $generated@@67)) ($generated@@140 $generated@@647 ($generated@@434 $generated@@648 $generated@@649))) (and (and ($generated@@140 ($generated@@313 $generated@@647) ($generated@@258 $generated@@648)) ($generated@@140 ($generated@@358 $generated@@647) ($generated@@258 $generated@@649))) ($generated@@140 ($generated@@405 $generated@@647) ($generated@@258 ($generated@@163 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@140 $generated@@647 ($generated@@434 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@651) $generated@@67)) (= (type $generated@@652) $generated@@67)) ($generated@@140 $generated@@650 ($generated@@442 $generated@@651 $generated@@652))) (and (and ($generated@@140 ($generated@@331 $generated@@650) ($generated@@263 $generated@@651)) ($generated@@140 ($generated@@369 $generated@@650) ($generated@@263 $generated@@652))) ($generated@@140 ($generated@@416 $generated@@650) ($generated@@263 ($generated@@163 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@140 $generated@@650 ($generated@@442 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@140 $generated@@653 $generated@@46))
 :pattern ( ($generated@@140 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@140 $generated@@654 $generated@@47))
 :pattern ( ($generated@@140 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@140 $generated@@655 $generated@@44))
 :pattern ( ($generated@@140 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@481) ($generated@@140 $generated@@656 $generated@@45))
 :pattern ( ($generated@@140 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@173) ($generated@@140 $generated@@657 $generated@@48))
 :pattern ( ($generated@@140 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 (T@U) Bool)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Int)
(assert  (and (and (and (= (type $generated@@660) $generated@@81) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@669) ($generated@@194 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@672 true))
(let (($generated@@673  (=> (= $generated@@658 ($generated@@268 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@268 (- 0 2147483648)) $generated@@658) (< $generated@@658 2147483648))) (=> (and (<= ($generated@@268 (- 0 2147483648)) $generated@@658) (< $generated@@658 2147483648)) (=> (and (< $generated@@659 0) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@660 $generated@@138))))))))
(let (($generated@@674  (=> (=> (<= ($generated@@268 0) $generated@@659) (and (< $generated@@659 ($generated@@136 $generated@@660)) (= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@660) ($generated@@377 $generated@@659)))) $generated@@662))) (and (=> (= (ControlFlow 0 11) 2) $generated@@673) (=> (= (ControlFlow 0 11) 4) $generated@@672)))))
(let (($generated@@675  (=> (= $generated@@663 ($generated@@268 0)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (and (<= ($generated@@268 (- 0 2147483648)) $generated@@663) (< $generated@@663 2147483648))) (=> (and (<= ($generated@@268 (- 0 2147483648)) $generated@@663) (< $generated@@663 2147483648)) (=> (<= ($generated@@268 0) $generated@@659) (and (=> (= (ControlFlow 0 5) (- 0 9)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (=> (= $generated@@664 ($generated@@136 $generated@@660)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= ($generated@@268 (- 0 2147483648)) $generated@@664) (< $generated@@664 2147483648))) (=> (and (<= ($generated@@268 (- 0 2147483648)) $generated@@664) (< $generated@@664 2147483648)) (=> (< $generated@@659 ($generated@@136 $generated@@660)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@136 $generated@@660)))) (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@136 $generated@@660))) (=> (= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@660) ($generated@@377 $generated@@659)))) $generated@@662) (and (=> (= (ControlFlow 0 5) 2) $generated@@673) (=> (= (ControlFlow 0 5) 4) $generated@@672)))))))))))))))))))
(let (($generated@@676  (=> (forall (($generated@@677 Int) ($generated@@678 Int) ) (!  (=> true (=> (and (and (<= ($generated@@268 0) $generated@@677) (< $generated@@677 $generated@@678)) (< $generated@@678 ($generated@@136 $generated@@660))) (<= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@677)))) ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@678)))))))
 :pattern ( ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@678))) ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@677))))
)) (=> (and ($generated@@152 $generated@@661) ($generated@@666 $generated@@661)) (=> (and (and (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@81) (=> (and (not (= $generated@@679 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@665 $generated@@679) $generated@@60))) (= ($generated@@85 $generated@@661 $generated@@679) ($generated@@85 $generated@@665 $generated@@679))))
 :pattern ( ($generated@@85 $generated@@661 $generated@@679))
)) ($generated@@145 $generated@@665 $generated@@661)) (and (<= ($generated@@268 (- 0 2147483648)) $generated@@659) (< $generated@@659 2147483648))) (and (=> (= (ControlFlow 0 12) 5) $generated@@675) (=> (= (ControlFlow 0 12) 11) $generated@@674)))))))
(let (($generated@@680  (=> (and (=> (and (and (<= ($generated@@268 0) $generated@@667) (< $generated@@667 $generated@@668)) (< $generated@@668 ($generated@@136 $generated@@660))) (<= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@667)))) ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@668)))))) (= (ControlFlow 0 19) 12)) $generated@@676)))
(let (($generated@@681  (=> (and (<= ($generated@@268 0) $generated@@667) (< $generated@@667 $generated@@668)) (and (=> (= (ControlFlow 0 13) (- 0 18)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (=> (< $generated@@668 ($generated@@136 $generated@@660)) (and (=> (= (ControlFlow 0 13) (- 0 17)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 13) (- 0 16)) (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@136 $generated@@660)))) (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@136 $generated@@660))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@136 $generated@@660)))) (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@136 $generated@@660))) (=> (and (<= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@667)))) ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@668))))) (= (ControlFlow 0 13) 12)) $generated@@676)))))))))))))))
(let (($generated@@682  (=> (= $generated@@669 ($generated@@193 $generated@@138 $generated@@665 $generated@@60 false)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (=> (< ($generated@@136 $generated@@660) 2147483648) (and (=> (= (ControlFlow 0 20) 13) $generated@@681) (=> (= (ControlFlow 0 20) 19) $generated@@680))))))))
(let (($generated@@683  (=> (and (and (and ($generated@@152 $generated@@665) ($generated@@666 $generated@@665)) (and ($generated@@140 $generated@@660 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@660 ($generated@@157 $generated@@46) $generated@@665))) (and (and (<= ($generated@@268 (- 0 2147483648)) $generated@@670) (< $generated@@670 2147483648)) (and (= 1 $generated@@671) (= (ControlFlow 0 22) 20)))) $generated@@682)))
$generated@@683))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@191 (T@T) T@U)
(declare-fun $generated@@195 (T@U Int) T@U)
(declare-fun $generated@@196 (T@U) Int)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@209 (T@U T@U T@U) T@U)
(declare-fun $generated@@210 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U Int) T@U)
(declare-fun $generated@@274 (T@U T@U) T@U)
(declare-fun $generated@@275 (Int) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (Int) Int)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U Int) T@U)
(declare-fun $generated@@320 (T@U T@U T@U) Bool)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@365 (T@U) Int)
(declare-fun $generated@@366 (T@T) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@T) T@U)
(declare-fun $generated@@377 (T@T T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@T T@T) T@U)
(declare-fun $generated@@395 (T@T T@T) T@T)
(declare-fun $generated@@396 (T@T) T@T)
(declare-fun $generated@@397 (T@T) T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@T T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@496 (T@U T@U) T@U)
(declare-fun $generated@@504 (T@U T@U) T@U)
(declare-fun $generated@@512 (Int Int) Int)
(declare-fun $generated@@525 (T@T) T@U)
(declare-fun $generated@@549 () T@T)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@637 (T@U) Int)
(declare-fun $generated@@638 (T@U) Int)
(declare-fun $generated@@661 (T@U) T@U)
(declare-fun $generated@@662 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert  (and (and (forall (($generated@@156 T@T) ) (= ($generated@@1 ($generated@@154 $generated@@156)) 14)) (forall (($generated@@157 T@T) ) (! (= ($generated@@155 ($generated@@154 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 (type $generated@@159)))
(= (type ($generated@@153 $generated@@158 $generated@@159)) ($generated@@154 $generated@@160)))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@162)))
 (=> (and (= (type $generated@@161) ($generated@@154 $generated@@164)) (= (type $generated@@163) $generated@@164)) (= ($generated@@152 ($generated@@153 $generated@@161 $generated@@162) $generated@@163)  (or (= $generated@@162 $generated@@163) ($generated@@152 $generated@@161 $generated@@163)))))
 :pattern ( ($generated@@152 ($generated@@153 $generated@@161 $generated@@162) $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@168) $generated@@81)) (and (and ($generated@@165 $generated@@167) (and (not (= $generated@@168 $generated@@138)) (= ($generated@@139 $generated@@168) ($generated@@137 $generated@@166)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@167 $generated@@168) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@168)) $generated@@46 $generated@@167))
 :pattern ( ($generated@@136 $generated@@168) ($generated@@87 ($generated@@85 $generated@@167 $generated@@168) $generated@@60) ($generated@@137 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@2) ($generated@@140 $generated@@169 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@169 ($generated@@79 0)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@67)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@67) (= (type $generated@@173) $generated@@81)) (= (type $generated@@174) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@173 ($generated@@170 $generated@@172) $generated@@174) ($generated@@78 $generated@@173 ($generated@@137 $generated@@172) $generated@@174)))
 :pattern ( ($generated@@78 $generated@@173 ($generated@@170 $generated@@172) $generated@@174))
)))
(assert  (and (= ($generated@@1 $generated@@177) 15) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@178 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@176 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@67) (= (type $generated@@181) $generated@@67)) (= (type $generated@@182) $generated@@177)) ($generated@@140 $generated@@182 ($generated@@176 $generated@@180 $generated@@181))) ($generated@@175 $generated@@182))
 :pattern ( ($generated@@175 $generated@@182) ($generated@@140 $generated@@182 ($generated@@176 $generated@@180 $generated@@181)))
)))
(assert  (and (and (= ($generated@@1 $generated@@186) 16) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@184 $generated@@187))
))) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@188)) $generated@@186)
 :pattern ( ($generated@@185 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@177) (= (type $generated@@190) $generated@@177)) true) (= ($generated@@183 $generated@@189 $generated@@190)  (and (= ($generated@@184 $generated@@189) ($generated@@184 $generated@@190)) (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)))))
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@T) ) (! (= (type ($generated@@191 $generated@@192)) ($generated@@154 $generated@@192))
 :pattern ( ($generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
 (not ($generated@@152 ($generated@@191 $generated@@194) $generated@@193)))
 :pattern ( (let (($generated@@194 (type $generated@@193)))
($generated@@152 ($generated@@191 $generated@@194) $generated@@193)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 Int) ) (! (let (($generated@@199 ($generated@@155 (type $generated@@197))))
(= (type ($generated@@195 $generated@@197 $generated@@198)) ($generated@@154 $generated@@199)))
 :pattern ( ($generated@@195 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Int) ) (! (let (($generated@@203 (type $generated@@201)))
 (=> (= (type $generated@@200) ($generated@@154 $generated@@203)) (=> (and (<= 0 $generated@@202) (<= $generated@@202 ($generated@@196 $generated@@200))) (= ($generated@@195 ($generated@@153 $generated@@200 $generated@@201) $generated@@202) ($generated@@153 ($generated@@195 $generated@@200 $generated@@202) $generated@@201)))))
 :pattern ( ($generated@@195 ($generated@@153 $generated@@200 $generated@@201) $generated@@202))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@204 $generated@@206)) $generated@@67)
 :pattern ( ($generated@@204 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@207) ($generated@@80 $generated@@186 $generated@@2)) (= (type $generated@@208) $generated@@67)) ($generated@@140 $generated@@207 ($generated@@204 $generated@@208))) ($generated@@205 $generated@@207))
 :pattern ( ($generated@@140 $generated@@207 ($generated@@204 $generated@@208)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (= ($generated@@1 ($generated@@211 $generated@@215 $generated@@216)) 17)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@211 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@213 ($generated@@211 $generated@@219 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@211 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@213 (type $generated@@221))))
(= (type ($generated@@209 $generated@@221 $generated@@222 $generated@@223)) $generated@@224))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222 $generated@@223))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(let (($generated@@230 (type $generated@@226)))
(= (type ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@211 $generated@@230 $generated@@229))))
 :pattern ( ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@213 (type $generated@@231))))
 (=> (= (type $generated@@234) $generated@@235) (= ($generated@@209 ($generated@@214 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@232 $generated@@233) $generated@@234)))
 :weight 0
))) (and (and (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@238 $generated@@240) (= ($generated@@209 ($generated@@214 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@209 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
)) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or (= $generated@@245 $generated@@247) (= ($generated@@209 ($generated@@214 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@209 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (or true (= ($generated@@209 ($generated@@214 $generated@@249 $generated@@250 $generated@@251 $generated@@248) $generated@@252 $generated@@253) ($generated@@209 $generated@@249 $generated@@252 $generated@@253)))
 :weight 0
)))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ) (! (= (type ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@211 $generated@@81 $generated@@4))
 :pattern ( ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@70 (type $generated@@263))))
 (=> (and (and (and (and (= (type $generated@@258) $generated@@81) (= (type $generated@@259) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@260) ($generated@@69 $generated@@4))) (= (type $generated@@262) $generated@@81)) (= (type $generated@@263) ($generated@@69 $generated@@264))) (= ($generated@@0 ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))  (=> (and (not (= $generated@@262 $generated@@258)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@259 $generated@@262) $generated@@260))) $generated@@261))))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@177)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) $generated@@67)) (= (type $generated@@271) $generated@@186)) (= (type $generated@@272) $generated@@186)) (= ($generated@@140 ($generated@@265 $generated@@271 $generated@@272) ($generated@@176 $generated@@269 $generated@@270))  (and ($generated@@266 $generated@@271 $generated@@269) ($generated@@266 $generated@@272 $generated@@270))))
 :pattern ( ($generated@@140 ($generated@@265 $generated@@271 $generated@@272) ($generated@@176 $generated@@269 $generated@@270)))
)))
(assert  (and (and (forall (($generated@@276 T@U) ($generated@@277 Int) ) (! (let (($generated@@278 ($generated@@155 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276 $generated@@277)) ($generated@@154 $generated@@278)))
 :pattern ( ($generated@@273 $generated@@276 $generated@@277))
)) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@274 $generated@@279 $generated@@280)) ($generated@@154 $generated@@186))
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 Int) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@69 $generated@@186))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 Int) ($generated@@285 Int) ) (!  (=> (and (= (type $generated@@282) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@283) $generated@@81)) (=> (and (and (= (+ $generated@@284 1) $generated@@285) (<= 0 $generated@@284)) (<= $generated@@285 ($generated@@136 $generated@@283))) (= ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@285) ($generated@@153 ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@284) ($generated@@87 ($generated@@85 $generated@@282 $generated@@283) ($generated@@275 $generated@@284))))))
 :pattern ( ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@284) ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@177) (= (type $generated@@287) $generated@@177)) (= ($generated@@183 $generated@@286 $generated@@287) (= $generated@@286 $generated@@287)))
 :pattern ( ($generated@@183 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 Int) ) (! (let (($generated@@290 ($generated@@155 (type $generated@@288))))
 (=> (and (= (type $generated@@288) ($generated@@154 $generated@@290)) (= $generated@@289 0)) (= ($generated@@195 $generated@@288 $generated@@289) $generated@@288)))
 :pattern ( ($generated@@195 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@67)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@294) $generated@@67)) (= ($generated@@140 $generated@@293 ($generated@@291 $generated@@294)) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@186) ($generated@@0 ($generated@@85 $generated@@293 $generated@@295))) ($generated@@266 $generated@@295 $generated@@294))
 :pattern ( ($generated@@85 $generated@@293 $generated@@295))
))))
 :pattern ( ($generated@@140 $generated@@293 ($generated@@291 $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@67)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@299) $generated@@67)) (= ($generated@@140 $generated@@298 ($generated@@296 $generated@@299)) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@186) ($generated@@0 ($generated@@85 $generated@@298 $generated@@300))) ($generated@@266 $generated@@300 $generated@@299))
 :pattern ( ($generated@@85 $generated@@298 $generated@@300))
))))
 :pattern ( ($generated@@140 $generated@@298 ($generated@@296 $generated@@299)))
)))
(assert (forall (($generated@@302 Int) ) (! (= ($generated@@301 $generated@@302) $generated@@302)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 (type $generated@@304)))
(= (type ($generated@@303 $generated@@304)) $generated@@305))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= ($generated@@303 $generated@@306) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@67)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@309) ($generated@@154 $generated@@186)) (= (type $generated@@310) $generated@@186)) (= (type $generated@@311) $generated@@67)) (and ($generated@@140 $generated@@309 ($generated@@307 $generated@@311)) ($generated@@266 $generated@@310 $generated@@311))) ($generated@@140 ($generated@@153 $generated@@309 $generated@@310) ($generated@@307 $generated@@311)))
 :pattern ( ($generated@@140 ($generated@@153 $generated@@309 $generated@@310) ($generated@@307 $generated@@311)))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 Int) ) (! (let (($generated@@315 ($generated@@155 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313 $generated@@314)) $generated@@315))
 :pattern ( ($generated@@312 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 Int) ($generated@@318 Int) ) (! (let (($generated@@319 ($generated@@155 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@154 $generated@@319)) (=> (and (and (<= 0 $generated@@318) (< $generated@@318 $generated@@317)) (< $generated@@318 ($generated@@196 $generated@@316))) (= ($generated@@312 ($generated@@273 $generated@@316 $generated@@317) $generated@@318) ($generated@@312 $generated@@316 $generated@@318)))))
 :weight 25
 :pattern ( ($generated@@312 ($generated@@273 $generated@@316 $generated@@317) $generated@@318))
 :pattern ( ($generated@@312 $generated@@316 $generated@@318) ($generated@@273 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@321) $generated@@67) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) $generated@@186)) (= (type $generated@@324) $generated@@186)) (= (type $generated@@325) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@165 $generated@@325)) (= ($generated@@78 ($generated@@265 $generated@@323 $generated@@324) ($generated@@176 $generated@@321 $generated@@322) $generated@@325)  (and ($generated@@320 $generated@@323 $generated@@321 $generated@@325) ($generated@@320 $generated@@324 $generated@@322 $generated@@325))))
 :pattern ( ($generated@@78 ($generated@@265 $generated@@323 $generated@@324) ($generated@@176 $generated@@321 $generated@@322) $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (! (let (($generated@@328 ($generated@@155 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@154 $generated@@328)) (=> (and (<= 0 $generated@@327) (<= $generated@@327 ($generated@@196 $generated@@326))) (= ($generated@@196 ($generated@@195 $generated@@326 $generated@@327)) (- ($generated@@196 $generated@@326) $generated@@327)))))
 :pattern ( ($generated@@196 ($generated@@195 $generated@@326 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@71)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@177) (= ($generated@@175 $generated@@331) (= ($generated@@329 $generated@@331) $generated@@63)))
 :pattern ( ($generated@@175 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 Int) ) (! (let (($generated@@335 ($generated@@155 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@154 $generated@@335)) (=> (and (<= 0 $generated@@334) (< $generated@@334 ($generated@@196 $generated@@333))) (< ($generated@@332 ($generated@@273 $generated@@333 $generated@@334)) ($generated@@332 $generated@@333)))))
 :pattern ( ($generated@@332 ($generated@@273 $generated@@333 $generated@@334)))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@177) ($generated@@175 $generated@@336)) (exists (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (and (and (= (type $generated@@337) $generated@@186) (= (type $generated@@338) $generated@@186)) (= $generated@@336 ($generated@@265 $generated@@337 $generated@@338)))
 :no-pattern (type $generated@@337)
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
)))
 :pattern ( ($generated@@175 $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= ($generated@@196 ($generated@@191 $generated@@339)) 0)
 :pattern ( ($generated@@191 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 Int) ) (! (let (($generated@@342 ($generated@@155 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@154 $generated@@342)) (=> (and (< 0 $generated@@341) (<= $generated@@341 ($generated@@196 $generated@@340))) (< ($generated@@332 ($generated@@195 $generated@@340 $generated@@341)) ($generated@@332 $generated@@340)))))
 :pattern ( ($generated@@332 ($generated@@195 $generated@@340 $generated@@341)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
 (=> (= (type $generated@@343) ($generated@@154 $generated@@345)) (= ($generated@@196 ($generated@@153 $generated@@343 $generated@@344)) (+ 1 ($generated@@196 $generated@@343)))))
 :pattern ( ($generated@@153 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@67) (= (type $generated@@347) $generated@@81)) (= ($generated@@140 $generated@@347 ($generated@@170 $generated@@346))  (and ($generated@@140 $generated@@347 ($generated@@137 $generated@@346)) (not (= $generated@@347 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@347 ($generated@@170 $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (= (type ($generated@@348 $generated@@349)) $generated@@186)
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@67) (= (type $generated@@352) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@320 ($generated@@348 $generated@@350) $generated@@351 $generated@@352) ($generated@@78 $generated@@350 $generated@@351 $generated@@352)))
 :pattern ( ($generated@@320 ($generated@@348 $generated@@350) $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@353) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@354) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@355) $generated@@186)) (= (type $generated@@356) $generated@@67)) ($generated@@145 $generated@@353 $generated@@354)) ($generated@@320 $generated@@355 $generated@@356 $generated@@353)) ($generated@@320 $generated@@355 $generated@@356 $generated@@354))
 :pattern ( ($generated@@145 $generated@@353 $generated@@354) ($generated@@320 $generated@@355 $generated@@356 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@357) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@358) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@360) $generated@@67)) ($generated@@145 $generated@@357 $generated@@358)) ($generated@@78 $generated@@359 $generated@@360 $generated@@357)) ($generated@@78 $generated@@359 $generated@@360 $generated@@358))
 :pattern ( ($generated@@145 $generated@@357 $generated@@358) ($generated@@78 $generated@@359 $generated@@360 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 Int) ($generated@@363 Int) ) (! (let (($generated@@364 ($generated@@155 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@154 $generated@@364)) (=> (and (and (<= 0 $generated@@362) (<= 0 $generated@@363)) (< $generated@@363 (- ($generated@@196 $generated@@361) $generated@@362))) (= ($generated@@312 ($generated@@195 $generated@@361 $generated@@362) $generated@@363) ($generated@@312 $generated@@361 (+ $generated@@363 $generated@@362))))))
 :weight 25
 :pattern ( ($generated@@312 ($generated@@195 $generated@@361 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@T) ) (! (= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@367 $generated@@2))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@83 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@80 $generated@@369 $generated@@2)) (and (= (= ($generated@@365 $generated@@368) 0) (= $generated@@368 ($generated@@366 $generated@@369))) (=> (not (= ($generated@@365 $generated@@368) 0)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) (< 0 ($generated ($generated@@85 $generated@@368 $generated@@370))))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (= (type ($generated@@371 $generated@@372)) $generated@@72)
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@373)) $generated@@61) (= ($generated@@371 ($generated@@137 $generated@@373)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@67) (and (= ($generated@@76 ($generated@@170 $generated@@374)) $generated@@62) (= ($generated@@371 ($generated@@170 $generated@@374)) $generated@@65)))
 :pattern ( ($generated@@170 $generated@@374))
)))
(assert  (and (and (and (and (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (= ($generated@@1 ($generated@@377 $generated@@380 $generated@@381)) 18)) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@378 ($generated@@377 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@377 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@379 ($generated@@377 $generated@@384 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@377 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@378 (type $generated@@386))))
(= (type ($generated@@375 $generated@@386)) ($generated@@80 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@386))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= (type ($generated@@376 $generated@@388 $generated@@389)) ($generated@@377 $generated@@388 $generated@@389))
 :pattern ( ($generated@@376 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@T) ) (! (let (($generated@@392 (type $generated@@390)))
 (not ($generated@@0 ($generated@@85 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390))))
 :pattern ( (let (($generated@@392 (type $generated@@390)))
($generated@@85 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390)))
)))
(assert  (and (and (and (and (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (= ($generated@@1 ($generated@@395 $generated@@398 $generated@@399)) 19)) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@396 ($generated@@395 $generated@@400 $generated@@401)) $generated@@400)
 :pattern ( ($generated@@395 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@T) ($generated@@403 T@T) ) (! (= ($generated@@397 ($generated@@395 $generated@@402 $generated@@403)) $generated@@403)
 :pattern ( ($generated@@395 $generated@@402 $generated@@403))
))) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@396 (type $generated@@404))))
(= (type ($generated@@393 $generated@@404)) ($generated@@80 $generated@@405 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@404))
))) (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (! (= (type ($generated@@394 $generated@@406 $generated@@407)) ($generated@@395 $generated@@406 $generated@@407))
 :pattern ( ($generated@@394 $generated@@406 $generated@@407))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@T) ) (! (let (($generated@@410 (type $generated@@408)))
 (not ($generated@@0 ($generated@@85 ($generated@@393 ($generated@@394 $generated@@410 $generated@@409)) $generated@@408))))
 :pattern ( (let (($generated@@410 (type $generated@@408)))
($generated@@85 ($generated@@393 ($generated@@394 $generated@@410 $generated@@409)) $generated@@408)))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@83 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@80 $generated@@412 $generated@@2)) (= ($generated@@205 $generated@@411) (forall (($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@412) (and (<= 0 ($generated ($generated@@85 $generated@@411 $generated@@413))) (<= ($generated ($generated@@85 $generated@@411 $generated@@413)) ($generated@@365 $generated@@411))))
 :pattern ( ($generated@@85 $generated@@411 $generated@@413))
)))))
 :pattern ( ($generated@@205 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@67) (= (type $generated@@415) $generated@@81)) (= ($generated@@140 $generated@@415 ($generated@@137 $generated@@414))  (or (= $generated@@415 $generated@@138) (= ($generated@@139 $generated@@415) ($generated@@137 $generated@@414)))))
 :pattern ( ($generated@@140 $generated@@415 ($generated@@137 $generated@@414)))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 Int) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
 (=> (= (type $generated@@416) ($generated@@154 $generated@@419)) (and (=> (= $generated@@417 ($generated@@196 $generated@@416)) (= ($generated@@312 ($generated@@153 $generated@@416 $generated@@418) $generated@@417) $generated@@418)) (=> (not (= $generated@@417 ($generated@@196 $generated@@416))) (= ($generated@@312 ($generated@@153 $generated@@416 $generated@@418) $generated@@417) ($generated@@312 $generated@@416 $generated@@417))))))
 :pattern ( ($generated@@312 ($generated@@153 $generated@@416 $generated@@418) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@379 (type $generated@@420))))
(let (($generated@@422 ($generated@@378 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@377 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@376 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@420) $generated@@423)))
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@375 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@379 (type $generated@@425))))
(= (type ($generated@@424 $generated@@425)) ($generated@@80 $generated@@426 $generated@@4)))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@379 (type $generated@@427))))
(let (($generated@@429 ($generated@@378 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@377 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@376 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@428) ($generated@@0 ($generated@@85 ($generated@@424 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@424 $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@397 (type $generated@@431))))
(let (($generated@@433 ($generated@@396 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@395 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@394 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@431) $generated@@434)))
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@393 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@397 (type $generated@@436))))
(= (type ($generated@@435 $generated@@436)) ($generated@@80 $generated@@437 $generated@@4)))
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@397 (type $generated@@438))))
(let (($generated@@440 ($generated@@396 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@395 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@394 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@439) ($generated@@0 ($generated@@85 ($generated@@435 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@435 $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@443) $generated@@81)) (forall (($generated@@444 Int) ) (!  (=> (and (<= 0 $generated@@444) (< $generated@@444 ($generated@@196 ($generated@@274 $generated@@442 $generated@@443)))) (= ($generated@@312 ($generated@@274 $generated@@442 $generated@@443) $generated@@444) ($generated@@87 ($generated@@85 $generated@@442 $generated@@443) ($generated@@275 $generated@@444))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@442 $generated@@443) ($generated@@275 $generated@@444)))
 :pattern ( ($generated@@312 ($generated@@274 $generated@@442 $generated@@443) $generated@@444))
)))
 :pattern ( ($generated@@274 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@80 $generated@@186 $generated@@2)) (= (type $generated@@446) $generated@@67)) (= ($generated@@140 $generated@@445 ($generated@@204 $generated@@446)) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@186) (< 0 ($generated ($generated@@85 $generated@@445 $generated@@447)))) ($generated@@266 $generated@@447 $generated@@446))
 :pattern ( ($generated@@85 $generated@@445 $generated@@447))
))))
 :pattern ( ($generated@@140 $generated@@445 ($generated@@204 $generated@@446)))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 Int) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
 (=> (= (type $generated@@448) ($generated@@154 $generated@@451)) (= ($generated@@152 ($generated@@273 $generated@@448 $generated@@449) $generated@@450) (exists (($generated@@452 Int) ) (!  (and (and (and (<= 0 $generated@@452) (< $generated@@452 $generated@@449)) (< $generated@@452 ($generated@@196 $generated@@448))) (= ($generated@@312 $generated@@448 $generated@@452) $generated@@450))
 :pattern ( ($generated@@312 $generated@@448 $generated@@452))
)))))
 :pattern ( ($generated@@152 ($generated@@273 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 (type $generated@@454)))
 (=> (= (type $generated@@453) ($generated@@154 $generated@@455)) (= ($generated@@152 $generated@@453 $generated@@454) (exists (($generated@@456 Int) ) (!  (and (and (<= 0 $generated@@456) (< $generated@@456 ($generated@@196 $generated@@453))) (= ($generated@@312 $generated@@453 $generated@@456) $generated@@454))
 :pattern ( ($generated@@312 $generated@@453 $generated@@456))
)))))
 :pattern ( ($generated@@152 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@291 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@186) ($generated@@0 ($generated@@85 $generated@@457 $generated@@460))) ($generated@@320 $generated@@460 $generated@@458 $generated@@459))
 :pattern ( ($generated@@85 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@291 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (= (type $generated@@461) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@462) $generated@@67)) (= (type $generated@@463) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@461 ($generated@@296 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@186) ($generated@@0 ($generated@@85 $generated@@461 $generated@@464))) ($generated@@320 $generated@@464 $generated@@462 $generated@@463))
 :pattern ( ($generated@@85 $generated@@461 $generated@@464))
))))
 :pattern ( ($generated@@78 $generated@@461 ($generated@@296 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
(= ($generated ($generated@@85 ($generated@@366 $generated@@466) $generated@@465)) 0))
 :pattern ( (let (($generated@@466 (type $generated@@465)))
($generated@@85 ($generated@@366 $generated@@466) $generated@@465)))
)))
(assert  (and (and (forall (($generated@@470 T@U) ) (! (= (type ($generated@@467 $generated@@470)) ($generated@@80 $generated@@186 $generated@@4))
 :pattern ( ($generated@@467 $generated@@470))
)) (forall (($generated@@471 T@T) ($generated@@472 T@U) ) (! (= (type ($generated@@468 $generated@@471 $generated@@472)) $generated@@471)
 :pattern ( ($generated@@468 $generated@@471 $generated@@472))
))) (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@379 (type $generated@@473))))
(let (($generated@@475 ($generated@@378 (type $generated@@473))))
(= (type ($generated@@469 $generated@@473)) ($generated@@80 $generated@@475 $generated@@474))))
 :pattern ( ($generated@@469 $generated@@473))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@477) $generated@@186)) (= ($generated@@0 ($generated@@85 ($generated@@467 $generated@@476) $generated@@477))  (and ($generated@@0 ($generated@@85 ($generated@@375 $generated@@476) ($generated@@184 ($generated@@468 $generated@@177 $generated@@477)))) (= ($generated@@85 ($generated@@469 $generated@@476) ($generated@@184 ($generated@@468 $generated@@177 $generated@@477))) ($generated@@185 ($generated@@468 $generated@@177 $generated@@477))))))
 :pattern ( ($generated@@85 ($generated@@467 $generated@@476) $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) ($generated@@80 $generated@@186 $generated@@4))
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@397 (type $generated@@481))))
(let (($generated@@483 ($generated@@396 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481)) ($generated@@80 $generated@@483 $generated@@482))))
 :pattern ( ($generated@@479 $generated@@481))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@485) $generated@@186)) (= ($generated@@0 ($generated@@85 ($generated@@478 $generated@@484) $generated@@485))  (and ($generated@@0 ($generated@@85 ($generated@@393 $generated@@484) ($generated@@184 ($generated@@468 $generated@@177 $generated@@485)))) (= ($generated@@85 ($generated@@479 $generated@@484) ($generated@@184 ($generated@@468 $generated@@177 $generated@@485))) ($generated@@185 ($generated@@468 $generated@@177 $generated@@485))))))
 :pattern ( ($generated@@85 ($generated@@478 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
(let (($generated@@489 ($generated@@378 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@377 $generated@@489 $generated@@488)) (= ($generated@@0 ($generated@@85 ($generated@@424 $generated@@486) $generated@@487)) (exists (($generated@@490 T@U) ) (!  (and (= (type $generated@@490) $generated@@489) (and ($generated@@0 ($generated@@85 ($generated@@375 $generated@@486) $generated@@490)) (= $generated@@487 ($generated@@85 ($generated@@469 $generated@@486) $generated@@490))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@486) $generated@@490))
 :pattern ( ($generated@@85 ($generated@@469 $generated@@486) $generated@@490))
))))))
 :pattern ( ($generated@@85 ($generated@@424 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
(let (($generated@@494 ($generated@@396 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@395 $generated@@494 $generated@@493)) (= ($generated@@0 ($generated@@85 ($generated@@435 $generated@@491) $generated@@492)) (exists (($generated@@495 T@U) ) (!  (and (= (type $generated@@495) $generated@@494) (and ($generated@@0 ($generated@@85 ($generated@@393 $generated@@491) $generated@@495)) (= $generated@@492 ($generated@@85 ($generated@@479 $generated@@491) $generated@@495))))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@491) $generated@@495))
 :pattern ( ($generated@@85 ($generated@@479 $generated@@491) $generated@@495))
))))))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@499) $generated@@503))) (and ($generated@@320 ($generated@@85 ($generated@@469 $generated@@499) $generated@@503) $generated@@501 $generated@@502) ($generated@@320 $generated@@503 $generated@@500 $generated@@502)))
 :pattern ( ($generated@@85 ($generated@@469 $generated@@499) $generated@@503))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@499) $generated@@503))
))))
 :pattern ( ($generated@@78 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@508) $generated@@67)) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@507) $generated@@511))) (and ($generated@@320 ($generated@@85 ($generated@@479 $generated@@507) $generated@@511) $generated@@509 $generated@@510) ($generated@@320 $generated@@511 $generated@@508 $generated@@510)))
 :pattern ( ($generated@@85 ($generated@@479 $generated@@507) $generated@@511))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@507) $generated@@511))
))))
 :pattern ( ($generated@@78 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ($generated@@514 Int) ) (! (= ($generated@@512 $generated@@513 $generated@@514) (div $generated@@513 $generated@@514))
 :pattern ( ($generated@@512 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@155 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@154 $generated@@517)) (=> (and (<= 0 $generated@@516) (<= $generated@@516 ($generated@@196 $generated@@515))) (= ($generated@@196 ($generated@@273 $generated@@515 $generated@@516)) $generated@@516))))
 :pattern ( ($generated@@196 ($generated@@273 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@518) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@519) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@520) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@518 $generated@@520))) (and ($generated@@145 $generated@@518 $generated@@519) ($generated@@145 $generated@@519 $generated@@520))) ($generated@@145 $generated@@518 $generated@@520))
 :pattern ( ($generated@@145 $generated@@518 $generated@@519) ($generated@@145 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 Int) ) (!  (=> (and (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@523) $generated@@81)) (=> (and (and (and ($generated@@165 $generated@@522) (and (not (= $generated@@523 $generated@@138)) (= ($generated@@139 $generated@@523) ($generated@@137 $generated@@521)))) (and (<= 0 $generated@@524) (< $generated@@524 ($generated@@136 $generated@@523)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@522 $generated@@523) $generated@@60))) ($generated@@320 ($generated@@87 ($generated@@85 $generated@@522 $generated@@523) ($generated@@275 $generated@@524)) $generated@@521 $generated@@522)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@522 $generated@@523) ($generated@@275 $generated@@524)) ($generated@@137 $generated@@521))
)))
(assert (forall (($generated@@526 T@T) ) (! (= (type ($generated@@525 $generated@@526)) ($generated@@80 $generated@@526 $generated@@4))
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@397 (type $generated@@527))))
(let (($generated@@529 ($generated@@396 (type $generated@@527))))
 (=> (= (type $generated@@527) ($generated@@395 $generated@@529 $generated@@528)) (= (= $generated@@527 ($generated@@394 $generated@@529 $generated@@528)) (= ($generated@@393 $generated@@527) ($generated@@525 $generated@@529))))))
 :pattern ( ($generated@@393 $generated@@527))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@397 (type $generated@@530))))
(let (($generated@@532 ($generated@@396 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@395 $generated@@532 $generated@@531)) (= (= $generated@@530 ($generated@@394 $generated@@532 $generated@@531)) (= ($generated@@435 $generated@@530) ($generated@@525 $generated@@531))))))
 :pattern ( ($generated@@435 $generated@@530))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@397 (type $generated@@533))))
(let (($generated@@535 ($generated@@396 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@395 $generated@@535 $generated@@534)) (= (= $generated@@533 ($generated@@394 $generated@@535 $generated@@534)) (= ($generated@@478 $generated@@533) ($generated@@525 $generated@@186))))))
 :pattern ( ($generated@@478 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@379 (type $generated@@536))))
(let (($generated@@538 ($generated@@378 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@377 $generated@@538 $generated@@537)) (or (= $generated@@536 ($generated@@376 $generated@@538 $generated@@537)) (exists (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (and (and (= (type $generated@@539) $generated@@186) (= (type $generated@@540) $generated@@186)) ($generated@@0 ($generated@@85 ($generated@@467 $generated@@536) ($generated@@348 ($generated@@265 $generated@@539 $generated@@540)))))
 :no-pattern (type $generated@@539)
 :no-pattern (type $generated@@540)
 :no-pattern ($generated $generated@@539)
 :no-pattern ($generated@@0 $generated@@539)
 :no-pattern ($generated $generated@@540)
 :no-pattern ($generated@@0 $generated@@540)
))))))
 :pattern ( ($generated@@467 $generated@@536))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@397 (type $generated@@541))))
(let (($generated@@543 ($generated@@396 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@395 $generated@@543 $generated@@542)) (or (= $generated@@541 ($generated@@394 $generated@@543 $generated@@542)) (exists (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (and (and (= (type $generated@@544) $generated@@186) (= (type $generated@@545) $generated@@186)) ($generated@@0 ($generated@@85 ($generated@@478 $generated@@541) ($generated@@348 ($generated@@265 $generated@@544 $generated@@545)))))
 :no-pattern (type $generated@@544)
 :no-pattern (type $generated@@545)
 :no-pattern ($generated $generated@@544)
 :no-pattern ($generated@@0 $generated@@544)
 :no-pattern ($generated $generated@@545)
 :no-pattern ($generated@@0 $generated@@545)
))))))
 :pattern ( ($generated@@478 $generated@@541))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@186) ($generated@@266 $generated@@546 $generated@@46)) (and (= ($generated@@348 ($generated@@468 $generated@@2 $generated@@546)) $generated@@546) ($generated@@140 ($generated@@468 $generated@@2 $generated@@546) $generated@@46)))
 :pattern ( ($generated@@266 $generated@@546 $generated@@46))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@186) ($generated@@266 $generated@@547 $generated@@47)) (and (= ($generated@@348 ($generated@@468 $generated@@3 $generated@@547)) $generated@@547) ($generated@@140 ($generated@@468 $generated@@3 $generated@@547) $generated@@47)))
 :pattern ( ($generated@@266 $generated@@547 $generated@@47))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@186) ($generated@@266 $generated@@548 $generated@@44)) (and (= ($generated@@348 ($generated@@468 $generated@@4 $generated@@548)) $generated@@548) ($generated@@140 ($generated@@468 $generated@@4 $generated@@548) $generated@@44)))
 :pattern ( ($generated@@266 $generated@@548 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@549) 20))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@186) ($generated@@266 $generated@@550 $generated@@45)) (and (= ($generated@@348 ($generated@@468 $generated@@549 $generated@@550)) $generated@@550) ($generated@@140 ($generated@@468 $generated@@549 $generated@@550) $generated@@45)))
 :pattern ( ($generated@@266 $generated@@550 $generated@@45))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@67) (= ($generated@@266 ($generated@@348 $generated@@551) $generated@@552) ($generated@@140 $generated@@551 $generated@@552)))
 :pattern ( ($generated@@266 ($generated@@348 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@81) (<= 0 ($generated@@136 $generated@@553)))
 :no-pattern (type $generated@@553)
 :no-pattern ($generated $generated@@553)
 :no-pattern ($generated@@0 $generated@@553)
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@83 (type $generated@@554))))
 (=> (= (type $generated@@554) ($generated@@80 $generated@@555 $generated@@2)) (<= 0 ($generated@@365 $generated@@554))))
 :pattern ( ($generated@@365 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@155 (type $generated@@556))))
 (=> (= (type $generated@@556) ($generated@@154 $generated@@557)) (<= 0 ($generated@@196 $generated@@556))))
 :pattern ( ($generated@@196 $generated@@556))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@67)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@67) (= (type $generated@@561) $generated@@67)) (= ($generated@@558 ($generated@@496 $generated@@560 $generated@@561)) $generated@@560))
 :pattern ( ($generated@@496 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@67)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@67) (= (type $generated@@565) $generated@@67)) (= ($generated@@562 ($generated@@496 $generated@@564 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@496 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@67) (= (type $generated@@567) $generated@@67)) (= ($generated@@76 ($generated@@496 $generated@@566 $generated@@567)) $generated@@58))
 :pattern ( ($generated@@496 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@67)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= ($generated@@568 ($generated@@504 $generated@@570 $generated@@571)) $generated@@570))
 :pattern ( ($generated@@504 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@67)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@67) (= (type $generated@@575) $generated@@67)) (= ($generated@@572 ($generated@@504 $generated@@574 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@504 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@67) (= (type $generated@@577) $generated@@67)) (= ($generated@@76 ($generated@@504 $generated@@576 $generated@@577)) $generated@@59))
 :pattern ( ($generated@@504 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@186) (= (type $generated@@579) $generated@@186)) (= ($generated@@329 ($generated@@265 $generated@@578 $generated@@579)) $generated@@63))
 :pattern ( ($generated@@265 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@67)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@67) (= (type $generated@@583) $generated@@67)) (= ($generated@@580 ($generated@@176 $generated@@582 $generated@@583)) $generated@@582))
 :pattern ( ($generated@@176 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@67)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@67) (= (type $generated@@587) $generated@@67)) (= ($generated@@584 ($generated@@176 $generated@@586 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@176 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@186) (= (type $generated@@589) $generated@@186)) (= ($generated@@184 ($generated@@265 $generated@@588 $generated@@589)) $generated@@588))
 :pattern ( ($generated@@265 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@186) (= (type $generated@@591) $generated@@186)) (= ($generated@@185 ($generated@@265 $generated@@590 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@265 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@154 $generated@@186)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@592 ($generated@@307 $generated@@593) $generated@@594) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@196 $generated@@592))) ($generated@@320 ($generated@@312 $generated@@592 $generated@@595) $generated@@593 $generated@@594))
 :pattern ( ($generated@@312 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@307 $generated@@593) $generated@@594))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@596 ($generated@@79 $generated@@597)) $generated@@597)
 :pattern ( ($generated@@79 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@67)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@67) (= ($generated@@598 ($generated@@291 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@291 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@67) (= ($generated@@76 ($generated@@291 $generated@@601)) $generated@@54))
 :pattern ( ($generated@@291 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@67)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@67) (= ($generated@@602 ($generated@@296 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@296 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@67) (= ($generated@@76 ($generated@@296 $generated@@605)) $generated@@55))
 :pattern ( ($generated@@296 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@67)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@67) (= ($generated@@606 ($generated@@204 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@204 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@67) (= ($generated@@76 ($generated@@204 $generated@@609)) $generated@@56))
 :pattern ( ($generated@@204 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@67)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@67) (= ($generated@@610 ($generated@@307 $generated@@612)) $generated@@612))
 :pattern ( ($generated@@307 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@67) (= ($generated@@76 ($generated@@307 $generated@@613)) $generated@@57))
 :pattern ( ($generated@@307 $generated@@613))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@75 ($generated@@275 $generated@@614)) 1)
 :pattern ( ($generated@@275 $generated@@614))
)))
(assert (forall (($generated@@616 Int) ) (! (= ($generated@@615 ($generated@@275 $generated@@616)) $generated@@616)
 :pattern ( ($generated@@275 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@67)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@67) (= ($generated@@617 ($generated@@137 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@137 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@67)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@67) (= ($generated@@620 ($generated@@170 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@170 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@623)))
(= ($generated@@468 $generated@@624 ($generated@@348 $generated@@623)) $generated@@623))
 :pattern ( ($generated@@348 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) $generated@@67)) (= ($generated@@140 $generated@@625 ($generated@@496 $generated@@626 $generated@@627)) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@625) $generated@@628))) (and ($generated@@266 ($generated@@85 ($generated@@469 $generated@@625) $generated@@628) $generated@@627) ($generated@@266 $generated@@628 $generated@@626)))
 :pattern ( ($generated@@85 ($generated@@469 $generated@@625) $generated@@628))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@625) $generated@@628))
))))
 :pattern ( ($generated@@140 $generated@@625 ($generated@@496 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@630) $generated@@67)) (= (type $generated@@631) $generated@@67)) (= ($generated@@140 $generated@@629 ($generated@@504 $generated@@630 $generated@@631)) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@629) $generated@@632))) (and ($generated@@266 ($generated@@85 ($generated@@479 $generated@@629) $generated@@632) $generated@@631) ($generated@@266 $generated@@632 $generated@@630)))
 :pattern ( ($generated@@85 ($generated@@479 $generated@@629) $generated@@632))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@629) $generated@@632))
))))
 :pattern ( ($generated@@140 $generated@@629 ($generated@@504 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 Int) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@67) (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@635) $generated@@81)) (and (and ($generated@@165 $generated@@634) (and (not (= $generated@@635 $generated@@138)) (= ($generated@@139 $generated@@635) ($generated@@137 $generated@@633)))) (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@136 $generated@@635))))) ($generated@@266 ($generated@@87 ($generated@@85 $generated@@634 $generated@@635) ($generated@@275 $generated@@636)) $generated@@633))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@634 $generated@@635) ($generated@@275 $generated@@636)) ($generated@@137 $generated@@633))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@186) (= (type $generated@@640) $generated@@186)) (< ($generated@@637 $generated@@639) ($generated@@638 ($generated@@265 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@265 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@186) (= (type $generated@@642) $generated@@186)) (< ($generated@@637 $generated@@642) ($generated@@638 ($generated@@265 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@265 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@186) (= (type $generated@@644) $generated@@67)) (= (type $generated@@645) $generated@@67)) ($generated@@266 $generated@@643 ($generated@@496 $generated@@644 $generated@@645))) (and (= ($generated@@348 ($generated@@468 ($generated@@377 $generated@@186 $generated@@186) $generated@@643)) $generated@@643) ($generated@@140 ($generated@@468 ($generated@@377 $generated@@186 $generated@@186) $generated@@643) ($generated@@496 $generated@@644 $generated@@645))))
 :pattern ( ($generated@@266 $generated@@643 ($generated@@496 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@186) (= (type $generated@@647) $generated@@67)) (= (type $generated@@648) $generated@@67)) ($generated@@266 $generated@@646 ($generated@@504 $generated@@647 $generated@@648))) (and (= ($generated@@348 ($generated@@468 ($generated@@395 $generated@@186 $generated@@186) $generated@@646)) $generated@@646) ($generated@@140 ($generated@@468 ($generated@@395 $generated@@186 $generated@@186) $generated@@646) ($generated@@504 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@266 $generated@@646 ($generated@@504 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@67) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) $generated@@186)) ($generated@@266 $generated@@651 ($generated@@176 $generated@@649 $generated@@650))) (and (= ($generated@@348 ($generated@@468 $generated@@177 $generated@@651)) $generated@@651) ($generated@@140 ($generated@@468 $generated@@177 $generated@@651) ($generated@@176 $generated@@649 $generated@@650))))
 :pattern ( ($generated@@266 $generated@@651 ($generated@@176 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@652)))
 (not ($generated@@0 ($generated@@85 ($generated@@525 $generated@@653) $generated@@652))))
 :pattern ( (let (($generated@@653 (type $generated@@652)))
($generated@@85 ($generated@@525 $generated@@653) $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@654) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@656) $generated@@81)) (=> (and (and (and ($generated@@165 $generated@@654) ($generated@@165 $generated@@655)) ($generated@@145 $generated@@654 $generated@@655)) (= ($generated@@85 $generated@@654 $generated@@656) ($generated@@85 $generated@@655 $generated@@656))) (= ($generated@@274 $generated@@654 $generated@@656) ($generated@@274 $generated@@655 $generated@@656))))
 :pattern ( ($generated@@274 $generated@@655 $generated@@656) ($generated@@145 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@658) $generated@@81)) (= ($generated@@196 ($generated@@274 $generated@@657 $generated@@658)) ($generated@@136 $generated@@658)))
 :pattern ( ($generated@@196 ($generated@@274 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@67) (= (type $generated@@660) $generated@@67)) (and (= ($generated@@76 ($generated@@176 $generated@@659 $generated@@660)) $generated@@64) (= ($generated@@371 ($generated@@176 $generated@@659 $generated@@660)) $generated@@66)))
 :pattern ( ($generated@@176 $generated@@659 $generated@@660))
)))
(assert  (and (forall (($generated@@663 T@U) ) (! (let (($generated@@664 ($generated@@155 (type $generated@@663))))
(= (type ($generated@@661 $generated@@663)) ($generated@@154 $generated@@664)))
 :pattern ( ($generated@@661 $generated@@663))
)) (forall (($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@155 (type $generated@@665))))
(= (type ($generated@@662 $generated@@665)) $generated@@666))
 :pattern ( ($generated@@662 $generated@@665))
))))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@668)))
 (=> (= (type $generated@@667) ($generated@@154 $generated@@669)) (and (= ($generated@@661 ($generated@@153 $generated@@667 $generated@@668)) $generated@@667) (= ($generated@@662 ($generated@@153 $generated@@667 $generated@@668)) $generated@@668))))
 :pattern ( ($generated@@153 $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@177) (= ($generated@@637 ($generated@@348 $generated@@670)) ($generated@@638 $generated@@670)))
 :pattern ( ($generated@@637 ($generated@@348 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 Int) ($generated@@673 T@U) ) (! (let (($generated@@674 (type $generated@@673)))
 (=> (= (type $generated@@671) ($generated@@154 $generated@@674)) (= ($generated@@152 ($generated@@195 $generated@@671 $generated@@672) $generated@@673) (exists (($generated@@675 Int) ) (!  (and (and (and (<= 0 $generated@@672) (<= $generated@@672 $generated@@675)) (< $generated@@675 ($generated@@196 $generated@@671))) (= ($generated@@312 $generated@@671 $generated@@675) $generated@@673))
 :pattern ( ($generated@@312 $generated@@671 $generated@@675))
)))))
 :pattern ( ($generated@@152 ($generated@@195 $generated@@671 $generated@@672) $generated@@673))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@676) $generated@@186) ($generated@@266 $generated@@676 ($generated@@79 0))) (and (= ($generated@@348 ($generated@@468 $generated@@2 $generated@@676)) $generated@@676) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@676) ($generated@@79 0))))
 :pattern ( ($generated@@266 $generated@@676 ($generated@@79 0)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) $generated@@186) (= (type $generated@@678) $generated@@67)) ($generated@@266 $generated@@677 ($generated@@291 $generated@@678))) (and (= ($generated@@348 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@677)) $generated@@677) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@677) ($generated@@291 $generated@@678))))
 :pattern ( ($generated@@266 $generated@@677 ($generated@@291 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@186) (= (type $generated@@680) $generated@@67)) ($generated@@266 $generated@@679 ($generated@@296 $generated@@680))) (and (= ($generated@@348 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@679)) $generated@@679) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@679) ($generated@@296 $generated@@680))))
 :pattern ( ($generated@@266 $generated@@679 ($generated@@296 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@186) (= (type $generated@@682) $generated@@67)) ($generated@@266 $generated@@681 ($generated@@204 $generated@@682))) (and (= ($generated@@348 ($generated@@468 ($generated@@80 $generated@@186 $generated@@2) $generated@@681)) $generated@@681) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@2) $generated@@681) ($generated@@204 $generated@@682))))
 :pattern ( ($generated@@266 $generated@@681 ($generated@@204 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@683) $generated@@186) (= (type $generated@@684) $generated@@67)) ($generated@@266 $generated@@683 ($generated@@307 $generated@@684))) (and (= ($generated@@348 ($generated@@468 ($generated@@154 $generated@@186) $generated@@683)) $generated@@683) ($generated@@140 ($generated@@468 ($generated@@154 $generated@@186) $generated@@683) ($generated@@307 $generated@@684))))
 :pattern ( ($generated@@266 $generated@@683 ($generated@@307 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@67) (= (type $generated@@686) $generated@@186)) ($generated@@266 $generated@@686 ($generated@@137 $generated@@685))) (and (= ($generated@@348 ($generated@@468 $generated@@81 $generated@@686)) $generated@@686) ($generated@@140 ($generated@@468 $generated@@81 $generated@@686) ($generated@@137 $generated@@685))))
 :pattern ( ($generated@@266 $generated@@686 ($generated@@137 $generated@@685)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) $generated@@67) (= (type $generated@@688) $generated@@186)) ($generated@@266 $generated@@688 ($generated@@170 $generated@@687))) (and (= ($generated@@348 ($generated@@468 $generated@@81 $generated@@688)) $generated@@688) ($generated@@140 ($generated@@468 $generated@@81 $generated@@688) ($generated@@170 $generated@@687))))
 :pattern ( ($generated@@266 $generated@@688 ($generated@@170 $generated@@687)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 Int) ($generated@@691 Int) ) (! (let (($generated@@692 ($generated@@155 (type $generated@@689))))
 (=> (= (type $generated@@689) ($generated@@154 $generated@@692)) (=> (and (and (<= 0 $generated@@690) (<= $generated@@690 $generated@@691)) (< $generated@@691 ($generated@@196 $generated@@689))) (= ($generated@@312 ($generated@@195 $generated@@689 $generated@@690) (- $generated@@691 $generated@@690)) ($generated@@312 $generated@@689 $generated@@691)))))
 :weight 25
 :pattern ( ($generated@@312 $generated@@689 $generated@@691) ($generated@@195 $generated@@689 $generated@@690))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@693) ($generated@@80 $generated@@186 $generated@@2)) (= (type $generated@@694) $generated@@67)) (= (type $generated@@695) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@693 ($generated@@204 $generated@@694) $generated@@695) (forall (($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@186) (< 0 ($generated ($generated@@85 $generated@@693 $generated@@696)))) ($generated@@320 $generated@@696 $generated@@694 $generated@@695))
 :pattern ( ($generated@@85 $generated@@693 $generated@@696))
))))
 :pattern ( ($generated@@78 $generated@@693 ($generated@@204 $generated@@694) $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 Int) ($generated@@699 Int) ) (! (let (($generated@@700 ($generated@@155 (type $generated@@697))))
 (=> (= (type $generated@@697) ($generated@@154 $generated@@700)) (=> (and (and (<= 0 $generated@@698) (<= 0 $generated@@699)) (<= (+ $generated@@698 $generated@@699) ($generated@@196 $generated@@697))) (= ($generated@@195 ($generated@@195 $generated@@697 $generated@@698) $generated@@699) ($generated@@195 $generated@@697 (+ $generated@@698 $generated@@699))))))
 :pattern ( ($generated@@195 ($generated@@195 $generated@@697 $generated@@698) $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) $generated@@177) (= (type $generated@@702) $generated@@67)) (= (type $generated@@703) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@165 $generated@@703) (and ($generated@@175 $generated@@701) (exists (($generated@@704 T@U) ) (!  (and (= (type $generated@@704) $generated@@67) ($generated@@78 $generated@@701 ($generated@@176 $generated@@702 $generated@@704) $generated@@703))
 :pattern ( ($generated@@78 $generated@@701 ($generated@@176 $generated@@702 $generated@@704) $generated@@703))
))))) ($generated@@320 ($generated@@184 $generated@@701) $generated@@702 $generated@@703))
 :pattern ( ($generated@@320 ($generated@@184 $generated@@701) $generated@@702 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) $generated@@177) (= (type $generated@@706) $generated@@67)) (= (type $generated@@707) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@165 $generated@@707) (and ($generated@@175 $generated@@705) (exists (($generated@@708 T@U) ) (!  (and (= (type $generated@@708) $generated@@67) ($generated@@78 $generated@@705 ($generated@@176 $generated@@708 $generated@@706) $generated@@707))
 :pattern ( ($generated@@78 $generated@@705 ($generated@@176 $generated@@708 $generated@@706) $generated@@707))
))))) ($generated@@320 ($generated@@185 $generated@@705) $generated@@706 $generated@@707))
 :pattern ( ($generated@@320 ($generated@@185 $generated@@705) $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) $generated@@186) (= (type $generated@@710) $generated@@186)) (= ($generated@@265 ($generated@@303 $generated@@709) ($generated@@303 $generated@@710)) ($generated@@303 ($generated@@265 $generated@@709 $generated@@710))))
 :pattern ( ($generated@@265 ($generated@@303 $generated@@709) ($generated@@303 $generated@@710)))
)))
(assert (forall (($generated@@711 Int) ) (! (= ($generated@@348 ($generated@@8 ($generated@@301 $generated@@711))) ($generated@@303 ($generated@@348 ($generated@@8 $generated@@711))))
 :pattern ( ($generated@@348 ($generated@@8 ($generated@@301 $generated@@711))))
)))
(assert (forall (($generated@@712 T@U) ) (! (= ($generated@@348 ($generated@@303 $generated@@712)) ($generated@@303 ($generated@@348 $generated@@712)))
 :pattern ( ($generated@@348 ($generated@@303 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ) (! (let (($generated@@714 ($generated@@155 (type $generated@@713))))
 (=> (and (= (type $generated@@713) ($generated@@154 $generated@@714)) (= ($generated@@196 $generated@@713) 0)) (= $generated@@713 ($generated@@191 $generated@@714))))
 :pattern ( ($generated@@196 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 Int) ) (! (let (($generated@@717 ($generated@@155 (type $generated@@715))))
 (=> (and (= (type $generated@@715) ($generated@@154 $generated@@717)) (= $generated@@716 0)) (= ($generated@@273 $generated@@715 $generated@@716) ($generated@@191 $generated@@717))))
 :pattern ( ($generated@@273 $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (! (let (($generated@@721 (type $generated@@719)))
 (=> (and (and (= (type $generated@@718) ($generated@@80 $generated@@721 $generated@@2)) (= (type $generated@@720) $generated@@2)) (<= 0 ($generated $generated@@720))) (= ($generated@@365 ($generated@@86 $generated@@718 $generated@@719 $generated@@720)) (+ (- ($generated@@365 $generated@@718) ($generated ($generated@@85 $generated@@718 $generated@@719))) ($generated $generated@@720)))))
 :pattern ( ($generated@@365 ($generated@@86 $generated@@718 $generated@@719 $generated@@720)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@723) $generated@@2)) ($generated@@78 $generated@@723 $generated@@46 $generated@@722))
 :pattern ( ($generated@@78 $generated@@723 $generated@@46 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@725) $generated@@3)) ($generated@@78 $generated@@725 $generated@@47 $generated@@724))
 :pattern ( ($generated@@78 $generated@@725 $generated@@47 $generated@@724))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@727) $generated@@4)) ($generated@@78 $generated@@727 $generated@@44 $generated@@726))
 :pattern ( ($generated@@78 $generated@@727 $generated@@44 $generated@@726))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@728) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@729) $generated@@549)) ($generated@@78 $generated@@729 $generated@@45 $generated@@728))
 :pattern ( ($generated@@78 $generated@@729 $generated@@45 $generated@@728))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (= (type $generated@@730) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@731) $generated@@186)) ($generated@@78 $generated@@731 $generated@@48 $generated@@730))
 :pattern ( ($generated@@78 $generated@@731 $generated@@48 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@732) ($generated@@154 $generated@@186)) (= (type $generated@@733) $generated@@67)) (= ($generated@@140 $generated@@732 ($generated@@307 $generated@@733)) (forall (($generated@@734 Int) ) (!  (=> (and (<= 0 $generated@@734) (< $generated@@734 ($generated@@196 $generated@@732))) ($generated@@266 ($generated@@312 $generated@@732 $generated@@734) $generated@@733))
 :pattern ( ($generated@@312 $generated@@732 $generated@@734))
))))
 :pattern ( ($generated@@140 $generated@@732 ($generated@@307 $generated@@733)))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 Int) ) (!  (=> (= (type $generated@@735) ($generated@@154 $generated@@186)) (=> (and (<= 0 $generated@@736) (< $generated@@736 ($generated@@196 $generated@@735))) (< ($generated@@638 ($generated@@468 $generated@@177 ($generated@@312 $generated@@735 $generated@@736))) ($generated@@332 $generated@@735))))
 :pattern ( ($generated@@638 ($generated@@468 $generated@@177 ($generated@@312 $generated@@735 $generated@@736))))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (and (= (type $generated@@737) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@738) $generated@@67)) (= (type $generated@@739) $generated@@67)) ($generated@@140 $generated@@737 ($generated@@496 $generated@@738 $generated@@739))) (and (and ($generated@@140 ($generated@@375 $generated@@737) ($generated@@291 $generated@@738)) ($generated@@140 ($generated@@424 $generated@@737) ($generated@@291 $generated@@739))) ($generated@@140 ($generated@@467 $generated@@737) ($generated@@291 ($generated@@176 $generated@@738 $generated@@739)))))
 :pattern ( ($generated@@140 $generated@@737 ($generated@@496 $generated@@738 $generated@@739)))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (and (= (type $generated@@740) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@741) $generated@@67)) (= (type $generated@@742) $generated@@67)) ($generated@@140 $generated@@740 ($generated@@504 $generated@@741 $generated@@742))) (and (and ($generated@@140 ($generated@@393 $generated@@740) ($generated@@296 $generated@@741)) ($generated@@140 ($generated@@435 $generated@@740) ($generated@@296 $generated@@742))) ($generated@@140 ($generated@@478 $generated@@740) ($generated@@296 ($generated@@176 $generated@@741 $generated@@742)))))
 :pattern ( ($generated@@140 $generated@@740 ($generated@@504 $generated@@741 $generated@@742)))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@2) ($generated@@140 $generated@@743 $generated@@46))
 :pattern ( ($generated@@140 $generated@@743 $generated@@46))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@3) ($generated@@140 $generated@@744 $generated@@47))
 :pattern ( ($generated@@140 $generated@@744 $generated@@47))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@4) ($generated@@140 $generated@@745 $generated@@44))
 :pattern ( ($generated@@140 $generated@@745 $generated@@44))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) $generated@@549) ($generated@@140 $generated@@746 $generated@@45))
 :pattern ( ($generated@@140 $generated@@746 $generated@@45))
)))
(assert (forall (($generated@@747 T@U) ) (!  (=> (= (type $generated@@747) $generated@@186) ($generated@@140 $generated@@747 $generated@@48))
 :pattern ( ($generated@@140 $generated@@747 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@748 () T@U)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () Int)
(declare-fun $generated@@751 () Int)
(declare-fun $generated@@752 () Int)
(declare-fun $generated@@753 () Int)
(declare-fun $generated@@754 () Bool)
(declare-fun $generated@@755 () Int)
(declare-fun $generated@@756 () Int)
(declare-fun $generated@@757 () Int)
(declare-fun $generated@@758 () Int)
(declare-fun $generated@@759 () Int)
(declare-fun $generated@@760 () Int)
(declare-fun $generated@@761 () Int)
(declare-fun $generated@@762 () Int)
(declare-fun $generated@@763 () Int)
(declare-fun $generated@@764 () Int)
(declare-fun $generated@@765 () Int)
(declare-fun $generated@@766 () Int)
(declare-fun $generated@@767 () Int)
(declare-fun $generated@@768 () Int)
(declare-fun $generated@@769 () Int)
(declare-fun $generated@@770 () Int)
(declare-fun $generated@@771 () Int)
(declare-fun $generated@@772 () Int)
(declare-fun $generated@@773 () T@U)
(declare-fun $generated@@774 () Int)
(declare-fun $generated@@775 () Int)
(declare-fun $generated@@776 (T@U) Bool)
(declare-fun $generated@@777 () Int)
(declare-fun $generated@@778 () Int)
(declare-fun $generated@@779 () Int)
(declare-fun $generated@@780 () Int)
(declare-fun $generated@@781 () Int)
(assert  (and (and (= (type $generated@@749) $generated@@81) (= (type $generated@@748) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@773) ($generated@@211 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 59) (let (($generated@@782 true))
(let (($generated@@783  (=> (and ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@750) ($generated@@348 ($generated@@8 $generated@@751))) (= (ControlFlow 0 36) 32)) $generated@@782)))
(let (($generated@@784  (=> (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@750) ($generated@@348 ($generated@@8 $generated@@751)))) (and (=> (= (ControlFlow 0 33) (- 0 35)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 33) (- 0 34)) (and (<= 0 $generated@@752) (<= $generated@@752 ($generated@@136 $generated@@749)))) (=> (= (ControlFlow 0 33) 32) $generated@@782)))))))
(let (($generated@@785  (=> (and (and (<= ($generated@@301 0) $generated@@750) (<= $generated@@750 $generated@@752)) (<= $generated@@752 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 37) (- 0 39)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 37) (- 0 38)) (and (<= 0 $generated@@750) (<= $generated@@750 ($generated@@136 $generated@@749)))) (and (=> (= (ControlFlow 0 37) 33) $generated@@784) (=> (= (ControlFlow 0 37) 36) $generated@@783))))))))
(let (($generated@@786  (=> (and (not (and (<= ($generated@@301 0) $generated@@750) (<= $generated@@750 $generated@@752))) (= (ControlFlow 0 43) 37)) $generated@@785)))
(let (($generated@@787  (=> (and (<= ($generated@@301 0) $generated@@750) (<= $generated@@750 $generated@@752)) (and (=> (= (ControlFlow 0 40) (- 0 42)) (not (= $generated@@749 $generated@@138))) (=> (= $generated@@753 ($generated@@136 $generated@@749)) (and (=> (= (ControlFlow 0 40) (- 0 41)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@753) (< $generated@@753 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@753) (< $generated@@753 2147483648)) (=> (= (ControlFlow 0 40) 37) $generated@@785))))))))
(let (($generated@@788  (=> (< $generated@@750 ($generated@@301 0)) (and (=> (= (ControlFlow 0 45) 40) $generated@@787) (=> (= (ControlFlow 0 45) 43) $generated@@786)))))
(let (($generated@@789  (=> (<= ($generated@@301 0) $generated@@750) (and (=> (= (ControlFlow 0 44) 40) $generated@@787) (=> (= (ControlFlow 0 44) 43) $generated@@786)))))
(let (($generated@@790  (=> (and (not $generated@@754) (= $generated@@755 ($generated@@301 0))) (and (=> (= (ControlFlow 0 46) (- 0 47)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@755) (< $generated@@755 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@755) (< $generated@@755 2147483648)) (and (=> (= (ControlFlow 0 46) 44) $generated@@789) (=> (= (ControlFlow 0 46) 45) $generated@@788)))))))
(let (($generated@@791  (and (=> (= (ControlFlow 0 10) (- 0 16)) (or (<= 0 $generated@@756) (= (- $generated@@757 $generated@@758) $generated@@756))) (=> (or (<= 0 $generated@@756) (= (- $generated@@757 $generated@@758) $generated@@756)) (and (=> (= (ControlFlow 0 10) (- 0 15)) (< (- $generated@@757 $generated@@758) $generated@@756)) (=> (< (- $generated@@757 $generated@@758) $generated@@756) (and (=> (= (ControlFlow 0 10) (- 0 14)) (=> $generated@@754 (<= ($generated@@301 0) $generated@@758))) (=> (=> $generated@@754 (<= ($generated@@301 0) $generated@@758)) (and (=> (= (ControlFlow 0 10) (- 0 13)) (=> $generated@@754 (<= $generated@@758 $generated@@757))) (=> (=> $generated@@754 (<= $generated@@758 $generated@@757)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (=> $generated@@754 (<= $generated@@757 ($generated@@136 $generated@@749)))) (=> (=> $generated@@754 (<= $generated@@757 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> $generated@@754 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@758) ($generated@@348 ($generated@@8 $generated@@751)))))) (=> (=> $generated@@754 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@758) ($generated@@348 ($generated@@8 $generated@@751))))) (=> (= (ControlFlow 0 10) (- 0 9)) (=> $generated@@754 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@757) ($generated@@348 ($generated@@8 $generated@@751))))))))))))))))))))
(let (($generated@@792  (=> (and (< ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@759)))) $generated@@751) (= $generated@@760 ($generated@@301 1))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@760) (< $generated@@760 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@760) (< $generated@@760 2147483648)) (=> (= $generated@@761 (+ $generated@@759 1)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@761) (< $generated@@761 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@761) (< $generated@@761 2147483648)) (=> (and (and (= $generated@@762 (+ $generated@@759 1)) (= $generated@@758 $generated@@762)) (and (= $generated@@757 $generated@@752) (= (ControlFlow 0 18) 10))) $generated@@791)))))))))
(let (($generated@@793  (=> (and (and (< $generated@@751 ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@759))))) (= $generated@@758 $generated@@750)) (and (= $generated@@757 $generated@@759) (= (ControlFlow 0 17) 10))) $generated@@791)))
(let (($generated@@794  (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> (<= ($generated@@301 0) $generated@@763) (< $generated@@763 ($generated@@136 $generated@@749)))) (=> (=> (<= ($generated@@301 0) $generated@@763) (< $generated@@763 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> (<= ($generated@@301 0) $generated@@763) (= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@763)))) $generated@@751))) (=> (=> (<= ($generated@@301 0) $generated@@763) (= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@763)))) $generated@@751)) (=> (= (ControlFlow 0 3) (- 0 2)) (=> (< $generated@@763 0) (not ($generated@@152 ($generated@@274 $generated@@748 $generated@@749) ($generated@@348 ($generated@@8 $generated@@751))))))))))))
(let (($generated@@795  (=> (<= $generated@@751 ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@759))))) (=> (and (= $generated@@763 $generated@@759) (= (ControlFlow 0 8) 3)) $generated@@794))))
(let (($generated@@796  (=> (<= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@759)))) $generated@@751) (and (=> (= (ControlFlow 0 21) (- 0 23)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (and (<= 0 $generated@@759) (< $generated@@759 ($generated@@136 $generated@@749)))) (=> (and (<= 0 $generated@@759) (< $generated@@759 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 21) 18) $generated@@792) (=> (= (ControlFlow 0 21) 8) $generated@@795)))))))))
(let (($generated@@797  (=> (< $generated@@750 $generated@@752) (=> (and (= $generated@@756 (- $generated@@752 $generated@@750)) (= $generated@@764 (+ $generated@@750 $generated@@752))) (and (=> (= (ControlFlow 0 24) (- 0 30)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@764) (< $generated@@764 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@764) (< $generated@@764 2147483648)) (=> (= $generated@@765 ($generated@@301 2)) (and (=> (= (ControlFlow 0 24) (- 0 29)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@765) (< $generated@@765 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@765) (< $generated@@765 2147483648)) (and (=> (= (ControlFlow 0 24) (- 0 28)) (not (= ($generated@@301 2) 0))) (=> (not (= ($generated@@301 2) 0)) (=> (= $generated@@766 ($generated@@512 (+ $generated@@750 $generated@@752) ($generated@@301 2))) (and (=> (= (ControlFlow 0 24) (- 0 27)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@766) (< $generated@@766 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@766) (< $generated@@766 2147483648)) (=> (= $generated@@759 ($generated@@512 (+ $generated@@750 $generated@@752) ($generated@@301 2))) (and (=> (= (ControlFlow 0 24) (- 0 26)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (and (<= 0 $generated@@759) (< $generated@@759 ($generated@@136 $generated@@749)))) (=> (and (<= 0 $generated@@759) (< $generated@@759 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 24) 17) $generated@@793) (=> (= (ControlFlow 0 24) 21) $generated@@796)))))))))))))))))))))
(let (($generated@@798  (=> (and (<= $generated@@752 $generated@@750) (= $generated@@767 ($generated@@301 (- 0 1)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@767) (< $generated@@767 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@767) (< $generated@@767 2147483648)) (=> (= $generated@@768 ($generated@@301 (- 0 1))) (=> (and (= $generated@@763 $generated@@768) (= (ControlFlow 0 6) 3)) $generated@@794)))))))
(let (($generated@@799  (=> $generated@@754 (and (=> (= (ControlFlow 0 31) 6) $generated@@798) (=> (= (ControlFlow 0 31) 24) $generated@@797)))))
(let (($generated@@800  (and (=> (= (ControlFlow 0 48) 46) $generated@@790) (=> (= (ControlFlow 0 48) 31) $generated@@799))))
(let (($generated@@801 true))
(let (($generated@@802  (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@750) (< $generated@@750 2147483648)) (=> (and (and (<= ($generated@@301 (- 0 2147483648)) $generated@@752) (< $generated@@752 2147483648)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@769) (< $generated@@769 2147483648))) (=> (and (and (and (and (and (and (not false) (<= 0 $generated@@750)) (= $generated@@770 0)) (= $generated@@771 0)) (and (<= (- 0 2147483648) $generated@@772) (< $generated@@772 2147483648))) (and (and (=> $generated@@754 true) (=> $generated@@754 (<= ($generated@@301 0) $generated@@750))) (and (=> $generated@@754 (<= $generated@@750 $generated@@752)) (=> $generated@@754 (<= $generated@@752 ($generated@@136 $generated@@749)))))) (and (and (and (=> $generated@@754 true) (=> $generated@@754 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@750) ($generated@@348 ($generated@@8 $generated@@751)))))) (and (=> $generated@@754 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@752) ($generated@@348 ($generated@@8 $generated@@751))))) (forall (($generated@@803 T@U) ) (!  (=> (= (type $generated@@803) $generated@@81) (=> (and (not (= $generated@@803 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@748 $generated@@803) $generated@@60))) (= ($generated@@85 $generated@@748 $generated@@803) ($generated@@85 $generated@@748 $generated@@803))))
 :pattern ( ($generated@@85 $generated@@748 $generated@@803))
)))) (and (and ($generated@@145 $generated@@748 $generated@@748) (forall (($generated@@804 T@U) ($generated@@805 T@U) ) (! (let (($generated@@806 ($generated@@70 (type $generated@@805))))
 (=> (and (and (= (type $generated@@804) $generated@@81) (= (type $generated@@805) ($generated@@69 $generated@@806))) (and (not (= $generated@@804 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@748 $generated@@804) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@748 $generated@@804) $generated@@805) ($generated@@87 ($generated@@85 $generated@@748 $generated@@804) $generated@@805)) ($generated@@0 ($generated@@209 $generated@@773 $generated@@804 $generated@@805)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@748 $generated@@804) $generated@@805))
))) (and (<= (- $generated@@752 $generated@@750) $generated@@774) (=> (= (- $generated@@752 $generated@@750) $generated@@774) true))))) (and (=> (= (ControlFlow 0 49) 1) $generated@@801) (=> (= (ControlFlow 0 49) 48) $generated@@800)))))))
(let (($generated@@807  (=> (and (= $generated@@773 ($generated@@210 $generated@@138 $generated@@748 $generated@@60 false)) (= $generated@@771 ($generated@@301 0))) (and (=> (= (ControlFlow 0 50) (- 0 58)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@771) (< $generated@@771 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@771) (< $generated@@771 2147483648)) (=> (= $generated@@770 ($generated@@301 0)) (and (=> (= (ControlFlow 0 50) (- 0 57)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (=> (= $generated@@772 ($generated@@136 $generated@@749)) (and (=> (= (ControlFlow 0 50) (- 0 56)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@772) (< $generated@@772 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@772) (< $generated@@772 2147483648)) (=> (and (= $generated@@775 ($generated@@136 $generated@@749)) (= $generated@@774 (- $generated@@775 $generated@@770))) (and (=> (= (ControlFlow 0 50) (- 0 55)) (=> $generated@@754 (<= ($generated@@301 0) $generated@@770))) (=> (=> $generated@@754 (<= ($generated@@301 0) $generated@@770)) (and (=> (= (ControlFlow 0 50) (- 0 54)) (=> $generated@@754 (<= $generated@@770 $generated@@775))) (=> (=> $generated@@754 (<= $generated@@770 $generated@@775)) (and (=> (= (ControlFlow 0 50) (- 0 53)) (=> $generated@@754 (<= $generated@@775 ($generated@@136 $generated@@749)))) (=> (=> $generated@@754 (<= $generated@@775 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 50) (- 0 52)) (=> $generated@@754 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@770) ($generated@@348 ($generated@@8 $generated@@751)))))) (=> (=> $generated@@754 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@770) ($generated@@348 ($generated@@8 $generated@@751))))) (and (=> (= (ControlFlow 0 50) (- 0 51)) (=> $generated@@754 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@775) ($generated@@348 ($generated@@8 $generated@@751)))))) (=> (=> $generated@@754 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@775) ($generated@@348 ($generated@@8 $generated@@751))))) (=> (= (ControlFlow 0 50) 49) $generated@@802)))))))))))))))))))))))
(let (($generated@@808  (=> (and ($generated@@165 $generated@@748) ($generated@@776 $generated@@748)) (=> (and (and ($generated@@140 $generated@@749 ($generated@@170 $generated@@46)) ($generated@@78 $generated@@749 ($generated@@170 $generated@@46) $generated@@748)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@777) (< $generated@@777 2147483648))) (=> (and (and (and (and (<= ($generated@@301 (- 0 2147483648)) $generated@@778) (< $generated@@778 2147483648)) true) (and (and (<= ($generated@@301 (- 0 2147483648)) $generated@@779) (< $generated@@779 2147483648)) true)) (and (and (and (<= ($generated@@301 (- 0 2147483648)) $generated@@780) (< $generated@@780 2147483648)) true) (and (and (= 1 $generated@@781) (< ($generated@@136 $generated@@749) 2147483648)) (and (forall (($generated@@809 Int) ($generated@@810 Int) ) (!  (=> true (=> (and (and (<= ($generated@@301 0) $generated@@809) (< $generated@@809 $generated@@810)) (< $generated@@810 ($generated@@136 $generated@@749))) (<= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@809)))) ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@810)))))))
 :pattern ( ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@810))) ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@809))))
)) (= (ControlFlow 0 59) 50))))) $generated@@807)))))
$generated@@808))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 24) (- 30))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U T@U) Bool)
(declare-fun $generated@@179 (T@T) T@U)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@192 (T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@377 (Int) T@U)
(declare-fun $generated@@378 (T@U Int) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@T T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@457 (T@T) T@U)
(declare-fun $generated@@481 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@644 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert  (and (and (forall (($generated@@182 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@182)) 16)) (forall (($generated@@183 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@T) ) (! (= (type ($generated@@179 $generated@@184)) ($generated@@180 $generated@@184))
 :pattern ( ($generated@@179 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
 (not ($generated@@178 ($generated@@179 $generated@@186) $generated@@185)))
 :pattern ( (let (($generated@@186 (type $generated@@185)))
($generated@@178 ($generated@@179 $generated@@186) $generated@@185)))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@67)
 :pattern ( ($generated@@187 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@191) $generated@@67)) ($generated@@140 $generated@@190 ($generated@@187 $generated@@191))) ($generated@@188 $generated@@190))
 :pattern ( ($generated@@140 $generated@@190 ($generated@@187 $generated@@191)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@1 ($generated@@194 $generated@@198 $generated@@199)) 17)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@196 ($generated@@194 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@194 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@196 (type $generated@@204))))
(= (type ($generated@@192 $generated@@204 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(let (($generated@@213 (type $generated@@209)))
(= (type ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@194 $generated@@213 $generated@@212))))
 :pattern ( ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@196 (type $generated@@214))))
 (=> (= (type $generated@@217) $generated@@218) (= ($generated@@192 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@215 $generated@@216) $generated@@217)))
 :weight 0
))) (and (and (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@192 ($generated@@197 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@192 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@192 ($generated@@197 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@192 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or true (= ($generated@@192 ($generated@@197 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@192 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@194 $generated@@81 $generated@@4))
 :pattern ( ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@70 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@81) (= (type $generated@@242) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) ($generated@@69 $generated@@4))) (= (type $generated@@245) $generated@@81)) (= (type $generated@@246) ($generated@@69 $generated@@247))) (= ($generated@@0 ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@250 $generated@@251)) $generated@@164)
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@173)) (= (type $generated@@255) $generated@@173)) (= ($generated@@140 ($generated@@248 $generated@@254 $generated@@255) ($generated@@163 $generated@@252 $generated@@253))  (and ($generated@@249 $generated@@254 $generated@@252) ($generated@@249 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@140 ($generated@@248 $generated@@254 $generated@@255) ($generated@@163 $generated@@252 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@164) (= (type $generated@@257) $generated@@164)) (= ($generated@@170 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@170 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@67)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@261) $generated@@67)) (= ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@173) ($generated@@0 ($generated@@85 $generated@@260 $generated@@262))) ($generated@@249 $generated@@262 $generated@@261))
 :pattern ( ($generated@@85 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@67)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@266) $generated@@67)) (= ($generated@@140 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@173) ($generated@@0 ($generated@@85 $generated@@265 $generated@@267))) ($generated@@249 $generated@@267 $generated@@266))
 :pattern ( ($generated@@85 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@140 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@268 $generated@@269) $generated@@269)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@67) (= (type $generated@@276) $generated@@67)) (= (type $generated@@277) $generated@@173)) (= (type $generated@@278) $generated@@173)) (= (type $generated@@279) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@279)) (= ($generated@@78 ($generated@@248 $generated@@277 $generated@@278) ($generated@@163 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@78 ($generated@@248 $generated@@277 $generated@@278) ($generated@@163 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@71)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@164) (= ($generated@@162 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@164) ($generated@@162 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@173) (= (type $generated@@285) $generated@@173)) (= $generated@@283 ($generated@@248 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@162 $generated@@283))
)))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@286 ($generated@@179 $generated@@287)) 0)
 :pattern ( ($generated@@179 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@67) (= (type $generated@@289) $generated@@81)) (= ($generated@@140 $generated@@289 ($generated@@157 $generated@@288))  (and ($generated@@140 $generated@@289 ($generated@@137 $generated@@288)) (not (= $generated@@289 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@289 ($generated@@157 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@173)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@274 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@78 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@274 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@297) $generated@@173)) (= (type $generated@@298) $generated@@67)) ($generated@@145 $generated@@295 $generated@@296)) ($generated@@274 $generated@@297 $generated@@298 $generated@@295)) ($generated@@274 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@145 $generated@@295 $generated@@296) ($generated@@274 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@302) $generated@@67)) ($generated@@145 $generated@@299 $generated@@300)) ($generated@@78 $generated@@301 $generated@@302 $generated@@299)) ($generated@@78 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@145 $generated@@299 $generated@@300) ($generated@@78 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@80 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@83 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@80 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@85 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@72)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@311)) $generated@@61) (= ($generated@@309 ($generated@@137 $generated@@311)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@312)) $generated@@62) (= ($generated@@309 ($generated@@157 $generated@@312)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@80 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@80 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@83 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@80 $generated@@350 $generated@@2)) (= ($generated@@188 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@85 $generated@@349 $generated@@351))) (<= ($generated ($generated@@85 $generated@@349 $generated@@351)) ($generated@@303 $generated@@349))))
 :pattern ( ($generated@@85 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@188 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@67) (= (type $generated@@353) $generated@@81)) (= ($generated@@140 $generated@@353 ($generated@@137 $generated@@352))  (or (= $generated@@353 $generated@@138) (= ($generated@@139 $generated@@353) ($generated@@137 $generated@@352)))))
 :pattern ( ($generated@@140 $generated@@353 ($generated@@137 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@317 (type $generated@@354))))
(let (($generated@@356 ($generated@@316 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@315 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@314 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@313 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@317 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@80 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(let (($generated@@363 ($generated@@316 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@315 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@314 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@335 (type $generated@@365))))
(let (($generated@@367 ($generated@@334 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@333 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@332 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@331 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@335 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@80 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@335 (type $generated@@372))))
(let (($generated@@374 ($generated@@334 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@333 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@332 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert  (and (and (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@376 $generated@@379 $generated@@380)) ($generated@@180 $generated@@173))
 :pattern ( ($generated@@376 $generated@@379 $generated@@380))
)) (forall (($generated@@381 Int) ) (! (= (type ($generated@@377 $generated@@381)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@377 $generated@@381))
))) (forall (($generated@@382 T@U) ($generated@@383 Int) ) (! (let (($generated@@384 ($generated@@181 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382 $generated@@383)) $generated@@384))
 :pattern ( ($generated@@378 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@386) $generated@@81)) (forall (($generated@@387 Int) ) (!  (=> (and (<= 0 $generated@@387) (< $generated@@387 ($generated@@286 ($generated@@376 $generated@@385 $generated@@386)))) (= ($generated@@378 ($generated@@376 $generated@@385 $generated@@386) $generated@@387) ($generated@@87 ($generated@@85 $generated@@385 $generated@@386) ($generated@@377 $generated@@387))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@385 $generated@@386) ($generated@@377 $generated@@387)))
 :pattern ( ($generated@@378 ($generated@@376 $generated@@385 $generated@@386) $generated@@387))
)))
 :pattern ( ($generated@@376 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@389) $generated@@67)) (= ($generated@@140 $generated@@388 ($generated@@187 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@249 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@140 $generated@@388 ($generated@@187 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
 (=> (= (type $generated@@391) ($generated@@180 $generated@@393)) (= ($generated@@178 $generated@@391 $generated@@392) (exists (($generated@@394 Int) ) (!  (and (and (<= 0 $generated@@394) (< $generated@@394 ($generated@@286 $generated@@391))) (= ($generated@@378 $generated@@391 $generated@@394) $generated@@392))
 :pattern ( ($generated@@378 $generated@@391 $generated@@394))
)))))
 :pattern ( ($generated@@178 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@258 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@173) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@274 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@258 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@399 ($generated@@263 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@173) ($generated@@0 ($generated@@85 $generated@@399 $generated@@402))) ($generated@@274 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@85 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@78 $generated@@399 ($generated@@263 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(= ($generated ($generated@@85 ($generated@@304 $generated@@404) $generated@@403)) 0))
 :pattern ( (let (($generated@@404 (type $generated@@403)))
($generated@@85 ($generated@@304 $generated@@404) $generated@@403)))
)))
(assert  (and (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@405 $generated@@408)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@405 $generated@@408))
)) (forall (($generated@@409 T@T) ($generated@@410 T@U) ) (! (= (type ($generated@@406 $generated@@409 $generated@@410)) $generated@@409)
 :pattern ( ($generated@@406 $generated@@409 $generated@@410))
))) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@317 (type $generated@@411))))
(let (($generated@@413 ($generated@@316 (type $generated@@411))))
(= (type ($generated@@407 $generated@@411)) ($generated@@80 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@407 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@415) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@405 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@414) ($generated@@171 ($generated@@406 $generated@@164 $generated@@415)))) (= ($generated@@85 ($generated@@407 $generated@@414) ($generated@@171 ($generated@@406 $generated@@164 $generated@@415))) ($generated@@172 ($generated@@406 $generated@@164 $generated@@415))))))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@414) $generated@@415))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@335 (type $generated@@419))))
(let (($generated@@421 ($generated@@334 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@80 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@423) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@422) ($generated@@171 ($generated@@406 $generated@@164 $generated@@423)))) (= ($generated@@85 ($generated@@417 $generated@@422) ($generated@@171 ($generated@@406 $generated@@164 $generated@@423))) ($generated@@172 ($generated@@406 $generated@@164 $generated@@423))))))
 :pattern ( ($generated@@85 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@316 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@315 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@85 ($generated@@358 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@85 ($generated@@407 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@424) $generated@@428))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@334 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@333 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@85 ($generated@@369 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@85 ($generated@@417 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@429) $generated@@433))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@438) $generated@@67)) (= (type $generated@@439) $generated@@67)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@437) $generated@@441))) (and ($generated@@274 ($generated@@85 ($generated@@407 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@274 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@437) $generated@@441))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@446) $generated@@67)) (= (type $generated@@447) $generated@@67)) (= (type $generated@@448) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@445) $generated@@449))) (and ($generated@@274 ($generated@@85 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@274 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@450) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@450 $generated@@452))) (and ($generated@@145 $generated@@450 $generated@@451) ($generated@@145 $generated@@451 $generated@@452))) ($generated@@145 $generated@@450 $generated@@452))
 :pattern ( ($generated@@145 $generated@@450 $generated@@451) ($generated@@145 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 Int) ) (!  (=> (and (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@455) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@454) (and (not (= $generated@@455 $generated@@138)) (= ($generated@@139 $generated@@455) ($generated@@137 $generated@@453)))) (and (<= 0 $generated@@456) (< $generated@@456 ($generated@@136 $generated@@455)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@454 $generated@@455) $generated@@60))) ($generated@@274 ($generated@@87 ($generated@@85 $generated@@454 $generated@@455) ($generated@@377 $generated@@456)) $generated@@453 $generated@@454)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@454 $generated@@455) ($generated@@377 $generated@@456)) ($generated@@137 $generated@@453))
)))
(assert (forall (($generated@@458 T@T) ) (! (= (type ($generated@@457 $generated@@458)) ($generated@@80 $generated@@458 $generated@@4))
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@335 (type $generated@@459))))
(let (($generated@@461 ($generated@@334 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@333 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@332 $generated@@461 $generated@@460)) (= ($generated@@331 $generated@@459) ($generated@@457 $generated@@461))))))
 :pattern ( ($generated@@331 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@335 (type $generated@@462))))
(let (($generated@@464 ($generated@@334 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@333 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@332 $generated@@464 $generated@@463)) (= ($generated@@369 $generated@@462) ($generated@@457 $generated@@463))))))
 :pattern ( ($generated@@369 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@335 (type $generated@@465))))
(let (($generated@@467 ($generated@@334 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@333 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@332 $generated@@467 $generated@@466)) (= ($generated@@416 $generated@@465) ($generated@@457 $generated@@173))))))
 :pattern ( ($generated@@416 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@317 (type $generated@@468))))
(let (($generated@@470 ($generated@@316 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@315 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@314 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@173) (= (type $generated@@472) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@405 $generated@@468) ($generated@@290 ($generated@@248 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@405 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@335 (type $generated@@473))))
(let (($generated@@475 ($generated@@334 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@333 $generated@@475 $generated@@474)) (or (= $generated@@473 ($generated@@332 $generated@@475 $generated@@474)) (exists (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (and (and (= (type $generated@@476) $generated@@173) (= (type $generated@@477) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@416 $generated@@473) ($generated@@290 ($generated@@248 $generated@@476 $generated@@477)))))
 :no-pattern (type $generated@@476)
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@416 $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@173) ($generated@@249 $generated@@478 $generated@@46)) (and (= ($generated@@290 ($generated@@406 $generated@@2 $generated@@478)) $generated@@478) ($generated@@140 ($generated@@406 $generated@@2 $generated@@478) $generated@@46)))
 :pattern ( ($generated@@249 $generated@@478 $generated@@46))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@173) ($generated@@249 $generated@@479 $generated@@47)) (and (= ($generated@@290 ($generated@@406 $generated@@3 $generated@@479)) $generated@@479) ($generated@@140 ($generated@@406 $generated@@3 $generated@@479) $generated@@47)))
 :pattern ( ($generated@@249 $generated@@479 $generated@@47))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@173) ($generated@@249 $generated@@480 $generated@@44)) (and (= ($generated@@290 ($generated@@406 $generated@@4 $generated@@480)) $generated@@480) ($generated@@140 ($generated@@406 $generated@@4 $generated@@480) $generated@@44)))
 :pattern ( ($generated@@249 $generated@@480 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@481) 20))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@173) ($generated@@249 $generated@@482 $generated@@45)) (and (= ($generated@@290 ($generated@@406 $generated@@481 $generated@@482)) $generated@@482) ($generated@@140 ($generated@@406 $generated@@481 $generated@@482) $generated@@45)))
 :pattern ( ($generated@@249 $generated@@482 $generated@@45))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@249 ($generated@@290 $generated@@483) $generated@@484) ($generated@@140 $generated@@483 $generated@@484)))
 :pattern ( ($generated@@249 ($generated@@290 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@81) (<= 0 ($generated@@136 $generated@@485)))
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@83 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@80 $generated@@487 $generated@@2)) (<= 0 ($generated@@303 $generated@@486))))
 :pattern ( ($generated@@303 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@181 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@180 $generated@@489)) (<= 0 ($generated@@286 $generated@@488))))
 :pattern ( ($generated@@286 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@434 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@434 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@494 ($generated@@434 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@434 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= ($generated@@76 ($generated@@434 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@442 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@442 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@442 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@442 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@76 ($generated@@442 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@173) (= (type $generated@@511) $generated@@173)) (= ($generated@@280 ($generated@@248 $generated@@510 $generated@@511)) $generated@@63))
 :pattern ( ($generated@@248 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= ($generated@@512 ($generated@@163 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@163 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= ($generated@@516 ($generated@@163 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@163 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@173) (= (type $generated@@521) $generated@@173)) (= ($generated@@171 ($generated@@248 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@248 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@173) (= (type $generated@@523) $generated@@173)) (= ($generated@@172 ($generated@@248 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@248 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@180 $generated@@173)) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@526 ($generated@@524 $generated@@527) $generated@@528) (forall (($generated@@529 Int) ) (!  (=> (and (<= 0 $generated@@529) (< $generated@@529 ($generated@@286 $generated@@526))) ($generated@@274 ($generated@@378 $generated@@526 $generated@@529) $generated@@527 $generated@@528))
 :pattern ( ($generated@@378 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@78 $generated@@526 ($generated@@524 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@531 Int) ) (! (= ($generated@@530 ($generated@@79 $generated@@531)) $generated@@531)
 :pattern ( ($generated@@79 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@532 ($generated@@258 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@258 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@76 ($generated@@258 $generated@@535)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@536 ($generated@@263 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@263 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@67) (= ($generated@@76 ($generated@@263 $generated@@539)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@187 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@187 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@76 ($generated@@187 $generated@@543)) $generated@@56))
 :pattern ( ($generated@@187 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@524 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@524 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@76 ($generated@@524 $generated@@547)) $generated@@57))
 :pattern ( ($generated@@524 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@75 ($generated@@377 $generated@@548)) 1)
 :pattern ( ($generated@@377 $generated@@548))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@549 ($generated@@377 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@377 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@67)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@67) (= ($generated@@551 ($generated@@137 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@137 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@67)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@67) (= ($generated@@554 ($generated@@157 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@157 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
(= ($generated@@406 $generated@@558 ($generated@@290 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@290 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@560) $generated@@67)) (= (type $generated@@561) $generated@@67)) (= ($generated@@140 $generated@@559 ($generated@@434 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@559) $generated@@562))) (and ($generated@@249 ($generated@@85 ($generated@@407 $generated@@559) $generated@@562) $generated@@561) ($generated@@249 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@559) $generated@@562))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@140 $generated@@559 ($generated@@434 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) $generated@@67)) (= ($generated@@140 $generated@@563 ($generated@@442 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@563) $generated@@566))) (and ($generated@@249 ($generated@@85 ($generated@@417 $generated@@563) $generated@@566) $generated@@565) ($generated@@249 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@563) $generated@@566))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@140 $generated@@563 ($generated@@442 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 Int) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@67) (= (type $generated@@568) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@569) $generated@@81)) (and (and ($generated@@152 $generated@@568) (and (not (= $generated@@569 $generated@@138)) (= ($generated@@139 $generated@@569) ($generated@@137 $generated@@567)))) (and (<= 0 $generated@@570) (< $generated@@570 ($generated@@136 $generated@@569))))) ($generated@@249 ($generated@@87 ($generated@@85 $generated@@568 $generated@@569) ($generated@@377 $generated@@570)) $generated@@567))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@568 $generated@@569) ($generated@@377 $generated@@570)) ($generated@@137 $generated@@567))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@173) (= (type $generated@@574) $generated@@173)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@248 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@248 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@173) (= (type $generated@@576) $generated@@173)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@248 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@248 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@173) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) ($generated@@249 $generated@@577 ($generated@@434 $generated@@578 $generated@@579))) (and (= ($generated@@290 ($generated@@406 ($generated@@315 $generated@@173 $generated@@173) $generated@@577)) $generated@@577) ($generated@@140 ($generated@@406 ($generated@@315 $generated@@173 $generated@@173) $generated@@577) ($generated@@434 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@249 $generated@@577 ($generated@@434 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@173) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@249 $generated@@580 ($generated@@442 $generated@@581 $generated@@582))) (and (= ($generated@@290 ($generated@@406 ($generated@@333 $generated@@173 $generated@@173) $generated@@580)) $generated@@580) ($generated@@140 ($generated@@406 ($generated@@333 $generated@@173 $generated@@173) $generated@@580) ($generated@@442 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@249 $generated@@580 ($generated@@442 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@67) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@173)) ($generated@@249 $generated@@585 ($generated@@163 $generated@@583 $generated@@584))) (and (= ($generated@@290 ($generated@@406 $generated@@164 $generated@@585)) $generated@@585) ($generated@@140 ($generated@@406 $generated@@164 $generated@@585) ($generated@@163 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@249 $generated@@585 ($generated@@163 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (not ($generated@@0 ($generated@@85 ($generated@@457 $generated@@587) $generated@@586))))
 :pattern ( (let (($generated@@587 (type $generated@@586)))
($generated@@85 ($generated@@457 $generated@@587) $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@590) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@588) ($generated@@152 $generated@@589)) ($generated@@145 $generated@@588 $generated@@589)) (= ($generated@@85 $generated@@588 $generated@@590) ($generated@@85 $generated@@589 $generated@@590))) (= ($generated@@376 $generated@@588 $generated@@590) ($generated@@376 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@376 $generated@@589 $generated@@590) ($generated@@145 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@81)) (= ($generated@@286 ($generated@@376 $generated@@591 $generated@@592)) ($generated@@136 $generated@@592)))
 :pattern ( ($generated@@286 ($generated@@376 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@67) (= (type $generated@@594) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@593 $generated@@594)) $generated@@64) (= ($generated@@309 ($generated@@163 $generated@@593 $generated@@594)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@164) (= ($generated@@571 ($generated@@290 $generated@@595)) ($generated@@572 $generated@@595)))
 :pattern ( ($generated@@571 ($generated@@290 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@173) ($generated@@249 $generated@@596 ($generated@@79 0))) (and (= ($generated@@290 ($generated@@406 $generated@@2 $generated@@596)) $generated@@596) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@596) ($generated@@79 0))))
 :pattern ( ($generated@@249 $generated@@596 ($generated@@79 0)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@173) (= (type $generated@@598) $generated@@67)) ($generated@@249 $generated@@597 ($generated@@258 $generated@@598))) (and (= ($generated@@290 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@597)) $generated@@597) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@597) ($generated@@258 $generated@@598))))
 :pattern ( ($generated@@249 $generated@@597 ($generated@@258 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@173) (= (type $generated@@600) $generated@@67)) ($generated@@249 $generated@@599 ($generated@@263 $generated@@600))) (and (= ($generated@@290 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@599)) $generated@@599) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@4) $generated@@599) ($generated@@263 $generated@@600))))
 :pattern ( ($generated@@249 $generated@@599 ($generated@@263 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@173) (= (type $generated@@602) $generated@@67)) ($generated@@249 $generated@@601 ($generated@@187 $generated@@602))) (and (= ($generated@@290 ($generated@@406 ($generated@@80 $generated@@173 $generated@@2) $generated@@601)) $generated@@601) ($generated@@140 ($generated@@406 ($generated@@80 $generated@@173 $generated@@2) $generated@@601) ($generated@@187 $generated@@602))))
 :pattern ( ($generated@@249 $generated@@601 ($generated@@187 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@173) (= (type $generated@@604) $generated@@67)) ($generated@@249 $generated@@603 ($generated@@524 $generated@@604))) (and (= ($generated@@290 ($generated@@406 ($generated@@180 $generated@@173) $generated@@603)) $generated@@603) ($generated@@140 ($generated@@406 ($generated@@180 $generated@@173) $generated@@603) ($generated@@524 $generated@@604))))
 :pattern ( ($generated@@249 $generated@@603 ($generated@@524 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@67) (= (type $generated@@606) $generated@@173)) ($generated@@249 $generated@@606 ($generated@@137 $generated@@605))) (and (= ($generated@@290 ($generated@@406 $generated@@81 $generated@@606)) $generated@@606) ($generated@@140 ($generated@@406 $generated@@81 $generated@@606) ($generated@@137 $generated@@605))))
 :pattern ( ($generated@@249 $generated@@606 ($generated@@137 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@67) (= (type $generated@@608) $generated@@173)) ($generated@@249 $generated@@608 ($generated@@157 $generated@@607))) (and (= ($generated@@290 ($generated@@406 $generated@@81 $generated@@608)) $generated@@608) ($generated@@140 ($generated@@406 $generated@@81 $generated@@608) ($generated@@157 $generated@@607))))
 :pattern ( ($generated@@249 $generated@@608 ($generated@@157 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@610) $generated@@67)) (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@609 ($generated@@187 $generated@@610) $generated@@611) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@609 $generated@@612)))) ($generated@@274 $generated@@612 $generated@@610 $generated@@611))
 :pattern ( ($generated@@85 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@78 $generated@@609 ($generated@@187 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@164) (= (type $generated@@614) $generated@@67)) (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@615) (and ($generated@@162 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@67) ($generated@@78 $generated@@613 ($generated@@163 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@78 $generated@@613 ($generated@@163 $generated@@614 $generated@@616) $generated@@615))
))))) ($generated@@274 ($generated@@171 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@274 ($generated@@171 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@164) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@619) (and ($generated@@162 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@67) ($generated@@78 $generated@@617 ($generated@@163 $generated@@620 $generated@@618) $generated@@619))
 :pattern ( ($generated@@78 $generated@@617 ($generated@@163 $generated@@620 $generated@@618) $generated@@619))
))))) ($generated@@274 ($generated@@172 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@274 ($generated@@172 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@173) (= (type $generated@@622) $generated@@173)) (= ($generated@@248 ($generated@@270 $generated@@621) ($generated@@270 $generated@@622)) ($generated@@270 ($generated@@248 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@248 ($generated@@270 $generated@@621) ($generated@@270 $generated@@622)))
)))
(assert (forall (($generated@@623 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@268 $generated@@623))) ($generated@@270 ($generated@@290 ($generated@@8 $generated@@623))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@268 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ) (! (= ($generated@@290 ($generated@@270 $generated@@624)) ($generated@@270 ($generated@@290 $generated@@624)))
 :pattern ( ($generated@@290 ($generated@@270 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@181 (type $generated@@625))))
 (=> (and (= (type $generated@@625) ($generated@@180 $generated@@626)) (= ($generated@@286 $generated@@625) 0)) (= $generated@@625 ($generated@@179 $generated@@626))))
 :pattern ( ($generated@@286 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@628)))
 (=> (and (and (= (type $generated@@627) ($generated@@80 $generated@@630 $generated@@2)) (= (type $generated@@629) $generated@@2)) (<= 0 ($generated $generated@@629))) (= ($generated@@303 ($generated@@86 $generated@@627 $generated@@628 $generated@@629)) (+ (- ($generated@@303 $generated@@627) ($generated ($generated@@85 $generated@@627 $generated@@628))) ($generated $generated@@629)))))
 :pattern ( ($generated@@303 ($generated@@86 $generated@@627 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@632) $generated@@2)) ($generated@@78 $generated@@632 $generated@@46 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@46 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@634) $generated@@3)) ($generated@@78 $generated@@634 $generated@@47 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@47 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@636) $generated@@4)) ($generated@@78 $generated@@636 $generated@@44 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@44 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@638) $generated@@481)) ($generated@@78 $generated@@638 $generated@@45 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@45 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@640) $generated@@173)) ($generated@@78 $generated@@640 $generated@@48 $generated@@639))
 :pattern ( ($generated@@78 $generated@@640 $generated@@48 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@180 $generated@@173)) (= (type $generated@@642) $generated@@67)) (= ($generated@@140 $generated@@641 ($generated@@524 $generated@@642)) (forall (($generated@@643 Int) ) (!  (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@286 $generated@@641))) ($generated@@249 ($generated@@378 $generated@@641 $generated@@643) $generated@@642))
 :pattern ( ($generated@@378 $generated@@641 $generated@@643))
))))
 :pattern ( ($generated@@140 $generated@@641 ($generated@@524 $generated@@642)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ) (!  (=> (= (type $generated@@645) ($generated@@180 $generated@@173)) (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@286 $generated@@645))) (< ($generated@@572 ($generated@@406 $generated@@164 ($generated@@378 $generated@@645 $generated@@646))) ($generated@@644 $generated@@645))))
 :pattern ( ($generated@@572 ($generated@@406 $generated@@164 ($generated@@378 $generated@@645 $generated@@646))))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@315 $generated@@173 $generated@@173)) (= (type $generated@@648) $generated@@67)) (= (type $generated@@649) $generated@@67)) ($generated@@140 $generated@@647 ($generated@@434 $generated@@648 $generated@@649))) (and (and ($generated@@140 ($generated@@313 $generated@@647) ($generated@@258 $generated@@648)) ($generated@@140 ($generated@@358 $generated@@647) ($generated@@258 $generated@@649))) ($generated@@140 ($generated@@405 $generated@@647) ($generated@@258 ($generated@@163 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@140 $generated@@647 ($generated@@434 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@333 $generated@@173 $generated@@173)) (= (type $generated@@651) $generated@@67)) (= (type $generated@@652) $generated@@67)) ($generated@@140 $generated@@650 ($generated@@442 $generated@@651 $generated@@652))) (and (and ($generated@@140 ($generated@@331 $generated@@650) ($generated@@263 $generated@@651)) ($generated@@140 ($generated@@369 $generated@@650) ($generated@@263 $generated@@652))) ($generated@@140 ($generated@@416 $generated@@650) ($generated@@263 ($generated@@163 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@140 $generated@@650 ($generated@@442 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@140 $generated@@653 $generated@@46))
 :pattern ( ($generated@@140 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@140 $generated@@654 $generated@@47))
 :pattern ( ($generated@@140 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@140 $generated@@655 $generated@@44))
 :pattern ( ($generated@@140 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@481) ($generated@@140 $generated@@656 $generated@@45))
 :pattern ( ($generated@@140 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@173) ($generated@@140 $generated@@657 $generated@@48))
 :pattern ( ($generated@@140 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 (T@U) Bool)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Int)
(assert  (and (and (and (= (type $generated@@660) $generated@@81) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@669) ($generated@@194 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@672 true))
(let (($generated@@673  (=> (= $generated@@658 ($generated@@268 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@268 (- 0 2147483648)) $generated@@658) (< $generated@@658 2147483648))) (=> (and (<= ($generated@@268 (- 0 2147483648)) $generated@@658) (< $generated@@658 2147483648)) (=> (and (< $generated@@659 0) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@660 $generated@@138))))))))
(let (($generated@@674  (=> (=> (<= ($generated@@268 0) $generated@@659) (and (< $generated@@659 ($generated@@136 $generated@@660)) (= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@660) ($generated@@377 $generated@@659)))) $generated@@662))) (and (=> (= (ControlFlow 0 11) 2) $generated@@673) (=> (= (ControlFlow 0 11) 4) $generated@@672)))))
(let (($generated@@675  (=> (= $generated@@663 ($generated@@268 0)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (and (<= ($generated@@268 (- 0 2147483648)) $generated@@663) (< $generated@@663 2147483648))) (=> (and (<= ($generated@@268 (- 0 2147483648)) $generated@@663) (< $generated@@663 2147483648)) (=> (<= ($generated@@268 0) $generated@@659) (and (=> (= (ControlFlow 0 5) (- 0 9)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (=> (= $generated@@664 ($generated@@136 $generated@@660)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= ($generated@@268 (- 0 2147483648)) $generated@@664) (< $generated@@664 2147483648))) (=> (and (<= ($generated@@268 (- 0 2147483648)) $generated@@664) (< $generated@@664 2147483648)) (=> (< $generated@@659 ($generated@@136 $generated@@660)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@136 $generated@@660)))) (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@136 $generated@@660))) (=> (= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@660) ($generated@@377 $generated@@659)))) $generated@@662) (and (=> (= (ControlFlow 0 5) 2) $generated@@673) (=> (= (ControlFlow 0 5) 4) $generated@@672)))))))))))))))))))
(let (($generated@@676  (=> (forall (($generated@@677 Int) ($generated@@678 Int) ) (!  (=> true (=> (and (and (<= ($generated@@268 0) $generated@@677) (< $generated@@677 $generated@@678)) (< $generated@@678 ($generated@@136 $generated@@660))) (<= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@677)))) ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@678)))))))
 :pattern ( ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@678))) ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@677))))
)) (=> (and ($generated@@152 $generated@@661) ($generated@@666 $generated@@661)) (=> (and (and (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@81) (=> (and (not (= $generated@@679 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@665 $generated@@679) $generated@@60))) (= ($generated@@85 $generated@@661 $generated@@679) ($generated@@85 $generated@@665 $generated@@679))))
 :pattern ( ($generated@@85 $generated@@661 $generated@@679))
)) ($generated@@145 $generated@@665 $generated@@661)) (and (<= ($generated@@268 (- 0 2147483648)) $generated@@659) (< $generated@@659 2147483648))) (and (=> (= (ControlFlow 0 12) 5) $generated@@675) (=> (= (ControlFlow 0 12) 11) $generated@@674)))))))
(let (($generated@@680  (=> (and (=> (and (and (<= ($generated@@268 0) $generated@@667) (< $generated@@667 $generated@@668)) (< $generated@@668 ($generated@@136 $generated@@660))) (<= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@667)))) ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@668)))))) (= (ControlFlow 0 19) 12)) $generated@@676)))
(let (($generated@@681  (=> (and (<= ($generated@@268 0) $generated@@667) (< $generated@@667 $generated@@668)) (and (=> (= (ControlFlow 0 13) (- 0 18)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (=> (< $generated@@668 ($generated@@136 $generated@@660)) (and (=> (= (ControlFlow 0 13) (- 0 17)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 13) (- 0 16)) (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@136 $generated@@660)))) (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@136 $generated@@660))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@136 $generated@@660)))) (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@136 $generated@@660))) (=> (and (<= ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@667)))) ($generated ($generated@@406 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@660) ($generated@@377 $generated@@668))))) (= (ControlFlow 0 13) 12)) $generated@@676)))))))))))))))
(let (($generated@@682  (=> (= $generated@@669 ($generated@@193 $generated@@138 $generated@@665 $generated@@60 false)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (=> (< ($generated@@136 $generated@@660) 2147483648) (and (=> (= (ControlFlow 0 20) 13) $generated@@681) (=> (= (ControlFlow 0 20) 19) $generated@@680))))))))
(let (($generated@@683  (=> (and (and (and ($generated@@152 $generated@@665) ($generated@@666 $generated@@665)) (and ($generated@@140 $generated@@660 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@660 ($generated@@157 $generated@@46) $generated@@665))) (and (and (<= ($generated@@268 (- 0 2147483648)) $generated@@670) (< $generated@@670 2147483648)) (and (= 1 $generated@@671) (= (ControlFlow 0 22) 20)))) $generated@@682)))
$generated@@683))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@191 (T@T) T@U)
(declare-fun $generated@@195 (T@U Int) T@U)
(declare-fun $generated@@196 (T@U) Int)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@209 (T@U T@U T@U) T@U)
(declare-fun $generated@@210 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U Int) T@U)
(declare-fun $generated@@274 (T@U T@U) T@U)
(declare-fun $generated@@275 (Int) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (Int) Int)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U Int) T@U)
(declare-fun $generated@@320 (T@U T@U T@U) Bool)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@365 (T@U) Int)
(declare-fun $generated@@366 (T@T) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@T) T@U)
(declare-fun $generated@@377 (T@T T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@T T@T) T@U)
(declare-fun $generated@@395 (T@T T@T) T@T)
(declare-fun $generated@@396 (T@T) T@T)
(declare-fun $generated@@397 (T@T) T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@T T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@496 (T@U T@U) T@U)
(declare-fun $generated@@504 (T@U T@U) T@U)
(declare-fun $generated@@512 (Int Int) Int)
(declare-fun $generated@@525 (T@T) T@U)
(declare-fun $generated@@549 () T@T)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@637 (T@U) Int)
(declare-fun $generated@@638 (T@U) Int)
(declare-fun $generated@@661 (T@U) T@U)
(declare-fun $generated@@662 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert  (and (and (forall (($generated@@156 T@T) ) (= ($generated@@1 ($generated@@154 $generated@@156)) 14)) (forall (($generated@@157 T@T) ) (! (= ($generated@@155 ($generated@@154 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 (type $generated@@159)))
(= (type ($generated@@153 $generated@@158 $generated@@159)) ($generated@@154 $generated@@160)))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@162)))
 (=> (and (= (type $generated@@161) ($generated@@154 $generated@@164)) (= (type $generated@@163) $generated@@164)) (= ($generated@@152 ($generated@@153 $generated@@161 $generated@@162) $generated@@163)  (or (= $generated@@162 $generated@@163) ($generated@@152 $generated@@161 $generated@@163)))))
 :pattern ( ($generated@@152 ($generated@@153 $generated@@161 $generated@@162) $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@168) $generated@@81)) (and (and ($generated@@165 $generated@@167) (and (not (= $generated@@168 $generated@@138)) (= ($generated@@139 $generated@@168) ($generated@@137 $generated@@166)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@167 $generated@@168) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@168)) $generated@@46 $generated@@167))
 :pattern ( ($generated@@136 $generated@@168) ($generated@@87 ($generated@@85 $generated@@167 $generated@@168) $generated@@60) ($generated@@137 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@2) ($generated@@140 $generated@@169 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@169 ($generated@@79 0)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@67)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@67) (= (type $generated@@173) $generated@@81)) (= (type $generated@@174) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@173 ($generated@@170 $generated@@172) $generated@@174) ($generated@@78 $generated@@173 ($generated@@137 $generated@@172) $generated@@174)))
 :pattern ( ($generated@@78 $generated@@173 ($generated@@170 $generated@@172) $generated@@174))
)))
(assert  (and (= ($generated@@1 $generated@@177) 15) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@178 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@176 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@67) (= (type $generated@@181) $generated@@67)) (= (type $generated@@182) $generated@@177)) ($generated@@140 $generated@@182 ($generated@@176 $generated@@180 $generated@@181))) ($generated@@175 $generated@@182))
 :pattern ( ($generated@@175 $generated@@182) ($generated@@140 $generated@@182 ($generated@@176 $generated@@180 $generated@@181)))
)))
(assert  (and (and (= ($generated@@1 $generated@@186) 16) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@184 $generated@@187))
))) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@188)) $generated@@186)
 :pattern ( ($generated@@185 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@177) (= (type $generated@@190) $generated@@177)) true) (= ($generated@@183 $generated@@189 $generated@@190)  (and (= ($generated@@184 $generated@@189) ($generated@@184 $generated@@190)) (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)))))
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@T) ) (! (= (type ($generated@@191 $generated@@192)) ($generated@@154 $generated@@192))
 :pattern ( ($generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
 (not ($generated@@152 ($generated@@191 $generated@@194) $generated@@193)))
 :pattern ( (let (($generated@@194 (type $generated@@193)))
($generated@@152 ($generated@@191 $generated@@194) $generated@@193)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 Int) ) (! (let (($generated@@199 ($generated@@155 (type $generated@@197))))
(= (type ($generated@@195 $generated@@197 $generated@@198)) ($generated@@154 $generated@@199)))
 :pattern ( ($generated@@195 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Int) ) (! (let (($generated@@203 (type $generated@@201)))
 (=> (= (type $generated@@200) ($generated@@154 $generated@@203)) (=> (and (<= 0 $generated@@202) (<= $generated@@202 ($generated@@196 $generated@@200))) (= ($generated@@195 ($generated@@153 $generated@@200 $generated@@201) $generated@@202) ($generated@@153 ($generated@@195 $generated@@200 $generated@@202) $generated@@201)))))
 :pattern ( ($generated@@195 ($generated@@153 $generated@@200 $generated@@201) $generated@@202))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@204 $generated@@206)) $generated@@67)
 :pattern ( ($generated@@204 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@207) ($generated@@80 $generated@@186 $generated@@2)) (= (type $generated@@208) $generated@@67)) ($generated@@140 $generated@@207 ($generated@@204 $generated@@208))) ($generated@@205 $generated@@207))
 :pattern ( ($generated@@140 $generated@@207 ($generated@@204 $generated@@208)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (= ($generated@@1 ($generated@@211 $generated@@215 $generated@@216)) 17)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@211 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@213 ($generated@@211 $generated@@219 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@211 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@213 (type $generated@@221))))
(= (type ($generated@@209 $generated@@221 $generated@@222 $generated@@223)) $generated@@224))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222 $generated@@223))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(let (($generated@@230 (type $generated@@226)))
(= (type ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@211 $generated@@230 $generated@@229))))
 :pattern ( ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@213 (type $generated@@231))))
 (=> (= (type $generated@@234) $generated@@235) (= ($generated@@209 ($generated@@214 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@232 $generated@@233) $generated@@234)))
 :weight 0
))) (and (and (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@238 $generated@@240) (= ($generated@@209 ($generated@@214 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@209 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
)) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or (= $generated@@245 $generated@@247) (= ($generated@@209 ($generated@@214 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@209 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (or true (= ($generated@@209 ($generated@@214 $generated@@249 $generated@@250 $generated@@251 $generated@@248) $generated@@252 $generated@@253) ($generated@@209 $generated@@249 $generated@@252 $generated@@253)))
 :weight 0
)))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ) (! (= (type ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@211 $generated@@81 $generated@@4))
 :pattern ( ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@70 (type $generated@@263))))
 (=> (and (and (and (and (= (type $generated@@258) $generated@@81) (= (type $generated@@259) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@260) ($generated@@69 $generated@@4))) (= (type $generated@@262) $generated@@81)) (= (type $generated@@263) ($generated@@69 $generated@@264))) (= ($generated@@0 ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))  (=> (and (not (= $generated@@262 $generated@@258)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@259 $generated@@262) $generated@@260))) $generated@@261))))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@177)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) $generated@@67)) (= (type $generated@@271) $generated@@186)) (= (type $generated@@272) $generated@@186)) (= ($generated@@140 ($generated@@265 $generated@@271 $generated@@272) ($generated@@176 $generated@@269 $generated@@270))  (and ($generated@@266 $generated@@271 $generated@@269) ($generated@@266 $generated@@272 $generated@@270))))
 :pattern ( ($generated@@140 ($generated@@265 $generated@@271 $generated@@272) ($generated@@176 $generated@@269 $generated@@270)))
)))
(assert  (and (and (forall (($generated@@276 T@U) ($generated@@277 Int) ) (! (let (($generated@@278 ($generated@@155 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276 $generated@@277)) ($generated@@154 $generated@@278)))
 :pattern ( ($generated@@273 $generated@@276 $generated@@277))
)) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@274 $generated@@279 $generated@@280)) ($generated@@154 $generated@@186))
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 Int) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@69 $generated@@186))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 Int) ($generated@@285 Int) ) (!  (=> (and (= (type $generated@@282) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@283) $generated@@81)) (=> (and (and (= (+ $generated@@284 1) $generated@@285) (<= 0 $generated@@284)) (<= $generated@@285 ($generated@@136 $generated@@283))) (= ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@285) ($generated@@153 ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@284) ($generated@@87 ($generated@@85 $generated@@282 $generated@@283) ($generated@@275 $generated@@284))))))
 :pattern ( ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@284) ($generated@@273 ($generated@@274 $generated@@282 $generated@@283) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@177) (= (type $generated@@287) $generated@@177)) (= ($generated@@183 $generated@@286 $generated@@287) (= $generated@@286 $generated@@287)))
 :pattern ( ($generated@@183 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 Int) ) (! (let (($generated@@290 ($generated@@155 (type $generated@@288))))
 (=> (and (= (type $generated@@288) ($generated@@154 $generated@@290)) (= $generated@@289 0)) (= ($generated@@195 $generated@@288 $generated@@289) $generated@@288)))
 :pattern ( ($generated@@195 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@67)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@294) $generated@@67)) (= ($generated@@140 $generated@@293 ($generated@@291 $generated@@294)) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@186) ($generated@@0 ($generated@@85 $generated@@293 $generated@@295))) ($generated@@266 $generated@@295 $generated@@294))
 :pattern ( ($generated@@85 $generated@@293 $generated@@295))
))))
 :pattern ( ($generated@@140 $generated@@293 ($generated@@291 $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@67)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@299) $generated@@67)) (= ($generated@@140 $generated@@298 ($generated@@296 $generated@@299)) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@186) ($generated@@0 ($generated@@85 $generated@@298 $generated@@300))) ($generated@@266 $generated@@300 $generated@@299))
 :pattern ( ($generated@@85 $generated@@298 $generated@@300))
))))
 :pattern ( ($generated@@140 $generated@@298 ($generated@@296 $generated@@299)))
)))
(assert (forall (($generated@@302 Int) ) (! (= ($generated@@301 $generated@@302) $generated@@302)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 (type $generated@@304)))
(= (type ($generated@@303 $generated@@304)) $generated@@305))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= ($generated@@303 $generated@@306) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@67)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@309) ($generated@@154 $generated@@186)) (= (type $generated@@310) $generated@@186)) (= (type $generated@@311) $generated@@67)) (and ($generated@@140 $generated@@309 ($generated@@307 $generated@@311)) ($generated@@266 $generated@@310 $generated@@311))) ($generated@@140 ($generated@@153 $generated@@309 $generated@@310) ($generated@@307 $generated@@311)))
 :pattern ( ($generated@@140 ($generated@@153 $generated@@309 $generated@@310) ($generated@@307 $generated@@311)))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 Int) ) (! (let (($generated@@315 ($generated@@155 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313 $generated@@314)) $generated@@315))
 :pattern ( ($generated@@312 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 Int) ($generated@@318 Int) ) (! (let (($generated@@319 ($generated@@155 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@154 $generated@@319)) (=> (and (and (<= 0 $generated@@318) (< $generated@@318 $generated@@317)) (< $generated@@318 ($generated@@196 $generated@@316))) (= ($generated@@312 ($generated@@273 $generated@@316 $generated@@317) $generated@@318) ($generated@@312 $generated@@316 $generated@@318)))))
 :weight 25
 :pattern ( ($generated@@312 ($generated@@273 $generated@@316 $generated@@317) $generated@@318))
 :pattern ( ($generated@@312 $generated@@316 $generated@@318) ($generated@@273 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@321) $generated@@67) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) $generated@@186)) (= (type $generated@@324) $generated@@186)) (= (type $generated@@325) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@165 $generated@@325)) (= ($generated@@78 ($generated@@265 $generated@@323 $generated@@324) ($generated@@176 $generated@@321 $generated@@322) $generated@@325)  (and ($generated@@320 $generated@@323 $generated@@321 $generated@@325) ($generated@@320 $generated@@324 $generated@@322 $generated@@325))))
 :pattern ( ($generated@@78 ($generated@@265 $generated@@323 $generated@@324) ($generated@@176 $generated@@321 $generated@@322) $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (! (let (($generated@@328 ($generated@@155 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@154 $generated@@328)) (=> (and (<= 0 $generated@@327) (<= $generated@@327 ($generated@@196 $generated@@326))) (= ($generated@@196 ($generated@@195 $generated@@326 $generated@@327)) (- ($generated@@196 $generated@@326) $generated@@327)))))
 :pattern ( ($generated@@196 ($generated@@195 $generated@@326 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@71)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@177) (= ($generated@@175 $generated@@331) (= ($generated@@329 $generated@@331) $generated@@63)))
 :pattern ( ($generated@@175 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 Int) ) (! (let (($generated@@335 ($generated@@155 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@154 $generated@@335)) (=> (and (<= 0 $generated@@334) (< $generated@@334 ($generated@@196 $generated@@333))) (< ($generated@@332 ($generated@@273 $generated@@333 $generated@@334)) ($generated@@332 $generated@@333)))))
 :pattern ( ($generated@@332 ($generated@@273 $generated@@333 $generated@@334)))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@177) ($generated@@175 $generated@@336)) (exists (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (and (and (= (type $generated@@337) $generated@@186) (= (type $generated@@338) $generated@@186)) (= $generated@@336 ($generated@@265 $generated@@337 $generated@@338)))
 :no-pattern (type $generated@@337)
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
)))
 :pattern ( ($generated@@175 $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= ($generated@@196 ($generated@@191 $generated@@339)) 0)
 :pattern ( ($generated@@191 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 Int) ) (! (let (($generated@@342 ($generated@@155 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@154 $generated@@342)) (=> (and (< 0 $generated@@341) (<= $generated@@341 ($generated@@196 $generated@@340))) (< ($generated@@332 ($generated@@195 $generated@@340 $generated@@341)) ($generated@@332 $generated@@340)))))
 :pattern ( ($generated@@332 ($generated@@195 $generated@@340 $generated@@341)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
 (=> (= (type $generated@@343) ($generated@@154 $generated@@345)) (= ($generated@@196 ($generated@@153 $generated@@343 $generated@@344)) (+ 1 ($generated@@196 $generated@@343)))))
 :pattern ( ($generated@@153 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@67) (= (type $generated@@347) $generated@@81)) (= ($generated@@140 $generated@@347 ($generated@@170 $generated@@346))  (and ($generated@@140 $generated@@347 ($generated@@137 $generated@@346)) (not (= $generated@@347 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@347 ($generated@@170 $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (= (type ($generated@@348 $generated@@349)) $generated@@186)
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@67) (= (type $generated@@352) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@320 ($generated@@348 $generated@@350) $generated@@351 $generated@@352) ($generated@@78 $generated@@350 $generated@@351 $generated@@352)))
 :pattern ( ($generated@@320 ($generated@@348 $generated@@350) $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@353) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@354) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@355) $generated@@186)) (= (type $generated@@356) $generated@@67)) ($generated@@145 $generated@@353 $generated@@354)) ($generated@@320 $generated@@355 $generated@@356 $generated@@353)) ($generated@@320 $generated@@355 $generated@@356 $generated@@354))
 :pattern ( ($generated@@145 $generated@@353 $generated@@354) ($generated@@320 $generated@@355 $generated@@356 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@357) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@358) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@360) $generated@@67)) ($generated@@145 $generated@@357 $generated@@358)) ($generated@@78 $generated@@359 $generated@@360 $generated@@357)) ($generated@@78 $generated@@359 $generated@@360 $generated@@358))
 :pattern ( ($generated@@145 $generated@@357 $generated@@358) ($generated@@78 $generated@@359 $generated@@360 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 Int) ($generated@@363 Int) ) (! (let (($generated@@364 ($generated@@155 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@154 $generated@@364)) (=> (and (and (<= 0 $generated@@362) (<= 0 $generated@@363)) (< $generated@@363 (- ($generated@@196 $generated@@361) $generated@@362))) (= ($generated@@312 ($generated@@195 $generated@@361 $generated@@362) $generated@@363) ($generated@@312 $generated@@361 (+ $generated@@363 $generated@@362))))))
 :weight 25
 :pattern ( ($generated@@312 ($generated@@195 $generated@@361 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@T) ) (! (= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@367 $generated@@2))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@83 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@80 $generated@@369 $generated@@2)) (and (= (= ($generated@@365 $generated@@368) 0) (= $generated@@368 ($generated@@366 $generated@@369))) (=> (not (= ($generated@@365 $generated@@368) 0)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) (< 0 ($generated ($generated@@85 $generated@@368 $generated@@370))))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (= (type ($generated@@371 $generated@@372)) $generated@@72)
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@373)) $generated@@61) (= ($generated@@371 ($generated@@137 $generated@@373)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@67) (and (= ($generated@@76 ($generated@@170 $generated@@374)) $generated@@62) (= ($generated@@371 ($generated@@170 $generated@@374)) $generated@@65)))
 :pattern ( ($generated@@170 $generated@@374))
)))
(assert  (and (and (and (and (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (= ($generated@@1 ($generated@@377 $generated@@380 $generated@@381)) 18)) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@378 ($generated@@377 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@377 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@379 ($generated@@377 $generated@@384 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@377 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@378 (type $generated@@386))))
(= (type ($generated@@375 $generated@@386)) ($generated@@80 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@386))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= (type ($generated@@376 $generated@@388 $generated@@389)) ($generated@@377 $generated@@388 $generated@@389))
 :pattern ( ($generated@@376 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@T) ) (! (let (($generated@@392 (type $generated@@390)))
 (not ($generated@@0 ($generated@@85 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390))))
 :pattern ( (let (($generated@@392 (type $generated@@390)))
($generated@@85 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390)))
)))
(assert  (and (and (and (and (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (= ($generated@@1 ($generated@@395 $generated@@398 $generated@@399)) 19)) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@396 ($generated@@395 $generated@@400 $generated@@401)) $generated@@400)
 :pattern ( ($generated@@395 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@T) ($generated@@403 T@T) ) (! (= ($generated@@397 ($generated@@395 $generated@@402 $generated@@403)) $generated@@403)
 :pattern ( ($generated@@395 $generated@@402 $generated@@403))
))) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@396 (type $generated@@404))))
(= (type ($generated@@393 $generated@@404)) ($generated@@80 $generated@@405 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@404))
))) (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (! (= (type ($generated@@394 $generated@@406 $generated@@407)) ($generated@@395 $generated@@406 $generated@@407))
 :pattern ( ($generated@@394 $generated@@406 $generated@@407))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@T) ) (! (let (($generated@@410 (type $generated@@408)))
 (not ($generated@@0 ($generated@@85 ($generated@@393 ($generated@@394 $generated@@410 $generated@@409)) $generated@@408))))
 :pattern ( (let (($generated@@410 (type $generated@@408)))
($generated@@85 ($generated@@393 ($generated@@394 $generated@@410 $generated@@409)) $generated@@408)))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@83 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@80 $generated@@412 $generated@@2)) (= ($generated@@205 $generated@@411) (forall (($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@412) (and (<= 0 ($generated ($generated@@85 $generated@@411 $generated@@413))) (<= ($generated ($generated@@85 $generated@@411 $generated@@413)) ($generated@@365 $generated@@411))))
 :pattern ( ($generated@@85 $generated@@411 $generated@@413))
)))))
 :pattern ( ($generated@@205 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@67) (= (type $generated@@415) $generated@@81)) (= ($generated@@140 $generated@@415 ($generated@@137 $generated@@414))  (or (= $generated@@415 $generated@@138) (= ($generated@@139 $generated@@415) ($generated@@137 $generated@@414)))))
 :pattern ( ($generated@@140 $generated@@415 ($generated@@137 $generated@@414)))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 Int) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
 (=> (= (type $generated@@416) ($generated@@154 $generated@@419)) (and (=> (= $generated@@417 ($generated@@196 $generated@@416)) (= ($generated@@312 ($generated@@153 $generated@@416 $generated@@418) $generated@@417) $generated@@418)) (=> (not (= $generated@@417 ($generated@@196 $generated@@416))) (= ($generated@@312 ($generated@@153 $generated@@416 $generated@@418) $generated@@417) ($generated@@312 $generated@@416 $generated@@417))))))
 :pattern ( ($generated@@312 ($generated@@153 $generated@@416 $generated@@418) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@379 (type $generated@@420))))
(let (($generated@@422 ($generated@@378 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@377 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@376 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@420) $generated@@423)))
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@375 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@379 (type $generated@@425))))
(= (type ($generated@@424 $generated@@425)) ($generated@@80 $generated@@426 $generated@@4)))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@379 (type $generated@@427))))
(let (($generated@@429 ($generated@@378 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@377 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@376 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@428) ($generated@@0 ($generated@@85 ($generated@@424 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@424 $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@397 (type $generated@@431))))
(let (($generated@@433 ($generated@@396 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@395 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@394 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@431) $generated@@434)))
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@393 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@397 (type $generated@@436))))
(= (type ($generated@@435 $generated@@436)) ($generated@@80 $generated@@437 $generated@@4)))
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@397 (type $generated@@438))))
(let (($generated@@440 ($generated@@396 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@395 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@394 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@439) ($generated@@0 ($generated@@85 ($generated@@435 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@435 $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@443) $generated@@81)) (forall (($generated@@444 Int) ) (!  (=> (and (<= 0 $generated@@444) (< $generated@@444 ($generated@@196 ($generated@@274 $generated@@442 $generated@@443)))) (= ($generated@@312 ($generated@@274 $generated@@442 $generated@@443) $generated@@444) ($generated@@87 ($generated@@85 $generated@@442 $generated@@443) ($generated@@275 $generated@@444))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@442 $generated@@443) ($generated@@275 $generated@@444)))
 :pattern ( ($generated@@312 ($generated@@274 $generated@@442 $generated@@443) $generated@@444))
)))
 :pattern ( ($generated@@274 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@80 $generated@@186 $generated@@2)) (= (type $generated@@446) $generated@@67)) (= ($generated@@140 $generated@@445 ($generated@@204 $generated@@446)) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@186) (< 0 ($generated ($generated@@85 $generated@@445 $generated@@447)))) ($generated@@266 $generated@@447 $generated@@446))
 :pattern ( ($generated@@85 $generated@@445 $generated@@447))
))))
 :pattern ( ($generated@@140 $generated@@445 ($generated@@204 $generated@@446)))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 Int) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
 (=> (= (type $generated@@448) ($generated@@154 $generated@@451)) (= ($generated@@152 ($generated@@273 $generated@@448 $generated@@449) $generated@@450) (exists (($generated@@452 Int) ) (!  (and (and (and (<= 0 $generated@@452) (< $generated@@452 $generated@@449)) (< $generated@@452 ($generated@@196 $generated@@448))) (= ($generated@@312 $generated@@448 $generated@@452) $generated@@450))
 :pattern ( ($generated@@312 $generated@@448 $generated@@452))
)))))
 :pattern ( ($generated@@152 ($generated@@273 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 (type $generated@@454)))
 (=> (= (type $generated@@453) ($generated@@154 $generated@@455)) (= ($generated@@152 $generated@@453 $generated@@454) (exists (($generated@@456 Int) ) (!  (and (and (<= 0 $generated@@456) (< $generated@@456 ($generated@@196 $generated@@453))) (= ($generated@@312 $generated@@453 $generated@@456) $generated@@454))
 :pattern ( ($generated@@312 $generated@@453 $generated@@456))
)))))
 :pattern ( ($generated@@152 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@291 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@186) ($generated@@0 ($generated@@85 $generated@@457 $generated@@460))) ($generated@@320 $generated@@460 $generated@@458 $generated@@459))
 :pattern ( ($generated@@85 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@291 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (= (type $generated@@461) ($generated@@80 $generated@@186 $generated@@4)) (= (type $generated@@462) $generated@@67)) (= (type $generated@@463) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@461 ($generated@@296 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@186) ($generated@@0 ($generated@@85 $generated@@461 $generated@@464))) ($generated@@320 $generated@@464 $generated@@462 $generated@@463))
 :pattern ( ($generated@@85 $generated@@461 $generated@@464))
))))
 :pattern ( ($generated@@78 $generated@@461 ($generated@@296 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
(= ($generated ($generated@@85 ($generated@@366 $generated@@466) $generated@@465)) 0))
 :pattern ( (let (($generated@@466 (type $generated@@465)))
($generated@@85 ($generated@@366 $generated@@466) $generated@@465)))
)))
(assert  (and (and (forall (($generated@@470 T@U) ) (! (= (type ($generated@@467 $generated@@470)) ($generated@@80 $generated@@186 $generated@@4))
 :pattern ( ($generated@@467 $generated@@470))
)) (forall (($generated@@471 T@T) ($generated@@472 T@U) ) (! (= (type ($generated@@468 $generated@@471 $generated@@472)) $generated@@471)
 :pattern ( ($generated@@468 $generated@@471 $generated@@472))
))) (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@379 (type $generated@@473))))
(let (($generated@@475 ($generated@@378 (type $generated@@473))))
(= (type ($generated@@469 $generated@@473)) ($generated@@80 $generated@@475 $generated@@474))))
 :pattern ( ($generated@@469 $generated@@473))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@477) $generated@@186)) (= ($generated@@0 ($generated@@85 ($generated@@467 $generated@@476) $generated@@477))  (and ($generated@@0 ($generated@@85 ($generated@@375 $generated@@476) ($generated@@184 ($generated@@468 $generated@@177 $generated@@477)))) (= ($generated@@85 ($generated@@469 $generated@@476) ($generated@@184 ($generated@@468 $generated@@177 $generated@@477))) ($generated@@185 ($generated@@468 $generated@@177 $generated@@477))))))
 :pattern ( ($generated@@85 ($generated@@467 $generated@@476) $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) ($generated@@80 $generated@@186 $generated@@4))
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@397 (type $generated@@481))))
(let (($generated@@483 ($generated@@396 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481)) ($generated@@80 $generated@@483 $generated@@482))))
 :pattern ( ($generated@@479 $generated@@481))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@485) $generated@@186)) (= ($generated@@0 ($generated@@85 ($generated@@478 $generated@@484) $generated@@485))  (and ($generated@@0 ($generated@@85 ($generated@@393 $generated@@484) ($generated@@184 ($generated@@468 $generated@@177 $generated@@485)))) (= ($generated@@85 ($generated@@479 $generated@@484) ($generated@@184 ($generated@@468 $generated@@177 $generated@@485))) ($generated@@185 ($generated@@468 $generated@@177 $generated@@485))))))
 :pattern ( ($generated@@85 ($generated@@478 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
(let (($generated@@489 ($generated@@378 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@377 $generated@@489 $generated@@488)) (= ($generated@@0 ($generated@@85 ($generated@@424 $generated@@486) $generated@@487)) (exists (($generated@@490 T@U) ) (!  (and (= (type $generated@@490) $generated@@489) (and ($generated@@0 ($generated@@85 ($generated@@375 $generated@@486) $generated@@490)) (= $generated@@487 ($generated@@85 ($generated@@469 $generated@@486) $generated@@490))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@486) $generated@@490))
 :pattern ( ($generated@@85 ($generated@@469 $generated@@486) $generated@@490))
))))))
 :pattern ( ($generated@@85 ($generated@@424 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
(let (($generated@@494 ($generated@@396 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@395 $generated@@494 $generated@@493)) (= ($generated@@0 ($generated@@85 ($generated@@435 $generated@@491) $generated@@492)) (exists (($generated@@495 T@U) ) (!  (and (= (type $generated@@495) $generated@@494) (and ($generated@@0 ($generated@@85 ($generated@@393 $generated@@491) $generated@@495)) (= $generated@@492 ($generated@@85 ($generated@@479 $generated@@491) $generated@@495))))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@491) $generated@@495))
 :pattern ( ($generated@@85 ($generated@@479 $generated@@491) $generated@@495))
))))))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@499) $generated@@503))) (and ($generated@@320 ($generated@@85 ($generated@@469 $generated@@499) $generated@@503) $generated@@501 $generated@@502) ($generated@@320 $generated@@503 $generated@@500 $generated@@502)))
 :pattern ( ($generated@@85 ($generated@@469 $generated@@499) $generated@@503))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@499) $generated@@503))
))))
 :pattern ( ($generated@@78 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@508) $generated@@67)) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@507) $generated@@511))) (and ($generated@@320 ($generated@@85 ($generated@@479 $generated@@507) $generated@@511) $generated@@509 $generated@@510) ($generated@@320 $generated@@511 $generated@@508 $generated@@510)))
 :pattern ( ($generated@@85 ($generated@@479 $generated@@507) $generated@@511))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@507) $generated@@511))
))))
 :pattern ( ($generated@@78 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ($generated@@514 Int) ) (! (= ($generated@@512 $generated@@513 $generated@@514) (div $generated@@513 $generated@@514))
 :pattern ( ($generated@@512 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@155 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@154 $generated@@517)) (=> (and (<= 0 $generated@@516) (<= $generated@@516 ($generated@@196 $generated@@515))) (= ($generated@@196 ($generated@@273 $generated@@515 $generated@@516)) $generated@@516))))
 :pattern ( ($generated@@196 ($generated@@273 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@518) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@519) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@520) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@518 $generated@@520))) (and ($generated@@145 $generated@@518 $generated@@519) ($generated@@145 $generated@@519 $generated@@520))) ($generated@@145 $generated@@518 $generated@@520))
 :pattern ( ($generated@@145 $generated@@518 $generated@@519) ($generated@@145 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 Int) ) (!  (=> (and (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@523) $generated@@81)) (=> (and (and (and ($generated@@165 $generated@@522) (and (not (= $generated@@523 $generated@@138)) (= ($generated@@139 $generated@@523) ($generated@@137 $generated@@521)))) (and (<= 0 $generated@@524) (< $generated@@524 ($generated@@136 $generated@@523)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@522 $generated@@523) $generated@@60))) ($generated@@320 ($generated@@87 ($generated@@85 $generated@@522 $generated@@523) ($generated@@275 $generated@@524)) $generated@@521 $generated@@522)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@522 $generated@@523) ($generated@@275 $generated@@524)) ($generated@@137 $generated@@521))
)))
(assert (forall (($generated@@526 T@T) ) (! (= (type ($generated@@525 $generated@@526)) ($generated@@80 $generated@@526 $generated@@4))
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@397 (type $generated@@527))))
(let (($generated@@529 ($generated@@396 (type $generated@@527))))
 (=> (= (type $generated@@527) ($generated@@395 $generated@@529 $generated@@528)) (= (= $generated@@527 ($generated@@394 $generated@@529 $generated@@528)) (= ($generated@@393 $generated@@527) ($generated@@525 $generated@@529))))))
 :pattern ( ($generated@@393 $generated@@527))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@397 (type $generated@@530))))
(let (($generated@@532 ($generated@@396 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@395 $generated@@532 $generated@@531)) (= (= $generated@@530 ($generated@@394 $generated@@532 $generated@@531)) (= ($generated@@435 $generated@@530) ($generated@@525 $generated@@531))))))
 :pattern ( ($generated@@435 $generated@@530))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@397 (type $generated@@533))))
(let (($generated@@535 ($generated@@396 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@395 $generated@@535 $generated@@534)) (= (= $generated@@533 ($generated@@394 $generated@@535 $generated@@534)) (= ($generated@@478 $generated@@533) ($generated@@525 $generated@@186))))))
 :pattern ( ($generated@@478 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@379 (type $generated@@536))))
(let (($generated@@538 ($generated@@378 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@377 $generated@@538 $generated@@537)) (or (= $generated@@536 ($generated@@376 $generated@@538 $generated@@537)) (exists (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (and (and (= (type $generated@@539) $generated@@186) (= (type $generated@@540) $generated@@186)) ($generated@@0 ($generated@@85 ($generated@@467 $generated@@536) ($generated@@348 ($generated@@265 $generated@@539 $generated@@540)))))
 :no-pattern (type $generated@@539)
 :no-pattern (type $generated@@540)
 :no-pattern ($generated $generated@@539)
 :no-pattern ($generated@@0 $generated@@539)
 :no-pattern ($generated $generated@@540)
 :no-pattern ($generated@@0 $generated@@540)
))))))
 :pattern ( ($generated@@467 $generated@@536))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@397 (type $generated@@541))))
(let (($generated@@543 ($generated@@396 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@395 $generated@@543 $generated@@542)) (or (= $generated@@541 ($generated@@394 $generated@@543 $generated@@542)) (exists (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (and (and (= (type $generated@@544) $generated@@186) (= (type $generated@@545) $generated@@186)) ($generated@@0 ($generated@@85 ($generated@@478 $generated@@541) ($generated@@348 ($generated@@265 $generated@@544 $generated@@545)))))
 :no-pattern (type $generated@@544)
 :no-pattern (type $generated@@545)
 :no-pattern ($generated $generated@@544)
 :no-pattern ($generated@@0 $generated@@544)
 :no-pattern ($generated $generated@@545)
 :no-pattern ($generated@@0 $generated@@545)
))))))
 :pattern ( ($generated@@478 $generated@@541))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@186) ($generated@@266 $generated@@546 $generated@@46)) (and (= ($generated@@348 ($generated@@468 $generated@@2 $generated@@546)) $generated@@546) ($generated@@140 ($generated@@468 $generated@@2 $generated@@546) $generated@@46)))
 :pattern ( ($generated@@266 $generated@@546 $generated@@46))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@186) ($generated@@266 $generated@@547 $generated@@47)) (and (= ($generated@@348 ($generated@@468 $generated@@3 $generated@@547)) $generated@@547) ($generated@@140 ($generated@@468 $generated@@3 $generated@@547) $generated@@47)))
 :pattern ( ($generated@@266 $generated@@547 $generated@@47))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@186) ($generated@@266 $generated@@548 $generated@@44)) (and (= ($generated@@348 ($generated@@468 $generated@@4 $generated@@548)) $generated@@548) ($generated@@140 ($generated@@468 $generated@@4 $generated@@548) $generated@@44)))
 :pattern ( ($generated@@266 $generated@@548 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@549) 20))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@186) ($generated@@266 $generated@@550 $generated@@45)) (and (= ($generated@@348 ($generated@@468 $generated@@549 $generated@@550)) $generated@@550) ($generated@@140 ($generated@@468 $generated@@549 $generated@@550) $generated@@45)))
 :pattern ( ($generated@@266 $generated@@550 $generated@@45))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@67) (= ($generated@@266 ($generated@@348 $generated@@551) $generated@@552) ($generated@@140 $generated@@551 $generated@@552)))
 :pattern ( ($generated@@266 ($generated@@348 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@81) (<= 0 ($generated@@136 $generated@@553)))
 :no-pattern (type $generated@@553)
 :no-pattern ($generated $generated@@553)
 :no-pattern ($generated@@0 $generated@@553)
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@83 (type $generated@@554))))
 (=> (= (type $generated@@554) ($generated@@80 $generated@@555 $generated@@2)) (<= 0 ($generated@@365 $generated@@554))))
 :pattern ( ($generated@@365 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@155 (type $generated@@556))))
 (=> (= (type $generated@@556) ($generated@@154 $generated@@557)) (<= 0 ($generated@@196 $generated@@556))))
 :pattern ( ($generated@@196 $generated@@556))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@67)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@67) (= (type $generated@@561) $generated@@67)) (= ($generated@@558 ($generated@@496 $generated@@560 $generated@@561)) $generated@@560))
 :pattern ( ($generated@@496 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@67)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@67) (= (type $generated@@565) $generated@@67)) (= ($generated@@562 ($generated@@496 $generated@@564 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@496 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@67) (= (type $generated@@567) $generated@@67)) (= ($generated@@76 ($generated@@496 $generated@@566 $generated@@567)) $generated@@58))
 :pattern ( ($generated@@496 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@67)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= ($generated@@568 ($generated@@504 $generated@@570 $generated@@571)) $generated@@570))
 :pattern ( ($generated@@504 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@67)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@67) (= (type $generated@@575) $generated@@67)) (= ($generated@@572 ($generated@@504 $generated@@574 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@504 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@67) (= (type $generated@@577) $generated@@67)) (= ($generated@@76 ($generated@@504 $generated@@576 $generated@@577)) $generated@@59))
 :pattern ( ($generated@@504 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@186) (= (type $generated@@579) $generated@@186)) (= ($generated@@329 ($generated@@265 $generated@@578 $generated@@579)) $generated@@63))
 :pattern ( ($generated@@265 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@67)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@67) (= (type $generated@@583) $generated@@67)) (= ($generated@@580 ($generated@@176 $generated@@582 $generated@@583)) $generated@@582))
 :pattern ( ($generated@@176 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@67)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@67) (= (type $generated@@587) $generated@@67)) (= ($generated@@584 ($generated@@176 $generated@@586 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@176 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@186) (= (type $generated@@589) $generated@@186)) (= ($generated@@184 ($generated@@265 $generated@@588 $generated@@589)) $generated@@588))
 :pattern ( ($generated@@265 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@186) (= (type $generated@@591) $generated@@186)) (= ($generated@@185 ($generated@@265 $generated@@590 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@265 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@154 $generated@@186)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@592 ($generated@@307 $generated@@593) $generated@@594) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@196 $generated@@592))) ($generated@@320 ($generated@@312 $generated@@592 $generated@@595) $generated@@593 $generated@@594))
 :pattern ( ($generated@@312 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@307 $generated@@593) $generated@@594))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@596 ($generated@@79 $generated@@597)) $generated@@597)
 :pattern ( ($generated@@79 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@67)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@67) (= ($generated@@598 ($generated@@291 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@291 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@67) (= ($generated@@76 ($generated@@291 $generated@@601)) $generated@@54))
 :pattern ( ($generated@@291 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@67)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@67) (= ($generated@@602 ($generated@@296 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@296 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@67) (= ($generated@@76 ($generated@@296 $generated@@605)) $generated@@55))
 :pattern ( ($generated@@296 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@67)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@67) (= ($generated@@606 ($generated@@204 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@204 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@67) (= ($generated@@76 ($generated@@204 $generated@@609)) $generated@@56))
 :pattern ( ($generated@@204 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@67)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@67) (= ($generated@@610 ($generated@@307 $generated@@612)) $generated@@612))
 :pattern ( ($generated@@307 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@67) (= ($generated@@76 ($generated@@307 $generated@@613)) $generated@@57))
 :pattern ( ($generated@@307 $generated@@613))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@75 ($generated@@275 $generated@@614)) 1)
 :pattern ( ($generated@@275 $generated@@614))
)))
(assert (forall (($generated@@616 Int) ) (! (= ($generated@@615 ($generated@@275 $generated@@616)) $generated@@616)
 :pattern ( ($generated@@275 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@67)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@67) (= ($generated@@617 ($generated@@137 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@137 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@67)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@67) (= ($generated@@620 ($generated@@170 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@170 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@623)))
(= ($generated@@468 $generated@@624 ($generated@@348 $generated@@623)) $generated@@623))
 :pattern ( ($generated@@348 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) $generated@@67)) (= ($generated@@140 $generated@@625 ($generated@@496 $generated@@626 $generated@@627)) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@625) $generated@@628))) (and ($generated@@266 ($generated@@85 ($generated@@469 $generated@@625) $generated@@628) $generated@@627) ($generated@@266 $generated@@628 $generated@@626)))
 :pattern ( ($generated@@85 ($generated@@469 $generated@@625) $generated@@628))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@625) $generated@@628))
))))
 :pattern ( ($generated@@140 $generated@@625 ($generated@@496 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@630) $generated@@67)) (= (type $generated@@631) $generated@@67)) (= ($generated@@140 $generated@@629 ($generated@@504 $generated@@630 $generated@@631)) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@186) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@629) $generated@@632))) (and ($generated@@266 ($generated@@85 ($generated@@479 $generated@@629) $generated@@632) $generated@@631) ($generated@@266 $generated@@632 $generated@@630)))
 :pattern ( ($generated@@85 ($generated@@479 $generated@@629) $generated@@632))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@629) $generated@@632))
))))
 :pattern ( ($generated@@140 $generated@@629 ($generated@@504 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 Int) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@67) (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@635) $generated@@81)) (and (and ($generated@@165 $generated@@634) (and (not (= $generated@@635 $generated@@138)) (= ($generated@@139 $generated@@635) ($generated@@137 $generated@@633)))) (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@136 $generated@@635))))) ($generated@@266 ($generated@@87 ($generated@@85 $generated@@634 $generated@@635) ($generated@@275 $generated@@636)) $generated@@633))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@634 $generated@@635) ($generated@@275 $generated@@636)) ($generated@@137 $generated@@633))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@186) (= (type $generated@@640) $generated@@186)) (< ($generated@@637 $generated@@639) ($generated@@638 ($generated@@265 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@265 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@186) (= (type $generated@@642) $generated@@186)) (< ($generated@@637 $generated@@642) ($generated@@638 ($generated@@265 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@265 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@186) (= (type $generated@@644) $generated@@67)) (= (type $generated@@645) $generated@@67)) ($generated@@266 $generated@@643 ($generated@@496 $generated@@644 $generated@@645))) (and (= ($generated@@348 ($generated@@468 ($generated@@377 $generated@@186 $generated@@186) $generated@@643)) $generated@@643) ($generated@@140 ($generated@@468 ($generated@@377 $generated@@186 $generated@@186) $generated@@643) ($generated@@496 $generated@@644 $generated@@645))))
 :pattern ( ($generated@@266 $generated@@643 ($generated@@496 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@186) (= (type $generated@@647) $generated@@67)) (= (type $generated@@648) $generated@@67)) ($generated@@266 $generated@@646 ($generated@@504 $generated@@647 $generated@@648))) (and (= ($generated@@348 ($generated@@468 ($generated@@395 $generated@@186 $generated@@186) $generated@@646)) $generated@@646) ($generated@@140 ($generated@@468 ($generated@@395 $generated@@186 $generated@@186) $generated@@646) ($generated@@504 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@266 $generated@@646 ($generated@@504 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@67) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) $generated@@186)) ($generated@@266 $generated@@651 ($generated@@176 $generated@@649 $generated@@650))) (and (= ($generated@@348 ($generated@@468 $generated@@177 $generated@@651)) $generated@@651) ($generated@@140 ($generated@@468 $generated@@177 $generated@@651) ($generated@@176 $generated@@649 $generated@@650))))
 :pattern ( ($generated@@266 $generated@@651 ($generated@@176 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@652)))
 (not ($generated@@0 ($generated@@85 ($generated@@525 $generated@@653) $generated@@652))))
 :pattern ( (let (($generated@@653 (type $generated@@652)))
($generated@@85 ($generated@@525 $generated@@653) $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@654) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@656) $generated@@81)) (=> (and (and (and ($generated@@165 $generated@@654) ($generated@@165 $generated@@655)) ($generated@@145 $generated@@654 $generated@@655)) (= ($generated@@85 $generated@@654 $generated@@656) ($generated@@85 $generated@@655 $generated@@656))) (= ($generated@@274 $generated@@654 $generated@@656) ($generated@@274 $generated@@655 $generated@@656))))
 :pattern ( ($generated@@274 $generated@@655 $generated@@656) ($generated@@145 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@658) $generated@@81)) (= ($generated@@196 ($generated@@274 $generated@@657 $generated@@658)) ($generated@@136 $generated@@658)))
 :pattern ( ($generated@@196 ($generated@@274 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@67) (= (type $generated@@660) $generated@@67)) (and (= ($generated@@76 ($generated@@176 $generated@@659 $generated@@660)) $generated@@64) (= ($generated@@371 ($generated@@176 $generated@@659 $generated@@660)) $generated@@66)))
 :pattern ( ($generated@@176 $generated@@659 $generated@@660))
)))
(assert  (and (forall (($generated@@663 T@U) ) (! (let (($generated@@664 ($generated@@155 (type $generated@@663))))
(= (type ($generated@@661 $generated@@663)) ($generated@@154 $generated@@664)))
 :pattern ( ($generated@@661 $generated@@663))
)) (forall (($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@155 (type $generated@@665))))
(= (type ($generated@@662 $generated@@665)) $generated@@666))
 :pattern ( ($generated@@662 $generated@@665))
))))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@668)))
 (=> (= (type $generated@@667) ($generated@@154 $generated@@669)) (and (= ($generated@@661 ($generated@@153 $generated@@667 $generated@@668)) $generated@@667) (= ($generated@@662 ($generated@@153 $generated@@667 $generated@@668)) $generated@@668))))
 :pattern ( ($generated@@153 $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@177) (= ($generated@@637 ($generated@@348 $generated@@670)) ($generated@@638 $generated@@670)))
 :pattern ( ($generated@@637 ($generated@@348 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 Int) ($generated@@673 T@U) ) (! (let (($generated@@674 (type $generated@@673)))
 (=> (= (type $generated@@671) ($generated@@154 $generated@@674)) (= ($generated@@152 ($generated@@195 $generated@@671 $generated@@672) $generated@@673) (exists (($generated@@675 Int) ) (!  (and (and (and (<= 0 $generated@@672) (<= $generated@@672 $generated@@675)) (< $generated@@675 ($generated@@196 $generated@@671))) (= ($generated@@312 $generated@@671 $generated@@675) $generated@@673))
 :pattern ( ($generated@@312 $generated@@671 $generated@@675))
)))))
 :pattern ( ($generated@@152 ($generated@@195 $generated@@671 $generated@@672) $generated@@673))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@676) $generated@@186) ($generated@@266 $generated@@676 ($generated@@79 0))) (and (= ($generated@@348 ($generated@@468 $generated@@2 $generated@@676)) $generated@@676) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@676) ($generated@@79 0))))
 :pattern ( ($generated@@266 $generated@@676 ($generated@@79 0)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) $generated@@186) (= (type $generated@@678) $generated@@67)) ($generated@@266 $generated@@677 ($generated@@291 $generated@@678))) (and (= ($generated@@348 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@677)) $generated@@677) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@677) ($generated@@291 $generated@@678))))
 :pattern ( ($generated@@266 $generated@@677 ($generated@@291 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@186) (= (type $generated@@680) $generated@@67)) ($generated@@266 $generated@@679 ($generated@@296 $generated@@680))) (and (= ($generated@@348 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@679)) $generated@@679) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@4) $generated@@679) ($generated@@296 $generated@@680))))
 :pattern ( ($generated@@266 $generated@@679 ($generated@@296 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@186) (= (type $generated@@682) $generated@@67)) ($generated@@266 $generated@@681 ($generated@@204 $generated@@682))) (and (= ($generated@@348 ($generated@@468 ($generated@@80 $generated@@186 $generated@@2) $generated@@681)) $generated@@681) ($generated@@140 ($generated@@468 ($generated@@80 $generated@@186 $generated@@2) $generated@@681) ($generated@@204 $generated@@682))))
 :pattern ( ($generated@@266 $generated@@681 ($generated@@204 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@683) $generated@@186) (= (type $generated@@684) $generated@@67)) ($generated@@266 $generated@@683 ($generated@@307 $generated@@684))) (and (= ($generated@@348 ($generated@@468 ($generated@@154 $generated@@186) $generated@@683)) $generated@@683) ($generated@@140 ($generated@@468 ($generated@@154 $generated@@186) $generated@@683) ($generated@@307 $generated@@684))))
 :pattern ( ($generated@@266 $generated@@683 ($generated@@307 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@67) (= (type $generated@@686) $generated@@186)) ($generated@@266 $generated@@686 ($generated@@137 $generated@@685))) (and (= ($generated@@348 ($generated@@468 $generated@@81 $generated@@686)) $generated@@686) ($generated@@140 ($generated@@468 $generated@@81 $generated@@686) ($generated@@137 $generated@@685))))
 :pattern ( ($generated@@266 $generated@@686 ($generated@@137 $generated@@685)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) $generated@@67) (= (type $generated@@688) $generated@@186)) ($generated@@266 $generated@@688 ($generated@@170 $generated@@687))) (and (= ($generated@@348 ($generated@@468 $generated@@81 $generated@@688)) $generated@@688) ($generated@@140 ($generated@@468 $generated@@81 $generated@@688) ($generated@@170 $generated@@687))))
 :pattern ( ($generated@@266 $generated@@688 ($generated@@170 $generated@@687)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 Int) ($generated@@691 Int) ) (! (let (($generated@@692 ($generated@@155 (type $generated@@689))))
 (=> (= (type $generated@@689) ($generated@@154 $generated@@692)) (=> (and (and (<= 0 $generated@@690) (<= $generated@@690 $generated@@691)) (< $generated@@691 ($generated@@196 $generated@@689))) (= ($generated@@312 ($generated@@195 $generated@@689 $generated@@690) (- $generated@@691 $generated@@690)) ($generated@@312 $generated@@689 $generated@@691)))))
 :weight 25
 :pattern ( ($generated@@312 $generated@@689 $generated@@691) ($generated@@195 $generated@@689 $generated@@690))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@693) ($generated@@80 $generated@@186 $generated@@2)) (= (type $generated@@694) $generated@@67)) (= (type $generated@@695) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@693 ($generated@@204 $generated@@694) $generated@@695) (forall (($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@186) (< 0 ($generated ($generated@@85 $generated@@693 $generated@@696)))) ($generated@@320 $generated@@696 $generated@@694 $generated@@695))
 :pattern ( ($generated@@85 $generated@@693 $generated@@696))
))))
 :pattern ( ($generated@@78 $generated@@693 ($generated@@204 $generated@@694) $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 Int) ($generated@@699 Int) ) (! (let (($generated@@700 ($generated@@155 (type $generated@@697))))
 (=> (= (type $generated@@697) ($generated@@154 $generated@@700)) (=> (and (and (<= 0 $generated@@698) (<= 0 $generated@@699)) (<= (+ $generated@@698 $generated@@699) ($generated@@196 $generated@@697))) (= ($generated@@195 ($generated@@195 $generated@@697 $generated@@698) $generated@@699) ($generated@@195 $generated@@697 (+ $generated@@698 $generated@@699))))))
 :pattern ( ($generated@@195 ($generated@@195 $generated@@697 $generated@@698) $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) $generated@@177) (= (type $generated@@702) $generated@@67)) (= (type $generated@@703) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@165 $generated@@703) (and ($generated@@175 $generated@@701) (exists (($generated@@704 T@U) ) (!  (and (= (type $generated@@704) $generated@@67) ($generated@@78 $generated@@701 ($generated@@176 $generated@@702 $generated@@704) $generated@@703))
 :pattern ( ($generated@@78 $generated@@701 ($generated@@176 $generated@@702 $generated@@704) $generated@@703))
))))) ($generated@@320 ($generated@@184 $generated@@701) $generated@@702 $generated@@703))
 :pattern ( ($generated@@320 ($generated@@184 $generated@@701) $generated@@702 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) $generated@@177) (= (type $generated@@706) $generated@@67)) (= (type $generated@@707) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@165 $generated@@707) (and ($generated@@175 $generated@@705) (exists (($generated@@708 T@U) ) (!  (and (= (type $generated@@708) $generated@@67) ($generated@@78 $generated@@705 ($generated@@176 $generated@@708 $generated@@706) $generated@@707))
 :pattern ( ($generated@@78 $generated@@705 ($generated@@176 $generated@@708 $generated@@706) $generated@@707))
))))) ($generated@@320 ($generated@@185 $generated@@705) $generated@@706 $generated@@707))
 :pattern ( ($generated@@320 ($generated@@185 $generated@@705) $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) $generated@@186) (= (type $generated@@710) $generated@@186)) (= ($generated@@265 ($generated@@303 $generated@@709) ($generated@@303 $generated@@710)) ($generated@@303 ($generated@@265 $generated@@709 $generated@@710))))
 :pattern ( ($generated@@265 ($generated@@303 $generated@@709) ($generated@@303 $generated@@710)))
)))
(assert (forall (($generated@@711 Int) ) (! (= ($generated@@348 ($generated@@8 ($generated@@301 $generated@@711))) ($generated@@303 ($generated@@348 ($generated@@8 $generated@@711))))
 :pattern ( ($generated@@348 ($generated@@8 ($generated@@301 $generated@@711))))
)))
(assert (forall (($generated@@712 T@U) ) (! (= ($generated@@348 ($generated@@303 $generated@@712)) ($generated@@303 ($generated@@348 $generated@@712)))
 :pattern ( ($generated@@348 ($generated@@303 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ) (! (let (($generated@@714 ($generated@@155 (type $generated@@713))))
 (=> (and (= (type $generated@@713) ($generated@@154 $generated@@714)) (= ($generated@@196 $generated@@713) 0)) (= $generated@@713 ($generated@@191 $generated@@714))))
 :pattern ( ($generated@@196 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 Int) ) (! (let (($generated@@717 ($generated@@155 (type $generated@@715))))
 (=> (and (= (type $generated@@715) ($generated@@154 $generated@@717)) (= $generated@@716 0)) (= ($generated@@273 $generated@@715 $generated@@716) ($generated@@191 $generated@@717))))
 :pattern ( ($generated@@273 $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (! (let (($generated@@721 (type $generated@@719)))
 (=> (and (and (= (type $generated@@718) ($generated@@80 $generated@@721 $generated@@2)) (= (type $generated@@720) $generated@@2)) (<= 0 ($generated $generated@@720))) (= ($generated@@365 ($generated@@86 $generated@@718 $generated@@719 $generated@@720)) (+ (- ($generated@@365 $generated@@718) ($generated ($generated@@85 $generated@@718 $generated@@719))) ($generated $generated@@720)))))
 :pattern ( ($generated@@365 ($generated@@86 $generated@@718 $generated@@719 $generated@@720)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@723) $generated@@2)) ($generated@@78 $generated@@723 $generated@@46 $generated@@722))
 :pattern ( ($generated@@78 $generated@@723 $generated@@46 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@725) $generated@@3)) ($generated@@78 $generated@@725 $generated@@47 $generated@@724))
 :pattern ( ($generated@@78 $generated@@725 $generated@@47 $generated@@724))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@727) $generated@@4)) ($generated@@78 $generated@@727 $generated@@44 $generated@@726))
 :pattern ( ($generated@@78 $generated@@727 $generated@@44 $generated@@726))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@728) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@729) $generated@@549)) ($generated@@78 $generated@@729 $generated@@45 $generated@@728))
 :pattern ( ($generated@@78 $generated@@729 $generated@@45 $generated@@728))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (= (type $generated@@730) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@731) $generated@@186)) ($generated@@78 $generated@@731 $generated@@48 $generated@@730))
 :pattern ( ($generated@@78 $generated@@731 $generated@@48 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@732) ($generated@@154 $generated@@186)) (= (type $generated@@733) $generated@@67)) (= ($generated@@140 $generated@@732 ($generated@@307 $generated@@733)) (forall (($generated@@734 Int) ) (!  (=> (and (<= 0 $generated@@734) (< $generated@@734 ($generated@@196 $generated@@732))) ($generated@@266 ($generated@@312 $generated@@732 $generated@@734) $generated@@733))
 :pattern ( ($generated@@312 $generated@@732 $generated@@734))
))))
 :pattern ( ($generated@@140 $generated@@732 ($generated@@307 $generated@@733)))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 Int) ) (!  (=> (= (type $generated@@735) ($generated@@154 $generated@@186)) (=> (and (<= 0 $generated@@736) (< $generated@@736 ($generated@@196 $generated@@735))) (< ($generated@@638 ($generated@@468 $generated@@177 ($generated@@312 $generated@@735 $generated@@736))) ($generated@@332 $generated@@735))))
 :pattern ( ($generated@@638 ($generated@@468 $generated@@177 ($generated@@312 $generated@@735 $generated@@736))))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (and (= (type $generated@@737) ($generated@@377 $generated@@186 $generated@@186)) (= (type $generated@@738) $generated@@67)) (= (type $generated@@739) $generated@@67)) ($generated@@140 $generated@@737 ($generated@@496 $generated@@738 $generated@@739))) (and (and ($generated@@140 ($generated@@375 $generated@@737) ($generated@@291 $generated@@738)) ($generated@@140 ($generated@@424 $generated@@737) ($generated@@291 $generated@@739))) ($generated@@140 ($generated@@467 $generated@@737) ($generated@@291 ($generated@@176 $generated@@738 $generated@@739)))))
 :pattern ( ($generated@@140 $generated@@737 ($generated@@496 $generated@@738 $generated@@739)))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (and (= (type $generated@@740) ($generated@@395 $generated@@186 $generated@@186)) (= (type $generated@@741) $generated@@67)) (= (type $generated@@742) $generated@@67)) ($generated@@140 $generated@@740 ($generated@@504 $generated@@741 $generated@@742))) (and (and ($generated@@140 ($generated@@393 $generated@@740) ($generated@@296 $generated@@741)) ($generated@@140 ($generated@@435 $generated@@740) ($generated@@296 $generated@@742))) ($generated@@140 ($generated@@478 $generated@@740) ($generated@@296 ($generated@@176 $generated@@741 $generated@@742)))))
 :pattern ( ($generated@@140 $generated@@740 ($generated@@504 $generated@@741 $generated@@742)))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@2) ($generated@@140 $generated@@743 $generated@@46))
 :pattern ( ($generated@@140 $generated@@743 $generated@@46))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@3) ($generated@@140 $generated@@744 $generated@@47))
 :pattern ( ($generated@@140 $generated@@744 $generated@@47))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@4) ($generated@@140 $generated@@745 $generated@@44))
 :pattern ( ($generated@@140 $generated@@745 $generated@@44))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) $generated@@549) ($generated@@140 $generated@@746 $generated@@45))
 :pattern ( ($generated@@140 $generated@@746 $generated@@45))
)))
(assert (forall (($generated@@747 T@U) ) (!  (=> (= (type $generated@@747) $generated@@186) ($generated@@140 $generated@@747 $generated@@48))
 :pattern ( ($generated@@140 $generated@@747 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@748 () T@U)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () Int)
(declare-fun $generated@@751 () Int)
(declare-fun $generated@@752 () Int)
(declare-fun $generated@@753 () Int)
(declare-fun $generated@@754 () Bool)
(declare-fun $generated@@755 () Int)
(declare-fun $generated@@756 () Int)
(declare-fun $generated@@757 () Int)
(declare-fun $generated@@758 () Int)
(declare-fun $generated@@759 () Int)
(declare-fun $generated@@760 () Int)
(declare-fun $generated@@761 () Int)
(declare-fun $generated@@762 () Int)
(declare-fun $generated@@763 () Int)
(declare-fun $generated@@764 () Int)
(declare-fun $generated@@765 () Int)
(declare-fun $generated@@766 () Int)
(declare-fun $generated@@767 () Int)
(declare-fun $generated@@768 () Int)
(declare-fun $generated@@769 () Int)
(declare-fun $generated@@770 () Int)
(declare-fun $generated@@771 () Int)
(declare-fun $generated@@772 () Int)
(declare-fun $generated@@773 () Int)
(declare-fun $generated@@774 () T@U)
(declare-fun $generated@@775 () Int)
(declare-fun $generated@@776 () Int)
(declare-fun $generated@@777 (T@U) Bool)
(declare-fun $generated@@778 () Int)
(declare-fun $generated@@779 () Int)
(declare-fun $generated@@780 () Int)
(declare-fun $generated@@781 () Int)
(declare-fun $generated@@782 () Int)
(assert  (and (and (= (type $generated@@749) $generated@@81) (= (type $generated@@748) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@774) ($generated@@211 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 60) (let (($generated@@783 true))
(let (($generated@@784  (=> (and ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@750) ($generated@@348 ($generated@@8 $generated@@751))) (= (ControlFlow 0 37) 33)) $generated@@783)))
(let (($generated@@785  (=> (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@750) ($generated@@348 ($generated@@8 $generated@@751)))) (and (=> (= (ControlFlow 0 34) (- 0 36)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 34) (- 0 35)) (and (<= 0 $generated@@752) (<= $generated@@752 ($generated@@136 $generated@@749)))) (=> (= (ControlFlow 0 34) 33) $generated@@783)))))))
(let (($generated@@786  (=> (and (and (<= ($generated@@301 0) $generated@@750) (<= $generated@@750 $generated@@752)) (<= $generated@@752 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 38) (- 0 40)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 38) (- 0 39)) (and (<= 0 $generated@@750) (<= $generated@@750 ($generated@@136 $generated@@749)))) (and (=> (= (ControlFlow 0 38) 34) $generated@@785) (=> (= (ControlFlow 0 38) 37) $generated@@784))))))))
(let (($generated@@787  (=> (and (not (and (<= ($generated@@301 0) $generated@@750) (<= $generated@@750 $generated@@752))) (= (ControlFlow 0 44) 38)) $generated@@786)))
(let (($generated@@788  (=> (and (<= ($generated@@301 0) $generated@@750) (<= $generated@@750 $generated@@752)) (and (=> (= (ControlFlow 0 41) (- 0 43)) (not (= $generated@@749 $generated@@138))) (=> (= $generated@@753 ($generated@@136 $generated@@749)) (and (=> (= (ControlFlow 0 41) (- 0 42)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@753) (< $generated@@753 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@753) (< $generated@@753 2147483648)) (=> (= (ControlFlow 0 41) 38) $generated@@786))))))))
(let (($generated@@789  (=> (< $generated@@750 ($generated@@301 0)) (and (=> (= (ControlFlow 0 46) 41) $generated@@788) (=> (= (ControlFlow 0 46) 44) $generated@@787)))))
(let (($generated@@790  (=> (<= ($generated@@301 0) $generated@@750) (and (=> (= (ControlFlow 0 45) 41) $generated@@788) (=> (= (ControlFlow 0 45) 44) $generated@@787)))))
(let (($generated@@791  (=> (and (not $generated@@754) (= $generated@@755 ($generated@@301 0))) (and (=> (= (ControlFlow 0 47) (- 0 48)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@755) (< $generated@@755 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@755) (< $generated@@755 2147483648)) (and (=> (= (ControlFlow 0 47) 45) $generated@@790) (=> (= (ControlFlow 0 47) 46) $generated@@789)))))))
(let (($generated@@792  (and (=> (= (ControlFlow 0 10) (- 0 16)) (or (<= 0 $generated@@756) (= (- $generated@@757 $generated@@758) $generated@@756))) (=> (or (<= 0 $generated@@756) (= (- $generated@@757 $generated@@758) $generated@@756)) (and (=> (= (ControlFlow 0 10) (- 0 15)) (< (- $generated@@757 $generated@@758) $generated@@756)) (=> (< (- $generated@@757 $generated@@758) $generated@@756) (and (=> (= (ControlFlow 0 10) (- 0 14)) (=> $generated@@754 (<= ($generated@@301 0) $generated@@758))) (=> (=> $generated@@754 (<= ($generated@@301 0) $generated@@758)) (and (=> (= (ControlFlow 0 10) (- 0 13)) (=> $generated@@754 (<= $generated@@758 $generated@@757))) (=> (=> $generated@@754 (<= $generated@@758 $generated@@757)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (=> $generated@@754 (<= $generated@@757 ($generated@@136 $generated@@749)))) (=> (=> $generated@@754 (<= $generated@@757 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> $generated@@754 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@758) ($generated@@348 ($generated@@8 $generated@@751)))))) (=> (=> $generated@@754 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@758) ($generated@@348 ($generated@@8 $generated@@751))))) (=> (= (ControlFlow 0 10) (- 0 9)) (=> $generated@@754 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@757) ($generated@@348 ($generated@@8 $generated@@751))))))))))))))))))))
(let (($generated@@793  (=> (and (< ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@759)))) $generated@@751) (= $generated@@760 ($generated@@301 1))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@760) (< $generated@@760 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@760) (< $generated@@760 2147483648)) (=> (= $generated@@761 (+ $generated@@759 1)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@761) (< $generated@@761 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@761) (< $generated@@761 2147483648)) (=> (and (and (= $generated@@762 (+ $generated@@759 1)) (= $generated@@758 $generated@@762)) (and (= $generated@@757 $generated@@752) (= (ControlFlow 0 18) 10))) $generated@@792)))))))))
(let (($generated@@794  (=> (and (and (< $generated@@751 ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@759))))) (= $generated@@758 $generated@@750)) (and (= $generated@@757 $generated@@759) (= (ControlFlow 0 17) 10))) $generated@@792)))
(let (($generated@@795  (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> (<= ($generated@@301 0) $generated@@763) (< $generated@@763 ($generated@@136 $generated@@749)))) (=> (=> (<= ($generated@@301 0) $generated@@763) (< $generated@@763 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> (<= ($generated@@301 0) $generated@@763) (= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@763)))) $generated@@751))) (=> (=> (<= ($generated@@301 0) $generated@@763) (= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@763)))) $generated@@751)) (=> (= (ControlFlow 0 3) (- 0 2)) (=> (< $generated@@763 0) (not ($generated@@152 ($generated@@274 $generated@@748 $generated@@749) ($generated@@348 ($generated@@8 $generated@@751))))))))))))
(let (($generated@@796  (=> (<= $generated@@751 ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@759))))) (=> (and (= $generated@@763 $generated@@759) (= (ControlFlow 0 8) 3)) $generated@@795))))
(let (($generated@@797  (=> (<= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@759)))) $generated@@751) (and (=> (= (ControlFlow 0 21) (- 0 23)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (and (<= 0 $generated@@759) (< $generated@@759 ($generated@@136 $generated@@749)))) (=> (and (<= 0 $generated@@759) (< $generated@@759 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 21) 18) $generated@@793) (=> (= (ControlFlow 0 21) 8) $generated@@796)))))))))
(let (($generated@@798  (=> (< $generated@@750 $generated@@752) (=> (and (= $generated@@756 (- $generated@@752 $generated@@750)) (= $generated@@764 (- $generated@@752 $generated@@750))) (and (=> (= (ControlFlow 0 24) (- 0 31)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@764) (< $generated@@764 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@764) (< $generated@@764 2147483648)) (=> (= $generated@@765 ($generated@@301 2)) (and (=> (= (ControlFlow 0 24) (- 0 30)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@765) (< $generated@@765 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@765) (< $generated@@765 2147483648)) (and (=> (= (ControlFlow 0 24) (- 0 29)) (not (= ($generated@@301 2) 0))) (=> (not (= ($generated@@301 2) 0)) (=> (= $generated@@766 ($generated@@512 (- $generated@@752 $generated@@750) ($generated@@301 2))) (and (=> (= (ControlFlow 0 24) (- 0 28)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@766) (< $generated@@766 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@766) (< $generated@@766 2147483648)) (=> (= $generated@@767 (+ $generated@@750 ($generated@@512 (- $generated@@752 $generated@@750) ($generated@@301 2)))) (and (=> (= (ControlFlow 0 24) (- 0 27)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@767) (< $generated@@767 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@767) (< $generated@@767 2147483648)) (=> (= $generated@@759 (+ $generated@@750 ($generated@@512 (- $generated@@752 $generated@@750) ($generated@@301 2)))) (and (=> (= (ControlFlow 0 24) (- 0 26)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (and (<= 0 $generated@@759) (< $generated@@759 ($generated@@136 $generated@@749)))) (=> (and (<= 0 $generated@@759) (< $generated@@759 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 24) 17) $generated@@794) (=> (= (ControlFlow 0 24) 21) $generated@@797))))))))))))))))))))))))
(let (($generated@@799  (=> (and (<= $generated@@752 $generated@@750) (= $generated@@768 ($generated@@301 (- 0 1)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@768) (< $generated@@768 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@768) (< $generated@@768 2147483648)) (=> (= $generated@@769 ($generated@@301 (- 0 1))) (=> (and (= $generated@@763 $generated@@769) (= (ControlFlow 0 6) 3)) $generated@@795)))))))
(let (($generated@@800  (=> $generated@@754 (and (=> (= (ControlFlow 0 32) 6) $generated@@799) (=> (= (ControlFlow 0 32) 24) $generated@@798)))))
(let (($generated@@801  (and (=> (= (ControlFlow 0 49) 47) $generated@@791) (=> (= (ControlFlow 0 49) 32) $generated@@800))))
(let (($generated@@802 true))
(let (($generated@@803  (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@750) (< $generated@@750 2147483648)) (=> (and (and (<= ($generated@@301 (- 0 2147483648)) $generated@@752) (< $generated@@752 2147483648)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@770) (< $generated@@770 2147483648))) (=> (and (and (and (and (and (and (not false) (<= 0 $generated@@750)) (= $generated@@771 0)) (= $generated@@772 0)) (and (<= (- 0 2147483648) $generated@@773) (< $generated@@773 2147483648))) (and (and (=> $generated@@754 true) (=> $generated@@754 (<= ($generated@@301 0) $generated@@750))) (and (=> $generated@@754 (<= $generated@@750 $generated@@752)) (=> $generated@@754 (<= $generated@@752 ($generated@@136 $generated@@749)))))) (and (and (and (=> $generated@@754 true) (=> $generated@@754 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@750) ($generated@@348 ($generated@@8 $generated@@751)))))) (and (=> $generated@@754 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@752) ($generated@@348 ($generated@@8 $generated@@751))))) (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@81) (=> (and (not (= $generated@@804 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@748 $generated@@804) $generated@@60))) (= ($generated@@85 $generated@@748 $generated@@804) ($generated@@85 $generated@@748 $generated@@804))))
 :pattern ( ($generated@@85 $generated@@748 $generated@@804))
)))) (and (and ($generated@@145 $generated@@748 $generated@@748) (forall (($generated@@805 T@U) ($generated@@806 T@U) ) (! (let (($generated@@807 ($generated@@70 (type $generated@@806))))
 (=> (and (and (= (type $generated@@805) $generated@@81) (= (type $generated@@806) ($generated@@69 $generated@@807))) (and (not (= $generated@@805 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@748 $generated@@805) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@748 $generated@@805) $generated@@806) ($generated@@87 ($generated@@85 $generated@@748 $generated@@805) $generated@@806)) ($generated@@0 ($generated@@209 $generated@@774 $generated@@805 $generated@@806)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@748 $generated@@805) $generated@@806))
))) (and (<= (- $generated@@752 $generated@@750) $generated@@775) (=> (= (- $generated@@752 $generated@@750) $generated@@775) true))))) (and (=> (= (ControlFlow 0 50) 1) $generated@@802) (=> (= (ControlFlow 0 50) 49) $generated@@801)))))))
(let (($generated@@808  (=> (and (= $generated@@774 ($generated@@210 $generated@@138 $generated@@748 $generated@@60 false)) (= $generated@@772 ($generated@@301 0))) (and (=> (= (ControlFlow 0 51) (- 0 59)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@772) (< $generated@@772 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@772) (< $generated@@772 2147483648)) (=> (= $generated@@771 ($generated@@301 0)) (and (=> (= (ControlFlow 0 51) (- 0 58)) (not (= $generated@@749 $generated@@138))) (=> (not (= $generated@@749 $generated@@138)) (=> (= $generated@@773 ($generated@@136 $generated@@749)) (and (=> (= (ControlFlow 0 51) (- 0 57)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@773) (< $generated@@773 2147483648))) (=> (and (<= ($generated@@301 (- 0 2147483648)) $generated@@773) (< $generated@@773 2147483648)) (=> (and (= $generated@@776 ($generated@@136 $generated@@749)) (= $generated@@775 (- $generated@@776 $generated@@771))) (and (=> (= (ControlFlow 0 51) (- 0 56)) (=> $generated@@754 (<= ($generated@@301 0) $generated@@771))) (=> (=> $generated@@754 (<= ($generated@@301 0) $generated@@771)) (and (=> (= (ControlFlow 0 51) (- 0 55)) (=> $generated@@754 (<= $generated@@771 $generated@@776))) (=> (=> $generated@@754 (<= $generated@@771 $generated@@776)) (and (=> (= (ControlFlow 0 51) (- 0 54)) (=> $generated@@754 (<= $generated@@776 ($generated@@136 $generated@@749)))) (=> (=> $generated@@754 (<= $generated@@776 ($generated@@136 $generated@@749))) (and (=> (= (ControlFlow 0 51) (- 0 53)) (=> $generated@@754 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@771) ($generated@@348 ($generated@@8 $generated@@751)))))) (=> (=> $generated@@754 (not ($generated@@152 ($generated@@273 ($generated@@274 $generated@@748 $generated@@749) $generated@@771) ($generated@@348 ($generated@@8 $generated@@751))))) (and (=> (= (ControlFlow 0 51) (- 0 52)) (=> $generated@@754 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@776) ($generated@@348 ($generated@@8 $generated@@751)))))) (=> (=> $generated@@754 (not ($generated@@152 ($generated@@195 ($generated@@274 $generated@@748 $generated@@749) $generated@@776) ($generated@@348 ($generated@@8 $generated@@751))))) (=> (= (ControlFlow 0 51) 50) $generated@@803)))))))))))))))))))))))
(let (($generated@@809  (=> (and ($generated@@165 $generated@@748) ($generated@@777 $generated@@748)) (=> (and (and ($generated@@140 $generated@@749 ($generated@@170 $generated@@46)) ($generated@@78 $generated@@749 ($generated@@170 $generated@@46) $generated@@748)) (and (<= ($generated@@301 (- 0 2147483648)) $generated@@778) (< $generated@@778 2147483648))) (=> (and (and (and (and (<= ($generated@@301 (- 0 2147483648)) $generated@@779) (< $generated@@779 2147483648)) true) (and (and (<= ($generated@@301 (- 0 2147483648)) $generated@@780) (< $generated@@780 2147483648)) true)) (and (and (and (<= ($generated@@301 (- 0 2147483648)) $generated@@781) (< $generated@@781 2147483648)) true) (and (and (= 1 $generated@@782) (< ($generated@@136 $generated@@749) 2147483648)) (and (forall (($generated@@810 Int) ($generated@@811 Int) ) (!  (=> true (=> (and (and (<= ($generated@@301 0) $generated@@810) (< $generated@@810 $generated@@811)) (< $generated@@811 ($generated@@136 $generated@@749))) (<= ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@810)))) ($generated ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@811)))))))
 :pattern ( ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@811))) ($generated@@468 $generated@@2 ($generated@@87 ($generated@@85 $generated@@748 $generated@@749) ($generated@@275 $generated@@810))))
)) (= (ControlFlow 0 60) 51))))) $generated@@808)))))
$generated@@809))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
