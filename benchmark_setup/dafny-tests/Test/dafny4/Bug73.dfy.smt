(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@T) T@U)
(declare-fun $generated@@410 () T@T)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@U Int) T@U)
(declare-fun $generated@@462 (T@U) Int)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= (type $generated@@333) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@145) ($generated@@0 ($generated@@81 $generated@@331 $generated@@334))) ($generated@@236 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@81 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@236 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@340) $generated@@339)) 0))
 :pattern ( (let (($generated@@340 (type $generated@@339)))
($generated@@81 ($generated@@262 $generated@@340) $generated@@339)))
)))
(assert  (and (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@341 $generated@@344)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@341 $generated@@344))
)) (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@342 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@271 (type $generated@@347))))
(let (($generated@@349 ($generated@@270 (type $generated@@347))))
(= (type ($generated@@343 $generated@@347)) ($generated@@76 $generated@@349 $generated@@348))))
 :pattern ( ($generated@@343 $generated@@347))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@351) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351)))) (= ($generated@@81 ($generated@@343 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@351))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@289 (type $generated@@355))))
(let (($generated@@357 ($generated@@288 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@76 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@359) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359)))) (= ($generated@@81 ($generated@@353 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@359))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(let (($generated@@363 ($generated@@270 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@269 $generated@@363 $generated@@362)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@360) $generated@@361)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@360) $generated@@364)) (= $generated@@361 ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@360) $generated@@364))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@288 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@287 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@365) $generated@@369))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@64)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@373) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))) (and ($generated@@236 ($generated@@81 ($generated@@343 $generated@@373) $generated@@377) $generated@@375 $generated@@376) ($generated@@236 $generated@@377 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@64)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))) (and ($generated@@236 ($generated@@81 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@236 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@T) ) (! (= (type ($generated@@386 $generated@@387)) ($generated@@76 $generated@@387 $generated@@4))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@289 (type $generated@@388))))
(let (($generated@@390 ($generated@@288 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@287 $generated@@390 $generated@@389)) (= (= $generated@@388 ($generated@@286 $generated@@390 $generated@@389)) (= ($generated@@285 $generated@@388) ($generated@@386 $generated@@390))))))
 :pattern ( ($generated@@285 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@289 (type $generated@@391))))
(let (($generated@@393 ($generated@@288 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@287 $generated@@393 $generated@@392)) (= (= $generated@@391 ($generated@@286 $generated@@393 $generated@@392)) (= ($generated@@321 $generated@@391) ($generated@@386 $generated@@392))))))
 :pattern ( ($generated@@321 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@289 (type $generated@@394))))
(let (($generated@@396 ($generated@@288 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@287 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@286 $generated@@396 $generated@@395)) (= ($generated@@352 $generated@@394) ($generated@@386 $generated@@145))))))
 :pattern ( ($generated@@352 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@271 (type $generated@@397))))
(let (($generated@@399 ($generated@@270 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@269 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@268 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (and (and (= (type $generated@@400) $generated@@145) (= (type $generated@@401) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@397) ($generated@@256 ($generated@@211 $generated@@400 $generated@@401)))))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@341 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@289 (type $generated@@402))))
(let (($generated@@404 ($generated@@288 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@287 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@286 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@145) (= (type $generated@@406) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@402) ($generated@@256 ($generated@@211 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@352 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@212 $generated@@407 $generated@@46)) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@407)) $generated@@407) ($generated@@132 ($generated@@342 $generated@@2 $generated@@407) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@407 $generated@@46))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@145) ($generated@@212 $generated@@408 $generated@@47)) (and (= ($generated@@256 ($generated@@342 $generated@@3 $generated@@408)) $generated@@408) ($generated@@132 ($generated@@342 $generated@@3 $generated@@408) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@408 $generated@@47))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@44)) (and (= ($generated@@256 ($generated@@342 $generated@@4 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@342 $generated@@4 $generated@@409) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@410) 20))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@45)) (and (= ($generated@@256 ($generated@@342 $generated@@410 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@342 $generated@@410 $generated@@411) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@45))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@412) $generated@@413) ($generated@@132 $generated@@412 $generated@@413)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@79 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@76 $generated@@415 $generated@@2)) (<= 0 ($generated@@261 $generated@@414))))
 :pattern ( ($generated@@261 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@251 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@250 $generated@@417)) (<= 0 ($generated@@249 $generated@@416))))
 :pattern ( ($generated@@249 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@64) (= (type $generated@@421) $generated@@64)) (= ($generated@@418 ($generated@@370 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@370 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@370 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@370 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@72 ($generated@@370 $generated@@426 $generated@@427)) $generated@@58))
 :pattern ( ($generated@@370 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@378 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@378 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@378 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@378 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@378 $generated@@436 $generated@@437)) $generated@@59))
 :pattern ( ($generated@@378 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@438 $generated@@439)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@135 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@135 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@135 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@135 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert  (and (forall (($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@454))
)) (forall (($generated@@455 T@U) ($generated@@456 Int) ) (! (let (($generated@@457 ($generated@@251 (type $generated@@455))))
(= (type ($generated@@453 $generated@@455 $generated@@456)) $generated@@457))
 :pattern ( ($generated@@453 $generated@@455 $generated@@456))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (= (type $generated@@458) ($generated@@250 $generated@@145)) (= (type $generated@@459) $generated@@64)) (= (type $generated@@460) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460) (forall (($generated@@461 Int) ) (!  (=> (and (<= 0 $generated@@461) (< $generated@@461 ($generated@@249 $generated@@458))) ($generated@@236 ($generated@@453 $generated@@458 $generated@@461) $generated@@459 $generated@@460))
 :pattern ( ($generated@@453 $generated@@458 $generated@@461))
))))
 :pattern ( ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 Int) ) (! (= ($generated@@462 ($generated@@75 $generated@@463)) $generated@@463)
 :pattern ( ($generated@@75 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@464 ($generated@@221 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@467)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@226 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@226 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@471)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@150 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@150 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@475)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@452 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@452 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@452 $generated@@479)) $generated@@57))
 :pattern ( ($generated@@452 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(= ($generated@@342 $generated@@481 ($generated@@256 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@256 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))) (and ($generated@@212 ($generated@@81 ($generated@@343 $generated@@482) $generated@@485) $generated@@484) ($generated@@212 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@482) $generated@@485))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))) (and ($generated@@212 ($generated@@81 ($generated@@353 $generated@@486) $generated@@489) $generated@@488) ($generated@@212 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) (= (type $generated@@493) $generated@@145)) (< ($generated@@490 $generated@@492) ($generated@@491 ($generated@@211 $generated@@492 $generated@@493))))
 :pattern ( ($generated@@211 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@490 $generated@@495) ($generated@@491 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498))) (and (= ($generated@@256 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496)) $generated@@496) ($generated@@132 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496) ($generated@@370 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501))) (and (= ($generated@@256 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499)) $generated@@499) ($generated@@132 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499) ($generated@@378 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@145)) ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503))) (and (= ($generated@@256 ($generated@@342 $generated@@136 $generated@@504)) $generated@@504) ($generated@@132 ($generated@@342 $generated@@136 $generated@@504) ($generated@@135 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 $generated@@506) $generated@@505))))
 :pattern ( (let (($generated@@506 (type $generated@@505)))
($generated@@81 ($generated@@386 $generated@@506) $generated@@505)))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@509 $generated@@510)) $generated@@62) (= ($generated@@507 ($generated@@135 $generated@@509 $generated@@510)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@136) (= ($generated@@490 ($generated@@256 $generated@@511)) ($generated@@491 $generated@@511)))
 :pattern ( ($generated@@490 ($generated@@256 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) ($generated@@212 $generated@@512 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@512)) $generated@@512) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@512) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@75 0)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@221 $generated@@514))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513) ($generated@@221 $generated@@514))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@221 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@226 $generated@@516))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@226 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@226 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@150 $generated@@518))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517) ($generated@@150 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@150 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@452 $generated@@520))) (and (= ($generated@@256 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519) ($generated@@452 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@452 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@521 $generated@@524)))) ($generated@@236 $generated@@524 $generated@@522 $generated@@523))
 :pattern ( ($generated@@81 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@136) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@527) (and ($generated@@134 $generated@@525) (exists (($generated@@528 T@U) ) (!  (and (= (type $generated@@528) $generated@@64) ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
))))) ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@136) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@531) (and ($generated@@134 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
))))) ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)) ($generated@@231 ($generated@@211 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@535)) ($generated@@231 ($generated@@256 $generated@@535)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@251 (type $generated@@536))))
 (=> (and (= (type $generated@@536) ($generated@@250 $generated@@537)) (= ($generated@@249 $generated@@536) 0)) (= $generated@@536 ($generated@@248 $generated@@537))))
 :pattern ( ($generated@@249 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@539)))
 (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@541 $generated@@2)) (= (type $generated@@540) $generated@@2)) (<= 0 ($generated $generated@@540))) (= ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)) (+ (- ($generated@@261 $generated@@538) ($generated ($generated@@81 $generated@@538 $generated@@539))) ($generated $generated@@540)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@543) $generated@@2)) ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
 :pattern ( ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@545) $generated@@3)) ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
 :pattern ( ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@547) $generated@@4)) ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
 :pattern ( ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@410)) ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@145)) ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@250 $generated@@145)) (= (type $generated@@553) $generated@@64)) (= ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@249 $generated@@552))) ($generated@@212 ($generated@@453 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@453 $generated@@552 $generated@@554))
))))
 :pattern ( ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (= (type $generated@@556) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@249 $generated@@556))) (< ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))) ($generated@@555 $generated@@556))))
 :pattern ( ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560))) (and (and ($generated@@132 ($generated@@267 $generated@@558) ($generated@@221 $generated@@559)) ($generated@@132 ($generated@@310 $generated@@558) ($generated@@221 $generated@@560))) ($generated@@132 ($generated@@341 $generated@@558) ($generated@@221 ($generated@@135 $generated@@559 $generated@@560)))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@285 $generated@@561) ($generated@@226 $generated@@562)) ($generated@@132 ($generated@@321 $generated@@561) ($generated@@226 $generated@@563))) ($generated@@132 ($generated@@352 $generated@@561) ($generated@@226 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@2) ($generated@@132 $generated@@564 $generated@@46))
 :pattern ( ($generated@@132 $generated@@564 $generated@@46))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@3) ($generated@@132 $generated@@565 $generated@@47))
 :pattern ( ($generated@@132 $generated@@565 $generated@@47))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@4) ($generated@@132 $generated@@566 $generated@@44))
 :pattern ( ($generated@@132 $generated@@566 $generated@@44))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@410) ($generated@@132 $generated@@567 $generated@@45))
 :pattern ( ($generated@@132 $generated@@567 $generated@@45))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@145) ($generated@@132 $generated@@568 $generated@@48))
 :pattern ( ($generated@@132 $generated@@568 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@569 () T@U)
(declare-fun $generated@@570 () Int)
(declare-fun $generated@@571 () Int)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 (T@U) Bool)
(declare-fun $generated@@576 () Int)
(assert  (and (and (and (= (type $generated@@569) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@572) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@573) $generated@@77)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@577  (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@569) ($generated@@256 ($generated@@8 $generated@@570))))) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@570 $generated@@571))))))
(let (($generated@@578  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@267 $generated@@569) ($generated@@256 ($generated@@8 $generated@@570))))) (= (ControlFlow 0 5) 2)) $generated@@577)))
(let (($generated@@579  (=> (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@569) ($generated@@256 ($generated@@8 $generated@@570)))) (= (ControlFlow 0 4) 2)) $generated@@577)))
(let (($generated@@580  (=> (= $generated@@572 ($generated@@156 $generated@@573 $generated@@574 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@579) (=> (= (ControlFlow 0 6) 5) $generated@@578)))))
(let (($generated@@581  (=> (and ($generated@@235 $generated@@574) ($generated@@575 $generated@@574)) (=> (and (and (and ($generated@@132 $generated@@569 ($generated@@370 $generated@@46 $generated@@46)) ($generated@@74 $generated@@569 ($generated@@370 $generated@@46 $generated@@46) $generated@@574)) (= 0 $generated@@576)) (and (not (= $generated@@570 $generated@@571)) (= (ControlFlow 0 7) 6))) $generated@@580))))
$generated@@581))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@T) T@U)
(declare-fun $generated@@410 () T@T)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@U Int) T@U)
(declare-fun $generated@@462 (T@U) Int)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= (type $generated@@333) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@145) ($generated@@0 ($generated@@81 $generated@@331 $generated@@334))) ($generated@@236 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@81 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@236 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@340) $generated@@339)) 0))
 :pattern ( (let (($generated@@340 (type $generated@@339)))
($generated@@81 ($generated@@262 $generated@@340) $generated@@339)))
)))
(assert  (and (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@341 $generated@@344)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@341 $generated@@344))
)) (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@342 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@271 (type $generated@@347))))
(let (($generated@@349 ($generated@@270 (type $generated@@347))))
(= (type ($generated@@343 $generated@@347)) ($generated@@76 $generated@@349 $generated@@348))))
 :pattern ( ($generated@@343 $generated@@347))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@351) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351)))) (= ($generated@@81 ($generated@@343 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@351))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@289 (type $generated@@355))))
(let (($generated@@357 ($generated@@288 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@76 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@359) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359)))) (= ($generated@@81 ($generated@@353 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@359))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(let (($generated@@363 ($generated@@270 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@269 $generated@@363 $generated@@362)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@360) $generated@@361)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@360) $generated@@364)) (= $generated@@361 ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@360) $generated@@364))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@288 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@287 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@365) $generated@@369))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@64)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@373) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))) (and ($generated@@236 ($generated@@81 ($generated@@343 $generated@@373) $generated@@377) $generated@@375 $generated@@376) ($generated@@236 $generated@@377 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@64)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))) (and ($generated@@236 ($generated@@81 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@236 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@T) ) (! (= (type ($generated@@386 $generated@@387)) ($generated@@76 $generated@@387 $generated@@4))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@289 (type $generated@@388))))
(let (($generated@@390 ($generated@@288 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@287 $generated@@390 $generated@@389)) (= (= $generated@@388 ($generated@@286 $generated@@390 $generated@@389)) (= ($generated@@285 $generated@@388) ($generated@@386 $generated@@390))))))
 :pattern ( ($generated@@285 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@289 (type $generated@@391))))
(let (($generated@@393 ($generated@@288 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@287 $generated@@393 $generated@@392)) (= (= $generated@@391 ($generated@@286 $generated@@393 $generated@@392)) (= ($generated@@321 $generated@@391) ($generated@@386 $generated@@392))))))
 :pattern ( ($generated@@321 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@289 (type $generated@@394))))
(let (($generated@@396 ($generated@@288 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@287 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@286 $generated@@396 $generated@@395)) (= ($generated@@352 $generated@@394) ($generated@@386 $generated@@145))))))
 :pattern ( ($generated@@352 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@271 (type $generated@@397))))
(let (($generated@@399 ($generated@@270 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@269 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@268 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (and (and (= (type $generated@@400) $generated@@145) (= (type $generated@@401) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@397) ($generated@@256 ($generated@@211 $generated@@400 $generated@@401)))))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@341 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@289 (type $generated@@402))))
(let (($generated@@404 ($generated@@288 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@287 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@286 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@145) (= (type $generated@@406) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@402) ($generated@@256 ($generated@@211 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@352 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@212 $generated@@407 $generated@@46)) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@407)) $generated@@407) ($generated@@132 ($generated@@342 $generated@@2 $generated@@407) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@407 $generated@@46))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@145) ($generated@@212 $generated@@408 $generated@@47)) (and (= ($generated@@256 ($generated@@342 $generated@@3 $generated@@408)) $generated@@408) ($generated@@132 ($generated@@342 $generated@@3 $generated@@408) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@408 $generated@@47))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@44)) (and (= ($generated@@256 ($generated@@342 $generated@@4 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@342 $generated@@4 $generated@@409) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@410) 20))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@45)) (and (= ($generated@@256 ($generated@@342 $generated@@410 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@342 $generated@@410 $generated@@411) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@45))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@412) $generated@@413) ($generated@@132 $generated@@412 $generated@@413)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@79 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@76 $generated@@415 $generated@@2)) (<= 0 ($generated@@261 $generated@@414))))
 :pattern ( ($generated@@261 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@251 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@250 $generated@@417)) (<= 0 ($generated@@249 $generated@@416))))
 :pattern ( ($generated@@249 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@64) (= (type $generated@@421) $generated@@64)) (= ($generated@@418 ($generated@@370 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@370 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@370 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@370 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@72 ($generated@@370 $generated@@426 $generated@@427)) $generated@@58))
 :pattern ( ($generated@@370 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@378 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@378 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@378 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@378 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@378 $generated@@436 $generated@@437)) $generated@@59))
 :pattern ( ($generated@@378 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@438 $generated@@439)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@135 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@135 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@135 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@135 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert  (and (forall (($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@454))
)) (forall (($generated@@455 T@U) ($generated@@456 Int) ) (! (let (($generated@@457 ($generated@@251 (type $generated@@455))))
(= (type ($generated@@453 $generated@@455 $generated@@456)) $generated@@457))
 :pattern ( ($generated@@453 $generated@@455 $generated@@456))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (= (type $generated@@458) ($generated@@250 $generated@@145)) (= (type $generated@@459) $generated@@64)) (= (type $generated@@460) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460) (forall (($generated@@461 Int) ) (!  (=> (and (<= 0 $generated@@461) (< $generated@@461 ($generated@@249 $generated@@458))) ($generated@@236 ($generated@@453 $generated@@458 $generated@@461) $generated@@459 $generated@@460))
 :pattern ( ($generated@@453 $generated@@458 $generated@@461))
))))
 :pattern ( ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 Int) ) (! (= ($generated@@462 ($generated@@75 $generated@@463)) $generated@@463)
 :pattern ( ($generated@@75 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@464 ($generated@@221 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@467)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@226 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@226 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@471)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@150 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@150 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@475)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@452 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@452 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@452 $generated@@479)) $generated@@57))
 :pattern ( ($generated@@452 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(= ($generated@@342 $generated@@481 ($generated@@256 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@256 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))) (and ($generated@@212 ($generated@@81 ($generated@@343 $generated@@482) $generated@@485) $generated@@484) ($generated@@212 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@482) $generated@@485))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))) (and ($generated@@212 ($generated@@81 ($generated@@353 $generated@@486) $generated@@489) $generated@@488) ($generated@@212 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) (= (type $generated@@493) $generated@@145)) (< ($generated@@490 $generated@@492) ($generated@@491 ($generated@@211 $generated@@492 $generated@@493))))
 :pattern ( ($generated@@211 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@490 $generated@@495) ($generated@@491 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498))) (and (= ($generated@@256 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496)) $generated@@496) ($generated@@132 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496) ($generated@@370 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501))) (and (= ($generated@@256 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499)) $generated@@499) ($generated@@132 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499) ($generated@@378 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@145)) ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503))) (and (= ($generated@@256 ($generated@@342 $generated@@136 $generated@@504)) $generated@@504) ($generated@@132 ($generated@@342 $generated@@136 $generated@@504) ($generated@@135 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 $generated@@506) $generated@@505))))
 :pattern ( (let (($generated@@506 (type $generated@@505)))
($generated@@81 ($generated@@386 $generated@@506) $generated@@505)))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@509 $generated@@510)) $generated@@62) (= ($generated@@507 ($generated@@135 $generated@@509 $generated@@510)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@136) (= ($generated@@490 ($generated@@256 $generated@@511)) ($generated@@491 $generated@@511)))
 :pattern ( ($generated@@490 ($generated@@256 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) ($generated@@212 $generated@@512 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@512)) $generated@@512) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@512) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@75 0)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@221 $generated@@514))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513) ($generated@@221 $generated@@514))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@221 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@226 $generated@@516))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@226 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@226 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@150 $generated@@518))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517) ($generated@@150 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@150 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@452 $generated@@520))) (and (= ($generated@@256 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519) ($generated@@452 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@452 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@521 $generated@@524)))) ($generated@@236 $generated@@524 $generated@@522 $generated@@523))
 :pattern ( ($generated@@81 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@136) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@527) (and ($generated@@134 $generated@@525) (exists (($generated@@528 T@U) ) (!  (and (= (type $generated@@528) $generated@@64) ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
))))) ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@136) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@531) (and ($generated@@134 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
))))) ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)) ($generated@@231 ($generated@@211 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@535)) ($generated@@231 ($generated@@256 $generated@@535)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@251 (type $generated@@536))))
 (=> (and (= (type $generated@@536) ($generated@@250 $generated@@537)) (= ($generated@@249 $generated@@536) 0)) (= $generated@@536 ($generated@@248 $generated@@537))))
 :pattern ( ($generated@@249 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@539)))
 (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@541 $generated@@2)) (= (type $generated@@540) $generated@@2)) (<= 0 ($generated $generated@@540))) (= ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)) (+ (- ($generated@@261 $generated@@538) ($generated ($generated@@81 $generated@@538 $generated@@539))) ($generated $generated@@540)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@543) $generated@@2)) ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
 :pattern ( ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@545) $generated@@3)) ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
 :pattern ( ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@547) $generated@@4)) ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
 :pattern ( ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@410)) ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@145)) ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@250 $generated@@145)) (= (type $generated@@553) $generated@@64)) (= ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@249 $generated@@552))) ($generated@@212 ($generated@@453 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@453 $generated@@552 $generated@@554))
))))
 :pattern ( ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (= (type $generated@@556) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@249 $generated@@556))) (< ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))) ($generated@@555 $generated@@556))))
 :pattern ( ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560))) (and (and ($generated@@132 ($generated@@267 $generated@@558) ($generated@@221 $generated@@559)) ($generated@@132 ($generated@@310 $generated@@558) ($generated@@221 $generated@@560))) ($generated@@132 ($generated@@341 $generated@@558) ($generated@@221 ($generated@@135 $generated@@559 $generated@@560)))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@285 $generated@@561) ($generated@@226 $generated@@562)) ($generated@@132 ($generated@@321 $generated@@561) ($generated@@226 $generated@@563))) ($generated@@132 ($generated@@352 $generated@@561) ($generated@@226 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@2) ($generated@@132 $generated@@564 $generated@@46))
 :pattern ( ($generated@@132 $generated@@564 $generated@@46))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@3) ($generated@@132 $generated@@565 $generated@@47))
 :pattern ( ($generated@@132 $generated@@565 $generated@@47))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@4) ($generated@@132 $generated@@566 $generated@@44))
 :pattern ( ($generated@@132 $generated@@566 $generated@@44))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@410) ($generated@@132 $generated@@567 $generated@@45))
 :pattern ( ($generated@@132 $generated@@567 $generated@@45))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@145) ($generated@@132 $generated@@568 $generated@@48))
 :pattern ( ($generated@@132 $generated@@568 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@569 () T@U)
(declare-fun $generated@@570 () Int)
(declare-fun $generated@@571 () Int)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 (T@U) Bool)
(declare-fun $generated@@576 () Int)
(assert  (and (and (and (= (type $generated@@569) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@572) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@573) $generated@@77)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@577  (and (=> (= (ControlFlow 0 2) (- 0 3)) (not ($generated@@0 ($generated@@81 ($generated@@267 $generated@@569) ($generated@@256 ($generated@@8 $generated@@570)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@570 $generated@@571))))))
(let (($generated@@578  (=> (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@569) ($generated@@256 ($generated@@8 $generated@@570)))) (= (ControlFlow 0 5) 2)) $generated@@577)))
(let (($generated@@579  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@267 $generated@@569) ($generated@@256 ($generated@@8 $generated@@570))))) (= (ControlFlow 0 4) 2)) $generated@@577)))
(let (($generated@@580  (=> (= $generated@@572 ($generated@@156 $generated@@573 $generated@@574 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@579) (=> (= (ControlFlow 0 6) 5) $generated@@578)))))
(let (($generated@@581  (=> (and ($generated@@235 $generated@@574) ($generated@@575 $generated@@574)) (=> (and (and (and ($generated@@132 $generated@@569 ($generated@@370 $generated@@46 $generated@@46)) ($generated@@74 $generated@@569 ($generated@@370 $generated@@46 $generated@@46) $generated@@574)) (= 0 $generated@@576)) (and (not (= $generated@@570 $generated@@571)) (= (ControlFlow 0 7) 6))) $generated@@580))))
$generated@@581))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
