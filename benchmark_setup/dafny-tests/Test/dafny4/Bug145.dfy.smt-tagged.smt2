(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@210 (Int) Int)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U) Bool)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@228 (T@T) T@U)
(declare-fun $generated@@229 (T@U) Int)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@236 (T@U Int) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@T) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@T T@T) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@363 (T@U T@U) T@U)
(declare-fun $generated@@371 (T@U T@U) T@U)
(declare-fun $generated@@379 (Int) T@U)
(declare-fun $generated@@386 (T@T) T@U)
(declare-fun $generated@@410 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@523 (T@U T@U T@U) T@U)
(declare-fun $generated@@524 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@525 (T@T T@T) T@T)
(declare-fun $generated@@526 (T@T) T@T)
(declare-fun $generated@@527 (T@T) T@T)
(declare-fun $generated@@528 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@579 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@652 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@81)) (and (not (= $generated@@147 $generated@@138)) (= ($generated@@139 $generated@@147) ($generated@@137 $generated@@146)))) ($generated@@140 ($generated@@8 ($generated@@145 $generated@@147)) $generated@@46))
 :pattern ( ($generated@@145 $generated@@147) ($generated@@137 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@81)) (= (type $generated@@150) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@149 ($generated@@137 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@149 ($generated@@137 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@154) $generated@@81)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@138)) (= ($generated@@139 $generated@@154) ($generated@@137 $generated@@152)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@136 $generated@@154) ($generated@@87 ($generated@@85 $generated@@153 $generated@@154) $generated@@60) ($generated@@137 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@67) (= (type $generated@@156) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@157) $generated@@81)) (and (and ($generated@@151 $generated@@156) (and (not (= $generated@@157 $generated@@138)) (= ($generated@@139 $generated@@157) ($generated@@137 $generated@@155)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@156 $generated@@157) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@145 $generated@@157)) $generated@@46 $generated@@156))
 :pattern ( ($generated@@145 $generated@@157) ($generated@@87 ($generated@@85 $generated@@156 $generated@@157) $generated@@60) ($generated@@137 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@140 $generated@@158 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@158 ($generated@@79 0)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert  (=> (<= 1 $generated@@159) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@165) $generated@@81)) (or ($generated@@161 $generated@@164 $generated@@165) (and (not (= 1 $generated@@159)) (and ($generated@@151 $generated@@164) ($generated@@140 $generated@@165 ($generated@@162 $generated@@44)))))) true)
 :pattern ( ($generated@@160 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@81)) (= (type $generated@@168) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@167 ($generated@@162 $generated@@166) $generated@@168) ($generated@@78 $generated@@167 ($generated@@137 $generated@@166) $generated@@168)))
 :pattern ( ($generated@@78 $generated@@167 ($generated@@162 $generated@@166) $generated@@168))
)))
(assert  (and (= ($generated@@1 $generated@@171) 14) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@67)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@67) (= (type $generated@@175) $generated@@67)) (= (type $generated@@176) $generated@@171)) ($generated@@140 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@140 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (and (= ($generated@@1 $generated@@180) 15) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@178 $generated@@181))
))) (forall (($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@182)) $generated@@180)
 :pattern ( ($generated@@179 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) $generated@@171) (= (type $generated@@184) $generated@@171)) true) (= ($generated@@177 $generated@@183 $generated@@184)  (and (= ($generated@@178 $generated@@183) ($generated@@178 $generated@@184)) (= ($generated@@179 $generated@@183) ($generated@@179 $generated@@184)))))
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@67)
 :pattern ( ($generated@@185 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) ($generated@@80 $generated@@180 $generated@@2)) (= (type $generated@@189) $generated@@67)) ($generated@@140 $generated@@188 ($generated@@185 $generated@@189))) ($generated@@186 $generated@@188))
 :pattern ( ($generated@@140 $generated@@188 ($generated@@185 $generated@@189)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@192 $generated@@193)) $generated@@171)
 :pattern ( ($generated@@190 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (and (= (type $generated@@194) $generated@@67) (= (type $generated@@195) $generated@@67)) (= (type $generated@@196) $generated@@180)) (= (type $generated@@197) $generated@@180)) (= ($generated@@140 ($generated@@190 $generated@@196 $generated@@197) ($generated@@170 $generated@@194 $generated@@195))  (and ($generated@@191 $generated@@196 $generated@@194) ($generated@@191 $generated@@197 $generated@@195))))
 :pattern ( ($generated@@140 ($generated@@190 $generated@@196 $generated@@197) ($generated@@170 $generated@@194 $generated@@195)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (= (type $generated@@198) $generated@@171) (= (type $generated@@199) $generated@@171)) (= ($generated@@177 $generated@@198 $generated@@199) (= $generated@@198 $generated@@199)))
 :pattern ( ($generated@@177 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ) (! (= (type ($generated@@200 $generated@@201)) $generated@@67)
 :pattern ( ($generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) ($generated@@80 $generated@@180 $generated@@4)) (= (type $generated@@203) $generated@@67)) (= ($generated@@140 $generated@@202 ($generated@@200 $generated@@203)) (forall (($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@204) $generated@@180) ($generated@@0 ($generated@@85 $generated@@202 $generated@@204))) ($generated@@191 $generated@@204 $generated@@203))
 :pattern ( ($generated@@85 $generated@@202 $generated@@204))
))))
 :pattern ( ($generated@@140 $generated@@202 ($generated@@200 $generated@@203)))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@205 $generated@@206)) $generated@@67)
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) ($generated@@80 $generated@@180 $generated@@4)) (= (type $generated@@208) $generated@@67)) (= ($generated@@140 $generated@@207 ($generated@@205 $generated@@208)) (forall (($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@209) $generated@@180) ($generated@@0 ($generated@@85 $generated@@207 $generated@@209))) ($generated@@191 $generated@@209 $generated@@208))
 :pattern ( ($generated@@85 $generated@@207 $generated@@209))
))))
 :pattern ( ($generated@@140 $generated@@207 ($generated@@205 $generated@@208)))
)))
(assert (forall (($generated@@211 Int) ) (! (= ($generated@@210 $generated@@211) $generated@@211)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(= (type ($generated@@212 $generated@@213)) $generated@@214))
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ) (! (= ($generated@@212 $generated@@215) $generated@@215)
 :pattern ( ($generated@@212 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@217) $generated@@67) (= (type $generated@@218) $generated@@67)) (= (type $generated@@219) $generated@@180)) (= (type $generated@@220) $generated@@180)) (= (type $generated@@221) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@151 $generated@@221)) (= ($generated@@78 ($generated@@190 $generated@@219 $generated@@220) ($generated@@170 $generated@@217 $generated@@218) $generated@@221)  (and ($generated@@216 $generated@@219 $generated@@217 $generated@@221) ($generated@@216 $generated@@220 $generated@@218 $generated@@221))))
 :pattern ( ($generated@@78 ($generated@@190 $generated@@219 $generated@@220) ($generated@@170 $generated@@217 $generated@@218) $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (! (= (type ($generated@@222 $generated@@223)) $generated@@71)
 :pattern ( ($generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@171) (= ($generated@@169 $generated@@224) (= ($generated@@222 $generated@@224) $generated@@63)))
 :pattern ( ($generated@@169 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@171) ($generated@@169 $generated@@225)) (exists (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (and (and (= (type $generated@@226) $generated@@180) (= (type $generated@@227) $generated@@180)) (= $generated@@225 ($generated@@190 $generated@@226 $generated@@227)))
 :no-pattern (type $generated@@226)
 :no-pattern (type $generated@@227)
 :no-pattern ($generated $generated@@226)
 :no-pattern ($generated@@0 $generated@@226)
 :no-pattern ($generated $generated@@227)
 :no-pattern ($generated@@0 $generated@@227)
)))
 :pattern ( ($generated@@169 $generated@@225))
)))
(assert  (and (and (forall (($generated@@232 T@T) ) (= ($generated@@1 ($generated@@230 $generated@@232)) 16)) (forall (($generated@@233 T@T) ) (! (= ($generated@@231 ($generated@@230 $generated@@233)) $generated@@233)
 :pattern ( ($generated@@230 $generated@@233))
))) (forall (($generated@@234 T@T) ) (! (= (type ($generated@@228 $generated@@234)) ($generated@@230 $generated@@234))
 :pattern ( ($generated@@228 $generated@@234))
))))
(assert (forall (($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@235)) 0)
 :pattern ( ($generated@@228 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 Int) ) (! (= (type ($generated@@236 $generated@@237 $generated@@238)) ($generated@@69 $generated@@180))
 :pattern ( ($generated@@236 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 Int) ) (!  (=> (= (type $generated@@239) ($generated@@69 $generated@@180)) (= ($generated@@75 ($generated@@236 $generated@@239 $generated@@240)) (+ ($generated@@75 $generated@@239) 1)))
 :pattern ( ($generated@@236 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@67) (= (type $generated@@242) $generated@@81)) (= ($generated@@140 $generated@@242 ($generated@@162 $generated@@241))  (and ($generated@@140 $generated@@242 ($generated@@137 $generated@@241)) (not (= $generated@@242 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@242 ($generated@@162 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@180)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@67) (= (type $generated@@247) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@216 ($generated@@243 $generated@@245) $generated@@246 $generated@@247) ($generated@@78 $generated@@245 $generated@@246 $generated@@247)))
 :pattern ( ($generated@@216 ($generated@@243 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@250 T@T) ) (! (= (type ($generated@@249 $generated@@250)) ($generated@@80 $generated@@250 $generated@@2))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@83 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@80 $generated@@252 $generated@@2)) (and (= (= ($generated@@248 $generated@@251) 0) (= $generated@@251 ($generated@@249 $generated@@252))) (=> (not (= ($generated@@248 $generated@@251) 0)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) (< 0 ($generated ($generated@@85 $generated@@251 $generated@@253))))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@72)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@256)) $generated@@61) (= ($generated@@254 ($generated@@137 $generated@@256)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@67) (and (= ($generated@@76 ($generated@@162 $generated@@257)) $generated@@62) (= ($generated@@254 ($generated@@162 $generated@@257)) $generated@@65)))
 :pattern ( ($generated@@162 $generated@@257))
)))
(assert  (and (and (and (and (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@263 $generated@@264)) 17)) (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@265 $generated@@266)) $generated@@265)
 :pattern ( ($generated@@260 $generated@@265 $generated@@266))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@267 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@260 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@261 (type $generated@@269))))
(= (type ($generated@@258 $generated@@269)) ($generated@@80 $generated@@270 $generated@@4)))
 :pattern ( ($generated@@258 $generated@@269))
))) (forall (($generated@@271 T@T) ($generated@@272 T@T) ) (! (= (type ($generated@@259 $generated@@271 $generated@@272)) ($generated@@260 $generated@@271 $generated@@272))
 :pattern ( ($generated@@259 $generated@@271 $generated@@272))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@T) ) (! (let (($generated@@275 (type $generated@@273)))
 (not ($generated@@0 ($generated@@85 ($generated@@258 ($generated@@259 $generated@@275 $generated@@274)) $generated@@273))))
 :pattern ( (let (($generated@@275 (type $generated@@273)))
($generated@@85 ($generated@@258 ($generated@@259 $generated@@275 $generated@@274)) $generated@@273)))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 18)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@80 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@85 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@85 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@83 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@80 $generated@@295 $generated@@2)) (= ($generated@@186 $generated@@294) (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@295) (and (<= 0 ($generated ($generated@@85 $generated@@294 $generated@@296))) (<= ($generated ($generated@@85 $generated@@294 $generated@@296)) ($generated@@248 $generated@@294))))
 :pattern ( ($generated@@85 $generated@@294 $generated@@296))
)))))
 :pattern ( ($generated@@186 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@67) (= (type $generated@@298) $generated@@81)) (= ($generated@@140 $generated@@298 ($generated@@137 $generated@@297))  (or (= $generated@@298 $generated@@138) (= ($generated@@139 $generated@@298) ($generated@@137 $generated@@297)))))
 :pattern ( ($generated@@140 $generated@@298 ($generated@@137 $generated@@297)))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@262 (type $generated@@299))))
(let (($generated@@301 ($generated@@261 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@260 $generated@@301 $generated@@300)) (or (= $generated@@299 ($generated@@259 $generated@@301 $generated@@300)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) ($generated@@0 ($generated@@85 ($generated@@258 $generated@@299) $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@258 $generated@@299))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@262 (type $generated@@304))))
(= (type ($generated@@303 $generated@@304)) ($generated@@80 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@262 (type $generated@@306))))
(let (($generated@@308 ($generated@@261 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@260 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@259 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@307) ($generated@@0 ($generated@@85 ($generated@@303 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@280 (type $generated@@310))))
(let (($generated@@312 ($generated@@279 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@278 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@277 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) ($generated@@0 ($generated@@85 ($generated@@276 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@276 $generated@@310))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@280 (type $generated@@315))))
(= (type ($generated@@314 $generated@@315)) ($generated@@80 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@280 (type $generated@@317))))
(let (($generated@@319 ($generated@@279 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@278 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@277 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@318) ($generated@@0 ($generated@@85 ($generated@@314 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) ($generated@@80 $generated@@180 $generated@@2)) (= (type $generated@@322) $generated@@67)) (= ($generated@@140 $generated@@321 ($generated@@185 $generated@@322)) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@180) (< 0 ($generated ($generated@@85 $generated@@321 $generated@@323)))) ($generated@@191 $generated@@323 $generated@@322))
 :pattern ( ($generated@@85 $generated@@321 $generated@@323))
))))
 :pattern ( ($generated@@140 $generated@@321 ($generated@@185 $generated@@322)))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@80 $generated@@180 $generated@@4)) (= (type $generated@@325) $generated@@67)) (= (type $generated@@326) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@324 ($generated@@200 $generated@@325) $generated@@326) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@180) ($generated@@0 ($generated@@85 $generated@@324 $generated@@327))) ($generated@@216 $generated@@327 $generated@@325 $generated@@326))
 :pattern ( ($generated@@85 $generated@@324 $generated@@327))
))))
 :pattern ( ($generated@@78 $generated@@324 ($generated@@200 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (= (type $generated@@328) ($generated@@80 $generated@@180 $generated@@4)) (= (type $generated@@329) $generated@@67)) (= (type $generated@@330) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@328 ($generated@@205 $generated@@329) $generated@@330) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@180) ($generated@@0 ($generated@@85 $generated@@328 $generated@@331))) ($generated@@216 $generated@@331 $generated@@329 $generated@@330))
 :pattern ( ($generated@@85 $generated@@328 $generated@@331))
))))
 :pattern ( ($generated@@78 $generated@@328 ($generated@@205 $generated@@329) $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 (type $generated@@332)))
(= ($generated ($generated@@85 ($generated@@249 $generated@@333) $generated@@332)) 0))
 :pattern ( (let (($generated@@333 (type $generated@@332)))
($generated@@85 ($generated@@249 $generated@@333) $generated@@332)))
)))
(assert  (and (and (forall (($generated@@337 T@U) ) (! (= (type ($generated@@334 $generated@@337)) ($generated@@80 $generated@@180 $generated@@4))
 :pattern ( ($generated@@334 $generated@@337))
)) (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@335 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@335 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@262 (type $generated@@340))))
(let (($generated@@342 ($generated@@261 (type $generated@@340))))
(= (type ($generated@@336 $generated@@340)) ($generated@@80 $generated@@342 $generated@@341))))
 :pattern ( ($generated@@336 $generated@@340))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@260 $generated@@180 $generated@@180)) (= (type $generated@@344) $generated@@180)) (= ($generated@@0 ($generated@@85 ($generated@@334 $generated@@343) $generated@@344))  (and ($generated@@0 ($generated@@85 ($generated@@258 $generated@@343) ($generated@@178 ($generated@@335 $generated@@171 $generated@@344)))) (= ($generated@@85 ($generated@@336 $generated@@343) ($generated@@178 ($generated@@335 $generated@@171 $generated@@344))) ($generated@@179 ($generated@@335 $generated@@171 $generated@@344))))))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@343) $generated@@344))
)))
(assert  (and (forall (($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@347)) ($generated@@80 $generated@@180 $generated@@4))
 :pattern ( ($generated@@345 $generated@@347))
)) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@280 (type $generated@@348))))
(let (($generated@@350 ($generated@@279 (type $generated@@348))))
(= (type ($generated@@346 $generated@@348)) ($generated@@80 $generated@@350 $generated@@349))))
 :pattern ( ($generated@@346 $generated@@348))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@278 $generated@@180 $generated@@180)) (= (type $generated@@352) $generated@@180)) (= ($generated@@0 ($generated@@85 ($generated@@345 $generated@@351) $generated@@352))  (and ($generated@@0 ($generated@@85 ($generated@@276 $generated@@351) ($generated@@178 ($generated@@335 $generated@@171 $generated@@352)))) (= ($generated@@85 ($generated@@346 $generated@@351) ($generated@@178 ($generated@@335 $generated@@171 $generated@@352))) ($generated@@179 ($generated@@335 $generated@@171 $generated@@352))))))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 (type $generated@@354)))
(let (($generated@@356 ($generated@@261 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@260 $generated@@356 $generated@@355)) (= ($generated@@0 ($generated@@85 ($generated@@303 $generated@@353) $generated@@354)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) (and ($generated@@0 ($generated@@85 ($generated@@258 $generated@@353) $generated@@357)) (= $generated@@354 ($generated@@85 ($generated@@336 $generated@@353) $generated@@357))))
 :pattern ( ($generated@@85 ($generated@@258 $generated@@353) $generated@@357))
 :pattern ( ($generated@@85 ($generated@@336 $generated@@353) $generated@@357))
))))))
 :pattern ( ($generated@@85 ($generated@@303 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(let (($generated@@361 ($generated@@279 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@278 $generated@@361 $generated@@360)) (= ($generated@@0 ($generated@@85 ($generated@@314 $generated@@358) $generated@@359)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) (and ($generated@@0 ($generated@@85 ($generated@@276 $generated@@358) $generated@@362)) (= $generated@@359 ($generated@@85 ($generated@@346 $generated@@358) $generated@@362))))
 :pattern ( ($generated@@85 ($generated@@276 $generated@@358) $generated@@362))
 :pattern ( ($generated@@85 ($generated@@346 $generated@@358) $generated@@362))
))))))
 :pattern ( ($generated@@85 ($generated@@314 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@67)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (= (type $generated@@366) ($generated@@260 $generated@@180 $generated@@180)) (= (type $generated@@367) $generated@@67)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@366 ($generated@@363 $generated@@367 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@180) ($generated@@0 ($generated@@85 ($generated@@258 $generated@@366) $generated@@370))) (and ($generated@@216 ($generated@@85 ($generated@@336 $generated@@366) $generated@@370) $generated@@368 $generated@@369) ($generated@@216 $generated@@370 $generated@@367 $generated@@369)))
 :pattern ( ($generated@@85 ($generated@@336 $generated@@366) $generated@@370))
 :pattern ( ($generated@@85 ($generated@@258 $generated@@366) $generated@@370))
))))
 :pattern ( ($generated@@78 $generated@@366 ($generated@@363 $generated@@367 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@372 $generated@@373)) $generated@@67)
 :pattern ( ($generated@@371 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (= (type $generated@@374) ($generated@@278 $generated@@180 $generated@@180)) (= (type $generated@@375) $generated@@67)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@374 ($generated@@371 $generated@@375 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@180) ($generated@@0 ($generated@@85 ($generated@@276 $generated@@374) $generated@@378))) (and ($generated@@216 ($generated@@85 ($generated@@346 $generated@@374) $generated@@378) $generated@@376 $generated@@377) ($generated@@216 $generated@@378 $generated@@375 $generated@@377)))
 :pattern ( ($generated@@85 ($generated@@346 $generated@@374) $generated@@378))
 :pattern ( ($generated@@85 ($generated@@276 $generated@@374) $generated@@378))
))))
 :pattern ( ($generated@@78 $generated@@374 ($generated@@371 $generated@@375 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@380 Int) ) (! (= (type ($generated@@379 $generated@@380)) ($generated@@69 $generated@@180))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 Int) ($generated@@385 Int) ) (!  (=> (and (and (and (= (type $generated@@381) $generated@@67) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@383) $generated@@81)) (and (and ($generated@@151 $generated@@382) (and (not (= $generated@@383 $generated@@138)) (= ($generated@@139 $generated@@383) ($generated@@137 $generated@@381)))) (and (and (<= 0 $generated@@384) (< $generated@@384 ($generated@@136 $generated@@383))) (and (<= 0 $generated@@385) (< $generated@@385 ($generated@@145 $generated@@383)))))) ($generated@@191 ($generated@@87 ($generated@@85 $generated@@382 $generated@@383) ($generated@@236 ($generated@@379 $generated@@384) $generated@@385)) $generated@@381))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@382 $generated@@383) ($generated@@236 ($generated@@379 $generated@@384) $generated@@385)) ($generated@@137 $generated@@381))
)))
(assert (forall (($generated@@387 T@T) ) (! (= (type ($generated@@386 $generated@@387)) ($generated@@80 $generated@@387 $generated@@4))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@280 (type $generated@@388))))
(let (($generated@@390 ($generated@@279 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@278 $generated@@390 $generated@@389)) (= (= $generated@@388 ($generated@@277 $generated@@390 $generated@@389)) (= ($generated@@276 $generated@@388) ($generated@@386 $generated@@390))))))
 :pattern ( ($generated@@276 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@280 (type $generated@@391))))
(let (($generated@@393 ($generated@@279 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@278 $generated@@393 $generated@@392)) (= (= $generated@@391 ($generated@@277 $generated@@393 $generated@@392)) (= ($generated@@314 $generated@@391) ($generated@@386 $generated@@392))))))
 :pattern ( ($generated@@314 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@280 (type $generated@@394))))
(let (($generated@@396 ($generated@@279 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@278 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@277 $generated@@396 $generated@@395)) (= ($generated@@345 $generated@@394) ($generated@@386 $generated@@180))))))
 :pattern ( ($generated@@345 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@262 (type $generated@@397))))
(let (($generated@@399 ($generated@@261 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@260 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@259 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (and (and (= (type $generated@@400) $generated@@180) (= (type $generated@@401) $generated@@180)) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@397) ($generated@@243 ($generated@@190 $generated@@400 $generated@@401)))))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@334 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@280 (type $generated@@402))))
(let (($generated@@404 ($generated@@279 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@278 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@277 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@180) (= (type $generated@@406) $generated@@180)) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@402) ($generated@@243 ($generated@@190 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@345 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@180) ($generated@@191 $generated@@407 $generated@@46)) (and (= ($generated@@243 ($generated@@335 $generated@@2 $generated@@407)) $generated@@407) ($generated@@140 ($generated@@335 $generated@@2 $generated@@407) $generated@@46)))
 :pattern ( ($generated@@191 $generated@@407 $generated@@46))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@180) ($generated@@191 $generated@@408 $generated@@47)) (and (= ($generated@@243 ($generated@@335 $generated@@3 $generated@@408)) $generated@@408) ($generated@@140 ($generated@@335 $generated@@3 $generated@@408) $generated@@47)))
 :pattern ( ($generated@@191 $generated@@408 $generated@@47))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@180) ($generated@@191 $generated@@409 $generated@@44)) (and (= ($generated@@243 ($generated@@335 $generated@@4 $generated@@409)) $generated@@409) ($generated@@140 ($generated@@335 $generated@@4 $generated@@409) $generated@@44)))
 :pattern ( ($generated@@191 $generated@@409 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@410) 19))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@180) ($generated@@191 $generated@@411 $generated@@45)) (and (= ($generated@@243 ($generated@@335 $generated@@410 $generated@@411)) $generated@@411) ($generated@@140 ($generated@@335 $generated@@410 $generated@@411) $generated@@45)))
 :pattern ( ($generated@@191 $generated@@411 $generated@@45))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@67) (= ($generated@@191 ($generated@@243 $generated@@412) $generated@@413) ($generated@@140 $generated@@412 $generated@@413)))
 :pattern ( ($generated@@191 ($generated@@243 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (= (type $generated@@414) $generated@@81) (<= 0 ($generated@@136 $generated@@414)))
 :pattern ( ($generated@@136 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@81) (<= 0 ($generated@@145 $generated@@415)))
 :pattern ( ($generated@@145 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@83 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@80 $generated@@417 $generated@@2)) (<= 0 ($generated@@248 $generated@@416))))
 :pattern ( ($generated@@248 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@231 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@230 $generated@@419)) (<= 0 ($generated@@229 $generated@@418))))
 :pattern ( ($generated@@229 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@67)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@67) (= (type $generated@@423) $generated@@67)) (= ($generated@@420 ($generated@@363 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@363 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@67) (= (type $generated@@427) $generated@@67)) (= ($generated@@424 ($generated@@363 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@363 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@67) (= (type $generated@@429) $generated@@67)) (= ($generated@@76 ($generated@@363 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@363 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@67) (= (type $generated@@433) $generated@@67)) (= ($generated@@430 ($generated@@371 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@371 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@434 ($generated@@371 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@371 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@76 ($generated@@371 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@371 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@180) (= (type $generated@@441) $generated@@180)) (= ($generated@@222 ($generated@@190 $generated@@440 $generated@@441)) $generated@@63))
 :pattern ( ($generated@@190 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@170 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@170 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@170 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@170 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@180) (= (type $generated@@451) $generated@@180)) (= ($generated@@178 ($generated@@190 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@190 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@180) (= (type $generated@@453) $generated@@180)) (= ($generated@@179 ($generated@@190 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@190 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@231 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@230 $generated@@180)) (= (type $generated@@461) $generated@@67)) (= (type $generated@@462) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@229 $generated@@460))) ($generated@@216 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@78 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@79 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@79 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@67) (= ($generated@@466 ($generated@@200 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@200 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@76 ($generated@@200 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@200 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@67) (= ($generated@@470 ($generated@@205 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@205 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@76 ($generated@@205 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@205 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@67) (= ($generated@@474 ($generated@@185 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@185 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@76 ($generated@@185 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@185 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@67) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@67) (= ($generated@@76 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 Int) ) (! (= ($generated@@75 ($generated@@379 $generated@@482)) 1)
 :pattern ( ($generated@@379 $generated@@482))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@379 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@379 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@137 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@137 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@162 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@162 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 (type $generated@@491)))
(= ($generated@@335 $generated@@492 ($generated@@243 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@243 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@260 $generated@@180 $generated@@180)) (= (type $generated@@494) $generated@@67)) (= (type $generated@@495) $generated@@67)) (= ($generated@@140 $generated@@493 ($generated@@363 $generated@@494 $generated@@495)) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@180) ($generated@@0 ($generated@@85 ($generated@@258 $generated@@493) $generated@@496))) (and ($generated@@191 ($generated@@85 ($generated@@336 $generated@@493) $generated@@496) $generated@@495) ($generated@@191 $generated@@496 $generated@@494)))
 :pattern ( ($generated@@85 ($generated@@336 $generated@@493) $generated@@496))
 :pattern ( ($generated@@85 ($generated@@258 $generated@@493) $generated@@496))
))))
 :pattern ( ($generated@@140 $generated@@493 ($generated@@363 $generated@@494 $generated@@495)))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@278 $generated@@180 $generated@@180)) (= (type $generated@@498) $generated@@67)) (= (type $generated@@499) $generated@@67)) (= ($generated@@140 $generated@@497 ($generated@@371 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@180) ($generated@@0 ($generated@@85 ($generated@@276 $generated@@497) $generated@@500))) (and ($generated@@191 ($generated@@85 ($generated@@346 $generated@@497) $generated@@500) $generated@@499) ($generated@@191 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@85 ($generated@@346 $generated@@497) $generated@@500))
 :pattern ( ($generated@@85 ($generated@@276 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@140 $generated@@497 ($generated@@371 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@180) (= (type $generated@@504) $generated@@180)) (< ($generated@@501 $generated@@503) ($generated@@502 ($generated@@190 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@190 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@180) (= (type $generated@@506) $generated@@180)) (< ($generated@@501 $generated@@506) ($generated@@502 ($generated@@190 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@190 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 Int) ($generated@@511 Int) ) (!  (=> (and (and (= (type $generated@@507) $generated@@67) (= (type $generated@@508) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@509) $generated@@81)) (=> (and (and (and ($generated@@151 $generated@@508) (and (not (= $generated@@509 $generated@@138)) (= ($generated@@139 $generated@@509) ($generated@@137 $generated@@507)))) (and (and (<= 0 $generated@@510) (< $generated@@510 ($generated@@136 $generated@@509))) (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@145 $generated@@509))))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@508 $generated@@509) $generated@@60))) ($generated@@216 ($generated@@87 ($generated@@85 $generated@@508 $generated@@509) ($generated@@236 ($generated@@379 $generated@@510) $generated@@511)) $generated@@507 $generated@@508)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@508 $generated@@509) ($generated@@236 ($generated@@379 $generated@@510) $generated@@511)) ($generated@@137 $generated@@507))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@180) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) ($generated@@191 $generated@@512 ($generated@@363 $generated@@513 $generated@@514))) (and (= ($generated@@243 ($generated@@335 ($generated@@260 $generated@@180 $generated@@180) $generated@@512)) $generated@@512) ($generated@@140 ($generated@@335 ($generated@@260 $generated@@180 $generated@@180) $generated@@512) ($generated@@363 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@191 $generated@@512 ($generated@@363 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@180) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) ($generated@@191 $generated@@515 ($generated@@371 $generated@@516 $generated@@517))) (and (= ($generated@@243 ($generated@@335 ($generated@@278 $generated@@180 $generated@@180) $generated@@515)) $generated@@515) ($generated@@140 ($generated@@335 ($generated@@278 $generated@@180 $generated@@180) $generated@@515) ($generated@@371 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@191 $generated@@515 ($generated@@371 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) $generated@@180)) ($generated@@191 $generated@@520 ($generated@@170 $generated@@518 $generated@@519))) (and (= ($generated@@243 ($generated@@335 $generated@@171 $generated@@520)) $generated@@520) ($generated@@140 ($generated@@335 $generated@@171 $generated@@520) ($generated@@170 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@191 $generated@@520 ($generated@@170 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
 (not ($generated@@0 ($generated@@85 ($generated@@386 $generated@@522) $generated@@521))))
 :pattern ( (let (($generated@@522 (type $generated@@521)))
($generated@@85 ($generated@@386 $generated@@522) $generated@@521)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@529 T@T) ($generated@@530 T@T) ) (= ($generated@@1 ($generated@@525 $generated@@529 $generated@@530)) 20)) (forall (($generated@@531 T@T) ($generated@@532 T@T) ) (! (= ($generated@@526 ($generated@@525 $generated@@531 $generated@@532)) $generated@@531)
 :pattern ( ($generated@@525 $generated@@531 $generated@@532))
))) (forall (($generated@@533 T@T) ($generated@@534 T@T) ) (! (= ($generated@@527 ($generated@@525 $generated@@533 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@525 $generated@@533 $generated@@534))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@527 (type $generated@@535))))
(= (type ($generated@@523 $generated@@535 $generated@@536 $generated@@537)) $generated@@538))
 :pattern ( ($generated@@523 $generated@@535 $generated@@536 $generated@@537))
))) (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(let (($generated@@544 (type $generated@@540)))
(= (type ($generated@@528 $generated@@539 $generated@@540 $generated@@541 $generated@@542)) ($generated@@525 $generated@@544 $generated@@543))))
 :pattern ( ($generated@@528 $generated@@539 $generated@@540 $generated@@541 $generated@@542))
))) (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@527 (type $generated@@545))))
 (=> (= (type $generated@@548) $generated@@549) (= ($generated@@523 ($generated@@528 $generated@@545 $generated@@546 $generated@@547 $generated@@548) $generated@@546 $generated@@547) $generated@@548)))
 :weight 0
))) (and (and (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (or (= $generated@@552 $generated@@554) (= ($generated@@523 ($generated@@528 $generated@@551 $generated@@552 $generated@@553 $generated@@550) $generated@@554 $generated@@555) ($generated@@523 $generated@@551 $generated@@554 $generated@@555)))
 :weight 0
)) (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (or (= $generated@@559 $generated@@561) (= ($generated@@523 ($generated@@528 $generated@@557 $generated@@558 $generated@@559 $generated@@556) $generated@@560 $generated@@561) ($generated@@523 $generated@@557 $generated@@560 $generated@@561)))
 :weight 0
))) (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (or true (= ($generated@@523 ($generated@@528 $generated@@563 $generated@@564 $generated@@565 $generated@@562) $generated@@566 $generated@@567) ($generated@@523 $generated@@563 $generated@@566 $generated@@567)))
 :weight 0
)))) (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (= (type ($generated@@524 $generated@@568 $generated@@569 $generated@@570 $generated@@571)) ($generated@@525 $generated@@81 $generated@@4))
 :pattern ( ($generated@@524 $generated@@568 $generated@@569 $generated@@570 $generated@@571))
))))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@70 (type $generated@@577))))
 (=> (and (and (and (and (and (= (type $generated@@572) $generated@@81) (= (type $generated@@573) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@574) ($generated@@69 $generated@@4))) (= (type $generated@@575) $generated@@81)) (= (type $generated@@576) $generated@@81)) (= (type $generated@@577) ($generated@@69 $generated@@578))) (= ($generated@@0 ($generated@@523 ($generated@@524 $generated@@572 $generated@@573 $generated@@574 $generated@@575) $generated@@576 $generated@@577))  (=> (and (not (= $generated@@576 $generated@@572)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@573 $generated@@576) $generated@@574))) (= $generated@@576 $generated@@575)))))
 :pattern ( ($generated@@523 ($generated@@524 $generated@@572 $generated@@573 $generated@@574 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (= (type ($generated@@579 $generated@@580 $generated@@581 $generated@@582 $generated@@583)) ($generated@@525 $generated@@81 $generated@@4))
 :pattern ( ($generated@@579 $generated@@580 $generated@@581 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@70 (type $generated@@589))))
 (=> (and (and (and (and (and (= (type $generated@@584) $generated@@81) (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@586) ($generated@@69 $generated@@4))) (= (type $generated@@587) $generated@@81)) (= (type $generated@@588) $generated@@81)) (= (type $generated@@589) ($generated@@69 $generated@@590))) (= ($generated@@0 ($generated@@523 ($generated@@579 $generated@@584 $generated@@585 $generated@@586 $generated@@587) $generated@@588 $generated@@589))  (=> (and (not (= $generated@@588 $generated@@584)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@585 $generated@@588) $generated@@586))) (= $generated@@588 $generated@@587)))))
 :pattern ( ($generated@@523 ($generated@@579 $generated@@584 $generated@@585 $generated@@586 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@70 (type $generated@@593))))
(= (type ($generated@@591 $generated@@593)) ($generated@@69 $generated@@594)))
 :pattern ( ($generated@@591 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@69 $generated@@180)) (and (= ($generated@@591 ($generated@@236 $generated@@595 $generated@@596)) $generated@@595) (= ($generated@@592 ($generated@@236 $generated@@595 $generated@@596)) $generated@@596)))
 :pattern ( ($generated@@236 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@67) (= (type $generated@@598) $generated@@67)) (and (= ($generated@@76 ($generated@@170 $generated@@597 $generated@@598)) $generated@@64) (= ($generated@@254 ($generated@@170 $generated@@597 $generated@@598)) $generated@@66)))
 :pattern ( ($generated@@170 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@171) (= ($generated@@501 ($generated@@243 $generated@@599)) ($generated@@502 $generated@@599)))
 :pattern ( ($generated@@501 ($generated@@243 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@180) ($generated@@191 $generated@@600 ($generated@@79 0))) (and (= ($generated@@243 ($generated@@335 $generated@@2 $generated@@600)) $generated@@600) ($generated@@140 ($generated@@335 ($generated@@80 $generated@@180 $generated@@4) $generated@@600) ($generated@@79 0))))
 :pattern ( ($generated@@191 $generated@@600 ($generated@@79 0)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@180) (= (type $generated@@602) $generated@@67)) ($generated@@191 $generated@@601 ($generated@@200 $generated@@602))) (and (= ($generated@@243 ($generated@@335 ($generated@@80 $generated@@180 $generated@@4) $generated@@601)) $generated@@601) ($generated@@140 ($generated@@335 ($generated@@80 $generated@@180 $generated@@4) $generated@@601) ($generated@@200 $generated@@602))))
 :pattern ( ($generated@@191 $generated@@601 ($generated@@200 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@180) (= (type $generated@@604) $generated@@67)) ($generated@@191 $generated@@603 ($generated@@205 $generated@@604))) (and (= ($generated@@243 ($generated@@335 ($generated@@80 $generated@@180 $generated@@4) $generated@@603)) $generated@@603) ($generated@@140 ($generated@@335 ($generated@@80 $generated@@180 $generated@@4) $generated@@603) ($generated@@205 $generated@@604))))
 :pattern ( ($generated@@191 $generated@@603 ($generated@@205 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@180) (= (type $generated@@606) $generated@@67)) ($generated@@191 $generated@@605 ($generated@@185 $generated@@606))) (and (= ($generated@@243 ($generated@@335 ($generated@@80 $generated@@180 $generated@@2) $generated@@605)) $generated@@605) ($generated@@140 ($generated@@335 ($generated@@80 $generated@@180 $generated@@2) $generated@@605) ($generated@@185 $generated@@606))))
 :pattern ( ($generated@@191 $generated@@605 ($generated@@185 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@180) (= (type $generated@@608) $generated@@67)) ($generated@@191 $generated@@607 ($generated@@454 $generated@@608))) (and (= ($generated@@243 ($generated@@335 ($generated@@230 $generated@@180) $generated@@607)) $generated@@607) ($generated@@140 ($generated@@335 ($generated@@230 $generated@@180) $generated@@607) ($generated@@454 $generated@@608))))
 :pattern ( ($generated@@191 $generated@@607 ($generated@@454 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@67) (= (type $generated@@610) $generated@@180)) ($generated@@191 $generated@@610 ($generated@@137 $generated@@609))) (and (= ($generated@@243 ($generated@@335 $generated@@81 $generated@@610)) $generated@@610) ($generated@@140 ($generated@@335 $generated@@81 $generated@@610) ($generated@@137 $generated@@609))))
 :pattern ( ($generated@@191 $generated@@610 ($generated@@137 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@67) (= (type $generated@@612) $generated@@180)) ($generated@@191 $generated@@612 ($generated@@162 $generated@@611))) (and (= ($generated@@243 ($generated@@335 $generated@@81 $generated@@612)) $generated@@612) ($generated@@140 ($generated@@335 $generated@@81 $generated@@612) ($generated@@162 $generated@@611))))
 :pattern ( ($generated@@191 $generated@@612 ($generated@@162 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@80 $generated@@180 $generated@@2)) (= (type $generated@@614) $generated@@67)) (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@613 ($generated@@185 $generated@@614) $generated@@615) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@180) (< 0 ($generated ($generated@@85 $generated@@613 $generated@@616)))) ($generated@@216 $generated@@616 $generated@@614 $generated@@615))
 :pattern ( ($generated@@85 $generated@@613 $generated@@616))
))))
 :pattern ( ($generated@@78 $generated@@613 ($generated@@185 $generated@@614) $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@171) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@151 $generated@@619) (and ($generated@@169 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@67) ($generated@@78 $generated@@617 ($generated@@170 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@78 $generated@@617 ($generated@@170 $generated@@618 $generated@@620) $generated@@619))
))))) ($generated@@216 ($generated@@178 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@216 ($generated@@178 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@171) (= (type $generated@@622) $generated@@67)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@151 $generated@@623) (and ($generated@@169 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@67) ($generated@@78 $generated@@621 ($generated@@170 $generated@@624 $generated@@622) $generated@@623))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@170 $generated@@624 $generated@@622) $generated@@623))
))))) ($generated@@216 ($generated@@179 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@216 ($generated@@179 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@180) (= (type $generated@@626) $generated@@180)) (= ($generated@@190 ($generated@@212 $generated@@625) ($generated@@212 $generated@@626)) ($generated@@212 ($generated@@190 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@190 ($generated@@212 $generated@@625) ($generated@@212 $generated@@626)))
)))
(assert (forall (($generated@@627 Int) ) (! (= ($generated@@243 ($generated@@8 ($generated@@210 $generated@@627))) ($generated@@212 ($generated@@243 ($generated@@8 $generated@@627))))
 :pattern ( ($generated@@243 ($generated@@8 ($generated@@210 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ) (! (= ($generated@@243 ($generated@@212 $generated@@628)) ($generated@@212 ($generated@@243 $generated@@628)))
 :pattern ( ($generated@@243 ($generated@@212 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 ($generated@@231 (type $generated@@629))))
 (=> (and (= (type $generated@@629) ($generated@@230 $generated@@630)) (= ($generated@@229 $generated@@629) 0)) (= $generated@@629 ($generated@@228 $generated@@630))))
 :pattern ( ($generated@@229 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@632)))
 (=> (and (and (= (type $generated@@631) ($generated@@80 $generated@@634 $generated@@2)) (= (type $generated@@633) $generated@@2)) (<= 0 ($generated $generated@@633))) (= ($generated@@248 ($generated@@86 $generated@@631 $generated@@632 $generated@@633)) (+ (- ($generated@@248 $generated@@631) ($generated ($generated@@85 $generated@@631 $generated@@632))) ($generated $generated@@633)))))
 :pattern ( ($generated@@248 ($generated@@86 $generated@@631 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@636) $generated@@2)) ($generated@@78 $generated@@636 $generated@@46 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@46 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@638) $generated@@3)) ($generated@@78 $generated@@638 $generated@@47 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@47 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@640) $generated@@4)) ($generated@@78 $generated@@640 $generated@@44 $generated@@639))
 :pattern ( ($generated@@78 $generated@@640 $generated@@44 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@642) $generated@@410)) ($generated@@78 $generated@@642 $generated@@45 $generated@@641))
 :pattern ( ($generated@@78 $generated@@642 $generated@@45 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@644) $generated@@180)) ($generated@@78 $generated@@644 $generated@@48 $generated@@643))
 :pattern ( ($generated@@78 $generated@@644 $generated@@48 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@230 $generated@@180)) (= (type $generated@@646) $generated@@67)) (= ($generated@@140 $generated@@645 ($generated@@454 $generated@@646)) (forall (($generated@@647 Int) ) (!  (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@229 $generated@@645))) ($generated@@191 ($generated@@455 $generated@@645 $generated@@647) $generated@@646))
 :pattern ( ($generated@@455 $generated@@645 $generated@@647))
))))
 :pattern ( ($generated@@140 $generated@@645 ($generated@@454 $generated@@646)))
)))
(assert  (=> (<= 1 $generated@@159) (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@649) $generated@@81)) (or ($generated@@161 $generated@@648 $generated@@649) (and (not (= 1 $generated@@159)) (and ($generated@@151 $generated@@648) ($generated@@140 $generated@@649 ($generated@@162 $generated@@44)))))) (= ($generated@@160 $generated@@648 $generated@@649) (exists (($generated@@650 Int) ($generated@@651 Int) ) (!  (and (and (and (<= ($generated@@210 0) $generated@@650) (< $generated@@650 ($generated@@136 $generated@@649))) (and (<= ($generated@@210 0) $generated@@651) (< $generated@@651 ($generated@@145 $generated@@649)))) ($generated@@0 ($generated@@335 $generated@@4 ($generated@@87 ($generated@@85 $generated@@648 $generated@@649) ($generated@@236 ($generated@@379 $generated@@650) $generated@@651)))))
 :pattern ( ($generated@@335 $generated@@4 ($generated@@87 ($generated@@85 $generated@@648 $generated@@649) ($generated@@236 ($generated@@379 $generated@@650) $generated@@651))))
))))
 :pattern ( ($generated@@160 $generated@@648 $generated@@649) ($generated@@151 $generated@@648))
))))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@230 $generated@@180)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@229 $generated@@653))) (< ($generated@@502 ($generated@@335 $generated@@171 ($generated@@455 $generated@@653 $generated@@654))) ($generated@@652 $generated@@653))))
 :pattern ( ($generated@@502 ($generated@@335 $generated@@171 ($generated@@455 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) ($generated@@260 $generated@@180 $generated@@180)) (= (type $generated@@656) $generated@@67)) (= (type $generated@@657) $generated@@67)) ($generated@@140 $generated@@655 ($generated@@363 $generated@@656 $generated@@657))) (and (and ($generated@@140 ($generated@@258 $generated@@655) ($generated@@200 $generated@@656)) ($generated@@140 ($generated@@303 $generated@@655) ($generated@@200 $generated@@657))) ($generated@@140 ($generated@@334 $generated@@655) ($generated@@200 ($generated@@170 $generated@@656 $generated@@657)))))
 :pattern ( ($generated@@140 $generated@@655 ($generated@@363 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@278 $generated@@180 $generated@@180)) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@67)) ($generated@@140 $generated@@658 ($generated@@371 $generated@@659 $generated@@660))) (and (and ($generated@@140 ($generated@@276 $generated@@658) ($generated@@205 $generated@@659)) ($generated@@140 ($generated@@314 $generated@@658) ($generated@@205 $generated@@660))) ($generated@@140 ($generated@@345 $generated@@658) ($generated@@205 ($generated@@170 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@140 $generated@@658 ($generated@@371 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@2) ($generated@@140 $generated@@661 $generated@@46))
 :pattern ( ($generated@@140 $generated@@661 $generated@@46))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@3) ($generated@@140 $generated@@662 $generated@@47))
 :pattern ( ($generated@@140 $generated@@662 $generated@@47))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@4) ($generated@@140 $generated@@663 $generated@@44))
 :pattern ( ($generated@@140 $generated@@663 $generated@@44))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@410) ($generated@@140 $generated@@664 $generated@@45))
 :pattern ( ($generated@@140 $generated@@664 $generated@@45))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@180) ($generated@@140 $generated@@665 $generated@@48))
 :pattern ( ($generated@@140 $generated@@665 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Bool)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Bool)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@666) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@667) $generated@@81)) (= (type $generated@@672) ($generated@@525 $generated@@81 $generated@@4))) (= (type $generated@@673) ($generated@@525 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@675  (=> (= ($generated@@160 $generated@@666 $generated@@667) (exists (($generated@@676 Int) ($generated@@677 Int) ) (!  (and (and (and (<= ($generated@@210 0) $generated@@676) (< $generated@@676 ($generated@@136 $generated@@667))) (and (<= ($generated@@210 0) $generated@@677) (< $generated@@677 ($generated@@145 $generated@@667)))) ($generated@@0 ($generated@@335 $generated@@4 ($generated@@87 ($generated@@85 $generated@@666 $generated@@667) ($generated@@236 ($generated@@379 $generated@@676) $generated@@677)))))
 :pattern ( ($generated@@335 $generated@@4 ($generated@@87 ($generated@@85 $generated@@666 $generated@@667) ($generated@@236 ($generated@@379 $generated@@676) $generated@@677))))
))) (=> (and ($generated@@140 ($generated@@11 ($generated@@160 $generated@@666 $generated@@667)) $generated@@44) (= (ControlFlow 0 4) (- 0 3))) $generated@@668))))
(let (($generated@@678  (=> (not (and (and (<= ($generated@@210 0) $generated@@669) (< $generated@@669 ($generated@@136 $generated@@667))) (and (<= ($generated@@210 0) $generated@@670) (< $generated@@670 ($generated@@145 $generated@@667))))) (=> (and (= $generated@@668 true) (= (ControlFlow 0 9) 4)) $generated@@675))))
(let (($generated@@679  (=> (and (and (<= ($generated@@210 0) $generated@@669) (< $generated@@669 ($generated@@136 $generated@@667))) (and (<= ($generated@@210 0) $generated@@670) (< $generated@@670 ($generated@@145 $generated@@667)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (not (= $generated@@667 $generated@@138))) (=> (not (= $generated@@667 $generated@@138)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@136 $generated@@667)))) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@136 $generated@@667))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@145 $generated@@667)))) (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@145 $generated@@667))) (=> (= $generated@@671 ($generated@@0 ($generated@@523 $generated@@672 $generated@@667 ($generated@@236 ($generated@@379 $generated@@669) $generated@@670)))) (=> (and (= $generated@@668 $generated@@671) (= (ControlFlow 0 5) 4)) $generated@@675)))))))))))
(let (($generated@@680  (=> (< $generated@@670 ($generated@@210 0)) (and (=> (= (ControlFlow 0 13) 5) $generated@@679) (=> (= (ControlFlow 0 13) 9) $generated@@678)))))
(let (($generated@@681  (=> (<= ($generated@@210 0) $generated@@670) (and (=> (= (ControlFlow 0 11) (- 0 12)) (not (= $generated@@667 $generated@@138))) (=> (not (= $generated@@667 $generated@@138)) (and (=> (= (ControlFlow 0 11) 5) $generated@@679) (=> (= (ControlFlow 0 11) 9) $generated@@678)))))))
(let (($generated@@682  (=> (and (<= ($generated@@210 0) $generated@@669) (< $generated@@669 ($generated@@136 $generated@@667))) (and (=> (= (ControlFlow 0 14) 11) $generated@@681) (=> (= (ControlFlow 0 14) 13) $generated@@680)))))
(let (($generated@@683  (=> (not (and (<= ($generated@@210 0) $generated@@669) (< $generated@@669 ($generated@@136 $generated@@667)))) (and (=> (= (ControlFlow 0 10) 5) $generated@@679) (=> (= (ControlFlow 0 10) 9) $generated@@678)))))
(let (($generated@@684  (=> (< $generated@@669 ($generated@@210 0)) (and (=> (= (ControlFlow 0 17) 14) $generated@@682) (=> (= (ControlFlow 0 17) 10) $generated@@683)))))
(let (($generated@@685  (=> (<= ($generated@@210 0) $generated@@669) (and (=> (= (ControlFlow 0 15) (- 0 16)) (not (= $generated@@667 $generated@@138))) (=> (not (= $generated@@667 $generated@@138)) (and (=> (= (ControlFlow 0 15) 14) $generated@@682) (=> (= (ControlFlow 0 15) 10) $generated@@683)))))))
(let (($generated@@686  (and (=> (= (ControlFlow 0 18) 15) $generated@@685) (=> (= (ControlFlow 0 18) 17) $generated@@684))))
(let (($generated@@687 true))
(let (($generated@@688  (=> (= $generated@@673 ($generated@@579 $generated@@138 $generated@@666 $generated@@60 $generated@@667)) (and (=> (= (ControlFlow 0 19) 18) $generated@@686) (=> (= (ControlFlow 0 19) 2) $generated@@687)))))
(let (($generated@@689 true))
(let (($generated@@690  (=> (= $generated@@672 ($generated@@524 $generated@@138 $generated@@666 $generated@@60 $generated@@667)) (and (=> (= (ControlFlow 0 20) 1) $generated@@689) (=> (= (ControlFlow 0 20) 19) $generated@@688)))))
(let (($generated@@691  (=> (and (and (and ($generated@@151 $generated@@666) ($generated@@674 $generated@@666)) ($generated@@140 $generated@@667 ($generated@@162 $generated@@44))) (and (= 1 $generated@@159) (= (ControlFlow 0 21) 20))) $generated@@690)))
$generated@@691))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (Int) Int)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@303 (T@U Int) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@323 (T@U) Int)
(declare-fun $generated@@324 (T@T) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@T T@T) T@U)
(declare-fun $generated@@353 (T@T T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@457 (Int) T@U)
(declare-fun $generated@@464 (T@T) T@U)
(declare-fun $generated@@488 () T@T)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@533 (T@U Int) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(declare-fun $generated@@667 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@81)) (and (not (= $generated@@147 $generated@@138)) (= ($generated@@139 $generated@@147) ($generated@@137 $generated@@146)))) ($generated@@140 ($generated@@8 ($generated@@145 $generated@@147)) $generated@@46))
 :pattern ( ($generated@@145 $generated@@147) ($generated@@137 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@150) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@148 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@149 $generated@@151) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) $generated@@81)) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@153 ($generated@@137 $generated@@152) $generated@@154)  (or (= $generated@@153 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@153 ($generated@@137 $generated@@152) $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@67) (= (type $generated@@157) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@158) $generated@@81)) (and (and ($generated@@155 $generated@@157) (and (not (= $generated@@158 $generated@@138)) (= ($generated@@139 $generated@@158) ($generated@@137 $generated@@156)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@157 $generated@@158) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@158)) $generated@@46 $generated@@157))
 :pattern ( ($generated@@136 $generated@@158) ($generated@@87 ($generated@@85 $generated@@157 $generated@@158) $generated@@60) ($generated@@137 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@161) $generated@@81)) (and (and ($generated@@155 $generated@@160) (and (not (= $generated@@161 $generated@@138)) (= ($generated@@139 $generated@@161) ($generated@@137 $generated@@159)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@160 $generated@@161) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@145 $generated@@161)) $generated@@46 $generated@@160))
 :pattern ( ($generated@@145 $generated@@161) ($generated@@87 ($generated@@85 $generated@@160 $generated@@161) $generated@@60) ($generated@@137 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@140 $generated@@162 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@162 ($generated@@79 0)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@169) $generated@@81)) (or ($generated@@165 $generated@@168 $generated@@169) (and (not (= 1 $generated@@163)) (and ($generated@@155 $generated@@168) ($generated@@140 $generated@@169 ($generated@@166 $generated@@44)))))) true)
 :pattern ( ($generated@@164 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@67) (= (type $generated@@171) $generated@@81)) (= (type $generated@@172) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@171 ($generated@@166 $generated@@170) $generated@@172) ($generated@@78 $generated@@171 ($generated@@137 $generated@@170) $generated@@172)))
 :pattern ( ($generated@@78 $generated@@171 ($generated@@166 $generated@@170) $generated@@172))
)))
(assert  (and (= ($generated@@1 $generated@@175) 14) (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@176 $generated@@177)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@67) (= (type $generated@@179) $generated@@67)) (= (type $generated@@180) $generated@@175)) ($generated@@140 $generated@@180 ($generated@@174 $generated@@178 $generated@@179))) ($generated@@173 $generated@@180))
 :pattern ( ($generated@@173 $generated@@180) ($generated@@140 $generated@@180 ($generated@@174 $generated@@178 $generated@@179)))
)))
(assert  (and (and (= ($generated@@1 $generated@@184) 15) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@182 $generated@@185))
))) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@184)
 :pattern ( ($generated@@183 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@175) (= (type $generated@@188) $generated@@175)) true) (= ($generated@@181 $generated@@187 $generated@@188)  (and (= ($generated@@182 $generated@@187) ($generated@@182 $generated@@188)) (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)))))
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@190) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@191) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@192) $generated@@81)) (=> (and (and (and ($generated@@155 $generated@@190) ($generated@@155 $generated@@191)) (or ($generated@@165 $generated@@190 $generated@@192) ($generated@@140 $generated@@192 ($generated@@166 $generated@@44)))) (and ($generated@@189 $generated@@190) ($generated@@148 $generated@@190 $generated@@191))) (=> (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@70 (type $generated@@194))))
 (=> (and (and (= (type $generated@@193) $generated@@81) (= (type $generated@@194) ($generated@@69 $generated@@195))) (and (not (= $generated@@193 $generated@@138)) (= $generated@@193 $generated@@192))) (= ($generated@@87 ($generated@@85 $generated@@190 $generated@@193) $generated@@194) ($generated@@87 ($generated@@85 $generated@@191 $generated@@193) $generated@@194))))
 :no-pattern (type $generated@@193)
 :no-pattern (type $generated@@194)
 :no-pattern ($generated $generated@@193)
 :no-pattern ($generated@@0 $generated@@193)
 :no-pattern ($generated $generated@@194)
 :no-pattern ($generated@@0 $generated@@194)
)) (= ($generated@@164 $generated@@190 $generated@@192) ($generated@@164 $generated@@191 $generated@@192)))))
 :pattern ( ($generated@@189 $generated@@190) ($generated@@148 $generated@@190 $generated@@191) ($generated@@164 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@67)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@80 $generated@@184 $generated@@2)) (= (type $generated@@200) $generated@@67)) ($generated@@140 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@140 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 16)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@81 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@70 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@81) (= (type $generated@@251) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@252) ($generated@@69 $generated@@4))) (= (type $generated@@254) $generated@@81)) (= (type $generated@@255) ($generated@@69 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (! (= (type ($generated@@257 $generated@@259 $generated@@260)) $generated@@175)
 :pattern ( ($generated@@257 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (= (type $generated@@261) $generated@@67) (= (type $generated@@262) $generated@@67)) (= (type $generated@@263) $generated@@184)) (= (type $generated@@264) $generated@@184)) (= ($generated@@140 ($generated@@257 $generated@@263 $generated@@264) ($generated@@174 $generated@@261 $generated@@262))  (and ($generated@@258 $generated@@263 $generated@@261) ($generated@@258 $generated@@264 $generated@@262))))
 :pattern ( ($generated@@140 ($generated@@257 $generated@@263 $generated@@264) ($generated@@174 $generated@@261 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@175) (= (type $generated@@266) $generated@@175)) (= ($generated@@181 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@181 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@67)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@80 $generated@@184 $generated@@4)) (= (type $generated@@270) $generated@@67)) (= ($generated@@140 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@184) ($generated@@0 ($generated@@85 $generated@@269 $generated@@271))) ($generated@@258 $generated@@271 $generated@@270))
 :pattern ( ($generated@@85 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@140 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@67)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@80 $generated@@184 $generated@@4)) (= (type $generated@@275) $generated@@67)) (= ($generated@@140 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@184) ($generated@@0 ($generated@@85 $generated@@274 $generated@@276))) ($generated@@258 $generated@@276 $generated@@275))
 :pattern ( ($generated@@85 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@140 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@277 $generated@@278) $generated@@278)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@67)) (= (type $generated@@286) $generated@@184)) (= (type $generated@@287) $generated@@184)) (= (type $generated@@288) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@155 $generated@@288)) (= ($generated@@78 ($generated@@257 $generated@@286 $generated@@287) ($generated@@174 $generated@@284 $generated@@285) $generated@@288)  (and ($generated@@283 $generated@@286 $generated@@284 $generated@@288) ($generated@@283 $generated@@287 $generated@@285 $generated@@288))))
 :pattern ( ($generated@@78 ($generated@@257 $generated@@286 $generated@@287) ($generated@@174 $generated@@284 $generated@@285) $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@71)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@175) (= ($generated@@173 $generated@@291) (= ($generated@@289 $generated@@291) $generated@@63)))
 :pattern ( ($generated@@173 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@175) ($generated@@173 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@184) (= (type $generated@@294) $generated@@184)) (= $generated@@292 ($generated@@257 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@173 $generated@@292))
)))
(assert  (and (and (forall (($generated@@299 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@299)) 17)) (forall (($generated@@300 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
))) (forall (($generated@@301 T@T) ) (! (= (type ($generated@@295 $generated@@301)) ($generated@@297 $generated@@301))
 :pattern ( ($generated@@295 $generated@@301))
))))
(assert (forall (($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@302)) 0)
 :pattern ( ($generated@@295 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 Int) ) (! (= (type ($generated@@303 $generated@@304 $generated@@305)) ($generated@@69 $generated@@184))
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 Int) ) (!  (=> (= (type $generated@@306) ($generated@@69 $generated@@184)) (= ($generated@@75 ($generated@@303 $generated@@306 $generated@@307)) (+ ($generated@@75 $generated@@306) 1)))
 :pattern ( ($generated@@303 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@67) (= (type $generated@@309) $generated@@81)) (= ($generated@@140 $generated@@309 ($generated@@166 $generated@@308))  (and ($generated@@140 $generated@@309 ($generated@@137 $generated@@308)) (not (= $generated@@309 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@309 ($generated@@166 $generated@@308)))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@184)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@67) (= (type $generated@@314) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@283 ($generated@@310 $generated@@312) $generated@@313 $generated@@314) ($generated@@78 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@283 ($generated@@310 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@315) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@316) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@317) $generated@@184)) (= (type $generated@@318) $generated@@67)) ($generated@@148 $generated@@315 $generated@@316)) ($generated@@283 $generated@@317 $generated@@318 $generated@@315)) ($generated@@283 $generated@@317 $generated@@318 $generated@@316))
 :pattern ( ($generated@@148 $generated@@315 $generated@@316) ($generated@@283 $generated@@317 $generated@@318 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@319) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@320) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@322) $generated@@67)) ($generated@@148 $generated@@319 $generated@@320)) ($generated@@78 $generated@@321 $generated@@322 $generated@@319)) ($generated@@78 $generated@@321 $generated@@322 $generated@@320))
 :pattern ( ($generated@@148 $generated@@319 $generated@@320) ($generated@@78 $generated@@321 $generated@@322 $generated@@319))
)))
(assert (forall (($generated@@325 T@T) ) (! (= (type ($generated@@324 $generated@@325)) ($generated@@80 $generated@@325 $generated@@2))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@83 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@80 $generated@@327 $generated@@2)) (and (= (= ($generated@@323 $generated@@326) 0) (= $generated@@326 ($generated@@324 $generated@@327))) (=> (not (= ($generated@@323 $generated@@326) 0)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) (< 0 ($generated ($generated@@85 $generated@@326 $generated@@328))))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@72)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@331)) $generated@@61) (= ($generated@@329 ($generated@@137 $generated@@331)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@67) (and (= ($generated@@76 ($generated@@166 $generated@@332)) $generated@@62) (= ($generated@@329 ($generated@@166 $generated@@332)) $generated@@65)))
 :pattern ( ($generated@@166 $generated@@332))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 18)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@80 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@85 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@85 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert  (and (and (and (and (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (= ($generated@@1 ($generated@@353 $generated@@356 $generated@@357)) 19)) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@353 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@355 ($generated@@353 $generated@@360 $generated@@361)) $generated@@361)
 :pattern ( ($generated@@353 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@354 (type $generated@@362))))
(= (type ($generated@@351 $generated@@362)) ($generated@@80 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@362))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= (type ($generated@@352 $generated@@364 $generated@@365)) ($generated@@353 $generated@@364 $generated@@365))
 :pattern ( ($generated@@352 $generated@@364 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@T) ) (! (let (($generated@@368 (type $generated@@366)))
 (not ($generated@@0 ($generated@@85 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366))))
 :pattern ( (let (($generated@@368 (type $generated@@366)))
($generated@@85 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366)))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@83 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@80 $generated@@370 $generated@@2)) (= ($generated@@197 $generated@@369) (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@370) (and (<= 0 ($generated ($generated@@85 $generated@@369 $generated@@371))) (<= ($generated ($generated@@85 $generated@@369 $generated@@371)) ($generated@@323 $generated@@369))))
 :pattern ( ($generated@@85 $generated@@369 $generated@@371))
)))))
 :pattern ( ($generated@@197 $generated@@369))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@67) (= (type $generated@@373) $generated@@81)) (= ($generated@@140 $generated@@373 ($generated@@137 $generated@@372))  (or (= $generated@@373 $generated@@138) (= ($generated@@139 $generated@@373) ($generated@@137 $generated@@372)))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@137 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@337 (type $generated@@374))))
(let (($generated@@376 ($generated@@336 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@335 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@334 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@85 ($generated@@333 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@333 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@337 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@80 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@337 (type $generated@@381))))
(let (($generated@@383 ($generated@@336 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@335 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@334 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@85 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@355 (type $generated@@385))))
(let (($generated@@387 ($generated@@354 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@353 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@352 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@351 $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@355 (type $generated@@390))))
(= (type ($generated@@389 $generated@@390)) ($generated@@80 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@355 (type $generated@@392))))
(let (($generated@@394 ($generated@@354 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@353 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@352 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@393) ($generated@@0 ($generated@@85 ($generated@@389 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@389 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@80 $generated@@184 $generated@@2)) (= (type $generated@@397) $generated@@67)) (= ($generated@@140 $generated@@396 ($generated@@196 $generated@@397)) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@184) (< 0 ($generated ($generated@@85 $generated@@396 $generated@@398)))) ($generated@@258 $generated@@398 $generated@@397))
 :pattern ( ($generated@@85 $generated@@396 $generated@@398))
))))
 :pattern ( ($generated@@140 $generated@@396 ($generated@@196 $generated@@397)))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@80 $generated@@184 $generated@@4)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@399 ($generated@@267 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@184) ($generated@@0 ($generated@@85 $generated@@399 $generated@@402))) ($generated@@283 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@85 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@78 $generated@@399 ($generated@@267 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@80 $generated@@184 $generated@@4)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@403 ($generated@@272 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@184) ($generated@@0 ($generated@@85 $generated@@403 $generated@@406))) ($generated@@283 $generated@@406 $generated@@404 $generated@@405))
 :pattern ( ($generated@@85 $generated@@403 $generated@@406))
))))
 :pattern ( ($generated@@78 $generated@@403 ($generated@@272 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(= ($generated ($generated@@85 ($generated@@324 $generated@@408) $generated@@407)) 0))
 :pattern ( (let (($generated@@408 (type $generated@@407)))
($generated@@85 ($generated@@324 $generated@@408) $generated@@407)))
)))
(assert  (and (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@409 $generated@@412)) ($generated@@80 $generated@@184 $generated@@4))
 :pattern ( ($generated@@409 $generated@@412))
)) (forall (($generated@@413 T@T) ($generated@@414 T@U) ) (! (= (type ($generated@@410 $generated@@413 $generated@@414)) $generated@@413)
 :pattern ( ($generated@@410 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@337 (type $generated@@415))))
(let (($generated@@417 ($generated@@336 (type $generated@@415))))
(= (type ($generated@@411 $generated@@415)) ($generated@@80 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@411 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@335 $generated@@184 $generated@@184)) (= (type $generated@@419) $generated@@184)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@85 ($generated@@333 $generated@@418) ($generated@@182 ($generated@@410 $generated@@175 $generated@@419)))) (= ($generated@@85 ($generated@@411 $generated@@418) ($generated@@182 ($generated@@410 $generated@@175 $generated@@419))) ($generated@@183 ($generated@@410 $generated@@175 $generated@@419))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@80 $generated@@184 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@355 (type $generated@@423))))
(let (($generated@@425 ($generated@@354 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@80 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@353 $generated@@184 $generated@@184)) (= (type $generated@@427) $generated@@184)) (= ($generated@@0 ($generated@@85 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@85 ($generated@@351 $generated@@426) ($generated@@182 ($generated@@410 $generated@@175 $generated@@427)))) (= ($generated@@85 ($generated@@421 $generated@@426) ($generated@@182 ($generated@@410 $generated@@175 $generated@@427))) ($generated@@183 ($generated@@410 $generated@@175 $generated@@427))))))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@336 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@335 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@85 ($generated@@378 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@85 ($generated@@333 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@85 ($generated@@411 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@85 ($generated@@333 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@85 ($generated@@378 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@354 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@353 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@85 ($generated@@389 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@85 ($generated@@351 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@85 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@433) $generated@@437))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@335 $generated@@184 $generated@@184)) (= (type $generated@@442) $generated@@67)) (= (type $generated@@443) $generated@@67)) (= (type $generated@@444) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@184) ($generated@@0 ($generated@@85 ($generated@@333 $generated@@441) $generated@@445))) (and ($generated@@283 ($generated@@85 ($generated@@411 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@283 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@441) $generated@@445))
 :pattern ( ($generated@@85 ($generated@@333 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@353 $generated@@184 $generated@@184)) (= (type $generated@@450) $generated@@67)) (= (type $generated@@451) $generated@@67)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@184) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@449) $generated@@453))) (and ($generated@@283 ($generated@@85 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@283 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@454) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@455) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@456) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@454 $generated@@456))) (and ($generated@@148 $generated@@454 $generated@@455) ($generated@@148 $generated@@455 $generated@@456))) ($generated@@148 $generated@@454 $generated@@456))
 :pattern ( ($generated@@148 $generated@@454 $generated@@455) ($generated@@148 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 Int) ) (! (= (type ($generated@@457 $generated@@458)) ($generated@@69 $generated@@184))
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 Int) ($generated@@463 Int) ) (!  (=> (and (and (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@461) $generated@@81)) (and (and ($generated@@155 $generated@@460) (and (not (= $generated@@461 $generated@@138)) (= ($generated@@139 $generated@@461) ($generated@@137 $generated@@459)))) (and (and (<= 0 $generated@@462) (< $generated@@462 ($generated@@136 $generated@@461))) (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@145 $generated@@461)))))) ($generated@@258 ($generated@@87 ($generated@@85 $generated@@460 $generated@@461) ($generated@@303 ($generated@@457 $generated@@462) $generated@@463)) $generated@@459))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@460 $generated@@461) ($generated@@303 ($generated@@457 $generated@@462) $generated@@463)) ($generated@@137 $generated@@459))
)))
(assert (forall (($generated@@465 T@T) ) (! (= (type ($generated@@464 $generated@@465)) ($generated@@80 $generated@@465 $generated@@4))
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@355 (type $generated@@466))))
(let (($generated@@468 ($generated@@354 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@353 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@352 $generated@@468 $generated@@467)) (= ($generated@@351 $generated@@466) ($generated@@464 $generated@@468))))))
 :pattern ( ($generated@@351 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@355 (type $generated@@469))))
(let (($generated@@471 ($generated@@354 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@353 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@352 $generated@@471 $generated@@470)) (= ($generated@@389 $generated@@469) ($generated@@464 $generated@@470))))))
 :pattern ( ($generated@@389 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@355 (type $generated@@472))))
(let (($generated@@474 ($generated@@354 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@353 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@352 $generated@@474 $generated@@473)) (= ($generated@@420 $generated@@472) ($generated@@464 $generated@@184))))))
 :pattern ( ($generated@@420 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@337 (type $generated@@475))))
(let (($generated@@477 ($generated@@336 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@335 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@334 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@184) (= (type $generated@@479) $generated@@184)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@475) ($generated@@310 ($generated@@257 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@409 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@355 (type $generated@@480))))
(let (($generated@@482 ($generated@@354 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@353 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@352 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@184) (= (type $generated@@484) $generated@@184)) ($generated@@0 ($generated@@85 ($generated@@420 $generated@@480) ($generated@@310 ($generated@@257 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@420 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@184) ($generated@@258 $generated@@485 $generated@@46)) (and (= ($generated@@310 ($generated@@410 $generated@@2 $generated@@485)) $generated@@485) ($generated@@140 ($generated@@410 $generated@@2 $generated@@485) $generated@@46)))
 :pattern ( ($generated@@258 $generated@@485 $generated@@46))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@184) ($generated@@258 $generated@@486 $generated@@47)) (and (= ($generated@@310 ($generated@@410 $generated@@3 $generated@@486)) $generated@@486) ($generated@@140 ($generated@@410 $generated@@3 $generated@@486) $generated@@47)))
 :pattern ( ($generated@@258 $generated@@486 $generated@@47))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@184) ($generated@@258 $generated@@487 $generated@@44)) (and (= ($generated@@310 ($generated@@410 $generated@@4 $generated@@487)) $generated@@487) ($generated@@140 ($generated@@410 $generated@@4 $generated@@487) $generated@@44)))
 :pattern ( ($generated@@258 $generated@@487 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@488) 20))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@184) ($generated@@258 $generated@@489 $generated@@45)) (and (= ($generated@@310 ($generated@@410 $generated@@488 $generated@@489)) $generated@@489) ($generated@@140 ($generated@@410 $generated@@488 $generated@@489) $generated@@45)))
 :pattern ( ($generated@@258 $generated@@489 $generated@@45))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@258 ($generated@@310 $generated@@490) $generated@@491) ($generated@@140 $generated@@490 $generated@@491)))
 :pattern ( ($generated@@258 ($generated@@310 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@81) (<= 0 ($generated@@136 $generated@@492)))
 :pattern ( ($generated@@136 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@81) (<= 0 ($generated@@145 $generated@@493)))
 :pattern ( ($generated@@145 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@83 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@80 $generated@@495 $generated@@2)) (<= 0 ($generated@@323 $generated@@494))))
 :pattern ( ($generated@@323 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@298 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@297 $generated@@497)) (<= 0 ($generated@@296 $generated@@496))))
 :pattern ( ($generated@@296 $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= ($generated@@498 ($generated@@438 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@67) (= (type $generated@@505) $generated@@67)) (= ($generated@@502 ($generated@@438 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@438 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@76 ($generated@@438 $generated@@506 $generated@@507)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@67) (= (type $generated@@511) $generated@@67)) (= ($generated@@508 ($generated@@446 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@446 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= ($generated@@512 ($generated@@446 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@446 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@67) (= (type $generated@@517) $generated@@67)) (= ($generated@@76 ($generated@@446 $generated@@516 $generated@@517)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@184) (= (type $generated@@519) $generated@@184)) (= ($generated@@289 ($generated@@257 $generated@@518 $generated@@519)) $generated@@63))
 :pattern ( ($generated@@257 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (= ($generated@@520 ($generated@@174 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@174 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@67) (= (type $generated@@527) $generated@@67)) (= ($generated@@524 ($generated@@174 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@174 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@184) (= (type $generated@@529) $generated@@184)) (= ($generated@@182 ($generated@@257 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@257 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@184) (= (type $generated@@531) $generated@@184)) (= ($generated@@183 ($generated@@257 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@257 $generated@@530 $generated@@531))
)))
(assert  (and (forall (($generated@@534 T@U) ) (! (= (type ($generated@@532 $generated@@534)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@534))
)) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (! (let (($generated@@537 ($generated@@298 (type $generated@@535))))
(= (type ($generated@@533 $generated@@535 $generated@@536)) $generated@@537))
 :pattern ( ($generated@@533 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@297 $generated@@184)) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@538 ($generated@@532 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@296 $generated@@538))) ($generated@@283 ($generated@@533 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@533 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@78 $generated@@538 ($generated@@532 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@79 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@79 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@267 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@267 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@76 ($generated@@267 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@267 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@67) (= ($generated@@548 ($generated@@272 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@272 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@67) (= ($generated@@76 ($generated@@272 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@272 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@67)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@67) (= ($generated@@552 ($generated@@196 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@196 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@67) (= ($generated@@76 ($generated@@196 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@67)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@67) (= ($generated@@556 ($generated@@532 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@532 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@67) (= ($generated@@76 ($generated@@532 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@532 $generated@@559))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@75 ($generated@@457 $generated@@560)) 1)
 :pattern ( ($generated@@457 $generated@@560))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@561 ($generated@@457 $generated@@562)) $generated@@562)
 :pattern ( ($generated@@457 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@67)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@67) (= ($generated@@563 ($generated@@137 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@137 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@67)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@67) (= ($generated@@566 ($generated@@166 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@166 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
(= ($generated@@410 $generated@@570 ($generated@@310 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@310 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@335 $generated@@184 $generated@@184)) (= (type $generated@@572) $generated@@67)) (= (type $generated@@573) $generated@@67)) (= ($generated@@140 $generated@@571 ($generated@@438 $generated@@572 $generated@@573)) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@184) ($generated@@0 ($generated@@85 ($generated@@333 $generated@@571) $generated@@574))) (and ($generated@@258 ($generated@@85 ($generated@@411 $generated@@571) $generated@@574) $generated@@573) ($generated@@258 $generated@@574 $generated@@572)))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@571) $generated@@574))
 :pattern ( ($generated@@85 ($generated@@333 $generated@@571) $generated@@574))
))))
 :pattern ( ($generated@@140 $generated@@571 ($generated@@438 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@353 $generated@@184 $generated@@184)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) $generated@@67)) (= ($generated@@140 $generated@@575 ($generated@@446 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@184) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@575) $generated@@578))) (and ($generated@@258 ($generated@@85 ($generated@@421 $generated@@575) $generated@@578) $generated@@577) ($generated@@258 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@575) $generated@@578))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@140 $generated@@575 ($generated@@446 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@184) (= (type $generated@@582) $generated@@184)) (< ($generated@@579 $generated@@581) ($generated@@580 ($generated@@257 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@257 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@184) (= (type $generated@@584) $generated@@184)) (< ($generated@@579 $generated@@584) ($generated@@580 ($generated@@257 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@257 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 Int) ($generated@@589 Int) ) (!  (=> (and (and (= (type $generated@@585) $generated@@67) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@587) $generated@@81)) (=> (and (and (and ($generated@@155 $generated@@586) (and (not (= $generated@@587 $generated@@138)) (= ($generated@@139 $generated@@587) ($generated@@137 $generated@@585)))) (and (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@136 $generated@@587))) (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@145 $generated@@587))))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@586 $generated@@587) $generated@@60))) ($generated@@283 ($generated@@87 ($generated@@85 $generated@@586 $generated@@587) ($generated@@303 ($generated@@457 $generated@@588) $generated@@589)) $generated@@585 $generated@@586)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@586 $generated@@587) ($generated@@303 ($generated@@457 $generated@@588) $generated@@589)) ($generated@@137 $generated@@585))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@184) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) ($generated@@258 $generated@@590 ($generated@@438 $generated@@591 $generated@@592))) (and (= ($generated@@310 ($generated@@410 ($generated@@335 $generated@@184 $generated@@184) $generated@@590)) $generated@@590) ($generated@@140 ($generated@@410 ($generated@@335 $generated@@184 $generated@@184) $generated@@590) ($generated@@438 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@258 $generated@@590 ($generated@@438 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@184) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) $generated@@67)) ($generated@@258 $generated@@593 ($generated@@446 $generated@@594 $generated@@595))) (and (= ($generated@@310 ($generated@@410 ($generated@@353 $generated@@184 $generated@@184) $generated@@593)) $generated@@593) ($generated@@140 ($generated@@410 ($generated@@353 $generated@@184 $generated@@184) $generated@@593) ($generated@@446 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@258 $generated@@593 ($generated@@446 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@67) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) $generated@@184)) ($generated@@258 $generated@@598 ($generated@@174 $generated@@596 $generated@@597))) (and (= ($generated@@310 ($generated@@410 $generated@@175 $generated@@598)) $generated@@598) ($generated@@140 ($generated@@410 $generated@@175 $generated@@598) ($generated@@174 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@258 $generated@@598 ($generated@@174 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
 (not ($generated@@0 ($generated@@85 ($generated@@464 $generated@@600) $generated@@599))))
 :pattern ( (let (($generated@@600 (type $generated@@599)))
($generated@@85 ($generated@@464 $generated@@600) $generated@@599)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@70 (type $generated@@603))))
(= (type ($generated@@601 $generated@@603)) ($generated@@69 $generated@@604)))
 :pattern ( ($generated@@601 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ) (!  (=> (= (type $generated@@605) ($generated@@69 $generated@@184)) (and (= ($generated@@601 ($generated@@303 $generated@@605 $generated@@606)) $generated@@605) (= ($generated@@602 ($generated@@303 $generated@@605 $generated@@606)) $generated@@606)))
 :pattern ( ($generated@@303 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@67) (= (type $generated@@608) $generated@@67)) (and (= ($generated@@76 ($generated@@174 $generated@@607 $generated@@608)) $generated@@64) (= ($generated@@329 ($generated@@174 $generated@@607 $generated@@608)) $generated@@66)))
 :pattern ( ($generated@@174 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@175) (= ($generated@@579 ($generated@@310 $generated@@609)) ($generated@@580 $generated@@609)))
 :pattern ( ($generated@@579 ($generated@@310 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@184) ($generated@@258 $generated@@610 ($generated@@79 0))) (and (= ($generated@@310 ($generated@@410 $generated@@2 $generated@@610)) $generated@@610) ($generated@@140 ($generated@@410 ($generated@@80 $generated@@184 $generated@@4) $generated@@610) ($generated@@79 0))))
 :pattern ( ($generated@@258 $generated@@610 ($generated@@79 0)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@184) (= (type $generated@@612) $generated@@67)) ($generated@@258 $generated@@611 ($generated@@267 $generated@@612))) (and (= ($generated@@310 ($generated@@410 ($generated@@80 $generated@@184 $generated@@4) $generated@@611)) $generated@@611) ($generated@@140 ($generated@@410 ($generated@@80 $generated@@184 $generated@@4) $generated@@611) ($generated@@267 $generated@@612))))
 :pattern ( ($generated@@258 $generated@@611 ($generated@@267 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@184) (= (type $generated@@614) $generated@@67)) ($generated@@258 $generated@@613 ($generated@@272 $generated@@614))) (and (= ($generated@@310 ($generated@@410 ($generated@@80 $generated@@184 $generated@@4) $generated@@613)) $generated@@613) ($generated@@140 ($generated@@410 ($generated@@80 $generated@@184 $generated@@4) $generated@@613) ($generated@@272 $generated@@614))))
 :pattern ( ($generated@@258 $generated@@613 ($generated@@272 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@184) (= (type $generated@@616) $generated@@67)) ($generated@@258 $generated@@615 ($generated@@196 $generated@@616))) (and (= ($generated@@310 ($generated@@410 ($generated@@80 $generated@@184 $generated@@2) $generated@@615)) $generated@@615) ($generated@@140 ($generated@@410 ($generated@@80 $generated@@184 $generated@@2) $generated@@615) ($generated@@196 $generated@@616))))
 :pattern ( ($generated@@258 $generated@@615 ($generated@@196 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@184) (= (type $generated@@618) $generated@@67)) ($generated@@258 $generated@@617 ($generated@@532 $generated@@618))) (and (= ($generated@@310 ($generated@@410 ($generated@@297 $generated@@184) $generated@@617)) $generated@@617) ($generated@@140 ($generated@@410 ($generated@@297 $generated@@184) $generated@@617) ($generated@@532 $generated@@618))))
 :pattern ( ($generated@@258 $generated@@617 ($generated@@532 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@67) (= (type $generated@@620) $generated@@184)) ($generated@@258 $generated@@620 ($generated@@137 $generated@@619))) (and (= ($generated@@310 ($generated@@410 $generated@@81 $generated@@620)) $generated@@620) ($generated@@140 ($generated@@410 $generated@@81 $generated@@620) ($generated@@137 $generated@@619))))
 :pattern ( ($generated@@258 $generated@@620 ($generated@@137 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@67) (= (type $generated@@622) $generated@@184)) ($generated@@258 $generated@@622 ($generated@@166 $generated@@621))) (and (= ($generated@@310 ($generated@@410 $generated@@81 $generated@@622)) $generated@@622) ($generated@@140 ($generated@@410 $generated@@81 $generated@@622) ($generated@@166 $generated@@621))))
 :pattern ( ($generated@@258 $generated@@622 ($generated@@166 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@626)))
 (=> (and (and (and (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@624) $generated@@81)) (= (type $generated@@625) ($generated@@69 $generated@@627))) ($generated@@155 ($generated@@86 $generated@@623 $generated@@624 ($generated@@88 ($generated@@85 $generated@@623 $generated@@624) $generated@@625 $generated@@626)))) ($generated@@148 $generated@@623 ($generated@@86 $generated@@623 $generated@@624 ($generated@@88 ($generated@@85 $generated@@623 $generated@@624) $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@86 $generated@@623 $generated@@624 ($generated@@88 ($generated@@85 $generated@@623 $generated@@624) $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@628) ($generated@@80 $generated@@184 $generated@@2)) (= (type $generated@@629) $generated@@67)) (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@628 ($generated@@196 $generated@@629) $generated@@630) (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@184) (< 0 ($generated ($generated@@85 $generated@@628 $generated@@631)))) ($generated@@283 $generated@@631 $generated@@629 $generated@@630))
 :pattern ( ($generated@@85 $generated@@628 $generated@@631))
))))
 :pattern ( ($generated@@78 $generated@@628 ($generated@@196 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@175) (= (type $generated@@633) $generated@@67)) (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@155 $generated@@634) (and ($generated@@173 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@67) ($generated@@78 $generated@@632 ($generated@@174 $generated@@633 $generated@@635) $generated@@634))
 :pattern ( ($generated@@78 $generated@@632 ($generated@@174 $generated@@633 $generated@@635) $generated@@634))
))))) ($generated@@283 ($generated@@182 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@283 ($generated@@182 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@175) (= (type $generated@@637) $generated@@67)) (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@155 $generated@@638) (and ($generated@@173 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@67) ($generated@@78 $generated@@636 ($generated@@174 $generated@@639 $generated@@637) $generated@@638))
 :pattern ( ($generated@@78 $generated@@636 ($generated@@174 $generated@@639 $generated@@637) $generated@@638))
))))) ($generated@@283 ($generated@@183 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@283 ($generated@@183 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@184) (= (type $generated@@641) $generated@@184)) (= ($generated@@257 ($generated@@279 $generated@@640) ($generated@@279 $generated@@641)) ($generated@@279 ($generated@@257 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@257 ($generated@@279 $generated@@640) ($generated@@279 $generated@@641)))
)))
(assert (forall (($generated@@642 Int) ) (! (= ($generated@@310 ($generated@@8 ($generated@@277 $generated@@642))) ($generated@@279 ($generated@@310 ($generated@@8 $generated@@642))))
 :pattern ( ($generated@@310 ($generated@@8 ($generated@@277 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@310 ($generated@@279 $generated@@643)) ($generated@@279 ($generated@@310 $generated@@643)))
 :pattern ( ($generated@@310 ($generated@@279 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@298 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@297 $generated@@645)) (= ($generated@@296 $generated@@644) 0)) (= $generated@@644 ($generated@@295 $generated@@645))))
 :pattern ( ($generated@@296 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@80 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@323 ($generated@@86 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@323 $generated@@646) ($generated ($generated@@85 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@323 ($generated@@86 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@651) $generated@@2)) ($generated@@78 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@78 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@653) $generated@@3)) ($generated@@78 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@78 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@655) $generated@@4)) ($generated@@78 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@78 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@657) $generated@@488)) ($generated@@78 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@78 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@659) $generated@@184)) ($generated@@78 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@78 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@297 $generated@@184)) (= (type $generated@@661) $generated@@67)) (= ($generated@@140 $generated@@660 ($generated@@532 $generated@@661)) (forall (($generated@@662 Int) ) (!  (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@296 $generated@@660))) ($generated@@258 ($generated@@533 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@533 $generated@@660 $generated@@662))
))))
 :pattern ( ($generated@@140 $generated@@660 ($generated@@532 $generated@@661)))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@664) $generated@@81)) (or ($generated@@165 $generated@@663 $generated@@664) (and (not (= 1 $generated@@163)) (and ($generated@@155 $generated@@663) ($generated@@140 $generated@@664 ($generated@@166 $generated@@44)))))) (= ($generated@@164 $generated@@663 $generated@@664) (exists (($generated@@665 Int) ($generated@@666 Int) ) (!  (and (and (and (<= ($generated@@277 0) $generated@@665) (< $generated@@665 ($generated@@136 $generated@@664))) (and (<= ($generated@@277 0) $generated@@666) (< $generated@@666 ($generated@@145 $generated@@664)))) ($generated@@0 ($generated@@410 $generated@@4 ($generated@@87 ($generated@@85 $generated@@663 $generated@@664) ($generated@@303 ($generated@@457 $generated@@665) $generated@@666)))))
 :pattern ( ($generated@@410 $generated@@4 ($generated@@87 ($generated@@85 $generated@@663 $generated@@664) ($generated@@303 ($generated@@457 $generated@@665) $generated@@666))))
))))
 :pattern ( ($generated@@164 $generated@@663 $generated@@664) ($generated@@155 $generated@@663))
))))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@297 $generated@@184)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@296 $generated@@668))) (< ($generated@@580 ($generated@@410 $generated@@175 ($generated@@533 $generated@@668 $generated@@669))) ($generated@@667 $generated@@668))))
 :pattern ( ($generated@@580 ($generated@@410 $generated@@175 ($generated@@533 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@335 $generated@@184 $generated@@184)) (= (type $generated@@671) $generated@@67)) (= (type $generated@@672) $generated@@67)) ($generated@@140 $generated@@670 ($generated@@438 $generated@@671 $generated@@672))) (and (and ($generated@@140 ($generated@@333 $generated@@670) ($generated@@267 $generated@@671)) ($generated@@140 ($generated@@378 $generated@@670) ($generated@@267 $generated@@672))) ($generated@@140 ($generated@@409 $generated@@670) ($generated@@267 ($generated@@174 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@140 $generated@@670 ($generated@@438 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@353 $generated@@184 $generated@@184)) (= (type $generated@@674) $generated@@67)) (= (type $generated@@675) $generated@@67)) ($generated@@140 $generated@@673 ($generated@@446 $generated@@674 $generated@@675))) (and (and ($generated@@140 ($generated@@351 $generated@@673) ($generated@@272 $generated@@674)) ($generated@@140 ($generated@@389 $generated@@673) ($generated@@272 $generated@@675))) ($generated@@140 ($generated@@420 $generated@@673) ($generated@@272 ($generated@@174 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@140 $generated@@673 ($generated@@446 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@140 $generated@@676 $generated@@46))
 :pattern ( ($generated@@140 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@140 $generated@@677 $generated@@47))
 :pattern ( ($generated@@140 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@140 $generated@@678 $generated@@44))
 :pattern ( ($generated@@140 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@488) ($generated@@140 $generated@@679 $generated@@45))
 :pattern ( ($generated@@140 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@184) ($generated@@140 $generated@@680 $generated@@48))
 :pattern ( ($generated@@140 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Bool)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () Bool)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () Bool)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@684) $generated@@81) (= (type $generated@@702) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@685) ($generated@@203 $generated@@81 $generated@@4))) (= (type $generated@@692) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@693) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@701) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@704) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@705) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@707) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 41) (let (($generated@@708  (=> (and (and (<= ($generated@@277 0) $generated@@681) (< $generated@@681 $generated@@682)) (and (<= ($generated@@277 0) $generated@@683) (< $generated@@683 $generated@@682))) (and (=> (= (ControlFlow 0 26) (- 0 30)) (not (= $generated@@684 $generated@@138))) (=> (not (= $generated@@684 $generated@@138)) (and (=> (= (ControlFlow 0 26) (- 0 29)) (and (<= 0 $generated@@681) (< $generated@@681 ($generated@@136 $generated@@684)))) (and (=> (= (ControlFlow 0 26) (- 0 28)) (and (<= 0 $generated@@683) (< $generated@@683 ($generated@@145 $generated@@684)))) (and (=> (= (ControlFlow 0 26) (- 0 27)) ($generated@@0 ($generated@@201 $generated@@685 $generated@@684 ($generated@@303 ($generated@@457 $generated@@681) $generated@@683)))) (=> ($generated@@0 ($generated@@201 $generated@@685 $generated@@684 ($generated@@303 ($generated@@457 $generated@@681) $generated@@683))) (=> (and (and (and (<= ($generated@@277 0) $generated@@686) (< $generated@@686 $generated@@682)) (and (<= ($generated@@277 0) $generated@@687) (< $generated@@687 $generated@@682))) (and (not (and (= $generated@@681 $generated@@686) (= $generated@@683 $generated@@687))) (= (ControlFlow 0 26) (- 0 25)))) (or (or (not (= $generated@@684 $generated@@684)) (not (= ($generated@@303 ($generated@@457 $generated@@681) $generated@@683) ($generated@@303 ($generated@@457 $generated@@686) $generated@@687)))) (= ($generated@@0 ($generated@@279 ($generated@@11 false))) ($generated@@0 ($generated@@279 ($generated@@11 false)))))))))))))))
(let (($generated@@709  (=> (and (< $generated@@683 ($generated@@277 0)) (= (ControlFlow 0 33) 26)) $generated@@708)))
(let (($generated@@710  (=> (and (<= ($generated@@277 0) $generated@@683) (= (ControlFlow 0 32) 26)) $generated@@708)))
(let (($generated@@711  (=> (and (<= ($generated@@277 0) $generated@@681) (< $generated@@681 $generated@@682)) (and (=> (= (ControlFlow 0 34) 32) $generated@@710) (=> (= (ControlFlow 0 34) 33) $generated@@709)))))
(let (($generated@@712  (=> (and (not (and (<= ($generated@@277 0) $generated@@681) (< $generated@@681 $generated@@682))) (= (ControlFlow 0 31) 26)) $generated@@708)))
(let (($generated@@713  (=> (< $generated@@681 ($generated@@277 0)) (and (=> (= (ControlFlow 0 36) 34) $generated@@711) (=> (= (ControlFlow 0 36) 31) $generated@@712)))))
(let (($generated@@714  (=> (<= ($generated@@277 0) $generated@@681) (and (=> (= (ControlFlow 0 35) 34) $generated@@711) (=> (= (ControlFlow 0 35) 31) $generated@@712)))))
(let (($generated@@715  (and (=> (= (ControlFlow 0 37) 35) $generated@@714) (=> (= (ControlFlow 0 37) 36) $generated@@713))))
(let (($generated@@716  (=> (and (< $generated@@688 $generated@@682) (= $generated@@689 (- $generated@@682 $generated@@688))) (and (=> (= (ControlFlow 0 11) (- 0 16)) (not (= $generated@@684 $generated@@138))) (=> (not (= $generated@@684 $generated@@138)) (and (=> (= (ControlFlow 0 11) (- 0 15)) (and (<= 0 $generated@@690) (< $generated@@690 ($generated@@136 $generated@@684)))) (=> (and (<= 0 $generated@@690) (< $generated@@690 ($generated@@136 $generated@@684))) (and (=> (= (ControlFlow 0 11) (- 0 14)) (and (<= 0 $generated@@688) (< $generated@@688 ($generated@@145 $generated@@684)))) (=> (and (<= 0 $generated@@688) (< $generated@@688 ($generated@@145 $generated@@684))) (and (=> (= (ControlFlow 0 11) (- 0 13)) ($generated@@0 ($generated@@201 $generated@@685 $generated@@684 ($generated@@303 ($generated@@457 $generated@@690) $generated@@688)))) (=> ($generated@@0 ($generated@@201 $generated@@685 $generated@@684 ($generated@@303 ($generated@@457 $generated@@690) $generated@@688))) (=> (and (and (= $generated@@691 ($generated@@0 ($generated@@279 ($generated@@11 true)))) (= $generated@@692 ($generated@@86 $generated@@693 $generated@@684 ($generated@@88 ($generated@@85 $generated@@693 $generated@@684) ($generated@@303 ($generated@@457 $generated@@690) $generated@@688) ($generated@@310 ($generated@@11 $generated@@691)))))) (and ($generated@@155 $generated@@692) (= $generated@@694 (+ $generated@@688 1)))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (<= 0 $generated@@689) (= (- $generated@@682 $generated@@694) $generated@@689))) (=> (or (<= 0 $generated@@689) (= (- $generated@@682 $generated@@694) $generated@@689)) (=> (= (ControlFlow 0 11) (- 0 10)) (< (- $generated@@682 $generated@@694) $generated@@689))))))))))))))))
(let (($generated@@717  (=> (and (<= $generated@@682 $generated@@688) (= $generated@@695 (+ $generated@@690 1))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (<= 0 $generated@@696) (= (- $generated@@682 $generated@@695) $generated@@696))) (=> (or (<= 0 $generated@@696) (= (- $generated@@682 $generated@@695) $generated@@696)) (=> (= (ControlFlow 0 8) (- 0 7)) (< (- $generated@@682 $generated@@695) $generated@@696)))))))
(let (($generated@@718  (=> $generated@@697 (and (=> (= (ControlFlow 0 17) 8) $generated@@717) (=> (= (ControlFlow 0 17) 11) $generated@@716)))))
(let (($generated@@719 true))
(let (($generated@@720  (and (=> (= (ControlFlow 0 18) 6) $generated@@719) (=> (= (ControlFlow 0 18) 17) $generated@@718))))
(let (($generated@@721 true))
(let (($generated@@722  (=> (and ($generated@@155 $generated@@693) ($generated@@189 $generated@@693)) (=> (and (and (and (and (and (and (and (not false) (<= 0 $generated@@690)) (<= 0 $generated@@698)) $generated@@699) (<= 0 $generated@@688)) (<= 1 $generated@@700)) (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@81) (=> (and (not (= $generated@@723 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@701 $generated@@723) $generated@@60))) (= ($generated@@85 $generated@@693 $generated@@723) ($generated@@85 $generated@@702 $generated@@723))))
 :pattern ( ($generated@@85 $generated@@693 $generated@@723))
))) (and (and ($generated@@148 $generated@@702 $generated@@693) (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (! (let (($generated@@726 ($generated@@70 (type $generated@@725))))
 (=> (and (and (= (type $generated@@724) $generated@@81) (= (type $generated@@725) ($generated@@69 $generated@@726))) (and (not (= $generated@@724 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@702 $generated@@724) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@693 $generated@@724) $generated@@725) ($generated@@87 ($generated@@85 $generated@@702 $generated@@724) $generated@@725)) ($generated@@0 ($generated@@201 $generated@@685 $generated@@724 $generated@@725)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@693 $generated@@724) $generated@@725))
))) (and (<= (- $generated@@682 $generated@@688) $generated@@700) (=> (= (- $generated@@682 $generated@@688) $generated@@700) true)))) (and (=> (= (ControlFlow 0 19) 5) $generated@@721) (=> (= (ControlFlow 0 19) 18) $generated@@720))))))
(let (($generated@@727  (=> (< $generated@@690 $generated@@682) (=> (and (and (= $generated@@696 (- $generated@@682 $generated@@690)) (= $generated@@703 ($generated@@277 0))) (and (= $generated@@700 (- $generated@@682 $generated@@703)) (= (ControlFlow 0 20) 19))) $generated@@722))))
(let (($generated@@728  (=> (<= $generated@@682 $generated@@690) (=> (and (and ($generated@@78 $generated@@684 ($generated@@166 $generated@@44) $generated@@702) ($generated@@165 $generated@@702 $generated@@684)) (and ($generated@@165 $generated@@702 $generated@@684) (= (ControlFlow 0 4) (- 0 3)))) (not ($generated@@164 $generated@@702 $generated@@684))))))
(let (($generated@@729  (=> $generated@@699 (and (=> (= (ControlFlow 0 21) 4) $generated@@728) (=> (= (ControlFlow 0 21) 20) $generated@@727)))))
(let (($generated@@730 true))
(let (($generated@@731  (and (=> (= (ControlFlow 0 22) 2) $generated@@730) (=> (= (ControlFlow 0 22) 21) $generated@@729))))
(let (($generated@@732 true))
(let (($generated@@733  (=> (and ($generated@@155 $generated@@702) ($generated@@189 $generated@@702)) (=> (and (and (and (and (not false) (<= 0 $generated@@690)) (<= 0 $generated@@698)) (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@81) (=> (and (not (= $generated@@734 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@701 $generated@@734) $generated@@60))) (= ($generated@@85 $generated@@702 $generated@@734) ($generated@@85 $generated@@704 $generated@@734))))
 :pattern ( ($generated@@85 $generated@@702 $generated@@734))
))) (and (and ($generated@@148 $generated@@704 $generated@@702) (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (! (let (($generated@@737 ($generated@@70 (type $generated@@736))))
 (=> (and (and (= (type $generated@@735) $generated@@81) (= (type $generated@@736) ($generated@@69 $generated@@737))) (and (not (= $generated@@735 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@704 $generated@@735) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@702 $generated@@735) $generated@@736) ($generated@@87 ($generated@@85 $generated@@704 $generated@@735) $generated@@736)) ($generated@@0 ($generated@@201 $generated@@685 $generated@@735 $generated@@736)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@702 $generated@@735) $generated@@736))
))) (and (<= (- $generated@@682 $generated@@690) $generated@@698) (=> (= (- $generated@@682 $generated@@690) $generated@@698) true)))) (and (=> (= (ControlFlow 0 23) 1) $generated@@732) (=> (= (ControlFlow 0 23) 22) $generated@@731))))))
(let (($generated@@738  (=> (and (and (and ($generated@@155 $generated@@704) ($generated@@189 $generated@@704)) (and ($generated@@148 $generated@@705 $generated@@704) (forall (($generated@@739 T@U) ($generated@@740 T@U) ) (! (let (($generated@@741 ($generated@@70 (type $generated@@740))))
 (=> (and (= (type $generated@@739) $generated@@81) (= (type $generated@@740) ($generated@@69 $generated@@741))) (or (= ($generated@@87 ($generated@@85 $generated@@704 $generated@@739) $generated@@740) ($generated@@87 ($generated@@85 $generated@@705 $generated@@739) $generated@@740)) (exists (($generated@@742 Int) ($generated@@743 Int) )  (and (and (and (and (<= ($generated@@277 0) $generated@@742) (< $generated@@742 $generated@@682)) (and (<= ($generated@@277 0) $generated@@743) (< $generated@@743 $generated@@682))) (= $generated@@739 $generated@@684)) (= $generated@@740 ($generated@@303 ($generated@@457 $generated@@742) $generated@@743)))))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@704 $generated@@739) $generated@@740))
)))) (and (and (forall (($generated@@744 Int) ($generated@@745 Int) )  (=> (and (and (<= ($generated@@277 0) $generated@@744) (< $generated@@744 $generated@@682)) (and (<= ($generated@@277 0) $generated@@745) (< $generated@@745 $generated@@682))) (= ($generated@@87 ($generated@@85 $generated@@704 $generated@@684) ($generated@@303 ($generated@@457 $generated@@744) $generated@@745)) ($generated@@310 ($generated@@279 ($generated@@11 false)))))) (= $generated@@706 ($generated@@277 0))) (and (= $generated@@698 (- $generated@@682 $generated@@706)) (= (ControlFlow 0 24) 23)))) $generated@@733)))
(let (($generated@@746  (=> (= $generated@@685 ($generated@@202 $generated@@138 $generated@@701 $generated@@60 false)) (and (=> (= (ControlFlow 0 38) (- 0 40)) (<= 0 $generated@@682)) (=> (<= 0 $generated@@682) (and (=> (= (ControlFlow 0 38) (- 0 39)) (<= 0 $generated@@682)) (=> (<= 0 $generated@@682) (=> (and (and (and (not (= $generated@@684 $generated@@138)) (= ($generated@@139 $generated@@684) ($generated@@137 $generated@@44))) (and (not ($generated@@0 ($generated@@87 ($generated@@85 $generated@@701 $generated@@684) $generated@@60))) (= ($generated@@136 $generated@@684) $generated@@682))) (and (and (= ($generated@@145 $generated@@684) $generated@@682) (= $generated@@705 ($generated@@86 $generated@@701 $generated@@684 ($generated@@88 ($generated@@85 $generated@@701 $generated@@684) $generated@@60 ($generated@@11 true))))) (and ($generated@@155 $generated@@705) ($generated@@189 $generated@@705)))) (and (=> (= (ControlFlow 0 38) 37) $generated@@715) (=> (= (ControlFlow 0 38) 24) $generated@@738))))))))))
(let (($generated@@747  (=> (and ($generated@@155 $generated@@701) ($generated@@189 $generated@@701)) (=> (and (and (and ($generated@@140 $generated@@707 ($generated@@166 $generated@@44)) ($generated@@78 $generated@@707 ($generated@@166 $generated@@44) $generated@@701)) true) (and (= 2 $generated@@163) (= (ControlFlow 0 41) 38))) $generated@@746))))
$generated@@747))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 38) (- 40))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
