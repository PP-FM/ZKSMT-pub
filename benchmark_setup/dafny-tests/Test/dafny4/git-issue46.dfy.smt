(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@241 (T@U) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (Int) Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@368 (T@U) Bool)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U T@U) Bool)
(declare-fun $generated@@456 (T@U T@U) Bool)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@617 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@141 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@141 0)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@81)) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@81) (= (type $generated@@161) $generated@@81)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@164))
)) (= (type $generated@@163) $generated@@81)))
(assert (= ($generated@@162 $generated@@163) $generated@@64))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@68)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@169) $generated@@68)) ($generated@@145 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@145 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@83 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@71 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@83) (= (type $generated@@220) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@221) ($generated@@70 $generated@@4))) (= (type $generated@@223) $generated@@83)) (= (type $generated@@224) ($generated@@70 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= (type ($generated@@226 $generated@@228 $generated@@229)) $generated@@81)
 :pattern ( ($generated@@226 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (and (= (type $generated@@230) $generated@@68) (= (type $generated@@231) $generated@@68)) (= (type $generated@@232) $generated@@157)) (= (type $generated@@233) $generated@@157)) (= ($generated@@145 ($generated@@226 $generated@@232 $generated@@233) ($generated@@148 $generated@@230 $generated@@231))  (and ($generated@@227 $generated@@232 $generated@@230) ($generated@@227 $generated@@233 $generated@@231))))
 :pattern ( ($generated@@145 ($generated@@226 $generated@@232 $generated@@233) ($generated@@148 $generated@@230 $generated@@231)))
)))
(assert ($generated@@145 $generated@@163 $generated@@80))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@234)) ($generated@@78 $generated@@163 $generated@@80 $generated@@234))
 :pattern ( ($generated@@78 $generated@@163 $generated@@80 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@81) (= (type $generated@@236) $generated@@81)) (= ($generated@@154 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@154 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@81) (= (type $generated@@239) $generated@@81)) (= ($generated@@237 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@237 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@81)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (= (type $generated@@244) $generated@@81) (= (type $generated@@245) $generated@@81)) (and ($generated@@240 $generated@@244) ($generated@@240 $generated@@245))) (= ($generated@@237 $generated@@244 $generated@@245)  (and (= ($generated@@241 $generated@@244) ($generated@@241 $generated@@245)) ($generated@@237 ($generated@@242 $generated@@244) ($generated@@242 $generated@@245)))))
 :pattern ( ($generated@@237 $generated@@244 $generated@@245) ($generated@@240 $generated@@244))
 :pattern ( ($generated@@237 $generated@@244 $generated@@245) ($generated@@240 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@249) $generated@@68)) (= ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@157) ($generated@@0 ($generated@@88 $generated@@248 $generated@@250))) ($generated@@227 $generated@@250 $generated@@249))
 :pattern ( ($generated@@88 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@254) $generated@@68)) (= ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@157) ($generated@@0 ($generated@@88 $generated@@253 $generated@@255))) ($generated@@227 $generated@@255 $generated@@254))
 :pattern ( ($generated@@88 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 Int) ) (! (= ($generated@@256 $generated@@257) $generated@@257)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@81) (= (type $generated@@264) $generated@@81)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@237 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@237 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@237 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@68)) (= (type $generated@@268) $generated@@157)) (= (type $generated@@269) $generated@@157)) (= (type $generated@@270) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@270)) (= ($generated@@78 ($generated@@226 $generated@@268 $generated@@269) ($generated@@148 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@78 ($generated@@226 $generated@@268 $generated@@269) ($generated@@148 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@81) (= ($generated@@147 $generated@@271) (= ($generated@@162 $generated@@271) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@81) (= ($generated@@262 $generated@@272) (= ($generated@@162 $generated@@272) $generated@@64)))
 :pattern ( ($generated@@262 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@81) (= ($generated@@240 $generated@@273) (= ($generated@@162 $generated@@273) $generated@@65)))
 :pattern ( ($generated@@240 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@81) ($generated@@147 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@157) (= (type $generated@@276) $generated@@157)) (= $generated@@274 ($generated@@226 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@147 $generated@@274))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@81) ($generated@@240 $generated@@277)) (exists (($generated@@278 Int) ($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@81) (= $generated@@277 ($generated@@79 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@240 $generated@@277))
)))
(assert  (and (and (forall (($generated@@284 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@284)) 17)) (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
))) (forall (($generated@@286 T@T) ) (! (= (type ($generated@@280 $generated@@286)) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@280 $generated@@286))
))))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@287)) 0)
 :pattern ( ($generated@@280 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@81) ($generated@@262 $generated@@288)) (= $generated@@288 $generated@@163))
 :pattern ( ($generated@@262 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@157)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@68) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@265 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@78 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@265 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@86 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@88 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@88 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@88 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@88 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@88 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@86 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@166 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@88 $generated@@336 $generated@@338))) (<= ($generated ($generated@@88 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@88 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@166 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@157) ($generated@@227 $generated@@342 $generated@@80)) (and (= ($generated@@289 ($generated@@339 $generated@@81 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@339 $generated@@81 $generated@@342) $generated@@80)))
 :pattern ( ($generated@@227 $generated@@342 $generated@@80))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(let (($generated@@345 ($generated@@303 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@302 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@301 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@88 ($generated@@300 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@300 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@82 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@304 (type $generated@@350))))
(let (($generated@@352 ($generated@@303 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@302 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@301 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@88 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@322 (type $generated@@354))))
(let (($generated@@356 ($generated@@321 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@320 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@319 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@88 ($generated@@318 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@318 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@322 (type $generated@@361))))
(let (($generated@@363 ($generated@@321 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@320 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@319 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@88 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@366) $generated@@68)) (= ($generated@@145 $generated@@365 ($generated@@165 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@365 $generated@@367)))) ($generated@@227 $generated@@367 $generated@@366))
 :pattern ( ($generated@@88 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@145 $generated@@365 ($generated@@165 $generated@@366)))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@81) ($generated@@368 $generated@@369)) (or ($generated@@262 $generated@@369) ($generated@@240 $generated@@369)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@371) $generated@@68)) (= (type $generated@@372) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@370 ($generated@@246 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@157) ($generated@@0 ($generated@@88 $generated@@370 $generated@@373))) ($generated@@265 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@88 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@78 $generated@@370 ($generated@@246 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@375) $generated@@68)) (= (type $generated@@376) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@374 ($generated@@251 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@157) ($generated@@0 ($generated@@88 $generated@@374 $generated@@377))) ($generated@@265 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@88 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@78 $generated@@374 ($generated@@251 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@88 ($generated@@295 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@88 ($generated@@295 $generated@@379) $generated@@378)))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@82 $generated@@157 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@304 (type $generated@@383))))
(let (($generated@@385 ($generated@@303 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@82 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@302 $generated@@157 $generated@@157)) (= (type $generated@@387) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@88 ($generated@@300 $generated@@386) ($generated@@155 ($generated@@339 $generated@@81 $generated@@387)))) (= ($generated@@88 ($generated@@381 $generated@@386) ($generated@@155 ($generated@@339 $generated@@81 $generated@@387))) ($generated@@156 ($generated@@339 $generated@@81 $generated@@387))))))
 :pattern ( ($generated@@88 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@157 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@322 (type $generated@@391))))
(let (($generated@@393 ($generated@@321 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@320 $generated@@157 $generated@@157)) (= (type $generated@@395) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@88 ($generated@@318 $generated@@394) ($generated@@155 ($generated@@339 $generated@@81 $generated@@395)))) (= ($generated@@88 ($generated@@389 $generated@@394) ($generated@@155 ($generated@@339 $generated@@81 $generated@@395))) ($generated@@156 ($generated@@339 $generated@@81 $generated@@395))))))
 :pattern ( ($generated@@88 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@303 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@302 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@88 ($generated@@347 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@88 ($generated@@300 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@88 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@88 ($generated@@300 $generated@@396) $generated@@400))
 :pattern ( ($generated@@88 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@88 ($generated@@347 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@321 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@320 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@88 ($generated@@358 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@88 ($generated@@318 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@88 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@88 ($generated@@318 $generated@@401) $generated@@405))
 :pattern ( ($generated@@88 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@88 ($generated@@358 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@68)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@302 $generated@@157 $generated@@157)) (= (type $generated@@410) $generated@@68)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@300 $generated@@409) $generated@@413))) (and ($generated@@265 ($generated@@88 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@265 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@88 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@88 ($generated@@300 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@78 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@68)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@320 $generated@@157 $generated@@157)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@318 $generated@@417) $generated@@421))) (and ($generated@@265 ($generated@@88 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@265 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@88 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@88 ($generated@@318 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@78 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@81) ($generated@@145 $generated@@422 $generated@@80)) (or ($generated@@262 $generated@@422) ($generated@@240 $generated@@422)))
 :pattern ( ($generated@@240 $generated@@422) ($generated@@145 $generated@@422 $generated@@80))
 :pattern ( ($generated@@262 $generated@@422) ($generated@@145 $generated@@422 $generated@@80))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@82 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@322 (type $generated@@425))))
(let (($generated@@427 ($generated@@321 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@320 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@319 $generated@@427 $generated@@426)) (= ($generated@@318 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@318 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@322 (type $generated@@428))))
(let (($generated@@430 ($generated@@321 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@320 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@319 $generated@@430 $generated@@429)) (= ($generated@@358 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@358 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@322 (type $generated@@431))))
(let (($generated@@433 ($generated@@321 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@320 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@319 $generated@@433 $generated@@432)) (= ($generated@@388 $generated@@431) ($generated@@423 $generated@@157))))))
 :pattern ( ($generated@@388 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@304 (type $generated@@434))))
(let (($generated@@436 ($generated@@303 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@302 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@301 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@157) (= (type $generated@@438) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@380 $generated@@434) ($generated@@289 ($generated@@226 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@380 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@157) (= (type $generated@@443) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@388 $generated@@439) ($generated@@289 ($generated@@226 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@388 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@157) ($generated@@227 $generated@@444 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@339 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@227 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@157) ($generated@@227 $generated@@445 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@339 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@227 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@157) ($generated@@227 $generated@@446 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@339 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@227 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@157) ($generated@@227 $generated@@448 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@447 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@339 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@227 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@68) (= ($generated@@227 ($generated@@289 $generated@@449) $generated@@450) ($generated@@145 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@227 ($generated@@289 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@86 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@82 $generated@@452 $generated@@2)) (<= 0 ($generated@@294 $generated@@451))))
 :pattern ( ($generated@@294 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@283 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@282 $generated@@454)) (<= 0 ($generated@@281 $generated@@453))))
 :pattern ( ($generated@@281 $generated@@453))
)))
(assert  (=> true (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (= (type $generated@@457) $generated@@81) (= (type $generated@@458) $generated@@81)) (or ($generated@@456 $generated@@457 $generated@@458) (and ($generated@@145 $generated@@457 $generated@@80) ($generated@@145 $generated@@458 $generated@@80)))) true)
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@68)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@68) (= (type $generated@@462) $generated@@68)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@68) (= (type $generated@@466) $generated@@68)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@68) (= (type $generated@@468) $generated@@68)) (= ($generated@@76 ($generated@@406 $generated@@467 $generated@@468)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@68)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@68)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@68)) (= ($generated@@473 ($generated@@414 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@414 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@68) (= (type $generated@@478) $generated@@68)) (= ($generated@@76 ($generated@@414 $generated@@477 $generated@@478)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@157) (= (type $generated@@480) $generated@@157)) (= ($generated@@162 ($generated@@226 $generated@@479 $generated@@480)) $generated@@61))
 :pattern ( ($generated@@226 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@481 ($generated@@148 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@148 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@148 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@148 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@157) (= (type $generated@@490) $generated@@157)) (= ($generated@@155 ($generated@@226 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@226 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@157) (= (type $generated@@492) $generated@@157)) (= ($generated@@156 ($generated@@226 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@226 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 Int) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@81) (= ($generated@@162 ($generated@@79 $generated@@493 $generated@@494)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 Int) ($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@81) (= ($generated@@241 ($generated@@79 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@79 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 Int) ($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@81) (= ($generated@@242 ($generated@@79 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@79 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@283 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@282 $generated@@157)) (= (type $generated@@506) $generated@@68)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@281 $generated@@505))) ($generated@@265 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@78 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@141 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@141 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@511 ($generated@@246 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@246 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@76 ($generated@@246 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@251 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@251 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@251 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@165 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@165 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@76 ($generated@@165 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@157 $generated@@157)) (= (type $generated@@530) $generated@@68)) (= (type $generated@@531) $generated@@68)) (= ($generated@@145 $generated@@529 ($generated@@406 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@227 ($generated@@88 ($generated@@381 $generated@@529) $generated@@532) $generated@@531) ($generated@@227 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@88 ($generated@@381 $generated@@529) $generated@@532))
 :pattern ( ($generated@@88 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@145 $generated@@529 ($generated@@406 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@157 $generated@@157)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) $generated@@68)) (= ($generated@@145 $generated@@533 ($generated@@414 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@227 ($generated@@88 ($generated@@389 $generated@@533) $generated@@536) $generated@@535) ($generated@@227 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@88 ($generated@@389 $generated@@533) $generated@@536))
 :pattern ( ($generated@@88 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@145 $generated@@533 ($generated@@414 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@157) (= (type $generated@@540) $generated@@157)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@226 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@226 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@157) (= (type $generated@@542) $generated@@157)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@226 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@226 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 Int) ($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@81) (< ($generated@@538 $generated@@544) ($generated@@538 ($generated@@79 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@79 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@157) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) $generated@@68)) ($generated@@227 $generated@@545 ($generated@@406 $generated@@546 $generated@@547))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@157 $generated@@157) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@339 ($generated@@302 $generated@@157 $generated@@157) $generated@@545) ($generated@@406 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@227 $generated@@545 ($generated@@406 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@68)) ($generated@@227 $generated@@548 ($generated@@414 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@157 $generated@@157) $generated@@548)) $generated@@548) ($generated@@145 ($generated@@339 ($generated@@320 $generated@@157 $generated@@157) $generated@@548) ($generated@@414 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@227 $generated@@548 ($generated@@414 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@68) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@157)) ($generated@@227 $generated@@553 ($generated@@148 $generated@@551 $generated@@552))) (and (= ($generated@@289 ($generated@@339 $generated@@81 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@339 $generated@@81 $generated@@553) ($generated@@148 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@227 $generated@@553 ($generated@@148 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@88 ($generated@@423 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@88 ($generated@@423 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@73)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@68) (= (type $generated@@559) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@148 $generated@@558 $generated@@559)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@81) (= (type $generated@@561) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@561) (and ($generated@@240 $generated@@560) ($generated@@78 $generated@@560 $generated@@80 $generated@@561)))) ($generated@@78 ($generated@@8 ($generated@@241 $generated@@560)) $generated@@46 $generated@@561))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@241 $generated@@560)) $generated@@46 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@81) (= ($generated@@537 ($generated@@289 $generated@@562)) ($generated@@538 $generated@@562)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@157) ($generated@@227 $generated@@563 ($generated@@141 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@563)) $generated@@563) ($generated@@145 ($generated@@339 ($generated@@82 $generated@@157 $generated@@4) $generated@@563) ($generated@@141 0))))
 :pattern ( ($generated@@227 $generated@@563 ($generated@@141 0)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@157) (= (type $generated@@565) $generated@@68)) ($generated@@227 $generated@@564 ($generated@@246 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@157 $generated@@4) $generated@@564)) $generated@@564) ($generated@@145 ($generated@@339 ($generated@@82 $generated@@157 $generated@@4) $generated@@564) ($generated@@246 $generated@@565))))
 :pattern ( ($generated@@227 $generated@@564 ($generated@@246 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@68)) ($generated@@227 $generated@@566 ($generated@@251 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@157 $generated@@4) $generated@@566)) $generated@@566) ($generated@@145 ($generated@@339 ($generated@@82 $generated@@157 $generated@@4) $generated@@566) ($generated@@251 $generated@@567))))
 :pattern ( ($generated@@227 $generated@@566 ($generated@@251 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@157) (= (type $generated@@569) $generated@@68)) ($generated@@227 $generated@@568 ($generated@@165 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@157 $generated@@2) $generated@@568)) $generated@@568) ($generated@@145 ($generated@@339 ($generated@@82 $generated@@157 $generated@@2) $generated@@568) ($generated@@165 $generated@@569))))
 :pattern ( ($generated@@227 $generated@@568 ($generated@@165 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@157) (= (type $generated@@571) $generated@@68)) ($generated@@227 $generated@@570 ($generated@@499 $generated@@571))) (and (= ($generated@@289 ($generated@@339 ($generated@@282 $generated@@157) $generated@@570)) $generated@@570) ($generated@@145 ($generated@@339 ($generated@@282 $generated@@157) $generated@@570) ($generated@@499 $generated@@571))))
 :pattern ( ($generated@@227 $generated@@570 ($generated@@499 $generated@@571)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@63))
(assert (= ($generated@@556 $generated@@80) $generated@@67))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@572 ($generated@@165 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@572 $generated@@575)))) ($generated@@265 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@88 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@78 $generated@@572 ($generated@@165 $generated@@573) $generated@@574))
)))
(assert (= $generated@@163 ($generated@@258 $generated@@163)))
(assert  (=> true (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@81) (= (type $generated@@577) $generated@@81)) (or ($generated@@456 ($generated@@258 $generated@@576) ($generated@@258 $generated@@577)) (and ($generated@@145 $generated@@576 $generated@@80) ($generated@@145 $generated@@577 $generated@@80)))) (and (=> ($generated@@0 ($generated@@258 ($generated@@11 ($generated@@240 ($generated@@258 $generated@@576))))) (and ($generated@@368 ($generated@@258 ($generated@@242 ($generated@@258 $generated@@576)))) ($generated@@368 ($generated@@258 $generated@@577)))) (= ($generated@@455 ($generated@@258 $generated@@576) ($generated@@258 $generated@@577))  (and ($generated@@240 ($generated@@258 $generated@@576)) ($generated@@237 ($generated@@242 ($generated@@258 $generated@@576)) $generated@@577)))))
 :weight 3
 :pattern ( ($generated@@455 ($generated@@258 $generated@@576) ($generated@@258 $generated@@577)))
))))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@81) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@580) (and ($generated@@147 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@68) ($generated@@78 $generated@@578 ($generated@@148 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@78 $generated@@578 ($generated@@148 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@265 ($generated@@155 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@265 ($generated@@155 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@584) (and ($generated@@147 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@68) ($generated@@78 $generated@@582 ($generated@@148 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@78 $generated@@582 ($generated@@148 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@265 ($generated@@156 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@265 ($generated@@156 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@81) (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@587) (and ($generated@@240 $generated@@586) ($generated@@78 $generated@@586 $generated@@80 $generated@@587)))) ($generated@@78 ($generated@@242 $generated@@586) $generated@@80 $generated@@587))
 :pattern ( ($generated@@78 ($generated@@242 $generated@@586) $generated@@80 $generated@@587))
)))
(assert  (=> true (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@81) (= (type $generated@@589) $generated@@81)) (or ($generated@@456 $generated@@588 $generated@@589) (and ($generated@@145 $generated@@588 $generated@@80) ($generated@@145 $generated@@589 $generated@@80)))) (and (=> ($generated@@240 $generated@@588) (and ($generated@@368 ($generated@@242 $generated@@588)) ($generated@@368 $generated@@589))) (= ($generated@@455 $generated@@588 $generated@@589)  (and ($generated@@240 $generated@@588) ($generated@@237 ($generated@@242 $generated@@588) $generated@@589)))))
 :pattern ( ($generated@@455 $generated@@588 $generated@@589))
))))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@157) (= (type $generated@@591) $generated@@157)) (= ($generated@@226 ($generated@@258 $generated@@590) ($generated@@258 $generated@@591)) ($generated@@258 ($generated@@226 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@226 ($generated@@258 $generated@@590) ($generated@@258 $generated@@591)))
)))
(assert (forall (($generated@@592 Int) ($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@81) (= ($generated@@79 ($generated@@256 $generated@@592) ($generated@@258 $generated@@593)) ($generated@@258 ($generated@@79 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@79 ($generated@@256 $generated@@592) ($generated@@258 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@256 $generated@@594))) ($generated@@258 ($generated@@289 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@256 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@289 ($generated@@258 $generated@@595)) ($generated@@258 ($generated@@289 $generated@@595)))
 :pattern ( ($generated@@289 ($generated@@258 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@81) (= ($generated@@145 ($generated@@79 $generated@@596 $generated@@597) $generated@@80)  (and ($generated@@145 ($generated@@8 $generated@@596) $generated@@46) ($generated@@145 $generated@@597 $generated@@80))))
 :pattern ( ($generated@@145 ($generated@@79 $generated@@596 $generated@@597) $generated@@80))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@283 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@282 $generated@@599)) (= ($generated@@281 $generated@@598) 0)) (= $generated@@598 ($generated@@280 $generated@@599))))
 :pattern ( ($generated@@281 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@82 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@294 ($generated@@89 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@294 $generated@@600) ($generated ($generated@@88 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@294 ($generated@@89 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@605) $generated@@2)) ($generated@@78 $generated@@605 $generated@@46 $generated@@604))
 :pattern ( ($generated@@78 $generated@@605 $generated@@46 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@607) $generated@@3)) ($generated@@78 $generated@@607 $generated@@47 $generated@@606))
 :pattern ( ($generated@@78 $generated@@607 $generated@@47 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@609) $generated@@4)) ($generated@@78 $generated@@609 $generated@@44 $generated@@608))
 :pattern ( ($generated@@78 $generated@@609 $generated@@44 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@611) $generated@@447)) ($generated@@78 $generated@@611 $generated@@45 $generated@@610))
 :pattern ( ($generated@@78 $generated@@611 $generated@@45 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@613) $generated@@157)) ($generated@@78 $generated@@613 $generated@@48 $generated@@612))
 :pattern ( ($generated@@78 $generated@@613 $generated@@48 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@282 $generated@@157)) (= (type $generated@@615) $generated@@68)) (= ($generated@@145 $generated@@614 ($generated@@499 $generated@@615)) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@281 $generated@@614))) ($generated@@227 ($generated@@500 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@500 $generated@@614 $generated@@616))
))))
 :pattern ( ($generated@@145 $generated@@614 ($generated@@499 $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ) (!  (=> (= (type $generated@@618) ($generated@@282 $generated@@157)) (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@281 $generated@@618))) (< ($generated@@538 ($generated@@339 $generated@@81 ($generated@@500 $generated@@618 $generated@@619))) ($generated@@617 $generated@@618))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@81 ($generated@@500 $generated@@618 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@302 $generated@@157 $generated@@157)) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) $generated@@68)) ($generated@@145 $generated@@620 ($generated@@406 $generated@@621 $generated@@622))) (and (and ($generated@@145 ($generated@@300 $generated@@620) ($generated@@246 $generated@@621)) ($generated@@145 ($generated@@347 $generated@@620) ($generated@@246 $generated@@622))) ($generated@@145 ($generated@@380 $generated@@620) ($generated@@246 ($generated@@148 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@145 $generated@@620 ($generated@@406 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@320 $generated@@157 $generated@@157)) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) $generated@@68)) ($generated@@145 $generated@@623 ($generated@@414 $generated@@624 $generated@@625))) (and (and ($generated@@145 ($generated@@318 $generated@@623) ($generated@@251 $generated@@624)) ($generated@@145 ($generated@@358 $generated@@623) ($generated@@251 $generated@@625))) ($generated@@145 ($generated@@388 $generated@@623) ($generated@@251 ($generated@@148 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@145 $generated@@623 ($generated@@414 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@2) ($generated@@145 $generated@@626 $generated@@46))
 :pattern ( ($generated@@145 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@3) ($generated@@145 $generated@@627 $generated@@47))
 :pattern ( ($generated@@145 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@4) ($generated@@145 $generated@@628 $generated@@44))
 :pattern ( ($generated@@145 $generated@@628 $generated@@44))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@447) ($generated@@145 $generated@@629 $generated@@45))
 :pattern ( ($generated@@145 $generated@@629 $generated@@45))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@157) ($generated@@145 $generated@@630 $generated@@48))
 :pattern ( ($generated@@145 $generated@@630 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(assert  (and (and (and (and (and (= (type $generated@@631) ($generated@@172 $generated@@83 $generated@@4)) (= (type $generated@@632) $generated@@83)) (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@634) $generated@@81)) (= (type $generated@@635) $generated@@81)) (= (type $generated@@637) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@639  (=> (= $generated@@631 ($generated@@171 $generated@@632 $generated@@633 $generated@@60 false)) (=> (and ($generated@@240 $generated@@634) (= $generated@@635 ($generated@@242 $generated@@634))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@456 $generated@@634 $generated@@635) (or ($generated@@455 $generated@@634 $generated@@635) ($generated@@240 $generated@@634)))) (=> (=> ($generated@@456 $generated@@634 $generated@@635) (or ($generated@@455 $generated@@634 $generated@@635) ($generated@@240 $generated@@634))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@456 $generated@@634 $generated@@635) (or ($generated@@455 $generated@@634 $generated@@635) ($generated@@237 ($generated@@242 $generated@@634) $generated@@635))))))))))
(let (($generated@@640  (=> (and ($generated@@85 $generated@@633) ($generated@@636 $generated@@633)) (=> (and (and ($generated@@145 $generated@@634 $generated@@80) ($generated@@78 $generated@@634 $generated@@80 $generated@@633)) ($generated@@368 $generated@@634)) (=> (and (and (and ($generated@@145 $generated@@637 $generated@@80) ($generated@@78 $generated@@637 $generated@@80 $generated@@633)) (= 1 $generated@@638)) (and ($generated@@240 $generated@@634) (= (ControlFlow 0 4) 2))) $generated@@639)))))
$generated@@640)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
