(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Bool)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (Int) Bool)
(declare-fun $generated@@136 (T@U Int) Bool)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@231 (T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (Int) Bool)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@493 (T@U Int) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (= ($generated@@1 $generated@@134) 14) (= (type $generated@@137) $generated@@134)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@138 T@U) ($generated@@139 Int) ) (!  (=> (and (= (type $generated@@138) $generated@@134) (or ($generated@@135 $generated@@139) (and (not (= 1 $generated@@132)) ($generated@@136 $generated@@137 $generated@@139)))) ($generated@@136 $generated@@137 $generated@@139))
 :pattern ( ($generated@@133 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 15) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@64) (= (type $generated@@148) $generated@@64)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 16) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@64)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 17)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@67 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@77) (= (type $generated@@213) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@214) ($generated@@66 $generated@@4))) (= (type $generated@@216) $generated@@77)) (= (type $generated@@217) ($generated@@66 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@67 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@77) (= (type $generated@@225) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@226) ($generated@@66 $generated@@4))) (= (type $generated@@228) $generated@@77)) (= (type $generated@@229) ($generated@@66 $generated@@230))) (= ($generated@@0 ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@231 $generated@@233 $generated@@234)) $generated@@144)
 :pattern ( ($generated@@231 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@64) (= (type $generated@@236) $generated@@64)) (= (type $generated@@237) $generated@@153)) (= (type $generated@@238) $generated@@153)) (= ($generated@@140 ($generated@@231 $generated@@237 $generated@@238) ($generated@@143 $generated@@235 $generated@@236))  (and ($generated@@232 $generated@@237 $generated@@235) ($generated@@232 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@140 ($generated@@231 $generated@@237 $generated@@238) ($generated@@143 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@144) (= (type $generated@@240) $generated@@144)) (= ($generated@@150 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@150 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@140 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@153) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@232 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@140 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@153) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@232 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@258 T@U) ($generated@@259 Int) ) (!  (=> (and (= (type $generated@@258) $generated@@134) (or ($generated@@257 $generated@@259) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@136 $generated@@258 $generated@@259))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@64) (= (type $generated@@263) $generated@@64)) (= (type $generated@@264) $generated@@153)) (= (type $generated@@265) $generated@@153)) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@260 $generated@@266)) (= ($generated@@74 ($generated@@231 $generated@@264 $generated@@265) ($generated@@143 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@74 ($generated@@231 $generated@@264 $generated@@265) ($generated@@143 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@68)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@144) (= ($generated@@142 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@144) ($generated@@142 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@153) (= (type $generated@@272) $generated@@153)) (= $generated@@270 ($generated@@231 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@142 $generated@@270))
)))
(assert  (and (and (forall (($generated@@277 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@277)) 18)) (forall (($generated@@278 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@278)) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
))) (forall (($generated@@279 T@T) ) (! (= (type ($generated@@273 $generated@@279)) ($generated@@275 $generated@@279))
 :pattern ( ($generated@@273 $generated@@279))
))))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@280)) 0)
 :pattern ( ($generated@@273 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@153)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@64) (= (type $generated@@285) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@261 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@74 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@261 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@76 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@79 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@76 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@81 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 19)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@76 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 20)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@76 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@79 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@76 $generated@@329 $generated@@2)) (= ($generated@@159 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@81 $generated@@328 $generated@@330))) (<= ($generated ($generated@@81 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@159 $generated@@328))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@296 (type $generated@@331))))
(let (($generated@@333 ($generated@@295 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@294 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@293 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@292 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@296 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@296 (type $generated@@338))))
(let (($generated@@340 ($generated@@295 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@294 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@293 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@314 (type $generated@@342))))
(let (($generated@@344 ($generated@@313 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@312 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@311 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@310 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@314 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@314 (type $generated@@349))))
(let (($generated@@351 ($generated@@313 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@312 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@311 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@354) $generated@@64)) (= ($generated@@140 $generated@@353 ($generated@@158 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@153) (< 0 ($generated ($generated@@81 $generated@@353 $generated@@355)))) ($generated@@232 $generated@@355 $generated@@354))
 :pattern ( ($generated@@81 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@140 $generated@@353 ($generated@@158 $generated@@354)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@241 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@153) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@261 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@241 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@76 $generated@@153 $generated@@4)) (= (type $generated@@361) $generated@@64)) (= (type $generated@@362) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@360 ($generated@@246 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@153) ($generated@@0 ($generated@@81 $generated@@360 $generated@@363))) ($generated@@261 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@81 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@74 $generated@@360 ($generated@@246 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(= ($generated ($generated@@81 ($generated@@287 $generated@@365) $generated@@364)) 0))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@81 ($generated@@287 $generated@@365) $generated@@364)))
)))
(assert  (and (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@366 $generated@@369)) ($generated@@76 $generated@@153 $generated@@4))
 :pattern ( ($generated@@366 $generated@@369))
)) (forall (($generated@@370 T@T) ($generated@@371 T@U) ) (! (= (type ($generated@@367 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@367 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@296 (type $generated@@372))))
(let (($generated@@374 ($generated@@295 (type $generated@@372))))
(= (type ($generated@@368 $generated@@372)) ($generated@@76 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@368 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@294 $generated@@153 $generated@@153)) (= (type $generated@@376) $generated@@153)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@375) ($generated@@151 ($generated@@367 $generated@@144 $generated@@376)))) (= ($generated@@81 ($generated@@368 $generated@@375) ($generated@@151 ($generated@@367 $generated@@144 $generated@@376))) ($generated@@152 ($generated@@367 $generated@@144 $generated@@376))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@375) $generated@@376))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@153 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@314 (type $generated@@380))))
(let (($generated@@382 ($generated@@313 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@312 $generated@@153 $generated@@153)) (= (type $generated@@384) $generated@@153)) (= ($generated@@0 ($generated@@81 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@383) ($generated@@151 ($generated@@367 $generated@@144 $generated@@384)))) (= ($generated@@81 ($generated@@378 $generated@@383) ($generated@@151 ($generated@@367 $generated@@144 $generated@@384))) ($generated@@152 ($generated@@367 $generated@@144 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@295 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@294 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@81 ($generated@@368 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@313 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@312 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@378 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@64)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@294 $generated@@153 $generated@@153)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@398) $generated@@402))) (and ($generated@@261 ($generated@@81 ($generated@@368 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@261 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@312 $generated@@153 $generated@@153)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@406) $generated@@410))) (and ($generated@@261 ($generated@@81 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@261 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) $generated@@134)
 :pattern ( ($generated@@411 $generated@@413))
)) (= (type $generated@@412) $generated@@134)))
(assert (forall (($generated@@414 T@U) ($generated@@415 Int) ) (!  (=> (= (type $generated@@414) $generated@@134) (= ($generated@@136 $generated@@414 $generated@@415) ($generated@@136 $generated@@412 $generated@@415)))
 :pattern ( ($generated@@136 ($generated@@411 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 Int) ) (!  (=> (= (type $generated@@416) $generated@@134) (= ($generated@@133 $generated@@416 $generated@@417) ($generated@@133 $generated@@412 $generated@@417)))
 :pattern ( ($generated@@133 ($generated@@411 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@76 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@314 (type $generated@@420))))
(let (($generated@@422 ($generated@@313 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@312 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@311 $generated@@422 $generated@@421)) (= ($generated@@310 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@310 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@314 (type $generated@@423))))
(let (($generated@@425 ($generated@@313 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@312 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@311 $generated@@425 $generated@@424)) (= ($generated@@346 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@346 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@314 (type $generated@@426))))
(let (($generated@@428 ($generated@@313 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@312 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@311 $generated@@428 $generated@@427)) (= ($generated@@377 $generated@@426) ($generated@@418 $generated@@153))))))
 :pattern ( ($generated@@377 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@296 (type $generated@@429))))
(let (($generated@@431 ($generated@@295 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@294 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@293 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@153) (= (type $generated@@433) $generated@@153)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@429) ($generated@@281 ($generated@@231 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@366 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@314 (type $generated@@434))))
(let (($generated@@436 ($generated@@313 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@312 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@311 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@153) (= (type $generated@@438) $generated@@153)) ($generated@@0 ($generated@@81 ($generated@@377 $generated@@434) ($generated@@281 ($generated@@231 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@377 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@153) ($generated@@232 $generated@@439 $generated@@46)) (and (= ($generated@@281 ($generated@@367 $generated@@2 $generated@@439)) $generated@@439) ($generated@@140 ($generated@@367 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@232 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@153) ($generated@@232 $generated@@440 $generated@@47)) (and (= ($generated@@281 ($generated@@367 $generated@@3 $generated@@440)) $generated@@440) ($generated@@140 ($generated@@367 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@232 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@153) ($generated@@232 $generated@@441 $generated@@44)) (and (= ($generated@@281 ($generated@@367 $generated@@4 $generated@@441)) $generated@@441) ($generated@@140 ($generated@@367 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@232 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 21))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@153) ($generated@@232 $generated@@443 $generated@@45)) (and (= ($generated@@281 ($generated@@367 $generated@@442 $generated@@443)) $generated@@443) ($generated@@140 ($generated@@367 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@232 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@134)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 Int) ) (!  (=> (= (type $generated@@446) $generated@@134) (= ($generated@@136 ($generated@@444 $generated@@446) $generated@@447) ($generated@@136 $generated@@446 $generated@@447)))
 :pattern ( ($generated@@136 ($generated@@444 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 Int) ) (!  (=> (= (type $generated@@448) $generated@@134) (= ($generated@@133 ($generated@@444 $generated@@448) $generated@@449) ($generated@@133 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@133 ($generated@@444 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@64) (= ($generated@@232 ($generated@@281 $generated@@450) $generated@@451) ($generated@@140 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@232 ($generated@@281 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@79 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@76 $generated@@453 $generated@@2)) (<= 0 ($generated@@286 $generated@@452))))
 :pattern ( ($generated@@286 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@276 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@275 $generated@@455)) (<= 0 ($generated@@274 $generated@@454))))
 :pattern ( ($generated@@274 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@395 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@395 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@395 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@395 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@395 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@395 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@403 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@403 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@403 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@403 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@403 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@153) (= (type $generated@@477) $generated@@153)) (= ($generated@@267 ($generated@@231 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@231 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@143 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@143 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@143 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@143 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@153) (= (type $generated@@487) $generated@@153)) (= ($generated@@151 ($generated@@231 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@231 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@153) (= (type $generated@@489) $generated@@153)) (= ($generated@@152 ($generated@@231 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@231 $generated@@488 $generated@@489))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@490 T@U) ($generated@@491 Int) ) (!  (=> (and (= (type $generated@@490) $generated@@134) (or ($generated@@257 $generated@@491) (not (= 0 $generated@@132)))) (= ($generated@@136 ($generated@@444 $generated@@490) $generated@@491) (= $generated@@491 ($generated@@251 3))))
 :pattern ( ($generated@@136 ($generated@@444 $generated@@490) $generated@@491))
))))
(assert  (and (forall (($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@494))
)) (forall (($generated@@495 T@U) ($generated@@496 Int) ) (! (let (($generated@@497 ($generated@@276 (type $generated@@495))))
(= (type ($generated@@493 $generated@@495 $generated@@496)) $generated@@497))
 :pattern ( ($generated@@493 $generated@@495 $generated@@496))
))))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@275 $generated@@153)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@498 ($generated@@492 $generated@@499) $generated@@500) (forall (($generated@@501 Int) ) (!  (=> (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@274 $generated@@498))) ($generated@@261 ($generated@@493 $generated@@498 $generated@@501) $generated@@499 $generated@@500))
 :pattern ( ($generated@@493 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@74 $generated@@498 ($generated@@492 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@75 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@75 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@241 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@241 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@246 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@246 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@158 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@158 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@158 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@492 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@492 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@492 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@492 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated@@367 $generated@@521 ($generated@@281 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@281 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@294 $generated@@153 $generated@@153)) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) (= ($generated@@140 $generated@@522 ($generated@@395 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@522) $generated@@525))) (and ($generated@@232 ($generated@@81 ($generated@@368 $generated@@522) $generated@@525) $generated@@524) ($generated@@232 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@522) $generated@@525))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@140 $generated@@522 ($generated@@395 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@312 $generated@@153 $generated@@153)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) (= ($generated@@140 $generated@@526 ($generated@@403 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@153) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@526) $generated@@529))) (and ($generated@@232 ($generated@@81 ($generated@@378 $generated@@526) $generated@@529) $generated@@528) ($generated@@232 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@526) $generated@@529))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@140 $generated@@526 ($generated@@403 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@153) (= (type $generated@@533) $generated@@153)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@231 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@231 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@153) (= (type $generated@@535) $generated@@153)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@231 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@231 $generated@@534 $generated@@535))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@536 T@U) ($generated@@537 Int) ) (!  (=> (and (= (type $generated@@536) $generated@@134) (or ($generated@@135 $generated@@537) (and (not (= 1 $generated@@132)) ($generated@@136 $generated@@137 $generated@@537)))) (= ($generated@@133 ($generated@@444 $generated@@536) $generated@@537) ($generated@@0 ($generated@@253 ($generated@@11 true)))))
 :pattern ( ($generated@@133 ($generated@@444 $generated@@536) $generated@@537))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@153) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) $generated@@64)) ($generated@@232 $generated@@538 ($generated@@395 $generated@@539 $generated@@540))) (and (= ($generated@@281 ($generated@@367 ($generated@@294 $generated@@153 $generated@@153) $generated@@538)) $generated@@538) ($generated@@140 ($generated@@367 ($generated@@294 $generated@@153 $generated@@153) $generated@@538) ($generated@@395 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@232 $generated@@538 ($generated@@395 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@153) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@64)) ($generated@@232 $generated@@541 ($generated@@403 $generated@@542 $generated@@543))) (and (= ($generated@@281 ($generated@@367 ($generated@@312 $generated@@153 $generated@@153) $generated@@541)) $generated@@541) ($generated@@140 ($generated@@367 ($generated@@312 $generated@@153 $generated@@153) $generated@@541) ($generated@@403 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@232 $generated@@541 ($generated@@403 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@64) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) $generated@@153)) ($generated@@232 $generated@@546 ($generated@@143 $generated@@544 $generated@@545))) (and (= ($generated@@281 ($generated@@367 $generated@@144 $generated@@546)) $generated@@546) ($generated@@140 ($generated@@367 $generated@@144 $generated@@546) ($generated@@143 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@232 $generated@@546 ($generated@@143 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@81 ($generated@@418 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@81 ($generated@@418 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@69)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@64) (= (type $generated@@552) $generated@@64)) (and (= ($generated@@72 ($generated@@143 $generated@@551 $generated@@552)) $generated@@62) (= ($generated@@549 ($generated@@143 $generated@@551 $generated@@552)) $generated@@63)))
 :pattern ( ($generated@@143 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@144) (= ($generated@@530 ($generated@@281 $generated@@553)) ($generated@@531 $generated@@553)))
 :pattern ( ($generated@@530 ($generated@@281 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@153) ($generated@@232 $generated@@554 ($generated@@75 0))) (and (= ($generated@@281 ($generated@@367 $generated@@2 $generated@@554)) $generated@@554) ($generated@@140 ($generated@@367 ($generated@@76 $generated@@153 $generated@@4) $generated@@554) ($generated@@75 0))))
 :pattern ( ($generated@@232 $generated@@554 ($generated@@75 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@153) (= (type $generated@@556) $generated@@64)) ($generated@@232 $generated@@555 ($generated@@241 $generated@@556))) (and (= ($generated@@281 ($generated@@367 ($generated@@76 $generated@@153 $generated@@4) $generated@@555)) $generated@@555) ($generated@@140 ($generated@@367 ($generated@@76 $generated@@153 $generated@@4) $generated@@555) ($generated@@241 $generated@@556))))
 :pattern ( ($generated@@232 $generated@@555 ($generated@@241 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@153) (= (type $generated@@558) $generated@@64)) ($generated@@232 $generated@@557 ($generated@@246 $generated@@558))) (and (= ($generated@@281 ($generated@@367 ($generated@@76 $generated@@153 $generated@@4) $generated@@557)) $generated@@557) ($generated@@140 ($generated@@367 ($generated@@76 $generated@@153 $generated@@4) $generated@@557) ($generated@@246 $generated@@558))))
 :pattern ( ($generated@@232 $generated@@557 ($generated@@246 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@153) (= (type $generated@@560) $generated@@64)) ($generated@@232 $generated@@559 ($generated@@158 $generated@@560))) (and (= ($generated@@281 ($generated@@367 ($generated@@76 $generated@@153 $generated@@2) $generated@@559)) $generated@@559) ($generated@@140 ($generated@@367 ($generated@@76 $generated@@153 $generated@@2) $generated@@559) ($generated@@158 $generated@@560))))
 :pattern ( ($generated@@232 $generated@@559 ($generated@@158 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@153) (= (type $generated@@562) $generated@@64)) ($generated@@232 $generated@@561 ($generated@@492 $generated@@562))) (and (= ($generated@@281 ($generated@@367 ($generated@@275 $generated@@153) $generated@@561)) $generated@@561) ($generated@@140 ($generated@@367 ($generated@@275 $generated@@153) $generated@@561) ($generated@@492 $generated@@562))))
 :pattern ( ($generated@@232 $generated@@561 ($generated@@492 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@76 $generated@@153 $generated@@2)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@563 ($generated@@158 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@153) (< 0 ($generated ($generated@@81 $generated@@563 $generated@@566)))) ($generated@@261 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@81 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@158 $generated@@564) $generated@@565))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@567 T@U) ($generated@@568 Int) ) (!  (=> (and (= (type $generated@@567) $generated@@134) (or ($generated@@257 ($generated@@251 $generated@@568)) (not (= 0 $generated@@132)))) (= ($generated@@136 ($generated@@444 $generated@@567) ($generated@@251 $generated@@568)) (= ($generated@@251 $generated@@568) ($generated@@251 3))))
 :weight 3
 :pattern ( ($generated@@136 ($generated@@444 $generated@@567) ($generated@@251 $generated@@568)))
))))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@144) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@260 $generated@@571) (and ($generated@@142 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@64) ($generated@@74 $generated@@569 ($generated@@143 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@74 $generated@@569 ($generated@@143 $generated@@570 $generated@@572) $generated@@571))
))))) ($generated@@261 ($generated@@151 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@261 ($generated@@151 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@144) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@260 $generated@@575) (and ($generated@@142 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@64) ($generated@@74 $generated@@573 ($generated@@143 $generated@@576 $generated@@574) $generated@@575))
 :pattern ( ($generated@@74 $generated@@573 ($generated@@143 $generated@@576 $generated@@574) $generated@@575))
))))) ($generated@@261 ($generated@@152 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@261 ($generated@@152 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@153) (= (type $generated@@578) $generated@@153)) (= ($generated@@231 ($generated@@253 $generated@@577) ($generated@@253 $generated@@578)) ($generated@@253 ($generated@@231 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@231 ($generated@@253 $generated@@577) ($generated@@253 $generated@@578)))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@281 ($generated@@8 ($generated@@251 $generated@@579))) ($generated@@253 ($generated@@281 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@281 ($generated@@8 ($generated@@251 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ) (! (= ($generated@@281 ($generated@@253 $generated@@580)) ($generated@@253 ($generated@@281 $generated@@580)))
 :pattern ( ($generated@@281 ($generated@@253 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@276 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@275 $generated@@582)) (= ($generated@@274 $generated@@581) 0)) (= $generated@@581 ($generated@@273 $generated@@582))))
 :pattern ( ($generated@@274 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@76 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@286 ($generated@@82 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@286 $generated@@583) ($generated ($generated@@81 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@286 ($generated@@82 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (and (= (type $generated@@587) $generated@@134) (or ($generated@@135 ($generated@@251 $generated@@588)) (and (not (= 1 $generated@@132)) ($generated@@136 $generated@@137 ($generated@@251 $generated@@588))))) (= ($generated@@133 ($generated@@444 $generated@@587) ($generated@@251 $generated@@588)) ($generated@@0 ($generated@@253 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@444 $generated@@587) ($generated@@251 $generated@@588)))
))))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@2)) ($generated@@74 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@3)) ($generated@@74 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@594) $generated@@4)) ($generated@@74 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@74 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@596) $generated@@442)) ($generated@@74 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@74 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@598) $generated@@153)) ($generated@@74 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@74 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@275 $generated@@153)) (= (type $generated@@600) $generated@@64)) (= ($generated@@140 $generated@@599 ($generated@@492 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@274 $generated@@599))) ($generated@@232 ($generated@@493 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@493 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@140 $generated@@599 ($generated@@492 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@275 $generated@@153)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@274 $generated@@603))) (< ($generated@@531 ($generated@@367 $generated@@144 ($generated@@493 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@531 ($generated@@367 $generated@@144 ($generated@@493 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@294 $generated@@153 $generated@@153)) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) $generated@@64)) ($generated@@140 $generated@@605 ($generated@@395 $generated@@606 $generated@@607))) (and (and ($generated@@140 ($generated@@292 $generated@@605) ($generated@@241 $generated@@606)) ($generated@@140 ($generated@@335 $generated@@605) ($generated@@241 $generated@@607))) ($generated@@140 ($generated@@366 $generated@@605) ($generated@@241 ($generated@@143 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@140 $generated@@605 ($generated@@395 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@312 $generated@@153 $generated@@153)) (= (type $generated@@609) $generated@@64)) (= (type $generated@@610) $generated@@64)) ($generated@@140 $generated@@608 ($generated@@403 $generated@@609 $generated@@610))) (and (and ($generated@@140 ($generated@@310 $generated@@608) ($generated@@246 $generated@@609)) ($generated@@140 ($generated@@346 $generated@@608) ($generated@@246 $generated@@610))) ($generated@@140 ($generated@@377 $generated@@608) ($generated@@246 ($generated@@143 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@140 $generated@@608 ($generated@@403 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@140 $generated@@611 $generated@@46))
 :pattern ( ($generated@@140 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@140 $generated@@612 $generated@@47))
 :pattern ( ($generated@@140 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@140 $generated@@613 $generated@@44))
 :pattern ( ($generated@@140 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@442) ($generated@@140 $generated@@614 $generated@@45))
 :pattern ( ($generated@@140 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@153) ($generated@@140 $generated@@615 $generated@@48))
 :pattern ( ($generated@@140 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@616) $generated@@134) (= (type $generated@@618) ($generated@@165 $generated@@77 $generated@@4))) (= (type $generated@@619) $generated@@77)) (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@621) $generated@@134)) (= (type $generated@@622) ($generated@@165 $generated@@77 $generated@@4))) (= (type $generated@@623) $generated@@134)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@625  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@136 $generated@@616 $generated@@617))))
(let (($generated@@626  (=> (and (and (= $generated@@618 ($generated@@219 $generated@@619 $generated@@620 $generated@@60 false)) (= ($generated@@133 $generated@@621 $generated@@617) ($generated@@0 ($generated@@253 ($generated@@11 true))))) (and ($generated@@140 ($generated@@11 ($generated@@133 $generated@@621 $generated@@617)) $generated@@44) (= (ControlFlow 0 4) 3))) $generated@@625)))
(let (($generated@@627 true))
(let (($generated@@628  (=> (and (and (and (= $generated@@622 ($generated@@164 $generated@@619 $generated@@620 $generated@@60 false)) (= ($generated@@411 $generated@@137) $generated@@137)) (and (= ($generated@@411 $generated@@616) $generated@@616) (= ($generated@@411 $generated@@621) $generated@@621))) (and (and (= ($generated@@411 $generated@@623) $generated@@623) ($generated@@74 ($generated@@8 $generated@@617) $generated@@46 $generated@@620)) (and ($generated@@257 $generated@@617) ($generated@@136 $generated@@137 $generated@@617)))) (and (=> (= (ControlFlow 0 5) 1) $generated@@627) (=> (= (ControlFlow 0 5) 4) $generated@@626)))))
(let (($generated@@629  (=> (and (and ($generated@@260 $generated@@620) ($generated@@624 $generated@@620)) (and (= 1 $generated@@132) (= (ControlFlow 0 6) 5))) $generated@@628)))
$generated@@629))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Bool)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 (Int) Bool)
(declare-fun $generated@@131 (T@U Int) Bool)
(declare-fun $generated@@132 () T@U)
(declare-fun $generated@@135 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@137 (T@T T@T) T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@191 (Int) Int)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@197 (Int) Bool)
(declare-fun $generated@@200 (T@T) T@U)
(declare-fun $generated@@201 (T@U) Int)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 () T@T)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@T T@T) T@U)
(declare-fun $generated@@217 (T@T T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@T T@T) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 () T@U)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@U Int) T@U)
(declare-fun $generated@@347 (T@U) Int)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@394 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (= ($generated@@1 $generated@@129) 12) (= (type $generated@@132) $generated@@129)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@133 T@U) ($generated@@134 Int) ) (!  (=> (and (= (type $generated@@133) $generated@@129) (or ($generated@@130 $generated@@134) (and (not (= 1 $generated@@127)) ($generated@@131 $generated@@132 $generated@@134)))) ($generated@@131 $generated@@132 $generated@@134))
 :pattern ( ($generated@@128 $generated@@133 $generated@@134))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (= ($generated@@1 ($generated@@137 $generated@@141 $generated@@142)) 13)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@138 ($generated@@137 $generated@@143 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@137 $generated@@143 $generated@@144))
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@139 ($generated@@137 $generated@@145 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@137 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 ($generated@@139 (type $generated@@147))))
(= (type ($generated@@135 $generated@@147 $generated@@148 $generated@@149)) $generated@@150))
 :pattern ( ($generated@@135 $generated@@147 $generated@@148 $generated@@149))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (let (($generated@@155 (type $generated@@154)))
(let (($generated@@156 (type $generated@@152)))
(= (type ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@137 $generated@@156 $generated@@155))))
 :pattern ( ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@139 (type $generated@@157))))
 (=> (= (type $generated@@160) $generated@@161) (= ($generated@@135 ($generated@@140 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@158 $generated@@159) $generated@@160)))
 :weight 0
))) (and (and (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@135 ($generated@@140 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@135 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@135 ($generated@@140 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@135 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or true (= ($generated@@135 ($generated@@140 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@135 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ) (! (= (type ($generated@@136 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@137 $generated@@72 $generated@@4))
 :pattern ( ($generated@@136 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@64 (type $generated@@189))))
 (=> (and (and (and (and (= (type $generated@@184) $generated@@72) (= (type $generated@@185) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@186) ($generated@@63 $generated@@4))) (= (type $generated@@188) $generated@@72)) (= (type $generated@@189) ($generated@@63 $generated@@190))) (= ($generated@@0 ($generated@@135 ($generated@@136 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (not (= $generated@@188 $generated@@184)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@185 $generated@@188) $generated@@186))) $generated@@187))))
 :pattern ( ($generated@@135 ($generated@@136 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@191 $generated@@192) $generated@@192)
 :pattern ( ($generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(= (type ($generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@193 $generated@@196) $generated@@196)
 :pattern ( ($generated@@193 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (and (= (type $generated@@198) $generated@@129) (or ($generated@@197 $generated@@199) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@131 $generated@@198 $generated@@199))
))))
(assert  (and (and (forall (($generated@@204 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@204)) 14)) (forall (($generated@@205 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@T) ) (! (= (type ($generated@@200 $generated@@206)) ($generated@@202 $generated@@206))
 :pattern ( ($generated@@200 $generated@@206))
))))
(assert (forall (($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@207)) 0)
 :pattern ( ($generated@@200 $generated@@207))
)))
(assert  (and (= ($generated@@1 $generated@@210) 15) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@209 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@61) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214) ($generated@@69 $generated@@212 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214))
)))
(assert  (and (and (and (and (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (= ($generated@@1 ($generated@@217 $generated@@220 $generated@@221)) 16)) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= ($generated@@218 ($generated@@217 $generated@@222 $generated@@223)) $generated@@222)
 :pattern ( ($generated@@217 $generated@@222 $generated@@223))
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@217 $generated@@224 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@217 $generated@@224 $generated@@225))
))) (forall (($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@218 (type $generated@@226))))
(= (type ($generated@@215 $generated@@226)) ($generated@@71 $generated@@227 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@226))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= (type ($generated@@216 $generated@@228 $generated@@229)) ($generated@@217 $generated@@228 $generated@@229))
 :pattern ( ($generated@@216 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (let (($generated@@232 (type $generated@@230)))
 (not ($generated@@0 ($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230))))
 :pattern ( (let (($generated@@232 (type $generated@@230)))
($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230)))
)))
(assert  (and (and (and (and (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@238 $generated@@239)) 17)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@240 $generated@@241)) $generated@@240)
 :pattern ( ($generated@@235 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@235 $generated@@242 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@235 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@236 (type $generated@@244))))
(= (type ($generated@@233 $generated@@244)) ($generated@@71 $generated@@245 $generated@@4)))
 :pattern ( ($generated@@233 $generated@@244))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= (type ($generated@@234 $generated@@246 $generated@@247)) ($generated@@235 $generated@@246 $generated@@247))
 :pattern ( ($generated@@234 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@T) ) (! (let (($generated@@250 (type $generated@@248)))
 (not ($generated@@0 ($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248))))
 :pattern ( (let (($generated@@250 (type $generated@@248)))
($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@219 (type $generated@@251))))
(let (($generated@@253 ($generated@@218 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@217 $generated@@253 $generated@@252)) (or (= $generated@@251 ($generated@@216 $generated@@253 $generated@@252)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@253) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@251) $generated@@254)))
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
))))))
 :pattern ( ($generated@@215 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@237 (type $generated@@255))))
(let (($generated@@257 ($generated@@236 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@235 $generated@@257 $generated@@256)) (or (= $generated@@255 ($generated@@234 $generated@@257 $generated@@256)) (exists (($generated@@258 T@U) ) (!  (and (= (type $generated@@258) $generated@@257) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@255) $generated@@258)))
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
))))))
 :pattern ( ($generated@@233 $generated@@255))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@61)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@261) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@262) $generated@@61)) (= (type $generated@@263) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@210) ($generated@@0 ($generated@@76 $generated@@261 $generated@@264))) ($generated@@208 $generated@@264 $generated@@262 $generated@@263))
 :pattern ( ($generated@@76 $generated@@261 $generated@@264))
))))
 :pattern ( ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@61)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@267) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@210) ($generated@@0 ($generated@@76 $generated@@267 $generated@@270))) ($generated@@208 $generated@@270 $generated@@268 $generated@@269))
 :pattern ( ($generated@@76 $generated@@267 $generated@@270))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269))
)))
(assert  (and (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@271 $generated@@273 $generated@@274)) $generated@@61)
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
)) (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@219 (type $generated@@275))))
(let (($generated@@277 ($generated@@218 (type $generated@@275))))
(= (type ($generated@@272 $generated@@275)) ($generated@@71 $generated@@277 $generated@@276))))
 :pattern ( ($generated@@272 $generated@@275))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) ($generated@@217 $generated@@210 $generated@@210)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))) (and ($generated@@208 ($generated@@76 ($generated@@272 $generated@@278) $generated@@282) $generated@@280 $generated@@281) ($generated@@208 $generated@@282 $generated@@279 $generated@@281)))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@278) $generated@@282))
 :pattern ( ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281))
)))
(assert  (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@283 $generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@283 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@237 (type $generated@@287))))
(let (($generated@@289 ($generated@@236 (type $generated@@287))))
(= (type ($generated@@284 $generated@@287)) ($generated@@71 $generated@@289 $generated@@288))))
 :pattern ( ($generated@@284 $generated@@287))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) ($generated@@235 $generated@@210 $generated@@210)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))) (and ($generated@@208 ($generated@@76 ($generated@@284 $generated@@290) $generated@@294) $generated@@292 $generated@@293) ($generated@@208 $generated@@294 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@76 ($generated@@284 $generated@@290) $generated@@294))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))
))))
 :pattern ( ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293))
)))
(assert  (and (forall (($generated@@297 T@U) ) (! (= (type ($generated@@295 $generated@@297)) $generated@@129)
 :pattern ( ($generated@@295 $generated@@297))
)) (= (type $generated@@296) $generated@@129)))
(assert (forall (($generated@@298 T@U) ($generated@@299 Int) ) (!  (=> (= (type $generated@@298) $generated@@129) (= ($generated@@131 $generated@@298 $generated@@299) ($generated@@131 $generated@@296 $generated@@299)))
 :pattern ( ($generated@@131 ($generated@@295 $generated@@298) $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 Int) ) (!  (=> (= (type $generated@@300) $generated@@129) (= ($generated@@128 $generated@@300 $generated@@301) ($generated@@128 $generated@@296 $generated@@301)))
 :pattern ( ($generated@@128 ($generated@@295 $generated@@300) $generated@@301))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@71 $generated@@303 $generated@@4))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@237 (type $generated@@304))))
(let (($generated@@306 ($generated@@236 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@235 $generated@@306 $generated@@305)) (= (= $generated@@304 ($generated@@234 $generated@@306 $generated@@305)) (= ($generated@@233 $generated@@304) ($generated@@302 $generated@@306))))))
 :pattern ( ($generated@@233 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@129)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 Int) ) (!  (=> (= (type $generated@@309) $generated@@129) (= ($generated@@131 ($generated@@307 $generated@@309) $generated@@310) ($generated@@131 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@131 ($generated@@307 $generated@@309) $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 Int) ) (!  (=> (= (type $generated@@311) $generated@@129) (= ($generated@@128 ($generated@@307 $generated@@311) $generated@@312) ($generated@@128 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@128 ($generated@@307 $generated@@311) $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@203 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@202 $generated@@314)) (<= 0 ($generated@@201 $generated@@313))))
 :pattern ( ($generated@@201 $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@61) (= (type $generated@@318) $generated@@61)) (= ($generated@@315 ($generated@@271 $generated@@317 $generated@@318)) $generated@@317))
 :pattern ( ($generated@@271 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@61)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@319 ($generated@@271 $generated@@321 $generated@@322)) $generated@@322))
 :pattern ( ($generated@@271 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@61) (= (type $generated@@324) $generated@@61)) (= ($generated@@67 ($generated@@271 $generated@@323 $generated@@324)) $generated@@58))
 :pattern ( ($generated@@271 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@61)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@61) (= (type $generated@@328) $generated@@61)) (= ($generated@@325 ($generated@@283 $generated@@327 $generated@@328)) $generated@@327))
 :pattern ( ($generated@@283 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@61)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@329 ($generated@@283 $generated@@331 $generated@@332)) $generated@@332))
 :pattern ( ($generated@@283 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@61) (= (type $generated@@334) $generated@@61)) (= ($generated@@67 ($generated@@283 $generated@@333 $generated@@334)) $generated@@59))
 :pattern ( ($generated@@283 $generated@@333 $generated@@334))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@335 T@U) ($generated@@336 Int) ) (!  (=> (and (= (type $generated@@335) $generated@@129) (or ($generated@@197 $generated@@336) (not (= 0 $generated@@127)))) (= ($generated@@131 ($generated@@307 $generated@@335) $generated@@336) (= $generated@@336 ($generated@@191 3))))
 :pattern ( ($generated@@131 ($generated@@307 $generated@@335) $generated@@336))
))))
(assert  (and (forall (($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@339)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@339))
)) (forall (($generated@@340 T@U) ($generated@@341 Int) ) (! (let (($generated@@342 ($generated@@203 (type $generated@@340))))
(= (type ($generated@@338 $generated@@340 $generated@@341)) $generated@@342))
 :pattern ( ($generated@@338 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@202 $generated@@210)) (= (type $generated@@344) $generated@@61)) (= (type $generated@@345) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@343 ($generated@@337 $generated@@344) $generated@@345) (forall (($generated@@346 Int) ) (!  (=> (and (<= 0 $generated@@346) (< $generated@@346 ($generated@@201 $generated@@343))) ($generated@@208 ($generated@@338 $generated@@343 $generated@@346) $generated@@344 $generated@@345))
 :pattern ( ($generated@@338 $generated@@343 $generated@@346))
))))
 :pattern ( ($generated@@69 $generated@@343 ($generated@@337 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@348 Int) ) (! (= ($generated@@347 ($generated@@70 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@70 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@349 ($generated@@259 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@259 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@67 ($generated@@259 $generated@@352)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@353 ($generated@@265 $generated@@355)) $generated@@355))
 :pattern ( ($generated@@265 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@67 ($generated@@265 $generated@@356)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@356))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@358 ($generated@@357 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@357 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@357 $generated@@362)) $generated@@56))
 :pattern ( ($generated@@357 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (= (type ($generated@@363 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@61) (= ($generated@@363 ($generated@@337 $generated@@365)) $generated@@365))
 :pattern ( ($generated@@337 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@67 ($generated@@337 $generated@@366)) $generated@@57))
 :pattern ( ($generated@@337 $generated@@366))
)))
(assert (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated@@367 $generated@@371 ($generated@@209 $generated@@370)) $generated@@370))
 :pattern ( ($generated@@209 $generated@@370))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@372 T@U) ($generated@@373 Int) ) (!  (=> (and (= (type $generated@@372) $generated@@129) (or ($generated@@130 $generated@@373) (and (not (= 1 $generated@@127)) ($generated@@131 $generated@@132 $generated@@373)))) (= ($generated@@128 ($generated@@307 $generated@@372) $generated@@373) ($generated@@0 ($generated@@193 ($generated@@11 true)))))
 :pattern ( ($generated@@128 ($generated@@307 $generated@@372) $generated@@373))
))))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
 (not ($generated@@0 ($generated@@76 ($generated@@302 $generated@@375) $generated@@374))))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@76 ($generated@@302 $generated@@375) $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@71 $generated@@210 $generated@@2)) (= (type $generated@@377) $generated@@61)) (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@376 ($generated@@357 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@210) (< 0 ($generated ($generated@@76 $generated@@376 $generated@@379)))) ($generated@@208 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@76 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@69 $generated@@376 ($generated@@357 $generated@@377) $generated@@378))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@380 T@U) ($generated@@381 Int) ) (!  (=> (and (= (type $generated@@380) $generated@@129) (or ($generated@@197 ($generated@@191 $generated@@381)) (not (= 0 $generated@@127)))) (= ($generated@@131 ($generated@@307 $generated@@380) ($generated@@191 $generated@@381)) (= ($generated@@191 $generated@@381) ($generated@@191 3))))
 :weight 3
 :pattern ( ($generated@@131 ($generated@@307 $generated@@380) ($generated@@191 $generated@@381)))
))))
(assert (forall (($generated@@382 Int) ) (! (= ($generated@@209 ($generated@@8 ($generated@@191 $generated@@382))) ($generated@@193 ($generated@@209 ($generated@@8 $generated@@382))))
 :pattern ( ($generated@@209 ($generated@@8 ($generated@@191 $generated@@382))))
)))
(assert (forall (($generated@@383 T@U) ) (! (= ($generated@@209 ($generated@@193 $generated@@383)) ($generated@@193 ($generated@@209 $generated@@383)))
 :pattern ( ($generated@@209 ($generated@@193 $generated@@383)))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@203 (type $generated@@384))))
 (=> (and (= (type $generated@@384) ($generated@@202 $generated@@385)) (= ($generated@@201 $generated@@384) 0)) (= $generated@@384 ($generated@@200 $generated@@385))))
 :pattern ( ($generated@@201 $generated@@384))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@386 T@U) ($generated@@387 Int) ) (!  (=> (and (= (type $generated@@386) $generated@@129) (or ($generated@@130 ($generated@@191 $generated@@387)) (and (not (= 1 $generated@@127)) ($generated@@131 $generated@@132 ($generated@@191 $generated@@387))))) (= ($generated@@128 ($generated@@307 $generated@@386) ($generated@@191 $generated@@387)) ($generated@@0 ($generated@@193 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@307 $generated@@386) ($generated@@191 $generated@@387)))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@389) $generated@@2)) ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
 :pattern ( ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@391) $generated@@3)) ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
 :pattern ( ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@393) $generated@@4)) ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
 :pattern ( ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
)))
(assert (= ($generated@@1 $generated@@394) 18))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@394)) ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@210)) ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@403 () T@U)
(declare-fun $generated@@404 () T@U)
(declare-fun $generated@@405 (T@U) Bool)
(declare-fun $generated@@406 () T@U)
(declare-fun $generated@@407 (T@U) Bool)
(declare-fun $generated@@408 () T@U)
(declare-fun $generated@@409 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@399) $generated@@129) (= (type $generated@@400) $generated@@129)) (= (type $generated@@401) $generated@@129)) (= (type $generated@@402) ($generated@@137 $generated@@72 $generated@@4))) (= (type $generated@@403) $generated@@72)) (= (type $generated@@404) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@406) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@408) $generated@@129)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@410  (=> (= ($generated@@295 $generated@@132) $generated@@132) (=> (and (and (= ($generated@@295 $generated@@399) $generated@@399) (= ($generated@@295 $generated@@400) $generated@@400)) (and (= ($generated@@295 $generated@@401) $generated@@401) (= $generated@@402 ($generated@@136 $generated@@403 $generated@@404 $generated@@60 false)))) (=> (and (and (and ($generated@@405 $generated@@406) ($generated@@407 $generated@@406)) (= $generated@@404 $generated@@406)) (and (and (= $generated@@400 ($generated@@307 $generated@@408)) (= $generated@@401 ($generated@@307 ($generated@@307 $generated@@408)))) (and (= ($generated@@295 $generated@@408) $generated@@408) ($generated@@69 ($generated@@8 $generated@@409) $generated@@46 $generated@@406)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@131 $generated@@399 $generated@@409)) (=> (and ($generated@@130 $generated@@409) ($generated@@130 $generated@@409)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@128 $generated@@401 $generated@@409)) (=> (and ($generated@@128 $generated@@400 $generated@@409) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@409 ($generated@@191 3)))))))))))
(let (($generated@@411  (=> (and (and (and ($generated@@405 $generated@@404) ($generated@@407 $generated@@404)) (= 2 $generated@@127)) (and ($generated@@131 $generated@@399 $generated@@409) (= (ControlFlow 0 5) 2))) $generated@@410)))
$generated@@411)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
