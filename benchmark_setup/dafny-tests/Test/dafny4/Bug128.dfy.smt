(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@T) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 (T@U T@U T@U) Int)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) Int)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (Int) Int)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@U Int) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@T T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@T) T@U)
(declare-fun $generated@@450 () T@T)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (forall (($generated@@154 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@154)) 16)) (forall (($generated@@155 T@T) ) (! (= ($generated@@153 ($generated@@152 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@T) ) (! (= (type ($generated@@151 $generated@@156)) ($generated@@152 $generated@@156))
 :pattern ( ($generated@@151 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
 (not ($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
 :pattern ( (let (($generated@@158 (type $generated@@157)))
($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@163 $generated@@167)) $generated@@64)
 :pattern ( ($generated@@163 $generated@@167))
)))
(assert  (=> (<= 0 $generated@@159) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) $generated@@64) (= (type $generated@@169) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@170) ($generated@@152 $generated@@145))) (= (type $generated@@171) $generated@@145)) (or ($generated@@162 $generated@@168 $generated@@170 $generated@@171) (and (not (= 0 $generated@@159)) (and (and (and ($generated@@161 $generated@@169) ($generated@@132 $generated@@170 ($generated@@163 $generated@@168))) ($generated@@164 $generated@@171 $generated@@168)) ($generated@@150 $generated@@170 $generated@@171))))) (and ($generated@@165 $generated@@168 $generated@@170 $generated@@171) (= ($generated@@160 $generated@@168 $generated@@170 $generated@@171) (let (($generated@@172 ($generated@@166 $generated@@168 $generated@@170 $generated@@171)))
$generated@@172))))
 :pattern ( ($generated@@160 $generated@@168 $generated@@170 $generated@@171) ($generated@@161 $generated@@169))
))))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@64)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@177) $generated@@64)) ($generated@@132 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@132 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 17)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@77 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@67 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@77) (= (type $generated@@228) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@229) ($generated@@66 $generated@@4))) (= (type $generated@@231) $generated@@77)) (= (type $generated@@232) ($generated@@66 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@234 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@180 $generated@@77 $generated@@4))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@67 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@77) (= (type $generated@@240) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@241) ($generated@@66 $generated@@4))) (= (type $generated@@243) $generated@@77)) (= (type $generated@@244) ($generated@@66 $generated@@245))) (= ($generated@@0 ($generated@@178 ($generated@@234 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@178 ($generated@@234 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@246 $generated@@247 $generated@@248)) $generated@@136)
 :pattern ( ($generated@@246 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@64) (= (type $generated@@250) $generated@@64)) (= (type $generated@@251) $generated@@145)) (= (type $generated@@252) $generated@@145)) (= ($generated@@132 ($generated@@246 $generated@@251 $generated@@252) ($generated@@135 $generated@@249 $generated@@250))  (and ($generated@@164 $generated@@251 $generated@@249) ($generated@@164 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@132 ($generated@@246 $generated@@251 $generated@@252) ($generated@@135 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@136) (= (type $generated@@254) $generated@@136)) (= ($generated@@142 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@142 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@64)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@258) $generated@@64)) (= ($generated@@132 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@145) ($generated@@0 ($generated@@81 $generated@@257 $generated@@259))) ($generated@@164 $generated@@259 $generated@@258))
 :pattern ( ($generated@@81 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@132 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@64)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@263) $generated@@64)) (= ($generated@@132 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@145) ($generated@@0 ($generated@@81 $generated@@262 $generated@@264))) ($generated@@164 $generated@@264 $generated@@263))
 :pattern ( ($generated@@81 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@132 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 Int) ) (! (= ($generated@@265 $generated@@266) $generated@@266)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 (type $generated@@268)))
(= (type ($generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@267 $generated@@270) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@64) (= (type $generated@@273) $generated@@64)) (= (type $generated@@274) $generated@@145)) (= (type $generated@@275) $generated@@145)) (= (type $generated@@276) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@161 $generated@@276)) (= ($generated@@74 ($generated@@246 $generated@@274 $generated@@275) ($generated@@135 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@74 ($generated@@246 $generated@@274 $generated@@275) ($generated@@135 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 Int) ) (! (let (($generated@@281 ($generated@@153 (type $generated@@279))))
(= (type ($generated@@278 $generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@278 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (= (type $generated@@282) $generated@@64) (= (type $generated@@283) ($generated@@152 $generated@@145))) (= (type $generated@@284) $generated@@145)) ($generated@@165 $generated@@282 $generated@@283 $generated@@284)) (and (and (<= ($generated@@265 0) ($generated@@166 $generated@@282 $generated@@283 $generated@@284)) (< ($generated@@166 $generated@@282 $generated@@283 $generated@@284) ($generated@@277 $generated@@283))) (= ($generated@@278 $generated@@283 ($generated@@166 $generated@@282 $generated@@283 $generated@@284)) $generated@@284)))
 :pattern ( ($generated@@166 $generated@@282 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@68)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@136) (= ($generated@@134 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@136) ($generated@@134 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@145) (= (type $generated@@290) $generated@@145)) (= $generated@@288 ($generated@@246 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@134 $generated@@288))
)))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@277 ($generated@@151 $generated@@291)) 0)
 :pattern ( ($generated@@151 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@145)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@64) (= (type $generated@@296) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@271 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@74 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@271 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@76 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@79 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@76 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@81 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@81 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@81 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@79 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@76 $generated@@340 $generated@@2)) (= ($generated@@174 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@81 $generated@@339 $generated@@341))) (<= ($generated ($generated@@81 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@81 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@174 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@303 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@307 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@307 (type $generated@@349))))
(let (($generated@@351 ($generated@@306 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@305 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@304 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@325 (type $generated@@353))))
(let (($generated@@355 ($generated@@324 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@323 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@322 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@321 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@325 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@76 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@325 (type $generated@@360))))
(let (($generated@@362 ($generated@@324 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@323 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@322 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@365) $generated@@64)) (= ($generated@@132 $generated@@364 ($generated@@173 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@364 $generated@@366)))) ($generated@@164 $generated@@366 $generated@@365))
 :pattern ( ($generated@@81 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@132 $generated@@364 ($generated@@173 $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
 (=> (= (type $generated@@367) ($generated@@152 $generated@@369)) (= ($generated@@150 $generated@@367 $generated@@368) (exists (($generated@@370 Int) ) (!  (and (and (<= 0 $generated@@370) (< $generated@@370 ($generated@@277 $generated@@367))) (= ($generated@@278 $generated@@367 $generated@@370) $generated@@368))
 :pattern ( ($generated@@278 $generated@@367 $generated@@370))
)))))
 :pattern ( ($generated@@150 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@372) $generated@@64)) (= (type $generated@@373) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@371 ($generated@@255 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@145) ($generated@@0 ($generated@@81 $generated@@371 $generated@@374))) ($generated@@271 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@81 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@74 $generated@@371 ($generated@@255 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@260 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@145) ($generated@@0 ($generated@@81 $generated@@375 $generated@@378))) ($generated@@271 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@81 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@260 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@81 ($generated@@298 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@81 ($generated@@298 $generated@@380) $generated@@379)))
)))
(assert  (and (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@381 $generated@@384)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@381 $generated@@384))
)) (forall (($generated@@385 T@T) ($generated@@386 T@U) ) (! (= (type ($generated@@382 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@382 $generated@@385 $generated@@386))
))) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@307 (type $generated@@387))))
(let (($generated@@389 ($generated@@306 (type $generated@@387))))
(= (type ($generated@@383 $generated@@387)) ($generated@@76 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@383 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@391) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@381 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@390) ($generated@@143 ($generated@@382 $generated@@136 $generated@@391)))) (= ($generated@@81 ($generated@@383 $generated@@390) ($generated@@143 ($generated@@382 $generated@@136 $generated@@391))) ($generated@@144 ($generated@@382 $generated@@136 $generated@@391))))))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@390) $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@325 (type $generated@@395))))
(let (($generated@@397 ($generated@@324 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@76 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@323 $generated@@145 $generated@@145)) (= (type $generated@@399) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@81 ($generated@@321 $generated@@398) ($generated@@143 ($generated@@382 $generated@@136 $generated@@399)))) (= ($generated@@81 ($generated@@393 $generated@@398) ($generated@@143 ($generated@@382 $generated@@136 $generated@@399))) ($generated@@144 ($generated@@382 $generated@@136 $generated@@399))))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@306 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@305 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@81 ($generated@@383 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@324 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@323 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@81 ($generated@@321 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@81 ($generated@@393 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@64)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@414) $generated@@64)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@413) $generated@@417))) (and ($generated@@271 ($generated@@81 ($generated@@383 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@271 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@413) $generated@@417))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@74 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@323 $generated@@145 $generated@@145)) (= (type $generated@@422) $generated@@64)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@421) $generated@@425))) (and ($generated@@271 ($generated@@81 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@271 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@T) ) (! (= (type ($generated@@426 $generated@@427)) ($generated@@76 $generated@@427 $generated@@4))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@325 (type $generated@@428))))
(let (($generated@@430 ($generated@@324 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@323 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@322 $generated@@430 $generated@@429)) (= ($generated@@321 $generated@@428) ($generated@@426 $generated@@430))))))
 :pattern ( ($generated@@321 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@325 (type $generated@@431))))
(let (($generated@@433 ($generated@@324 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@323 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@322 $generated@@433 $generated@@432)) (= ($generated@@357 $generated@@431) ($generated@@426 $generated@@432))))))
 :pattern ( ($generated@@357 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@325 (type $generated@@434))))
(let (($generated@@436 ($generated@@324 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@323 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@322 $generated@@436 $generated@@435)) (= ($generated@@392 $generated@@434) ($generated@@426 $generated@@145))))))
 :pattern ( ($generated@@392 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@307 (type $generated@@437))))
(let (($generated@@439 ($generated@@306 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@305 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@304 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@381 $generated@@437) ($generated@@292 ($generated@@246 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@381 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@325 (type $generated@@442))))
(let (($generated@@444 ($generated@@324 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@323 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@322 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@145) (= (type $generated@@446) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@442) ($generated@@292 ($generated@@246 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@392 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@145) ($generated@@164 $generated@@447 $generated@@46)) (and (= ($generated@@292 ($generated@@382 $generated@@2 $generated@@447)) $generated@@447) ($generated@@132 ($generated@@382 $generated@@2 $generated@@447) $generated@@46)))
 :pattern ( ($generated@@164 $generated@@447 $generated@@46))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) ($generated@@164 $generated@@448 $generated@@47)) (and (= ($generated@@292 ($generated@@382 $generated@@3 $generated@@448)) $generated@@448) ($generated@@132 ($generated@@382 $generated@@3 $generated@@448) $generated@@47)))
 :pattern ( ($generated@@164 $generated@@448 $generated@@47))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@145) ($generated@@164 $generated@@449 $generated@@44)) (and (= ($generated@@292 ($generated@@382 $generated@@4 $generated@@449)) $generated@@449) ($generated@@132 ($generated@@382 $generated@@4 $generated@@449) $generated@@44)))
 :pattern ( ($generated@@164 $generated@@449 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@450) 20))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) ($generated@@164 $generated@@451 $generated@@45)) (and (= ($generated@@292 ($generated@@382 $generated@@450 $generated@@451)) $generated@@451) ($generated@@132 ($generated@@382 $generated@@450 $generated@@451) $generated@@45)))
 :pattern ( ($generated@@164 $generated@@451 $generated@@45))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (= (type $generated@@453) $generated@@64) (= ($generated@@164 ($generated@@292 $generated@@452) $generated@@453) ($generated@@132 $generated@@452 $generated@@453)))
 :pattern ( ($generated@@164 ($generated@@292 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@79 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@76 $generated@@455 $generated@@2)) (<= 0 ($generated@@297 $generated@@454))))
 :pattern ( ($generated@@297 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@153 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@152 $generated@@457)) (<= 0 ($generated@@277 $generated@@456))))
 :pattern ( ($generated@@277 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@410 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@410 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@410 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@410 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@72 ($generated@@410 $generated@@466 $generated@@467)) $generated@@58))
 :pattern ( ($generated@@410 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@418 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@418 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@418 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@418 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@72 ($generated@@418 $generated@@476 $generated@@477)) $generated@@59))
 :pattern ( ($generated@@418 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@145) (= (type $generated@@479) $generated@@145)) (= ($generated@@285 ($generated@@246 $generated@@478 $generated@@479)) $generated@@61))
 :pattern ( ($generated@@246 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@135 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@135 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@135 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@135 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@145) (= (type $generated@@489) $generated@@145)) (= ($generated@@143 ($generated@@246 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@246 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@145) (= (type $generated@@491) $generated@@145)) (= ($generated@@144 ($generated@@246 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@246 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@152 $generated@@145)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@492 ($generated@@163 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@277 $generated@@492))) ($generated@@271 ($generated@@278 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@278 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@74 $generated@@492 ($generated@@163 $generated@@493) $generated@@494))
)))
(assert  (=> (<= 0 $generated@@159) (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@498) ($generated@@152 $generated@@145))) (= (type $generated@@499) $generated@@145)) (or ($generated@@162 $generated@@496 ($generated@@267 $generated@@498) $generated@@499) (and (not (= 0 $generated@@159)) (and (and (and ($generated@@161 $generated@@497) ($generated@@132 $generated@@498 ($generated@@163 $generated@@496))) ($generated@@164 $generated@@499 $generated@@496)) ($generated@@150 $generated@@498 $generated@@499))))) (and ($generated@@165 $generated@@496 ($generated@@267 $generated@@498) $generated@@499) (= ($generated@@160 $generated@@496 ($generated@@267 $generated@@498) $generated@@499) (let (($generated@@500 ($generated@@166 $generated@@496 ($generated@@267 $generated@@498) $generated@@499)))
$generated@@500))))
 :weight 3
 :pattern ( ($generated@@160 $generated@@496 ($generated@@267 $generated@@498) $generated@@499) ($generated@@161 $generated@@497))
))))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@75 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@75 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@255 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@255 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@255 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@260 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@260 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@260 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@173 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@173 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@173 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@163 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@163 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@163 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@163 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@382 $generated@@520 ($generated@@292 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@292 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) (= ($generated@@132 $generated@@521 ($generated@@410 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@521) $generated@@524))) (and ($generated@@164 ($generated@@81 ($generated@@383 $generated@@521) $generated@@524) $generated@@523) ($generated@@164 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@521) $generated@@524))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@132 $generated@@521 ($generated@@410 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@323 $generated@@145 $generated@@145)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) (= ($generated@@132 $generated@@525 ($generated@@418 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@525) $generated@@528))) (and ($generated@@164 ($generated@@81 ($generated@@393 $generated@@525) $generated@@528) $generated@@527) ($generated@@164 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@525) $generated@@528))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@132 $generated@@525 ($generated@@418 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@145)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@246 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@246 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@145)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@246 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@246 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@64)) ($generated@@164 $generated@@535 ($generated@@410 $generated@@536 $generated@@537))) (and (= ($generated@@292 ($generated@@382 ($generated@@305 $generated@@145 $generated@@145) $generated@@535)) $generated@@535) ($generated@@132 ($generated@@382 ($generated@@305 $generated@@145 $generated@@145) $generated@@535) ($generated@@410 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@164 $generated@@535 ($generated@@410 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) $generated@@64)) ($generated@@164 $generated@@538 ($generated@@418 $generated@@539 $generated@@540))) (and (= ($generated@@292 ($generated@@382 ($generated@@323 $generated@@145 $generated@@145) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@382 ($generated@@323 $generated@@145 $generated@@145) $generated@@538) ($generated@@418 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@164 $generated@@538 ($generated@@418 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@145)) ($generated@@164 $generated@@543 ($generated@@135 $generated@@541 $generated@@542))) (and (= ($generated@@292 ($generated@@382 $generated@@136 $generated@@543)) $generated@@543) ($generated@@132 ($generated@@382 $generated@@136 $generated@@543) ($generated@@135 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@164 $generated@@543 ($generated@@135 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@81 ($generated@@426 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@81 ($generated@@426 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@69)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@64) (= (type $generated@@549) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@135 $generated@@548 $generated@@549)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@136) (= ($generated@@529 ($generated@@292 $generated@@550)) ($generated@@530 $generated@@550)))
 :pattern ( ($generated@@529 ($generated@@292 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@145) ($generated@@164 $generated@@551 ($generated@@75 0))) (and (= ($generated@@292 ($generated@@382 $generated@@2 $generated@@551)) $generated@@551) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@145 $generated@@4) $generated@@551) ($generated@@75 0))))
 :pattern ( ($generated@@164 $generated@@551 ($generated@@75 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@164 $generated@@552 ($generated@@255 $generated@@553))) (and (= ($generated@@292 ($generated@@382 ($generated@@76 $generated@@145 $generated@@4) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@145 $generated@@4) $generated@@552) ($generated@@255 $generated@@553))))
 :pattern ( ($generated@@164 $generated@@552 ($generated@@255 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@145) (= (type $generated@@555) $generated@@64)) ($generated@@164 $generated@@554 ($generated@@260 $generated@@555))) (and (= ($generated@@292 ($generated@@382 ($generated@@76 $generated@@145 $generated@@4) $generated@@554)) $generated@@554) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@145 $generated@@4) $generated@@554) ($generated@@260 $generated@@555))))
 :pattern ( ($generated@@164 $generated@@554 ($generated@@260 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@64)) ($generated@@164 $generated@@556 ($generated@@173 $generated@@557))) (and (= ($generated@@292 ($generated@@382 ($generated@@76 $generated@@145 $generated@@2) $generated@@556)) $generated@@556) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@145 $generated@@2) $generated@@556) ($generated@@173 $generated@@557))))
 :pattern ( ($generated@@164 $generated@@556 ($generated@@173 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@64)) ($generated@@164 $generated@@558 ($generated@@163 $generated@@559))) (and (= ($generated@@292 ($generated@@382 ($generated@@152 $generated@@145) $generated@@558)) $generated@@558) ($generated@@132 ($generated@@382 ($generated@@152 $generated@@145) $generated@@558) ($generated@@163 $generated@@559))))
 :pattern ( ($generated@@164 $generated@@558 ($generated@@163 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@560 ($generated@@173 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@560 $generated@@563)))) ($generated@@271 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@81 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@173 $generated@@561) $generated@@562))
)))
(assert  (=> (<= 0 $generated@@159) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@64) (= (type $generated@@565) ($generated@@152 $generated@@145))) (= (type $generated@@566) $generated@@145)) (or ($generated@@162 $generated@@564 $generated@@565 $generated@@566) (and (not (= 0 $generated@@159)) (and (and ($generated@@132 $generated@@565 ($generated@@163 $generated@@564)) ($generated@@164 $generated@@566 $generated@@564)) ($generated@@150 $generated@@565 $generated@@566))))) (and (and (<= ($generated@@265 0) ($generated@@160 $generated@@564 $generated@@565 $generated@@566)) (< ($generated@@160 $generated@@564 $generated@@565 $generated@@566) ($generated@@277 $generated@@565))) (= ($generated@@278 $generated@@565 ($generated@@160 $generated@@564 $generated@@565 $generated@@566)) $generated@@566)))
 :pattern ( ($generated@@160 $generated@@564 $generated@@565 $generated@@566))
))))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@136) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@161 $generated@@569) (and ($generated@@134 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@64) ($generated@@74 $generated@@567 ($generated@@135 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@135 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@271 ($generated@@143 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@271 ($generated@@143 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@136) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@161 $generated@@573) (and ($generated@@134 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@64) ($generated@@74 $generated@@571 ($generated@@135 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@74 $generated@@571 ($generated@@135 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@271 ($generated@@144 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@271 ($generated@@144 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@145) (= (type $generated@@576) $generated@@145)) (= ($generated@@246 ($generated@@267 $generated@@575) ($generated@@267 $generated@@576)) ($generated@@267 ($generated@@246 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@246 ($generated@@267 $generated@@575) ($generated@@267 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@265 $generated@@577))) ($generated@@267 ($generated@@292 ($generated@@8 $generated@@577))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@265 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@292 ($generated@@267 $generated@@578)) ($generated@@267 ($generated@@292 $generated@@578)))
 :pattern ( ($generated@@292 ($generated@@267 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@153 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@152 $generated@@580)) (= ($generated@@277 $generated@@579) 0)) (= $generated@@579 ($generated@@151 $generated@@580))))
 :pattern ( ($generated@@277 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@76 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@297 ($generated@@82 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@297 $generated@@581) ($generated ($generated@@81 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@297 ($generated@@82 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@2)) ($generated@@74 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@3)) ($generated@@74 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@4)) ($generated@@74 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@450)) ($generated@@74 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@594) $generated@@145)) ($generated@@74 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@74 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@152 $generated@@145)) (= (type $generated@@596) $generated@@64)) (= ($generated@@132 $generated@@595 ($generated@@163 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@277 $generated@@595))) ($generated@@164 ($generated@@278 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@278 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@132 $generated@@595 ($generated@@163 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@277 $generated@@599))) (< ($generated@@530 ($generated@@382 $generated@@136 ($generated@@278 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@530 ($generated@@382 $generated@@136 ($generated@@278 $generated@@599 $generated@@600))))
)))
(assert  (=> (<= 0 $generated@@159) (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@601) $generated@@64) (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@603) ($generated@@152 $generated@@145))) (= (type $generated@@604) $generated@@145)) (or ($generated@@162 $generated@@601 ($generated@@267 $generated@@603) ($generated@@267 $generated@@604)) (and (not (= 0 $generated@@159)) (and (and (and ($generated@@161 $generated@@602) ($generated@@132 $generated@@603 ($generated@@163 $generated@@601))) ($generated@@164 $generated@@604 $generated@@601)) ($generated@@150 $generated@@603 $generated@@604))))) (and ($generated@@165 $generated@@601 ($generated@@267 $generated@@603) ($generated@@267 $generated@@604)) (= ($generated@@160 $generated@@601 ($generated@@267 $generated@@603) ($generated@@267 $generated@@604)) (let (($generated@@605 ($generated@@166 $generated@@601 ($generated@@267 $generated@@603) ($generated@@267 $generated@@604))))
$generated@@605))))
 :weight 3
 :pattern ( ($generated@@160 $generated@@601 ($generated@@267 $generated@@603) ($generated@@267 $generated@@604)) ($generated@@161 $generated@@602))
))))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@64)) ($generated@@132 $generated@@606 ($generated@@410 $generated@@607 $generated@@608))) (and (and ($generated@@132 ($generated@@303 $generated@@606) ($generated@@255 $generated@@607)) ($generated@@132 ($generated@@346 $generated@@606) ($generated@@255 $generated@@608))) ($generated@@132 ($generated@@381 $generated@@606) ($generated@@255 ($generated@@135 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@132 $generated@@606 ($generated@@410 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@323 $generated@@145 $generated@@145)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@64)) ($generated@@132 $generated@@609 ($generated@@418 $generated@@610 $generated@@611))) (and (and ($generated@@132 ($generated@@321 $generated@@609) ($generated@@260 $generated@@610)) ($generated@@132 ($generated@@357 $generated@@609) ($generated@@260 $generated@@611))) ($generated@@132 ($generated@@392 $generated@@609) ($generated@@260 ($generated@@135 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@132 $generated@@609 ($generated@@418 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@132 $generated@@612 $generated@@46))
 :pattern ( ($generated@@132 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@132 $generated@@613 $generated@@47))
 :pattern ( ($generated@@132 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@132 $generated@@614 $generated@@44))
 :pattern ( ($generated@@132 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@450) ($generated@@132 $generated@@615 $generated@@45))
 :pattern ( ($generated@@132 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@145) ($generated@@132 $generated@@616 $generated@@48))
 :pattern ( ($generated@@132 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@617) $generated@@64) (= (type $generated@@618) ($generated@@152 $generated@@145))) (= (type $generated@@619) $generated@@145)) (= (type $generated@@622) ($generated@@180 $generated@@77 $generated@@4))) (= (type $generated@@623) $generated@@77)) (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@624) ($generated@@180 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@626  (=> (and (and (<= ($generated@@265 0) ($generated@@160 $generated@@617 $generated@@618 $generated@@619)) (< ($generated@@160 $generated@@617 $generated@@618 $generated@@619) ($generated@@277 $generated@@618))) (and ($generated@@74 $generated@@618 ($generated@@163 $generated@@617) $generated@@620) ($generated@@271 $generated@@619 $generated@@617 $generated@@620))) (and (=> (= (ControlFlow 0 16) (- 0 18)) ($generated@@150 $generated@@618 $generated@@619)) (=> ($generated@@150 $generated@@618 $generated@@619) (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (and (= $generated@@618 $generated@@618) (= $generated@@619 $generated@@619)) (< ($generated@@598 $generated@@618) ($generated@@598 $generated@@618)))) (=> (or (and (= $generated@@618 $generated@@618) (= $generated@@619 $generated@@619)) (< ($generated@@598 $generated@@618) ($generated@@598 $generated@@618))) (=> (and (or (and (= $generated@@618 $generated@@618) (= $generated@@619 $generated@@619)) ($generated@@162 $generated@@617 $generated@@618 $generated@@619)) (= (ControlFlow 0 16) (- 0 15))) (and (<= 0 ($generated@@160 $generated@@617 $generated@@618 $generated@@619)) (< ($generated@@160 $generated@@617 $generated@@618 $generated@@619) ($generated@@277 $generated@@618)))))))))))
(let (($generated@@627  (=> (and (< ($generated@@160 $generated@@617 $generated@@618 $generated@@619) ($generated@@265 0)) (= (ControlFlow 0 22) 16)) $generated@@626)))
(let (($generated@@628  (=> (<= ($generated@@265 0) ($generated@@160 $generated@@617 $generated@@618 $generated@@619)) (=> (and ($generated@@74 $generated@@618 ($generated@@163 $generated@@617) $generated@@620) ($generated@@271 $generated@@619 $generated@@617 $generated@@620)) (and (=> (= (ControlFlow 0 19) (- 0 21)) ($generated@@150 $generated@@618 $generated@@619)) (=> ($generated@@150 $generated@@618 $generated@@619) (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (and (= $generated@@618 $generated@@618) (= $generated@@619 $generated@@619)) (< ($generated@@598 $generated@@618) ($generated@@598 $generated@@618)))) (=> (or (and (= $generated@@618 $generated@@618) (= $generated@@619 $generated@@619)) (< ($generated@@598 $generated@@618) ($generated@@598 $generated@@618))) (=> (and (or (and (= $generated@@618 $generated@@618) (= $generated@@619 $generated@@619)) ($generated@@162 $generated@@617 $generated@@618 $generated@@619)) (= (ControlFlow 0 19) 16)) $generated@@626)))))))))
(let (($generated@@629  (=> (and ($generated@@74 $generated@@618 ($generated@@163 $generated@@617) $generated@@620) ($generated@@271 $generated@@619 $generated@@617 $generated@@620)) (and (=> (= (ControlFlow 0 23) (- 0 25)) ($generated@@150 $generated@@618 $generated@@619)) (=> ($generated@@150 $generated@@618 $generated@@619) (and (=> (= (ControlFlow 0 23) (- 0 24)) (or (and (= $generated@@618 $generated@@618) (= $generated@@619 $generated@@619)) (< ($generated@@598 $generated@@618) ($generated@@598 $generated@@618)))) (=> (or (and (= $generated@@618 $generated@@618) (= $generated@@619 $generated@@619)) (< ($generated@@598 $generated@@618) ($generated@@598 $generated@@618))) (=> (or (and (= $generated@@618 $generated@@618) (= $generated@@619 $generated@@619)) ($generated@@162 $generated@@617 $generated@@618 $generated@@619)) (and (=> (= (ControlFlow 0 23) 19) $generated@@628) (=> (= (ControlFlow 0 23) 22) $generated@@627))))))))))
(let (($generated@@630  (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@265 0) ($generated@@160 $generated@@617 $generated@@618 $generated@@619))) (=> (<= ($generated@@265 0) ($generated@@160 $generated@@617 $generated@@618 $generated@@619)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< ($generated@@160 $generated@@617 $generated@@618 $generated@@619) ($generated@@277 $generated@@618))) (=> (< ($generated@@160 $generated@@617 $generated@@618 $generated@@619) ($generated@@277 $generated@@618)) (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@278 $generated@@618 ($generated@@160 $generated@@617 $generated@@618 $generated@@619)) $generated@@619))))))))
(let (($generated@@631  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (and ($generated@@132 ($generated@@8 (- ($generated@@277 $generated@@618) 1)) $generated@@46) (and (and (<= ($generated@@265 0) (- ($generated@@277 $generated@@618) 1)) (< (- ($generated@@277 $generated@@618) 1) ($generated@@277 $generated@@618))) (= ($generated@@278 $generated@@618 (- ($generated@@277 $generated@@618) 1)) $generated@@619))) (or (and ($generated@@132 ($generated@@8 ($generated@@265 0)) $generated@@46) (and (and (<= ($generated@@265 0) ($generated@@265 0)) (< 0 ($generated@@277 $generated@@618))) (= ($generated@@278 $generated@@618 ($generated@@265 0)) $generated@@619))) (or (and ($generated@@132 ($generated@@8 ($generated@@265 0)) $generated@@46) (and (and (<= ($generated@@265 0) ($generated@@265 0)) (< 0 ($generated@@277 $generated@@618))) (= ($generated@@278 $generated@@618 ($generated@@265 0)) $generated@@619))) (exists (($generated@@632 Int) )  (and (and (<= ($generated@@265 0) $generated@@632) (< $generated@@632 ($generated@@277 $generated@@618))) (= ($generated@@278 $generated@@618 $generated@@632) $generated@@619))))))) (=> (or (and ($generated@@132 ($generated@@8 (- ($generated@@277 $generated@@618) 1)) $generated@@46) (and (and (<= ($generated@@265 0) (- ($generated@@277 $generated@@618) 1)) (< (- ($generated@@277 $generated@@618) 1) ($generated@@277 $generated@@618))) (= ($generated@@278 $generated@@618 (- ($generated@@277 $generated@@618) 1)) $generated@@619))) (or (and ($generated@@132 ($generated@@8 ($generated@@265 0)) $generated@@46) (and (and (<= ($generated@@265 0) ($generated@@265 0)) (< 0 ($generated@@277 $generated@@618))) (= ($generated@@278 $generated@@618 ($generated@@265 0)) $generated@@619))) (or (and ($generated@@132 ($generated@@8 ($generated@@265 0)) $generated@@46) (and (and (<= ($generated@@265 0) ($generated@@265 0)) (< 0 ($generated@@277 $generated@@618))) (= ($generated@@278 $generated@@618 ($generated@@265 0)) $generated@@619))) (exists (($generated@@633 Int) )  (and (and (<= ($generated@@265 0) $generated@@633) (< $generated@@633 ($generated@@277 $generated@@618))) (= ($generated@@278 $generated@@618 $generated@@633) $generated@@619)))))) (=> (and (and (and (<= ($generated@@265 0) $generated@@621) (< $generated@@621 ($generated@@277 $generated@@618))) (= ($generated@@278 $generated@@618 $generated@@621) $generated@@619)) (and (and ($generated@@165 $generated@@617 $generated@@618 $generated@@619) (= ($generated@@160 $generated@@617 $generated@@618 $generated@@619) $generated@@621)) (and ($generated@@132 ($generated@@8 ($generated@@160 $generated@@617 $generated@@618 $generated@@619)) $generated@@46) (= (ControlFlow 0 6) 3)))) $generated@@630)))))
(let (($generated@@634  (=> (and (not (and (<= ($generated@@265 0) $generated@@621) (< $generated@@621 ($generated@@277 $generated@@618)))) (= (ControlFlow 0 10) 6)) $generated@@631)))
(let (($generated@@635  (=> (and (<= ($generated@@265 0) $generated@@621) (< $generated@@621 ($generated@@277 $generated@@618))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@277 $generated@@618)))) (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@277 $generated@@618))) (=> (= (ControlFlow 0 8) 6) $generated@@631))))))
(let (($generated@@636  (=> (< $generated@@621 ($generated@@265 0)) (and (=> (= (ControlFlow 0 12) 8) $generated@@635) (=> (= (ControlFlow 0 12) 10) $generated@@634)))))
(let (($generated@@637  (=> (<= ($generated@@265 0) $generated@@621) (and (=> (= (ControlFlow 0 11) 8) $generated@@635) (=> (= (ControlFlow 0 11) 10) $generated@@634)))))
(let (($generated@@638  (and (=> (= (ControlFlow 0 13) 11) $generated@@637) (=> (= (ControlFlow 0 13) 12) $generated@@636))))
(let (($generated@@639 true))
(let (($generated@@640  (=> (= $generated@@622 ($generated@@234 $generated@@623 $generated@@620 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@638) (=> (= (ControlFlow 0 14) 1) $generated@@639)))))
(let (($generated@@641  (=> (and (= $generated@@624 ($generated@@179 $generated@@623 $generated@@620 $generated@@60 false)) ($generated@@150 $generated@@618 $generated@@619)) (and (=> (= (ControlFlow 0 26) 23) $generated@@629) (=> (= (ControlFlow 0 26) 14) $generated@@640)))))
(let (($generated@@642  (=> (and ($generated@@161 $generated@@620) ($generated@@625 $generated@@620)) (=> (and (and ($generated@@132 $generated@@618 ($generated@@163 $generated@@617)) ($generated@@164 $generated@@619 $generated@@617)) (and (= 0 $generated@@159) (= (ControlFlow 0 27) 26))) $generated@@641))))
$generated@@642))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
