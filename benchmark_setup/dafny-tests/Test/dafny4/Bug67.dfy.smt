(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U Int) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@140 (T@U) Int)
(declare-fun $generated@@141 (T@T T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (Int) Int)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) Bool)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@T) T@U)
(declare-fun $generated@@460 () T@T)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@144 T@T) ) (= ($generated@@1 ($generated@@137 $generated@@144)) 14)) (forall (($generated@@145 T@T) ) (! (= ($generated@@143 ($generated@@137 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@137 $generated@@145))
))) (= ($generated@@1 $generated@@138) 15)) (forall (($generated@@146 T@U) ($generated@@147 Int) ) (! (let (($generated@@148 ($generated@@143 (type $generated@@146))))
(= (type ($generated@@135 $generated@@146 $generated@@147)) $generated@@148))
 :pattern ( ($generated@@135 $generated@@146 $generated@@147))
))) (= ($generated@@1 $generated@@142) 16)) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@136 $generated@@149)) $generated@@142)
 :pattern ( ($generated@@136 $generated@@149))
))) (forall (($generated@@150 T@T) ($generated@@151 T@U) ) (! (= (type ($generated@@141 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 Int) ) (!  (=> (= (type $generated@@152) ($generated@@137 $generated@@138)) (=> (and (<= 0 $generated@@153) (< $generated@@153 ($generated@@139 $generated@@152))) (< ($generated@@140 ($generated@@141 $generated@@142 ($generated@@135 $generated@@152 $generated@@153))) ($generated@@140 ($generated@@136 $generated@@152)))))
 :pattern ( ($generated@@135 $generated@@152 $generated@@153) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@154 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@154 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@158 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@67) (= (type $generated@@161) $generated@@67)) (= (type $generated@@162) $generated@@142)) ($generated@@154 $generated@@162 ($generated@@157 $generated@@160 $generated@@161))) ($generated@@156 $generated@@162))
 :pattern ( ($generated@@156 $generated@@162) ($generated@@154 $generated@@162 ($generated@@157 $generated@@160 $generated@@161)))
)))
(assert  (and (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@138)
 :pattern ( ($generated@@164 $generated@@166))
)) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@138)
 :pattern ( ($generated@@165 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@142) (= (type $generated@@169) $generated@@142)) true) (= ($generated@@163 $generated@@168 $generated@@169)  (and (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)) (= ($generated@@165 $generated@@168) ($generated@@165 $generated@@169)))))
 :pattern ( ($generated@@163 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@67)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@79 $generated@@138 $generated@@2)) (= (type $generated@@174) $generated@@67)) ($generated@@154 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@154 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 17)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@80 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@70 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@80) (= (type $generated@@225) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@226) ($generated@@69 $generated@@4))) (= (type $generated@@228) $generated@@80)) (= (type $generated@@229) ($generated@@69 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (= (type $generated@@232) $generated@@67))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@142) ($generated@@154 $generated@@233 $generated@@232)) ($generated@@231 $generated@@233))
 :pattern ( ($generated@@231 $generated@@233) ($generated@@154 $generated@@233 $generated@@232))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@142)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@67) (= (type $generated@@239) $generated@@67)) (= (type $generated@@240) $generated@@138)) (= (type $generated@@241) $generated@@138)) (= ($generated@@154 ($generated@@234 $generated@@240 $generated@@241) ($generated@@157 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@154 ($generated@@234 $generated@@240 $generated@@241) ($generated@@157 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@142) (= (type $generated@@243) $generated@@142)) (= ($generated@@163 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@163 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@142) (= (type $generated@@246) $generated@@142)) (= ($generated@@244 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@67)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@250) $generated@@67)) (= ($generated@@154 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@138) ($generated@@0 ($generated@@84 $generated@@249 $generated@@251))) ($generated@@235 $generated@@251 $generated@@250))
 :pattern ( ($generated@@84 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@154 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@67)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@255) $generated@@67)) (= ($generated@@154 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@138) ($generated@@0 ($generated@@84 $generated@@254 $generated@@256))) ($generated@@235 $generated@@256 $generated@@255))
 :pattern ( ($generated@@84 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@154 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@257 $generated@@258) $generated@@258)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert  (and (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@263 $generated@@265 $generated@@266)) ($generated@@137 $generated@@267)))
 :pattern ( ($generated@@263 $generated@@265 $generated@@266))
)) (forall (($generated@@268 T@U) ) (! (= (type ($generated@@264 $generated@@268)) $generated@@67)
 :pattern ( ($generated@@264 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) ($generated@@137 $generated@@138)) (= (type $generated@@270) $generated@@138)) (= (type $generated@@271) $generated@@67)) (and ($generated@@154 $generated@@269 ($generated@@264 $generated@@271)) ($generated@@235 $generated@@270 $generated@@271))) ($generated@@154 ($generated@@263 $generated@@269 $generated@@270) ($generated@@264 $generated@@271)))
 :pattern ( ($generated@@154 ($generated@@263 $generated@@269 $generated@@270) ($generated@@264 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@67) (= (type $generated@@275) $generated@@67)) (= (type $generated@@276) $generated@@138)) (= (type $generated@@277) $generated@@138)) (= (type $generated@@278) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@272 $generated@@278)) (= ($generated@@77 ($generated@@234 $generated@@276 $generated@@277) ($generated@@157 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@77 ($generated@@234 $generated@@276 $generated@@277) ($generated@@157 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@71)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@142) (= ($generated@@156 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@156 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@142) (= ($generated@@231 $generated@@282) (= ($generated@@279 $generated@@282) $generated@@63)))
 :pattern ( ($generated@@231 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@143 (type $generated@@284))))
 (=> (and (= (type $generated@@284) ($generated@@137 $generated@@286)) (= (type $generated@@285) ($generated@@137 $generated@@286))) (= ($generated@@283 $generated@@284 $generated@@285)  (and (= ($generated@@139 $generated@@284) ($generated@@139 $generated@@285)) (forall (($generated@@287 Int) ) (!  (=> (and (<= 0 $generated@@287) (< $generated@@287 ($generated@@139 $generated@@284))) (= ($generated@@135 $generated@@284 $generated@@287) ($generated@@135 $generated@@285 $generated@@287)))
 :pattern ( ($generated@@135 $generated@@284 $generated@@287))
 :pattern ( ($generated@@135 $generated@@285 $generated@@287))
))))))
 :pattern ( ($generated@@283 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@142) ($generated@@156 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@138) (= (type $generated@@290) $generated@@138)) (= $generated@@288 ($generated@@234 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@156 $generated@@288))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@137 $generated@@292))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@139 ($generated@@291 $generated@@293)) 0)
 :pattern ( ($generated@@291 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@142) ($generated@@231 $generated@@294)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) ($generated@@137 $generated@@138)) (= $generated@@294 ($generated@@136 $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@231 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (let (($generated@@298 (type $generated@@297)))
 (=> (= (type $generated@@296) ($generated@@137 $generated@@298)) (= ($generated@@139 ($generated@@263 $generated@@296 $generated@@297)) (+ 1 ($generated@@139 $generated@@296)))))
 :pattern ( ($generated@@263 $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@138)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@67) (= (type $generated@@303) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@273 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@77 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@273 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@79 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@82 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@79 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@84 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@79 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@79 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@84 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@84 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@82 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@79 $generated@@347 $generated@@2)) (= ($generated@@171 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@84 $generated@@346 $generated@@348))) (<= ($generated ($generated@@84 $generated@@346 $generated@@348)) ($generated@@304 $generated@@346))))
 :pattern ( ($generated@@84 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@171 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@138) ($generated@@235 $generated@@349 $generated@@232)) (and (= ($generated@@299 ($generated@@141 $generated@@142 $generated@@349)) $generated@@349) ($generated@@154 ($generated@@141 $generated@@142 $generated@@349) $generated@@232)))
 :pattern ( ($generated@@235 $generated@@349 $generated@@232))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 Int) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
 (=> (= (type $generated@@350) ($generated@@137 $generated@@353)) (and (=> (= $generated@@351 ($generated@@139 $generated@@350)) (= ($generated@@135 ($generated@@263 $generated@@350 $generated@@352) $generated@@351) $generated@@352)) (=> (not (= $generated@@351 ($generated@@139 $generated@@350))) (= ($generated@@135 ($generated@@263 $generated@@350 $generated@@352) $generated@@351) ($generated@@135 $generated@@350 $generated@@351))))))
 :pattern ( ($generated@@135 ($generated@@263 $generated@@350 $generated@@352) $generated@@351))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@314 (type $generated@@354))))
(let (($generated@@356 ($generated@@313 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@312 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@311 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@310 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@314 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@79 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@314 (type $generated@@361))))
(let (($generated@@363 ($generated@@313 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@312 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@311 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@84 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@332 (type $generated@@365))))
(let (($generated@@367 ($generated@@331 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@330 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@329 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@328 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@332 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@79 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@332 (type $generated@@372))))
(let (($generated@@374 ($generated@@331 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@330 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@329 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@84 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@79 $generated@@138 $generated@@2)) (= (type $generated@@377) $generated@@67)) (= ($generated@@154 $generated@@376 ($generated@@170 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@138) (< 0 ($generated ($generated@@84 $generated@@376 $generated@@378)))) ($generated@@235 $generated@@378 $generated@@377))
 :pattern ( ($generated@@84 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@154 $generated@@376 ($generated@@170 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@247 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@138) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@273 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@247 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@384) $generated@@67)) (= (type $generated@@385) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@383 ($generated@@252 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@138) ($generated@@0 ($generated@@84 $generated@@383 $generated@@386))) ($generated@@273 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@84 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@77 $generated@@383 ($generated@@252 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@84 ($generated@@305 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@84 ($generated@@305 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@79 $generated@@138 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@314 (type $generated@@392))))
(let (($generated@@394 ($generated@@313 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@79 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@396) $generated@@138)) (= ($generated@@0 ($generated@@84 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@395) ($generated@@164 ($generated@@141 $generated@@142 $generated@@396)))) (= ($generated@@84 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@141 $generated@@142 $generated@@396))) ($generated@@165 ($generated@@141 $generated@@142 $generated@@396))))))
 :pattern ( ($generated@@84 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@138 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@332 (type $generated@@400))))
(let (($generated@@402 ($generated@@331 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@79 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@404) $generated@@138)) (= ($generated@@0 ($generated@@84 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@84 ($generated@@328 $generated@@403) ($generated@@164 ($generated@@141 $generated@@142 $generated@@404)))) (= ($generated@@84 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@141 $generated@@142 $generated@@404))) ($generated@@165 ($generated@@141 $generated@@142 $generated@@404))))))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@313 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@312 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@84 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@84 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@331 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@330 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@84 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@84 ($generated@@328 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@84 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@410) $generated@@414))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@415) ($generated@@137 $generated@@138)) (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@272 $generated@@416)) (= ($generated@@77 ($generated@@136 $generated@@415) $generated@@232 $generated@@416) ($generated@@77 $generated@@415 ($generated@@264 $generated@@46) $generated@@416)))
 :pattern ( ($generated@@77 ($generated@@136 $generated@@415) $generated@@232 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@421) $generated@@67)) (= (type $generated@@422) $generated@@67)) (= (type $generated@@423) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@420) $generated@@424))) (and ($generated@@273 ($generated@@84 ($generated@@390 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@273 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@420) $generated@@424))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@77 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@67)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) $generated@@67)) (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@428) $generated@@432))) (and ($generated@@273 ($generated@@84 ($generated@@398 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@273 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@428) $generated@@432))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@77 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@143 (type $generated@@433))))
 (=> (and (and (= (type $generated@@433) ($generated@@137 $generated@@435)) (= (type $generated@@434) ($generated@@137 $generated@@435))) ($generated@@283 $generated@@433 $generated@@434)) (= $generated@@433 $generated@@434)))
 :pattern ( ($generated@@283 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@437 T@T) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@79 $generated@@437 $generated@@4))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@332 (type $generated@@438))))
(let (($generated@@440 ($generated@@331 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@330 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@329 $generated@@440 $generated@@439)) (= ($generated@@328 $generated@@438) ($generated@@436 $generated@@440))))))
 :pattern ( ($generated@@328 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@332 (type $generated@@441))))
(let (($generated@@443 ($generated@@331 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@330 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@329 $generated@@443 $generated@@442)) (= ($generated@@369 $generated@@441) ($generated@@436 $generated@@442))))))
 :pattern ( ($generated@@369 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@332 (type $generated@@444))))
(let (($generated@@446 ($generated@@331 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@330 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@329 $generated@@446 $generated@@445)) (= ($generated@@397 $generated@@444) ($generated@@436 $generated@@138))))))
 :pattern ( ($generated@@397 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@314 (type $generated@@447))))
(let (($generated@@449 ($generated@@313 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@312 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@311 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@138) (= (type $generated@@451) $generated@@138)) ($generated@@0 ($generated@@84 ($generated@@389 $generated@@447) ($generated@@299 ($generated@@234 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@389 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@332 (type $generated@@452))))
(let (($generated@@454 ($generated@@331 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@330 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@329 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@138) (= (type $generated@@456) $generated@@138)) ($generated@@0 ($generated@@84 ($generated@@397 $generated@@452) ($generated@@299 ($generated@@234 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@397 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@138) ($generated@@235 $generated@@457 $generated@@46)) (and (= ($generated@@299 ($generated@@141 $generated@@2 $generated@@457)) $generated@@457) ($generated@@154 ($generated@@141 $generated@@2 $generated@@457) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@457 $generated@@46))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@138) ($generated@@235 $generated@@458 $generated@@47)) (and (= ($generated@@299 ($generated@@141 $generated@@3 $generated@@458)) $generated@@458) ($generated@@154 ($generated@@141 $generated@@3 $generated@@458) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@458 $generated@@47))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@138) ($generated@@235 $generated@@459 $generated@@44)) (and (= ($generated@@299 ($generated@@141 $generated@@4 $generated@@459)) $generated@@459) ($generated@@154 ($generated@@141 $generated@@4 $generated@@459) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@459 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@460) 20))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@138) ($generated@@235 $generated@@461 $generated@@45)) (and (= ($generated@@299 ($generated@@141 $generated@@460 $generated@@461)) $generated@@461) ($generated@@154 ($generated@@141 $generated@@460 $generated@@461) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@461 $generated@@45))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@67) (= ($generated@@235 ($generated@@299 $generated@@462) $generated@@463) ($generated@@154 $generated@@462 $generated@@463)))
 :pattern ( ($generated@@235 ($generated@@299 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@82 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@79 $generated@@465 $generated@@2)) (<= 0 ($generated@@304 $generated@@464))))
 :pattern ( ($generated@@304 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@143 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@137 $generated@@467)) (<= 0 ($generated@@139 $generated@@466))))
 :pattern ( ($generated@@139 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@417 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@417 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@472 ($generated@@417 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@417 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@67) (= (type $generated@@477) $generated@@67)) (= ($generated@@75 ($generated@@417 $generated@@476 $generated@@477)) $generated@@58))
 :pattern ( ($generated@@417 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@67) (= (type $generated@@481) $generated@@67)) (= ($generated@@478 ($generated@@425 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@425 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@482 ($generated@@425 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@425 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@67) (= (type $generated@@487) $generated@@67)) (= ($generated@@75 ($generated@@425 $generated@@486 $generated@@487)) $generated@@59))
 :pattern ( ($generated@@425 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@138) (= (type $generated@@489) $generated@@138)) (= ($generated@@279 ($generated@@234 $generated@@488 $generated@@489)) $generated@@61))
 :pattern ( ($generated@@234 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@157 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@494 ($generated@@157 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@157 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@138) (= (type $generated@@499) $generated@@138)) (= ($generated@@164 ($generated@@234 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@234 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@138) (= (type $generated@@501) $generated@@138)) (= ($generated@@165 ($generated@@234 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@234 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@137 $generated@@138)) (= (type $generated@@503) $generated@@67)) (= (type $generated@@504) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@502 ($generated@@264 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@139 $generated@@502))) ($generated@@273 ($generated@@135 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@135 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@77 $generated@@502 ($generated@@264 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@78 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@78 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@508 ($generated@@247 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@247 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@75 ($generated@@247 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@252 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@252 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@252 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@170 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@170 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@170 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@264 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@264 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@264 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@264 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) ($generated@@137 $generated@@138)) (= ($generated@@279 ($generated@@136 $generated@@524)) $generated@@63))
 :pattern ( ($generated@@136 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) ($generated@@137 $generated@@138))
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) ($generated@@137 $generated@@138)) (= ($generated@@525 ($generated@@136 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@136 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@141 $generated@@529 ($generated@@299 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@299 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) (= ($generated@@154 $generated@@530 ($generated@@417 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@530) $generated@@533))) (and ($generated@@235 ($generated@@84 ($generated@@390 $generated@@530) $generated@@533) $generated@@532) ($generated@@235 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@530) $generated@@533))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@154 $generated@@530 ($generated@@417 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) $generated@@67)) (= ($generated@@154 $generated@@534 ($generated@@425 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@534) $generated@@537))) (and ($generated@@235 ($generated@@84 ($generated@@398 $generated@@534) $generated@@537) $generated@@536) ($generated@@235 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@534) $generated@@537))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@154 $generated@@534 ($generated@@425 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@138) (= (type $generated@@540) $generated@@138)) (< ($generated@@538 $generated@@539) ($generated@@140 ($generated@@234 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@234 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@138) (= (type $generated@@542) $generated@@138)) (< ($generated@@538 $generated@@542) ($generated@@140 ($generated@@234 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@234 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@142) (= (type $generated@@544) $generated@@142)) true) (= ($generated@@244 $generated@@543 $generated@@544) ($generated@@283 ($generated@@525 $generated@@543) ($generated@@525 $generated@@544))))
 :pattern ( ($generated@@244 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@138) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) $generated@@67)) ($generated@@235 $generated@@545 ($generated@@417 $generated@@546 $generated@@547))) (and (= ($generated@@299 ($generated@@141 ($generated@@312 $generated@@138 $generated@@138) $generated@@545)) $generated@@545) ($generated@@154 ($generated@@141 ($generated@@312 $generated@@138 $generated@@138) $generated@@545) ($generated@@417 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@235 $generated@@545 ($generated@@417 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@138) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) ($generated@@235 $generated@@548 ($generated@@425 $generated@@549 $generated@@550))) (and (= ($generated@@299 ($generated@@141 ($generated@@330 $generated@@138 $generated@@138) $generated@@548)) $generated@@548) ($generated@@154 ($generated@@141 ($generated@@330 $generated@@138 $generated@@138) $generated@@548) ($generated@@425 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@235 $generated@@548 ($generated@@425 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@67) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) $generated@@138)) ($generated@@235 $generated@@553 ($generated@@157 $generated@@551 $generated@@552))) (and (= ($generated@@299 ($generated@@141 $generated@@142 $generated@@553)) $generated@@553) ($generated@@154 ($generated@@141 $generated@@142 $generated@@553) ($generated@@157 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@235 $generated@@553 ($generated@@157 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) ($generated@@137 $generated@@138)) (< ($generated@@554 $generated@@555) ($generated@@140 ($generated@@136 $generated@@555))))
 :pattern ( ($generated@@136 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (not ($generated@@0 ($generated@@84 ($generated@@436 $generated@@557) $generated@@556))))
 :pattern ( (let (($generated@@557 (type $generated@@556)))
($generated@@84 ($generated@@436 $generated@@557) $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@72)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@67) (= (type $generated@@561) $generated@@67)) (and (= ($generated@@75 ($generated@@157 $generated@@560 $generated@@561)) $generated@@62) (= ($generated@@558 ($generated@@157 $generated@@560 $generated@@561)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@560 $generated@@561))
)))
(assert  (and (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@143 (type $generated@@564))))
(= (type ($generated@@562 $generated@@564)) ($generated@@137 $generated@@565)))
 :pattern ( ($generated@@562 $generated@@564))
)) (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@143 (type $generated@@566))))
(= (type ($generated@@563 $generated@@566)) $generated@@567))
 :pattern ( ($generated@@563 $generated@@566))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
 (=> (= (type $generated@@568) ($generated@@137 $generated@@570)) (and (= ($generated@@562 ($generated@@263 $generated@@568 $generated@@569)) $generated@@568) (= ($generated@@563 ($generated@@263 $generated@@568 $generated@@569)) $generated@@569))))
 :pattern ( ($generated@@263 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@142) (= ($generated@@538 ($generated@@299 $generated@@571)) ($generated@@140 $generated@@571)))
 :pattern ( ($generated@@538 ($generated@@299 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@138) ($generated@@235 $generated@@572 ($generated@@78 0))) (and (= ($generated@@299 ($generated@@141 $generated@@2 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@141 ($generated@@79 $generated@@138 $generated@@4) $generated@@572) ($generated@@78 0))))
 :pattern ( ($generated@@235 $generated@@572 ($generated@@78 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@138) (= (type $generated@@574) $generated@@67)) ($generated@@235 $generated@@573 ($generated@@247 $generated@@574))) (and (= ($generated@@299 ($generated@@141 ($generated@@79 $generated@@138 $generated@@4) $generated@@573)) $generated@@573) ($generated@@154 ($generated@@141 ($generated@@79 $generated@@138 $generated@@4) $generated@@573) ($generated@@247 $generated@@574))))
 :pattern ( ($generated@@235 $generated@@573 ($generated@@247 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@138) (= (type $generated@@576) $generated@@67)) ($generated@@235 $generated@@575 ($generated@@252 $generated@@576))) (and (= ($generated@@299 ($generated@@141 ($generated@@79 $generated@@138 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@141 ($generated@@79 $generated@@138 $generated@@4) $generated@@575) ($generated@@252 $generated@@576))))
 :pattern ( ($generated@@235 $generated@@575 ($generated@@252 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@138) (= (type $generated@@578) $generated@@67)) ($generated@@235 $generated@@577 ($generated@@170 $generated@@578))) (and (= ($generated@@299 ($generated@@141 ($generated@@79 $generated@@138 $generated@@2) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@141 ($generated@@79 $generated@@138 $generated@@2) $generated@@577) ($generated@@170 $generated@@578))))
 :pattern ( ($generated@@235 $generated@@577 ($generated@@170 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@138) (= (type $generated@@580) $generated@@67)) ($generated@@235 $generated@@579 ($generated@@264 $generated@@580))) (and (= ($generated@@299 ($generated@@141 ($generated@@137 $generated@@138) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@141 ($generated@@137 $generated@@138) $generated@@579) ($generated@@264 $generated@@580))))
 :pattern ( ($generated@@235 $generated@@579 ($generated@@264 $generated@@580)))
)))
(assert (= ($generated@@75 $generated@@232) $generated@@64))
(assert (= ($generated@@558 $generated@@232) $generated@@66))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@79 $generated@@138 $generated@@2)) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@581 ($generated@@170 $generated@@582) $generated@@583) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@138) (< 0 ($generated ($generated@@84 $generated@@581 $generated@@584)))) ($generated@@273 $generated@@584 $generated@@582 $generated@@583))
 :pattern ( ($generated@@84 $generated@@581 $generated@@584))
))))
 :pattern ( ($generated@@77 $generated@@581 ($generated@@170 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) ($generated@@137 $generated@@138)) (= ($generated@@154 ($generated@@136 $generated@@585) $generated@@232) ($generated@@154 $generated@@585 ($generated@@264 $generated@@46))))
 :pattern ( ($generated@@154 ($generated@@136 $generated@@585) $generated@@232))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@142) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@272 $generated@@587) (and ($generated@@231 $generated@@586) ($generated@@77 $generated@@586 $generated@@232 $generated@@587)))) ($generated@@77 ($generated@@525 $generated@@586) ($generated@@264 $generated@@46) $generated@@587))
 :pattern ( ($generated@@77 ($generated@@525 $generated@@586) ($generated@@264 $generated@@46) $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@142) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@272 $generated@@590) (and ($generated@@156 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@67) ($generated@@77 $generated@@588 ($generated@@157 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@77 $generated@@588 ($generated@@157 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@273 ($generated@@164 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@273 ($generated@@164 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@142) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@272 $generated@@594) (and ($generated@@156 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@67) ($generated@@77 $generated@@592 ($generated@@157 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@77 $generated@@592 ($generated@@157 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@273 ($generated@@165 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@273 ($generated@@165 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@138) (= (type $generated@@597) $generated@@138)) (= ($generated@@234 ($generated@@259 $generated@@596) ($generated@@259 $generated@@597)) ($generated@@259 ($generated@@234 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@234 ($generated@@259 $generated@@596) ($generated@@259 $generated@@597)))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@257 $generated@@598))) ($generated@@259 ($generated@@299 ($generated@@8 $generated@@598))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@257 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) ($generated@@137 $generated@@138)) (= ($generated@@136 ($generated@@259 $generated@@599)) ($generated@@259 ($generated@@136 $generated@@599))))
 :pattern ( ($generated@@136 ($generated@@259 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@299 ($generated@@259 $generated@@600)) ($generated@@259 ($generated@@299 $generated@@600)))
 :pattern ( ($generated@@299 ($generated@@259 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@143 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@137 $generated@@602)) (= ($generated@@139 $generated@@601) 0)) (= $generated@@601 ($generated@@291 $generated@@602))))
 :pattern ( ($generated@@139 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@79 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@304 ($generated@@85 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@304 $generated@@603) ($generated ($generated@@84 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@304 ($generated@@85 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@2)) ($generated@@77 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@610) $generated@@3)) ($generated@@77 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@77 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@612) $generated@@4)) ($generated@@77 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@77 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@614) $generated@@460)) ($generated@@77 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@77 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@616) $generated@@138)) ($generated@@77 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@77 $generated@@616 $generated@@48 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@137 $generated@@138)) (= (type $generated@@618) $generated@@67)) (= ($generated@@154 $generated@@617 ($generated@@264 $generated@@618)) (forall (($generated@@619 Int) ) (!  (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@139 $generated@@617))) ($generated@@235 ($generated@@135 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@135 $generated@@617 $generated@@619))
))))
 :pattern ( ($generated@@154 $generated@@617 ($generated@@264 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 Int) ) (!  (=> (= (type $generated@@620) ($generated@@137 $generated@@138)) (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@139 $generated@@620))) (< ($generated@@140 ($generated@@141 $generated@@142 ($generated@@135 $generated@@620 $generated@@621))) ($generated@@554 $generated@@620))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@142 ($generated@@135 $generated@@620 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@623) $generated@@67)) (= (type $generated@@624) $generated@@67)) ($generated@@154 $generated@@622 ($generated@@417 $generated@@623 $generated@@624))) (and (and ($generated@@154 ($generated@@310 $generated@@622) ($generated@@247 $generated@@623)) ($generated@@154 ($generated@@358 $generated@@622) ($generated@@247 $generated@@624))) ($generated@@154 ($generated@@389 $generated@@622) ($generated@@247 ($generated@@157 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@154 $generated@@622 ($generated@@417 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) $generated@@67)) ($generated@@154 $generated@@625 ($generated@@425 $generated@@626 $generated@@627))) (and (and ($generated@@154 ($generated@@328 $generated@@625) ($generated@@252 $generated@@626)) ($generated@@154 ($generated@@369 $generated@@625) ($generated@@252 $generated@@627))) ($generated@@154 ($generated@@397 $generated@@625) ($generated@@252 ($generated@@157 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@154 $generated@@625 ($generated@@425 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@2) ($generated@@154 $generated@@628 $generated@@46))
 :pattern ( ($generated@@154 $generated@@628 $generated@@46))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@3) ($generated@@154 $generated@@629 $generated@@47))
 :pattern ( ($generated@@154 $generated@@629 $generated@@47))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@4) ($generated@@154 $generated@@630 $generated@@44))
 :pattern ( ($generated@@154 $generated@@630 $generated@@44))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@460) ($generated@@154 $generated@@631 $generated@@45))
 :pattern ( ($generated@@154 $generated@@631 $generated@@45))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@138) ($generated@@154 $generated@@632 $generated@@48))
 :pattern ( ($generated@@154 $generated@@632 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () Int)
(assert  (and (and (= (type $generated@@633) ($generated@@177 $generated@@80 $generated@@4)) (= (type $generated@@634) $generated@@80)) (= (type $generated@@635) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@638  (=> (and (= $generated@@633 ($generated@@176 $generated@@634 $generated@@635 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@244 ($generated@@136 ($generated@@259 ($generated@@263 ($generated@@263 ($generated@@291 $generated@@138) ($generated@@299 ($generated@@8 ($generated@@257 10)))) ($generated@@299 ($generated@@8 ($generated@@257 20)))))) ($generated@@136 ($generated@@259 ($generated@@263 ($generated@@263 ($generated@@291 $generated@@138) ($generated@@299 ($generated@@8 ($generated@@257 10)))) ($generated@@299 ($generated@@8 ($generated@@257 20))))))))))
(let (($generated@@639  (=> (and (and ($generated@@272 $generated@@635) ($generated@@636 $generated@@635)) (and (= 1 $generated@@637) (= (ControlFlow 0 3) 2))) $generated@@638)))
$generated@@639)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
