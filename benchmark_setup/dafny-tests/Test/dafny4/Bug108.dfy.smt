(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@518 (T@U T@U) T@U)
(declare-fun $generated@@524 (T@U T@U T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@137 $generated@@138)) 14)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@134 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@132 $generated@@143)) ($generated@@76 $generated@@144 $generated@@4)))
 :pattern ( ($generated@@132 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (let (($generated@@148 ($generated@@80 (type $generated@@146))))
(let (($generated@@149 ($generated@@79 (type $generated@@145))))
(= (type ($generated@@133 $generated@@145 $generated@@146 $generated@@147)) ($generated@@134 $generated@@149 $generated@@148))))
 :pattern ( ($generated@@133 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@80 (type $generated@@151))))
(let (($generated@@154 ($generated@@79 (type $generated@@150))))
 (=> (and (and (= (type $generated@@150) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@151) ($generated@@76 $generated@@154 $generated@@153))) (= (type $generated@@152) $generated@@64)) (= ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)) $generated@@150))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@136 (type $generated@@156))))
(let (($generated@@158 ($generated@@135 (type $generated@@156))))
(= (type ($generated@@155 $generated@@156)) ($generated@@76 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@80 (type $generated@@160))))
(let (($generated@@163 ($generated@@79 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@76 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@64)) (= ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))))
 :pattern ( ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@164 $generated@@165 ($generated@@75 0)))
 :pattern ( ($generated@@164 $generated@@165 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@64) (= (type $generated@@172) $generated@@64)) (= (type $generated@@173) $generated@@168)) ($generated@@164 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@164 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 16) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@64)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@64)) ($generated@@164 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@164 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 17)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@77 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@67 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@77) (= (type $generated@@237) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@238) ($generated@@66 $generated@@4))) (= (type $generated@@240) $generated@@77)) (= (type $generated@@241) ($generated@@66 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@168)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@64) (= (type $generated@@248) $generated@@64)) (= (type $generated@@249) $generated@@177)) (= (type $generated@@250) $generated@@177)) (= ($generated@@164 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@164 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@168) (= (type $generated@@252) $generated@@168)) (= ($generated@@174 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@174 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@256) $generated@@64)) (= ($generated@@164 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@177) ($generated@@0 ($generated@@81 $generated@@255 $generated@@257))) ($generated@@244 $generated@@257 $generated@@256))
 :pattern ( ($generated@@81 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@164 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@64)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@261) $generated@@64)) (= ($generated@@164 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@177) ($generated@@0 ($generated@@81 $generated@@260 $generated@@262))) ($generated@@244 $generated@@262 $generated@@261))
 :pattern ( ($generated@@81 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@164 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) $generated@@64)) (= (type $generated@@273) $generated@@177)) (= (type $generated@@274) $generated@@177)) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@269 $generated@@275)) (= ($generated@@74 ($generated@@243 $generated@@273 $generated@@274) ($generated@@167 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@74 ($generated@@243 $generated@@273 $generated@@274) ($generated@@167 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@168) (= ($generated@@166 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) ($generated@@76 $generated@@177 $generated@@177))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@76 $generated@@177 $generated@@177)) (= (type $generated@@282) $generated@@177)) (= ($generated@@81 ($generated@@279 $generated@@281) $generated@@282) ($generated@@81 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@281) $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@168) ($generated@@166 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@177) (= (type $generated@@285) $generated@@177)) (= $generated@@283 ($generated@@243 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@166 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 18)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@177)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@74 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@76 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@79 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@76 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@81 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@305 $generated@@306 $generated@@307)) ($generated@@134 $generated@@306 $generated@@307))
 :pattern ( ($generated@@305 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@305 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@81 ($generated@@132 ($generated@@305 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@79 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@76 $generated@@330 $generated@@2)) (= ($generated@@183 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@81 $generated@@329 $generated@@331))) (<= ($generated ($generated@@81 $generated@@329 $generated@@331)) ($generated@@299 $generated@@329))))
 :pattern ( ($generated@@81 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@183 $generated@@329))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@136 (type $generated@@332))))
(let (($generated@@334 ($generated@@135 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@134 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@305 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@132 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@136 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@76 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@136 (type $generated@@339))))
(let (($generated@@341 ($generated@@135 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@134 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@305 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@315 (type $generated@@343))))
(let (($generated@@345 ($generated@@314 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@313 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@312 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@311 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@315 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@315 (type $generated@@350))))
(let (($generated@@352 ($generated@@314 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@313 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@312 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@355) $generated@@64)) (= ($generated@@164 $generated@@354 ($generated@@182 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@177) (< 0 ($generated ($generated@@81 $generated@@354 $generated@@356)))) ($generated@@244 $generated@@356 $generated@@355))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@164 $generated@@354 ($generated@@182 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@253 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@177) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@270 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@253 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@258 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@177) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@270 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@258 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@81 ($generated@@300 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@81 ($generated@@300 $generated@@366) $generated@@365)))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@T) ($generated@@371 T@U) ) (! (= (type ($generated@@368 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@368 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@373) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@372) ($generated@@175 ($generated@@368 $generated@@168 $generated@@373)))) (= ($generated@@81 ($generated@@155 $generated@@372) ($generated@@175 ($generated@@368 $generated@@168 $generated@@373))) ($generated@@176 ($generated@@368 $generated@@168 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@315 (type $generated@@377))))
(let (($generated@@379 ($generated@@314 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@313 $generated@@177 $generated@@177)) (= (type $generated@@381) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@380) ($generated@@175 ($generated@@368 $generated@@168 $generated@@381)))) (= ($generated@@81 ($generated@@375 $generated@@380) ($generated@@175 ($generated@@368 $generated@@168 $generated@@381))) ($generated@@176 ($generated@@368 $generated@@168 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@135 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@134 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@81 ($generated@@336 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@81 ($generated@@155 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@382) $generated@@386))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@314 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@313 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@395) $generated@@399))) (and ($generated@@270 ($generated@@81 ($generated@@155 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@270 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@313 $generated@@177 $generated@@177)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@403) $generated@@407))) (and ($generated@@270 ($generated@@81 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@270 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@315 (type $generated@@410))))
(let (($generated@@412 ($generated@@314 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@313 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@312 $generated@@412 $generated@@411)) (= ($generated@@311 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@311 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@315 (type $generated@@413))))
(let (($generated@@415 ($generated@@314 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@313 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@312 $generated@@415 $generated@@414)) (= ($generated@@347 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@347 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@315 (type $generated@@416))))
(let (($generated@@418 ($generated@@314 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@313 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@312 $generated@@418 $generated@@417)) (= ($generated@@374 $generated@@416) ($generated@@408 $generated@@177))))))
 :pattern ( ($generated@@374 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@136 (type $generated@@419))))
(let (($generated@@421 ($generated@@135 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@134 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@305 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@177) (= (type $generated@@423) $generated@@177)) ($generated@@0 ($generated@@81 ($generated@@367 $generated@@419) ($generated@@294 ($generated@@243 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@367 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@315 (type $generated@@424))))
(let (($generated@@426 ($generated@@314 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@313 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@312 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@177) (= (type $generated@@428) $generated@@177)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@424) ($generated@@294 ($generated@@243 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@374 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@177) ($generated@@244 $generated@@429 $generated@@46)) (and (= ($generated@@294 ($generated@@368 $generated@@2 $generated@@429)) $generated@@429) ($generated@@164 ($generated@@368 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@177) ($generated@@244 $generated@@430 $generated@@47)) (and (= ($generated@@294 ($generated@@368 $generated@@3 $generated@@430)) $generated@@430) ($generated@@164 ($generated@@368 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@177) ($generated@@244 $generated@@431 $generated@@44)) (and (= ($generated@@294 ($generated@@368 $generated@@4 $generated@@431)) $generated@@431) ($generated@@164 ($generated@@368 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@177) ($generated@@244 $generated@@433 $generated@@45)) (and (= ($generated@@294 ($generated@@368 $generated@@432 $generated@@433)) $generated@@433) ($generated@@164 ($generated@@368 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@64) (= ($generated@@244 ($generated@@294 $generated@@434) $generated@@435) ($generated@@164 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@244 ($generated@@294 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@79 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@76 $generated@@437 $generated@@2)) (<= 0 ($generated@@299 $generated@@436))))
 :pattern ( ($generated@@299 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@289 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@288 $generated@@439)) (<= 0 ($generated@@287 $generated@@438))))
 :pattern ( ($generated@@287 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@392 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@392 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@392 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@448 $generated@@449)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@400 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@400 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@400 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@458 $generated@@459)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@177) (= (type $generated@@461) $generated@@177)) (= ($generated@@276 ($generated@@243 $generated@@460 $generated@@461)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@167 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@167 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@167 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@167 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@177) (= (type $generated@@471) $generated@@177)) (= ($generated@@175 ($generated@@243 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@243 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@177) (= (type $generated@@473) $generated@@177)) (= ($generated@@176 ($generated@@243 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@243 $generated@@472 $generated@@473))
)))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@476))
)) (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@289 (type $generated@@477))))
(= (type ($generated@@475 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@475 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@288 $generated@@177)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@474 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@287 $generated@@480))) ($generated@@270 ($generated@@475 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@475 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@474 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@75 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@75 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@253 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@253 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@258 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@258 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@258 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@182 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@182 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@182 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@474 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@474 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@474 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@474 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated@@368 $generated@@503 ($generated@@294 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@294 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@164 $generated@@504 ($generated@@392 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@504) $generated@@507))) (and ($generated@@244 ($generated@@81 ($generated@@155 $generated@@504) $generated@@507) $generated@@506) ($generated@@244 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@164 $generated@@504 ($generated@@392 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@313 $generated@@177 $generated@@177)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@164 $generated@@508 ($generated@@400 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@508) $generated@@511))) (and ($generated@@244 ($generated@@81 ($generated@@375 $generated@@508) $generated@@511) $generated@@510) ($generated@@244 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@508) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@164 $generated@@508 ($generated@@400 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@177) (= (type $generated@@515) $generated@@177)) (< ($generated@@512 $generated@@514) ($generated@@513 ($generated@@243 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@243 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@177) (= (type $generated@@517) $generated@@177)) (< ($generated@@512 $generated@@517) ($generated@@513 ($generated@@243 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@243 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@519 $generated@@520)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@518 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@64) (= (type $generated@@522) ($generated@@76 $generated@@177 $generated@@4))) (= (type $generated@@523) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@518 $generated@@521 $generated@@522) $generated@@523))  (and ($generated@@244 $generated@@523 $generated@@521) ($generated@@0 ($generated@@81 $generated@@522 $generated@@523)))))
 :pattern ( ($generated@@81 ($generated@@518 $generated@@521 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(let (($generated@@529 (type $generated@@526)))
(= (type ($generated@@524 $generated@@525 $generated@@526 $generated@@527)) ($generated@@134 $generated@@529 $generated@@528))))
 :pattern ( ($generated@@524 $generated@@525 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(let (($generated@@535 (type $generated@@531)))
 (=> (and (= (type $generated@@530) ($generated@@134 $generated@@535 $generated@@534)) (= (type $generated@@532) $generated@@535)) (and (=> (= $generated@@532 $generated@@531) (and ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@524 $generated@@530 $generated@@531 $generated@@533)) $generated@@532)) (= ($generated@@81 ($generated@@155 ($generated@@524 $generated@@530 $generated@@531 $generated@@533)) $generated@@532) $generated@@533))) (=> (not (= $generated@@532 $generated@@531)) (and (= ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@524 $generated@@530 $generated@@531 $generated@@533)) $generated@@532)) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@530) $generated@@532))) (= ($generated@@81 ($generated@@155 ($generated@@524 $generated@@530 $generated@@531 $generated@@533)) $generated@@532) ($generated@@81 ($generated@@155 $generated@@530) $generated@@532))))))))
 :pattern ( ($generated@@81 ($generated@@132 ($generated@@524 $generated@@530 $generated@@531 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@81 ($generated@@155 ($generated@@524 $generated@@530 $generated@@531 $generated@@533)) $generated@@532))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@177) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) ($generated@@244 $generated@@536 ($generated@@392 $generated@@537 $generated@@538))) (and (= ($generated@@294 ($generated@@368 ($generated@@134 $generated@@177 $generated@@177) $generated@@536)) $generated@@536) ($generated@@164 ($generated@@368 ($generated@@134 $generated@@177 $generated@@177) $generated@@536) ($generated@@392 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@244 $generated@@536 ($generated@@392 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@177) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) ($generated@@244 $generated@@539 ($generated@@400 $generated@@540 $generated@@541))) (and (= ($generated@@294 ($generated@@368 ($generated@@313 $generated@@177 $generated@@177) $generated@@539)) $generated@@539) ($generated@@164 ($generated@@368 ($generated@@313 $generated@@177 $generated@@177) $generated@@539) ($generated@@400 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@244 $generated@@539 ($generated@@400 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@177)) ($generated@@244 $generated@@544 ($generated@@167 $generated@@542 $generated@@543))) (and (= ($generated@@294 ($generated@@368 $generated@@168 $generated@@544)) $generated@@544) ($generated@@164 ($generated@@368 $generated@@168 $generated@@544) ($generated@@167 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@244 $generated@@544 ($generated@@167 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@81 ($generated@@408 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@81 ($generated@@408 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@547) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@548) ($generated@@76 $generated@@177 $generated@@177))) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@64)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@177) ($generated@@0 ($generated@@81 $generated@@547 $generated@@551))) (and ($generated@@244 $generated@@551 $generated@@549) ($generated@@244 ($generated@@81 $generated@@548 $generated@@551) $generated@@550)))
 :no-pattern (type $generated@@551)
 :no-pattern ($generated $generated@@551)
 :no-pattern ($generated@@0 $generated@@551)
))) ($generated@@164 ($generated@@133 $generated@@547 $generated@@548 ($generated@@392 $generated@@549 $generated@@550)) ($generated@@392 $generated@@549 $generated@@550)))
 :pattern ( ($generated@@133 $generated@@547 $generated@@548 ($generated@@392 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@69)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@64) (= (type $generated@@555) $generated@@64)) (and (= ($generated@@72 ($generated@@167 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@167 $generated@@554 $generated@@555)) $generated@@63)))
 :pattern ( ($generated@@167 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@168) (= ($generated@@512 ($generated@@294 $generated@@556)) ($generated@@513 $generated@@556)))
 :pattern ( ($generated@@512 ($generated@@294 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@177) ($generated@@244 $generated@@557 ($generated@@75 0))) (and (= ($generated@@294 ($generated@@368 $generated@@2 $generated@@557)) $generated@@557) ($generated@@164 ($generated@@368 ($generated@@76 $generated@@177 $generated@@4) $generated@@557) ($generated@@75 0))))
 :pattern ( ($generated@@244 $generated@@557 ($generated@@75 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@177) (= (type $generated@@559) $generated@@64)) ($generated@@244 $generated@@558 ($generated@@253 $generated@@559))) (and (= ($generated@@294 ($generated@@368 ($generated@@76 $generated@@177 $generated@@4) $generated@@558)) $generated@@558) ($generated@@164 ($generated@@368 ($generated@@76 $generated@@177 $generated@@4) $generated@@558) ($generated@@253 $generated@@559))))
 :pattern ( ($generated@@244 $generated@@558 ($generated@@253 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@177) (= (type $generated@@561) $generated@@64)) ($generated@@244 $generated@@560 ($generated@@258 $generated@@561))) (and (= ($generated@@294 ($generated@@368 ($generated@@76 $generated@@177 $generated@@4) $generated@@560)) $generated@@560) ($generated@@164 ($generated@@368 ($generated@@76 $generated@@177 $generated@@4) $generated@@560) ($generated@@258 $generated@@561))))
 :pattern ( ($generated@@244 $generated@@560 ($generated@@258 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@177) (= (type $generated@@563) $generated@@64)) ($generated@@244 $generated@@562 ($generated@@182 $generated@@563))) (and (= ($generated@@294 ($generated@@368 ($generated@@76 $generated@@177 $generated@@2) $generated@@562)) $generated@@562) ($generated@@164 ($generated@@368 ($generated@@76 $generated@@177 $generated@@2) $generated@@562) ($generated@@182 $generated@@563))))
 :pattern ( ($generated@@244 $generated@@562 ($generated@@182 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@177) (= (type $generated@@565) $generated@@64)) ($generated@@244 $generated@@564 ($generated@@474 $generated@@565))) (and (= ($generated@@294 ($generated@@368 ($generated@@288 $generated@@177) $generated@@564)) $generated@@564) ($generated@@164 ($generated@@368 ($generated@@288 $generated@@177) $generated@@564) ($generated@@474 $generated@@565))))
 :pattern ( ($generated@@244 $generated@@564 ($generated@@474 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@566 ($generated@@182 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@177) (< 0 ($generated ($generated@@81 $generated@@566 $generated@@569)))) ($generated@@270 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@81 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@74 $generated@@566 ($generated@@182 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@168) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@572) (and ($generated@@166 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@64) ($generated@@74 $generated@@570 ($generated@@167 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@74 $generated@@570 ($generated@@167 $generated@@571 $generated@@573) $generated@@572))
))))) ($generated@@270 ($generated@@175 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@270 ($generated@@175 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@168) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@576) (and ($generated@@166 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@64) ($generated@@74 $generated@@574 ($generated@@167 $generated@@577 $generated@@575) $generated@@576))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@167 $generated@@577 $generated@@575) $generated@@576))
))))) ($generated@@270 ($generated@@176 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@270 ($generated@@176 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@177) (= (type $generated@@579) $generated@@177)) (= ($generated@@243 ($generated@@265 $generated@@578) ($generated@@265 $generated@@579)) ($generated@@265 ($generated@@243 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@243 ($generated@@265 $generated@@578) ($generated@@265 $generated@@579)))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@263 $generated@@580))) ($generated@@265 ($generated@@294 ($generated@@8 $generated@@580))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@263 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@294 ($generated@@265 $generated@@581)) ($generated@@265 ($generated@@294 $generated@@581)))
 :pattern ( ($generated@@294 ($generated@@265 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@289 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@288 $generated@@583)) (= ($generated@@287 $generated@@582) 0)) (= $generated@@582 ($generated@@286 $generated@@583))))
 :pattern ( ($generated@@287 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@76 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@299 ($generated@@82 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@299 $generated@@584) ($generated ($generated@@81 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@299 ($generated@@82 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@2)) ($generated@@74 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@3)) ($generated@@74 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@4)) ($generated@@74 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@432)) ($generated@@74 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@177)) ($generated@@74 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@288 $generated@@177)) (= (type $generated@@599) $generated@@64)) (= ($generated@@164 $generated@@598 ($generated@@474 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@287 $generated@@598))) ($generated@@244 ($generated@@475 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@475 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@164 $generated@@598 ($generated@@474 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@288 $generated@@177)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@287 $generated@@602))) (< ($generated@@513 ($generated@@368 $generated@@168 ($generated@@475 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@513 ($generated@@368 $generated@@168 ($generated@@475 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) $generated@@64)) ($generated@@164 $generated@@604 ($generated@@392 $generated@@605 $generated@@606))) (and (and ($generated@@164 ($generated@@132 $generated@@604) ($generated@@253 $generated@@605)) ($generated@@164 ($generated@@336 $generated@@604) ($generated@@253 $generated@@606))) ($generated@@164 ($generated@@367 $generated@@604) ($generated@@253 ($generated@@167 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@164 $generated@@604 ($generated@@392 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@313 $generated@@177 $generated@@177)) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) $generated@@64)) ($generated@@164 $generated@@607 ($generated@@400 $generated@@608 $generated@@609))) (and (and ($generated@@164 ($generated@@311 $generated@@607) ($generated@@258 $generated@@608)) ($generated@@164 ($generated@@347 $generated@@607) ($generated@@258 $generated@@609))) ($generated@@164 ($generated@@374 $generated@@607) ($generated@@258 ($generated@@167 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@164 $generated@@607 ($generated@@400 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@164 $generated@@610 $generated@@46))
 :pattern ( ($generated@@164 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@164 $generated@@611 $generated@@47))
 :pattern ( ($generated@@164 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@164 $generated@@612 $generated@@44))
 :pattern ( ($generated@@164 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@432) ($generated@@164 $generated@@613 $generated@@45))
 :pattern ( ($generated@@164 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@177) ($generated@@164 $generated@@614 $generated@@48))
 :pattern ( ($generated@@164 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Int)
(assert  (and (and (and (and (and (= (type $generated@@615) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@618) ($generated@@189 $generated@@77 $generated@@4))) (= (type $generated@@619) $generated@@77)) (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@622) ($generated@@134 $generated@@177 $generated@@177))) (= (type $generated@@623) ($generated@@134 $generated@@177 $generated@@177))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@625 true))
(let (($generated@@626  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@132 $generated@@615) ($generated@@294 ($generated@@8 $generated@@616))))) (= (ControlFlow 0 6) 3)) $generated@@625)))
(let (($generated@@627  (=> ($generated@@0 ($generated@@81 ($generated@@132 $generated@@615) ($generated@@294 ($generated@@8 $generated@@616)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@615) ($generated@@294 ($generated@@8 $generated@@616))))) (=> ($generated@@0 ($generated@@81 ($generated@@132 $generated@@615) ($generated@@294 ($generated@@8 $generated@@616)))) (=> (= (ControlFlow 0 4) 3) $generated@@625))))))
(let (($generated@@628  (=> (not ($generated@@0 ($generated@@81 ($generated@@132 $generated@@615) ($generated@@294 ($generated@@8 $generated@@617))))) (and (=> (= (ControlFlow 0 8) 4) $generated@@627) (=> (= (ControlFlow 0 8) 6) $generated@@626)))))
(let (($generated@@629  (=> ($generated@@0 ($generated@@81 ($generated@@132 $generated@@615) ($generated@@294 ($generated@@8 $generated@@617)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@627) (=> (= (ControlFlow 0 7) 6) $generated@@626)))))
(let (($generated@@630  (and (=> (= (ControlFlow 0 9) 7) $generated@@629) (=> (= (ControlFlow 0 9) 8) $generated@@628))))
(let (($generated@@631 true))
(let (($generated@@632  (and (=> (= (ControlFlow 0 10) 9) $generated@@630) (=> (= (ControlFlow 0 10) 2) $generated@@631))))
(let (($generated@@633 true))
(let (($generated@@634  (=> (and (= $generated@@618 ($generated@@188 $generated@@619 $generated@@620 $generated@@60 false)) (= $generated@@615 ($generated@@265 ($generated@@524 ($generated@@305 $generated@@177 $generated@@177) ($generated@@294 ($generated@@8 ($generated@@263 0))) ($generated@@294 ($generated@@8 ($generated@@263 1))))))) (and (=> (= (ControlFlow 0 11) 10) $generated@@632) (=> (= (ControlFlow 0 11) 1) $generated@@633)))))
(let (($generated@@635  (=> (and ($generated@@269 $generated@@620) ($generated@@621 $generated@@620)) (=> (and (and ($generated@@164 $generated@@622 ($generated@@392 $generated@@46 $generated@@46)) ($generated@@74 $generated@@622 ($generated@@392 $generated@@46 $generated@@46) $generated@@620)) true) (=> (and (and (and ($generated@@164 $generated@@623 ($generated@@392 $generated@@46 $generated@@46)) ($generated@@74 $generated@@623 ($generated@@392 $generated@@46 $generated@@46) $generated@@620)) true) (and (= 1 $generated@@624) (= (ControlFlow 0 12) 11))) $generated@@634)))))
$generated@@635))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
