(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@276 (T@T T@T) T@U)
(declare-fun $generated@@277 (T@T T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@314 (T@T T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@379 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@T) T@U)
(declare-fun $generated@@419 () T@T)
(declare-fun $generated@@427 () Int)
(declare-fun $generated@@428 (Int Int) Int)
(declare-fun $generated@@429 (Int Int) Bool)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@467 (T@U Int) T@U)
(declare-fun $generated@@476 (T@U) Int)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (Int Int) Int)
(declare-fun $generated@@573 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@2) (= ($generated@@137 $generated@@263 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@263))))
 :pattern ( ($generated@@137 $generated@@263 $generated@@134))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@150)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@66) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268) ($generated@@76 $generated@@266 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@T) ) (! (= (type ($generated@@270 $generated@@271)) ($generated@@78 $generated@@271 $generated@@2))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@81 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@78 $generated@@273 $generated@@2)) (and (= (= ($generated@@269 $generated@@272) 0) (= $generated@@272 ($generated@@270 $generated@@273))) (=> (not (= ($generated@@269 $generated@@272) 0)) (exists (($generated@@274 T@U) ) (!  (and (= (type $generated@@274) $generated@@273) (< 0 ($generated ($generated@@83 $generated@@272 $generated@@274))))
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
))))))
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert  (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@280 $generated@@281)) 18)) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@282 $generated@@283)) $generated@@282)
 :pattern ( ($generated@@277 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@277 $generated@@284 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@277 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@278 (type $generated@@286))))
(= (type ($generated@@275 $generated@@286)) ($generated@@78 $generated@@287 $generated@@4)))
 :pattern ( ($generated@@275 $generated@@286))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= (type ($generated@@276 $generated@@288 $generated@@289)) ($generated@@277 $generated@@288 $generated@@289))
 :pattern ( ($generated@@276 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@T) ) (! (let (($generated@@292 (type $generated@@290)))
 (not ($generated@@0 ($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290))))
 :pattern ( (let (($generated@@292 (type $generated@@290)))
($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290)))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 19)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@78 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@81 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@78 $generated@@312 $generated@@2)) (= ($generated@@156 $generated@@311) (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@312) (and (<= 0 ($generated ($generated@@83 $generated@@311 $generated@@313))) (<= ($generated ($generated@@83 $generated@@311 $generated@@313)) ($generated@@269 $generated@@311))))
 :pattern ( ($generated@@83 $generated@@311 $generated@@313))
)))))
 :pattern ( ($generated@@156 $generated@@311))
)))
(assert (forall (($generated@@315 T@T) ($generated@@316 T@U) ) (! (= (type ($generated@@314 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@314 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@150) ($generated@@217 $generated@@317 $generated@@134)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@317)) $generated@@317) ($generated@@137 ($generated@@314 $generated@@2 $generated@@317) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@317 $generated@@134))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@279 (type $generated@@318))))
(let (($generated@@320 ($generated@@278 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@277 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@276 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@275 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@279 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@78 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@279 (type $generated@@325))))
(let (($generated@@327 ($generated@@278 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@277 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@276 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@297 (type $generated@@329))))
(let (($generated@@331 ($generated@@296 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@295 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@294 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@293 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@297 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@341) $generated@@66)) (= ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@340 $generated@@342)))) ($generated@@217 $generated@@342 $generated@@341))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
))))
 :pattern ( ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@344) $generated@@66)) (= (type $generated@@345) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@150) ($generated@@0 ($generated@@83 $generated@@343 $generated@@346))) ($generated@@243 $generated@@346 $generated@@344 $generated@@345))
 :pattern ( ($generated@@83 $generated@@343 $generated@@346))
))))
 :pattern ( ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@348) $generated@@66)) (= (type $generated@@349) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@150) ($generated@@0 ($generated@@83 $generated@@347 $generated@@350))) ($generated@@243 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
(= ($generated ($generated@@83 ($generated@@270 $generated@@352) $generated@@351)) 0))
 :pattern ( (let (($generated@@352 (type $generated@@351)))
($generated@@83 ($generated@@270 $generated@@352) $generated@@351)))
)))
(assert  (and (forall (($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@355)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@353 $generated@@355))
)) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@279 (type $generated@@356))))
(let (($generated@@358 ($generated@@278 (type $generated@@356))))
(= (type ($generated@@354 $generated@@356)) ($generated@@78 $generated@@358 $generated@@357))))
 :pattern ( ($generated@@354 $generated@@356))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@360) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@353 $generated@@359) $generated@@360))  (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@359) ($generated@@148 ($generated@@314 $generated@@141 $generated@@360)))) (= ($generated@@83 ($generated@@354 $generated@@359) ($generated@@148 ($generated@@314 $generated@@141 $generated@@360))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@360))))))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@359) $generated@@360))
)))
(assert  (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@363)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@361 $generated@@363))
)) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@297 (type $generated@@364))))
(let (($generated@@366 ($generated@@296 (type $generated@@364))))
(= (type ($generated@@362 $generated@@364)) ($generated@@78 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@362 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@368) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@361 $generated@@367) $generated@@368))  (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@367) ($generated@@148 ($generated@@314 $generated@@141 $generated@@368)))) (= ($generated@@83 ($generated@@362 $generated@@367) ($generated@@148 ($generated@@314 $generated@@141 $generated@@368))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@368))))))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@278 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@277 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@83 ($generated@@322 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@83 ($generated@@354 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@369) $generated@@373))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@296 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@295 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@83 ($generated@@362 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@374) $generated@@378))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@380 $generated@@381)) $generated@@66)
 :pattern ( ($generated@@379 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (and (= (type $generated@@382) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@383) $generated@@66)) (= (type $generated@@384) $generated@@66)) (= (type $generated@@385) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@382 ($generated@@379 $generated@@383 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@382) $generated@@386))) (and ($generated@@243 ($generated@@83 ($generated@@354 $generated@@382) $generated@@386) $generated@@384 $generated@@385) ($generated@@243 $generated@@386 $generated@@383 $generated@@385)))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@382) $generated@@386))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@382) $generated@@386))
))))
 :pattern ( ($generated@@76 $generated@@382 ($generated@@379 $generated@@383 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@66)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@391) $generated@@66)) (= (type $generated@@392) $generated@@66)) (= (type $generated@@393) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@390) $generated@@394))) (and ($generated@@243 ($generated@@83 ($generated@@362 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@243 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@390) $generated@@394))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@76 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@T) ) (! (= (type ($generated@@395 $generated@@396)) ($generated@@78 $generated@@396 $generated@@4))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@297 (type $generated@@397))))
(let (($generated@@399 ($generated@@296 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@295 $generated@@399 $generated@@398)) (= (= $generated@@397 ($generated@@294 $generated@@399 $generated@@398)) (= ($generated@@293 $generated@@397) ($generated@@395 $generated@@399))))))
 :pattern ( ($generated@@293 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@297 (type $generated@@400))))
(let (($generated@@402 ($generated@@296 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@295 $generated@@402 $generated@@401)) (= (= $generated@@400 ($generated@@294 $generated@@402 $generated@@401)) (= ($generated@@333 $generated@@400) ($generated@@395 $generated@@401))))))
 :pattern ( ($generated@@333 $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@297 (type $generated@@403))))
(let (($generated@@405 ($generated@@296 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@295 $generated@@405 $generated@@404)) (= (= $generated@@403 ($generated@@294 $generated@@405 $generated@@404)) (= ($generated@@361 $generated@@403) ($generated@@395 $generated@@150))))))
 :pattern ( ($generated@@361 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@279 (type $generated@@406))))
(let (($generated@@408 ($generated@@278 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@277 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@276 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@150) (= (type $generated@@410) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@353 $generated@@406) ($generated@@264 ($generated@@216 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@353 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@297 (type $generated@@411))))
(let (($generated@@413 ($generated@@296 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@295 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@294 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (and (and (= (type $generated@@414) $generated@@150) (= (type $generated@@415) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@361 $generated@@411) ($generated@@264 ($generated@@216 $generated@@414 $generated@@415)))))
 :no-pattern (type $generated@@414)
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@361 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@150) ($generated@@217 $generated@@416 $generated@@46)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@416)) $generated@@416) ($generated@@137 ($generated@@314 $generated@@2 $generated@@416) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@416 $generated@@46))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@150) ($generated@@217 $generated@@417 $generated@@47)) (and (= ($generated@@264 ($generated@@314 $generated@@3 $generated@@417)) $generated@@417) ($generated@@137 ($generated@@314 $generated@@3 $generated@@417) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@417 $generated@@47))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@150) ($generated@@217 $generated@@418 $generated@@44)) (and (= ($generated@@264 ($generated@@314 $generated@@4 $generated@@418)) $generated@@418) ($generated@@137 ($generated@@314 $generated@@4 $generated@@418) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@418 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@419) 20))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@150) ($generated@@217 $generated@@420 $generated@@45)) (and (= ($generated@@264 ($generated@@314 $generated@@419 $generated@@420)) $generated@@420) ($generated@@137 ($generated@@314 $generated@@419 $generated@@420) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@420 $generated@@45))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (= (type $generated@@422) $generated@@66) (= ($generated@@217 ($generated@@264 $generated@@421) $generated@@422) ($generated@@137 $generated@@421 $generated@@422)))
 :pattern ( ($generated@@217 ($generated@@264 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@81 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@78 $generated@@424 $generated@@2)) (<= 0 ($generated@@269 $generated@@423))))
 :pattern ( ($generated@@269 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@258 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@257 $generated@@426)) (<= 0 ($generated@@256 $generated@@425))))
 :pattern ( ($generated@@256 $generated@@425))
)))
(assert  (=> (<= 1 $generated@@427) (forall (($generated@@430 Int) ($generated@@431 Int) ) (!  (=> (or ($generated@@429 $generated@@430 $generated@@431) (and (not (= 1 $generated@@427)) (and (<= ($generated@@236 0) $generated@@430) (<= ($generated@@236 0) $generated@@431)))) true)
 :pattern ( ($generated@@428 $generated@@430 $generated@@431))
))))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@66)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@66) (= (type $generated@@435) $generated@@66)) (= ($generated@@432 ($generated@@379 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@379 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@66)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@66) (= (type $generated@@439) $generated@@66)) (= ($generated@@436 ($generated@@379 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@379 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@66) (= (type $generated@@441) $generated@@66)) (= ($generated@@74 ($generated@@379 $generated@@440 $generated@@441)) $generated@@58))
 :pattern ( ($generated@@379 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@387 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@387 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@387 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@387 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@387 $generated@@450 $generated@@451)) $generated@@59))
 :pattern ( ($generated@@387 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@150) (= (type $generated@@453) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@452 $generated@@453)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@66)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@66) (= (type $generated@@457) $generated@@66)) (= ($generated@@454 ($generated@@140 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@140 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@66)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@458 ($generated@@140 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@140 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@150) (= (type $generated@@463) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@216 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@150) (= (type $generated@@465) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@216 $generated@@464 $generated@@465))
)))
(assert  (and (forall (($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@468))
)) (forall (($generated@@469 T@U) ($generated@@470 Int) ) (! (let (($generated@@471 ($generated@@258 (type $generated@@469))))
(= (type ($generated@@467 $generated@@469 $generated@@470)) $generated@@471))
 :pattern ( ($generated@@467 $generated@@469 $generated@@470))
))))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@472) ($generated@@257 $generated@@150)) (= (type $generated@@473) $generated@@66)) (= (type $generated@@474) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@472 ($generated@@466 $generated@@473) $generated@@474) (forall (($generated@@475 Int) ) (!  (=> (and (<= 0 $generated@@475) (< $generated@@475 ($generated@@256 $generated@@472))) ($generated@@243 ($generated@@467 $generated@@472 $generated@@475) $generated@@473 $generated@@474))
 :pattern ( ($generated@@467 $generated@@472 $generated@@475))
))))
 :pattern ( ($generated@@76 $generated@@472 ($generated@@466 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@477 Int) ) (! (= ($generated@@476 ($generated@@77 $generated@@477)) $generated@@477)
 :pattern ( ($generated@@77 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@66) (= ($generated@@478 ($generated@@226 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@226 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@481)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@66) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@485)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@486 ($generated@@155 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@155 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@489)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@490 ($generated@@466 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@466 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@74 ($generated@@466 $generated@@493)) $generated@@57))
 :pattern ( ($generated@@466 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 (type $generated@@494)))
(= ($generated@@314 $generated@@495 ($generated@@264 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@264 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@497) $generated@@66)) (= (type $generated@@498) $generated@@66)) (= ($generated@@137 $generated@@496 ($generated@@379 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@496) $generated@@499))) (and ($generated@@217 ($generated@@83 ($generated@@354 $generated@@496) $generated@@499) $generated@@498) ($generated@@217 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@496) $generated@@499))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@137 $generated@@496 ($generated@@379 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@501) $generated@@66)) (= (type $generated@@502) $generated@@66)) (= ($generated@@137 $generated@@500 ($generated@@387 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@500) $generated@@503))) (and ($generated@@217 ($generated@@83 ($generated@@362 $generated@@500) $generated@@503) $generated@@502) ($generated@@217 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@500) $generated@@503))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@137 $generated@@500 ($generated@@387 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@150) (= (type $generated@@507) $generated@@150)) (< ($generated@@504 $generated@@506) ($generated@@505 ($generated@@216 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@216 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@150) (= (type $generated@@509) $generated@@150)) (< ($generated@@504 $generated@@509) ($generated@@505 ($generated@@216 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@216 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@150) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) ($generated@@217 $generated@@510 ($generated@@379 $generated@@511 $generated@@512))) (and (= ($generated@@264 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@510)) $generated@@510) ($generated@@137 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@510) ($generated@@379 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@217 $generated@@510 ($generated@@379 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@150) (= (type $generated@@514) $generated@@66)) (= (type $generated@@515) $generated@@66)) ($generated@@217 $generated@@513 ($generated@@387 $generated@@514 $generated@@515))) (and (= ($generated@@264 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@513)) $generated@@513) ($generated@@137 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@513) ($generated@@387 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@217 $generated@@513 ($generated@@387 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= (type $generated@@518) $generated@@150)) ($generated@@217 $generated@@518 ($generated@@140 $generated@@516 $generated@@517))) (and (= ($generated@@264 ($generated@@314 $generated@@141 $generated@@518)) $generated@@518) ($generated@@137 ($generated@@314 $generated@@141 $generated@@518) ($generated@@140 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@217 $generated@@518 ($generated@@140 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
 (not ($generated@@0 ($generated@@83 ($generated@@395 $generated@@520) $generated@@519))))
 :pattern ( (let (($generated@@520 (type $generated@@519)))
($generated@@83 ($generated@@395 $generated@@520) $generated@@519)))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@71)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@66) (= (type $generated@@524) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@523 $generated@@524)) $generated@@63) (= ($generated@@521 ($generated@@140 $generated@@523 $generated@@524)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 Int) ($generated@@527 Int) ) (! (= ($generated@@525 $generated@@526 $generated@@527) (* $generated@@526 $generated@@527))
 :pattern ( ($generated@@525 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@141) (= ($generated@@504 ($generated@@264 $generated@@528)) ($generated@@505 $generated@@528)))
 :pattern ( ($generated@@504 ($generated@@264 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) ($generated@@217 $generated@@529 ($generated@@77 0))) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@529)) $generated@@529) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@529) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@529 ($generated@@77 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@150) (= (type $generated@@531) $generated@@66)) ($generated@@217 $generated@@530 ($generated@@226 $generated@@531))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@530)) $generated@@530) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@530) ($generated@@226 $generated@@531))))
 :pattern ( ($generated@@217 $generated@@530 ($generated@@226 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@150) (= (type $generated@@533) $generated@@66)) ($generated@@217 $generated@@532 ($generated@@231 $generated@@533))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@532)) $generated@@532) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@532) ($generated@@231 $generated@@533))))
 :pattern ( ($generated@@217 $generated@@532 ($generated@@231 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@150) (= (type $generated@@535) $generated@@66)) ($generated@@217 $generated@@534 ($generated@@155 $generated@@535))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@534)) $generated@@534) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@534) ($generated@@155 $generated@@535))))
 :pattern ( ($generated@@217 $generated@@534 ($generated@@155 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) ($generated@@217 $generated@@536 ($generated@@466 $generated@@537))) (and (= ($generated@@264 ($generated@@314 ($generated@@257 $generated@@150) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@314 ($generated@@257 $generated@@150) $generated@@536) ($generated@@466 $generated@@537))))
 :pattern ( ($generated@@217 $generated@@536 ($generated@@466 $generated@@537)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@521 $generated@@134) $generated@@64))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@538 ($generated@@155 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@538 $generated@@541)))) ($generated@@243 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@83 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@76 $generated@@538 ($generated@@155 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@141) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@544) (and ($generated@@139 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@66) ($generated@@76 $generated@@542 ($generated@@140 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@76 $generated@@542 ($generated@@140 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@243 ($generated@@148 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@141) (= (type $generated@@547) $generated@@66)) (= (type $generated@@548) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@548) (and ($generated@@139 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@66) ($generated@@76 $generated@@546 ($generated@@140 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@76 $generated@@546 ($generated@@140 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@243 ($generated@@149 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@150) (= (type $generated@@551) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@550) ($generated@@238 $generated@@551)) ($generated@@238 ($generated@@216 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@550) ($generated@@238 $generated@@551)))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@264 ($generated@@8 ($generated@@236 $generated@@552))) ($generated@@238 ($generated@@264 ($generated@@8 $generated@@552))))
 :pattern ( ($generated@@264 ($generated@@8 ($generated@@236 $generated@@552))))
)))
(assert (forall (($generated@@553 T@U) ) (! (= ($generated@@264 ($generated@@238 $generated@@553)) ($generated@@238 ($generated@@264 $generated@@553)))
 :pattern ( ($generated@@264 ($generated@@238 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@258 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@257 $generated@@555)) (= ($generated@@256 $generated@@554) 0)) (= $generated@@554 ($generated@@255 $generated@@555))))
 :pattern ( ($generated@@256 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@557)))
 (=> (and (and (= (type $generated@@556) ($generated@@78 $generated@@559 $generated@@2)) (= (type $generated@@558) $generated@@2)) (<= 0 ($generated $generated@@558))) (= ($generated@@269 ($generated@@84 $generated@@556 $generated@@557 $generated@@558)) (+ (- ($generated@@269 $generated@@556) ($generated ($generated@@83 $generated@@556 $generated@@557))) ($generated $generated@@558)))))
 :pattern ( ($generated@@269 ($generated@@84 $generated@@556 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@561) $generated@@2)) ($generated@@76 $generated@@561 $generated@@46 $generated@@560))
 :pattern ( ($generated@@76 $generated@@561 $generated@@46 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@563) $generated@@3)) ($generated@@76 $generated@@563 $generated@@47 $generated@@562))
 :pattern ( ($generated@@76 $generated@@563 $generated@@47 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@565) $generated@@4)) ($generated@@76 $generated@@565 $generated@@44 $generated@@564))
 :pattern ( ($generated@@76 $generated@@565 $generated@@44 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@567) $generated@@419)) ($generated@@76 $generated@@567 $generated@@45 $generated@@566))
 :pattern ( ($generated@@76 $generated@@567 $generated@@45 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@569) $generated@@150)) ($generated@@76 $generated@@569 $generated@@48 $generated@@568))
 :pattern ( ($generated@@76 $generated@@569 $generated@@48 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@257 $generated@@150)) (= (type $generated@@571) $generated@@66)) (= ($generated@@137 $generated@@570 ($generated@@466 $generated@@571)) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@256 $generated@@570))) ($generated@@217 ($generated@@467 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@467 $generated@@570 $generated@@572))
))))
 :pattern ( ($generated@@137 $generated@@570 ($generated@@466 $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (= (type $generated@@574) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@256 $generated@@574))) (< ($generated@@505 ($generated@@314 $generated@@141 ($generated@@467 $generated@@574 $generated@@575))) ($generated@@573 $generated@@574))))
 :pattern ( ($generated@@505 ($generated@@314 $generated@@141 ($generated@@467 $generated@@574 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@577) $generated@@66)) (= (type $generated@@578) $generated@@66)) ($generated@@137 $generated@@576 ($generated@@379 $generated@@577 $generated@@578))) (and (and ($generated@@137 ($generated@@275 $generated@@576) ($generated@@226 $generated@@577)) ($generated@@137 ($generated@@322 $generated@@576) ($generated@@226 $generated@@578))) ($generated@@137 ($generated@@353 $generated@@576) ($generated@@226 ($generated@@140 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@137 $generated@@576 ($generated@@379 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@580) $generated@@66)) (= (type $generated@@581) $generated@@66)) ($generated@@137 $generated@@579 ($generated@@387 $generated@@580 $generated@@581))) (and (and ($generated@@137 ($generated@@293 $generated@@579) ($generated@@231 $generated@@580)) ($generated@@137 ($generated@@333 $generated@@579) ($generated@@231 $generated@@581))) ($generated@@137 ($generated@@361 $generated@@579) ($generated@@231 ($generated@@140 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@137 $generated@@579 ($generated@@387 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) ($generated@@137 $generated@@582 $generated@@46))
 :pattern ( ($generated@@137 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@3) ($generated@@137 $generated@@583 $generated@@47))
 :pattern ( ($generated@@137 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@4) ($generated@@137 $generated@@584 $generated@@44))
 :pattern ( ($generated@@137 $generated@@584 $generated@@44))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@419) ($generated@@137 $generated@@585 $generated@@45))
 :pattern ( ($generated@@137 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@150) ($generated@@137 $generated@@586 $generated@@48))
 :pattern ( ($generated@@137 $generated@@586 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@587 () Int)
(declare-fun $generated@@588 () Int)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 (T@U) Bool)
(assert  (and (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@591) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@593 true))
(let (($generated@@594  (=> (and (< ($generated@@525 $generated@@587 $generated@@588) ($generated@@236 0)) (= (ControlFlow 0 9) 7)) $generated@@593)))
(let (($generated@@595  (=> (<= ($generated@@236 0) ($generated@@525 $generated@@587 $generated@@588)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@587) $generated@@134 $generated@@589) ($generated@@76 ($generated@@8 $generated@@588) $generated@@134 $generated@@589)) (and ($generated@@429 $generated@@587 $generated@@588) (= (ControlFlow 0 8) 7))) $generated@@593))))
(let (($generated@@596  (=> ($generated@@0 ($generated@@238 ($generated@@11 false))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= ($generated@@236 0) ($generated@@525 $generated@@587 $generated@@588))) (=> (<= ($generated@@236 0) ($generated@@525 $generated@@587 $generated@@588)) (=> (= (ControlFlow 0 5) (- 0 4)) (= ($generated@@428 $generated@@587 $generated@@588) ($generated@@236 5))))))))
(let (($generated@@597  (=> (and (<= ($generated@@236 0) $generated@@587) (<= ($generated@@236 0) $generated@@588)) (and (and (=> (= (ControlFlow 0 10) 5) $generated@@596) (=> (= (ControlFlow 0 10) 8) $generated@@595)) (=> (= (ControlFlow 0 10) 9) $generated@@594)))))
(let (($generated@@598  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@599 Int) ($generated@@600 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@599) (<= ($generated@@236 0) $generated@@600)) (and (<= ($generated@@236 0) ($generated@@525 $generated@@599 $generated@@600)) (= ($generated@@428 $generated@@599 $generated@@600) ($generated@@236 5))))
 :pattern ( ($generated@@428 $generated@@599 $generated@@600))
 :pattern ( ($generated@@525 $generated@@599 $generated@@600))
)))))
(let (($generated@@601  (=> (and (forall (($generated@@602 Int) ($generated@@603 Int) ) (!  (=> (and (and (<= ($generated@@236 0) $generated@@602) (<= ($generated@@236 0) $generated@@603)) ($generated@@0 ($generated@@238 ($generated@@11 true)))) (and (<= ($generated@@236 0) ($generated@@525 $generated@@602 $generated@@603)) (= ($generated@@428 $generated@@602 $generated@@603) ($generated@@236 5))))
 :pattern ( ($generated@@428 $generated@@602 $generated@@603))
 :pattern ( ($generated@@525 $generated@@602 $generated@@603))
)) (= (ControlFlow 0 3) 2)) $generated@@598)))
(let (($generated@@604  (=> (= $generated@@590 ($generated@@161 $generated@@591 $generated@@589 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 10) $generated@@597) (=> (= (ControlFlow 0 11) 3) $generated@@601)))))
(let (($generated@@605  (=> (and (and ($generated@@242 $generated@@589) ($generated@@592 $generated@@589)) (and (= 2 $generated@@427) (= (ControlFlow 0 12) 11))) $generated@@604)))
$generated@@605))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
