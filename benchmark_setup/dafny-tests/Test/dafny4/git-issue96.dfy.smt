(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@140 (T@T T@U) T@U)
(declare-fun $generated@@141 (T@U Int) T@U)
(declare-fun $generated@@142 (Int) Int)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (forall (($generated@@144 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@144)) 14)) (forall (($generated@@145 T@T) ) (! (= ($generated@@143 ($generated@@134 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@134 $generated@@145))
))) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@138 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@U) ) (! (= (type ($generated@@140 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@140 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@U) ($generated@@150 Int) ) (! (let (($generated@@151 ($generated@@143 (type $generated@@149))))
(= (type ($generated@@141 $generated@@149 $generated@@150)) $generated@@151))
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@152) (and (not (= 0 $generated@@132)) (and ($generated@@137 $generated@@152 ($generated@@138 $generated@@46)) (< 10 ($generated@@139 $generated@@152)))))) (= ($generated@@133 $generated@@152) (forall (($generated@@153 Int) ) (!  (=> true (forall (($generated@@154 Int) ) (!  (=> true (and (=> (and (and (<= ($generated@@142 0) $generated@@153) (< $generated@@153 $generated@@154)) (< $generated@@154 5)) (= ($generated ($generated@@140 $generated@@2 ($generated@@141 $generated@@152 (+ $generated@@153 $generated@@154)))) ($generated ($generated@@140 $generated@@2 ($generated@@141 $generated@@152 $generated@@153))))) (=> (and (and (<= ($generated@@142 0) $generated@@153) (< $generated@@153 $generated@@154)) (< $generated@@154 5)) (= ($generated ($generated@@140 $generated@@2 ($generated@@141 $generated@@152 $generated@@153))) ($generated ($generated@@140 $generated@@2 ($generated@@141 $generated@@152 $generated@@154)))))))
 :pattern ( ($generated@@140 $generated@@2 ($generated@@141 $generated@@152 $generated@@154)))
)))
 :pattern ( ($generated@@140 $generated@@2 ($generated@@141 $generated@@152 $generated@@153)))
))))
 :pattern ( ($generated@@133 $generated@@152))
))))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@137 $generated@@155 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@155 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@159 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@64) (= (type $generated@@162) $generated@@64)) (= (type $generated@@163) $generated@@158)) ($generated@@137 $generated@@163 ($generated@@157 $generated@@161 $generated@@162))) ($generated@@156 $generated@@163))
 :pattern ( ($generated@@156 $generated@@163) ($generated@@137 $generated@@163 ($generated@@157 $generated@@161 $generated@@162)))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@135)
 :pattern ( ($generated@@165 $generated@@167))
)) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@135)
 :pattern ( ($generated@@166 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@158) (= (type $generated@@170) $generated@@158)) true) (= ($generated@@164 $generated@@169 $generated@@170)  (and (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)) (= ($generated@@166 $generated@@169) ($generated@@166 $generated@@170)))))
 :pattern ( ($generated@@164 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@64)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@175) $generated@@64)) ($generated@@137 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@137 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 17)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@77 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@67 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@77) (= (type $generated@@226) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@227) ($generated@@66 $generated@@4))) (= (type $generated@@229) $generated@@77)) (= (type $generated@@230) ($generated@@66 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@178 $generated@@77 $generated@@4))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@67 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@77) (= (type $generated@@238) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@239) ($generated@@66 $generated@@4))) (= (type $generated@@241) $generated@@77)) (= (type $generated@@242) ($generated@@66 $generated@@243))) (= ($generated@@0 ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@158)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@135)) (= (type $generated@@251) $generated@@135)) (= ($generated@@137 ($generated@@244 $generated@@250 $generated@@251) ($generated@@157 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@137 ($generated@@244 $generated@@250 $generated@@251) ($generated@@157 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@158) (= (type $generated@@253) $generated@@158)) (= ($generated@@164 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@164 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@257) $generated@@64)) (= ($generated@@137 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@135) ($generated@@0 ($generated@@81 $generated@@256 $generated@@258))) ($generated@@245 $generated@@258 $generated@@257))
 :pattern ( ($generated@@81 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@137 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@64)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@262) $generated@@64)) (= ($generated@@137 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@135) ($generated@@0 ($generated@@81 $generated@@261 $generated@@263))) ($generated@@245 $generated@@263 $generated@@262))
 :pattern ( ($generated@@81 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@137 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@142 $generated@@264) $generated@@264)
 :pattern ( ($generated@@142 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) $generated@@64)) (= (type $generated@@273) $generated@@135)) (= (type $generated@@274) $generated@@135)) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@269 $generated@@275)) (= ($generated@@74 ($generated@@244 $generated@@273 $generated@@274) ($generated@@157 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@74 ($generated@@244 $generated@@273 $generated@@274) ($generated@@157 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@158) (= ($generated@@156 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@156 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@158) ($generated@@156 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@135) (= (type $generated@@281) $generated@@135)) (= $generated@@279 ($generated@@244 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@156 $generated@@279))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@134 $generated@@283))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@139 ($generated@@282 $generated@@284)) 0)
 :pattern ( ($generated@@282 $generated@@284))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@285) (and (not (= 0 $generated@@132)) (and ($generated@@137 $generated@@285 ($generated@@138 $generated@@46)) (< 10 ($generated@@139 $generated@@285)))))) true)
 :pattern ( ($generated@@133 $generated@@285))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@135)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@270 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@74 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@270 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@76 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@79 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@81 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@172 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@172 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(let (($generated@@338 ($generated@@300 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@299 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@298 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@297 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@301 (type $generated@@343))))
(let (($generated@@345 ($generated@@300 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@299 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@298 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@319 (type $generated@@347))))
(let (($generated@@349 ($generated@@318 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@317 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@316 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@315 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@76 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@319 (type $generated@@354))))
(let (($generated@@356 ($generated@@318 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@317 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@316 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@359) $generated@@64)) (= ($generated@@137 $generated@@358 ($generated@@171 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@358 $generated@@360)))) ($generated@@245 $generated@@360 $generated@@359))
 :pattern ( ($generated@@81 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@137 $generated@@358 ($generated@@171 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@254 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@135) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@270 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@254 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@366) $generated@@64)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@365 ($generated@@259 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@135) ($generated@@0 ($generated@@81 $generated@@365 $generated@@368))) ($generated@@270 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@81 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@74 $generated@@365 ($generated@@259 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@81 ($generated@@292 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@81 ($generated@@292 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@301 (type $generated@@374))))
(let (($generated@@376 ($generated@@300 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@299 $generated@@135 $generated@@135)) (= (type $generated@@378) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@377) ($generated@@165 ($generated@@140 $generated@@158 $generated@@378)))) (= ($generated@@81 ($generated@@372 $generated@@377) ($generated@@165 ($generated@@140 $generated@@158 $generated@@378))) ($generated@@166 ($generated@@140 $generated@@158 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@319 (type $generated@@382))))
(let (($generated@@384 ($generated@@318 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@317 $generated@@135 $generated@@135)) (= (type $generated@@386) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@385) ($generated@@165 ($generated@@140 $generated@@158 $generated@@386)))) (= ($generated@@81 ($generated@@380 $generated@@385) ($generated@@165 ($generated@@140 $generated@@158 $generated@@386))) ($generated@@166 ($generated@@140 $generated@@158 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@300 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@299 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@318 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@317 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@299 $generated@@135 $generated@@135)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@400) $generated@@404))) (and ($generated@@270 ($generated@@81 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@270 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@317 $generated@@135 $generated@@135)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@408) $generated@@412))) (and ($generated@@270 ($generated@@81 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@270 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@76 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@319 (type $generated@@415))))
(let (($generated@@417 ($generated@@318 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@317 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@316 $generated@@417 $generated@@416)) (= ($generated@@315 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@315 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@319 (type $generated@@418))))
(let (($generated@@420 ($generated@@318 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@317 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@316 $generated@@420 $generated@@419)) (= ($generated@@351 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@351 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@319 (type $generated@@421))))
(let (($generated@@423 ($generated@@318 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@317 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@316 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@135))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@301 (type $generated@@424))))
(let (($generated@@426 ($generated@@300 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@299 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@298 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@135) (= (type $generated@@428) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@424) ($generated@@286 ($generated@@244 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@319 (type $generated@@429))))
(let (($generated@@431 ($generated@@318 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@317 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@316 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@135) (= (type $generated@@433) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@429) ($generated@@286 ($generated@@244 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@135) ($generated@@245 $generated@@434 $generated@@46)) (and (= ($generated@@286 ($generated@@140 $generated@@2 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@140 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@135) ($generated@@245 $generated@@435 $generated@@47)) (and (= ($generated@@286 ($generated@@140 $generated@@3 $generated@@435)) $generated@@435) ($generated@@137 ($generated@@140 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@135) ($generated@@245 $generated@@436 $generated@@44)) (and (= ($generated@@286 ($generated@@140 $generated@@4 $generated@@436)) $generated@@436) ($generated@@137 ($generated@@140 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@135) ($generated@@245 $generated@@438 $generated@@45)) (and (= ($generated@@286 ($generated@@140 $generated@@437 $generated@@438)) $generated@@438) ($generated@@137 ($generated@@140 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@64) (= ($generated@@245 ($generated@@286 $generated@@439) $generated@@440) ($generated@@137 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@245 ($generated@@286 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@79 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@76 $generated@@442 $generated@@2)) (<= 0 ($generated@@291 $generated@@441))))
 :pattern ( ($generated@@291 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@143 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@134 $generated@@444)) (<= 0 ($generated@@139 $generated@@443))))
 :pattern ( ($generated@@139 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@135) (= (type $generated@@466) $generated@@135)) (= ($generated@@276 ($generated@@244 $generated@@465 $generated@@466)) $generated@@61))
 :pattern ( ($generated@@244 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@157 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@157 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@157 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@157 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@135) (= (type $generated@@476) $generated@@135)) (= ($generated@@165 ($generated@@244 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@244 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@135) (= (type $generated@@478) $generated@@135)) (= ($generated@@166 ($generated@@244 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@244 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@134 $generated@@135)) (= (type $generated@@480) $generated@@64)) (= (type $generated@@481) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@479 ($generated@@138 $generated@@480) $generated@@481) (forall (($generated@@482 Int) ) (!  (=> (and (<= 0 $generated@@482) (< $generated@@482 ($generated@@139 $generated@@479))) ($generated@@270 ($generated@@141 $generated@@479 $generated@@482) $generated@@480 $generated@@481))
 :pattern ( ($generated@@141 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@74 $generated@@479 ($generated@@138 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@75 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@75 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@254 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@254 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@488)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@259 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@259 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@259 $generated@@492)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@171 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@171 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@171 $generated@@496)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@138 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@138 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@500)) $generated@@57))
 :pattern ( ($generated@@138 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(= ($generated@@140 $generated@@502 ($generated@@286 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@286 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@299 $generated@@135 $generated@@135)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@137 $generated@@503 ($generated@@397 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@503) $generated@@506))) (and ($generated@@245 ($generated@@81 ($generated@@372 $generated@@503) $generated@@506) $generated@@505) ($generated@@245 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@137 $generated@@503 ($generated@@397 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@317 $generated@@135 $generated@@135)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@137 $generated@@507 ($generated@@405 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@507) $generated@@510))) (and ($generated@@245 ($generated@@81 ($generated@@380 $generated@@507) $generated@@510) $generated@@509) ($generated@@245 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@137 $generated@@507 ($generated@@405 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@135) (= (type $generated@@514) $generated@@135)) (< ($generated@@511 $generated@@513) ($generated@@512 ($generated@@244 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@244 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@135) (= (type $generated@@516) $generated@@135)) (< ($generated@@511 $generated@@516) ($generated@@512 ($generated@@244 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@244 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@135) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@245 $generated@@517 ($generated@@397 $generated@@518 $generated@@519))) (and (= ($generated@@286 ($generated@@140 ($generated@@299 $generated@@135 $generated@@135) $generated@@517)) $generated@@517) ($generated@@137 ($generated@@140 ($generated@@299 $generated@@135 $generated@@135) $generated@@517) ($generated@@397 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@245 $generated@@517 ($generated@@397 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@135) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) ($generated@@245 $generated@@520 ($generated@@405 $generated@@521 $generated@@522))) (and (= ($generated@@286 ($generated@@140 ($generated@@317 $generated@@135 $generated@@135) $generated@@520)) $generated@@520) ($generated@@137 ($generated@@140 ($generated@@317 $generated@@135 $generated@@135) $generated@@520) ($generated@@405 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@245 $generated@@520 ($generated@@405 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@135)) ($generated@@245 $generated@@525 ($generated@@157 $generated@@523 $generated@@524))) (and (= ($generated@@286 ($generated@@140 $generated@@158 $generated@@525)) $generated@@525) ($generated@@137 ($generated@@140 $generated@@158 $generated@@525) ($generated@@157 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@245 $generated@@525 ($generated@@157 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
 (not ($generated@@0 ($generated@@81 ($generated@@413 $generated@@527) $generated@@526))))
 :pattern ( (let (($generated@@527 (type $generated@@526)))
($generated@@81 ($generated@@413 $generated@@527) $generated@@526)))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@69)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (and (= ($generated@@72 ($generated@@157 $generated@@530 $generated@@531)) $generated@@62) (= ($generated@@528 ($generated@@157 $generated@@530 $generated@@531)) $generated@@63)))
 :pattern ( ($generated@@157 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@158) (= ($generated@@511 ($generated@@286 $generated@@532)) ($generated@@512 $generated@@532)))
 :pattern ( ($generated@@511 ($generated@@286 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@135) ($generated@@245 $generated@@533 ($generated@@75 0))) (and (= ($generated@@286 ($generated@@140 $generated@@2 $generated@@533)) $generated@@533) ($generated@@137 ($generated@@140 ($generated@@76 $generated@@135 $generated@@4) $generated@@533) ($generated@@75 0))))
 :pattern ( ($generated@@245 $generated@@533 ($generated@@75 0)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@135) (= (type $generated@@535) $generated@@64)) ($generated@@245 $generated@@534 ($generated@@254 $generated@@535))) (and (= ($generated@@286 ($generated@@140 ($generated@@76 $generated@@135 $generated@@4) $generated@@534)) $generated@@534) ($generated@@137 ($generated@@140 ($generated@@76 $generated@@135 $generated@@4) $generated@@534) ($generated@@254 $generated@@535))))
 :pattern ( ($generated@@245 $generated@@534 ($generated@@254 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@135) (= (type $generated@@537) $generated@@64)) ($generated@@245 $generated@@536 ($generated@@259 $generated@@537))) (and (= ($generated@@286 ($generated@@140 ($generated@@76 $generated@@135 $generated@@4) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@140 ($generated@@76 $generated@@135 $generated@@4) $generated@@536) ($generated@@259 $generated@@537))))
 :pattern ( ($generated@@245 $generated@@536 ($generated@@259 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@135) (= (type $generated@@539) $generated@@64)) ($generated@@245 $generated@@538 ($generated@@171 $generated@@539))) (and (= ($generated@@286 ($generated@@140 ($generated@@76 $generated@@135 $generated@@2) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@140 ($generated@@76 $generated@@135 $generated@@2) $generated@@538) ($generated@@171 $generated@@539))))
 :pattern ( ($generated@@245 $generated@@538 ($generated@@171 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@135) (= (type $generated@@541) $generated@@64)) ($generated@@245 $generated@@540 ($generated@@138 $generated@@541))) (and (= ($generated@@286 ($generated@@140 ($generated@@134 $generated@@135) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@140 ($generated@@134 $generated@@135) $generated@@540) ($generated@@138 $generated@@541))))
 :pattern ( ($generated@@245 $generated@@540 ($generated@@138 $generated@@541)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) ($generated@@134 $generated@@135)) (or ($generated@@136 ($generated@@265 $generated@@542)) (and (not (= 0 $generated@@132)) (and ($generated@@137 $generated@@542 ($generated@@138 $generated@@46)) (< 10 ($generated@@139 ($generated@@265 $generated@@542))))))) (= ($generated@@133 ($generated@@265 $generated@@542)) (forall (($generated@@543 Int) ) (!  (=> true (forall (($generated@@544 Int) ) (!  (=> true (and (=> (and (and (<= ($generated@@142 0) $generated@@543) (< $generated@@543 $generated@@544)) (< $generated@@544 5)) (= ($generated ($generated@@140 $generated@@2 ($generated@@141 ($generated@@265 $generated@@542) (+ $generated@@543 $generated@@544)))) ($generated ($generated@@140 $generated@@2 ($generated@@141 ($generated@@265 $generated@@542) $generated@@543))))) (=> (and (and (<= ($generated@@142 0) $generated@@543) (< $generated@@543 $generated@@544)) (< $generated@@544 5)) (= ($generated ($generated@@140 $generated@@2 ($generated@@141 ($generated@@265 $generated@@542) $generated@@543))) ($generated ($generated@@140 $generated@@2 ($generated@@141 ($generated@@265 $generated@@542) $generated@@544)))))))
 :pattern ( ($generated@@140 $generated@@2 ($generated@@141 $generated@@542 $generated@@544)))
)))
 :pattern ( ($generated@@140 $generated@@2 ($generated@@141 $generated@@542 $generated@@543)))
))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@265 $generated@@542)))
))))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@545 ($generated@@171 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@545 $generated@@548)))) ($generated@@270 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@81 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@74 $generated@@545 ($generated@@171 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@551) (and ($generated@@156 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@64) ($generated@@74 $generated@@549 ($generated@@157 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@157 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@270 ($generated@@165 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@270 ($generated@@165 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@158) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@555) (and ($generated@@156 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@64) ($generated@@74 $generated@@553 ($generated@@157 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@157 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@270 ($generated@@166 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@270 ($generated@@166 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@135) (= (type $generated@@558) $generated@@135)) (= ($generated@@244 ($generated@@265 $generated@@557) ($generated@@265 $generated@@558)) ($generated@@265 ($generated@@244 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@244 ($generated@@265 $generated@@557) ($generated@@265 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@142 $generated@@559))) ($generated@@265 ($generated@@286 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@142 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@286 ($generated@@265 $generated@@560)) ($generated@@265 ($generated@@286 $generated@@560)))
 :pattern ( ($generated@@286 ($generated@@265 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@143 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@134 $generated@@562)) (= ($generated@@139 $generated@@561) 0)) (= $generated@@561 ($generated@@282 $generated@@562))))
 :pattern ( ($generated@@139 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@76 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@291 ($generated@@82 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@291 $generated@@563) ($generated ($generated@@81 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@291 ($generated@@82 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@2)) ($generated@@74 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@3)) ($generated@@74 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@4)) ($generated@@74 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@437)) ($generated@@74 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@135)) ($generated@@74 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@134 $generated@@135)) (= (type $generated@@578) $generated@@64)) (= ($generated@@137 $generated@@577 ($generated@@138 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@139 $generated@@577))) ($generated@@245 ($generated@@141 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@141 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@137 $generated@@577 ($generated@@138 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@134 $generated@@135)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@139 $generated@@581))) (< ($generated@@512 ($generated@@140 $generated@@158 ($generated@@141 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@512 ($generated@@140 $generated@@158 ($generated@@141 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@299 $generated@@135 $generated@@135)) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) $generated@@64)) ($generated@@137 $generated@@583 ($generated@@397 $generated@@584 $generated@@585))) (and (and ($generated@@137 ($generated@@297 $generated@@583) ($generated@@254 $generated@@584)) ($generated@@137 ($generated@@340 $generated@@583) ($generated@@254 $generated@@585))) ($generated@@137 ($generated@@371 $generated@@583) ($generated@@254 ($generated@@157 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@137 $generated@@583 ($generated@@397 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@317 $generated@@135 $generated@@135)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) ($generated@@137 $generated@@586 ($generated@@405 $generated@@587 $generated@@588))) (and (and ($generated@@137 ($generated@@315 $generated@@586) ($generated@@259 $generated@@587)) ($generated@@137 ($generated@@351 $generated@@586) ($generated@@259 $generated@@588))) ($generated@@137 ($generated@@379 $generated@@586) ($generated@@259 ($generated@@157 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@137 $generated@@586 ($generated@@405 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@137 $generated@@589 $generated@@46))
 :pattern ( ($generated@@137 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@137 $generated@@590 $generated@@47))
 :pattern ( ($generated@@137 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@137 $generated@@591 $generated@@44))
 :pattern ( ($generated@@137 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@437) ($generated@@137 $generated@@592 $generated@@45))
 :pattern ( ($generated@@137 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@135) ($generated@@137 $generated@@593 $generated@@48))
 :pattern ( ($generated@@137 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@596) ($generated@@134 $generated@@135)) (= (type $generated@@597) ($generated@@178 $generated@@77 $generated@@4))) (= (type $generated@@598) $generated@@77)) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@600) ($generated@@178 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@602 true))
(let (($generated@@603  (=> (and (not (and (and (<= ($generated@@142 0) $generated@@594) (< $generated@@594 $generated@@595)) (< $generated@@595 5))) (= (ControlFlow 0 9) 4)) $generated@@602)))
(let (($generated@@604  (=> (and (and (<= ($generated@@142 0) $generated@@594) (< $generated@@594 $generated@@595)) (< $generated@@595 5)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@139 $generated@@596)))) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@139 $generated@@596))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@139 $generated@@596)))) (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@139 $generated@@596))) (=> (= (ControlFlow 0 6) 4) $generated@@602))))))))
(let (($generated@@605  (=> (not (and (<= ($generated@@142 0) $generated@@594) (< $generated@@594 $generated@@595))) (and (=> (= (ControlFlow 0 11) 6) $generated@@604) (=> (= (ControlFlow 0 11) 9) $generated@@603)))))
(let (($generated@@606  (=> (and (<= ($generated@@142 0) $generated@@594) (< $generated@@594 $generated@@595)) (and (=> (= (ControlFlow 0 10) 6) $generated@@604) (=> (= (ControlFlow 0 10) 9) $generated@@603)))))
(let (($generated@@607  (=> (< $generated@@594 ($generated@@142 0)) (and (=> (= (ControlFlow 0 13) 10) $generated@@606) (=> (= (ControlFlow 0 13) 11) $generated@@605)))))
(let (($generated@@608  (=> (<= ($generated@@142 0) $generated@@594) (and (=> (= (ControlFlow 0 12) 10) $generated@@606) (=> (= (ControlFlow 0 12) 11) $generated@@605)))))
(let (($generated@@609  (=> (=> (and (and (<= ($generated@@142 0) $generated@@594) (< $generated@@594 $generated@@595)) (< $generated@@595 5)) (= ($generated ($generated@@140 $generated@@2 ($generated@@141 $generated@@596 (+ $generated@@594 $generated@@595)))) ($generated ($generated@@140 $generated@@2 ($generated@@141 $generated@@596 $generated@@594))))) (and (=> (= (ControlFlow 0 14) 12) $generated@@608) (=> (= (ControlFlow 0 14) 13) $generated@@607)))))
(let (($generated@@610  (=> (and (not (=> (and (and (<= ($generated@@142 0) $generated@@594) (< $generated@@594 $generated@@595)) (< $generated@@595 5)) (= ($generated ($generated@@140 $generated@@2 ($generated@@141 $generated@@596 (+ $generated@@594 $generated@@595)))) ($generated ($generated@@140 $generated@@2 ($generated@@141 $generated@@596 $generated@@594)))))) (= (ControlFlow 0 5) 4)) $generated@@602)))
(let (($generated@@611  (=> (not (and (and (<= ($generated@@142 0) $generated@@594) (< $generated@@594 $generated@@595)) (< $generated@@595 5))) (and (=> (= (ControlFlow 0 18) 14) $generated@@609) (=> (= (ControlFlow 0 18) 5) $generated@@610)))))
(let (($generated@@612  (=> (and (and (<= ($generated@@142 0) $generated@@594) (< $generated@@594 $generated@@595)) (< $generated@@595 5)) (and (=> (= (ControlFlow 0 15) (- 0 17)) (and (<= 0 (+ $generated@@594 $generated@@595)) (< (+ $generated@@594 $generated@@595) ($generated@@139 $generated@@596)))) (=> (and (<= 0 (+ $generated@@594 $generated@@595)) (< (+ $generated@@594 $generated@@595) ($generated@@139 $generated@@596))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@139 $generated@@596)))) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@139 $generated@@596))) (and (=> (= (ControlFlow 0 15) 14) $generated@@609) (=> (= (ControlFlow 0 15) 5) $generated@@610)))))))))
(let (($generated@@613  (=> (not (and (<= ($generated@@142 0) $generated@@594) (< $generated@@594 $generated@@595))) (and (=> (= (ControlFlow 0 20) 15) $generated@@612) (=> (= (ControlFlow 0 20) 18) $generated@@611)))))
(let (($generated@@614  (=> (and (<= ($generated@@142 0) $generated@@594) (< $generated@@594 $generated@@595)) (and (=> (= (ControlFlow 0 19) 15) $generated@@612) (=> (= (ControlFlow 0 19) 18) $generated@@611)))))
(let (($generated@@615  (=> (< $generated@@594 ($generated@@142 0)) (and (=> (= (ControlFlow 0 22) 19) $generated@@614) (=> (= (ControlFlow 0 22) 20) $generated@@613)))))
(let (($generated@@616  (=> (<= ($generated@@142 0) $generated@@594) (and (=> (= (ControlFlow 0 21) 19) $generated@@614) (=> (= (ControlFlow 0 21) 20) $generated@@613)))))
(let (($generated@@617  (and (=> (= (ControlFlow 0 23) 21) $generated@@616) (=> (= (ControlFlow 0 23) 22) $generated@@615))))
(let (($generated@@618 true))
(let (($generated@@619  (and (=> (= (ControlFlow 0 24) 23) $generated@@617) (=> (= (ControlFlow 0 24) 3) $generated@@618))))
(let (($generated@@620 true))
(let (($generated@@621  (=> (= $generated@@597 ($generated@@232 $generated@@598 $generated@@599 $generated@@60 false)) (and (=> (= (ControlFlow 0 25) 24) $generated@@619) (=> (= (ControlFlow 0 25) 2) $generated@@620)))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (and (= $generated@@600 ($generated@@177 $generated@@598 $generated@@599 $generated@@60 false)) (< 10 ($generated@@139 $generated@@596))) (and (=> (= (ControlFlow 0 26) 1) $generated@@622) (=> (= (ControlFlow 0 26) 25) $generated@@621)))))
(let (($generated@@624  (=> (and (and (and ($generated@@269 $generated@@599) ($generated@@601 $generated@@599)) ($generated@@137 $generated@@596 ($generated@@138 $generated@@46))) (and (= 0 $generated@@132) (= (ControlFlow 0 27) 26))) $generated@@623)))
$generated@@624))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () Int)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 (T@U) Int)
(declare-fun $generated@@237 (T@T T@U) T@U)
(declare-fun $generated@@238 (T@U Int) T@U)
(declare-fun $generated@@239 (Int) Int)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert  (and (and (and (and (forall (($generated@@241 T@T) ) (= ($generated@@1 ($generated@@233 $generated@@241)) 17)) (forall (($generated@@242 T@T) ) (! (= ($generated@@240 ($generated@@233 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@233 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (= (type ($generated@@235 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@243))
))) (forall (($generated@@244 T@T) ($generated@@245 T@U) ) (! (= (type ($generated@@237 $generated@@244 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@237 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@U) ($generated@@247 Int) ) (! (let (($generated@@248 ($generated@@240 (type $generated@@246))))
(= (type ($generated@@238 $generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@238 $generated@@246 $generated@@247))
))))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@233 $generated@@145)) (or ($generated@@234 $generated@@249) (and (not (= 0 $generated@@231)) (and ($generated@@132 $generated@@249 ($generated@@235 $generated@@46)) (< 10 ($generated@@236 $generated@@249)))))) (= ($generated@@232 $generated@@249) (forall (($generated@@250 Int) ) (!  (=> true (forall (($generated@@251 Int) ($generated@@252 Int) )  (=> (= $generated@@252 (+ $generated@@250 $generated@@251)) (=> (and (and (<= ($generated@@239 0) $generated@@250) (< $generated@@250 $generated@@251)) (< $generated@@251 5)) (and (= ($generated ($generated@@237 $generated@@2 ($generated@@238 $generated@@249 $generated@@252))) ($generated ($generated@@237 $generated@@2 ($generated@@238 $generated@@249 $generated@@250)))) (= ($generated ($generated@@237 $generated@@2 ($generated@@238 $generated@@249 $generated@@250))) ($generated ($generated@@237 $generated@@2 ($generated@@238 $generated@@249 $generated@@251)))))))))
 :pattern ( ($generated@@237 $generated@@2 ($generated@@238 $generated@@249 $generated@@250)))
))))
 :pattern ( ($generated@@232 $generated@@249))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@136) (= (type $generated@@254) $generated@@136)) (= ($generated@@142 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@142 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@64)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@258) $generated@@64)) (= ($generated@@132 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@145) ($generated@@0 ($generated@@81 $generated@@257 $generated@@259))) ($generated@@224 $generated@@259 $generated@@258))
 :pattern ( ($generated@@81 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@132 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@64)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@263) $generated@@64)) (= ($generated@@132 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@145) ($generated@@0 ($generated@@81 $generated@@262 $generated@@264))) ($generated@@224 $generated@@264 $generated@@263))
 :pattern ( ($generated@@81 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@132 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@239 $generated@@265) $generated@@265)
 :pattern ( ($generated@@239 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@64) (= (type $generated@@273) $generated@@64)) (= (type $generated@@274) $generated@@145)) (= (type $generated@@275) $generated@@145)) (= (type $generated@@276) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@270 $generated@@276)) (= ($generated@@74 ($generated@@223 $generated@@274 $generated@@275) ($generated@@135 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@274 $generated@@275) ($generated@@135 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@68)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@136) (= ($generated@@134 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@136) ($generated@@134 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@145) (= (type $generated@@282) $generated@@145)) (= $generated@@280 ($generated@@223 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@134 $generated@@280))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@233 $generated@@284))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@236 ($generated@@283 $generated@@285)) 0)
 :pattern ( ($generated@@283 $generated@@285))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@233 $generated@@145)) (or ($generated@@234 $generated@@286) (and (not (= 0 $generated@@231)) (and ($generated@@132 $generated@@286 ($generated@@235 $generated@@46)) (< 10 ($generated@@236 $generated@@286)))))) true)
 :pattern ( ($generated@@232 $generated@@286))
))))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@145)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@64) (= (type $generated@@291) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@271 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@74 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@271 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@76 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@79 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@76 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@81 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@76 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@81 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@81 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@81 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@81 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@79 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@76 $generated@@335 $generated@@2)) (= ($generated@@151 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@81 $generated@@334 $generated@@336))) (<= ($generated ($generated@@81 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@151 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@302 (type $generated@@337))))
(let (($generated@@339 ($generated@@301 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@300 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@299 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@298 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@302 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@302 (type $generated@@344))))
(let (($generated@@346 ($generated@@301 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@300 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@299 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@320 (type $generated@@348))))
(let (($generated@@350 ($generated@@319 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@318 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@317 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@316 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@320 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@76 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@320 (type $generated@@355))))
(let (($generated@@357 ($generated@@319 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@318 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@317 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@360) $generated@@64)) (= ($generated@@132 $generated@@359 ($generated@@150 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@359 $generated@@361)))) ($generated@@224 $generated@@361 $generated@@360))
 :pattern ( ($generated@@81 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@132 $generated@@359 ($generated@@150 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@362 ($generated@@255 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@145) ($generated@@0 ($generated@@81 $generated@@362 $generated@@365))) ($generated@@271 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@74 $generated@@362 ($generated@@255 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@366 ($generated@@260 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@145) ($generated@@0 ($generated@@81 $generated@@366 $generated@@369))) ($generated@@271 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@81 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@74 $generated@@366 ($generated@@260 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@81 ($generated@@293 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@81 ($generated@@293 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@302 (type $generated@@375))))
(let (($generated@@377 ($generated@@301 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@379) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@298 $generated@@378) ($generated@@143 ($generated@@237 $generated@@136 $generated@@379)))) (= ($generated@@81 ($generated@@373 $generated@@378) ($generated@@143 ($generated@@237 $generated@@136 $generated@@379))) ($generated@@144 ($generated@@237 $generated@@136 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@320 (type $generated@@383))))
(let (($generated@@385 ($generated@@319 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@387) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@81 ($generated@@316 $generated@@386) ($generated@@143 ($generated@@237 $generated@@136 $generated@@387)))) (= ($generated@@81 ($generated@@381 $generated@@386) ($generated@@143 ($generated@@237 $generated@@136 $generated@@387))) ($generated@@144 ($generated@@237 $generated@@136 $generated@@387))))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@301 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@300 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@298 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@319 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@318 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@316 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@401) $generated@@405))) (and ($generated@@271 ($generated@@81 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@271 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@64)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@409) $generated@@413))) (and ($generated@@271 ($generated@@81 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@271 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@76 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@320 (type $generated@@416))))
(let (($generated@@418 ($generated@@319 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@318 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@317 $generated@@418 $generated@@417)) (= ($generated@@316 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@316 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@320 (type $generated@@419))))
(let (($generated@@421 ($generated@@319 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@318 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@317 $generated@@421 $generated@@420)) (= ($generated@@352 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@352 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@320 (type $generated@@422))))
(let (($generated@@424 ($generated@@319 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@318 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@317 $generated@@424 $generated@@423)) (= ($generated@@380 $generated@@422) ($generated@@414 $generated@@145))))))
 :pattern ( ($generated@@380 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@302 (type $generated@@425))))
(let (($generated@@427 ($generated@@301 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@300 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@299 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@145) (= (type $generated@@429) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@425) ($generated@@287 ($generated@@223 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@372 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@320 (type $generated@@430))))
(let (($generated@@432 ($generated@@319 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@318 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@317 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@145) (= (type $generated@@434) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@430) ($generated@@287 ($generated@@223 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@380 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@145) ($generated@@224 $generated@@435 $generated@@46)) (and (= ($generated@@287 ($generated@@237 $generated@@2 $generated@@435)) $generated@@435) ($generated@@132 ($generated@@237 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@224 $generated@@436 $generated@@47)) (and (= ($generated@@287 ($generated@@237 $generated@@3 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@237 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@224 $generated@@437 $generated@@44)) (and (= ($generated@@287 ($generated@@237 $generated@@4 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@237 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@224 $generated@@439 $generated@@45)) (and (= ($generated@@287 ($generated@@237 $generated@@438 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@237 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@64) (= ($generated@@224 ($generated@@287 $generated@@440) $generated@@441) ($generated@@132 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@224 ($generated@@287 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@79 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@76 $generated@@443 $generated@@2)) (<= 0 ($generated@@292 $generated@@442))))
 :pattern ( ($generated@@292 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@240 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@233 $generated@@445)) (<= 0 ($generated@@236 $generated@@444))))
 :pattern ( ($generated@@236 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@398 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@398 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@398 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@406 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@406 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@406 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@406 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) (= (type $generated@@467) $generated@@145)) (= ($generated@@277 ($generated@@223 $generated@@466 $generated@@467)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@135 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@135 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@135 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@135 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@145) (= (type $generated@@477) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@223 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@145) (= (type $generated@@479) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@223 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@233 $generated@@145)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@235 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@236 $generated@@480))) ($generated@@271 ($generated@@238 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@238 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@235 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@75 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@75 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@255 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@255 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@255 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@260 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@260 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@260 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@150 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@150 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@235 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@235 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@235 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated@@237 $generated@@503 ($generated@@287 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@287 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@132 $generated@@504 ($generated@@398 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@504) $generated@@507))) (and ($generated@@224 ($generated@@81 ($generated@@373 $generated@@504) $generated@@507) $generated@@506) ($generated@@224 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@132 $generated@@504 ($generated@@398 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@132 $generated@@508 ($generated@@406 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@508) $generated@@511))) (and ($generated@@224 ($generated@@81 ($generated@@381 $generated@@508) $generated@@511) $generated@@510) ($generated@@224 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@508) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@132 $generated@@508 ($generated@@406 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@145)) (< ($generated@@512 $generated@@514) ($generated@@513 ($generated@@223 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@223 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@145) (= (type $generated@@517) $generated@@145)) (< ($generated@@512 $generated@@517) ($generated@@513 ($generated@@223 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@223 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) ($generated@@224 $generated@@518 ($generated@@398 $generated@@519 $generated@@520))) (and (= ($generated@@287 ($generated@@237 ($generated@@300 $generated@@145 $generated@@145) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@237 ($generated@@300 $generated@@145 $generated@@145) $generated@@518) ($generated@@398 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@224 $generated@@518 ($generated@@398 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@224 $generated@@521 ($generated@@406 $generated@@522 $generated@@523))) (and (= ($generated@@287 ($generated@@237 ($generated@@318 $generated@@145 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@237 ($generated@@318 $generated@@145 $generated@@145) $generated@@521) ($generated@@406 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@145)) ($generated@@224 $generated@@526 ($generated@@135 $generated@@524 $generated@@525))) (and (= ($generated@@287 ($generated@@237 $generated@@136 $generated@@526)) $generated@@526) ($generated@@132 ($generated@@237 $generated@@136 $generated@@526) ($generated@@135 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@224 $generated@@526 ($generated@@135 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (not ($generated@@0 ($generated@@81 ($generated@@414 $generated@@528) $generated@@527))))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@81 ($generated@@414 $generated@@528) $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@135 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@136) (= ($generated@@512 ($generated@@287 $generated@@533)) ($generated@@513 $generated@@533)))
 :pattern ( ($generated@@512 ($generated@@287 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) ($generated@@224 $generated@@534 ($generated@@75 0))) (and (= ($generated@@287 ($generated@@237 $generated@@2 $generated@@534)) $generated@@534) ($generated@@132 ($generated@@237 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@75 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@64)) ($generated@@224 $generated@@535 ($generated@@255 $generated@@536))) (and (= ($generated@@287 ($generated@@237 ($generated@@76 $generated@@145 $generated@@4) $generated@@535)) $generated@@535) ($generated@@132 ($generated@@237 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@255 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@255 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) ($generated@@224 $generated@@537 ($generated@@260 $generated@@538))) (and (= ($generated@@287 ($generated@@237 ($generated@@76 $generated@@145 $generated@@4) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@237 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@260 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@260 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@224 $generated@@539 ($generated@@150 $generated@@540))) (and (= ($generated@@287 ($generated@@237 ($generated@@76 $generated@@145 $generated@@2) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@237 ($generated@@76 $generated@@145 $generated@@2) $generated@@539) ($generated@@150 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@150 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@224 $generated@@541 ($generated@@235 $generated@@542))) (and (= ($generated@@287 ($generated@@237 ($generated@@233 $generated@@145) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@237 ($generated@@233 $generated@@145) $generated@@541) ($generated@@235 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@235 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@543 $generated@@546)))) ($generated@@271 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@81 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@136) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@270 $generated@@549) (and ($generated@@134 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@64) ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@271 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@271 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@270 $generated@@553) (and ($generated@@134 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@271 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@271 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@145)) (= ($generated@@223 ($generated@@266 $generated@@555) ($generated@@266 $generated@@556)) ($generated@@266 ($generated@@223 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@223 ($generated@@266 $generated@@555) ($generated@@266 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@239 $generated@@557))) ($generated@@266 ($generated@@287 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@239 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@287 ($generated@@266 $generated@@558)) ($generated@@266 ($generated@@287 $generated@@558)))
 :pattern ( ($generated@@287 ($generated@@266 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@240 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@233 $generated@@560)) (= ($generated@@236 $generated@@559) 0)) (= $generated@@559 ($generated@@283 $generated@@560))))
 :pattern ( ($generated@@236 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@292 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@292 $generated@@561) ($generated ($generated@@81 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@292 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@2)) ($generated@@74 $generated@@566 $generated@@46 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@3)) ($generated@@74 $generated@@568 $generated@@47 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@47 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@4)) ($generated@@74 $generated@@570 $generated@@44 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@44 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@438)) ($generated@@74 $generated@@572 $generated@@45 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@45 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@145)) ($generated@@74 $generated@@574 $generated@@48 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@48 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@233 $generated@@145)) (= (type $generated@@576) $generated@@64)) (= ($generated@@132 $generated@@575 ($generated@@235 $generated@@576)) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@236 $generated@@575))) ($generated@@224 ($generated@@238 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@238 $generated@@575 $generated@@577))
))))
 :pattern ( ($generated@@132 $generated@@575 ($generated@@235 $generated@@576)))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@233 $generated@@145)) (or ($generated@@234 ($generated@@266 $generated@@578)) (and (not (= 0 $generated@@231)) (and ($generated@@132 $generated@@578 ($generated@@235 $generated@@46)) (< 10 ($generated@@236 ($generated@@266 $generated@@578))))))) (= ($generated@@232 ($generated@@266 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> true (forall (($generated@@580 Int) ($generated@@581 Int) )  (=> (= $generated@@581 (+ $generated@@579 $generated@@580)) (=> (and (and (<= ($generated@@239 0) $generated@@579) (< $generated@@579 $generated@@580)) (< $generated@@580 5)) (and (= ($generated ($generated@@237 $generated@@2 ($generated@@238 ($generated@@266 $generated@@578) $generated@@581))) ($generated ($generated@@237 $generated@@2 ($generated@@238 ($generated@@266 $generated@@578) $generated@@579)))) (= ($generated ($generated@@237 $generated@@2 ($generated@@238 ($generated@@266 $generated@@578) $generated@@579))) ($generated ($generated@@237 $generated@@2 ($generated@@238 ($generated@@266 $generated@@578) $generated@@580)))))))))
 :pattern ( ($generated@@237 $generated@@2 ($generated@@238 $generated@@578 $generated@@579)))
))))
 :weight 3
 :pattern ( ($generated@@232 ($generated@@266 $generated@@578)))
))))
(assert (forall (($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (= (type $generated@@583) ($generated@@233 $generated@@145)) (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@236 $generated@@583))) (< ($generated@@513 ($generated@@237 $generated@@136 ($generated@@238 $generated@@583 $generated@@584))) ($generated@@582 $generated@@583))))
 :pattern ( ($generated@@513 ($generated@@237 $generated@@136 ($generated@@238 $generated@@583 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@398 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@298 $generated@@585) ($generated@@255 $generated@@586)) ($generated@@132 ($generated@@341 $generated@@585) ($generated@@255 $generated@@587))) ($generated@@132 ($generated@@372 $generated@@585) ($generated@@255 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@398 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@132 $generated@@588 ($generated@@406 $generated@@589 $generated@@590))) (and (and ($generated@@132 ($generated@@316 $generated@@588) ($generated@@260 $generated@@589)) ($generated@@132 ($generated@@352 $generated@@588) ($generated@@260 $generated@@590))) ($generated@@132 ($generated@@380 $generated@@588) ($generated@@260 ($generated@@135 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@132 $generated@@588 ($generated@@406 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@2) ($generated@@132 $generated@@591 $generated@@46))
 :pattern ( ($generated@@132 $generated@@591 $generated@@46))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@3) ($generated@@132 $generated@@592 $generated@@47))
 :pattern ( ($generated@@132 $generated@@592 $generated@@47))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@4) ($generated@@132 $generated@@593 $generated@@44))
 :pattern ( ($generated@@132 $generated@@593 $generated@@44))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@438) ($generated@@132 $generated@@594 $generated@@45))
 :pattern ( ($generated@@132 $generated@@594 $generated@@45))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@145) ($generated@@132 $generated@@595 $generated@@48))
 :pattern ( ($generated@@132 $generated@@595 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@598) ($generated@@233 $generated@@145)) (= (type $generated@@601) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@602) $generated@@77)) (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@604) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@606 true))
(let (($generated@@607 true))
(let (($generated@@608  (=> (and (not (and (and (<= ($generated@@239 0) $generated@@596) (< $generated@@596 $generated@@597)) (< $generated@@597 5))) (= (ControlFlow 0 10) 4)) $generated@@607)))
(let (($generated@@609  (=> (and (and (<= ($generated@@239 0) $generated@@596) (< $generated@@596 $generated@@597)) (< $generated@@597 5)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@236 $generated@@598)))) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@236 $generated@@598))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@236 $generated@@598)))) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@236 $generated@@598))) (=> (= (ControlFlow 0 7) 4) $generated@@607))))))))
(let (($generated@@610  (=> (not (and (<= ($generated@@239 0) $generated@@596) (< $generated@@596 $generated@@597))) (and (=> (= (ControlFlow 0 12) 7) $generated@@609) (=> (= (ControlFlow 0 12) 10) $generated@@608)))))
(let (($generated@@611  (=> (and (<= ($generated@@239 0) $generated@@596) (< $generated@@596 $generated@@597)) (and (=> (= (ControlFlow 0 11) 7) $generated@@609) (=> (= (ControlFlow 0 11) 10) $generated@@608)))))
(let (($generated@@612  (=> (< $generated@@596 ($generated@@239 0)) (and (=> (= (ControlFlow 0 14) 11) $generated@@611) (=> (= (ControlFlow 0 14) 12) $generated@@610)))))
(let (($generated@@613  (=> (<= ($generated@@239 0) $generated@@596) (and (=> (= (ControlFlow 0 13) 11) $generated@@611) (=> (= (ControlFlow 0 13) 12) $generated@@610)))))
(let (($generated@@614  (and (=> (= (ControlFlow 0 15) 13) $generated@@613) (=> (= (ControlFlow 0 15) 14) $generated@@612))))
(let (($generated@@615  (=> (forall (($generated@@616 Int) ($generated@@617 Int) )  (=> (= $generated@@617 (+ $generated@@596 $generated@@616)) (=> (and (and (<= ($generated@@239 0) $generated@@596) (< $generated@@596 $generated@@616)) (< $generated@@616 5)) (= ($generated ($generated@@237 $generated@@2 ($generated@@238 $generated@@598 $generated@@617))) ($generated ($generated@@237 $generated@@2 ($generated@@238 $generated@@598 $generated@@596))))))) (and (=> (= (ControlFlow 0 16) 15) $generated@@614) (=> (= (ControlFlow 0 16) 6) $generated@@606)))))
(let (($generated@@618  (=> (and (not (forall (($generated@@619 Int) ($generated@@620 Int) )  (=> (= $generated@@620 (+ $generated@@596 $generated@@619)) (=> (and (and (<= ($generated@@239 0) $generated@@596) (< $generated@@596 $generated@@619)) (< $generated@@619 5)) (= ($generated ($generated@@237 $generated@@2 ($generated@@238 $generated@@598 $generated@@620))) ($generated ($generated@@237 $generated@@2 ($generated@@238 $generated@@598 $generated@@596)))))))) (= (ControlFlow 0 5) 4)) $generated@@607)))
(let (($generated@@621  (=> (not (and (and (<= ($generated@@239 0) $generated@@596) (< $generated@@596 $generated@@599)) (< $generated@@599 5))) (and (=> (= (ControlFlow 0 21) 16) $generated@@615) (=> (= (ControlFlow 0 21) 5) $generated@@618)))))
(let (($generated@@622  (=> (and (and (<= ($generated@@239 0) $generated@@596) (< $generated@@596 $generated@@599)) (< $generated@@599 5)) (and (=> (= (ControlFlow 0 18) (- 0 20)) (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@236 $generated@@598)))) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@236 $generated@@598))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@236 $generated@@598)))) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@236 $generated@@598))) (and (=> (= (ControlFlow 0 18) 16) $generated@@615) (=> (= (ControlFlow 0 18) 5) $generated@@618)))))))))
(let (($generated@@623  (=> (not (and (<= ($generated@@239 0) $generated@@596) (< $generated@@596 $generated@@599))) (and (=> (= (ControlFlow 0 23) 18) $generated@@622) (=> (= (ControlFlow 0 23) 21) $generated@@621)))))
(let (($generated@@624  (=> (and (<= ($generated@@239 0) $generated@@596) (< $generated@@596 $generated@@599)) (and (=> (= (ControlFlow 0 22) 18) $generated@@622) (=> (= (ControlFlow 0 22) 21) $generated@@621)))))
(let (($generated@@625  (=> (< $generated@@596 ($generated@@239 0)) (and (=> (= (ControlFlow 0 25) 22) $generated@@624) (=> (= (ControlFlow 0 25) 23) $generated@@623)))))
(let (($generated@@626  (=> (<= ($generated@@239 0) $generated@@596) (and (=> (= (ControlFlow 0 24) 22) $generated@@624) (=> (= (ControlFlow 0 24) 23) $generated@@623)))))
(let (($generated@@627  (=> (= $generated@@600 (+ $generated@@596 $generated@@599)) (and (=> (= (ControlFlow 0 26) 24) $generated@@626) (=> (= (ControlFlow 0 26) 25) $generated@@625)))))
(let (($generated@@628  (=> (not (= $generated@@600 (+ $generated@@596 $generated@@599))) (and (=> (= (ControlFlow 0 17) 16) $generated@@615) (=> (= (ControlFlow 0 17) 5) $generated@@618)))))
(let (($generated@@629  (and (=> (= (ControlFlow 0 27) 26) $generated@@627) (=> (= (ControlFlow 0 27) 17) $generated@@628))))
(let (($generated@@630 true))
(let (($generated@@631  (and (=> (= (ControlFlow 0 28) 27) $generated@@629) (=> (= (ControlFlow 0 28) 3) $generated@@630))))
(let (($generated@@632 true))
(let (($generated@@633  (=> (= $generated@@601 ($generated@@211 $generated@@602 $generated@@603 $generated@@60 false)) (and (=> (= (ControlFlow 0 29) 28) $generated@@631) (=> (= (ControlFlow 0 29) 2) $generated@@632)))))
(let (($generated@@634 true))
(let (($generated@@635  (=> (and (= $generated@@604 ($generated@@156 $generated@@602 $generated@@603 $generated@@60 false)) (< 10 ($generated@@236 $generated@@598))) (and (=> (= (ControlFlow 0 30) 1) $generated@@634) (=> (= (ControlFlow 0 30) 29) $generated@@633)))))
(let (($generated@@636  (=> (and (and (and ($generated@@270 $generated@@603) ($generated@@605 $generated@@603)) ($generated@@132 $generated@@598 ($generated@@235 $generated@@46))) (and (= 0 $generated@@231) (= (ControlFlow 0 31) 30))) $generated@@635)))
$generated@@636))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () Int)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 (T@U) Int)
(declare-fun $generated@@237 (T@T T@U) T@U)
(declare-fun $generated@@238 (T@U Int) T@U)
(declare-fun $generated@@239 (Int) Int)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert  (and (and (and (and (forall (($generated@@241 T@T) ) (= ($generated@@1 ($generated@@233 $generated@@241)) 17)) (forall (($generated@@242 T@T) ) (! (= ($generated@@240 ($generated@@233 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@233 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (= (type ($generated@@235 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@243))
))) (forall (($generated@@244 T@T) ($generated@@245 T@U) ) (! (= (type ($generated@@237 $generated@@244 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@237 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@U) ($generated@@247 Int) ) (! (let (($generated@@248 ($generated@@240 (type $generated@@246))))
(= (type ($generated@@238 $generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@238 $generated@@246 $generated@@247))
))))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@233 $generated@@145)) (or ($generated@@234 $generated@@249) (and (not (= 0 $generated@@231)) (and ($generated@@132 $generated@@249 ($generated@@235 $generated@@46)) (< 10 ($generated@@236 $generated@@249)))))) (= ($generated@@232 $generated@@249) (forall (($generated@@250 Int) ($generated@@251 Int) ) (!  (=> true (=> (and (and (<= ($generated@@239 0) $generated@@250) (< $generated@@250 $generated@@251)) (< $generated@@251 5)) (= ($generated ($generated@@237 $generated@@2 ($generated@@238 $generated@@249 (+ $generated@@250 $generated@@251)))) (+ ($generated ($generated@@237 $generated@@2 ($generated@@238 $generated@@249 $generated@@250))) ($generated ($generated@@237 $generated@@2 ($generated@@238 $generated@@249 $generated@@251)))))))
 :pattern ( ($generated@@237 $generated@@2 ($generated@@238 $generated@@249 $generated@@250)) ($generated@@237 $generated@@2 ($generated@@238 $generated@@249 $generated@@251)))
))))
 :pattern ( ($generated@@232 $generated@@249))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@136) (= (type $generated@@253) $generated@@136)) (= ($generated@@142 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@142 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@257) $generated@@64)) (= ($generated@@132 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@145) ($generated@@0 ($generated@@81 $generated@@256 $generated@@258))) ($generated@@224 $generated@@258 $generated@@257))
 :pattern ( ($generated@@81 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@132 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@64)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@262) $generated@@64)) (= ($generated@@132 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@145) ($generated@@0 ($generated@@81 $generated@@261 $generated@@263))) ($generated@@224 $generated@@263 $generated@@262))
 :pattern ( ($generated@@81 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@132 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@239 $generated@@264) $generated@@264)
 :pattern ( ($generated@@239 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) $generated@@64)) (= (type $generated@@273) $generated@@145)) (= (type $generated@@274) $generated@@145)) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@269 $generated@@275)) (= ($generated@@74 ($generated@@223 $generated@@273 $generated@@274) ($generated@@135 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@273 $generated@@274) ($generated@@135 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@136) (= ($generated@@134 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@136) ($generated@@134 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@145) (= (type $generated@@281) $generated@@145)) (= $generated@@279 ($generated@@223 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@134 $generated@@279))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@233 $generated@@283))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@236 ($generated@@282 $generated@@284)) 0)
 :pattern ( ($generated@@282 $generated@@284))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) ($generated@@233 $generated@@145)) (or ($generated@@234 $generated@@285) (and (not (= 0 $generated@@231)) (and ($generated@@132 $generated@@285 ($generated@@235 $generated@@46)) (< 10 ($generated@@236 $generated@@285)))))) true)
 :pattern ( ($generated@@232 $generated@@285))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@145)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@270 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@74 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@270 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@76 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@79 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@81 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@151 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@151 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(let (($generated@@338 ($generated@@300 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@299 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@298 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@297 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@301 (type $generated@@343))))
(let (($generated@@345 ($generated@@300 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@299 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@298 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@319 (type $generated@@347))))
(let (($generated@@349 ($generated@@318 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@317 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@316 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@315 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@76 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@319 (type $generated@@354))))
(let (($generated@@356 ($generated@@318 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@317 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@316 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@359) $generated@@64)) (= ($generated@@132 $generated@@358 ($generated@@150 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@358 $generated@@360)))) ($generated@@224 $generated@@360 $generated@@359))
 :pattern ( ($generated@@81 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@132 $generated@@358 ($generated@@150 $generated@@359)))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@233 $generated@@145)) (or ($generated@@234 ($generated@@265 $generated@@361)) (and (not (= 0 $generated@@231)) (and ($generated@@132 $generated@@361 ($generated@@235 $generated@@46)) (< 10 ($generated@@236 ($generated@@265 $generated@@361))))))) (= ($generated@@232 ($generated@@265 $generated@@361)) (forall (($generated@@362 Int) ($generated@@363 Int) ) (!  (=> true (=> (and (and (<= ($generated@@239 0) $generated@@362) (< $generated@@362 $generated@@363)) (< $generated@@363 5)) (= ($generated ($generated@@237 $generated@@2 ($generated@@238 ($generated@@265 $generated@@361) (+ $generated@@362 $generated@@363)))) (+ ($generated ($generated@@237 $generated@@2 ($generated@@238 ($generated@@265 $generated@@361) $generated@@362))) ($generated ($generated@@237 $generated@@2 ($generated@@238 ($generated@@265 $generated@@361) $generated@@363)))))))
 :pattern ( ($generated@@237 $generated@@2 ($generated@@238 $generated@@361 $generated@@362)) ($generated@@237 $generated@@2 ($generated@@238 $generated@@361 $generated@@363)))
))))
 :weight 3
 :pattern ( ($generated@@232 ($generated@@265 $generated@@361)))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@254 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@145) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@270 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@254 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@259 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@145) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@270 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@259 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@292 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@292 $generated@@373) $generated@@372)))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@301 (type $generated@@377))))
(let (($generated@@379 ($generated@@300 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@380) ($generated@@143 ($generated@@237 $generated@@136 $generated@@381)))) (= ($generated@@81 ($generated@@375 $generated@@380) ($generated@@143 ($generated@@237 $generated@@136 $generated@@381))) ($generated@@144 ($generated@@237 $generated@@136 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@319 (type $generated@@385))))
(let (($generated@@387 ($generated@@318 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@76 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@388) ($generated@@143 ($generated@@237 $generated@@136 $generated@@389)))) (= ($generated@@81 ($generated@@383 $generated@@388) ($generated@@143 ($generated@@237 $generated@@136 $generated@@389))) ($generated@@144 ($generated@@237 $generated@@136 $generated@@389))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@300 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@299 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@375 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@318 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@317 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@403) $generated@@407))) (and ($generated@@270 ($generated@@81 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@270 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@64)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@411) $generated@@415))) (and ($generated@@270 ($generated@@81 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@270 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@76 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@319 (type $generated@@418))))
(let (($generated@@420 ($generated@@318 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@317 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@316 $generated@@420 $generated@@419)) (= ($generated@@315 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@315 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@319 (type $generated@@421))))
(let (($generated@@423 ($generated@@318 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@317 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@316 $generated@@423 $generated@@422)) (= ($generated@@351 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@351 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@319 (type $generated@@424))))
(let (($generated@@426 ($generated@@318 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@317 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@316 $generated@@426 $generated@@425)) (= ($generated@@382 $generated@@424) ($generated@@416 $generated@@145))))))
 :pattern ( ($generated@@382 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@301 (type $generated@@427))))
(let (($generated@@429 ($generated@@300 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@299 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@298 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@145) (= (type $generated@@431) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@427) ($generated@@286 ($generated@@223 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@374 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@319 (type $generated@@432))))
(let (($generated@@434 ($generated@@318 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@317 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@316 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@145) (= (type $generated@@436) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@432) ($generated@@286 ($generated@@223 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@382 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@224 $generated@@437 $generated@@46)) (and (= ($generated@@286 ($generated@@237 $generated@@2 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@237 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@224 $generated@@438 $generated@@47)) (and (= ($generated@@286 ($generated@@237 $generated@@3 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@237 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@224 $generated@@439 $generated@@44)) (and (= ($generated@@286 ($generated@@237 $generated@@4 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@237 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 20))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) ($generated@@224 $generated@@441 $generated@@45)) (and (= ($generated@@286 ($generated@@237 $generated@@440 $generated@@441)) $generated@@441) ($generated@@132 ($generated@@237 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@64) (= ($generated@@224 ($generated@@286 $generated@@442) $generated@@443) ($generated@@132 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@224 ($generated@@286 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@79 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@76 $generated@@445 $generated@@2)) (<= 0 ($generated@@291 $generated@@444))))
 :pattern ( ($generated@@291 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@240 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@233 $generated@@447)) (<= 0 ($generated@@236 $generated@@446))))
 :pattern ( ($generated@@236 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@400 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@400 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@400 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@400 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@456 $generated@@457)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@408 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@408 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@408 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@72 ($generated@@408 $generated@@466 $generated@@467)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@145)) (= ($generated@@276 ($generated@@223 $generated@@468 $generated@@469)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@135 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@135 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@135 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@135 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@145) (= (type $generated@@479) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@223 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@145) (= (type $generated@@481) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@223 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@233 $generated@@145)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@235 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@236 $generated@@482))) ($generated@@270 ($generated@@238 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@238 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@235 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@75 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@75 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@254 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@254 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@259 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@259 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@259 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@150 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@150 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@235 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@235 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@235 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@237 $generated@@505 ($generated@@286 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@286 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) (= ($generated@@132 $generated@@506 ($generated@@400 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@506) $generated@@509))) (and ($generated@@224 ($generated@@81 ($generated@@375 $generated@@506) $generated@@509) $generated@@508) ($generated@@224 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@506) $generated@@509))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@132 $generated@@506 ($generated@@400 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) (= ($generated@@132 $generated@@510 ($generated@@408 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@510) $generated@@513))) (and ($generated@@224 ($generated@@81 ($generated@@383 $generated@@510) $generated@@513) $generated@@512) ($generated@@224 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@510) $generated@@513))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@132 $generated@@510 ($generated@@408 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@145) (= (type $generated@@517) $generated@@145)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@223 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@223 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@145)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@223 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@223 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) ($generated@@224 $generated@@520 ($generated@@400 $generated@@521 $generated@@522))) (and (= ($generated@@286 ($generated@@237 ($generated@@299 $generated@@145 $generated@@145) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@237 ($generated@@299 $generated@@145 $generated@@145) $generated@@520) ($generated@@400 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@224 $generated@@520 ($generated@@400 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@224 $generated@@523 ($generated@@408 $generated@@524 $generated@@525))) (and (= ($generated@@286 ($generated@@237 ($generated@@317 $generated@@145 $generated@@145) $generated@@523)) $generated@@523) ($generated@@132 ($generated@@237 ($generated@@317 $generated@@145 $generated@@145) $generated@@523) ($generated@@408 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@224 $generated@@523 ($generated@@408 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@145)) ($generated@@224 $generated@@528 ($generated@@135 $generated@@526 $generated@@527))) (and (= ($generated@@286 ($generated@@237 $generated@@136 $generated@@528)) $generated@@528) ($generated@@132 ($generated@@237 $generated@@136 $generated@@528) ($generated@@135 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@224 $generated@@528 ($generated@@135 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@81 ($generated@@416 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@81 ($generated@@416 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@69)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@533 $generated@@534)) $generated@@62) (= ($generated@@531 ($generated@@135 $generated@@533 $generated@@534)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@136) (= ($generated@@514 ($generated@@286 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@286 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@145) ($generated@@224 $generated@@536 ($generated@@75 0))) (and (= ($generated@@286 ($generated@@237 $generated@@2 $generated@@536)) $generated@@536) ($generated@@132 ($generated@@237 ($generated@@76 $generated@@145 $generated@@4) $generated@@536) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@536 ($generated@@75 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) ($generated@@224 $generated@@537 ($generated@@254 $generated@@538))) (and (= ($generated@@286 ($generated@@237 ($generated@@76 $generated@@145 $generated@@4) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@237 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@254 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@254 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@224 $generated@@539 ($generated@@259 $generated@@540))) (and (= ($generated@@286 ($generated@@237 ($generated@@76 $generated@@145 $generated@@4) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@237 ($generated@@76 $generated@@145 $generated@@4) $generated@@539) ($generated@@259 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@259 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@224 $generated@@541 ($generated@@150 $generated@@542))) (and (= ($generated@@286 ($generated@@237 ($generated@@76 $generated@@145 $generated@@2) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@237 ($generated@@76 $generated@@145 $generated@@2) $generated@@541) ($generated@@150 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@150 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@64)) ($generated@@224 $generated@@543 ($generated@@235 $generated@@544))) (and (= ($generated@@286 ($generated@@237 ($generated@@233 $generated@@145) $generated@@543)) $generated@@543) ($generated@@132 ($generated@@237 ($generated@@233 $generated@@145) $generated@@543) ($generated@@235 $generated@@544))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@235 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@545 ($generated@@150 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@545 $generated@@548)))) ($generated@@270 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@81 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@74 $generated@@545 ($generated@@150 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@136) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@551) (and ($generated@@134 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@64) ($generated@@74 $generated@@549 ($generated@@135 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@135 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@270 ($generated@@143 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@270 ($generated@@143 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@136) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@555) (and ($generated@@134 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@64) ($generated@@74 $generated@@553 ($generated@@135 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@135 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@270 ($generated@@144 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@270 ($generated@@144 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@145) (= (type $generated@@558) $generated@@145)) (= ($generated@@223 ($generated@@265 $generated@@557) ($generated@@265 $generated@@558)) ($generated@@265 ($generated@@223 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@223 ($generated@@265 $generated@@557) ($generated@@265 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@239 $generated@@559))) ($generated@@265 ($generated@@286 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@239 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@286 ($generated@@265 $generated@@560)) ($generated@@265 ($generated@@286 $generated@@560)))
 :pattern ( ($generated@@286 ($generated@@265 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@240 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@233 $generated@@562)) (= ($generated@@236 $generated@@561) 0)) (= $generated@@561 ($generated@@282 $generated@@562))))
 :pattern ( ($generated@@236 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@76 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@291 ($generated@@82 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@291 $generated@@563) ($generated ($generated@@81 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@291 ($generated@@82 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@2)) ($generated@@74 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@3)) ($generated@@74 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@4)) ($generated@@74 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@440)) ($generated@@74 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@145)) ($generated@@74 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@233 $generated@@145)) (= (type $generated@@578) $generated@@64)) (= ($generated@@132 $generated@@577 ($generated@@235 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@236 $generated@@577))) ($generated@@224 ($generated@@238 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@238 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@132 $generated@@577 ($generated@@235 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@233 $generated@@145)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@236 $generated@@581))) (< ($generated@@515 ($generated@@237 $generated@@136 ($generated@@238 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@237 $generated@@136 ($generated@@238 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) $generated@@64)) ($generated@@132 $generated@@583 ($generated@@400 $generated@@584 $generated@@585))) (and (and ($generated@@132 ($generated@@297 $generated@@583) ($generated@@254 $generated@@584)) ($generated@@132 ($generated@@340 $generated@@583) ($generated@@254 $generated@@585))) ($generated@@132 ($generated@@374 $generated@@583) ($generated@@254 ($generated@@135 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@132 $generated@@583 ($generated@@400 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) ($generated@@132 $generated@@586 ($generated@@408 $generated@@587 $generated@@588))) (and (and ($generated@@132 ($generated@@315 $generated@@586) ($generated@@259 $generated@@587)) ($generated@@132 ($generated@@351 $generated@@586) ($generated@@259 $generated@@588))) ($generated@@132 ($generated@@382 $generated@@586) ($generated@@259 ($generated@@135 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@132 $generated@@586 ($generated@@408 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@132 $generated@@589 $generated@@46))
 :pattern ( ($generated@@132 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@132 $generated@@590 $generated@@47))
 :pattern ( ($generated@@132 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@132 $generated@@591 $generated@@44))
 :pattern ( ($generated@@132 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@440) ($generated@@132 $generated@@592 $generated@@45))
 :pattern ( ($generated@@132 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@145) ($generated@@132 $generated@@593 $generated@@48))
 :pattern ( ($generated@@132 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@596) ($generated@@233 $generated@@145)) (= (type $generated@@597) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@598) $generated@@77)) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@600) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@602 true))
(let (($generated@@603  (=> (and (not (and (and (<= ($generated@@239 0) $generated@@594) (< $generated@@594 $generated@@595)) (< $generated@@595 5))) (= (ControlFlow 0 8) 3)) $generated@@602)))
(let (($generated@@604  (=> (and (and (<= ($generated@@239 0) $generated@@594) (< $generated@@594 $generated@@595)) (< $generated@@595 5)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (and (<= 0 (+ $generated@@594 $generated@@595)) (< (+ $generated@@594 $generated@@595) ($generated@@236 $generated@@596)))) (=> (and (<= 0 (+ $generated@@594 $generated@@595)) (< (+ $generated@@594 $generated@@595) ($generated@@236 $generated@@596))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@236 $generated@@596)))) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@236 $generated@@596))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@236 $generated@@596)))) (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@236 $generated@@596))) (=> (= (ControlFlow 0 4) 3) $generated@@602))))))))))
(let (($generated@@605  (=> (not (and (<= ($generated@@239 0) $generated@@594) (< $generated@@594 $generated@@595))) (and (=> (= (ControlFlow 0 10) 4) $generated@@604) (=> (= (ControlFlow 0 10) 8) $generated@@603)))))
(let (($generated@@606  (=> (and (<= ($generated@@239 0) $generated@@594) (< $generated@@594 $generated@@595)) (and (=> (= (ControlFlow 0 9) 4) $generated@@604) (=> (= (ControlFlow 0 9) 8) $generated@@603)))))
(let (($generated@@607  (=> (< $generated@@594 ($generated@@239 0)) (and (=> (= (ControlFlow 0 12) 9) $generated@@606) (=> (= (ControlFlow 0 12) 10) $generated@@605)))))
(let (($generated@@608  (=> (<= ($generated@@239 0) $generated@@594) (and (=> (= (ControlFlow 0 11) 9) $generated@@606) (=> (= (ControlFlow 0 11) 10) $generated@@605)))))
(let (($generated@@609  (and (=> (= (ControlFlow 0 13) 11) $generated@@608) (=> (= (ControlFlow 0 13) 12) $generated@@607))))
(let (($generated@@610 true))
(let (($generated@@611  (=> (= $generated@@597 ($generated@@211 $generated@@598 $generated@@599 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@609) (=> (= (ControlFlow 0 14) 2) $generated@@610)))))
(let (($generated@@612 true))
(let (($generated@@613  (=> (and (= $generated@@600 ($generated@@156 $generated@@598 $generated@@599 $generated@@60 false)) (< 10 ($generated@@236 $generated@@596))) (and (=> (= (ControlFlow 0 15) 1) $generated@@612) (=> (= (ControlFlow 0 15) 14) $generated@@611)))))
(let (($generated@@614  (=> (and (and (and ($generated@@269 $generated@@599) ($generated@@601 $generated@@599)) ($generated@@132 $generated@@596 ($generated@@235 $generated@@46))) (and (= 0 $generated@@231) (= (ControlFlow 0 16) 15))) $generated@@613)))
$generated@@614))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@U) Int)
(declare-fun $generated@@230 (T@T T@U) T@U)
(declare-fun $generated@@231 (T@U Int) T@U)
(declare-fun $generated@@232 (Int) Int)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (and (and (and (and (forall (($generated@@234 T@T) ) (= ($generated@@1 ($generated@@226 $generated@@234)) 17)) (forall (($generated@@235 T@T) ) (! (= ($generated@@233 ($generated@@226 $generated@@235)) $generated@@235)
 :pattern ( ($generated@@226 $generated@@235))
))) (forall (($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(= (type ($generated@@225 $generated@@236)) $generated@@237))
 :pattern ( ($generated@@225 $generated@@236))
))) (forall (($generated@@238 T@U) ) (! (= (type ($generated@@228 $generated@@238)) $generated@@64)
 :pattern ( ($generated@@228 $generated@@238))
))) (forall (($generated@@239 T@T) ($generated@@240 T@U) ) (! (= (type ($generated@@230 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@230 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@U) ($generated@@242 Int) ) (! (let (($generated@@243 ($generated@@233 (type $generated@@241))))
(= (type ($generated@@231 $generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@231 $generated@@241 $generated@@242))
))))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@226 $generated@@145)) (or ($generated@@227 ($generated@@225 $generated@@244)) (and (not (= 0 $generated@@223)) (and ($generated@@132 $generated@@244 ($generated@@228 $generated@@46)) (< 10 ($generated@@229 ($generated@@225 $generated@@244))))))) (= ($generated@@224 ($generated@@225 $generated@@244)) (forall (($generated@@245 Int) ($generated@@246 Int) ($generated@@247 Int) ) (!  (=> (= $generated@@247 (+ $generated@@245 $generated@@246)) (=> (and (and (<= ($generated@@232 0) $generated@@245) (< $generated@@245 $generated@@246)) (< $generated@@246 5)) (= ($generated ($generated@@230 $generated@@2 ($generated@@231 ($generated@@225 $generated@@244) $generated@@247))) (+ ($generated ($generated@@230 $generated@@2 ($generated@@231 ($generated@@225 $generated@@244) $generated@@245))) ($generated ($generated@@230 $generated@@2 ($generated@@231 ($generated@@225 $generated@@244) $generated@@246)))))))
 :pattern ( ($generated@@230 $generated@@2 ($generated@@231 $generated@@244 $generated@@246)) ($generated@@230 $generated@@2 ($generated@@231 $generated@@244 $generated@@245)) ($generated@@230 $generated@@2 ($generated@@231 $generated@@244 $generated@@247)))
))))
 :weight 3
 :pattern ( ($generated@@224 ($generated@@225 $generated@@244)))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@250 $generated@@251)) $generated@@136)
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) $generated@@145)) (= ($generated@@132 ($generated@@248 $generated@@254 $generated@@255) ($generated@@135 $generated@@252 $generated@@253))  (and ($generated@@249 $generated@@254 $generated@@252) ($generated@@249 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@132 ($generated@@248 $generated@@254 $generated@@255) ($generated@@135 $generated@@252 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@136) (= (type $generated@@257) $generated@@136)) (= ($generated@@142 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@142 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@64)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@261) $generated@@64)) (= ($generated@@132 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@145) ($generated@@0 ($generated@@81 $generated@@260 $generated@@262))) ($generated@@249 $generated@@262 $generated@@261))
 :pattern ( ($generated@@81 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@132 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@64)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@266) $generated@@64)) (= ($generated@@132 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@145) ($generated@@0 ($generated@@81 $generated@@265 $generated@@267))) ($generated@@249 $generated@@267 $generated@@266))
 :pattern ( ($generated@@81 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@132 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@232 $generated@@268) $generated@@268)
 :pattern ( ($generated@@232 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@225 $generated@@269) $generated@@269)
 :pattern ( ($generated@@225 $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@64) (= (type $generated@@273) $generated@@64)) (= (type $generated@@274) $generated@@145)) (= (type $generated@@275) $generated@@145)) (= (type $generated@@276) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@270 $generated@@276)) (= ($generated@@74 ($generated@@248 $generated@@274 $generated@@275) ($generated@@135 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@74 ($generated@@248 $generated@@274 $generated@@275) ($generated@@135 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@68)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@136) (= ($generated@@134 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@136) ($generated@@134 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@145) (= (type $generated@@282) $generated@@145)) (= $generated@@280 ($generated@@248 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@134 $generated@@280))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@226 $generated@@284))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@229 ($generated@@283 $generated@@285)) 0)
 :pattern ( ($generated@@283 $generated@@285))
)))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@226 $generated@@145)) (or ($generated@@227 $generated@@286) (and (not (= 0 $generated@@223)) (and ($generated@@132 $generated@@286 ($generated@@228 $generated@@46)) (< 10 ($generated@@229 $generated@@286)))))) true)
 :pattern ( ($generated@@224 $generated@@286))
))))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@145)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@64) (= (type $generated@@291) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@271 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@74 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@271 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@76 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@79 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@76 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@81 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@76 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@81 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@81 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@81 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@81 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@79 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@76 $generated@@335 $generated@@2)) (= ($generated@@151 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@81 $generated@@334 $generated@@336))) (<= ($generated ($generated@@81 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@151 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@302 (type $generated@@337))))
(let (($generated@@339 ($generated@@301 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@300 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@299 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@298 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@302 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@302 (type $generated@@344))))
(let (($generated@@346 ($generated@@301 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@300 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@299 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@320 (type $generated@@348))))
(let (($generated@@350 ($generated@@319 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@318 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@317 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@316 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@320 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@76 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@320 (type $generated@@355))))
(let (($generated@@357 ($generated@@319 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@318 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@317 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@360) $generated@@64)) (= ($generated@@132 $generated@@359 ($generated@@150 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@359 $generated@@361)))) ($generated@@249 $generated@@361 $generated@@360))
 :pattern ( ($generated@@81 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@132 $generated@@359 ($generated@@150 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@362 ($generated@@258 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@145) ($generated@@0 ($generated@@81 $generated@@362 $generated@@365))) ($generated@@271 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@74 $generated@@362 ($generated@@258 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@366 ($generated@@263 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@145) ($generated@@0 ($generated@@81 $generated@@366 $generated@@369))) ($generated@@271 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@81 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@74 $generated@@366 ($generated@@263 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@81 ($generated@@293 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@81 ($generated@@293 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@302 (type $generated@@375))))
(let (($generated@@377 ($generated@@301 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@379) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@298 $generated@@378) ($generated@@143 ($generated@@230 $generated@@136 $generated@@379)))) (= ($generated@@81 ($generated@@373 $generated@@378) ($generated@@143 ($generated@@230 $generated@@136 $generated@@379))) ($generated@@144 ($generated@@230 $generated@@136 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@320 (type $generated@@383))))
(let (($generated@@385 ($generated@@319 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@387) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@81 ($generated@@316 $generated@@386) ($generated@@143 ($generated@@230 $generated@@136 $generated@@387)))) (= ($generated@@81 ($generated@@381 $generated@@386) ($generated@@143 ($generated@@230 $generated@@136 $generated@@387))) ($generated@@144 ($generated@@230 $generated@@136 $generated@@387))))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@301 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@300 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@298 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@319 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@318 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@316 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@401) $generated@@405))) (and ($generated@@271 ($generated@@81 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@271 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@64)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@409) $generated@@413))) (and ($generated@@271 ($generated@@81 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@271 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@76 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@320 (type $generated@@416))))
(let (($generated@@418 ($generated@@319 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@318 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@317 $generated@@418 $generated@@417)) (= ($generated@@316 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@316 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@320 (type $generated@@419))))
(let (($generated@@421 ($generated@@319 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@318 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@317 $generated@@421 $generated@@420)) (= ($generated@@352 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@352 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@320 (type $generated@@422))))
(let (($generated@@424 ($generated@@319 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@318 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@317 $generated@@424 $generated@@423)) (= ($generated@@380 $generated@@422) ($generated@@414 $generated@@145))))))
 :pattern ( ($generated@@380 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@302 (type $generated@@425))))
(let (($generated@@427 ($generated@@301 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@300 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@299 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@145) (= (type $generated@@429) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@425) ($generated@@287 ($generated@@248 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@372 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@320 (type $generated@@430))))
(let (($generated@@432 ($generated@@319 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@318 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@317 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@145) (= (type $generated@@434) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@430) ($generated@@287 ($generated@@248 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@380 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@145) ($generated@@249 $generated@@435 $generated@@46)) (and (= ($generated@@287 ($generated@@230 $generated@@2 $generated@@435)) $generated@@435) ($generated@@132 ($generated@@230 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@249 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@249 $generated@@436 $generated@@47)) (and (= ($generated@@287 ($generated@@230 $generated@@3 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@230 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@249 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@249 $generated@@437 $generated@@44)) (and (= ($generated@@287 ($generated@@230 $generated@@4 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@230 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@249 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@249 $generated@@439 $generated@@45)) (and (= ($generated@@287 ($generated@@230 $generated@@438 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@230 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@249 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@64) (= ($generated@@249 ($generated@@287 $generated@@440) $generated@@441) ($generated@@132 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@249 ($generated@@287 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@79 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@76 $generated@@443 $generated@@2)) (<= 0 ($generated@@292 $generated@@442))))
 :pattern ( ($generated@@292 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@233 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@226 $generated@@445)) (<= 0 ($generated@@229 $generated@@444))))
 :pattern ( ($generated@@229 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@398 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@398 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@398 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@406 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@406 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@406 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@406 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) (= (type $generated@@467) $generated@@145)) (= ($generated@@277 ($generated@@248 $generated@@466 $generated@@467)) $generated@@61))
 :pattern ( ($generated@@248 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@135 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@135 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@135 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@135 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@145) (= (type $generated@@477) $generated@@145)) (= ($generated@@143 ($generated@@248 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@248 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@145) (= (type $generated@@479) $generated@@145)) (= ($generated@@144 ($generated@@248 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@248 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@226 $generated@@145)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@228 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@229 $generated@@480))) ($generated@@271 ($generated@@231 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@231 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@228 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@75 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@75 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@258 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@258 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@258 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@263 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@263 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@263 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@150 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@150 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@228 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@228 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@228 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@228 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated@@230 $generated@@503 ($generated@@287 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@287 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@132 $generated@@504 ($generated@@398 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@504) $generated@@507))) (and ($generated@@249 ($generated@@81 ($generated@@373 $generated@@504) $generated@@507) $generated@@506) ($generated@@249 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@132 $generated@@504 ($generated@@398 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@132 $generated@@508 ($generated@@406 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@508) $generated@@511))) (and ($generated@@249 ($generated@@81 ($generated@@381 $generated@@508) $generated@@511) $generated@@510) ($generated@@249 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@508) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@132 $generated@@508 ($generated@@406 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@145)) (< ($generated@@512 $generated@@514) ($generated@@513 ($generated@@248 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@248 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@145) (= (type $generated@@517) $generated@@145)) (< ($generated@@512 $generated@@517) ($generated@@513 ($generated@@248 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@248 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) ($generated@@249 $generated@@518 ($generated@@398 $generated@@519 $generated@@520))) (and (= ($generated@@287 ($generated@@230 ($generated@@300 $generated@@145 $generated@@145) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@230 ($generated@@300 $generated@@145 $generated@@145) $generated@@518) ($generated@@398 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@249 $generated@@518 ($generated@@398 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@249 $generated@@521 ($generated@@406 $generated@@522 $generated@@523))) (and (= ($generated@@287 ($generated@@230 ($generated@@318 $generated@@145 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@230 ($generated@@318 $generated@@145 $generated@@145) $generated@@521) ($generated@@406 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@249 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@145)) ($generated@@249 $generated@@526 ($generated@@135 $generated@@524 $generated@@525))) (and (= ($generated@@287 ($generated@@230 $generated@@136 $generated@@526)) $generated@@526) ($generated@@132 ($generated@@230 $generated@@136 $generated@@526) ($generated@@135 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@249 $generated@@526 ($generated@@135 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (not ($generated@@0 ($generated@@81 ($generated@@414 $generated@@528) $generated@@527))))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@81 ($generated@@414 $generated@@528) $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@135 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@531 $generated@@532))
)))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) ($generated@@226 $generated@@145)) (or ($generated@@227 $generated@@533) (and (not (= 0 $generated@@223)) (and ($generated@@132 $generated@@533 ($generated@@228 $generated@@46)) (< 10 ($generated@@229 $generated@@533)))))) (= ($generated@@224 $generated@@533) (forall (($generated@@534 Int) ($generated@@535 Int) ($generated@@536 Int) ) (!  (=> (= $generated@@536 (+ $generated@@534 $generated@@535)) (=> (and (and (<= ($generated@@232 0) $generated@@534) (< $generated@@534 $generated@@535)) (< $generated@@535 5)) (= ($generated ($generated@@230 $generated@@2 ($generated@@231 $generated@@533 $generated@@536))) (+ ($generated ($generated@@230 $generated@@2 ($generated@@231 $generated@@533 $generated@@534))) ($generated ($generated@@230 $generated@@2 ($generated@@231 $generated@@533 $generated@@535)))))))
 :pattern ( ($generated@@230 $generated@@2 ($generated@@231 $generated@@533 $generated@@535)) ($generated@@230 $generated@@2 ($generated@@231 $generated@@533 $generated@@534)) ($generated@@230 $generated@@2 ($generated@@231 $generated@@533 $generated@@536)))
))))
 :pattern ( ($generated@@224 $generated@@533))
))))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@136) (= ($generated@@512 ($generated@@287 $generated@@537)) ($generated@@513 $generated@@537)))
 :pattern ( ($generated@@512 ($generated@@287 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) ($generated@@249 $generated@@538 ($generated@@75 0))) (and (= ($generated@@287 ($generated@@230 $generated@@2 $generated@@538)) $generated@@538) ($generated@@132 ($generated@@230 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@75 0))))
 :pattern ( ($generated@@249 $generated@@538 ($generated@@75 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@249 $generated@@539 ($generated@@258 $generated@@540))) (and (= ($generated@@287 ($generated@@230 ($generated@@76 $generated@@145 $generated@@4) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@230 ($generated@@76 $generated@@145 $generated@@4) $generated@@539) ($generated@@258 $generated@@540))))
 :pattern ( ($generated@@249 $generated@@539 ($generated@@258 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@249 $generated@@541 ($generated@@263 $generated@@542))) (and (= ($generated@@287 ($generated@@230 ($generated@@76 $generated@@145 $generated@@4) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@230 ($generated@@76 $generated@@145 $generated@@4) $generated@@541) ($generated@@263 $generated@@542))))
 :pattern ( ($generated@@249 $generated@@541 ($generated@@263 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@64)) ($generated@@249 $generated@@543 ($generated@@150 $generated@@544))) (and (= ($generated@@287 ($generated@@230 ($generated@@76 $generated@@145 $generated@@2) $generated@@543)) $generated@@543) ($generated@@132 ($generated@@230 ($generated@@76 $generated@@145 $generated@@2) $generated@@543) ($generated@@150 $generated@@544))))
 :pattern ( ($generated@@249 $generated@@543 ($generated@@150 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@145) (= (type $generated@@546) $generated@@64)) ($generated@@249 $generated@@545 ($generated@@228 $generated@@546))) (and (= ($generated@@287 ($generated@@230 ($generated@@226 $generated@@145) $generated@@545)) $generated@@545) ($generated@@132 ($generated@@230 ($generated@@226 $generated@@145) $generated@@545) ($generated@@228 $generated@@546))))
 :pattern ( ($generated@@249 $generated@@545 ($generated@@228 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@547 ($generated@@150 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@547 $generated@@550)))) ($generated@@271 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@81 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@150 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@270 $generated@@553) (and ($generated@@134 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@135 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@135 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@271 ($generated@@143 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@271 ($generated@@143 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@136) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@270 $generated@@557) (and ($generated@@134 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@64) ($generated@@74 $generated@@555 ($generated@@135 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@135 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@271 ($generated@@144 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@271 ($generated@@144 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@145) (= (type $generated@@560) $generated@@145)) (= ($generated@@248 ($generated@@225 $generated@@559) ($generated@@225 $generated@@560)) ($generated@@225 ($generated@@248 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@248 ($generated@@225 $generated@@559) ($generated@@225 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@232 $generated@@561))) ($generated@@225 ($generated@@287 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@232 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@287 ($generated@@225 $generated@@562)) ($generated@@225 ($generated@@287 $generated@@562)))
 :pattern ( ($generated@@287 ($generated@@225 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@233 (type $generated@@563))))
 (=> (and (= (type $generated@@563) ($generated@@226 $generated@@564)) (= ($generated@@229 $generated@@563) 0)) (= $generated@@563 ($generated@@283 $generated@@564))))
 :pattern ( ($generated@@229 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@566)))
 (=> (and (and (= (type $generated@@565) ($generated@@76 $generated@@568 $generated@@2)) (= (type $generated@@567) $generated@@2)) (<= 0 ($generated $generated@@567))) (= ($generated@@292 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)) (+ (- ($generated@@292 $generated@@565) ($generated ($generated@@81 $generated@@565 $generated@@566))) ($generated $generated@@567)))))
 :pattern ( ($generated@@292 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@2)) ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@3)) ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@4)) ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@438)) ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@145)) ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@226 $generated@@145)) (= (type $generated@@580) $generated@@64)) (= ($generated@@132 $generated@@579 ($generated@@228 $generated@@580)) (forall (($generated@@581 Int) ) (!  (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@229 $generated@@579))) ($generated@@249 ($generated@@231 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@231 $generated@@579 $generated@@581))
))))
 :pattern ( ($generated@@132 $generated@@579 ($generated@@228 $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (= (type $generated@@583) ($generated@@226 $generated@@145)) (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@229 $generated@@583))) (< ($generated@@513 ($generated@@230 $generated@@136 ($generated@@231 $generated@@583 $generated@@584))) ($generated@@582 $generated@@583))))
 :pattern ( ($generated@@513 ($generated@@230 $generated@@136 ($generated@@231 $generated@@583 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@398 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@298 $generated@@585) ($generated@@258 $generated@@586)) ($generated@@132 ($generated@@341 $generated@@585) ($generated@@258 $generated@@587))) ($generated@@132 ($generated@@372 $generated@@585) ($generated@@258 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@398 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@132 $generated@@588 ($generated@@406 $generated@@589 $generated@@590))) (and (and ($generated@@132 ($generated@@316 $generated@@588) ($generated@@263 $generated@@589)) ($generated@@132 ($generated@@352 $generated@@588) ($generated@@263 $generated@@590))) ($generated@@132 ($generated@@380 $generated@@588) ($generated@@263 ($generated@@135 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@132 $generated@@588 ($generated@@406 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@2) ($generated@@132 $generated@@591 $generated@@46))
 :pattern ( ($generated@@132 $generated@@591 $generated@@46))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@3) ($generated@@132 $generated@@592 $generated@@47))
 :pattern ( ($generated@@132 $generated@@592 $generated@@47))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@4) ($generated@@132 $generated@@593 $generated@@44))
 :pattern ( ($generated@@132 $generated@@593 $generated@@44))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@438) ($generated@@132 $generated@@594 $generated@@45))
 :pattern ( ($generated@@132 $generated@@594 $generated@@45))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@145) ($generated@@132 $generated@@595 $generated@@48))
 :pattern ( ($generated@@132 $generated@@595 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@598) ($generated@@226 $generated@@145)) (= (type $generated@@599) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@600) $generated@@77)) (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@602) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@604 true))
(let (($generated@@605  (=> (and (not (and (and (<= ($generated@@232 0) $generated@@596) (< $generated@@596 $generated@@597)) (< $generated@@597 5))) (= (ControlFlow 0 8) 3)) $generated@@604)))
(let (($generated@@606  (=> (and (and (<= ($generated@@232 0) $generated@@596) (< $generated@@596 $generated@@597)) (< $generated@@597 5)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (and (<= 0 (+ $generated@@596 $generated@@597)) (< (+ $generated@@596 $generated@@597) ($generated@@229 $generated@@598)))) (=> (and (<= 0 (+ $generated@@596 $generated@@597)) (< (+ $generated@@596 $generated@@597) ($generated@@229 $generated@@598))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@229 $generated@@598)))) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@229 $generated@@598))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@229 $generated@@598)))) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@229 $generated@@598))) (=> (= (ControlFlow 0 4) 3) $generated@@604))))))))))
(let (($generated@@607  (=> (not (and (<= ($generated@@232 0) $generated@@596) (< $generated@@596 $generated@@597))) (and (=> (= (ControlFlow 0 10) 4) $generated@@606) (=> (= (ControlFlow 0 10) 8) $generated@@605)))))
(let (($generated@@608  (=> (and (<= ($generated@@232 0) $generated@@596) (< $generated@@596 $generated@@597)) (and (=> (= (ControlFlow 0 9) 4) $generated@@606) (=> (= (ControlFlow 0 9) 8) $generated@@605)))))
(let (($generated@@609  (=> (< $generated@@596 ($generated@@232 0)) (and (=> (= (ControlFlow 0 12) 9) $generated@@608) (=> (= (ControlFlow 0 12) 10) $generated@@607)))))
(let (($generated@@610  (=> (<= ($generated@@232 0) $generated@@596) (and (=> (= (ControlFlow 0 11) 9) $generated@@608) (=> (= (ControlFlow 0 11) 10) $generated@@607)))))
(let (($generated@@611  (and (=> (= (ControlFlow 0 13) 11) $generated@@610) (=> (= (ControlFlow 0 13) 12) $generated@@609))))
(let (($generated@@612 true))
(let (($generated@@613  (=> (= $generated@@599 ($generated@@211 $generated@@600 $generated@@601 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@611) (=> (= (ControlFlow 0 14) 2) $generated@@612)))))
(let (($generated@@614 true))
(let (($generated@@615  (=> (and (= $generated@@602 ($generated@@156 $generated@@600 $generated@@601 $generated@@60 false)) (< 10 ($generated@@229 $generated@@598))) (and (=> (= (ControlFlow 0 15) 1) $generated@@614) (=> (= (ControlFlow 0 15) 14) $generated@@613)))))
(let (($generated@@616  (=> (and (and (and ($generated@@270 $generated@@601) ($generated@@603 $generated@@601)) ($generated@@132 $generated@@598 ($generated@@228 $generated@@46))) (and (= 0 $generated@@223) (= (ControlFlow 0 16) 15))) $generated@@615)))
$generated@@616))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
