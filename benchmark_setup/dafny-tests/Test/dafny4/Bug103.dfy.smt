(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (Int) Bool)
(declare-fun $generated@@129 (Int) Bool)
(declare-fun $generated@@131 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (Int) Int)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@195 (T@T) T@U)
(declare-fun $generated@@196 (T@U) Int)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@203 (T@U T@U T@U) Bool)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 () T@T)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 (T@T T@T) T@U)
(declare-fun $generated@@212 (T@T T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@T T@T) T@U)
(declare-fun $generated@@230 (T@T T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@U Int) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@368 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@130 Int) ) (!  (=> (or ($generated@@129 $generated@@130) (not (= 0 $generated@@127))) (= ($generated@@128 $generated@@130) (< $generated@@130 (+ $generated@@130 1))))
 :pattern ( ($generated@@128 $generated@@130))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@133 $generated@@137 $generated@@138)) 12)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@134 ($generated@@133 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@133 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@135 ($generated@@133 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@133 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@131 $generated@@143 $generated@@144 $generated@@145)) $generated@@146))
 :pattern ( ($generated@@131 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 (type $generated@@150)))
(let (($generated@@152 (type $generated@@148)))
(= (type ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150)) ($generated@@133 $generated@@152 $generated@@151))))
 :pattern ( ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@135 (type $generated@@153))))
 (=> (= (type $generated@@156) $generated@@157) (= ($generated@@131 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@154 $generated@@155) $generated@@156)))
 :weight 0
))) (and (and (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@131 ($generated@@136 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@131 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@131 ($generated@@136 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@131 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or true (= ($generated@@131 ($generated@@136 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@131 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ) (! (= (type ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@133 $generated@@72 $generated@@4))
 :pattern ( ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@64 (type $generated@@185))))
 (=> (and (and (and (and (= (type $generated@@180) $generated@@72) (= (type $generated@@181) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@182) ($generated@@63 $generated@@4))) (= (type $generated@@184) $generated@@72)) (= (type $generated@@185) ($generated@@63 $generated@@186))) (= ($generated@@0 ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (not (= $generated@@184 $generated@@180)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@181 $generated@@184) $generated@@182))) $generated@@183))))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@187 $generated@@188) $generated@@188)
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(= (type ($generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@189 $generated@@192) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@193 Int) ) (!  (=> (or ($generated@@129 $generated@@193) (not (= 0 $generated@@127))) true)
 :pattern ( ($generated@@128 $generated@@193))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@194 Int) ) (!  (=> (or ($generated@@129 ($generated@@187 $generated@@194)) (not (= 0 $generated@@127))) (= ($generated@@128 ($generated@@187 $generated@@194)) ($generated@@0 ($generated@@189 ($generated@@11 (< $generated@@194 (+ $generated@@194 1)))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@187 $generated@@194)))
))))
(assert  (and (and (forall (($generated@@199 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@199)) 13)) (forall (($generated@@200 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@197 $generated@@200))
))) (forall (($generated@@201 T@T) ) (! (= (type ($generated@@195 $generated@@201)) ($generated@@197 $generated@@201))
 :pattern ( ($generated@@195 $generated@@201))
))))
(assert (forall (($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@202)) 0)
 :pattern ( ($generated@@195 $generated@@202))
)))
(assert  (and (= ($generated@@1 $generated@@205) 14) (forall (($generated@@206 T@U) ) (! (= (type ($generated@@204 $generated@@206)) $generated@@205)
 :pattern ( ($generated@@204 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@61) (= (type $generated@@209) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@203 ($generated@@204 $generated@@207) $generated@@208 $generated@@209) ($generated@@69 $generated@@207 $generated@@208 $generated@@209)))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@207) $generated@@208 $generated@@209))
)))
(assert  (and (and (and (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (= ($generated@@1 ($generated@@212 $generated@@215 $generated@@216)) 15)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@213 ($generated@@212 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@212 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@214 ($generated@@212 $generated@@219 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@212 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@213 (type $generated@@221))))
(= (type ($generated@@210 $generated@@221)) ($generated@@71 $generated@@222 $generated@@4)))
 :pattern ( ($generated@@210 $generated@@221))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= (type ($generated@@211 $generated@@223 $generated@@224)) ($generated@@212 $generated@@223 $generated@@224))
 :pattern ( ($generated@@211 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@T) ) (! (let (($generated@@227 (type $generated@@225)))
 (not ($generated@@0 ($generated@@76 ($generated@@210 ($generated@@211 $generated@@227 $generated@@226)) $generated@@225))))
 :pattern ( (let (($generated@@227 (type $generated@@225)))
($generated@@76 ($generated@@210 ($generated@@211 $generated@@227 $generated@@226)) $generated@@225)))
)))
(assert  (and (and (and (and (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (= ($generated@@1 ($generated@@230 $generated@@233 $generated@@234)) 16)) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@231 ($generated@@230 $generated@@235 $generated@@236)) $generated@@235)
 :pattern ( ($generated@@230 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (! (= ($generated@@232 ($generated@@230 $generated@@237 $generated@@238)) $generated@@238)
 :pattern ( ($generated@@230 $generated@@237 $generated@@238))
))) (forall (($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@231 (type $generated@@239))))
(= (type ($generated@@228 $generated@@239)) ($generated@@71 $generated@@240 $generated@@4)))
 :pattern ( ($generated@@228 $generated@@239))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= (type ($generated@@229 $generated@@241 $generated@@242)) ($generated@@230 $generated@@241 $generated@@242))
 :pattern ( ($generated@@229 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@T) ) (! (let (($generated@@245 (type $generated@@243)))
 (not ($generated@@0 ($generated@@76 ($generated@@228 ($generated@@229 $generated@@245 $generated@@244)) $generated@@243))))
 :pattern ( (let (($generated@@245 (type $generated@@243)))
($generated@@76 ($generated@@228 ($generated@@229 $generated@@245 $generated@@244)) $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@214 (type $generated@@246))))
(let (($generated@@248 ($generated@@213 (type $generated@@246))))
 (=> (= (type $generated@@246) ($generated@@212 $generated@@248 $generated@@247)) (or (= $generated@@246 ($generated@@211 $generated@@248 $generated@@247)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@248) ($generated@@0 ($generated@@76 ($generated@@210 $generated@@246) $generated@@249)))
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
))))))
 :pattern ( ($generated@@210 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@232 (type $generated@@250))))
(let (($generated@@252 ($generated@@231 (type $generated@@250))))
 (=> (= (type $generated@@250) ($generated@@230 $generated@@252 $generated@@251)) (or (= $generated@@250 ($generated@@229 $generated@@252 $generated@@251)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) ($generated@@0 ($generated@@76 ($generated@@228 $generated@@250) $generated@@253)))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@228 $generated@@250))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@61)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@71 $generated@@205 $generated@@4)) (= (type $generated@@257) $generated@@61)) (= (type $generated@@258) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@205) ($generated@@0 ($generated@@76 $generated@@256 $generated@@259))) ($generated@@203 $generated@@259 $generated@@257 $generated@@258))
 :pattern ( ($generated@@76 $generated@@256 $generated@@259))
))))
 :pattern ( ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@61)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@262) ($generated@@71 $generated@@205 $generated@@4)) (= (type $generated@@263) $generated@@61)) (= (type $generated@@264) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@262 ($generated@@260 $generated@@263) $generated@@264) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@205) ($generated@@0 ($generated@@76 $generated@@262 $generated@@265))) ($generated@@203 $generated@@265 $generated@@263 $generated@@264))
 :pattern ( ($generated@@76 $generated@@262 $generated@@265))
))))
 :pattern ( ($generated@@69 $generated@@262 ($generated@@260 $generated@@263) $generated@@264))
)))
(assert  (and (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@268 $generated@@269)) $generated@@61)
 :pattern ( ($generated@@266 $generated@@268 $generated@@269))
)) (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@214 (type $generated@@270))))
(let (($generated@@272 ($generated@@213 (type $generated@@270))))
(= (type ($generated@@267 $generated@@270)) ($generated@@71 $generated@@272 $generated@@271))))
 :pattern ( ($generated@@267 $generated@@270))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) ($generated@@212 $generated@@205 $generated@@205)) (= (type $generated@@274) $generated@@61)) (= (type $generated@@275) $generated@@61)) (= (type $generated@@276) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@273 ($generated@@266 $generated@@274 $generated@@275) $generated@@276) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@205) ($generated@@0 ($generated@@76 ($generated@@210 $generated@@273) $generated@@277))) (and ($generated@@203 ($generated@@76 ($generated@@267 $generated@@273) $generated@@277) $generated@@275 $generated@@276) ($generated@@203 $generated@@277 $generated@@274 $generated@@276)))
 :pattern ( ($generated@@76 ($generated@@267 $generated@@273) $generated@@277))
 :pattern ( ($generated@@76 ($generated@@210 $generated@@273) $generated@@277))
))))
 :pattern ( ($generated@@69 $generated@@273 ($generated@@266 $generated@@274 $generated@@275) $generated@@276))
)))
(assert  (and (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (= (type ($generated@@278 $generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@278 $generated@@280 $generated@@281))
)) (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@232 (type $generated@@282))))
(let (($generated@@284 ($generated@@231 (type $generated@@282))))
(= (type ($generated@@279 $generated@@282)) ($generated@@71 $generated@@284 $generated@@283))))
 :pattern ( ($generated@@279 $generated@@282))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (= (type $generated@@285) ($generated@@230 $generated@@205 $generated@@205)) (= (type $generated@@286) $generated@@61)) (= (type $generated@@287) $generated@@61)) (= (type $generated@@288) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@285 ($generated@@278 $generated@@286 $generated@@287) $generated@@288) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@205) ($generated@@0 ($generated@@76 ($generated@@228 $generated@@285) $generated@@289))) (and ($generated@@203 ($generated@@76 ($generated@@279 $generated@@285) $generated@@289) $generated@@287 $generated@@288) ($generated@@203 $generated@@289 $generated@@286 $generated@@288)))
 :pattern ( ($generated@@76 ($generated@@279 $generated@@285) $generated@@289))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@285) $generated@@289))
))))
 :pattern ( ($generated@@69 $generated@@285 ($generated@@278 $generated@@286 $generated@@287) $generated@@288))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@71 $generated@@291 $generated@@4))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@232 (type $generated@@292))))
(let (($generated@@294 ($generated@@231 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@230 $generated@@294 $generated@@293)) (= (= $generated@@292 ($generated@@229 $generated@@294 $generated@@293)) (= ($generated@@228 $generated@@292) ($generated@@290 $generated@@294))))))
 :pattern ( ($generated@@228 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@198 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@197 $generated@@296)) (<= 0 ($generated@@196 $generated@@295))))
 :pattern ( ($generated@@196 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@61)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@61) (= (type $generated@@300) $generated@@61)) (= ($generated@@297 ($generated@@266 $generated@@299 $generated@@300)) $generated@@299))
 :pattern ( ($generated@@266 $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@61)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@301 ($generated@@266 $generated@@303 $generated@@304)) $generated@@304))
 :pattern ( ($generated@@266 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@61) (= (type $generated@@306) $generated@@61)) (= ($generated@@67 ($generated@@266 $generated@@305 $generated@@306)) $generated@@58))
 :pattern ( ($generated@@266 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@278 $generated@@309 $generated@@310)) $generated@@309))
 :pattern ( ($generated@@278 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@61)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@311 ($generated@@278 $generated@@313 $generated@@314)) $generated@@314))
 :pattern ( ($generated@@278 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@67 ($generated@@278 $generated@@315 $generated@@316)) $generated@@59))
 :pattern ( ($generated@@278 $generated@@315 $generated@@316))
)))
(assert  (and (forall (($generated@@319 T@U) ) (! (= (type ($generated@@317 $generated@@319)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@319))
)) (forall (($generated@@320 T@U) ($generated@@321 Int) ) (! (let (($generated@@322 ($generated@@198 (type $generated@@320))))
(= (type ($generated@@318 $generated@@320 $generated@@321)) $generated@@322))
 :pattern ( ($generated@@318 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (= (type $generated@@323) ($generated@@197 $generated@@205)) (= (type $generated@@324) $generated@@61)) (= (type $generated@@325) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@323 ($generated@@317 $generated@@324) $generated@@325) (forall (($generated@@326 Int) ) (!  (=> (and (<= 0 $generated@@326) (< $generated@@326 ($generated@@196 $generated@@323))) ($generated@@203 ($generated@@318 $generated@@323 $generated@@326) $generated@@324 $generated@@325))
 :pattern ( ($generated@@318 $generated@@323 $generated@@326))
))))
 :pattern ( ($generated@@69 $generated@@323 ($generated@@317 $generated@@324) $generated@@325))
)))
(assert (forall (($generated@@328 Int) ) (! (= ($generated@@327 ($generated@@70 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@70 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@61)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@61) (= ($generated@@329 ($generated@@254 $generated@@331)) $generated@@331))
 :pattern ( ($generated@@254 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@61) (= ($generated@@67 ($generated@@254 $generated@@332)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@61) (= ($generated@@333 ($generated@@260 $generated@@335)) $generated@@335))
 :pattern ( ($generated@@260 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@61) (= ($generated@@67 ($generated@@260 $generated@@336)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@336))
)))
(assert  (and (forall (($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@339)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@339))
)) (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@338 ($generated@@337 $generated@@341)) $generated@@341))
 :pattern ( ($generated@@337 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@67 ($generated@@337 $generated@@342)) $generated@@56))
 :pattern ( ($generated@@337 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@343 ($generated@@317 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@317 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@67 ($generated@@317 $generated@@346)) $generated@@57))
 :pattern ( ($generated@@317 $generated@@346))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= ($generated@@347 $generated@@351 ($generated@@204 $generated@@350)) $generated@@350))
 :pattern ( ($generated@@204 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
 (not ($generated@@0 ($generated@@76 ($generated@@290 $generated@@353) $generated@@352))))
 :pattern ( (let (($generated@@353 (type $generated@@352)))
($generated@@76 ($generated@@290 $generated@@353) $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@71 $generated@@205 $generated@@2)) (= (type $generated@@355) $generated@@61)) (= (type $generated@@356) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@354 ($generated@@337 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@205) (< 0 ($generated ($generated@@76 $generated@@354 $generated@@357)))) ($generated@@203 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@76 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@69 $generated@@354 ($generated@@337 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 Int) ) (! (= ($generated@@204 ($generated@@8 ($generated@@187 $generated@@358))) ($generated@@189 ($generated@@204 ($generated@@8 $generated@@358))))
 :pattern ( ($generated@@204 ($generated@@8 ($generated@@187 $generated@@358))))
)))
(assert (forall (($generated@@359 T@U) ) (! (= ($generated@@204 ($generated@@189 $generated@@359)) ($generated@@189 ($generated@@204 $generated@@359)))
 :pattern ( ($generated@@204 ($generated@@189 $generated@@359)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@198 (type $generated@@360))))
 (=> (and (= (type $generated@@360) ($generated@@197 $generated@@361)) (= ($generated@@196 $generated@@360) 0)) (= $generated@@360 ($generated@@195 $generated@@361))))
 :pattern ( ($generated@@196 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@363) $generated@@2)) ($generated@@69 $generated@@363 $generated@@46 $generated@@362))
 :pattern ( ($generated@@69 $generated@@363 $generated@@46 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@365) $generated@@3)) ($generated@@69 $generated@@365 $generated@@47 $generated@@364))
 :pattern ( ($generated@@69 $generated@@365 $generated@@47 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@367) $generated@@4)) ($generated@@69 $generated@@367 $generated@@44 $generated@@366))
 :pattern ( ($generated@@69 $generated@@367 $generated@@44 $generated@@366))
)))
(assert (= ($generated@@1 $generated@@368) 17))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@370) $generated@@368)) ($generated@@69 $generated@@370 $generated@@45 $generated@@369))
 :pattern ( ($generated@@69 $generated@@370 $generated@@45 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@372) $generated@@205)) ($generated@@69 $generated@@372 $generated@@48 $generated@@371))
 :pattern ( ($generated@@69 $generated@@372 $generated@@48 $generated@@371))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@373 () Int)
(declare-fun $generated@@374 () T@U)
(declare-fun $generated@@375 () T@U)
(declare-fun $generated@@376 () T@U)
(declare-fun $generated@@377 (T@U) Bool)
(declare-fun $generated@@378 (T@U) Bool)
(assert  (and (and (= (type $generated@@374) ($generated@@133 $generated@@72 $generated@@4)) (= (type $generated@@375) $generated@@72)) (= (type $generated@@376) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@379  (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@129 $generated@@373) (or ($generated@@128 $generated@@373) (< $generated@@373 (+ $generated@@373 1)))))))
(let (($generated@@380 true))
(let (($generated@@381  (and (=> (= (ControlFlow 0 5) 2) $generated@@380) (=> (= (ControlFlow 0 5) 4) $generated@@379))))
(let (($generated@@382 true))
(let (($generated@@383  (=> (= $generated@@374 ($generated@@132 $generated@@375 $generated@@376 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 5) $generated@@381) (=> (= (ControlFlow 0 6) 1) $generated@@382)))))
(let (($generated@@384  (=> (and (and ($generated@@377 $generated@@376) ($generated@@378 $generated@@376)) (and (= 1 $generated@@127) (= (ControlFlow 0 7) 6))) $generated@@383)))
$generated@@384)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
