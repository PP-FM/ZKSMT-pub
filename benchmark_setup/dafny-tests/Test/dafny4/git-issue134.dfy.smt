(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@257 (T@T) T@U)
(declare-fun $generated@@258 (T@U) Int)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@345 (T@U T@U) Bool)
(declare-fun $generated@@346 (T@U T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@506 (T@U Int) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@555 (T@U T@U T@U) T@U)
(declare-fun $generated@@576 (T@T) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@639 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@79 (type $generated@@212))))
(= (type ($generated@@211 $generated@@212 $generated@@213)) ($generated@@76 $generated@@214 $generated@@4)))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@79 (type $generated@@215))))
 (=> (and (= (type $generated@@215) ($generated@@76 $generated@@217 $generated@@4)) (= (type $generated@@216) ($generated@@76 $generated@@217 $generated@@4))) (= ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216) ($generated@@211 $generated@@215 $generated@@216))))
 :pattern ( ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@218 $generated@@220 $generated@@221)) $generated@@136)
 :pattern ( ($generated@@218 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@64) (= (type $generated@@223) $generated@@64)) (= (type $generated@@224) $generated@@145)) (= (type $generated@@225) $generated@@145)) (= ($generated@@132 ($generated@@218 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223))  (and ($generated@@219 $generated@@224 $generated@@222) ($generated@@219 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@132 ($generated@@218 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@136) (= (type $generated@@227) $generated@@136)) (= ($generated@@142 $generated@@226 $generated@@227) (= $generated@@226 $generated@@227)))
 :pattern ( ($generated@@142 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@64)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@231) $generated@@64)) (= ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@145) ($generated@@0 ($generated@@81 $generated@@230 $generated@@232))) ($generated@@219 $generated@@232 $generated@@231))
 :pattern ( ($generated@@81 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@219 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 Int) ) (! (= ($generated@@238 $generated@@239) $generated@@239)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (let (($generated@@242 (type $generated@@241)))
(= (type ($generated@@240 $generated@@241)) $generated@@242))
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@240 $generated@@243) $generated@@243)
 :pattern ( ($generated@@240 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) $generated@@64) (= (type $generated@@247) $generated@@64)) (= (type $generated@@248) $generated@@145)) (= (type $generated@@249) $generated@@145)) (= (type $generated@@250) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@244 $generated@@250)) (= ($generated@@74 ($generated@@218 $generated@@248 $generated@@249) ($generated@@135 $generated@@246 $generated@@247) $generated@@250)  (and ($generated@@245 $generated@@248 $generated@@246 $generated@@250) ($generated@@245 $generated@@249 $generated@@247 $generated@@250))))
 :pattern ( ($generated@@74 ($generated@@218 $generated@@248 $generated@@249) ($generated@@135 $generated@@246 $generated@@247) $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@136) (= ($generated@@134 $generated@@253) (= ($generated@@251 $generated@@253) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@136) ($generated@@134 $generated@@254)) (exists (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (and (and (= (type $generated@@255) $generated@@145) (= (type $generated@@256) $generated@@145)) (= $generated@@254 ($generated@@218 $generated@@255 $generated@@256)))
 :no-pattern (type $generated@@255)
 :no-pattern (type $generated@@256)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
)))
 :pattern ( ($generated@@134 $generated@@254))
)))
(assert  (and (and (forall (($generated@@261 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@261)) 17)) (forall (($generated@@262 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@262)) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
))) (forall (($generated@@263 T@T) ) (! (= (type ($generated@@257 $generated@@263)) ($generated@@259 $generated@@263))
 :pattern ( ($generated@@257 $generated@@263))
))))
(assert (forall (($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@264)) 0)
 :pattern ( ($generated@@257 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@145)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@64) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269) ($generated@@74 $generated@@267 $generated@@268 $generated@@269)))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@272 T@T) ) (! (= (type ($generated@@271 $generated@@272)) ($generated@@76 $generated@@272 $generated@@2))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@79 (type $generated@@273))))
 (=> (= (type $generated@@273) ($generated@@76 $generated@@274 $generated@@2)) (and (= (= ($generated@@270 $generated@@273) 0) (= $generated@@273 ($generated@@271 $generated@@274))) (=> (not (= ($generated@@270 $generated@@273) 0)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) (< 0 ($generated ($generated@@81 $generated@@273 $generated@@275))))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 18)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@76 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@79 (type $generated@@313))))
 (=> (and (= (type $generated@@313) ($generated@@76 $generated@@315 $generated@@4)) (= (type $generated@@314) ($generated@@76 $generated@@315 $generated@@4))) (= ($generated@@312 $generated@@313 $generated@@314) (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@315) (= ($generated@@0 ($generated@@81 $generated@@313 $generated@@316)) ($generated@@0 ($generated@@81 $generated@@314 $generated@@316))))
 :pattern ( ($generated@@81 $generated@@313 $generated@@316))
 :pattern ( ($generated@@81 $generated@@314 $generated@@316))
)))))
 :pattern ( ($generated@@312 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@151 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@270 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@151 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@280 (type $generated@@320))))
(let (($generated@@322 ($generated@@279 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@278 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@277 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@276 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@280 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@280 (type $generated@@327))))
(let (($generated@@329 ($generated@@279 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@278 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@277 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@298 (type $generated@@331))))
(let (($generated@@333 ($generated@@297 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@296 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@295 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@294 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@298 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@298 (type $generated@@338))))
(let (($generated@@340 ($generated@@297 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@296 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@295 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@219 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@79 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@79 (type $generated@@350))))
 (=> (and (and (= (type $generated@@350) ($generated@@76 $generated@@352 $generated@@4)) (= (type $generated@@351) ($generated@@76 $generated@@352 $generated@@4))) ($generated@@345 $generated@@350 $generated@@351)) (and (= ($generated@@346 ($generated@@211 $generated@@350 $generated@@351) $generated@@350) $generated@@351) (= ($generated@@346 ($generated@@211 $generated@@350 $generated@@351) $generated@@351) $generated@@350))))
 :pattern ( ($generated@@211 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
 (=> (and (= (type $generated@@353) ($generated@@76 $generated@@356 $generated@@4)) (= (type $generated@@354) ($generated@@76 $generated@@356 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@353 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@81 $generated@@353 $generated@@355)) (not ($generated@@0 ($generated@@81 $generated@@354 $generated@@355)))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@353 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@228 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@245 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@228 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@233 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@145) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@245 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@233 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@81 ($generated@@271 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@81 ($generated@@271 $generated@@366) $generated@@365)))
)))
(assert  (and (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@367 $generated@@370)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@367 $generated@@370))
)) (forall (($generated@@371 T@T) ($generated@@372 T@U) ) (! (= (type ($generated@@368 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@368 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@280 (type $generated@@373))))
(let (($generated@@375 ($generated@@279 (type $generated@@373))))
(= (type ($generated@@369 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@369 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@376) ($generated@@143 ($generated@@368 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@369 $generated@@376) ($generated@@143 ($generated@@368 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@368 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@298 (type $generated@@381))))
(let (($generated@@383 ($generated@@297 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@385) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@384) ($generated@@143 ($generated@@368 $generated@@136 $generated@@385)))) (= ($generated@@81 ($generated@@379 $generated@@384) ($generated@@143 ($generated@@368 $generated@@136 $generated@@385))) ($generated@@144 ($generated@@368 $generated@@136 $generated@@385))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@279 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@278 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@297 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@296 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@399) $generated@@403))) (and ($generated@@245 ($generated@@81 ($generated@@369 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@245 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@64)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@407) $generated@@411))) (and ($generated@@245 ($generated@@81 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@245 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@74 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@79 (type $generated@@412))))
 (=> (and (and (= (type $generated@@412) ($generated@@76 $generated@@414 $generated@@4)) (= (type $generated@@413) ($generated@@76 $generated@@414 $generated@@4))) ($generated@@312 $generated@@412 $generated@@413)) (= $generated@@412 $generated@@413)))
 :pattern ( ($generated@@312 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(= (type ($generated@@415 $generated@@416 $generated@@417)) ($generated@@76 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@420)))
 (=> (and (and (= (type $generated@@419) ($generated@@76 $generated@@422 $generated@@4)) (= (type $generated@@421) $generated@@422)) ($generated@@0 ($generated@@81 $generated@@419 $generated@@421))) ($generated@@0 ($generated@@81 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))))
 :pattern ( ($generated@@415 $generated@@419 $generated@@420) ($generated@@81 $generated@@419 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
 (=> (and (and (= (type $generated@@423) ($generated@@76 $generated@@426 $generated@@4)) (= (type $generated@@424) ($generated@@76 $generated@@426 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@423 $generated@@425))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@423 $generated@@424) $generated@@425))))
 :pattern ( ($generated@@211 $generated@@423 $generated@@424) ($generated@@81 $generated@@423 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
 (=> (and (and (= (type $generated@@427) ($generated@@76 $generated@@430 $generated@@4)) (= (type $generated@@428) ($generated@@76 $generated@@430 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@428 $generated@@429))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@427 $generated@@428) $generated@@429))))
 :pattern ( ($generated@@211 $generated@@427 $generated@@428) ($generated@@81 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@432)))
 (=> (and (= (type $generated@@431) ($generated@@76 $generated@@434 $generated@@4)) (= (type $generated@@433) $generated@@434)) (= ($generated@@0 ($generated@@81 ($generated@@415 $generated@@431 $generated@@432) $generated@@433))  (or (= $generated@@433 $generated@@432) ($generated@@0 ($generated@@81 $generated@@431 $generated@@433))))))
 :pattern ( ($generated@@81 ($generated@@415 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
 (=> (and (and (= (type $generated@@435) ($generated@@76 $generated@@438 $generated@@4)) (= (type $generated@@436) ($generated@@76 $generated@@438 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@436 $generated@@437))) (not ($generated@@0 ($generated@@81 ($generated@@346 $generated@@435 $generated@@436) $generated@@437)))))
 :pattern ( ($generated@@346 $generated@@435 $generated@@436) ($generated@@81 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@76 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@298 (type $generated@@441))))
(let (($generated@@443 ($generated@@297 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@296 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@295 $generated@@443 $generated@@442)) (= ($generated@@294 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@294 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@298 (type $generated@@444))))
(let (($generated@@446 ($generated@@297 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@296 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@295 $generated@@446 $generated@@445)) (= ($generated@@335 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@335 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@298 (type $generated@@447))))
(let (($generated@@449 ($generated@@297 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@296 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@295 $generated@@449 $generated@@448)) (= ($generated@@378 $generated@@447) ($generated@@439 $generated@@145))))))
 :pattern ( ($generated@@378 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@280 (type $generated@@450))))
(let (($generated@@452 ($generated@@279 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@278 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@277 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@145) (= (type $generated@@454) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@367 $generated@@450) ($generated@@265 ($generated@@218 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@367 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@298 (type $generated@@455))))
(let (($generated@@457 ($generated@@297 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@296 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@295 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@455) ($generated@@265 ($generated@@218 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@378 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) ($generated@@219 $generated@@460 $generated@@46)) (and (= ($generated@@265 ($generated@@368 $generated@@2 $generated@@460)) $generated@@460) ($generated@@132 ($generated@@368 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@219 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) ($generated@@219 $generated@@461 $generated@@47)) (and (= ($generated@@265 ($generated@@368 $generated@@3 $generated@@461)) $generated@@461) ($generated@@132 ($generated@@368 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@219 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@145) ($generated@@219 $generated@@462 $generated@@44)) (and (= ($generated@@265 ($generated@@368 $generated@@4 $generated@@462)) $generated@@462) ($generated@@132 ($generated@@368 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@219 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 20))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@145) ($generated@@219 $generated@@464 $generated@@45)) (and (= ($generated@@265 ($generated@@368 $generated@@463 $generated@@464)) $generated@@464) ($generated@@132 ($generated@@368 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@219 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@219 ($generated@@265 $generated@@465) $generated@@466) ($generated@@132 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@219 ($generated@@265 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@79 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@76 $generated@@468 $generated@@2)) (<= 0 ($generated@@270 $generated@@467))))
 :pattern ( ($generated@@270 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@260 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@259 $generated@@470)) (<= 0 ($generated@@258 $generated@@469))))
 :pattern ( ($generated@@258 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@396 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@396 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@396 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@396 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@404 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@404 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@404 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@404 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@72 ($generated@@404 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) (= (type $generated@@492) $generated@@145)) (= ($generated@@251 ($generated@@218 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@218 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@135 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@135 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@497 ($generated@@135 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@135 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (= ($generated@@143 ($generated@@218 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@218 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@145)) (= ($generated@@144 ($generated@@218 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@218 $generated@@503 $generated@@504))
)))
(assert  (and (forall (($generated@@507 T@U) ) (! (= (type ($generated@@505 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@507))
)) (forall (($generated@@508 T@U) ($generated@@509 Int) ) (! (let (($generated@@510 ($generated@@260 (type $generated@@508))))
(= (type ($generated@@506 $generated@@508 $generated@@509)) $generated@@510))
 :pattern ( ($generated@@506 $generated@@508 $generated@@509))
))))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@259 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@511 ($generated@@505 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@258 $generated@@511))) ($generated@@245 ($generated@@506 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@506 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@74 $generated@@511 ($generated@@505 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
 (=> (= (type $generated@@515) ($generated@@76 $generated@@517 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@415 $generated@@515 $generated@@516) $generated@@516))))
 :pattern ( ($generated@@415 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@519 Int) ) (! (= ($generated@@518 ($generated@@75 $generated@@519)) $generated@@519)
 :pattern ( ($generated@@75 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@520 ($generated@@228 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@228 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@72 ($generated@@228 $generated@@523)) $generated@@54))
 :pattern ( ($generated@@228 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@524 ($generated@@233 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@233 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@527)) $generated@@55))
 :pattern ( ($generated@@233 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@64)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@528 ($generated@@150 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@150 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@531)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@532 ($generated@@505 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@505 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@64) (= ($generated@@72 ($generated@@505 $generated@@535)) $generated@@57))
 :pattern ( ($generated@@505 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
(= ($generated@@368 $generated@@537 ($generated@@265 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@265 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) $generated@@64)) (= ($generated@@132 $generated@@538 ($generated@@396 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@538) $generated@@541))) (and ($generated@@219 ($generated@@81 ($generated@@369 $generated@@538) $generated@@541) $generated@@540) ($generated@@219 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@538) $generated@@541))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@132 $generated@@538 ($generated@@396 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) (= ($generated@@132 $generated@@542 ($generated@@404 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@542) $generated@@545))) (and ($generated@@219 ($generated@@81 ($generated@@379 $generated@@542) $generated@@545) $generated@@544) ($generated@@219 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@542) $generated@@545))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@132 $generated@@542 ($generated@@404 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@145)) (< ($generated@@546 $generated@@548) ($generated@@547 ($generated@@218 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@218 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@145)) (< ($generated@@546 $generated@@551) ($generated@@547 ($generated@@218 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@218 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@79 (type $generated@@552))))
 (=> (and (= (type $generated@@552) ($generated@@76 $generated@@554 $generated@@4)) (= (type $generated@@553) ($generated@@76 $generated@@554 $generated@@4))) (= ($generated@@211 $generated@@552 ($generated@@211 $generated@@552 $generated@@553)) ($generated@@211 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@211 $generated@@552 ($generated@@211 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
(let (($generated@@560 (type $generated@@557)))
(= (type ($generated@@555 $generated@@556 $generated@@557 $generated@@558)) ($generated@@278 $generated@@560 $generated@@559))))
 :pattern ( ($generated@@555 $generated@@556 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
(let (($generated@@566 (type $generated@@562)))
 (=> (and (= (type $generated@@561) ($generated@@278 $generated@@566 $generated@@565)) (= (type $generated@@563) $generated@@566)) (and (=> (= $generated@@563 $generated@@562) (and ($generated@@0 ($generated@@81 ($generated@@276 ($generated@@555 $generated@@561 $generated@@562 $generated@@564)) $generated@@563)) (= ($generated@@81 ($generated@@369 ($generated@@555 $generated@@561 $generated@@562 $generated@@564)) $generated@@563) $generated@@564))) (=> (not (= $generated@@563 $generated@@562)) (and (= ($generated@@0 ($generated@@81 ($generated@@276 ($generated@@555 $generated@@561 $generated@@562 $generated@@564)) $generated@@563)) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@561) $generated@@563))) (= ($generated@@81 ($generated@@369 ($generated@@555 $generated@@561 $generated@@562 $generated@@564)) $generated@@563) ($generated@@81 ($generated@@369 $generated@@561) $generated@@563))))))))
 :pattern ( ($generated@@81 ($generated@@276 ($generated@@555 $generated@@561 $generated@@562 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@81 ($generated@@369 ($generated@@555 $generated@@561 $generated@@562 $generated@@564)) $generated@@563))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@145) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) $generated@@64)) ($generated@@219 $generated@@567 ($generated@@396 $generated@@568 $generated@@569))) (and (= ($generated@@265 ($generated@@368 ($generated@@278 $generated@@145 $generated@@145) $generated@@567)) $generated@@567) ($generated@@132 ($generated@@368 ($generated@@278 $generated@@145 $generated@@145) $generated@@567) ($generated@@396 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@219 $generated@@567 ($generated@@396 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@145) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) $generated@@64)) ($generated@@219 $generated@@570 ($generated@@404 $generated@@571 $generated@@572))) (and (= ($generated@@265 ($generated@@368 ($generated@@296 $generated@@145 $generated@@145) $generated@@570)) $generated@@570) ($generated@@132 ($generated@@368 ($generated@@296 $generated@@145 $generated@@145) $generated@@570) ($generated@@404 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@219 $generated@@570 ($generated@@404 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@64) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) $generated@@145)) ($generated@@219 $generated@@575 ($generated@@135 $generated@@573 $generated@@574))) (and (= ($generated@@265 ($generated@@368 $generated@@136 $generated@@575)) $generated@@575) ($generated@@132 ($generated@@368 $generated@@136 $generated@@575) ($generated@@135 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@219 $generated@@575 ($generated@@135 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@577 T@T) ) (! (= (type ($generated@@576 $generated@@577)) ($generated@@76 $generated@@577 $generated@@4))
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@81 ($generated@@576 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@81 ($generated@@576 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (not ($generated@@0 ($generated@@81 ($generated@@439 $generated@@581) $generated@@580))))
 :pattern ( (let (($generated@@581 (type $generated@@580)))
($generated@@81 ($generated@@439 $generated@@581) $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@69)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@64) (= (type $generated@@585) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@584 $generated@@585)) $generated@@62) (= ($generated@@582 ($generated@@135 $generated@@584 $generated@@585)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@136) (= ($generated@@546 ($generated@@265 $generated@@586)) ($generated@@547 $generated@@586)))
 :pattern ( ($generated@@546 ($generated@@265 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@145) ($generated@@219 $generated@@587 ($generated@@75 0))) (and (= ($generated@@265 ($generated@@368 $generated@@2 $generated@@587)) $generated@@587) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@587) ($generated@@75 0))))
 :pattern ( ($generated@@219 $generated@@587 ($generated@@75 0)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@145) (= (type $generated@@589) $generated@@64)) ($generated@@219 $generated@@588 ($generated@@228 $generated@@589))) (and (= ($generated@@265 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@588)) $generated@@588) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@588) ($generated@@228 $generated@@589))))
 :pattern ( ($generated@@219 $generated@@588 ($generated@@228 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@145) (= (type $generated@@591) $generated@@64)) ($generated@@219 $generated@@590 ($generated@@233 $generated@@591))) (and (= ($generated@@265 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@590)) $generated@@590) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@590) ($generated@@233 $generated@@591))))
 :pattern ( ($generated@@219 $generated@@590 ($generated@@233 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@145) (= (type $generated@@593) $generated@@64)) ($generated@@219 $generated@@592 ($generated@@150 $generated@@593))) (and (= ($generated@@265 ($generated@@368 ($generated@@76 $generated@@145 $generated@@2) $generated@@592)) $generated@@592) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@2) $generated@@592) ($generated@@150 $generated@@593))))
 :pattern ( ($generated@@219 $generated@@592 ($generated@@150 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@145) (= (type $generated@@595) $generated@@64)) ($generated@@219 $generated@@594 ($generated@@505 $generated@@595))) (and (= ($generated@@265 ($generated@@368 ($generated@@259 $generated@@145) $generated@@594)) $generated@@594) ($generated@@132 ($generated@@368 ($generated@@259 $generated@@145) $generated@@594) ($generated@@505 $generated@@595))))
 :pattern ( ($generated@@219 $generated@@594 ($generated@@505 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@596 ($generated@@150 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@596 $generated@@599)))) ($generated@@245 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@81 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@74 $generated@@596 ($generated@@150 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@79 (type $generated@@600))))
 (=> (and (= (type $generated@@600) ($generated@@76 $generated@@602 $generated@@4)) (= (type $generated@@601) ($generated@@76 $generated@@602 $generated@@4))) (= ($generated@@345 $generated@@600 $generated@@601) (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@602) (or (not ($generated@@0 ($generated@@81 $generated@@600 $generated@@603))) (not ($generated@@0 ($generated@@81 $generated@@601 $generated@@603)))))
 :pattern ( ($generated@@81 $generated@@600 $generated@@603))
 :pattern ( ($generated@@81 $generated@@601 $generated@@603))
)))))
 :pattern ( ($generated@@345 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@136) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@606) (and ($generated@@134 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@64) ($generated@@74 $generated@@604 ($generated@@135 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@74 $generated@@604 ($generated@@135 $generated@@605 $generated@@607) $generated@@606))
))))) ($generated@@245 ($generated@@143 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@245 ($generated@@143 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@136) (= (type $generated@@609) $generated@@64)) (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@610) (and ($generated@@134 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@64) ($generated@@74 $generated@@608 ($generated@@135 $generated@@611 $generated@@609) $generated@@610))
 :pattern ( ($generated@@74 $generated@@608 ($generated@@135 $generated@@611 $generated@@609) $generated@@610))
))))) ($generated@@245 ($generated@@144 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@245 ($generated@@144 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@145) (= (type $generated@@613) $generated@@145)) (= ($generated@@218 ($generated@@240 $generated@@612) ($generated@@240 $generated@@613)) ($generated@@240 ($generated@@218 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@218 ($generated@@240 $generated@@612) ($generated@@240 $generated@@613)))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@265 ($generated@@8 ($generated@@238 $generated@@614))) ($generated@@240 ($generated@@265 ($generated@@8 $generated@@614))))
 :pattern ( ($generated@@265 ($generated@@8 ($generated@@238 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ) (! (= ($generated@@265 ($generated@@240 $generated@@615)) ($generated@@240 ($generated@@265 $generated@@615)))
 :pattern ( ($generated@@265 ($generated@@240 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@260 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@259 $generated@@617)) (= ($generated@@258 $generated@@616) 0)) (= $generated@@616 ($generated@@257 $generated@@617))))
 :pattern ( ($generated@@258 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@76 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@270 ($generated@@82 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@270 $generated@@618) ($generated ($generated@@81 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@270 ($generated@@82 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@624)))
 (=> (and (= (type $generated@@622) ($generated@@76 $generated@@625 $generated@@4)) (= (type $generated@@623) ($generated@@76 $generated@@625 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@211 $generated@@622 $generated@@623) $generated@@624))  (or ($generated@@0 ($generated@@81 $generated@@622 $generated@@624)) ($generated@@0 ($generated@@81 $generated@@623 $generated@@624))))))
 :pattern ( ($generated@@81 ($generated@@211 $generated@@622 $generated@@623) $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@627) $generated@@2)) ($generated@@74 $generated@@627 $generated@@46 $generated@@626))
 :pattern ( ($generated@@74 $generated@@627 $generated@@46 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@629) $generated@@3)) ($generated@@74 $generated@@629 $generated@@47 $generated@@628))
 :pattern ( ($generated@@74 $generated@@629 $generated@@47 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@631) $generated@@4)) ($generated@@74 $generated@@631 $generated@@44 $generated@@630))
 :pattern ( ($generated@@74 $generated@@631 $generated@@44 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@633) $generated@@463)) ($generated@@74 $generated@@633 $generated@@45 $generated@@632))
 :pattern ( ($generated@@74 $generated@@633 $generated@@45 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@635) $generated@@145)) ($generated@@74 $generated@@635 $generated@@48 $generated@@634))
 :pattern ( ($generated@@74 $generated@@635 $generated@@48 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@259 $generated@@145)) (= (type $generated@@637) $generated@@64)) (= ($generated@@132 $generated@@636 ($generated@@505 $generated@@637)) (forall (($generated@@638 Int) ) (!  (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@258 $generated@@636))) ($generated@@219 ($generated@@506 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@506 $generated@@636 $generated@@638))
))))
 :pattern ( ($generated@@132 $generated@@636 ($generated@@505 $generated@@637)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 Int) ) (!  (=> (= (type $generated@@640) ($generated@@259 $generated@@145)) (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@258 $generated@@640))) (< ($generated@@547 ($generated@@368 $generated@@136 ($generated@@506 $generated@@640 $generated@@641))) ($generated@@639 $generated@@640))))
 :pattern ( ($generated@@547 ($generated@@368 $generated@@136 ($generated@@506 $generated@@640 $generated@@641))))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@643) $generated@@64)) (= (type $generated@@644) $generated@@64)) ($generated@@132 $generated@@642 ($generated@@396 $generated@@643 $generated@@644))) (and (and ($generated@@132 ($generated@@276 $generated@@642) ($generated@@228 $generated@@643)) ($generated@@132 ($generated@@324 $generated@@642) ($generated@@228 $generated@@644))) ($generated@@132 ($generated@@367 $generated@@642) ($generated@@228 ($generated@@135 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@132 $generated@@642 ($generated@@396 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@646) $generated@@64)) (= (type $generated@@647) $generated@@64)) ($generated@@132 $generated@@645 ($generated@@404 $generated@@646 $generated@@647))) (and (and ($generated@@132 ($generated@@294 $generated@@645) ($generated@@233 $generated@@646)) ($generated@@132 ($generated@@335 $generated@@645) ($generated@@233 $generated@@647))) ($generated@@132 ($generated@@378 $generated@@645) ($generated@@233 ($generated@@135 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@132 $generated@@645 ($generated@@404 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@2) ($generated@@132 $generated@@648 $generated@@46))
 :pattern ( ($generated@@132 $generated@@648 $generated@@46))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@3) ($generated@@132 $generated@@649 $generated@@47))
 :pattern ( ($generated@@132 $generated@@649 $generated@@47))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@4) ($generated@@132 $generated@@650 $generated@@44))
 :pattern ( ($generated@@132 $generated@@650 $generated@@44))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@463) ($generated@@132 $generated@@651 $generated@@45))
 :pattern ( ($generated@@132 $generated@@651 $generated@@45))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@145) ($generated@@132 $generated@@652 $generated@@48))
 :pattern ( ($generated@@132 $generated@@652 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 (T@U) Bool)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@653) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@654) $generated@@77)) (= (type $generated@@655) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@656) ($generated@@278 $generated@@145 $generated@@145))) (= (type $generated@@657) ($generated@@278 $generated@@145 $generated@@145))) (= (type $generated@@659) ($generated@@278 $generated@@145 $generated@@145))) (= (type $generated@@660) ($generated@@278 $generated@@145 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@662  (=> (and (= $generated@@653 ($generated@@156 $generated@@654 $generated@@655 $generated@@60 false)) (= $generated@@656 ($generated@@240 ($generated@@555 ($generated@@277 $generated@@145 $generated@@145) ($generated@@265 ($generated@@8 ($generated@@238 0))) ($generated@@265 ($generated@@240 ($generated@@11 false))))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@312 ($generated@@276 $generated@@656) ($generated@@415 ($generated@@576 $generated@@145) ($generated@@265 ($generated@@8 ($generated@@238 0)))))) (=> ($generated@@312 ($generated@@276 $generated@@656) ($generated@@415 ($generated@@576 $generated@@145) ($generated@@265 ($generated@@8 ($generated@@238 0))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@312 ($generated@@324 $generated@@656) ($generated@@415 ($generated@@576 $generated@@145) ($generated@@265 ($generated@@240 ($generated@@11 false)))))) (=> ($generated@@312 ($generated@@324 $generated@@656) ($generated@@415 ($generated@@576 $generated@@145) ($generated@@265 ($generated@@240 ($generated@@11 false))))) (=> (= $generated@@657 ($generated@@555 $generated@@656 ($generated@@265 ($generated@@8 ($generated@@238 0))) ($generated@@265 ($generated@@240 ($generated@@11 true))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@312 ($generated@@324 $generated@@657) ($generated@@211 ($generated@@324 $generated@@656) ($generated@@415 ($generated@@576 $generated@@145) ($generated@@265 ($generated@@240 ($generated@@11 true))))))) (=> ($generated@@312 ($generated@@324 $generated@@657) ($generated@@211 ($generated@@324 $generated@@656) ($generated@@415 ($generated@@576 $generated@@145) ($generated@@265 ($generated@@240 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@312 ($generated@@324 $generated@@657) ($generated@@415 ($generated@@576 $generated@@145) ($generated@@265 ($generated@@240 ($generated@@11 true)))))) (=> ($generated@@312 ($generated@@324 $generated@@657) ($generated@@415 ($generated@@576 $generated@@145) ($generated@@265 ($generated@@240 ($generated@@11 true))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@240 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@240 ($generated@@11 false))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@240 ($generated@@11 false))))))))))))))))))
(let (($generated@@663  (=> (and ($generated@@244 $generated@@655) ($generated@@658 $generated@@655)) (=> (and (and ($generated@@132 $generated@@659 ($generated@@396 $generated@@46 $generated@@44)) ($generated@@74 $generated@@659 ($generated@@396 $generated@@46 $generated@@44) $generated@@655)) true) (=> (and (and (and ($generated@@132 $generated@@660 ($generated@@396 $generated@@46 $generated@@44)) ($generated@@74 $generated@@660 ($generated@@396 $generated@@46 $generated@@44) $generated@@655)) true) (and (= 0 $generated@@661) (= (ControlFlow 0 8) 2))) $generated@@662)))))
$generated@@663)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
