(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) Bool)
(declare-fun $generated@@438 (T@T) T@U)
(declare-fun $generated@@462 () T@T)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U Int) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@142 $generated@@143 ($generated@@81 0)))
 :pattern ( ($generated@@142 $generated@@143 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@70)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@70) (= (type $generated@@150) $generated@@70)) (= (type $generated@@151) $generated@@146)) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@74)
 :pattern ( ($generated@@160 $generated@@162))
)) (= (type $generated@@161) $generated@@146)))
(assert (= ($generated@@160 $generated@@161) $generated@@66))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@70)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@167) $generated@@70)) ($generated@@142 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@142 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@83 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@73 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@83) (= (type $generated@@218) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@219) ($generated@@72 $generated@@4))) (= (type $generated@@221) $generated@@83)) (= (type $generated@@222) ($generated@@72 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (= (type $generated@@225) $generated@@70))
(assert (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@146) ($generated@@142 $generated@@226 $generated@@225)) ($generated@@224 $generated@@226))
 :pattern ( ($generated@@224 $generated@@226) ($generated@@142 $generated@@226 $generated@@225))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@227 $generated@@229 $generated@@230)) $generated@@146)
 :pattern ( ($generated@@227 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@70) (= (type $generated@@232) $generated@@70)) (= (type $generated@@233) $generated@@155)) (= (type $generated@@234) $generated@@155)) (= ($generated@@142 ($generated@@227 $generated@@233 $generated@@234) ($generated@@145 $generated@@231 $generated@@232))  (and ($generated@@228 $generated@@233 $generated@@231) ($generated@@228 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@142 ($generated@@227 $generated@@233 $generated@@234) ($generated@@145 $generated@@231 $generated@@232)))
)))
(assert (= (type $generated@@235) $generated@@70))
(assert ($generated@@142 $generated@@161 $generated@@235))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@236 $generated@@237)) ($generated@@80 $generated@@161 $generated@@235 $generated@@237))
 :pattern ( ($generated@@80 $generated@@161 $generated@@235 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@146) (= (type $generated@@239) $generated@@146)) (= ($generated@@152 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@152 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@146) (= (type $generated@@242) $generated@@146)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@146) (= (type $generated@@245) $generated@@146)) (= ($generated@@243 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@243 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@70)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@249) $generated@@70)) (= ($generated@@142 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@155) ($generated@@0 ($generated@@87 $generated@@248 $generated@@250))) ($generated@@228 $generated@@250 $generated@@249))
 :pattern ( ($generated@@87 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@142 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@142 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@155) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@228 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@142 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@70) (= (type $generated@@262) $generated@@70)) (= (type $generated@@263) $generated@@155)) (= (type $generated@@264) $generated@@155)) (= (type $generated@@265) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@236 $generated@@265)) (= ($generated@@80 ($generated@@227 $generated@@263 $generated@@264) ($generated@@145 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@80 ($generated@@227 $generated@@263 $generated@@264) ($generated@@145 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@146) (= ($generated@@144 $generated@@266) (= ($generated@@160 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@144 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@146) (= ($generated@@224 $generated@@267) (= ($generated@@160 $generated@@267) $generated@@63)))
 :pattern ( ($generated@@224 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@146) ($generated@@144 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@155) (= (type $generated@@270) $generated@@155)) (= $generated@@268 ($generated@@227 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@144 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert  (and (and (and (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@283 $generated@@284)) 18)) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@285 $generated@@286)) $generated@@285)
 :pattern ( ($generated@@279 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@279 $generated@@287 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@279 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@U) ) (! (= (type ($generated@@280 $generated@@289)) $generated@@146)
 :pattern ( ($generated@@280 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@146) ($generated@@224 $generated@@290)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) ($generated@@279 $generated@@155 $generated@@155)) (= $generated@@290 ($generated@@280 $generated@@291)))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@224 $generated@@290))
)))
(assert  (and (and (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@281 (type $generated@@296))))
(= (type ($generated@@292 $generated@@296)) ($generated@@82 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@296))
)) (forall (($generated@@298 T@T) ($generated@@299 T@U) ) (! (= (type ($generated@@294 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@294 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@282 (type $generated@@300))))
(let (($generated@@302 ($generated@@281 (type $generated@@300))))
(= (type ($generated@@295 $generated@@300)) ($generated@@82 $generated@@302 $generated@@301))))
 :pattern ( ($generated@@295 $generated@@300))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (= (type $generated@@303) ($generated@@279 $generated@@155 $generated@@155)) (= (type $generated@@304) $generated@@155)) ($generated@@0 ($generated@@87 ($generated@@292 $generated@@303) $generated@@304))) (< ($generated@@293 ($generated@@294 $generated@@146 ($generated@@87 ($generated@@295 $generated@@303) $generated@@304))) ($generated@@293 ($generated@@280 $generated@@303))))
 :pattern ( ($generated@@87 ($generated@@292 $generated@@303) $generated@@304) ($generated@@280 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@155)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@70) (= (type $generated@@309) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@260 ($generated@@305 $generated@@307) $generated@@308 $generated@@309) ($generated@@80 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@260 ($generated@@305 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@311) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@312) $generated@@155)) (= (type $generated@@313) $generated@@70)) ($generated@@138 $generated@@310 $generated@@311)) ($generated@@260 $generated@@312 $generated@@313 $generated@@310)) ($generated@@260 $generated@@312 $generated@@313 $generated@@311))
 :pattern ( ($generated@@138 $generated@@310 $generated@@311) ($generated@@260 $generated@@312 $generated@@313 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@314) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@315) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@317) $generated@@70)) ($generated@@138 $generated@@314 $generated@@315)) ($generated@@80 $generated@@316 $generated@@317 $generated@@314)) ($generated@@80 $generated@@316 $generated@@317 $generated@@315))
 :pattern ( ($generated@@138 $generated@@314 $generated@@315) ($generated@@80 $generated@@316 $generated@@317 $generated@@314))
)))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@319 $generated@@320)) ($generated@@82 $generated@@320 $generated@@2))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@85 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@82 $generated@@322 $generated@@2)) (and (= (= ($generated@@318 $generated@@321) 0) (= $generated@@321 ($generated@@319 $generated@@322))) (=> (not (= ($generated@@318 $generated@@321) 0)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) (< 0 ($generated ($generated@@87 $generated@@321 $generated@@323))))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) ($generated@@279 $generated@@325 $generated@@326))
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@87 ($generated@@292 ($generated@@324 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@87 ($generated@@292 ($generated@@324 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@82 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@85 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@82 $generated@@349 $generated@@2)) (= ($generated@@164 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@87 $generated@@348 $generated@@350))) (<= ($generated ($generated@@87 $generated@@348 $generated@@350)) ($generated@@318 $generated@@348))))
 :pattern ( ($generated@@87 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@164 $generated@@348))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@155) ($generated@@228 $generated@@351 $generated@@225)) (and (= ($generated@@305 ($generated@@294 $generated@@146 $generated@@351)) $generated@@351) ($generated@@142 ($generated@@294 $generated@@146 $generated@@351) $generated@@225)))
 :pattern ( ($generated@@228 $generated@@351 $generated@@225))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@155) ($generated@@228 $generated@@352 $generated@@235)) (and (= ($generated@@305 ($generated@@294 $generated@@146 $generated@@352)) $generated@@352) ($generated@@142 ($generated@@294 $generated@@146 $generated@@352) $generated@@235)))
 :pattern ( ($generated@@228 $generated@@352 $generated@@235))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@282 (type $generated@@353))))
(let (($generated@@355 ($generated@@281 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@279 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@324 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@87 ($generated@@292 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@292 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@282 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@82 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@282 (type $generated@@360))))
(let (($generated@@362 ($generated@@281 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@279 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@324 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@334 (type $generated@@364))))
(let (($generated@@366 ($generated@@333 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@332 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@331 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@330 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@334 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@334 (type $generated@@371))))
(let (($generated@@373 ($generated@@333 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@332 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@331 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@376) $generated@@70)) (= ($generated@@142 $generated@@375 ($generated@@163 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@155) (< 0 ($generated ($generated@@87 $generated@@375 $generated@@377)))) ($generated@@228 $generated@@377 $generated@@376))
 :pattern ( ($generated@@87 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@142 $generated@@375 ($generated@@163 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@378) $generated@@146) (= (type $generated@@379) $generated@@146)) true) (= ($generated@@243 $generated@@378 $generated@@379) true))
 :pattern ( ($generated@@243 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@380 ($generated@@246 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@155) ($generated@@0 ($generated@@87 $generated@@380 $generated@@383))) ($generated@@260 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@87 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@80 $generated@@380 ($generated@@246 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@385) $generated@@70)) (= (type $generated@@386) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@384 ($generated@@251 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@155) ($generated@@0 ($generated@@87 $generated@@384 $generated@@387))) ($generated@@260 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@87 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@80 $generated@@384 ($generated@@251 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(= ($generated ($generated@@87 ($generated@@319 $generated@@389) $generated@@388)) 0))
 :pattern ( (let (($generated@@389 (type $generated@@388)))
($generated@@87 ($generated@@319 $generated@@389) $generated@@388)))
)))
(assert (forall (($generated@@391 T@U) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@82 $generated@@155 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@279 $generated@@155 $generated@@155)) (= (type $generated@@393) $generated@@155)) (= ($generated@@0 ($generated@@87 ($generated@@390 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@87 ($generated@@292 $generated@@392) ($generated@@153 ($generated@@294 $generated@@146 $generated@@393)))) (= ($generated@@87 ($generated@@295 $generated@@392) ($generated@@153 ($generated@@294 $generated@@146 $generated@@393))) ($generated@@154 ($generated@@294 $generated@@146 $generated@@393))))))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@155 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@334 (type $generated@@397))))
(let (($generated@@399 ($generated@@333 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@332 $generated@@155 $generated@@155)) (= (type $generated@@401) $generated@@155)) (= ($generated@@0 ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@400) ($generated@@153 ($generated@@294 $generated@@146 $generated@@401)))) (= ($generated@@87 ($generated@@395 $generated@@400) ($generated@@153 ($generated@@294 $generated@@146 $generated@@401))) ($generated@@154 ($generated@@294 $generated@@146 $generated@@401))))))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@281 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@279 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@87 ($generated@@357 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@87 ($generated@@292 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@87 ($generated@@295 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@87 ($generated@@292 $generated@@402) $generated@@406))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@87 ($generated@@357 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@333 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@332 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@407) $generated@@411))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@70)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@279 $generated@@155 $generated@@155)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) $generated@@70)) (= (type $generated@@418) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@292 $generated@@415) $generated@@419))) (and ($generated@@260 ($generated@@87 ($generated@@295 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@260 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@415) $generated@@419))
 :pattern ( ($generated@@87 ($generated@@292 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@70)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@332 $generated@@155 $generated@@155)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) $generated@@70)) (= (type $generated@@426) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@423) $generated@@427))) (and ($generated@@260 ($generated@@87 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@260 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@282 (type $generated@@429))))
(let (($generated@@432 ($generated@@281 (type $generated@@429))))
 (=> (and (and (= (type $generated@@429) ($generated@@279 $generated@@432 $generated@@431)) (= (type $generated@@430) ($generated@@279 $generated@@432 $generated@@431))) ($generated@@428 $generated@@429 $generated@@430)) (= $generated@@429 $generated@@430))))
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@434) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@433 $generated@@435))) (and ($generated@@138 $generated@@433 $generated@@434) ($generated@@138 $generated@@434 $generated@@435))) ($generated@@138 $generated@@433 $generated@@435))
 :pattern ( ($generated@@138 $generated@@433 $generated@@434) ($generated@@138 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@279 $generated@@155 $generated@@155)) (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@236 $generated@@437)) (= ($generated@@80 ($generated@@280 $generated@@436) $generated@@225 $generated@@437) ($generated@@80 $generated@@436 ($generated@@412 $generated@@235 $generated@@46) $generated@@437)))
 :pattern ( ($generated@@80 ($generated@@280 $generated@@436) $generated@@225 $generated@@437))
)))
(assert (forall (($generated@@439 T@T) ) (! (= (type ($generated@@438 $generated@@439)) ($generated@@82 $generated@@439 $generated@@4))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@334 (type $generated@@440))))
(let (($generated@@442 ($generated@@333 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@332 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@331 $generated@@442 $generated@@441)) (= ($generated@@330 $generated@@440) ($generated@@438 $generated@@442))))))
 :pattern ( ($generated@@330 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@334 (type $generated@@443))))
(let (($generated@@445 ($generated@@333 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@332 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@331 $generated@@445 $generated@@444)) (= ($generated@@368 $generated@@443) ($generated@@438 $generated@@444))))))
 :pattern ( ($generated@@368 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@334 (type $generated@@446))))
(let (($generated@@448 ($generated@@333 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@332 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@331 $generated@@448 $generated@@447)) (= ($generated@@394 $generated@@446) ($generated@@438 $generated@@155))))))
 :pattern ( ($generated@@394 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@282 (type $generated@@449))))
(let (($generated@@451 ($generated@@281 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@279 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@155) (= (type $generated@@453) $generated@@155)) ($generated@@0 ($generated@@87 ($generated@@390 $generated@@449) ($generated@@305 ($generated@@227 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@390 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@334 (type $generated@@454))))
(let (($generated@@456 ($generated@@333 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@332 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@331 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@155) (= (type $generated@@458) $generated@@155)) ($generated@@0 ($generated@@87 ($generated@@394 $generated@@454) ($generated@@305 ($generated@@227 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@394 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@155) ($generated@@228 $generated@@459 $generated@@46)) (and (= ($generated@@305 ($generated@@294 $generated@@2 $generated@@459)) $generated@@459) ($generated@@142 ($generated@@294 $generated@@2 $generated@@459) $generated@@46)))
 :pattern ( ($generated@@228 $generated@@459 $generated@@46))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@155) ($generated@@228 $generated@@460 $generated@@47)) (and (= ($generated@@305 ($generated@@294 $generated@@3 $generated@@460)) $generated@@460) ($generated@@142 ($generated@@294 $generated@@3 $generated@@460) $generated@@47)))
 :pattern ( ($generated@@228 $generated@@460 $generated@@47))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@155) ($generated@@228 $generated@@461 $generated@@44)) (and (= ($generated@@305 ($generated@@294 $generated@@4 $generated@@461)) $generated@@461) ($generated@@142 ($generated@@294 $generated@@4 $generated@@461) $generated@@44)))
 :pattern ( ($generated@@228 $generated@@461 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@462) 20))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@155) ($generated@@228 $generated@@463 $generated@@45)) (and (= ($generated@@305 ($generated@@294 $generated@@462 $generated@@463)) $generated@@463) ($generated@@142 ($generated@@294 $generated@@462 $generated@@463) $generated@@45)))
 :pattern ( ($generated@@228 $generated@@463 $generated@@45))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@70) (= ($generated@@228 ($generated@@305 $generated@@464) $generated@@465) ($generated@@142 $generated@@464 $generated@@465)))
 :pattern ( ($generated@@228 ($generated@@305 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@85 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@82 $generated@@467 $generated@@2)) (<= 0 ($generated@@318 $generated@@466))))
 :pattern ( ($generated@@318 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@274 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@273 $generated@@469)) (<= 0 ($generated@@272 $generated@@468))))
 :pattern ( ($generated@@272 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@470 ($generated@@412 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@412 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@70) (= (type $generated@@477) $generated@@70)) (= ($generated@@474 ($generated@@412 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@412 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@78 ($generated@@412 $generated@@478 $generated@@479)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@420 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@420 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@420 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@78 ($generated@@420 $generated@@488 $generated@@489)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@155) (= (type $generated@@491) $generated@@155)) (= ($generated@@160 ($generated@@227 $generated@@490 $generated@@491)) $generated@@61))
 :pattern ( ($generated@@227 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@145 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@145 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@145 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@145 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@155) (= (type $generated@@501) $generated@@155)) (= ($generated@@153 ($generated@@227 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@227 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@155) (= (type $generated@@503) $generated@@155)) (= ($generated@@154 ($generated@@227 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@227 $generated@@502 $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ($generated@@508 Int) ) (! (let (($generated@@509 ($generated@@274 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507 $generated@@508)) $generated@@509))
 :pattern ( ($generated@@505 $generated@@507 $generated@@508))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@273 $generated@@155)) (= (type $generated@@511) $generated@@70)) (= (type $generated@@512) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@510 ($generated@@504 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@272 $generated@@510))) ($generated@@260 ($generated@@505 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@505 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@80 $generated@@510 ($generated@@504 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 Int) ) (! (= ($generated@@514 ($generated@@81 $generated@@515)) $generated@@515)
 :pattern ( ($generated@@81 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@516 ($generated@@246 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@246 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@78 ($generated@@246 $generated@@519)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@251 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@251 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@523)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@163 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@163 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@78 ($generated@@163 $generated@@527)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@504 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@504 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@78 ($generated@@504 $generated@@531)) $generated@@57))
 :pattern ( ($generated@@504 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) ($generated@@279 $generated@@155 $generated@@155)) (= ($generated@@160 ($generated@@280 $generated@@532)) $generated@@63))
 :pattern ( ($generated@@280 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) ($generated@@279 $generated@@155 $generated@@155))
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) ($generated@@279 $generated@@155 $generated@@155)) (= ($generated@@533 ($generated@@280 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@280 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
(= ($generated@@294 $generated@@537 ($generated@@305 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@305 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@279 $generated@@155 $generated@@155)) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) (= ($generated@@142 $generated@@538 ($generated@@412 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@292 $generated@@538) $generated@@541))) (and ($generated@@228 ($generated@@87 ($generated@@295 $generated@@538) $generated@@541) $generated@@540) ($generated@@228 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@538) $generated@@541))
 :pattern ( ($generated@@87 ($generated@@292 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@142 $generated@@538 ($generated@@412 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@332 $generated@@155 $generated@@155)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@142 $generated@@542 ($generated@@420 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@542) $generated@@545))) (and ($generated@@228 ($generated@@87 ($generated@@395 $generated@@542) $generated@@545) $generated@@544) ($generated@@228 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@142 $generated@@542 ($generated@@420 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@155) (= (type $generated@@548) $generated@@155)) (< ($generated@@546 $generated@@547) ($generated@@293 ($generated@@227 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@227 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@155) (= (type $generated@@550) $generated@@155)) (< ($generated@@546 $generated@@550) ($generated@@293 ($generated@@227 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@227 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@146) (= (type $generated@@552) $generated@@146)) true) (= ($generated@@240 $generated@@551 $generated@@552) ($generated@@428 ($generated@@533 $generated@@551) ($generated@@533 $generated@@552))))
 :pattern ( ($generated@@240 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@155) (= (type $generated@@554) $generated@@70)) (= (type $generated@@555) $generated@@70)) ($generated@@228 $generated@@553 ($generated@@412 $generated@@554 $generated@@555))) (and (= ($generated@@305 ($generated@@294 ($generated@@279 $generated@@155 $generated@@155) $generated@@553)) $generated@@553) ($generated@@142 ($generated@@294 ($generated@@279 $generated@@155 $generated@@155) $generated@@553) ($generated@@412 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@228 $generated@@553 ($generated@@412 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@155) (= (type $generated@@557) $generated@@70)) (= (type $generated@@558) $generated@@70)) ($generated@@228 $generated@@556 ($generated@@420 $generated@@557 $generated@@558))) (and (= ($generated@@305 ($generated@@294 ($generated@@332 $generated@@155 $generated@@155) $generated@@556)) $generated@@556) ($generated@@142 ($generated@@294 ($generated@@332 $generated@@155 $generated@@155) $generated@@556) ($generated@@420 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@228 $generated@@556 ($generated@@420 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@70) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) $generated@@155)) ($generated@@228 $generated@@561 ($generated@@145 $generated@@559 $generated@@560))) (and (= ($generated@@305 ($generated@@294 $generated@@146 $generated@@561)) $generated@@561) ($generated@@142 ($generated@@294 $generated@@146 $generated@@561) ($generated@@145 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@228 $generated@@561 ($generated@@145 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
 (not ($generated@@0 ($generated@@87 ($generated@@438 $generated@@563) $generated@@562))))
 :pattern ( (let (($generated@@563 (type $generated@@562)))
($generated@@87 ($generated@@438 $generated@@563) $generated@@562)))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@75)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@70) (= (type $generated@@567) $generated@@70)) (and (= ($generated@@78 ($generated@@145 $generated@@566 $generated@@567)) $generated@@62) (= ($generated@@564 ($generated@@145 $generated@@566 $generated@@567)) $generated@@67)))
 :pattern ( ($generated@@145 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@282 (type $generated@@568))))
(let (($generated@@571 ($generated@@281 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@279 $generated@@571 $generated@@570)) (= (type $generated@@569) ($generated@@279 $generated@@571 $generated@@570))) (= ($generated@@428 $generated@@568 $generated@@569)  (and (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@571) (= ($generated@@0 ($generated@@87 ($generated@@292 $generated@@568) $generated@@572)) ($generated@@0 ($generated@@87 ($generated@@292 $generated@@569) $generated@@572))))
 :no-pattern (type $generated@@572)
 :no-pattern ($generated $generated@@572)
 :no-pattern ($generated@@0 $generated@@572)
)) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@571) ($generated@@0 ($generated@@87 ($generated@@292 $generated@@568) $generated@@573))) (= ($generated@@87 ($generated@@295 $generated@@568) $generated@@573) ($generated@@87 ($generated@@295 $generated@@569) $generated@@573)))
 :no-pattern (type $generated@@573)
 :no-pattern ($generated $generated@@573)
 :no-pattern ($generated@@0 $generated@@573)
)))))))
 :pattern ( ($generated@@428 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@279 $generated@@155 $generated@@155)) (= (type $generated@@575) $generated@@146)) ($generated@@0 ($generated@@87 ($generated@@292 $generated@@574) ($generated@@305 $generated@@575)))) (< ($generated@@293 $generated@@575) ($generated@@293 ($generated@@280 $generated@@574))))
 :pattern ( ($generated@@87 ($generated@@292 $generated@@574) ($generated@@305 $generated@@575)) ($generated@@280 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@146) (= ($generated@@546 ($generated@@305 $generated@@576)) ($generated@@293 $generated@@576)))
 :pattern ( ($generated@@546 ($generated@@305 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@155) ($generated@@228 $generated@@577 ($generated@@81 0))) (and (= ($generated@@305 ($generated@@294 $generated@@2 $generated@@577)) $generated@@577) ($generated@@142 ($generated@@294 ($generated@@82 $generated@@155 $generated@@4) $generated@@577) ($generated@@81 0))))
 :pattern ( ($generated@@228 $generated@@577 ($generated@@81 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@155) (= (type $generated@@579) $generated@@70)) ($generated@@228 $generated@@578 ($generated@@246 $generated@@579))) (and (= ($generated@@305 ($generated@@294 ($generated@@82 $generated@@155 $generated@@4) $generated@@578)) $generated@@578) ($generated@@142 ($generated@@294 ($generated@@82 $generated@@155 $generated@@4) $generated@@578) ($generated@@246 $generated@@579))))
 :pattern ( ($generated@@228 $generated@@578 ($generated@@246 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@155) (= (type $generated@@581) $generated@@70)) ($generated@@228 $generated@@580 ($generated@@251 $generated@@581))) (and (= ($generated@@305 ($generated@@294 ($generated@@82 $generated@@155 $generated@@4) $generated@@580)) $generated@@580) ($generated@@142 ($generated@@294 ($generated@@82 $generated@@155 $generated@@4) $generated@@580) ($generated@@251 $generated@@581))))
 :pattern ( ($generated@@228 $generated@@580 ($generated@@251 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@155) (= (type $generated@@583) $generated@@70)) ($generated@@228 $generated@@582 ($generated@@163 $generated@@583))) (and (= ($generated@@305 ($generated@@294 ($generated@@82 $generated@@155 $generated@@2) $generated@@582)) $generated@@582) ($generated@@142 ($generated@@294 ($generated@@82 $generated@@155 $generated@@2) $generated@@582) ($generated@@163 $generated@@583))))
 :pattern ( ($generated@@228 $generated@@582 ($generated@@163 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@155) (= (type $generated@@585) $generated@@70)) ($generated@@228 $generated@@584 ($generated@@504 $generated@@585))) (and (= ($generated@@305 ($generated@@294 ($generated@@273 $generated@@155) $generated@@584)) $generated@@584) ($generated@@142 ($generated@@294 ($generated@@273 $generated@@155) $generated@@584) ($generated@@504 $generated@@585))))
 :pattern ( ($generated@@228 $generated@@584 ($generated@@504 $generated@@585)))
)))
(assert (= ($generated@@78 $generated@@225) $generated@@64))
(assert (= ($generated@@564 $generated@@225) $generated@@68))
(assert (= ($generated@@78 $generated@@235) $generated@@65))
(assert (= ($generated@@564 $generated@@235) $generated@@69))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@586 ($generated@@163 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@155) (< 0 ($generated ($generated@@87 $generated@@586 $generated@@589)))) ($generated@@260 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@87 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@80 $generated@@586 ($generated@@163 $generated@@587) $generated@@588))
)))
(assert (= $generated@@161 ($generated@@256 $generated@@161)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@146) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@236 $generated@@592) (and ($generated@@144 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@70) ($generated@@80 $generated@@590 ($generated@@145 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@80 $generated@@590 ($generated@@145 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@260 ($generated@@153 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@260 ($generated@@153 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@146) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@236 $generated@@596) (and ($generated@@144 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@70) ($generated@@80 $generated@@594 ($generated@@145 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@80 $generated@@594 ($generated@@145 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@260 ($generated@@154 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@260 ($generated@@154 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@155) (= (type $generated@@599) $generated@@155)) (= ($generated@@227 ($generated@@256 $generated@@598) ($generated@@256 $generated@@599)) ($generated@@256 ($generated@@227 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@227 ($generated@@256 $generated@@598) ($generated@@256 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@146) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@236 $generated@@601) (and ($generated@@224 $generated@@600) ($generated@@80 $generated@@600 $generated@@225 $generated@@601)))) ($generated@@80 ($generated@@533 $generated@@600) ($generated@@412 $generated@@235 $generated@@46) $generated@@601))
 :pattern ( ($generated@@80 ($generated@@533 $generated@@600) ($generated@@412 $generated@@235 $generated@@46) $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) ($generated@@279 $generated@@155 $generated@@155)) (= ($generated@@280 ($generated@@256 $generated@@602)) ($generated@@256 ($generated@@280 $generated@@602))))
 :pattern ( ($generated@@280 ($generated@@256 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (= ($generated@@305 ($generated@@256 $generated@@603)) ($generated@@256 ($generated@@305 $generated@@603)))
 :pattern ( ($generated@@305 ($generated@@256 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) ($generated@@279 $generated@@155 $generated@@155)) (= ($generated@@142 ($generated@@280 $generated@@604) $generated@@225) ($generated@@142 $generated@@604 ($generated@@412 $generated@@235 $generated@@46))))
 :pattern ( ($generated@@142 ($generated@@280 $generated@@604) $generated@@225))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@274 (type $generated@@605))))
 (=> (and (= (type $generated@@605) ($generated@@273 $generated@@606)) (= ($generated@@272 $generated@@605) 0)) (= $generated@@605 ($generated@@271 $generated@@606))))
 :pattern ( ($generated@@272 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@608)))
 (=> (and (and (= (type $generated@@607) ($generated@@82 $generated@@610 $generated@@2)) (= (type $generated@@609) $generated@@2)) (<= 0 ($generated $generated@@609))) (= ($generated@@318 ($generated@@88 $generated@@607 $generated@@608 $generated@@609)) (+ (- ($generated@@318 $generated@@607) ($generated ($generated@@87 $generated@@607 $generated@@608))) ($generated $generated@@609)))))
 :pattern ( ($generated@@318 ($generated@@88 $generated@@607 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@612) $generated@@2)) ($generated@@80 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@80 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@614) $generated@@3)) ($generated@@80 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@80 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@616) $generated@@4)) ($generated@@80 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@80 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@618) $generated@@462)) ($generated@@80 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@80 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@620) $generated@@155)) ($generated@@80 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@80 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@273 $generated@@155)) (= (type $generated@@622) $generated@@70)) (= ($generated@@142 $generated@@621 ($generated@@504 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@272 $generated@@621))) ($generated@@228 ($generated@@505 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@505 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@142 $generated@@621 ($generated@@504 $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@273 $generated@@155)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@272 $generated@@625))) (< ($generated@@293 ($generated@@294 $generated@@146 ($generated@@505 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@293 ($generated@@294 $generated@@146 ($generated@@505 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@279 $generated@@155 $generated@@155)) (= (type $generated@@628) $generated@@70)) (= (type $generated@@629) $generated@@70)) ($generated@@142 $generated@@627 ($generated@@412 $generated@@628 $generated@@629))) (and (and ($generated@@142 ($generated@@292 $generated@@627) ($generated@@246 $generated@@628)) ($generated@@142 ($generated@@357 $generated@@627) ($generated@@246 $generated@@629))) ($generated@@142 ($generated@@390 $generated@@627) ($generated@@246 ($generated@@145 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@142 $generated@@627 ($generated@@412 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@332 $generated@@155 $generated@@155)) (= (type $generated@@631) $generated@@70)) (= (type $generated@@632) $generated@@70)) ($generated@@142 $generated@@630 ($generated@@420 $generated@@631 $generated@@632))) (and (and ($generated@@142 ($generated@@330 $generated@@630) ($generated@@251 $generated@@631)) ($generated@@142 ($generated@@368 $generated@@630) ($generated@@251 $generated@@632))) ($generated@@142 ($generated@@394 $generated@@630) ($generated@@251 ($generated@@145 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@142 $generated@@630 ($generated@@420 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@142 $generated@@633 $generated@@46))
 :pattern ( ($generated@@142 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@142 $generated@@634 $generated@@47))
 :pattern ( ($generated@@142 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@142 $generated@@635 $generated@@44))
 :pattern ( ($generated@@142 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@462) ($generated@@142 $generated@@636 $generated@@45))
 :pattern ( ($generated@@142 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@155) ($generated@@142 $generated@@637 $generated@@48))
 :pattern ( ($generated@@142 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 (T@U) Bool)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@638) $generated@@146) (= (type $generated@@639) ($generated@@170 $generated@@83 $generated@@4))) (= (type $generated@@640) $generated@@83)) (= (type $generated@@641) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@642) $generated@@146)) (= (type $generated@@643) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@645) $generated@@146)) (= (type $generated@@646) ($generated@@279 $generated@@155 $generated@@155))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@648 true))
(let (($generated@@649  (=> (and (not ($generated@@0 ($generated@@87 ($generated@@292 ($generated@@533 $generated@@638)) ($generated@@305 $generated@@161)))) (= (ControlFlow 0 4) 1)) $generated@@648)))
(let (($generated@@650  (=> (and ($generated@@0 ($generated@@87 ($generated@@292 ($generated@@533 $generated@@638)) ($generated@@305 $generated@@161))) ($generated@@224 $generated@@638)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@87 ($generated@@292 ($generated@@533 $generated@@638)) ($generated@@305 ($generated@@256 $generated@@161))))) (=> (and ($generated@@224 $generated@@638) (= (ControlFlow 0 2) 1)) $generated@@648)))))
(let (($generated@@651  (=> (= $generated@@639 ($generated@@169 $generated@@640 $generated@@641 $generated@@60 false)) (=> (and ($generated@@142 $generated@@642 $generated@@225) ($generated@@80 $generated@@642 $generated@@225 $generated@@641)) (=> (and (and (and ($generated@@236 $generated@@643) ($generated@@644 $generated@@643)) (and ($generated@@142 $generated@@638 $generated@@225) ($generated@@80 $generated@@638 $generated@@225 $generated@@643))) (and (and (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@83) (=> (and (not (= $generated@@652 $generated@@640)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@641 $generated@@652) $generated@@60))) (= ($generated@@87 $generated@@643 $generated@@652) ($generated@@87 $generated@@641 $generated@@652))))
 :pattern ( ($generated@@87 $generated@@643 $generated@@652))
)) ($generated@@138 $generated@@641 $generated@@643)) (and ($generated@@224 $generated@@638) ($generated@@224 $generated@@638)))) (and (=> (= (ControlFlow 0 5) 2) $generated@@650) (=> (= (ControlFlow 0 5) 4) $generated@@649)))))))
(let (($generated@@653  (=> (and ($generated@@236 $generated@@641) ($generated@@644 $generated@@641)) (=> (and (and ($generated@@142 $generated@@645 $generated@@225) ($generated@@80 $generated@@645 $generated@@225 $generated@@641)) true) (=> (and (and (and ($generated@@142 $generated@@646 ($generated@@412 $generated@@235 $generated@@46)) ($generated@@80 $generated@@646 ($generated@@412 $generated@@235 $generated@@46) $generated@@641)) true) (and (= 3 $generated@@647) (= (ControlFlow 0 6) 5))) $generated@@651)))))
$generated@@653))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
