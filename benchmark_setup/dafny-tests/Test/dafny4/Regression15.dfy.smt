(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@537 (T@T) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@155 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@155 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@216 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@149) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@242 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@149) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@242 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@365) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@373) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@242 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@242 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= (type ($generated@@400 $generated@@401 $generated@@402)) ($generated@@76 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@405)))
 (=> (and (and (= (type $generated@@404) ($generated@@76 $generated@@407 $generated@@4)) (= (type $generated@@406) $generated@@407)) ($generated@@0 ($generated@@81 $generated@@404 $generated@@406))) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))))
 :pattern ( ($generated@@400 $generated@@404 $generated@@405) ($generated@@81 $generated@@404 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@409)))
 (=> (and (= (type $generated@@408) ($generated@@76 $generated@@411 $generated@@4)) (= (type $generated@@410) $generated@@411)) (= ($generated@@0 ($generated@@81 ($generated@@400 $generated@@408 $generated@@409) $generated@@410))  (or (= $generated@@410 $generated@@409) ($generated@@0 ($generated@@81 $generated@@408 $generated@@410))))))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@412 $generated@@414))) (and ($generated@@132 $generated@@412 $generated@@413) ($generated@@132 $generated@@413 $generated@@414))) ($generated@@132 $generated@@412 $generated@@414))
 :pattern ( ($generated@@132 $generated@@412 $generated@@413) ($generated@@132 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@76 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@303 (type $generated@@417))))
(let (($generated@@419 ($generated@@302 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@301 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@300 $generated@@419 $generated@@418)) (= ($generated@@299 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@299 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@303 (type $generated@@420))))
(let (($generated@@422 ($generated@@302 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@301 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@300 $generated@@422 $generated@@421)) (= ($generated@@335 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@335 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@303 (type $generated@@423))))
(let (($generated@@425 ($generated@@302 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@301 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@300 $generated@@425 $generated@@424)) (= ($generated@@366 $generated@@423) ($generated@@415 $generated@@149))))))
 :pattern ( ($generated@@366 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@285 (type $generated@@426))))
(let (($generated@@428 ($generated@@284 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@283 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@282 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@149) (= (type $generated@@430) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@426) ($generated@@262 ($generated@@215 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@355 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@303 (type $generated@@431))))
(let (($generated@@433 ($generated@@302 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@301 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@300 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@149) (= (type $generated@@435) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@431) ($generated@@262 ($generated@@215 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@366 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@149) ($generated@@216 $generated@@436 $generated@@46)) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@356 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@149) ($generated@@216 $generated@@437 $generated@@47)) (and (= ($generated@@262 ($generated@@356 $generated@@3 $generated@@437)) $generated@@437) ($generated@@136 ($generated@@356 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@149) ($generated@@216 $generated@@438 $generated@@44)) (and (= ($generated@@262 ($generated@@356 $generated@@4 $generated@@438)) $generated@@438) ($generated@@136 ($generated@@356 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@149) ($generated@@216 $generated@@440 $generated@@45)) (and (= ($generated@@262 ($generated@@356 $generated@@439 $generated@@440)) $generated@@440) ($generated@@136 ($generated@@356 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@441) $generated@@442) ($generated@@136 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@79 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@76 $generated@@444 $generated@@2)) (<= 0 ($generated@@275 $generated@@443))))
 :pattern ( ($generated@@275 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@257 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@256 $generated@@446)) (<= 0 ($generated@@255 $generated@@445))))
 :pattern ( ($generated@@255 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@384 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@384 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@384 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@384 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@392 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@392 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@392 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@392 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) (= (type $generated@@468) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@139 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@139 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@139 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@139 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@149) (= (type $generated@@478) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@215 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@149) (= (type $generated@@480) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@215 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@257 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@256 $generated@@149)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@255 $generated@@487))) ($generated@@242 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
 (=> (= (type $generated@@491) ($generated@@76 $generated@@493 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@491 $generated@@492) $generated@@492))))
 :pattern ( ($generated@@400 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@75 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@75 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@225 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@225 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@230 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@230 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@154 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@154 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@481 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@481 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@481 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@356 $generated@@513 ($generated@@262 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@262 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) (= ($generated@@136 $generated@@514 ($generated@@384 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@514) $generated@@517))) (and ($generated@@216 ($generated@@81 ($generated@@357 $generated@@514) $generated@@517) $generated@@516) ($generated@@216 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@514) $generated@@517))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@136 $generated@@514 ($generated@@384 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= ($generated@@136 $generated@@518 ($generated@@392 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@518) $generated@@521))) (and ($generated@@216 ($generated@@81 ($generated@@367 $generated@@518) $generated@@521) $generated@@520) ($generated@@216 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@518) $generated@@521))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@136 $generated@@518 ($generated@@392 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@149) (= (type $generated@@525) $generated@@149)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@215 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@215 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@149) (= (type $generated@@527) $generated@@149)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@215 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@215 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@149) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@216 $generated@@528 ($generated@@384 $generated@@529 $generated@@530))) (and (= ($generated@@262 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@528)) $generated@@528) ($generated@@136 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@528) ($generated@@384 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@216 $generated@@528 ($generated@@384 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@149) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@216 $generated@@531 ($generated@@392 $generated@@532 $generated@@533))) (and (= ($generated@@262 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@531)) $generated@@531) ($generated@@136 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@531) ($generated@@392 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@216 $generated@@531 ($generated@@392 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@149)) ($generated@@216 $generated@@536 ($generated@@139 $generated@@534 $generated@@535))) (and (= ($generated@@262 ($generated@@356 $generated@@140 $generated@@536)) $generated@@536) ($generated@@136 ($generated@@356 $generated@@140 $generated@@536) ($generated@@139 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@216 $generated@@536 ($generated@@139 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@538 T@T) ) (! (= (type ($generated@@537 $generated@@538)) ($generated@@76 $generated@@538 $generated@@4))
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@81 ($generated@@537 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@81 ($generated@@537 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@81 ($generated@@415 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@81 ($generated@@415 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@69)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@64) (= (type $generated@@546) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@545 $generated@@546)) $generated@@62) (= ($generated@@543 ($generated@@139 $generated@@545 $generated@@546)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@140) (= ($generated@@522 ($generated@@262 $generated@@547)) ($generated@@523 $generated@@547)))
 :pattern ( ($generated@@522 ($generated@@262 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@149) ($generated@@216 $generated@@548 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@548)) $generated@@548) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@548) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@548 ($generated@@75 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@149) (= (type $generated@@550) $generated@@64)) ($generated@@216 $generated@@549 ($generated@@225 $generated@@550))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@549)) $generated@@549) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@549) ($generated@@225 $generated@@550))))
 :pattern ( ($generated@@216 $generated@@549 ($generated@@225 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@149) (= (type $generated@@552) $generated@@64)) ($generated@@216 $generated@@551 ($generated@@230 $generated@@552))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@551)) $generated@@551) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@551) ($generated@@230 $generated@@552))))
 :pattern ( ($generated@@216 $generated@@551 ($generated@@230 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@64)) ($generated@@216 $generated@@553 ($generated@@154 $generated@@554))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@553)) $generated@@553) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@553) ($generated@@154 $generated@@554))))
 :pattern ( ($generated@@216 $generated@@553 ($generated@@154 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@149) (= (type $generated@@556) $generated@@64)) ($generated@@216 $generated@@555 ($generated@@481 $generated@@556))) (and (= ($generated@@262 ($generated@@356 ($generated@@256 $generated@@149) $generated@@555)) $generated@@555) ($generated@@136 ($generated@@356 ($generated@@256 $generated@@149) $generated@@555) ($generated@@481 $generated@@556))))
 :pattern ( ($generated@@216 $generated@@555 ($generated@@481 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@154 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@557 $generated@@560)))) ($generated@@242 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@154 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@140) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@563) (and ($generated@@138 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@139 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@139 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@242 ($generated@@147 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@140) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@567) (and ($generated@@138 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@139 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@139 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@242 ($generated@@148 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@149) (= (type $generated@@570) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@569) ($generated@@237 $generated@@570)) ($generated@@237 ($generated@@215 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@569) ($generated@@237 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@571))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@572)) ($generated@@237 ($generated@@262 $generated@@572)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@257 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@256 $generated@@574)) (= ($generated@@255 $generated@@573) 0)) (= $generated@@573 ($generated@@254 $generated@@574))))
 :pattern ( ($generated@@255 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@275 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@275 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@439)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@149)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@256 $generated@@149)) (= (type $generated@@590) $generated@@64)) (= ($generated@@136 $generated@@589 ($generated@@481 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@255 $generated@@589))) ($generated@@216 ($generated@@482 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@482 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@136 $generated@@589 ($generated@@481 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@255 $generated@@593))) (< ($generated@@523 ($generated@@356 $generated@@140 ($generated@@482 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@523 ($generated@@356 $generated@@140 ($generated@@482 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@136 $generated@@595 ($generated@@384 $generated@@596 $generated@@597))) (and (and ($generated@@136 ($generated@@281 $generated@@595) ($generated@@225 $generated@@596)) ($generated@@136 ($generated@@324 $generated@@595) ($generated@@225 $generated@@597))) ($generated@@136 ($generated@@355 $generated@@595) ($generated@@225 ($generated@@139 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@136 $generated@@595 ($generated@@384 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@136 $generated@@598 ($generated@@392 $generated@@599 $generated@@600))) (and (and ($generated@@136 ($generated@@299 $generated@@598) ($generated@@230 $generated@@599)) ($generated@@136 ($generated@@335 $generated@@598) ($generated@@230 $generated@@600))) ($generated@@136 ($generated@@366 $generated@@598) ($generated@@230 ($generated@@139 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@136 $generated@@598 ($generated@@392 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@136 $generated@@601 $generated@@46))
 :pattern ( ($generated@@136 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@136 $generated@@602 $generated@@47))
 :pattern ( ($generated@@136 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@136 $generated@@603 $generated@@44))
 :pattern ( ($generated@@136 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@439) ($generated@@136 $generated@@604 $generated@@45))
 :pattern ( ($generated@@136 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@149) ($generated@@136 $generated@@605 $generated@@48))
 :pattern ( ($generated@@136 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@537 (T@T) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@155 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@155 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@216 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@149) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@242 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@149) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@242 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@365) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@373) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@242 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@242 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= (type ($generated@@400 $generated@@401 $generated@@402)) ($generated@@76 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@405)))
 (=> (and (and (= (type $generated@@404) ($generated@@76 $generated@@407 $generated@@4)) (= (type $generated@@406) $generated@@407)) ($generated@@0 ($generated@@81 $generated@@404 $generated@@406))) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))))
 :pattern ( ($generated@@400 $generated@@404 $generated@@405) ($generated@@81 $generated@@404 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@409)))
 (=> (and (= (type $generated@@408) ($generated@@76 $generated@@411 $generated@@4)) (= (type $generated@@410) $generated@@411)) (= ($generated@@0 ($generated@@81 ($generated@@400 $generated@@408 $generated@@409) $generated@@410))  (or (= $generated@@410 $generated@@409) ($generated@@0 ($generated@@81 $generated@@408 $generated@@410))))))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@412 $generated@@414))) (and ($generated@@132 $generated@@412 $generated@@413) ($generated@@132 $generated@@413 $generated@@414))) ($generated@@132 $generated@@412 $generated@@414))
 :pattern ( ($generated@@132 $generated@@412 $generated@@413) ($generated@@132 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@76 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@303 (type $generated@@417))))
(let (($generated@@419 ($generated@@302 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@301 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@300 $generated@@419 $generated@@418)) (= ($generated@@299 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@299 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@303 (type $generated@@420))))
(let (($generated@@422 ($generated@@302 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@301 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@300 $generated@@422 $generated@@421)) (= ($generated@@335 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@335 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@303 (type $generated@@423))))
(let (($generated@@425 ($generated@@302 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@301 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@300 $generated@@425 $generated@@424)) (= ($generated@@366 $generated@@423) ($generated@@415 $generated@@149))))))
 :pattern ( ($generated@@366 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@285 (type $generated@@426))))
(let (($generated@@428 ($generated@@284 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@283 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@282 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@149) (= (type $generated@@430) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@426) ($generated@@262 ($generated@@215 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@355 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@303 (type $generated@@431))))
(let (($generated@@433 ($generated@@302 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@301 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@300 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@149) (= (type $generated@@435) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@431) ($generated@@262 ($generated@@215 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@366 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@149) ($generated@@216 $generated@@436 $generated@@46)) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@356 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@149) ($generated@@216 $generated@@437 $generated@@47)) (and (= ($generated@@262 ($generated@@356 $generated@@3 $generated@@437)) $generated@@437) ($generated@@136 ($generated@@356 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@149) ($generated@@216 $generated@@438 $generated@@44)) (and (= ($generated@@262 ($generated@@356 $generated@@4 $generated@@438)) $generated@@438) ($generated@@136 ($generated@@356 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@149) ($generated@@216 $generated@@440 $generated@@45)) (and (= ($generated@@262 ($generated@@356 $generated@@439 $generated@@440)) $generated@@440) ($generated@@136 ($generated@@356 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@441) $generated@@442) ($generated@@136 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@79 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@76 $generated@@444 $generated@@2)) (<= 0 ($generated@@275 $generated@@443))))
 :pattern ( ($generated@@275 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@257 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@256 $generated@@446)) (<= 0 ($generated@@255 $generated@@445))))
 :pattern ( ($generated@@255 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@384 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@384 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@384 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@384 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@392 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@392 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@392 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@392 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) (= (type $generated@@468) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@139 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@139 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@139 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@139 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@149) (= (type $generated@@478) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@215 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@149) (= (type $generated@@480) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@215 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@257 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@256 $generated@@149)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@255 $generated@@487))) ($generated@@242 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
 (=> (= (type $generated@@491) ($generated@@76 $generated@@493 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@491 $generated@@492) $generated@@492))))
 :pattern ( ($generated@@400 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@75 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@75 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@225 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@225 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@230 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@230 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@154 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@154 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@481 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@481 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@481 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@356 $generated@@513 ($generated@@262 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@262 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) (= ($generated@@136 $generated@@514 ($generated@@384 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@514) $generated@@517))) (and ($generated@@216 ($generated@@81 ($generated@@357 $generated@@514) $generated@@517) $generated@@516) ($generated@@216 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@514) $generated@@517))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@136 $generated@@514 ($generated@@384 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= ($generated@@136 $generated@@518 ($generated@@392 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@518) $generated@@521))) (and ($generated@@216 ($generated@@81 ($generated@@367 $generated@@518) $generated@@521) $generated@@520) ($generated@@216 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@518) $generated@@521))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@136 $generated@@518 ($generated@@392 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@149) (= (type $generated@@525) $generated@@149)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@215 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@215 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@149) (= (type $generated@@527) $generated@@149)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@215 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@215 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@149) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@216 $generated@@528 ($generated@@384 $generated@@529 $generated@@530))) (and (= ($generated@@262 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@528)) $generated@@528) ($generated@@136 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@528) ($generated@@384 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@216 $generated@@528 ($generated@@384 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@149) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@216 $generated@@531 ($generated@@392 $generated@@532 $generated@@533))) (and (= ($generated@@262 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@531)) $generated@@531) ($generated@@136 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@531) ($generated@@392 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@216 $generated@@531 ($generated@@392 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@149)) ($generated@@216 $generated@@536 ($generated@@139 $generated@@534 $generated@@535))) (and (= ($generated@@262 ($generated@@356 $generated@@140 $generated@@536)) $generated@@536) ($generated@@136 ($generated@@356 $generated@@140 $generated@@536) ($generated@@139 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@216 $generated@@536 ($generated@@139 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@538 T@T) ) (! (= (type ($generated@@537 $generated@@538)) ($generated@@76 $generated@@538 $generated@@4))
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@81 ($generated@@537 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@81 ($generated@@537 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@81 ($generated@@415 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@81 ($generated@@415 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@69)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@64) (= (type $generated@@546) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@545 $generated@@546)) $generated@@62) (= ($generated@@543 ($generated@@139 $generated@@545 $generated@@546)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@140) (= ($generated@@522 ($generated@@262 $generated@@547)) ($generated@@523 $generated@@547)))
 :pattern ( ($generated@@522 ($generated@@262 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@149) ($generated@@216 $generated@@548 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@548)) $generated@@548) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@548) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@548 ($generated@@75 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@149) (= (type $generated@@550) $generated@@64)) ($generated@@216 $generated@@549 ($generated@@225 $generated@@550))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@549)) $generated@@549) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@549) ($generated@@225 $generated@@550))))
 :pattern ( ($generated@@216 $generated@@549 ($generated@@225 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@149) (= (type $generated@@552) $generated@@64)) ($generated@@216 $generated@@551 ($generated@@230 $generated@@552))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@551)) $generated@@551) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@551) ($generated@@230 $generated@@552))))
 :pattern ( ($generated@@216 $generated@@551 ($generated@@230 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@64)) ($generated@@216 $generated@@553 ($generated@@154 $generated@@554))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@553)) $generated@@553) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@553) ($generated@@154 $generated@@554))))
 :pattern ( ($generated@@216 $generated@@553 ($generated@@154 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@149) (= (type $generated@@556) $generated@@64)) ($generated@@216 $generated@@555 ($generated@@481 $generated@@556))) (and (= ($generated@@262 ($generated@@356 ($generated@@256 $generated@@149) $generated@@555)) $generated@@555) ($generated@@136 ($generated@@356 ($generated@@256 $generated@@149) $generated@@555) ($generated@@481 $generated@@556))))
 :pattern ( ($generated@@216 $generated@@555 ($generated@@481 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@154 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@557 $generated@@560)))) ($generated@@242 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@154 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@140) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@563) (and ($generated@@138 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@139 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@139 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@242 ($generated@@147 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@140) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@567) (and ($generated@@138 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@139 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@139 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@242 ($generated@@148 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@149) (= (type $generated@@570) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@569) ($generated@@237 $generated@@570)) ($generated@@237 ($generated@@215 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@569) ($generated@@237 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@571))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@572)) ($generated@@237 ($generated@@262 $generated@@572)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@257 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@256 $generated@@574)) (= ($generated@@255 $generated@@573) 0)) (= $generated@@573 ($generated@@254 $generated@@574))))
 :pattern ( ($generated@@255 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@275 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@275 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@439)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@149)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@256 $generated@@149)) (= (type $generated@@590) $generated@@64)) (= ($generated@@136 $generated@@589 ($generated@@481 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@255 $generated@@589))) ($generated@@216 ($generated@@482 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@482 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@136 $generated@@589 ($generated@@481 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@255 $generated@@593))) (< ($generated@@523 ($generated@@356 $generated@@140 ($generated@@482 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@523 ($generated@@356 $generated@@140 ($generated@@482 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@136 $generated@@595 ($generated@@384 $generated@@596 $generated@@597))) (and (and ($generated@@136 ($generated@@281 $generated@@595) ($generated@@225 $generated@@596)) ($generated@@136 ($generated@@324 $generated@@595) ($generated@@225 $generated@@597))) ($generated@@136 ($generated@@355 $generated@@595) ($generated@@225 ($generated@@139 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@136 $generated@@595 ($generated@@384 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@136 $generated@@598 ($generated@@392 $generated@@599 $generated@@600))) (and (and ($generated@@136 ($generated@@299 $generated@@598) ($generated@@230 $generated@@599)) ($generated@@136 ($generated@@335 $generated@@598) ($generated@@230 $generated@@600))) ($generated@@136 ($generated@@366 $generated@@598) ($generated@@230 ($generated@@139 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@136 $generated@@598 ($generated@@392 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@136 $generated@@601 $generated@@46))
 :pattern ( ($generated@@136 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@136 $generated@@602 $generated@@47))
 :pattern ( ($generated@@136 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@136 $generated@@603 $generated@@44))
 :pattern ( ($generated@@136 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@439) ($generated@@136 $generated@@604 $generated@@45))
 :pattern ( ($generated@@136 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@149) ($generated@@136 $generated@@605 $generated@@48))
 :pattern ( ($generated@@136 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
