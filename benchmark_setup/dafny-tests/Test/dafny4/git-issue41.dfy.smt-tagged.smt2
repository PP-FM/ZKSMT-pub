(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 4294967296))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@U) Int)
(declare-fun $generated@@229 (T@U Int) T@U)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@578 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (and (and (and (forall (($generated@@231 T@T) ) (= ($generated@@1 ($generated@@225 $generated@@231)) 17)) (forall (($generated@@232 T@T) ) (! (= ($generated@@230 ($generated@@225 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@225 $generated@@232))
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@224 $generated@@233 $generated@@234)) $generated@@145)
 :pattern ( ($generated@@224 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@U) ) (! (= (type ($generated@@227 $generated@@235)) $generated@@64)
 :pattern ( ($generated@@227 $generated@@235))
))) (forall (($generated@@236 T@U) ($generated@@237 Int) ) (! (let (($generated@@238 ($generated@@230 (type $generated@@236))))
(= (type ($generated@@229 $generated@@236 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@229 $generated@@236 $generated@@237))
))))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) ($generated@@225 $generated@@145))) (or ($generated@@226 $generated@@239 $generated@@240) (and (not (= 0 $generated@@223)) (and ($generated@@132 $generated@@240 ($generated@@227 $generated@@239)) (> ($generated@@228 $generated@@240) 0))))) (= ($generated@@224 $generated@@239 $generated@@240) ($generated@@229 $generated@@240 (- ($generated@@228 $generated@@240) 1))))
 :pattern ( ($generated@@224 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@136)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@64) (= (type $generated@@246) $generated@@64)) (= (type $generated@@247) $generated@@145)) (= (type $generated@@248) $generated@@145)) (= ($generated@@132 ($generated@@241 $generated@@247 $generated@@248) ($generated@@135 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@132 ($generated@@241 $generated@@247 $generated@@248) ($generated@@135 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@136) (= (type $generated@@250) $generated@@136)) (= ($generated@@142 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@142 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@64)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@254) $generated@@64)) (= ($generated@@132 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@145) ($generated@@0 ($generated@@81 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@81 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@132 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@64)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@259) $generated@@64)) (= ($generated@@132 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@145) ($generated@@0 ($generated@@81 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@81 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@132 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@64) (= (type $generated@@268) $generated@@64)) (= (type $generated@@269) $generated@@145)) (= (type $generated@@270) $generated@@145)) (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@265 $generated@@271)) (= ($generated@@74 ($generated@@241 $generated@@269 $generated@@270) ($generated@@135 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@74 ($generated@@241 $generated@@269 $generated@@270) ($generated@@135 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@136) (= ($generated@@134 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@136) ($generated@@134 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@145) (= (type $generated@@277) $generated@@145)) (= $generated@@275 ($generated@@241 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@134 $generated@@275))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@225 $generated@@279))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@228 ($generated@@278 $generated@@280)) 0)
 :pattern ( ($generated@@278 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@145)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@64) (= (type $generated@@285) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@266 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@74 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@266 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@76 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@79 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@76 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@81 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@76 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@76 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@328) $generated@@64) (= (type $generated@@329) ($generated@@225 $generated@@145))) (or ($generated@@226 $generated@@328 ($generated@@261 $generated@@329)) (and (not (= 0 $generated@@223)) (and ($generated@@132 $generated@@329 ($generated@@227 $generated@@328)) (> ($generated@@228 ($generated@@261 $generated@@329)) 0))))) (= ($generated@@224 $generated@@328 ($generated@@261 $generated@@329)) ($generated@@229 ($generated@@261 $generated@@329) (- ($generated@@228 ($generated@@261 $generated@@329)) 1))))
 :weight 3
 :pattern ( ($generated@@224 $generated@@328 ($generated@@261 $generated@@329)))
))))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@79 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@76 $generated@@331 $generated@@2)) (= ($generated@@151 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@81 $generated@@330 $generated@@332))) (<= ($generated ($generated@@81 $generated@@330 $generated@@332)) ($generated@@286 $generated@@330))))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@151 $generated@@330))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@296 (type $generated@@333))))
(let (($generated@@335 ($generated@@295 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@294 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@293 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@292 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@296 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@296 (type $generated@@340))))
(let (($generated@@342 ($generated@@295 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@294 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@293 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@314 (type $generated@@344))))
(let (($generated@@346 ($generated@@313 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@312 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@311 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@310 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@314 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@76 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(let (($generated@@353 ($generated@@313 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@312 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@311 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@356) $generated@@64)) (= ($generated@@132 $generated@@355 ($generated@@150 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@355 $generated@@357)))) ($generated@@242 $generated@@357 $generated@@356))
 :pattern ( ($generated@@81 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@132 $generated@@355 ($generated@@150 $generated@@356)))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@251 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@145) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@266 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@251 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@362 ($generated@@256 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@145) ($generated@@0 ($generated@@81 $generated@@362 $generated@@365))) ($generated@@266 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@74 $generated@@362 ($generated@@256 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@81 ($generated@@287 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@81 ($generated@@287 $generated@@367) $generated@@366)))
)))
(assert  (and (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@368 $generated@@371)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@368 $generated@@371))
)) (forall (($generated@@372 T@T) ($generated@@373 T@U) ) (! (= (type ($generated@@369 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@369 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@296 (type $generated@@374))))
(let (($generated@@376 ($generated@@295 (type $generated@@374))))
(= (type ($generated@@370 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@370 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@378) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@377) ($generated@@143 ($generated@@369 $generated@@136 $generated@@378)))) (= ($generated@@81 ($generated@@370 $generated@@377) ($generated@@143 ($generated@@369 $generated@@136 $generated@@378))) ($generated@@144 ($generated@@369 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@314 (type $generated@@382))))
(let (($generated@@384 ($generated@@313 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@386) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@385) ($generated@@143 ($generated@@369 $generated@@136 $generated@@386)))) (= ($generated@@81 ($generated@@380 $generated@@385) ($generated@@143 ($generated@@369 $generated@@136 $generated@@386))) ($generated@@144 ($generated@@369 $generated@@136 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@295 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@294 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@337 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@313 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@312 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@400) $generated@@404))) (and ($generated@@266 ($generated@@81 ($generated@@370 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@266 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@408) $generated@@412))) (and ($generated@@266 ($generated@@81 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@266 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@76 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@314 (type $generated@@415))))
(let (($generated@@417 ($generated@@313 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@312 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@311 $generated@@417 $generated@@416)) (= ($generated@@310 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@310 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@314 (type $generated@@418))))
(let (($generated@@420 ($generated@@313 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@312 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@311 $generated@@420 $generated@@419)) (= ($generated@@348 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@348 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@314 (type $generated@@421))))
(let (($generated@@423 ($generated@@313 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@312 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@311 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@145))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@296 (type $generated@@424))))
(let (($generated@@426 ($generated@@295 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@294 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@293 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@145) (= (type $generated@@428) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@424) ($generated@@281 ($generated@@241 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@368 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@314 (type $generated@@429))))
(let (($generated@@431 ($generated@@313 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@312 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@311 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@145) (= (type $generated@@433) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@429) ($generated@@281 ($generated@@241 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@145) ($generated@@242 $generated@@434 $generated@@46)) (and (= ($generated@@281 ($generated@@369 $generated@@2 $generated@@434)) $generated@@434) ($generated@@132 ($generated@@369 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@145) ($generated@@242 $generated@@435 $generated@@47)) (and (= ($generated@@281 ($generated@@369 $generated@@3 $generated@@435)) $generated@@435) ($generated@@132 ($generated@@369 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@242 $generated@@436 $generated@@44)) (and (= ($generated@@281 ($generated@@369 $generated@@4 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@369 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@242 $generated@@438 $generated@@45)) (and (= ($generated@@281 ($generated@@369 $generated@@437 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@369 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@64) (= ($generated@@242 ($generated@@281 $generated@@439) $generated@@440) ($generated@@132 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@242 ($generated@@281 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@79 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@76 $generated@@442 $generated@@2)) (<= 0 ($generated@@286 $generated@@441))))
 :pattern ( ($generated@@286 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@230 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@225 $generated@@444)) (<= 0 ($generated@@228 $generated@@443))))
 :pattern ( ($generated@@228 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@145) (= (type $generated@@466) $generated@@145)) (= ($generated@@272 ($generated@@241 $generated@@465 $generated@@466)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@135 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@135 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@135 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@135 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@143 ($generated@@241 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@241 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) (= ($generated@@144 ($generated@@241 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@241 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@225 $generated@@145)) (= (type $generated@@480) $generated@@64)) (= (type $generated@@481) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@479 ($generated@@227 $generated@@480) $generated@@481) (forall (($generated@@482 Int) ) (!  (=> (and (<= 0 $generated@@482) (< $generated@@482 ($generated@@228 $generated@@479))) ($generated@@266 ($generated@@229 $generated@@479 $generated@@482) $generated@@480 $generated@@481))
 :pattern ( ($generated@@229 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@74 $generated@@479 ($generated@@227 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@75 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@75 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@251 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@251 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@251 $generated@@488)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@256 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@256 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@256 $generated@@492)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@150 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@150 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@496)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@227 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@227 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@227 $generated@@500)) $generated@@57))
 :pattern ( ($generated@@227 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(= ($generated@@369 $generated@@502 ($generated@@281 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@281 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@132 $generated@@503 ($generated@@397 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@503) $generated@@506))) (and ($generated@@242 ($generated@@81 ($generated@@370 $generated@@503) $generated@@506) $generated@@505) ($generated@@242 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@132 $generated@@503 ($generated@@397 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@132 $generated@@507 ($generated@@405 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@507) $generated@@510))) (and ($generated@@242 ($generated@@81 ($generated@@380 $generated@@507) $generated@@510) $generated@@509) ($generated@@242 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@132 $generated@@507 ($generated@@405 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@145)) (< ($generated@@511 $generated@@513) ($generated@@512 ($generated@@241 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@241 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@145)) (< ($generated@@511 $generated@@516) ($generated@@512 ($generated@@241 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@241 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@242 $generated@@517 ($generated@@397 $generated@@518 $generated@@519))) (and (= ($generated@@281 ($generated@@369 ($generated@@294 $generated@@145 $generated@@145) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@369 ($generated@@294 $generated@@145 $generated@@145) $generated@@517) ($generated@@397 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@242 $generated@@517 ($generated@@397 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) ($generated@@242 $generated@@520 ($generated@@405 $generated@@521 $generated@@522))) (and (= ($generated@@281 ($generated@@369 ($generated@@312 $generated@@145 $generated@@145) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@369 ($generated@@312 $generated@@145 $generated@@145) $generated@@520) ($generated@@405 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@242 $generated@@520 ($generated@@405 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@145)) ($generated@@242 $generated@@525 ($generated@@135 $generated@@523 $generated@@524))) (and (= ($generated@@281 ($generated@@369 $generated@@136 $generated@@525)) $generated@@525) ($generated@@132 ($generated@@369 $generated@@136 $generated@@525) ($generated@@135 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@242 $generated@@525 ($generated@@135 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
 (not ($generated@@0 ($generated@@81 ($generated@@413 $generated@@527) $generated@@526))))
 :pattern ( (let (($generated@@527 (type $generated@@526)))
($generated@@81 ($generated@@413 $generated@@527) $generated@@526)))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@69)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@530 $generated@@531)) $generated@@62) (= ($generated@@528 ($generated@@135 $generated@@530 $generated@@531)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@136) (= ($generated@@511 ($generated@@281 $generated@@532)) ($generated@@512 $generated@@532)))
 :pattern ( ($generated@@511 ($generated@@281 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) ($generated@@242 $generated@@533 ($generated@@75 0))) (and (= ($generated@@281 ($generated@@369 $generated@@2 $generated@@533)) $generated@@533) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@533) ($generated@@75 0))))
 :pattern ( ($generated@@242 $generated@@533 ($generated@@75 0)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) ($generated@@242 $generated@@534 ($generated@@251 $generated@@535))) (and (= ($generated@@281 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@251 $generated@@535))))
 :pattern ( ($generated@@242 $generated@@534 ($generated@@251 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@242 $generated@@536 ($generated@@256 $generated@@537))) (and (= ($generated@@281 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@4) $generated@@536) ($generated@@256 $generated@@537))))
 :pattern ( ($generated@@242 $generated@@536 ($generated@@256 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@242 $generated@@538 ($generated@@150 $generated@@539))) (and (= ($generated@@281 ($generated@@369 ($generated@@76 $generated@@145 $generated@@2) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@369 ($generated@@76 $generated@@145 $generated@@2) $generated@@538) ($generated@@150 $generated@@539))))
 :pattern ( ($generated@@242 $generated@@538 ($generated@@150 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@242 $generated@@540 ($generated@@227 $generated@@541))) (and (= ($generated@@281 ($generated@@369 ($generated@@225 $generated@@145) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@369 ($generated@@225 $generated@@145) $generated@@540) ($generated@@227 $generated@@541))))
 :pattern ( ($generated@@242 $generated@@540 ($generated@@227 $generated@@541)))
)))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) ($generated@@225 $generated@@145))) (or ($generated@@226 $generated@@542 $generated@@543) (and (not (= 0 $generated@@223)) (and ($generated@@132 $generated@@543 ($generated@@227 $generated@@542)) (> ($generated@@228 $generated@@543) 0))))) ($generated@@242 ($generated@@224 $generated@@542 $generated@@543) $generated@@542))
 :pattern ( ($generated@@224 $generated@@542 $generated@@543))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@544 ($generated@@150 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@544 $generated@@547)))) ($generated@@266 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@81 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@150 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@136) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@550) (and ($generated@@134 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@64) ($generated@@74 $generated@@548 ($generated@@135 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@135 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@266 ($generated@@143 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@266 ($generated@@143 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@136) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@554) (and ($generated@@134 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@64) ($generated@@74 $generated@@552 ($generated@@135 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@135 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@266 ($generated@@144 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@266 ($generated@@144 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@145)) (= ($generated@@241 ($generated@@261 $generated@@556) ($generated@@261 $generated@@557)) ($generated@@261 ($generated@@241 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@241 ($generated@@261 $generated@@556) ($generated@@261 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@281 ($generated@@261 $generated@@558)) ($generated@@261 ($generated@@281 $generated@@558)))
 :pattern ( ($generated@@281 ($generated@@261 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@230 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@225 $generated@@560)) (= ($generated@@228 $generated@@559) 0)) (= $generated@@559 ($generated@@278 $generated@@560))))
 :pattern ( ($generated@@228 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@286 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@286 $generated@@561) ($generated ($generated@@81 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@286 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@2)) ($generated@@74 $generated@@566 $generated@@46 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@3)) ($generated@@74 $generated@@568 $generated@@47 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@47 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@4)) ($generated@@74 $generated@@570 $generated@@44 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@44 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@437)) ($generated@@74 $generated@@572 $generated@@45 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@45 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@145)) ($generated@@74 $generated@@574 $generated@@48 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@48 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@225 $generated@@145)) (= (type $generated@@576) $generated@@64)) (= ($generated@@132 $generated@@575 ($generated@@227 $generated@@576)) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@228 $generated@@575))) ($generated@@242 ($generated@@229 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@229 $generated@@575 $generated@@577))
))))
 :pattern ( ($generated@@132 $generated@@575 ($generated@@227 $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (!  (=> (= (type $generated@@579) ($generated@@225 $generated@@145)) (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@228 $generated@@579))) (< ($generated@@512 ($generated@@369 $generated@@136 ($generated@@229 $generated@@579 $generated@@580))) ($generated@@578 $generated@@579))))
 :pattern ( ($generated@@512 ($generated@@369 $generated@@136 ($generated@@229 $generated@@579 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) ($generated@@132 $generated@@581 ($generated@@397 $generated@@582 $generated@@583))) (and (and ($generated@@132 ($generated@@292 $generated@@581) ($generated@@251 $generated@@582)) ($generated@@132 ($generated@@337 $generated@@581) ($generated@@251 $generated@@583))) ($generated@@132 ($generated@@368 $generated@@581) ($generated@@251 ($generated@@135 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@132 $generated@@581 ($generated@@397 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@405 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@310 $generated@@584) ($generated@@256 $generated@@585)) ($generated@@132 ($generated@@348 $generated@@584) ($generated@@256 $generated@@586))) ($generated@@132 ($generated@@379 $generated@@584) ($generated@@256 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@405 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@2) ($generated@@132 $generated@@587 $generated@@46))
 :pattern ( ($generated@@132 $generated@@587 $generated@@46))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@3) ($generated@@132 $generated@@588 $generated@@47))
 :pattern ( ($generated@@132 $generated@@588 $generated@@47))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@4) ($generated@@132 $generated@@589 $generated@@44))
 :pattern ( ($generated@@132 $generated@@589 $generated@@44))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@437) ($generated@@132 $generated@@590 $generated@@45))
 :pattern ( ($generated@@132 $generated@@590 $generated@@45))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@145) ($generated@@132 $generated@@591 $generated@@48))
 :pattern ( ($generated@@132 $generated@@591 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(declare-fun $generated@@598 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@592) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@593) $generated@@77)) (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@595) ($generated@@225 $generated@@145))) (= (type $generated@@596) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@598) $generated@@64)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@599  (=> (and (= $generated@@592 ($generated@@211 $generated@@593 $generated@@594 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (and (<= 0 (- ($generated@@228 $generated@@595) 1)) (< (- ($generated@@228 $generated@@595) 1) ($generated@@228 $generated@@595))))))
(let (($generated@@600 true))
(let (($generated@@601  (=> (and (= $generated@@596 ($generated@@156 $generated@@593 $generated@@594 $generated@@60 false)) (> ($generated@@228 $generated@@595) 0)) (and (=> (= (ControlFlow 0 4) 1) $generated@@600) (=> (= (ControlFlow 0 4) 3) $generated@@599)))))
(let (($generated@@602  (=> (and (and (and ($generated@@265 $generated@@594) ($generated@@597 $generated@@594)) ($generated@@132 $generated@@595 ($generated@@227 $generated@@598))) (and (= 0 $generated@@223) (= (ControlFlow 0 5) 4))) $generated@@601)))
$generated@@602)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@U) Int)
(declare-fun $generated@@229 (T@U Int) T@U)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U Int) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@T T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (and (and (and (forall (($generated@@231 T@T) ) (= ($generated@@1 ($generated@@225 $generated@@231)) 17)) (forall (($generated@@232 T@T) ) (! (= ($generated@@230 ($generated@@225 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@225 $generated@@232))
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@224 $generated@@233 $generated@@234)) ($generated@@225 $generated@@145))
 :pattern ( ($generated@@224 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@U) ) (! (= (type ($generated@@227 $generated@@235)) $generated@@64)
 :pattern ( ($generated@@227 $generated@@235))
))) (forall (($generated@@236 T@U) ($generated@@237 Int) ) (! (let (($generated@@238 ($generated@@230 (type $generated@@236))))
(= (type ($generated@@229 $generated@@236 $generated@@237)) ($generated@@225 $generated@@238)))
 :pattern ( ($generated@@229 $generated@@236 $generated@@237))
))))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) ($generated@@225 $generated@@145))) (or ($generated@@226 $generated@@239 $generated@@240) (and (not (= 0 $generated@@223)) (and ($generated@@132 $generated@@240 ($generated@@227 $generated@@239)) (> ($generated@@228 $generated@@240) 0))))) (= ($generated@@224 $generated@@239 $generated@@240) ($generated@@229 $generated@@240 (- ($generated@@228 $generated@@240) 1))))
 :pattern ( ($generated@@224 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@136)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@64) (= (type $generated@@246) $generated@@64)) (= (type $generated@@247) $generated@@145)) (= (type $generated@@248) $generated@@145)) (= ($generated@@132 ($generated@@241 $generated@@247 $generated@@248) ($generated@@135 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@132 ($generated@@241 $generated@@247 $generated@@248) ($generated@@135 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@136) (= (type $generated@@250) $generated@@136)) (= ($generated@@142 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@142 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@64)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@254) $generated@@64)) (= ($generated@@132 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@145) ($generated@@0 ($generated@@81 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@81 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@132 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@64)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@259) $generated@@64)) (= ($generated@@132 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@145) ($generated@@0 ($generated@@81 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@81 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@132 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 Int) ) (! (let (($generated@@268 ($generated@@230 (type $generated@@266))))
(= (type ($generated@@265 $generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 Int) ($generated@@271 Int) ) (! (let (($generated@@272 ($generated@@230 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@225 $generated@@272)) (=> (and (and (<= 0 $generated@@271) (< $generated@@271 $generated@@270)) (< $generated@@271 ($generated@@228 $generated@@269))) (= ($generated@@265 ($generated@@229 $generated@@269 $generated@@270) $generated@@271) ($generated@@265 $generated@@269 $generated@@271)))))
 :weight 25
 :pattern ( ($generated@@265 ($generated@@229 $generated@@269 $generated@@270) $generated@@271))
 :pattern ( ($generated@@265 $generated@@269 $generated@@271) ($generated@@229 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) $generated@@64)) (= (type $generated@@277) $generated@@145)) (= (type $generated@@278) $generated@@145)) (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@273 $generated@@279)) (= ($generated@@74 ($generated@@241 $generated@@277 $generated@@278) ($generated@@135 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@74 ($generated@@241 $generated@@277 $generated@@278) ($generated@@135 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@68)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@136) (= ($generated@@134 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 Int) ) (! (let (($generated@@286 ($generated@@230 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@225 $generated@@286)) (=> (and (<= 0 $generated@@285) (< $generated@@285 ($generated@@228 $generated@@284))) (< ($generated@@283 ($generated@@229 $generated@@284 $generated@@285)) ($generated@@283 $generated@@284)))))
 :pattern ( ($generated@@283 ($generated@@229 $generated@@284 $generated@@285)))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@136) ($generated@@134 $generated@@287)) (exists (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (and (= (type $generated@@288) $generated@@145) (= (type $generated@@289) $generated@@145)) (= $generated@@287 ($generated@@241 $generated@@288 $generated@@289)))
 :no-pattern (type $generated@@288)
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@134 $generated@@287))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@225 $generated@@291))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@228 ($generated@@290 $generated@@292)) 0)
 :pattern ( ($generated@@290 $generated@@292))
)))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@293) $generated@@64) (= (type $generated@@294) ($generated@@225 $generated@@145))) (or ($generated@@226 $generated@@293 $generated@@294) (and (not (= 0 $generated@@223)) (and ($generated@@132 $generated@@294 ($generated@@227 $generated@@293)) (> ($generated@@228 $generated@@294) 0))))) (and (= ($generated@@228 ($generated@@224 $generated@@293 $generated@@294)) (- ($generated@@228 $generated@@294) 1)) ($generated@@132 ($generated@@224 $generated@@293 $generated@@294) ($generated@@227 $generated@@293))))
 :pattern ( ($generated@@224 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@145)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@64) (= (type $generated@@299) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@274 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@74 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@274 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@76 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@81 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 18)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@81 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@81 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@342) $generated@@64) (= (type $generated@@343) ($generated@@225 $generated@@145))) (or ($generated@@226 $generated@@342 ($generated@@261 $generated@@343)) (and (not (= 0 $generated@@223)) (and ($generated@@132 $generated@@343 ($generated@@227 $generated@@342)) (> ($generated@@228 ($generated@@261 $generated@@343)) 0))))) (= ($generated@@224 $generated@@342 ($generated@@261 $generated@@343)) ($generated@@229 ($generated@@261 $generated@@343) (- ($generated@@228 ($generated@@261 $generated@@343)) 1))))
 :weight 3
 :pattern ( ($generated@@224 $generated@@342 ($generated@@261 $generated@@343)))
))))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@79 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@76 $generated@@345 $generated@@2)) (= ($generated@@151 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@81 $generated@@344 $generated@@346))) (<= ($generated ($generated@@81 $generated@@344 $generated@@346)) ($generated@@300 $generated@@344))))
 :pattern ( ($generated@@81 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@151 $generated@@344))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@310 (type $generated@@347))))
(let (($generated@@349 ($generated@@309 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@308 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@307 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@306 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@310 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@76 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@310 (type $generated@@354))))
(let (($generated@@356 ($generated@@309 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@308 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@307 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@328 (type $generated@@358))))
(let (($generated@@360 ($generated@@327 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@326 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@325 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@324 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@328 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@76 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@328 (type $generated@@365))))
(let (($generated@@367 ($generated@@327 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@326 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@325 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@370) $generated@@64)) (= ($generated@@132 $generated@@369 ($generated@@150 $generated@@370)) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@369 $generated@@371)))) ($generated@@242 $generated@@371 $generated@@370))
 :pattern ( ($generated@@81 $generated@@369 $generated@@371))
))))
 :pattern ( ($generated@@132 $generated@@369 ($generated@@150 $generated@@370)))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@251 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@145) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@274 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@251 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@376 ($generated@@256 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 $generated@@376 $generated@@379))) ($generated@@274 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@81 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@376 ($generated@@256 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@81 ($generated@@301 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@81 ($generated@@301 $generated@@381) $generated@@380)))
)))
(assert  (and (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@382 $generated@@385)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@382 $generated@@385))
)) (forall (($generated@@386 T@T) ($generated@@387 T@U) ) (! (= (type ($generated@@383 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@383 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@310 (type $generated@@388))))
(let (($generated@@390 ($generated@@309 (type $generated@@388))))
(= (type ($generated@@384 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@384 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@391) ($generated@@143 ($generated@@383 $generated@@136 $generated@@392)))) (= ($generated@@81 ($generated@@384 $generated@@391) ($generated@@143 ($generated@@383 $generated@@136 $generated@@392))) ($generated@@144 ($generated@@383 $generated@@136 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@328 (type $generated@@396))))
(let (($generated@@398 ($generated@@327 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@76 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@81 ($generated@@324 $generated@@399) ($generated@@143 ($generated@@383 $generated@@136 $generated@@400)))) (= ($generated@@81 ($generated@@394 $generated@@399) ($generated@@143 ($generated@@383 $generated@@136 $generated@@400))) ($generated@@144 ($generated@@383 $generated@@136 $generated@@400))))))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@309 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@308 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@327 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@326 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@81 ($generated@@324 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))) (and ($generated@@274 ($generated@@81 ($generated@@384 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@274 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) $generated@@64)) (= (type $generated@@425) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@422) $generated@@426))) (and ($generated@@274 ($generated@@81 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@274 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 Int) ) (! (let (($generated@@429 ($generated@@230 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@225 $generated@@429)) (=> (and (<= 0 $generated@@428) (<= $generated@@428 ($generated@@228 $generated@@427))) (= ($generated@@228 ($generated@@229 $generated@@427 $generated@@428)) $generated@@428))))
 :pattern ( ($generated@@228 ($generated@@229 $generated@@427 $generated@@428)))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@76 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@328 (type $generated@@432))))
(let (($generated@@434 ($generated@@327 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@326 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@325 $generated@@434 $generated@@433)) (= ($generated@@324 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@324 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@328 (type $generated@@435))))
(let (($generated@@437 ($generated@@327 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@326 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@325 $generated@@437 $generated@@436)) (= ($generated@@362 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@362 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@328 (type $generated@@438))))
(let (($generated@@440 ($generated@@327 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@326 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@325 $generated@@440 $generated@@439)) (= ($generated@@393 $generated@@438) ($generated@@430 $generated@@145))))))
 :pattern ( ($generated@@393 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@310 (type $generated@@441))))
(let (($generated@@443 ($generated@@309 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@308 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@307 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@145) (= (type $generated@@445) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@441) ($generated@@295 ($generated@@241 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@382 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@328 (type $generated@@446))))
(let (($generated@@448 ($generated@@327 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@326 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@325 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@145) (= (type $generated@@450) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@393 $generated@@446) ($generated@@295 ($generated@@241 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@393 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) ($generated@@242 $generated@@451 $generated@@46)) (and (= ($generated@@295 ($generated@@383 $generated@@2 $generated@@451)) $generated@@451) ($generated@@132 ($generated@@383 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) ($generated@@242 $generated@@452 $generated@@47)) (and (= ($generated@@295 ($generated@@383 $generated@@3 $generated@@452)) $generated@@452) ($generated@@132 ($generated@@383 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) ($generated@@242 $generated@@453 $generated@@44)) (and (= ($generated@@295 ($generated@@383 $generated@@4 $generated@@453)) $generated@@453) ($generated@@132 ($generated@@383 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) ($generated@@242 $generated@@455 $generated@@45)) (and (= ($generated@@295 ($generated@@383 $generated@@454 $generated@@455)) $generated@@455) ($generated@@132 ($generated@@383 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@64) (= ($generated@@242 ($generated@@295 $generated@@456) $generated@@457) ($generated@@132 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@242 ($generated@@295 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@79 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@76 $generated@@459 $generated@@2)) (<= 0 ($generated@@300 $generated@@458))))
 :pattern ( ($generated@@300 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@230 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@225 $generated@@461)) (<= 0 ($generated@@228 $generated@@460))))
 :pattern ( ($generated@@228 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@411 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@411 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@411 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@411 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@419 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@419 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@419 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@419 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@72 ($generated@@419 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@145) (= (type $generated@@483) $generated@@145)) (= ($generated@@280 ($generated@@241 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@135 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@135 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@135 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@135 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) (= (type $generated@@493) $generated@@145)) (= ($generated@@143 ($generated@@241 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@241 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (= ($generated@@144 ($generated@@241 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@225 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@496 ($generated@@227 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@228 $generated@@496))) ($generated@@274 ($generated@@265 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@265 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@74 $generated@@496 ($generated@@227 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@75 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@75 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@251 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@251 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@251 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@256 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@256 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@256 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@150 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@150 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@227 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@227 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@227 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@227 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@383 $generated@@519 ($generated@@295 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@295 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@132 $generated@@520 ($generated@@411 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@520) $generated@@523))) (and ($generated@@242 ($generated@@81 ($generated@@384 $generated@@520) $generated@@523) $generated@@522) ($generated@@242 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@520) $generated@@523))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@132 $generated@@520 ($generated@@411 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@132 $generated@@524 ($generated@@419 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@524) $generated@@527))) (and ($generated@@242 ($generated@@81 ($generated@@394 $generated@@524) $generated@@527) $generated@@526) ($generated@@242 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@524) $generated@@527))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@132 $generated@@524 ($generated@@419 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@145)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@241 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@241 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@145)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@241 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@241 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@242 $generated@@534 ($generated@@411 $generated@@535 $generated@@536))) (and (= ($generated@@295 ($generated@@383 ($generated@@308 $generated@@145 $generated@@145) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@383 ($generated@@308 $generated@@145 $generated@@145) $generated@@534) ($generated@@411 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@242 $generated@@534 ($generated@@411 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@242 $generated@@537 ($generated@@419 $generated@@538 $generated@@539))) (and (= ($generated@@295 ($generated@@383 ($generated@@326 $generated@@145 $generated@@145) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@383 ($generated@@326 $generated@@145 $generated@@145) $generated@@537) ($generated@@419 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@242 $generated@@537 ($generated@@419 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@145)) ($generated@@242 $generated@@542 ($generated@@135 $generated@@540 $generated@@541))) (and (= ($generated@@295 ($generated@@383 $generated@@136 $generated@@542)) $generated@@542) ($generated@@132 ($generated@@383 $generated@@136 $generated@@542) ($generated@@135 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@242 $generated@@542 ($generated@@135 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@81 ($generated@@430 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@81 ($generated@@430 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@69)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@135 $generated@@547 $generated@@548)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@136) (= ($generated@@528 ($generated@@295 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@295 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) ($generated@@242 $generated@@550 ($generated@@75 0))) (and (= ($generated@@295 ($generated@@383 $generated@@2 $generated@@550)) $generated@@550) ($generated@@132 ($generated@@383 ($generated@@76 $generated@@145 $generated@@4) $generated@@550) ($generated@@75 0))))
 :pattern ( ($generated@@242 $generated@@550 ($generated@@75 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@64)) ($generated@@242 $generated@@551 ($generated@@251 $generated@@552))) (and (= ($generated@@295 ($generated@@383 ($generated@@76 $generated@@145 $generated@@4) $generated@@551)) $generated@@551) ($generated@@132 ($generated@@383 ($generated@@76 $generated@@145 $generated@@4) $generated@@551) ($generated@@251 $generated@@552))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@251 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@64)) ($generated@@242 $generated@@553 ($generated@@256 $generated@@554))) (and (= ($generated@@295 ($generated@@383 ($generated@@76 $generated@@145 $generated@@4) $generated@@553)) $generated@@553) ($generated@@132 ($generated@@383 ($generated@@76 $generated@@145 $generated@@4) $generated@@553) ($generated@@256 $generated@@554))))
 :pattern ( ($generated@@242 $generated@@553 ($generated@@256 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) ($generated@@242 $generated@@555 ($generated@@150 $generated@@556))) (and (= ($generated@@295 ($generated@@383 ($generated@@76 $generated@@145 $generated@@2) $generated@@555)) $generated@@555) ($generated@@132 ($generated@@383 ($generated@@76 $generated@@145 $generated@@2) $generated@@555) ($generated@@150 $generated@@556))))
 :pattern ( ($generated@@242 $generated@@555 ($generated@@150 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@145) (= (type $generated@@558) $generated@@64)) ($generated@@242 $generated@@557 ($generated@@227 $generated@@558))) (and (= ($generated@@295 ($generated@@383 ($generated@@225 $generated@@145) $generated@@557)) $generated@@557) ($generated@@132 ($generated@@383 ($generated@@225 $generated@@145) $generated@@557) ($generated@@227 $generated@@558))))
 :pattern ( ($generated@@242 $generated@@557 ($generated@@227 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@559 ($generated@@150 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@559 $generated@@562)))) ($generated@@274 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@81 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@150 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@565) (and ($generated@@134 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@135 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@135 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@274 ($generated@@143 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@274 ($generated@@143 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@136) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@569) (and ($generated@@134 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@64) ($generated@@74 $generated@@567 ($generated@@135 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@135 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@274 ($generated@@144 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@274 ($generated@@144 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@145) (= (type $generated@@572) $generated@@145)) (= ($generated@@241 ($generated@@261 $generated@@571) ($generated@@261 $generated@@572)) ($generated@@261 ($generated@@241 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@241 ($generated@@261 $generated@@571) ($generated@@261 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@295 ($generated@@261 $generated@@573)) ($generated@@261 ($generated@@295 $generated@@573)))
 :pattern ( ($generated@@295 ($generated@@261 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@230 (type $generated@@574))))
 (=> (and (= (type $generated@@574) ($generated@@225 $generated@@575)) (= ($generated@@228 $generated@@574) 0)) (= $generated@@574 ($generated@@290 $generated@@575))))
 :pattern ( ($generated@@228 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 Int) ) (! (let (($generated@@578 ($generated@@230 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@225 $generated@@578)) (= $generated@@577 0)) (= ($generated@@229 $generated@@576 $generated@@577) ($generated@@290 $generated@@578))))
 :pattern ( ($generated@@229 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@76 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@300 ($generated@@82 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@300 $generated@@579) ($generated ($generated@@81 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@300 ($generated@@82 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@2)) ($generated@@74 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@3)) ($generated@@74 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@4)) ($generated@@74 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@454)) ($generated@@74 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@145)) ($generated@@74 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@225 $generated@@145)) (= (type $generated@@594) $generated@@64)) (= ($generated@@132 $generated@@593 ($generated@@227 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@228 $generated@@593))) ($generated@@242 ($generated@@265 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@265 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@132 $generated@@593 ($generated@@227 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@225 $generated@@145)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@228 $generated@@596))) (< ($generated@@529 ($generated@@383 $generated@@136 ($generated@@265 $generated@@596 $generated@@597))) ($generated@@283 $generated@@596))))
 :pattern ( ($generated@@529 ($generated@@383 $generated@@136 ($generated@@265 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@132 $generated@@598 ($generated@@411 $generated@@599 $generated@@600))) (and (and ($generated@@132 ($generated@@306 $generated@@598) ($generated@@251 $generated@@599)) ($generated@@132 ($generated@@351 $generated@@598) ($generated@@251 $generated@@600))) ($generated@@132 ($generated@@382 $generated@@598) ($generated@@251 ($generated@@135 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@132 $generated@@598 ($generated@@411 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@64)) ($generated@@132 $generated@@601 ($generated@@419 $generated@@602 $generated@@603))) (and (and ($generated@@132 ($generated@@324 $generated@@601) ($generated@@256 $generated@@602)) ($generated@@132 ($generated@@362 $generated@@601) ($generated@@256 $generated@@603))) ($generated@@132 ($generated@@393 $generated@@601) ($generated@@256 ($generated@@135 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@132 $generated@@601 ($generated@@419 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@132 $generated@@604 $generated@@46))
 :pattern ( ($generated@@132 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@132 $generated@@605 $generated@@47))
 :pattern ( ($generated@@132 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@132 $generated@@606 $generated@@44))
 :pattern ( ($generated@@132 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@454) ($generated@@132 $generated@@607 $generated@@45))
 :pattern ( ($generated@@132 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@145) ($generated@@132 $generated@@608 $generated@@48))
 :pattern ( ($generated@@132 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@609) $generated@@64) (= (type $generated@@610) ($generated@@225 $generated@@145))) (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@611) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@612) $generated@@77)) (= (type $generated@@614) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@616  (=> (= (ControlFlow 0 5) (- 0 4)) (= ($generated@@228 ($generated@@224 $generated@@609 $generated@@610)) (- ($generated@@228 $generated@@610) 1)))))
(let (($generated@@617  (=> (= $generated@@611 ($generated@@211 $generated@@612 $generated@@613 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 (- ($generated@@228 $generated@@610) 1)) (<= (- ($generated@@228 $generated@@610) 1) ($generated@@228 $generated@@610)))) (=> (and (<= 0 (- ($generated@@228 $generated@@610) 1)) (<= (- ($generated@@228 $generated@@610) 1) ($generated@@228 $generated@@610))) (=> (= ($generated@@224 $generated@@609 $generated@@610) ($generated@@229 $generated@@610 (- ($generated@@228 $generated@@610) 1))) (=> (and ($generated@@132 ($generated@@224 $generated@@609 $generated@@610) ($generated@@227 $generated@@609)) (= (ControlFlow 0 6) 5)) $generated@@616)))))))
(let (($generated@@618  (=> (and ($generated@@132 ($generated@@224 $generated@@609 $generated@@610) ($generated@@227 $generated@@609)) ($generated@@74 $generated@@610 ($generated@@227 $generated@@609) $generated@@613)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> ($generated@@228 $generated@@610) 0)) (=> (and (> ($generated@@228 $generated@@610) 0) (= (ControlFlow 0 2) (- 0 1))) (or (= $generated@@610 $generated@@610) (< ($generated@@283 $generated@@610) ($generated@@283 $generated@@610))))))))
(let (($generated@@619  (=> (and (= $generated@@614 ($generated@@156 $generated@@612 $generated@@613 $generated@@60 false)) (> ($generated@@228 $generated@@610) 0)) (and (=> (= (ControlFlow 0 8) 2) $generated@@618) (=> (= (ControlFlow 0 8) 6) $generated@@617)))))
(let (($generated@@620  (=> (and (and (and ($generated@@273 $generated@@613) ($generated@@615 $generated@@613)) ($generated@@132 $generated@@610 ($generated@@227 $generated@@609))) (and (= 0 $generated@@223) (= (ControlFlow 0 9) 8))) $generated@@619)))
$generated@@620))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@250 (T@U Int) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U Int) T@U)
(declare-fun $generated@@253 (T@U) Int)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (Int) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@T T@U) T@U)
(declare-fun $generated@@284 (T@U Int) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Bool)
(declare-fun $generated@@313 (T@U T@U T@U) Bool)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@345 (T@U) Int)
(declare-fun $generated@@346 (T@T) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@T T@T) T@U)
(declare-fun $generated@@353 (T@T T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@T T@T) T@U)
(declare-fun $generated@@371 (T@T T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@T) T@U)
(declare-fun $generated@@497 () T@T)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@575 (T@U) Int)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@592 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@139)) 15))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@135 $generated@@140))
))) (= ($generated@@1 $generated@@136) 16)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@132 $generated@@141 $generated@@142 $generated@@143)) ($generated@@135 $generated@@136))
 :pattern ( ($generated@@132 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@133 $generated@@144)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@144))
))) (= (type $generated@@137) $generated@@134)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@64) (= (type $generated@@146) $generated@@134)) (= (type $generated@@147) ($generated@@135 $generated@@136))) (= ($generated@@132 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@145 $generated@@137 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@145 ($generated@@133 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@75 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@152) 17) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@64) (= (type $generated@@156) $generated@@64)) (= (type $generated@@157) $generated@@152)) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156))) ($generated@@150 $generated@@157))
 :pattern ( ($generated@@150 $generated@@157) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156)))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@136)
 :pattern ( ($generated@@159 $generated@@161))
)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@136)
 :pattern ( ($generated@@160 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@152) (= (type $generated@@164) $generated@@152)) true) (= ($generated@@158 $generated@@163 $generated@@164)  (and (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)) (= ($generated@@160 $generated@@163) ($generated@@160 $generated@@164)))))
 :pattern ( ($generated@@158 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@167 $generated@@168)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@168))
)))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@64) (= (type $generated@@170) $generated@@134)) (= (type $generated@@171) ($generated@@135 $generated@@136))) (or ($generated@@166 $generated@@169 $generated@@171) (and (not (= 0 $generated@@165)) ($generated@@148 $generated@@171 ($generated@@167 ($generated@@167 $generated@@169)))))) ($generated@@148 ($generated@@132 $generated@@169 $generated@@170 $generated@@171) ($generated@@167 $generated@@169)))
 :pattern ( ($generated@@132 $generated@@169 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@134)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@134)) (= (type $generated@@176) ($generated@@135 $generated@@136))) (= ($generated@@132 $generated@@174 ($generated@@172 $generated@@175) $generated@@176) ($generated@@132 $generated@@174 $generated@@175 $generated@@176)))
 :pattern ( ($generated@@132 $generated@@174 ($generated@@172 $generated@@175) $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@64)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@181) $generated@@64)) ($generated@@148 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@148 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 18)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@77 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@67 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@77) (= (type $generated@@232) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@233) ($generated@@66 $generated@@4))) (= (type $generated@@235) $generated@@77)) (= (type $generated@@236) ($generated@@66 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@184 $generated@@77 $generated@@4))
 :pattern ( ($generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@67 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@77) (= (type $generated@@244) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@245) ($generated@@66 $generated@@4))) (= (type $generated@@247) $generated@@77)) (= (type $generated@@248) ($generated@@66 $generated@@249))) (= ($generated@@0 ($generated@@182 ($generated@@238 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@182 ($generated@@238 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert  (and (and (forall (($generated@@254 T@U) ($generated@@255 Int) ) (! (let (($generated@@256 ($generated@@138 (type $generated@@254))))
(= (type ($generated@@250 $generated@@254 $generated@@255)) ($generated@@135 $generated@@256)))
 :pattern ( ($generated@@250 $generated@@254 $generated@@255))
)) (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@138 (type $generated@@257))))
(= (type ($generated@@251 $generated@@257 $generated@@258)) ($generated@@135 $generated@@259)))
 :pattern ( ($generated@@251 $generated@@257 $generated@@258))
))) (forall (($generated@@260 T@U) ($generated@@261 Int) ) (! (let (($generated@@262 ($generated@@138 (type $generated@@260))))
(= (type ($generated@@252 $generated@@260 $generated@@261)) ($generated@@135 $generated@@262)))
 :pattern ( ($generated@@252 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Int) ) (! (let (($generated@@266 ($generated@@138 (type $generated@@263))))
 (=> (and (and (= (type $generated@@263) ($generated@@135 $generated@@266)) (= (type $generated@@264) ($generated@@135 $generated@@266))) (= $generated@@265 ($generated@@253 $generated@@263))) (and (= ($generated@@250 ($generated@@251 $generated@@263 $generated@@264) $generated@@265) $generated@@263) (= ($generated@@252 ($generated@@251 $generated@@263 $generated@@264) $generated@@265) $generated@@264))))
 :pattern ( ($generated@@250 ($generated@@251 $generated@@263 $generated@@264) $generated@@265))
 :pattern ( ($generated@@252 ($generated@@251 $generated@@263 $generated@@264) $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@267 $generated@@269 $generated@@270)) $generated@@152)
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) $generated@@64)) (= (type $generated@@273) $generated@@136)) (= (type $generated@@274) $generated@@136)) (= ($generated@@148 ($generated@@267 $generated@@273 $generated@@274) ($generated@@151 $generated@@271 $generated@@272))  (and ($generated@@268 $generated@@273 $generated@@271) ($generated@@268 $generated@@274 $generated@@272))))
 :pattern ( ($generated@@148 ($generated@@267 $generated@@273 $generated@@274) ($generated@@151 $generated@@271 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@152) (= (type $generated@@276) $generated@@152)) (= ($generated@@158 $generated@@275 $generated@@276) (= $generated@@275 $generated@@276)))
 :pattern ( ($generated@@158 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 Int) ) (! (let (($generated@@279 ($generated@@138 (type $generated@@277))))
 (=> (and (= (type $generated@@277) ($generated@@135 $generated@@279)) (= $generated@@278 0)) (= ($generated@@252 $generated@@277 $generated@@278) $generated@@277)))
 :pattern ( ($generated@@252 $generated@@277 $generated@@278))
)))
(assert  (and (and (and (forall (($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
(= (type ($generated@@280 $generated@@285)) $generated@@286))
 :pattern ( ($generated@@280 $generated@@285))
)) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@282 $generated@@287)) ($generated@@135 $generated@@287))
 :pattern ( ($generated@@282 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@U) ) (! (= (type ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (! (let (($generated@@292 ($generated@@138 (type $generated@@290))))
(= (type ($generated@@284 $generated@@290 $generated@@291)) $generated@@292))
 :pattern ( ($generated@@284 $generated@@290 $generated@@291))
))))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (= (type $generated@@293) $generated@@64) (= (type $generated@@294) $generated@@134)) (= (type $generated@@295) ($generated@@135 $generated@@136))) (or ($generated@@166 $generated@@293 ($generated@@280 $generated@@295)) (and (not (= 0 $generated@@165)) ($generated@@148 $generated@@295 ($generated@@167 ($generated@@167 $generated@@293)))))) (and (=> (not (= ($generated@@253 ($generated@@280 $generated@@295)) ($generated@@281 0))) ($generated@@166 $generated@@293 ($generated@@280 ($generated@@252 ($generated@@280 $generated@@295) ($generated@@281 1))))) (= ($generated@@132 $generated@@293 ($generated@@172 $generated@@294) ($generated@@280 $generated@@295)) (ite (= ($generated@@253 ($generated@@280 $generated@@295)) ($generated@@281 0)) ($generated@@282 $generated@@136) ($generated@@251 ($generated@@283 ($generated@@135 $generated@@136) ($generated@@284 ($generated@@280 $generated@@295) ($generated@@281 0))) ($generated@@132 $generated@@293 ($generated@@172 $generated@@294) ($generated@@280 ($generated@@252 ($generated@@280 $generated@@295) ($generated@@281 1)))))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@293 ($generated@@172 $generated@@294) ($generated@@280 $generated@@295)))
))))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@64)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@299) $generated@@64)) (= ($generated@@148 $generated@@298 ($generated@@296 $generated@@299)) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@136) ($generated@@0 ($generated@@81 $generated@@298 $generated@@300))) ($generated@@268 $generated@@300 $generated@@299))
 :pattern ( ($generated@@81 $generated@@298 $generated@@300))
))))
 :pattern ( ($generated@@148 $generated@@298 ($generated@@296 $generated@@299)))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@64)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@304) $generated@@64)) (= ($generated@@148 $generated@@303 ($generated@@301 $generated@@304)) (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@136) ($generated@@0 ($generated@@81 $generated@@303 $generated@@305))) ($generated@@268 $generated@@305 $generated@@304))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
))))
 :pattern ( ($generated@@148 $generated@@303 ($generated@@301 $generated@@304)))
)))
(assert (forall (($generated@@306 Int) ) (! (= ($generated@@281 $generated@@306) $generated@@306)
 :pattern ( ($generated@@281 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (= ($generated@@280 $generated@@307) $generated@@307)
 :pattern ( ($generated@@280 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 Int) ($generated@@310 Int) ) (! (let (($generated@@311 ($generated@@138 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@135 $generated@@311)) (=> (and (and (<= 0 $generated@@310) (< $generated@@310 $generated@@309)) (< $generated@@310 ($generated@@253 $generated@@308))) (= ($generated@@284 ($generated@@250 $generated@@308 $generated@@309) $generated@@310) ($generated@@284 $generated@@308 $generated@@310)))))
 :weight 25
 :pattern ( ($generated@@284 ($generated@@250 $generated@@308 $generated@@309) $generated@@310))
 :pattern ( ($generated@@284 $generated@@308 $generated@@310) ($generated@@250 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@136)) (= (type $generated@@317) $generated@@136)) (= (type $generated@@318) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@312 $generated@@318)) (= ($generated@@74 ($generated@@267 $generated@@316 $generated@@317) ($generated@@151 $generated@@314 $generated@@315) $generated@@318)  (and ($generated@@313 $generated@@316 $generated@@314 $generated@@318) ($generated@@313 $generated@@317 $generated@@315 $generated@@318))))
 :pattern ( ($generated@@74 ($generated@@267 $generated@@316 $generated@@317) ($generated@@151 $generated@@314 $generated@@315) $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 Int) ) (! (let (($generated@@321 ($generated@@138 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@135 $generated@@321)) (=> (and (<= 0 $generated@@320) (<= $generated@@320 ($generated@@253 $generated@@319))) (= ($generated@@253 ($generated@@252 $generated@@319 $generated@@320)) (- ($generated@@253 $generated@@319) $generated@@320)))))
 :pattern ( ($generated@@253 ($generated@@252 $generated@@319 $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@68)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@152) (= ($generated@@150 $generated@@324) (= ($generated@@322 $generated@@324) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (! (let (($generated@@328 ($generated@@138 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@135 $generated@@328)) (=> (and (<= 0 $generated@@327) (< $generated@@327 ($generated@@253 $generated@@326))) (< ($generated@@325 ($generated@@250 $generated@@326 $generated@@327)) ($generated@@325 $generated@@326)))))
 :pattern ( ($generated@@325 ($generated@@250 $generated@@326 $generated@@327)))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@152) ($generated@@150 $generated@@329)) (exists (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (and (and (= (type $generated@@330) $generated@@136) (= (type $generated@@331) $generated@@136)) (= $generated@@329 ($generated@@267 $generated@@330 $generated@@331)))
 :no-pattern (type $generated@@330)
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
)))
 :pattern ( ($generated@@150 $generated@@329))
)))
(assert (forall (($generated@@332 T@T) ) (! (= ($generated@@253 ($generated@@282 $generated@@332)) 0)
 :pattern ( ($generated@@282 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 Int) ) (! (let (($generated@@335 ($generated@@138 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@135 $generated@@335)) (=> (and (< 0 $generated@@334) (<= $generated@@334 ($generated@@253 $generated@@333))) (< ($generated@@325 ($generated@@252 $generated@@333 $generated@@334)) ($generated@@325 $generated@@333)))))
 :pattern ( ($generated@@325 ($generated@@252 $generated@@333 $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@136)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@64) (= (type $generated@@340) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@313 ($generated@@336 $generated@@338) $generated@@339 $generated@@340) ($generated@@74 $generated@@338 $generated@@339 $generated@@340)))
 :pattern ( ($generated@@313 ($generated@@336 $generated@@338) $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 Int) ($generated@@343 Int) ) (! (let (($generated@@344 ($generated@@138 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@135 $generated@@344)) (=> (and (and (<= 0 $generated@@342) (<= 0 $generated@@343)) (< $generated@@343 (- ($generated@@253 $generated@@341) $generated@@342))) (= ($generated@@284 ($generated@@252 $generated@@341 $generated@@342) $generated@@343) ($generated@@284 $generated@@341 (+ $generated@@343 $generated@@342))))))
 :weight 25
 :pattern ( ($generated@@284 ($generated@@252 $generated@@341 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@347 T@T) ) (! (= (type ($generated@@346 $generated@@347)) ($generated@@76 $generated@@347 $generated@@2))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@79 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@76 $generated@@349 $generated@@2)) (and (= (= ($generated@@345 $generated@@348) 0) (= $generated@@348 ($generated@@346 $generated@@349))) (=> (not (= ($generated@@345 $generated@@348) 0)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) (< 0 ($generated ($generated@@81 $generated@@348 $generated@@350))))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert  (and (and (and (and (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (= ($generated@@1 ($generated@@353 $generated@@356 $generated@@357)) 19)) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@353 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@355 ($generated@@353 $generated@@360 $generated@@361)) $generated@@361)
 :pattern ( ($generated@@353 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@354 (type $generated@@362))))
(= (type ($generated@@351 $generated@@362)) ($generated@@76 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@362))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= (type ($generated@@352 $generated@@364 $generated@@365)) ($generated@@353 $generated@@364 $generated@@365))
 :pattern ( ($generated@@352 $generated@@364 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@T) ) (! (let (($generated@@368 (type $generated@@366)))
 (not ($generated@@0 ($generated@@81 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366))))
 :pattern ( (let (($generated@@368 (type $generated@@366)))
($generated@@81 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366)))
)))
(assert  (and (and (and (and (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (= ($generated@@1 ($generated@@371 $generated@@374 $generated@@375)) 20)) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= ($generated@@372 ($generated@@371 $generated@@376 $generated@@377)) $generated@@376)
 :pattern ( ($generated@@371 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= ($generated@@373 ($generated@@371 $generated@@378 $generated@@379)) $generated@@379)
 :pattern ( ($generated@@371 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@372 (type $generated@@380))))
(= (type ($generated@@369 $generated@@380)) ($generated@@76 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@380))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= (type ($generated@@370 $generated@@382 $generated@@383)) ($generated@@371 $generated@@382 $generated@@383))
 :pattern ( ($generated@@370 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@T) ) (! (let (($generated@@386 (type $generated@@384)))
 (not ($generated@@0 ($generated@@81 ($generated@@369 ($generated@@370 $generated@@386 $generated@@385)) $generated@@384))))
 :pattern ( (let (($generated@@386 (type $generated@@384)))
($generated@@81 ($generated@@369 ($generated@@370 $generated@@386 $generated@@385)) $generated@@384)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@138 (type $generated@@387))))
 (=> (and (= (type $generated@@387) ($generated@@135 $generated@@389)) (= (type $generated@@388) ($generated@@135 $generated@@389))) (= ($generated@@253 ($generated@@251 $generated@@387 $generated@@388)) (+ ($generated@@253 $generated@@387) ($generated@@253 $generated@@388)))))
 :pattern ( ($generated@@253 ($generated@@251 $generated@@387 $generated@@388)))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@79 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@76 $generated@@391 $generated@@2)) (= ($generated@@178 $generated@@390) (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@391) (and (<= 0 ($generated ($generated@@81 $generated@@390 $generated@@392))) (<= ($generated ($generated@@81 $generated@@390 $generated@@392)) ($generated@@345 $generated@@390))))
 :pattern ( ($generated@@81 $generated@@390 $generated@@392))
)))))
 :pattern ( ($generated@@178 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@355 (type $generated@@393))))
(let (($generated@@395 ($generated@@354 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@353 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@352 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@351 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@355 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@76 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@355 (type $generated@@400))))
(let (($generated@@402 ($generated@@354 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@353 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@352 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@81 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@373 (type $generated@@404))))
(let (($generated@@406 ($generated@@372 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@371 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@370 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) ($generated@@0 ($generated@@81 ($generated@@369 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@369 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@373 (type $generated@@409))))
(= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@373 (type $generated@@411))))
(let (($generated@@413 ($generated@@372 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@371 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@370 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@412) ($generated@@0 ($generated@@81 ($generated@@408 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@408 $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@416) $generated@@64)) (= ($generated@@148 $generated@@415 ($generated@@177 $generated@@416)) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@415 $generated@@417)))) ($generated@@268 $generated@@417 $generated@@416))
 :pattern ( ($generated@@81 $generated@@415 $generated@@417))
))))
 :pattern ( ($generated@@148 $generated@@415 ($generated@@177 $generated@@416)))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@418 ($generated@@296 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@136) ($generated@@0 ($generated@@81 $generated@@418 $generated@@421))) ($generated@@313 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@81 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@418 ($generated@@296 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@422 ($generated@@301 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@136) ($generated@@0 ($generated@@81 $generated@@422 $generated@@425))) ($generated@@313 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@81 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@74 $generated@@422 ($generated@@301 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@81 ($generated@@346 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@81 ($generated@@346 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@355 (type $generated@@431))))
(let (($generated@@433 ($generated@@354 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@76 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@353 $generated@@136 $generated@@136)) (= (type $generated@@435) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@81 ($generated@@351 $generated@@434) ($generated@@159 ($generated@@283 $generated@@152 $generated@@435)))) (= ($generated@@81 ($generated@@429 $generated@@434) ($generated@@159 ($generated@@283 $generated@@152 $generated@@435))) ($generated@@160 ($generated@@283 $generated@@152 $generated@@435))))))
 :pattern ( ($generated@@81 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@373 (type $generated@@439))))
(let (($generated@@441 ($generated@@372 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@76 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@371 $generated@@136 $generated@@136)) (= (type $generated@@443) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@81 ($generated@@369 $generated@@442) ($generated@@159 ($generated@@283 $generated@@152 $generated@@443)))) (= ($generated@@81 ($generated@@437 $generated@@442) ($generated@@159 ($generated@@283 $generated@@152 $generated@@443))) ($generated@@160 ($generated@@283 $generated@@152 $generated@@443))))))
 :pattern ( ($generated@@81 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@354 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@353 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@81 ($generated@@397 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@81 ($generated@@351 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@81 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@444) $generated@@448))
 :pattern ( ($generated@@81 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@372 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@371 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@81 ($generated@@408 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@81 ($generated@@369 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@81 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@449) $generated@@453))
 :pattern ( ($generated@@81 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@353 $generated@@136 $generated@@136)) (= (type $generated@@458) $generated@@64)) (= (type $generated@@459) $generated@@64)) (= (type $generated@@460) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@457) $generated@@461))) (and ($generated@@313 ($generated@@81 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@313 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@81 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@74 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@371 $generated@@136 $generated@@136)) (= (type $generated@@466) $generated@@64)) (= (type $generated@@467) $generated@@64)) (= (type $generated@@468) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@369 $generated@@465) $generated@@469))) (and ($generated@@313 ($generated@@81 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@313 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@81 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@74 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 Int) ) (! (let (($generated@@472 ($generated@@138 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@135 $generated@@472)) (=> (and (<= 0 $generated@@471) (<= $generated@@471 ($generated@@253 $generated@@470))) (= ($generated@@253 ($generated@@250 $generated@@470 $generated@@471)) $generated@@471))))
 :pattern ( ($generated@@253 ($generated@@250 $generated@@470 $generated@@471)))
)))
(assert (forall (($generated@@474 T@T) ) (! (= (type ($generated@@473 $generated@@474)) ($generated@@76 $generated@@474 $generated@@4))
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@373 (type $generated@@475))))
(let (($generated@@477 ($generated@@372 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@371 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@370 $generated@@477 $generated@@476)) (= ($generated@@369 $generated@@475) ($generated@@473 $generated@@477))))))
 :pattern ( ($generated@@369 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@373 (type $generated@@478))))
(let (($generated@@480 ($generated@@372 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@371 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@370 $generated@@480 $generated@@479)) (= ($generated@@408 $generated@@478) ($generated@@473 $generated@@479))))))
 :pattern ( ($generated@@408 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@373 (type $generated@@481))))
(let (($generated@@483 ($generated@@372 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@371 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@370 $generated@@483 $generated@@482)) (= ($generated@@436 $generated@@481) ($generated@@473 $generated@@136))))))
 :pattern ( ($generated@@436 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@355 (type $generated@@484))))
(let (($generated@@486 ($generated@@354 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@353 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@352 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@136) (= (type $generated@@488) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@428 $generated@@484) ($generated@@336 ($generated@@267 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@428 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@373 (type $generated@@489))))
(let (($generated@@491 ($generated@@372 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@371 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@370 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@136) (= (type $generated@@493) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@436 $generated@@489) ($generated@@336 ($generated@@267 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@436 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@136) ($generated@@268 $generated@@494 $generated@@46)) (and (= ($generated@@336 ($generated@@283 $generated@@2 $generated@@494)) $generated@@494) ($generated@@148 ($generated@@283 $generated@@2 $generated@@494) $generated@@46)))
 :pattern ( ($generated@@268 $generated@@494 $generated@@46))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@136) ($generated@@268 $generated@@495 $generated@@47)) (and (= ($generated@@336 ($generated@@283 $generated@@3 $generated@@495)) $generated@@495) ($generated@@148 ($generated@@283 $generated@@3 $generated@@495) $generated@@47)))
 :pattern ( ($generated@@268 $generated@@495 $generated@@47))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@136) ($generated@@268 $generated@@496 $generated@@44)) (and (= ($generated@@336 ($generated@@283 $generated@@4 $generated@@496)) $generated@@496) ($generated@@148 ($generated@@283 $generated@@4 $generated@@496) $generated@@44)))
 :pattern ( ($generated@@268 $generated@@496 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@497) 21))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@136) ($generated@@268 $generated@@498 $generated@@45)) (and (= ($generated@@336 ($generated@@283 $generated@@497 $generated@@498)) $generated@@498) ($generated@@148 ($generated@@283 $generated@@497 $generated@@498) $generated@@45)))
 :pattern ( ($generated@@268 $generated@@498 $generated@@45))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@268 ($generated@@336 $generated@@499) $generated@@500) ($generated@@148 $generated@@499 $generated@@500)))
 :pattern ( ($generated@@268 ($generated@@336 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@79 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@76 $generated@@502 $generated@@2)) (<= 0 ($generated@@345 $generated@@501))))
 :pattern ( ($generated@@345 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@138 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@135 $generated@@504)) (<= 0 ($generated@@253 $generated@@503))))
 :pattern ( ($generated@@253 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 Int) ($generated@@507 Int) ) (! (let (($generated@@508 ($generated@@138 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@135 $generated@@508)) (=> (and (and (<= 0 $generated@@506) (< $generated@@506 $generated@@507)) (<= $generated@@507 ($generated@@253 $generated@@505))) (< ($generated@@325 ($generated@@251 ($generated@@250 $generated@@505 $generated@@506) ($generated@@252 $generated@@505 $generated@@507))) ($generated@@325 $generated@@505)))))
 :pattern ( ($generated@@325 ($generated@@251 ($generated@@250 $generated@@505 $generated@@506) ($generated@@252 $generated@@505 $generated@@507))))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= ($generated@@509 ($generated@@454 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@454 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= ($generated@@513 ($generated@@454 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@454 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@64) (= (type $generated@@518) $generated@@64)) (= ($generated@@72 ($generated@@454 $generated@@517 $generated@@518)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@64) (= (type $generated@@522) $generated@@64)) (= ($generated@@519 ($generated@@462 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@462 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= ($generated@@523 ($generated@@462 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@462 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= ($generated@@72 ($generated@@462 $generated@@527 $generated@@528)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@136) (= (type $generated@@530) $generated@@136)) (= ($generated@@322 ($generated@@267 $generated@@529 $generated@@530)) $generated@@61))
 :pattern ( ($generated@@267 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (= ($generated@@531 ($generated@@151 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@151 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@64) (= (type $generated@@538) $generated@@64)) (= ($generated@@535 ($generated@@151 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@151 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@136)) (= ($generated@@159 ($generated@@267 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@267 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@136) (= (type $generated@@542) $generated@@136)) (= ($generated@@160 ($generated@@267 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@267 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@135 $generated@@136)) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@543 ($generated@@167 $generated@@544) $generated@@545) (forall (($generated@@546 Int) ) (!  (=> (and (<= 0 $generated@@546) (< $generated@@546 ($generated@@253 $generated@@543))) ($generated@@313 ($generated@@284 $generated@@543 $generated@@546) $generated@@544 $generated@@545))
 :pattern ( ($generated@@284 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@167 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@547 ($generated@@75 $generated@@548)) $generated@@548)
 :pattern ( ($generated@@75 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@64)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@549 ($generated@@296 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@296 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@64) (= ($generated@@72 ($generated@@296 $generated@@552)) $generated@@54))
 :pattern ( ($generated@@296 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@64)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@553 ($generated@@301 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@301 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@64) (= ($generated@@72 ($generated@@301 $generated@@556)) $generated@@55))
 :pattern ( ($generated@@301 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@557 ($generated@@177 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@177 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@64) (= ($generated@@72 ($generated@@177 $generated@@560)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@64)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@64) (= ($generated@@561 ($generated@@167 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@167 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@564)) $generated@@57))
 :pattern ( ($generated@@167 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
(= ($generated@@283 $generated@@566 ($generated@@336 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@336 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@353 $generated@@136 $generated@@136)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) $generated@@64)) (= ($generated@@148 $generated@@567 ($generated@@454 $generated@@568 $generated@@569)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@567) $generated@@570))) (and ($generated@@268 ($generated@@81 ($generated@@429 $generated@@567) $generated@@570) $generated@@569) ($generated@@268 $generated@@570 $generated@@568)))
 :pattern ( ($generated@@81 ($generated@@429 $generated@@567) $generated@@570))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@567) $generated@@570))
))))
 :pattern ( ($generated@@148 $generated@@567 ($generated@@454 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@371 $generated@@136 $generated@@136)) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) $generated@@64)) (= ($generated@@148 $generated@@571 ($generated@@462 $generated@@572 $generated@@573)) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@369 $generated@@571) $generated@@574))) (and ($generated@@268 ($generated@@81 ($generated@@437 $generated@@571) $generated@@574) $generated@@573) ($generated@@268 $generated@@574 $generated@@572)))
 :pattern ( ($generated@@81 ($generated@@437 $generated@@571) $generated@@574))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@571) $generated@@574))
))))
 :pattern ( ($generated@@148 $generated@@571 ($generated@@462 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@136) (= (type $generated@@578) $generated@@136)) (< ($generated@@575 $generated@@577) ($generated@@576 ($generated@@267 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@267 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@136) (= (type $generated@@580) $generated@@136)) (< ($generated@@575 $generated@@580) ($generated@@576 ($generated@@267 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@267 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@136) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) ($generated@@268 $generated@@581 ($generated@@454 $generated@@582 $generated@@583))) (and (= ($generated@@336 ($generated@@283 ($generated@@353 $generated@@136 $generated@@136) $generated@@581)) $generated@@581) ($generated@@148 ($generated@@283 ($generated@@353 $generated@@136 $generated@@136) $generated@@581) ($generated@@454 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@268 $generated@@581 ($generated@@454 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@136) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@268 $generated@@584 ($generated@@462 $generated@@585 $generated@@586))) (and (= ($generated@@336 ($generated@@283 ($generated@@371 $generated@@136 $generated@@136) $generated@@584)) $generated@@584) ($generated@@148 ($generated@@283 ($generated@@371 $generated@@136 $generated@@136) $generated@@584) ($generated@@462 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@268 $generated@@584 ($generated@@462 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@64) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@136)) ($generated@@268 $generated@@589 ($generated@@151 $generated@@587 $generated@@588))) (and (= ($generated@@336 ($generated@@283 $generated@@152 $generated@@589)) $generated@@589) ($generated@@148 ($generated@@283 $generated@@152 $generated@@589) ($generated@@151 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@268 $generated@@589 ($generated@@151 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@81 ($generated@@473 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@81 ($generated@@473 $generated@@591) $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@69)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@64) (= (type $generated@@595) $generated@@64)) (and (= ($generated@@72 ($generated@@151 $generated@@594 $generated@@595)) $generated@@62) (= ($generated@@592 ($generated@@151 $generated@@594 $generated@@595)) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@152) (= ($generated@@575 ($generated@@336 $generated@@596)) ($generated@@576 $generated@@596)))
 :pattern ( ($generated@@575 ($generated@@336 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@136) ($generated@@268 $generated@@597 ($generated@@75 0))) (and (= ($generated@@336 ($generated@@283 $generated@@2 $generated@@597)) $generated@@597) ($generated@@148 ($generated@@283 ($generated@@76 $generated@@136 $generated@@4) $generated@@597) ($generated@@75 0))))
 :pattern ( ($generated@@268 $generated@@597 ($generated@@75 0)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@136) (= (type $generated@@599) $generated@@64)) ($generated@@268 $generated@@598 ($generated@@296 $generated@@599))) (and (= ($generated@@336 ($generated@@283 ($generated@@76 $generated@@136 $generated@@4) $generated@@598)) $generated@@598) ($generated@@148 ($generated@@283 ($generated@@76 $generated@@136 $generated@@4) $generated@@598) ($generated@@296 $generated@@599))))
 :pattern ( ($generated@@268 $generated@@598 ($generated@@296 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@136) (= (type $generated@@601) $generated@@64)) ($generated@@268 $generated@@600 ($generated@@301 $generated@@601))) (and (= ($generated@@336 ($generated@@283 ($generated@@76 $generated@@136 $generated@@4) $generated@@600)) $generated@@600) ($generated@@148 ($generated@@283 ($generated@@76 $generated@@136 $generated@@4) $generated@@600) ($generated@@301 $generated@@601))))
 :pattern ( ($generated@@268 $generated@@600 ($generated@@301 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@136) (= (type $generated@@603) $generated@@64)) ($generated@@268 $generated@@602 ($generated@@177 $generated@@603))) (and (= ($generated@@336 ($generated@@283 ($generated@@76 $generated@@136 $generated@@2) $generated@@602)) $generated@@602) ($generated@@148 ($generated@@283 ($generated@@76 $generated@@136 $generated@@2) $generated@@602) ($generated@@177 $generated@@603))))
 :pattern ( ($generated@@268 $generated@@602 ($generated@@177 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@136) (= (type $generated@@605) $generated@@64)) ($generated@@268 $generated@@604 ($generated@@167 $generated@@605))) (and (= ($generated@@336 ($generated@@283 ($generated@@135 $generated@@136) $generated@@604)) $generated@@604) ($generated@@148 ($generated@@283 ($generated@@135 $generated@@136) $generated@@604) ($generated@@167 $generated@@605))))
 :pattern ( ($generated@@268 $generated@@604 ($generated@@167 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ($generated@@608 Int) ) (! (let (($generated@@609 ($generated@@138 (type $generated@@606))))
 (=> (= (type $generated@@606) ($generated@@135 $generated@@609)) (=> (and (and (<= 0 $generated@@607) (<= $generated@@607 $generated@@608)) (< $generated@@608 ($generated@@253 $generated@@606))) (= ($generated@@284 ($generated@@252 $generated@@606 $generated@@607) (- $generated@@608 $generated@@607)) ($generated@@284 $generated@@606 $generated@@608)))))
 :weight 25
 :pattern ( ($generated@@284 $generated@@606 $generated@@608) ($generated@@252 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@611) $generated@@64)) (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@610 ($generated@@177 $generated@@611) $generated@@612) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@610 $generated@@613)))) ($generated@@313 $generated@@613 $generated@@611 $generated@@612))
 :pattern ( ($generated@@81 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@74 $generated@@610 ($generated@@177 $generated@@611) $generated@@612))
)))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@64) (= (type $generated@@615) $generated@@134)) (= (type $generated@@616) ($generated@@135 $generated@@136))) (or ($generated@@166 $generated@@614 $generated@@616) (and (not (= 0 $generated@@165)) ($generated@@148 $generated@@616 ($generated@@167 ($generated@@167 $generated@@614)))))) (and (=> (not (= ($generated@@253 $generated@@616) ($generated@@281 0))) ($generated@@166 $generated@@614 ($generated@@252 $generated@@616 ($generated@@281 1)))) (= ($generated@@132 $generated@@614 ($generated@@172 $generated@@615) $generated@@616) (ite (= ($generated@@253 $generated@@616) ($generated@@281 0)) ($generated@@282 $generated@@136) ($generated@@251 ($generated@@283 ($generated@@135 $generated@@136) ($generated@@284 $generated@@616 ($generated@@281 0))) ($generated@@132 $generated@@614 $generated@@615 ($generated@@252 $generated@@616 ($generated@@281 1))))))))
 :pattern ( ($generated@@132 $generated@@614 ($generated@@172 $generated@@615) $generated@@616))
))))
(assert (forall (($generated@@617 T@U) ($generated@@618 Int) ($generated@@619 Int) ) (! (let (($generated@@620 ($generated@@138 (type $generated@@617))))
 (=> (= (type $generated@@617) ($generated@@135 $generated@@620)) (=> (and (and (<= 0 $generated@@618) (<= 0 $generated@@619)) (<= (+ $generated@@618 $generated@@619) ($generated@@253 $generated@@617))) (= ($generated@@252 ($generated@@252 $generated@@617 $generated@@618) $generated@@619) ($generated@@252 $generated@@617 (+ $generated@@618 $generated@@619))))))
 :pattern ( ($generated@@252 ($generated@@252 $generated@@617 $generated@@618) $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@152) (= (type $generated@@622) $generated@@64)) (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@312 $generated@@623) (and ($generated@@150 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@64) ($generated@@74 $generated@@621 ($generated@@151 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@74 $generated@@621 ($generated@@151 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@313 ($generated@@159 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@313 ($generated@@159 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@152) (= (type $generated@@626) $generated@@64)) (= (type $generated@@627) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@312 $generated@@627) (and ($generated@@150 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@64) ($generated@@74 $generated@@625 ($generated@@151 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@74 $generated@@625 ($generated@@151 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@313 ($generated@@160 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@313 ($generated@@160 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 Int) ) (! (let (($generated@@632 ($generated@@138 (type $generated@@629))))
 (=> (and (= (type $generated@@629) ($generated@@135 $generated@@632)) (= (type $generated@@630) ($generated@@135 $generated@@632))) (and (=> (< $generated@@631 ($generated@@253 $generated@@629)) (= ($generated@@284 ($generated@@251 $generated@@629 $generated@@630) $generated@@631) ($generated@@284 $generated@@629 $generated@@631))) (=> (<= ($generated@@253 $generated@@629) $generated@@631) (= ($generated@@284 ($generated@@251 $generated@@629 $generated@@630) $generated@@631) ($generated@@284 $generated@@630 (- $generated@@631 ($generated@@253 $generated@@629))))))))
 :pattern ( ($generated@@284 ($generated@@251 $generated@@629 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@136) (= (type $generated@@634) $generated@@136)) (= ($generated@@267 ($generated@@280 $generated@@633) ($generated@@280 $generated@@634)) ($generated@@280 ($generated@@267 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@267 ($generated@@280 $generated@@633) ($generated@@280 $generated@@634)))
)))
(assert (forall (($generated@@635 Int) ) (! (= ($generated@@336 ($generated@@8 ($generated@@281 $generated@@635))) ($generated@@280 ($generated@@336 ($generated@@8 $generated@@635))))
 :pattern ( ($generated@@336 ($generated@@8 ($generated@@281 $generated@@635))))
)))
(assert (forall (($generated@@636 T@U) ) (! (= ($generated@@336 ($generated@@280 $generated@@636)) ($generated@@280 ($generated@@336 $generated@@636)))
 :pattern ( ($generated@@336 ($generated@@280 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (! (let (($generated@@638 ($generated@@138 (type $generated@@637))))
 (=> (and (= (type $generated@@637) ($generated@@135 $generated@@638)) (= ($generated@@253 $generated@@637) 0)) (= $generated@@637 ($generated@@282 $generated@@638))))
 :pattern ( ($generated@@253 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 Int) ) (! (let (($generated@@641 ($generated@@138 (type $generated@@639))))
 (=> (and (= (type $generated@@639) ($generated@@135 $generated@@641)) (= $generated@@640 0)) (= ($generated@@250 $generated@@639 $generated@@640) ($generated@@282 $generated@@641))))
 :pattern ( ($generated@@250 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (! (let (($generated@@645 (type $generated@@643)))
 (=> (and (and (= (type $generated@@642) ($generated@@76 $generated@@645 $generated@@2)) (= (type $generated@@644) $generated@@2)) (<= 0 ($generated $generated@@644))) (= ($generated@@345 ($generated@@82 $generated@@642 $generated@@643 $generated@@644)) (+ (- ($generated@@345 $generated@@642) ($generated ($generated@@81 $generated@@642 $generated@@643))) ($generated $generated@@644)))))
 :pattern ( ($generated@@345 ($generated@@82 $generated@@642 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@647) $generated@@2)) ($generated@@74 $generated@@647 $generated@@46 $generated@@646))
 :pattern ( ($generated@@74 $generated@@647 $generated@@46 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@649) $generated@@3)) ($generated@@74 $generated@@649 $generated@@47 $generated@@648))
 :pattern ( ($generated@@74 $generated@@649 $generated@@47 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@651) $generated@@4)) ($generated@@74 $generated@@651 $generated@@44 $generated@@650))
 :pattern ( ($generated@@74 $generated@@651 $generated@@44 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@653) $generated@@497)) ($generated@@74 $generated@@653 $generated@@45 $generated@@652))
 :pattern ( ($generated@@74 $generated@@653 $generated@@45 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@655) $generated@@136)) ($generated@@74 $generated@@655 $generated@@48 $generated@@654))
 :pattern ( ($generated@@74 $generated@@655 $generated@@48 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@135 $generated@@136)) (= (type $generated@@657) $generated@@64)) (= ($generated@@148 $generated@@656 ($generated@@167 $generated@@657)) (forall (($generated@@658 Int) ) (!  (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@253 $generated@@656))) ($generated@@268 ($generated@@284 $generated@@656 $generated@@658) $generated@@657))
 :pattern ( ($generated@@284 $generated@@656 $generated@@658))
))))
 :pattern ( ($generated@@148 $generated@@656 ($generated@@167 $generated@@657)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 Int) ) (!  (=> (= (type $generated@@659) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@253 $generated@@659))) (< ($generated@@576 ($generated@@283 $generated@@152 ($generated@@284 $generated@@659 $generated@@660))) ($generated@@325 $generated@@659))))
 :pattern ( ($generated@@576 ($generated@@283 $generated@@152 ($generated@@284 $generated@@659 $generated@@660))))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) ($generated@@353 $generated@@136 $generated@@136)) (= (type $generated@@662) $generated@@64)) (= (type $generated@@663) $generated@@64)) ($generated@@148 $generated@@661 ($generated@@454 $generated@@662 $generated@@663))) (and (and ($generated@@148 ($generated@@351 $generated@@661) ($generated@@296 $generated@@662)) ($generated@@148 ($generated@@397 $generated@@661) ($generated@@296 $generated@@663))) ($generated@@148 ($generated@@428 $generated@@661) ($generated@@296 ($generated@@151 $generated@@662 $generated@@663)))))
 :pattern ( ($generated@@148 $generated@@661 ($generated@@454 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@371 $generated@@136 $generated@@136)) (= (type $generated@@665) $generated@@64)) (= (type $generated@@666) $generated@@64)) ($generated@@148 $generated@@664 ($generated@@462 $generated@@665 $generated@@666))) (and (and ($generated@@148 ($generated@@369 $generated@@664) ($generated@@301 $generated@@665)) ($generated@@148 ($generated@@408 $generated@@664) ($generated@@301 $generated@@666))) ($generated@@148 ($generated@@436 $generated@@664) ($generated@@301 ($generated@@151 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@148 $generated@@664 ($generated@@462 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@2) ($generated@@148 $generated@@667 $generated@@46))
 :pattern ( ($generated@@148 $generated@@667 $generated@@46))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@3) ($generated@@148 $generated@@668 $generated@@47))
 :pattern ( ($generated@@148 $generated@@668 $generated@@47))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@4) ($generated@@148 $generated@@669 $generated@@44))
 :pattern ( ($generated@@148 $generated@@669 $generated@@44))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@497) ($generated@@148 $generated@@670 $generated@@45))
 :pattern ( ($generated@@148 $generated@@670 $generated@@45))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@136) ($generated@@148 $generated@@671 $generated@@48))
 :pattern ( ($generated@@148 $generated@@671 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@672) ($generated@@135 $generated@@136)) (= (type $generated@@673) ($generated@@135 $generated@@136))) (= (type $generated@@674) $generated@@64)) (= (type $generated@@675) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@676) ($generated@@184 $generated@@77 $generated@@4))) (= (type $generated@@677) $generated@@77)) (= (type $generated@@678) ($generated@@184 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@680  (=> (not (= ($generated@@253 $generated@@672) ($generated@@281 0))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= 0 ($generated@@281 0)) (< ($generated@@281 0) ($generated@@253 $generated@@672)))) (=> (and (<= 0 ($generated@@281 0)) (< ($generated@@281 0) ($generated@@253 $generated@@672))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 ($generated@@281 1)) (<= ($generated@@281 1) ($generated@@253 $generated@@672)))) (=> (and (<= 0 ($generated@@281 1)) (<= ($generated@@281 1) ($generated@@253 $generated@@672))) (=> (= $generated@@673 ($generated@@252 $generated@@672 ($generated@@281 1))) (=> (and ($generated@@74 $generated@@673 ($generated@@167 ($generated@@167 $generated@@674)) $generated@@675) (= (ControlFlow 0 4) (- 0 3))) (< ($generated@@325 $generated@@673) ($generated@@325 $generated@@672)))))))))))
(let (($generated@@681 true))
(let (($generated@@682  (=> (= $generated@@676 ($generated@@238 $generated@@677 $generated@@675 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@681) (=> (= (ControlFlow 0 7) 4) $generated@@680)))))
(let (($generated@@683 true))
(let (($generated@@684  (=> (= $generated@@678 ($generated@@183 $generated@@677 $generated@@675 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@683) (=> (= (ControlFlow 0 8) 7) $generated@@682)))))
(let (($generated@@685  (=> (and (and (and ($generated@@312 $generated@@675) ($generated@@679 $generated@@675)) ($generated@@148 $generated@@672 ($generated@@167 ($generated@@167 $generated@@674)))) (and (= 0 $generated@@165) (= (ControlFlow 0 9) 8))) $generated@@684)))
$generated@@685)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U Int) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U Int) T@U)
(declare-fun $generated@@241 (T@U) Int)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U Int) T@U)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (Int) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@T T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Bool)
(declare-fun $generated@@313 (T@U T@U T@U) Bool)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@325 (T@U T@U) Bool)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@352 (T@U) Int)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@T) T@U)
(declare-fun $generated@@378 (T@T T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@380 (T@T) T@T)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@465 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@U T@U) T@U)
(declare-fun $generated@@487 (T@T) T@U)
(declare-fun $generated@@511 () T@T)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@606 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@139)) 15))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@135 $generated@@140))
))) (= ($generated@@1 $generated@@136) 16)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@132 $generated@@141 $generated@@142 $generated@@143)) ($generated@@135 $generated@@136))
 :pattern ( ($generated@@132 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@133 $generated@@144)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@144))
))) (= (type $generated@@137) $generated@@134)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@64) (= (type $generated@@146) $generated@@134)) (= (type $generated@@147) ($generated@@135 $generated@@136))) (= ($generated@@132 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@145 $generated@@137 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@145 ($generated@@133 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@75 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@152) 17) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@64) (= (type $generated@@156) $generated@@64)) (= (type $generated@@157) $generated@@152)) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156))) ($generated@@150 $generated@@157))
 :pattern ( ($generated@@150 $generated@@157) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156)))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@136)
 :pattern ( ($generated@@159 $generated@@161))
)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@136)
 :pattern ( ($generated@@160 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@152) (= (type $generated@@164) $generated@@152)) true) (= ($generated@@158 $generated@@163 $generated@@164)  (and (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)) (= ($generated@@160 $generated@@163) ($generated@@160 $generated@@164)))))
 :pattern ( ($generated@@158 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@167 $generated@@168)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@168))
)))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@64) (= (type $generated@@170) $generated@@134)) (= (type $generated@@171) ($generated@@135 $generated@@136))) (or ($generated@@166 $generated@@169 $generated@@171) (and (not (= 0 $generated@@165)) ($generated@@148 $generated@@171 ($generated@@167 ($generated@@167 $generated@@169)))))) ($generated@@148 ($generated@@132 $generated@@169 $generated@@170 $generated@@171) ($generated@@167 $generated@@169)))
 :pattern ( ($generated@@132 $generated@@169 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@134)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@134)) (= (type $generated@@176) ($generated@@135 $generated@@136))) (= ($generated@@132 $generated@@174 ($generated@@172 $generated@@175) $generated@@176) ($generated@@132 $generated@@174 $generated@@175 $generated@@176)))
 :pattern ( ($generated@@132 $generated@@174 ($generated@@172 $generated@@175) $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@64)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@181) $generated@@64)) ($generated@@148 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@148 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 18)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@77 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@67 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@77) (= (type $generated@@232) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@233) ($generated@@66 $generated@@4))) (= (type $generated@@235) $generated@@77)) (= (type $generated@@236) ($generated@@66 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert  (and (and (forall (($generated@@242 T@U) ($generated@@243 Int) ) (! (let (($generated@@244 ($generated@@138 (type $generated@@242))))
(= (type ($generated@@238 $generated@@242 $generated@@243)) ($generated@@135 $generated@@244)))
 :pattern ( ($generated@@238 $generated@@242 $generated@@243))
)) (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@138 (type $generated@@245))))
(= (type ($generated@@239 $generated@@245 $generated@@246)) ($generated@@135 $generated@@247)))
 :pattern ( ($generated@@239 $generated@@245 $generated@@246))
))) (forall (($generated@@248 T@U) ($generated@@249 Int) ) (! (let (($generated@@250 ($generated@@138 (type $generated@@248))))
(= (type ($generated@@240 $generated@@248 $generated@@249)) ($generated@@135 $generated@@250)))
 :pattern ( ($generated@@240 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Int) ) (! (let (($generated@@254 ($generated@@138 (type $generated@@251))))
 (=> (and (and (= (type $generated@@251) ($generated@@135 $generated@@254)) (= (type $generated@@252) ($generated@@135 $generated@@254))) (= $generated@@253 ($generated@@241 $generated@@251))) (and (= ($generated@@238 ($generated@@239 $generated@@251 $generated@@252) $generated@@253) $generated@@251) (= ($generated@@240 ($generated@@239 $generated@@251 $generated@@252) $generated@@253) $generated@@252))))
 :pattern ( ($generated@@238 ($generated@@239 $generated@@251 $generated@@252) $generated@@253))
 :pattern ( ($generated@@240 ($generated@@239 $generated@@251 $generated@@252) $generated@@253))
)))
(assert  (and (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@255 $generated@@258 $generated@@259)) $generated@@136)
 :pattern ( ($generated@@255 $generated@@258 $generated@@259))
)) (forall (($generated@@260 T@U) ($generated@@261 Int) ) (! (let (($generated@@262 ($generated@@138 (type $generated@@260))))
(= (type ($generated@@257 $generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@257 $generated@@260 $generated@@261))
))))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) ($generated@@135 $generated@@136))) (or ($generated@@256 $generated@@263 $generated@@264) (and (not (= 0 $generated@@165)) (and ($generated@@148 $generated@@264 ($generated@@167 $generated@@263)) (> ($generated@@241 $generated@@264) 0))))) (= ($generated@@255 $generated@@263 $generated@@264) ($generated@@257 $generated@@264 (- ($generated@@241 $generated@@264) 1))))
 :pattern ( ($generated@@255 $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) ($generated@@135 $generated@@136))
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@64) (= (type $generated@@270) ($generated@@135 $generated@@136))) (or ($generated@@266 $generated@@269 $generated@@270) (and (not (= 0 $generated@@165)) (and ($generated@@148 $generated@@270 ($generated@@167 $generated@@269)) (> ($generated@@241 $generated@@270) 0))))) (= ($generated@@265 $generated@@269 $generated@@270) ($generated@@238 $generated@@270 (- ($generated@@241 $generated@@270) 1))))
 :pattern ( ($generated@@265 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@271 $generated@@273 $generated@@274)) $generated@@152)
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) $generated@@64)) (= (type $generated@@277) $generated@@136)) (= (type $generated@@278) $generated@@136)) (= ($generated@@148 ($generated@@271 $generated@@277 $generated@@278) ($generated@@151 $generated@@275 $generated@@276))  (and ($generated@@272 $generated@@277 $generated@@275) ($generated@@272 $generated@@278 $generated@@276))))
 :pattern ( ($generated@@148 ($generated@@271 $generated@@277 $generated@@278) ($generated@@151 $generated@@275 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@152) (= (type $generated@@280) $generated@@152)) (= ($generated@@158 $generated@@279 $generated@@280) (= $generated@@279 $generated@@280)))
 :pattern ( ($generated@@158 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 Int) ) (! (let (($generated@@283 ($generated@@138 (type $generated@@281))))
 (=> (and (= (type $generated@@281) ($generated@@135 $generated@@283)) (= $generated@@282 0)) (= ($generated@@240 $generated@@281 $generated@@282) $generated@@281)))
 :pattern ( ($generated@@240 $generated@@281 $generated@@282))
)))
(assert  (and (and (forall (($generated@@288 T@U) ) (! (let (($generated@@289 (type $generated@@288)))
(= (type ($generated@@284 $generated@@288)) $generated@@289))
 :pattern ( ($generated@@284 $generated@@288))
)) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@286 $generated@@290)) ($generated@@135 $generated@@290))
 :pattern ( ($generated@@286 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@U) ) (! (= (type ($generated@@287 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@287 $generated@@291 $generated@@292))
))))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (= (type $generated@@293) $generated@@64) (= (type $generated@@294) $generated@@134)) (= (type $generated@@295) ($generated@@135 $generated@@136))) (or ($generated@@166 $generated@@293 ($generated@@284 $generated@@295)) (and (not (= 0 $generated@@165)) ($generated@@148 $generated@@295 ($generated@@167 ($generated@@167 $generated@@293)))))) (and (=> (not (= ($generated@@241 ($generated@@284 $generated@@295)) ($generated@@285 0))) ($generated@@166 $generated@@293 ($generated@@284 ($generated@@240 ($generated@@284 $generated@@295) ($generated@@285 1))))) (= ($generated@@132 $generated@@293 ($generated@@172 $generated@@294) ($generated@@284 $generated@@295)) (ite (= ($generated@@241 ($generated@@284 $generated@@295)) ($generated@@285 0)) ($generated@@286 $generated@@136) ($generated@@239 ($generated@@287 ($generated@@135 $generated@@136) ($generated@@257 ($generated@@284 $generated@@295) ($generated@@285 0))) ($generated@@132 $generated@@293 ($generated@@172 $generated@@294) ($generated@@284 ($generated@@240 ($generated@@284 $generated@@295) ($generated@@285 1)))))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@293 ($generated@@172 $generated@@294) ($generated@@284 $generated@@295)))
))))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@64)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@299) $generated@@64)) (= ($generated@@148 $generated@@298 ($generated@@296 $generated@@299)) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@136) ($generated@@0 ($generated@@81 $generated@@298 $generated@@300))) ($generated@@272 $generated@@300 $generated@@299))
 :pattern ( ($generated@@81 $generated@@298 $generated@@300))
))))
 :pattern ( ($generated@@148 $generated@@298 ($generated@@296 $generated@@299)))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@64)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@304) $generated@@64)) (= ($generated@@148 $generated@@303 ($generated@@301 $generated@@304)) (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@136) ($generated@@0 ($generated@@81 $generated@@303 $generated@@305))) ($generated@@272 $generated@@305 $generated@@304))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
))))
 :pattern ( ($generated@@148 $generated@@303 ($generated@@301 $generated@@304)))
)))
(assert (forall (($generated@@306 Int) ) (! (= ($generated@@285 $generated@@306) $generated@@306)
 :pattern ( ($generated@@285 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (= ($generated@@284 $generated@@307) $generated@@307)
 :pattern ( ($generated@@284 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 Int) ($generated@@310 Int) ) (! (let (($generated@@311 ($generated@@138 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@135 $generated@@311)) (=> (and (and (<= 0 $generated@@310) (< $generated@@310 $generated@@309)) (< $generated@@310 ($generated@@241 $generated@@308))) (= ($generated@@257 ($generated@@238 $generated@@308 $generated@@309) $generated@@310) ($generated@@257 $generated@@308 $generated@@310)))))
 :weight 25
 :pattern ( ($generated@@257 ($generated@@238 $generated@@308 $generated@@309) $generated@@310))
 :pattern ( ($generated@@257 $generated@@308 $generated@@310) ($generated@@238 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@136)) (= (type $generated@@317) $generated@@136)) (= (type $generated@@318) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@312 $generated@@318)) (= ($generated@@74 ($generated@@271 $generated@@316 $generated@@317) ($generated@@151 $generated@@314 $generated@@315) $generated@@318)  (and ($generated@@313 $generated@@316 $generated@@314 $generated@@318) ($generated@@313 $generated@@317 $generated@@315 $generated@@318))))
 :pattern ( ($generated@@74 ($generated@@271 $generated@@316 $generated@@317) ($generated@@151 $generated@@314 $generated@@315) $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 Int) ) (! (let (($generated@@321 ($generated@@138 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@135 $generated@@321)) (=> (and (<= 0 $generated@@320) (<= $generated@@320 ($generated@@241 $generated@@319))) (= ($generated@@241 ($generated@@240 $generated@@319 $generated@@320)) (- ($generated@@241 $generated@@319) $generated@@320)))))
 :pattern ( ($generated@@241 ($generated@@240 $generated@@319 $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@68)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@152) (= ($generated@@150 $generated@@324) (= ($generated@@322 $generated@@324) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@138 (type $generated@@326))))
 (=> (and (= (type $generated@@326) ($generated@@135 $generated@@328)) (= (type $generated@@327) ($generated@@135 $generated@@328))) (= ($generated@@325 $generated@@326 $generated@@327)  (and (= ($generated@@241 $generated@@326) ($generated@@241 $generated@@327)) (forall (($generated@@329 Int) ) (!  (=> (and (<= 0 $generated@@329) (< $generated@@329 ($generated@@241 $generated@@326))) (= ($generated@@257 $generated@@326 $generated@@329) ($generated@@257 $generated@@327 $generated@@329)))
 :pattern ( ($generated@@257 $generated@@326 $generated@@329))
 :pattern ( ($generated@@257 $generated@@327 $generated@@329))
))))))
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 Int) ) (! (let (($generated@@333 ($generated@@138 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@135 $generated@@333)) (=> (and (<= 0 $generated@@332) (< $generated@@332 ($generated@@241 $generated@@331))) (< ($generated@@330 ($generated@@238 $generated@@331 $generated@@332)) ($generated@@330 $generated@@331)))))
 :pattern ( ($generated@@330 ($generated@@238 $generated@@331 $generated@@332)))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@152) ($generated@@150 $generated@@334)) (exists (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (and (and (= (type $generated@@335) $generated@@136) (= (type $generated@@336) $generated@@136)) (= $generated@@334 ($generated@@271 $generated@@335 $generated@@336)))
 :no-pattern (type $generated@@335)
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
)))
 :pattern ( ($generated@@150 $generated@@334))
)))
(assert (forall (($generated@@337 T@T) ) (! (= ($generated@@241 ($generated@@286 $generated@@337)) 0)
 :pattern ( ($generated@@286 $generated@@337))
)))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) ($generated@@135 $generated@@136))) (or ($generated@@266 $generated@@338 $generated@@339) (and (not (= 0 $generated@@165)) (and ($generated@@148 $generated@@339 ($generated@@167 $generated@@338)) (> ($generated@@241 $generated@@339) 0))))) (and (= ($generated@@241 ($generated@@265 $generated@@338 $generated@@339)) (- ($generated@@241 $generated@@339) 1)) ($generated@@148 ($generated@@265 $generated@@338 $generated@@339) ($generated@@167 $generated@@338))))
 :pattern ( ($generated@@265 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 Int) ) (! (let (($generated@@342 ($generated@@138 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@135 $generated@@342)) (=> (and (< 0 $generated@@341) (<= $generated@@341 ($generated@@241 $generated@@340))) (< ($generated@@330 ($generated@@240 $generated@@340 $generated@@341)) ($generated@@330 $generated@@340)))))
 :pattern ( ($generated@@330 ($generated@@240 $generated@@340 $generated@@341)))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@136)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@64) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@313 ($generated@@343 $generated@@345) $generated@@346 $generated@@347) ($generated@@74 $generated@@345 $generated@@346 $generated@@347)))
 :pattern ( ($generated@@313 ($generated@@343 $generated@@345) $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 Int) ($generated@@350 Int) ) (! (let (($generated@@351 ($generated@@138 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@135 $generated@@351)) (=> (and (and (<= 0 $generated@@349) (<= 0 $generated@@350)) (< $generated@@350 (- ($generated@@241 $generated@@348) $generated@@349))) (= ($generated@@257 ($generated@@240 $generated@@348 $generated@@349) $generated@@350) ($generated@@257 $generated@@348 (+ $generated@@350 $generated@@349))))))
 :weight 25
 :pattern ( ($generated@@257 ($generated@@240 $generated@@348 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ) (! (= (type ($generated@@353 $generated@@354)) ($generated@@76 $generated@@354 $generated@@2))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@79 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@76 $generated@@356 $generated@@2)) (and (= (= ($generated@@352 $generated@@355) 0) (= $generated@@355 ($generated@@353 $generated@@356))) (=> (not (= ($generated@@352 $generated@@355) 0)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) (< 0 ($generated ($generated@@81 $generated@@355 $generated@@357))))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 19)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@76 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@81 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@81 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert  (and (and (and (and (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (= ($generated@@1 ($generated@@378 $generated@@381 $generated@@382)) 20)) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= ($generated@@379 ($generated@@378 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@378 $generated@@383 $generated@@384))
))) (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (! (= ($generated@@380 ($generated@@378 $generated@@385 $generated@@386)) $generated@@386)
 :pattern ( ($generated@@378 $generated@@385 $generated@@386))
))) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@379 (type $generated@@387))))
(= (type ($generated@@376 $generated@@387)) ($generated@@76 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@387))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= (type ($generated@@377 $generated@@389 $generated@@390)) ($generated@@378 $generated@@389 $generated@@390))
 :pattern ( ($generated@@377 $generated@@389 $generated@@390))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@T) ) (! (let (($generated@@393 (type $generated@@391)))
 (not ($generated@@0 ($generated@@81 ($generated@@376 ($generated@@377 $generated@@393 $generated@@392)) $generated@@391))))
 :pattern ( (let (($generated@@393 (type $generated@@391)))
($generated@@81 ($generated@@376 ($generated@@377 $generated@@393 $generated@@392)) $generated@@391)))
)))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@394) $generated@@64) (= (type $generated@@395) ($generated@@135 $generated@@136))) (or ($generated@@256 $generated@@394 ($generated@@284 $generated@@395)) (and (not (= 0 $generated@@165)) (and ($generated@@148 $generated@@395 ($generated@@167 $generated@@394)) (> ($generated@@241 ($generated@@284 $generated@@395)) 0))))) (= ($generated@@255 $generated@@394 ($generated@@284 $generated@@395)) ($generated@@257 ($generated@@284 $generated@@395) (- ($generated@@241 ($generated@@284 $generated@@395)) 1))))
 :weight 3
 :pattern ( ($generated@@255 $generated@@394 ($generated@@284 $generated@@395)))
))))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@396) $generated@@64) (= (type $generated@@397) ($generated@@135 $generated@@136))) (or ($generated@@266 $generated@@396 ($generated@@284 $generated@@397)) (and (not (= 0 $generated@@165)) (and ($generated@@148 $generated@@397 ($generated@@167 $generated@@396)) (> ($generated@@241 ($generated@@284 $generated@@397)) 0))))) (= ($generated@@265 $generated@@396 ($generated@@284 $generated@@397)) ($generated@@238 ($generated@@284 $generated@@397) (- ($generated@@241 ($generated@@284 $generated@@397)) 1))))
 :weight 3
 :pattern ( ($generated@@265 $generated@@396 ($generated@@284 $generated@@397)))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@138 (type $generated@@398))))
 (=> (and (= (type $generated@@398) ($generated@@135 $generated@@400)) (= (type $generated@@399) ($generated@@135 $generated@@400))) (= ($generated@@241 ($generated@@239 $generated@@398 $generated@@399)) (+ ($generated@@241 $generated@@398) ($generated@@241 $generated@@399)))))
 :pattern ( ($generated@@241 ($generated@@239 $generated@@398 $generated@@399)))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@79 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@76 $generated@@402 $generated@@2)) (= ($generated@@178 $generated@@401) (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@402) (and (<= 0 ($generated ($generated@@81 $generated@@401 $generated@@403))) (<= ($generated ($generated@@81 $generated@@401 $generated@@403)) ($generated@@352 $generated@@401))))
 :pattern ( ($generated@@81 $generated@@401 $generated@@403))
)))))
 :pattern ( ($generated@@178 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@362 (type $generated@@404))))
(let (($generated@@406 ($generated@@361 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@360 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@359 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@358 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@362 (type $generated@@409))))
(= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@362 (type $generated@@411))))
(let (($generated@@413 ($generated@@361 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@360 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@359 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@412) ($generated@@0 ($generated@@81 ($generated@@408 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@408 $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@380 (type $generated@@415))))
(let (($generated@@417 ($generated@@379 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@378 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@377 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@376 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@380 (type $generated@@420))))
(= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@421 $generated@@4)))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@380 (type $generated@@422))))
(let (($generated@@424 ($generated@@379 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@378 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@377 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@423) ($generated@@0 ($generated@@81 ($generated@@419 $generated@@422) $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@419 $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@427) $generated@@64)) (= ($generated@@148 $generated@@426 ($generated@@177 $generated@@427)) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@426 $generated@@428)))) ($generated@@272 $generated@@428 $generated@@427))
 :pattern ( ($generated@@81 $generated@@426 $generated@@428))
))))
 :pattern ( ($generated@@148 $generated@@426 ($generated@@177 $generated@@427)))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@430) $generated@@64)) (= (type $generated@@431) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@429 ($generated@@296 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@136) ($generated@@0 ($generated@@81 $generated@@429 $generated@@432))) ($generated@@313 $generated@@432 $generated@@430 $generated@@431))
 :pattern ( ($generated@@81 $generated@@429 $generated@@432))
))))
 :pattern ( ($generated@@74 $generated@@429 ($generated@@296 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (= (type $generated@@433) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@434) $generated@@64)) (= (type $generated@@435) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@433 ($generated@@301 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@136) ($generated@@0 ($generated@@81 $generated@@433 $generated@@436))) ($generated@@313 $generated@@436 $generated@@434 $generated@@435))
 :pattern ( ($generated@@81 $generated@@433 $generated@@436))
))))
 :pattern ( ($generated@@74 $generated@@433 ($generated@@301 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(= ($generated ($generated@@81 ($generated@@353 $generated@@438) $generated@@437)) 0))
 :pattern ( (let (($generated@@438 (type $generated@@437)))
($generated@@81 ($generated@@353 $generated@@438) $generated@@437)))
)))
(assert  (and (forall (($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@441)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@439 $generated@@441))
)) (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@362 (type $generated@@442))))
(let (($generated@@444 ($generated@@361 (type $generated@@442))))
(= (type ($generated@@440 $generated@@442)) ($generated@@76 $generated@@444 $generated@@443))))
 :pattern ( ($generated@@440 $generated@@442))
))))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@360 $generated@@136 $generated@@136)) (= (type $generated@@446) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@439 $generated@@445) $generated@@446))  (and ($generated@@0 ($generated@@81 ($generated@@358 $generated@@445) ($generated@@159 ($generated@@287 $generated@@152 $generated@@446)))) (= ($generated@@81 ($generated@@440 $generated@@445) ($generated@@159 ($generated@@287 $generated@@152 $generated@@446))) ($generated@@160 ($generated@@287 $generated@@152 $generated@@446))))))
 :pattern ( ($generated@@81 ($generated@@439 $generated@@445) $generated@@446))
)))
(assert  (and (forall (($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@449)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@447 $generated@@449))
)) (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@380 (type $generated@@450))))
(let (($generated@@452 ($generated@@379 (type $generated@@450))))
(= (type ($generated@@448 $generated@@450)) ($generated@@76 $generated@@452 $generated@@451))))
 :pattern ( ($generated@@448 $generated@@450))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) ($generated@@378 $generated@@136 $generated@@136)) (= (type $generated@@454) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@447 $generated@@453) $generated@@454))  (and ($generated@@0 ($generated@@81 ($generated@@376 $generated@@453) ($generated@@159 ($generated@@287 $generated@@152 $generated@@454)))) (= ($generated@@81 ($generated@@448 $generated@@453) ($generated@@159 ($generated@@287 $generated@@152 $generated@@454))) ($generated@@160 ($generated@@287 $generated@@152 $generated@@454))))))
 :pattern ( ($generated@@81 ($generated@@447 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@456)))
(let (($generated@@458 ($generated@@361 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@360 $generated@@458 $generated@@457)) (= ($generated@@0 ($generated@@81 ($generated@@408 $generated@@455) $generated@@456)) (exists (($generated@@459 T@U) ) (!  (and (= (type $generated@@459) $generated@@458) (and ($generated@@0 ($generated@@81 ($generated@@358 $generated@@455) $generated@@459)) (= $generated@@456 ($generated@@81 ($generated@@440 $generated@@455) $generated@@459))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@455) $generated@@459))
 :pattern ( ($generated@@81 ($generated@@440 $generated@@455) $generated@@459))
))))))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
(let (($generated@@463 ($generated@@379 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@378 $generated@@463 $generated@@462)) (= ($generated@@0 ($generated@@81 ($generated@@419 $generated@@460) $generated@@461)) (exists (($generated@@464 T@U) ) (!  (and (= (type $generated@@464) $generated@@463) (and ($generated@@0 ($generated@@81 ($generated@@376 $generated@@460) $generated@@464)) (= $generated@@461 ($generated@@81 ($generated@@448 $generated@@460) $generated@@464))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@460) $generated@@464))
 :pattern ( ($generated@@81 ($generated@@448 $generated@@460) $generated@@464))
))))))
 :pattern ( ($generated@@81 ($generated@@419 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (= (type $generated@@468) ($generated@@360 $generated@@136 $generated@@136)) (= (type $generated@@469) $generated@@64)) (= (type $generated@@470) $generated@@64)) (= (type $generated@@471) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@468) $generated@@472))) (and ($generated@@313 ($generated@@81 ($generated@@440 $generated@@468) $generated@@472) $generated@@470 $generated@@471) ($generated@@313 $generated@@472 $generated@@469 $generated@@471)))
 :pattern ( ($generated@@81 ($generated@@440 $generated@@468) $generated@@472))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@468) $generated@@472))
))))
 :pattern ( ($generated@@74 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (and (= (type $generated@@476) ($generated@@378 $generated@@136 $generated@@136)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) $generated@@64)) (= (type $generated@@479) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479) (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@476) $generated@@480))) (and ($generated@@313 ($generated@@81 ($generated@@448 $generated@@476) $generated@@480) $generated@@478 $generated@@479) ($generated@@313 $generated@@480 $generated@@477 $generated@@479)))
 :pattern ( ($generated@@81 ($generated@@448 $generated@@476) $generated@@480))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@476) $generated@@480))
))))
 :pattern ( ($generated@@74 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@138 (type $generated@@481))))
 (=> (and (and (= (type $generated@@481) ($generated@@135 $generated@@483)) (= (type $generated@@482) ($generated@@135 $generated@@483))) ($generated@@325 $generated@@481 $generated@@482)) (= $generated@@481 $generated@@482)))
 :pattern ( ($generated@@325 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@138 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@135 $generated@@486)) (=> (and (<= 0 $generated@@485) (<= $generated@@485 ($generated@@241 $generated@@484))) (= ($generated@@241 ($generated@@238 $generated@@484 $generated@@485)) $generated@@485))))
 :pattern ( ($generated@@241 ($generated@@238 $generated@@484 $generated@@485)))
)))
(assert (forall (($generated@@488 T@T) ) (! (= (type ($generated@@487 $generated@@488)) ($generated@@76 $generated@@488 $generated@@4))
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@380 (type $generated@@489))))
(let (($generated@@491 ($generated@@379 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@378 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@377 $generated@@491 $generated@@490)) (= ($generated@@376 $generated@@489) ($generated@@487 $generated@@491))))))
 :pattern ( ($generated@@376 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@380 (type $generated@@492))))
(let (($generated@@494 ($generated@@379 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@378 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@377 $generated@@494 $generated@@493)) (= ($generated@@419 $generated@@492) ($generated@@487 $generated@@493))))))
 :pattern ( ($generated@@419 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@380 (type $generated@@495))))
(let (($generated@@497 ($generated@@379 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@378 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@377 $generated@@497 $generated@@496)) (= ($generated@@447 $generated@@495) ($generated@@487 $generated@@136))))))
 :pattern ( ($generated@@447 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@362 (type $generated@@498))))
(let (($generated@@500 ($generated@@361 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@360 $generated@@500 $generated@@499)) (or (= $generated@@498 ($generated@@359 $generated@@500 $generated@@499)) (exists (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (and (and (= (type $generated@@501) $generated@@136) (= (type $generated@@502) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@439 $generated@@498) ($generated@@343 ($generated@@271 $generated@@501 $generated@@502)))))
 :no-pattern (type $generated@@501)
 :no-pattern (type $generated@@502)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
))))))
 :pattern ( ($generated@@439 $generated@@498))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@380 (type $generated@@503))))
(let (($generated@@505 ($generated@@379 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@378 $generated@@505 $generated@@504)) (or (= $generated@@503 ($generated@@377 $generated@@505 $generated@@504)) (exists (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (and (and (= (type $generated@@506) $generated@@136) (= (type $generated@@507) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@447 $generated@@503) ($generated@@343 ($generated@@271 $generated@@506 $generated@@507)))))
 :no-pattern (type $generated@@506)
 :no-pattern (type $generated@@507)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
))))))
 :pattern ( ($generated@@447 $generated@@503))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@136) ($generated@@272 $generated@@508 $generated@@46)) (and (= ($generated@@343 ($generated@@287 $generated@@2 $generated@@508)) $generated@@508) ($generated@@148 ($generated@@287 $generated@@2 $generated@@508) $generated@@46)))
 :pattern ( ($generated@@272 $generated@@508 $generated@@46))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@136) ($generated@@272 $generated@@509 $generated@@47)) (and (= ($generated@@343 ($generated@@287 $generated@@3 $generated@@509)) $generated@@509) ($generated@@148 ($generated@@287 $generated@@3 $generated@@509) $generated@@47)))
 :pattern ( ($generated@@272 $generated@@509 $generated@@47))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@136) ($generated@@272 $generated@@510 $generated@@44)) (and (= ($generated@@343 ($generated@@287 $generated@@4 $generated@@510)) $generated@@510) ($generated@@148 ($generated@@287 $generated@@4 $generated@@510) $generated@@44)))
 :pattern ( ($generated@@272 $generated@@510 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@511) 21))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@136) ($generated@@272 $generated@@512 $generated@@45)) (and (= ($generated@@343 ($generated@@287 $generated@@511 $generated@@512)) $generated@@512) ($generated@@148 ($generated@@287 $generated@@511 $generated@@512) $generated@@45)))
 :pattern ( ($generated@@272 $generated@@512 $generated@@45))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@272 ($generated@@343 $generated@@513) $generated@@514) ($generated@@148 $generated@@513 $generated@@514)))
 :pattern ( ($generated@@272 ($generated@@343 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@79 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@76 $generated@@516 $generated@@2)) (<= 0 ($generated@@352 $generated@@515))))
 :pattern ( ($generated@@352 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@138 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@135 $generated@@518)) (<= 0 ($generated@@241 $generated@@517))))
 :pattern ( ($generated@@241 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 Int) ($generated@@521 Int) ) (! (let (($generated@@522 ($generated@@138 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@135 $generated@@522)) (=> (and (and (<= 0 $generated@@520) (< $generated@@520 $generated@@521)) (<= $generated@@521 ($generated@@241 $generated@@519))) (< ($generated@@330 ($generated@@239 ($generated@@238 $generated@@519 $generated@@520) ($generated@@240 $generated@@519 $generated@@521))) ($generated@@330 $generated@@519)))))
 :pattern ( ($generated@@330 ($generated@@239 ($generated@@238 $generated@@519 $generated@@520) ($generated@@240 $generated@@519 $generated@@521))))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= ($generated@@523 ($generated@@465 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@465 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= ($generated@@527 ($generated@@465 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@465 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (= ($generated@@72 ($generated@@465 $generated@@531 $generated@@532)) $generated@@58))
 :pattern ( ($generated@@465 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@64)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= ($generated@@533 ($generated@@473 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@473 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@64)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@64) (= (type $generated@@540) $generated@@64)) (= ($generated@@537 ($generated@@473 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@473 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (= ($generated@@72 ($generated@@473 $generated@@541 $generated@@542)) $generated@@59))
 :pattern ( ($generated@@473 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@136) (= (type $generated@@544) $generated@@136)) (= ($generated@@322 ($generated@@271 $generated@@543 $generated@@544)) $generated@@61))
 :pattern ( ($generated@@271 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@64)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (= ($generated@@545 ($generated@@151 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@151 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@64)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@64) (= (type $generated@@552) $generated@@64)) (= ($generated@@549 ($generated@@151 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@151 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@136) (= (type $generated@@554) $generated@@136)) (= ($generated@@159 ($generated@@271 $generated@@553 $generated@@554)) $generated@@553))
 :pattern ( ($generated@@271 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@136) (= (type $generated@@556) $generated@@136)) (= ($generated@@160 ($generated@@271 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@271 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@135 $generated@@136)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559) (forall (($generated@@560 Int) ) (!  (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@241 $generated@@557))) ($generated@@313 ($generated@@257 $generated@@557 $generated@@560) $generated@@558 $generated@@559))
 :pattern ( ($generated@@257 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@561 ($generated@@75 $generated@@562)) $generated@@562)
 :pattern ( ($generated@@75 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@64)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@64) (= ($generated@@563 ($generated@@296 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@296 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@64) (= ($generated@@72 ($generated@@296 $generated@@566)) $generated@@54))
 :pattern ( ($generated@@296 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@64)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@64) (= ($generated@@567 ($generated@@301 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@301 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@72 ($generated@@301 $generated@@570)) $generated@@55))
 :pattern ( ($generated@@301 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@64)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@64) (= ($generated@@571 ($generated@@177 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@177 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@72 ($generated@@177 $generated@@574)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@64)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@64) (= ($generated@@575 ($generated@@167 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@167 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@578)) $generated@@57))
 :pattern ( ($generated@@167 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
(= ($generated@@287 $generated@@580 ($generated@@343 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@343 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@360 $generated@@136 $generated@@136)) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) (= ($generated@@148 $generated@@581 ($generated@@465 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@581) $generated@@584))) (and ($generated@@272 ($generated@@81 ($generated@@440 $generated@@581) $generated@@584) $generated@@583) ($generated@@272 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@81 ($generated@@440 $generated@@581) $generated@@584))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@148 $generated@@581 ($generated@@465 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@378 $generated@@136 $generated@@136)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) (= ($generated@@148 $generated@@585 ($generated@@473 $generated@@586 $generated@@587)) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@585) $generated@@588))) (and ($generated@@272 ($generated@@81 ($generated@@448 $generated@@585) $generated@@588) $generated@@587) ($generated@@272 $generated@@588 $generated@@586)))
 :pattern ( ($generated@@81 ($generated@@448 $generated@@585) $generated@@588))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@585) $generated@@588))
))))
 :pattern ( ($generated@@148 $generated@@585 ($generated@@473 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@136) (= (type $generated@@592) $generated@@136)) (< ($generated@@589 $generated@@591) ($generated@@590 ($generated@@271 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@271 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@136) (= (type $generated@@594) $generated@@136)) (< ($generated@@589 $generated@@594) ($generated@@590 ($generated@@271 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@271 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@136) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@272 $generated@@595 ($generated@@465 $generated@@596 $generated@@597))) (and (= ($generated@@343 ($generated@@287 ($generated@@360 $generated@@136 $generated@@136) $generated@@595)) $generated@@595) ($generated@@148 ($generated@@287 ($generated@@360 $generated@@136 $generated@@136) $generated@@595) ($generated@@465 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@272 $generated@@595 ($generated@@465 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@136) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@272 $generated@@598 ($generated@@473 $generated@@599 $generated@@600))) (and (= ($generated@@343 ($generated@@287 ($generated@@378 $generated@@136 $generated@@136) $generated@@598)) $generated@@598) ($generated@@148 ($generated@@287 ($generated@@378 $generated@@136 $generated@@136) $generated@@598) ($generated@@473 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@272 $generated@@598 ($generated@@473 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@64) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@136)) ($generated@@272 $generated@@603 ($generated@@151 $generated@@601 $generated@@602))) (and (= ($generated@@343 ($generated@@287 $generated@@152 $generated@@603)) $generated@@603) ($generated@@148 ($generated@@287 $generated@@152 $generated@@603) ($generated@@151 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@272 $generated@@603 ($generated@@151 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@604)))
 (not ($generated@@0 ($generated@@81 ($generated@@487 $generated@@605) $generated@@604))))
 :pattern ( (let (($generated@@605 (type $generated@@604)))
($generated@@81 ($generated@@487 $generated@@605) $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@69)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@64) (= (type $generated@@609) $generated@@64)) (and (= ($generated@@72 ($generated@@151 $generated@@608 $generated@@609)) $generated@@62) (= ($generated@@606 ($generated@@151 $generated@@608 $generated@@609)) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@152) (= ($generated@@589 ($generated@@343 $generated@@610)) ($generated@@590 $generated@@610)))
 :pattern ( ($generated@@589 ($generated@@343 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@136) ($generated@@272 $generated@@611 ($generated@@75 0))) (and (= ($generated@@343 ($generated@@287 $generated@@2 $generated@@611)) $generated@@611) ($generated@@148 ($generated@@287 ($generated@@76 $generated@@136 $generated@@4) $generated@@611) ($generated@@75 0))))
 :pattern ( ($generated@@272 $generated@@611 ($generated@@75 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@136) (= (type $generated@@613) $generated@@64)) ($generated@@272 $generated@@612 ($generated@@296 $generated@@613))) (and (= ($generated@@343 ($generated@@287 ($generated@@76 $generated@@136 $generated@@4) $generated@@612)) $generated@@612) ($generated@@148 ($generated@@287 ($generated@@76 $generated@@136 $generated@@4) $generated@@612) ($generated@@296 $generated@@613))))
 :pattern ( ($generated@@272 $generated@@612 ($generated@@296 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@136) (= (type $generated@@615) $generated@@64)) ($generated@@272 $generated@@614 ($generated@@301 $generated@@615))) (and (= ($generated@@343 ($generated@@287 ($generated@@76 $generated@@136 $generated@@4) $generated@@614)) $generated@@614) ($generated@@148 ($generated@@287 ($generated@@76 $generated@@136 $generated@@4) $generated@@614) ($generated@@301 $generated@@615))))
 :pattern ( ($generated@@272 $generated@@614 ($generated@@301 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@136) (= (type $generated@@617) $generated@@64)) ($generated@@272 $generated@@616 ($generated@@177 $generated@@617))) (and (= ($generated@@343 ($generated@@287 ($generated@@76 $generated@@136 $generated@@2) $generated@@616)) $generated@@616) ($generated@@148 ($generated@@287 ($generated@@76 $generated@@136 $generated@@2) $generated@@616) ($generated@@177 $generated@@617))))
 :pattern ( ($generated@@272 $generated@@616 ($generated@@177 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@136) (= (type $generated@@619) $generated@@64)) ($generated@@272 $generated@@618 ($generated@@167 $generated@@619))) (and (= ($generated@@343 ($generated@@287 ($generated@@135 $generated@@136) $generated@@618)) $generated@@618) ($generated@@148 ($generated@@287 ($generated@@135 $generated@@136) $generated@@618) ($generated@@167 $generated@@619))))
 :pattern ( ($generated@@272 $generated@@618 ($generated@@167 $generated@@619)))
)))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@64) (= (type $generated@@621) ($generated@@135 $generated@@136))) (or ($generated@@256 $generated@@620 $generated@@621) (and (not (= 0 $generated@@165)) (and ($generated@@148 $generated@@621 ($generated@@167 $generated@@620)) (> ($generated@@241 $generated@@621) 0))))) ($generated@@272 ($generated@@255 $generated@@620 $generated@@621) $generated@@620))
 :pattern ( ($generated@@255 $generated@@620 $generated@@621))
))))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ($generated@@624 Int) ) (! (let (($generated@@625 ($generated@@138 (type $generated@@622))))
 (=> (= (type $generated@@622) ($generated@@135 $generated@@625)) (=> (and (and (<= 0 $generated@@623) (<= $generated@@623 $generated@@624)) (< $generated@@624 ($generated@@241 $generated@@622))) (= ($generated@@257 ($generated@@240 $generated@@622 $generated@@623) (- $generated@@624 $generated@@623)) ($generated@@257 $generated@@622 $generated@@624)))))
 :weight 25
 :pattern ( ($generated@@257 $generated@@622 $generated@@624) ($generated@@240 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@627) $generated@@64)) (= (type $generated@@628) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@626 ($generated@@177 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@626 $generated@@629)))) ($generated@@313 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@81 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@74 $generated@@626 ($generated@@177 $generated@@627) $generated@@628))
)))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@64) (= (type $generated@@631) $generated@@134)) (= (type $generated@@632) ($generated@@135 $generated@@136))) (or ($generated@@166 $generated@@630 $generated@@632) (and (not (= 0 $generated@@165)) ($generated@@148 $generated@@632 ($generated@@167 ($generated@@167 $generated@@630)))))) (and (=> (not (= ($generated@@241 $generated@@632) ($generated@@285 0))) ($generated@@166 $generated@@630 ($generated@@240 $generated@@632 ($generated@@285 1)))) (= ($generated@@132 $generated@@630 ($generated@@172 $generated@@631) $generated@@632) (ite (= ($generated@@241 $generated@@632) ($generated@@285 0)) ($generated@@286 $generated@@136) ($generated@@239 ($generated@@287 ($generated@@135 $generated@@136) ($generated@@257 $generated@@632 ($generated@@285 0))) ($generated@@132 $generated@@630 $generated@@631 ($generated@@240 $generated@@632 ($generated@@285 1))))))))
 :pattern ( ($generated@@132 $generated@@630 ($generated@@172 $generated@@631) $generated@@632))
))))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ($generated@@635 Int) ) (! (let (($generated@@636 ($generated@@138 (type $generated@@633))))
 (=> (= (type $generated@@633) ($generated@@135 $generated@@636)) (=> (and (and (<= 0 $generated@@634) (<= 0 $generated@@635)) (<= (+ $generated@@634 $generated@@635) ($generated@@241 $generated@@633))) (= ($generated@@240 ($generated@@240 $generated@@633 $generated@@634) $generated@@635) ($generated@@240 $generated@@633 (+ $generated@@634 $generated@@635))))))
 :pattern ( ($generated@@240 ($generated@@240 $generated@@633 $generated@@634) $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@152) (= (type $generated@@638) $generated@@64)) (= (type $generated@@639) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@312 $generated@@639) (and ($generated@@150 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@64) ($generated@@74 $generated@@637 ($generated@@151 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@74 $generated@@637 ($generated@@151 $generated@@638 $generated@@640) $generated@@639))
))))) ($generated@@313 ($generated@@159 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@313 ($generated@@159 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@152) (= (type $generated@@642) $generated@@64)) (= (type $generated@@643) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@312 $generated@@643) (and ($generated@@150 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@64) ($generated@@74 $generated@@641 ($generated@@151 $generated@@644 $generated@@642) $generated@@643))
 :pattern ( ($generated@@74 $generated@@641 ($generated@@151 $generated@@644 $generated@@642) $generated@@643))
))))) ($generated@@313 ($generated@@160 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@313 ($generated@@160 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 Int) ) (! (let (($generated@@648 ($generated@@138 (type $generated@@645))))
 (=> (and (= (type $generated@@645) ($generated@@135 $generated@@648)) (= (type $generated@@646) ($generated@@135 $generated@@648))) (and (=> (< $generated@@647 ($generated@@241 $generated@@645)) (= ($generated@@257 ($generated@@239 $generated@@645 $generated@@646) $generated@@647) ($generated@@257 $generated@@645 $generated@@647))) (=> (<= ($generated@@241 $generated@@645) $generated@@647) (= ($generated@@257 ($generated@@239 $generated@@645 $generated@@646) $generated@@647) ($generated@@257 $generated@@646 (- $generated@@647 ($generated@@241 $generated@@645))))))))
 :pattern ( ($generated@@257 ($generated@@239 $generated@@645 $generated@@646) $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@136) (= (type $generated@@650) $generated@@136)) (= ($generated@@271 ($generated@@284 $generated@@649) ($generated@@284 $generated@@650)) ($generated@@284 ($generated@@271 $generated@@649 $generated@@650))))
 :pattern ( ($generated@@271 ($generated@@284 $generated@@649) ($generated@@284 $generated@@650)))
)))
(assert (forall (($generated@@651 Int) ) (! (= ($generated@@343 ($generated@@8 ($generated@@285 $generated@@651))) ($generated@@284 ($generated@@343 ($generated@@8 $generated@@651))))
 :pattern ( ($generated@@343 ($generated@@8 ($generated@@285 $generated@@651))))
)))
(assert (forall (($generated@@652 T@U) ) (! (= ($generated@@343 ($generated@@284 $generated@@652)) ($generated@@284 ($generated@@343 $generated@@652)))
 :pattern ( ($generated@@343 ($generated@@284 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (! (let (($generated@@654 ($generated@@138 (type $generated@@653))))
 (=> (and (= (type $generated@@653) ($generated@@135 $generated@@654)) (= ($generated@@241 $generated@@653) 0)) (= $generated@@653 ($generated@@286 $generated@@654))))
 :pattern ( ($generated@@241 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ) (! (let (($generated@@657 ($generated@@138 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@135 $generated@@657)) (= $generated@@656 0)) (= ($generated@@238 $generated@@655 $generated@@656) ($generated@@286 $generated@@657))))
 :pattern ( ($generated@@238 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (! (let (($generated@@661 (type $generated@@659)))
 (=> (and (and (= (type $generated@@658) ($generated@@76 $generated@@661 $generated@@2)) (= (type $generated@@660) $generated@@2)) (<= 0 ($generated $generated@@660))) (= ($generated@@352 ($generated@@82 $generated@@658 $generated@@659 $generated@@660)) (+ (- ($generated@@352 $generated@@658) ($generated ($generated@@81 $generated@@658 $generated@@659))) ($generated $generated@@660)))))
 :pattern ( ($generated@@352 ($generated@@82 $generated@@658 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@663) $generated@@2)) ($generated@@74 $generated@@663 $generated@@46 $generated@@662))
 :pattern ( ($generated@@74 $generated@@663 $generated@@46 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@665) $generated@@3)) ($generated@@74 $generated@@665 $generated@@47 $generated@@664))
 :pattern ( ($generated@@74 $generated@@665 $generated@@47 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@667) $generated@@4)) ($generated@@74 $generated@@667 $generated@@44 $generated@@666))
 :pattern ( ($generated@@74 $generated@@667 $generated@@44 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@669) $generated@@511)) ($generated@@74 $generated@@669 $generated@@45 $generated@@668))
 :pattern ( ($generated@@74 $generated@@669 $generated@@45 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@671) $generated@@136)) ($generated@@74 $generated@@671 $generated@@48 $generated@@670))
 :pattern ( ($generated@@74 $generated@@671 $generated@@48 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@135 $generated@@136)) (= (type $generated@@673) $generated@@64)) (= ($generated@@148 $generated@@672 ($generated@@167 $generated@@673)) (forall (($generated@@674 Int) ) (!  (=> (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@241 $generated@@672))) ($generated@@272 ($generated@@257 $generated@@672 $generated@@674) $generated@@673))
 :pattern ( ($generated@@257 $generated@@672 $generated@@674))
))))
 :pattern ( ($generated@@148 $generated@@672 ($generated@@167 $generated@@673)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@241 $generated@@675))) (< ($generated@@590 ($generated@@287 $generated@@152 ($generated@@257 $generated@@675 $generated@@676))) ($generated@@330 $generated@@675))))
 :pattern ( ($generated@@590 ($generated@@287 $generated@@152 ($generated@@257 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@360 $generated@@136 $generated@@136)) (= (type $generated@@678) $generated@@64)) (= (type $generated@@679) $generated@@64)) ($generated@@148 $generated@@677 ($generated@@465 $generated@@678 $generated@@679))) (and (and ($generated@@148 ($generated@@358 $generated@@677) ($generated@@296 $generated@@678)) ($generated@@148 ($generated@@408 $generated@@677) ($generated@@296 $generated@@679))) ($generated@@148 ($generated@@439 $generated@@677) ($generated@@296 ($generated@@151 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@148 $generated@@677 ($generated@@465 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@378 $generated@@136 $generated@@136)) (= (type $generated@@681) $generated@@64)) (= (type $generated@@682) $generated@@64)) ($generated@@148 $generated@@680 ($generated@@473 $generated@@681 $generated@@682))) (and (and ($generated@@148 ($generated@@376 $generated@@680) ($generated@@301 $generated@@681)) ($generated@@148 ($generated@@419 $generated@@680) ($generated@@301 $generated@@682))) ($generated@@148 ($generated@@447 $generated@@680) ($generated@@301 ($generated@@151 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@148 $generated@@680 ($generated@@473 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@148 $generated@@683 $generated@@46))
 :pattern ( ($generated@@148 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@148 $generated@@684 $generated@@47))
 :pattern ( ($generated@@148 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@148 $generated@@685 $generated@@44))
 :pattern ( ($generated@@148 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@511) ($generated@@148 $generated@@686 $generated@@45))
 :pattern ( ($generated@@148 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@136) ($generated@@148 $generated@@687 $generated@@48))
 :pattern ( ($generated@@148 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 (T@U) Bool)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@688) ($generated@@184 $generated@@77 $generated@@4)) (= (type $generated@@689) $generated@@77)) (= (type $generated@@690) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@691) ($generated@@135 $generated@@136))) (= (type $generated@@692) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@694) $generated@@64)) (= (type $generated@@695) ($generated@@135 $generated@@136))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@696  (=> (and (and (and (= $generated@@688 ($generated@@183 $generated@@689 $generated@@690 $generated@@60 false)) (> ($generated@@241 $generated@@691) 0)) (and ($generated@@312 $generated@@692) ($generated@@693 $generated@@692))) (and (and (= $generated@@690 $generated@@692) ($generated@@74 $generated@@691 ($generated@@167 ($generated@@167 $generated@@694)) $generated@@692)) (and ($generated@@166 $generated@@694 $generated@@691) ($generated@@74 $generated@@691 ($generated@@167 ($generated@@167 $generated@@694)) $generated@@692)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> ($generated@@241 $generated@@691) 0)) (=> (> ($generated@@241 $generated@@691) 0) (=> (and ($generated@@266 ($generated@@167 $generated@@694) $generated@@691) (= $generated@@695 ($generated@@265 ($generated@@167 $generated@@694) $generated@@691))) (=> (and (and ($generated@@74 $generated@@695 ($generated@@167 ($generated@@167 $generated@@694)) $generated@@692) ($generated@@166 $generated@@694 ($generated@@265 ($generated@@167 $generated@@694) $generated@@691))) (and ($generated@@74 $generated@@691 ($generated@@167 ($generated@@167 $generated@@694)) $generated@@692) (= (ControlFlow 0 2) (- 0 1)))) (> ($generated@@241 $generated@@691) 0))))))))
(let (($generated@@697  (=> (and ($generated@@312 $generated@@690) ($generated@@693 $generated@@690)) (=> (and (and ($generated@@148 $generated@@691 ($generated@@167 ($generated@@167 $generated@@694))) ($generated@@74 $generated@@691 ($generated@@167 ($generated@@167 $generated@@694)) $generated@@690)) (and (= 1 $generated@@165) (= (ControlFlow 0 4) 2))) $generated@@696))))
$generated@@697)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U Int) T@U)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U) Int)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@200 (T@U T@U T@U) T@U)
(declare-fun $generated@@201 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@202 (T@T T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@256 (T@U Int) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U T@U) T@U)
(declare-fun $generated@@269 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U Int) T@U)
(declare-fun $generated@@278 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) Bool)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (Int) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@300 (T@T T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@328 (T@U) Bool)
(declare-fun $generated@@329 (T@U T@U T@U) Bool)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@341 (T@U T@U) Bool)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@371 (T@U) Int)
(declare-fun $generated@@372 (T@T) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@T) T@U)
(declare-fun $generated@@379 (T@T T@T) T@T)
(declare-fun $generated@@380 (T@T) T@T)
(declare-fun $generated@@381 (T@T) T@T)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@T T@T) T@U)
(declare-fun $generated@@397 (T@T T@T) T@T)
(declare-fun $generated@@398 (T@T) T@T)
(declare-fun $generated@@399 (T@T) T@T)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@489 (T@U T@U) T@U)
(declare-fun $generated@@497 (T@U T@U) T@U)
(declare-fun $generated@@511 (T@T) T@U)
(declare-fun $generated@@535 () T@T)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@613 (T@U) Int)
(declare-fun $generated@@614 (T@U) Int)
(declare-fun $generated@@630 (T@U) T@U)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@635 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@141 T@T) ) (= ($generated@@1 ($generated@@137 $generated@@141)) 15))) (forall (($generated@@142 T@T) ) (! (= ($generated@@140 ($generated@@137 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@137 $generated@@142))
))) (= ($generated@@1 $generated@@138) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@134 $generated@@143 $generated@@144 $generated@@145)) ($generated@@137 $generated@@138))
 :pattern ( ($generated@@134 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@135 $generated@@146)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@146))
))) (= (type $generated@@139) $generated@@136)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@147) $generated@@66) (= (type $generated@@148) $generated@@136)) (= (type $generated@@149) ($generated@@137 $generated@@138))) (= ($generated@@134 $generated@@147 $generated@@148 $generated@@149) ($generated@@134 $generated@@147 $generated@@139 $generated@@149)))
 :pattern ( ($generated@@134 $generated@@147 ($generated@@135 $generated@@148) $generated@@149))
)))
(assert (= (type $generated@@150) $generated@@66))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@151 $generated@@150 $generated@@152))
 :pattern ( ($generated@@76 $generated@@151 $generated@@150 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@153 $generated@@154 ($generated@@77 0)))
 :pattern ( ($generated@@153 $generated@@154 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 17) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@66)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@66) (= (type $generated@@161) $generated@@66)) (= (type $generated@@162) $generated@@157)) ($generated@@153 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@153 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@138)
 :pattern ( ($generated@@164 $generated@@166))
)) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@138)
 :pattern ( ($generated@@165 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@157) (= (type $generated@@169) $generated@@157)) true) (= ($generated@@163 $generated@@168 $generated@@169)  (and (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)) (= ($generated@@165 $generated@@168) ($generated@@165 $generated@@169)))))
 :pattern ( ($generated@@163 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@66)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@66) (= (type $generated@@175) $generated@@136)) (= (type $generated@@176) ($generated@@137 $generated@@138))) (or ($generated@@171 $generated@@174 $generated@@176) (and (not (= 0 $generated@@170)) ($generated@@153 $generated@@176 ($generated@@172 ($generated@@172 $generated@@174)))))) ($generated@@153 ($generated@@134 $generated@@174 $generated@@175 $generated@@176) ($generated@@172 $generated@@174)))
 :pattern ( ($generated@@134 $generated@@174 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@136)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@66) (= (type $generated@@180) $generated@@136)) (= (type $generated@@181) ($generated@@137 $generated@@138))) (= ($generated@@134 $generated@@179 ($generated@@177 $generated@@180) $generated@@181) ($generated@@134 $generated@@179 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@134 $generated@@179 ($generated@@177 $generated@@180) $generated@@181))
)))
(assert  (and (forall (($generated@@185 T@U) ($generated@@186 Int) ) (! (let (($generated@@187 ($generated@@140 (type $generated@@185))))
(= (type ($generated@@182 $generated@@185 $generated@@186)) ($generated@@137 $generated@@187)))
 :pattern ( ($generated@@182 $generated@@185 $generated@@186))
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(= (type ($generated@@183 $generated@@188 $generated@@189)) ($generated@@137 $generated@@190)))
 :pattern ( ($generated@@183 $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 Int) ) (! (let (($generated@@194 (type $generated@@192)))
 (=> (= (type $generated@@191) ($generated@@137 $generated@@194)) (=> (and (<= 0 $generated@@193) (<= $generated@@193 ($generated@@184 $generated@@191))) (= ($generated@@182 ($generated@@183 $generated@@191 $generated@@192) $generated@@193) ($generated@@183 ($generated@@182 $generated@@191 $generated@@193) $generated@@192)))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@191 $generated@@192) $generated@@193))
)))
(assert (forall (($generated@@197 T@U) ) (! (= (type ($generated@@195 $generated@@197)) $generated@@66)
 :pattern ( ($generated@@195 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) ($generated@@78 $generated@@138 $generated@@2)) (= (type $generated@@199) $generated@@66)) ($generated@@153 $generated@@198 ($generated@@195 $generated@@199))) ($generated@@196 $generated@@198))
 :pattern ( ($generated@@153 $generated@@198 ($generated@@195 $generated@@199)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@206 $generated@@207)) 18)) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@208 $generated@@209)) $generated@@208)
 :pattern ( ($generated@@202 $generated@@208 $generated@@209))
))) (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (! (= ($generated@@204 ($generated@@202 $generated@@210 $generated@@211)) $generated@@211)
 :pattern ( ($generated@@202 $generated@@210 $generated@@211))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@204 (type $generated@@212))))
(= (type ($generated@@200 $generated@@212 $generated@@213 $generated@@214)) $generated@@215))
 :pattern ( ($generated@@200 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 (type $generated@@219)))
(let (($generated@@221 (type $generated@@217)))
(= (type ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@202 $generated@@221 $generated@@220))))
 :pattern ( ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@204 (type $generated@@222))))
 (=> (= (type $generated@@225) $generated@@226) (= ($generated@@200 ($generated@@205 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@223 $generated@@224) $generated@@225)))
 :weight 0
))) (and (and (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@200 ($generated@@205 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@200 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@236 $generated@@238) (= ($generated@@200 ($generated@@205 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@200 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or true (= ($generated@@200 ($generated@@205 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@200 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
)))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ) (! (= (type ($generated@@201 $generated@@245 $generated@@246 $generated@@247 $generated@@248)) ($generated@@202 $generated@@79 $generated@@4))
 :pattern ( ($generated@@201 $generated@@245 $generated@@246 $generated@@247 $generated@@248))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Bool) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@69 (type $generated@@254))))
 (=> (and (and (and (and (= (type $generated@@249) $generated@@79) (= (type $generated@@250) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@251) ($generated@@68 $generated@@4))) (= (type $generated@@253) $generated@@79)) (= (type $generated@@254) ($generated@@68 $generated@@255))) (= ($generated@@0 ($generated@@200 ($generated@@201 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))  (=> (and (not (= $generated@@253 $generated@@249)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@250 $generated@@253) $generated@@251))) $generated@@252))))
 :pattern ( ($generated@@200 ($generated@@201 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))
)))
(assert  (and (forall (($generated@@258 T@U) ($generated@@259 Int) ) (! (let (($generated@@260 ($generated@@140 (type $generated@@258))))
(= (type ($generated@@256 $generated@@258 $generated@@259)) ($generated@@137 $generated@@260)))
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)) (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@140 (type $generated@@261))))
(= (type ($generated@@257 $generated@@261 $generated@@262)) ($generated@@137 $generated@@263)))
 :pattern ( ($generated@@257 $generated@@261 $generated@@262))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 Int) ) (! (let (($generated@@267 ($generated@@140 (type $generated@@264))))
 (=> (and (and (= (type $generated@@264) ($generated@@137 $generated@@267)) (= (type $generated@@265) ($generated@@137 $generated@@267))) (= $generated@@266 ($generated@@184 $generated@@264))) (and (= ($generated@@256 ($generated@@257 $generated@@264 $generated@@265) $generated@@266) $generated@@264) (= ($generated@@182 ($generated@@257 $generated@@264 $generated@@265) $generated@@266) $generated@@265))))
 :pattern ( ($generated@@256 ($generated@@257 $generated@@264 $generated@@265) $generated@@266))
 :pattern ( ($generated@@182 ($generated@@257 $generated@@264 $generated@@265) $generated@@266))
)))
(assert  (and (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (= (type ($generated@@268 $generated@@271 $generated@@272)) $generated@@138)
 :pattern ( ($generated@@268 $generated@@271 $generated@@272))
)) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (! (let (($generated@@275 ($generated@@140 (type $generated@@273))))
(= (type ($generated@@270 $generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@270 $generated@@273 $generated@@274))
))))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (= (type $generated@@276) $generated@@66) (= (type $generated@@277) ($generated@@137 $generated@@138))) (or ($generated@@269 $generated@@276 $generated@@277) (and (not (= 0 $generated@@170)) (and ($generated@@153 $generated@@277 ($generated@@172 $generated@@276)) (> ($generated@@184 $generated@@277) 0))))) (= ($generated@@268 $generated@@276 $generated@@277) ($generated@@270 $generated@@277 (- ($generated@@184 $generated@@277) 1))))
 :pattern ( ($generated@@268 $generated@@276 $generated@@277))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (= (type ($generated@@278 $generated@@280 $generated@@281)) ($generated@@137 $generated@@138))
 :pattern ( ($generated@@278 $generated@@280 $generated@@281))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@66) (= (type $generated@@283) ($generated@@137 $generated@@138))) (or ($generated@@279 $generated@@282 $generated@@283) (and (not (= 0 $generated@@170)) (and ($generated@@153 $generated@@283 ($generated@@172 $generated@@282)) (> ($generated@@184 $generated@@283) 0))))) (= ($generated@@278 $generated@@282 $generated@@283) ($generated@@256 $generated@@283 (- ($generated@@184 $generated@@283) 1))))
 :pattern ( ($generated@@278 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@284 $generated@@286 $generated@@287)) $generated@@157)
 :pattern ( ($generated@@284 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (= (type $generated@@288) $generated@@66) (= (type $generated@@289) $generated@@66)) (= (type $generated@@290) $generated@@138)) (= (type $generated@@291) $generated@@138)) (= ($generated@@153 ($generated@@284 $generated@@290 $generated@@291) ($generated@@156 $generated@@288 $generated@@289))  (and ($generated@@285 $generated@@290 $generated@@288) ($generated@@285 $generated@@291 $generated@@289))))
 :pattern ( ($generated@@153 ($generated@@284 $generated@@290 $generated@@291) ($generated@@156 $generated@@288 $generated@@289)))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@157) (= (type $generated@@293) $generated@@157)) (= ($generated@@163 $generated@@292 $generated@@293) (= $generated@@292 $generated@@293)))
 :pattern ( ($generated@@163 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 Int) ) (! (let (($generated@@296 ($generated@@140 (type $generated@@294))))
 (=> (and (= (type $generated@@294) ($generated@@137 $generated@@296)) (= $generated@@295 0)) (= ($generated@@182 $generated@@294 $generated@@295) $generated@@294)))
 :pattern ( ($generated@@182 $generated@@294 $generated@@295))
)))
(assert  (and (and (forall (($generated@@301 T@U) ) (! (let (($generated@@302 (type $generated@@301)))
(= (type ($generated@@297 $generated@@301)) $generated@@302))
 :pattern ( ($generated@@297 $generated@@301))
)) (forall (($generated@@303 T@T) ) (! (= (type ($generated@@299 $generated@@303)) ($generated@@137 $generated@@303))
 :pattern ( ($generated@@299 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@U) ) (! (= (type ($generated@@300 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@300 $generated@@304 $generated@@305))
))))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (= (type $generated@@306) $generated@@66) (= (type $generated@@307) $generated@@136)) (= (type $generated@@308) ($generated@@137 $generated@@138))) (or ($generated@@171 $generated@@306 ($generated@@297 $generated@@308)) (and (not (= 0 $generated@@170)) ($generated@@153 $generated@@308 ($generated@@172 ($generated@@172 $generated@@306)))))) (and (=> (not (= ($generated@@184 ($generated@@297 $generated@@308)) ($generated@@298 0))) ($generated@@171 $generated@@306 ($generated@@297 ($generated@@182 ($generated@@297 $generated@@308) ($generated@@298 1))))) (= ($generated@@134 $generated@@306 ($generated@@177 $generated@@307) ($generated@@297 $generated@@308)) (ite (= ($generated@@184 ($generated@@297 $generated@@308)) ($generated@@298 0)) ($generated@@299 $generated@@138) ($generated@@257 ($generated@@300 ($generated@@137 $generated@@138) ($generated@@270 ($generated@@297 $generated@@308) ($generated@@298 0))) ($generated@@134 $generated@@306 ($generated@@177 $generated@@307) ($generated@@297 ($generated@@182 ($generated@@297 $generated@@308) ($generated@@298 1)))))))))
 :weight 3
 :pattern ( ($generated@@134 $generated@@306 ($generated@@177 $generated@@307) ($generated@@297 $generated@@308)))
))))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@66)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) ($generated@@78 $generated@@138 $generated@@4)) (= (type $generated@@312) $generated@@66)) (= ($generated@@153 $generated@@311 ($generated@@309 $generated@@312)) (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@138) ($generated@@0 ($generated@@83 $generated@@311 $generated@@313))) ($generated@@285 $generated@@313 $generated@@312))
 :pattern ( ($generated@@83 $generated@@311 $generated@@313))
))))
 :pattern ( ($generated@@153 $generated@@311 ($generated@@309 $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@66)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) ($generated@@78 $generated@@138 $generated@@4)) (= (type $generated@@317) $generated@@66)) (= ($generated@@153 $generated@@316 ($generated@@314 $generated@@317)) (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@138) ($generated@@0 ($generated@@83 $generated@@316 $generated@@318))) ($generated@@285 $generated@@318 $generated@@317))
 :pattern ( ($generated@@83 $generated@@316 $generated@@318))
))))
 :pattern ( ($generated@@153 $generated@@316 ($generated@@314 $generated@@317)))
)))
(assert (forall (($generated@@319 Int) ) (! (= ($generated@@298 $generated@@319) $generated@@319)
 :pattern ( ($generated@@298 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (! (= ($generated@@297 $generated@@320) $generated@@320)
 :pattern ( ($generated@@297 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (= (type $generated@@321) ($generated@@137 $generated@@138)) (= (type $generated@@322) $generated@@138)) (= (type $generated@@323) $generated@@66)) (and ($generated@@153 $generated@@321 ($generated@@172 $generated@@323)) ($generated@@285 $generated@@322 $generated@@323))) ($generated@@153 ($generated@@183 $generated@@321 $generated@@322) ($generated@@172 $generated@@323)))
 :pattern ( ($generated@@153 ($generated@@183 $generated@@321 $generated@@322) ($generated@@172 $generated@@323)))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 Int) ($generated@@326 Int) ) (! (let (($generated@@327 ($generated@@140 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@137 $generated@@327)) (=> (and (and (<= 0 $generated@@326) (< $generated@@326 $generated@@325)) (< $generated@@326 ($generated@@184 $generated@@324))) (= ($generated@@270 ($generated@@256 $generated@@324 $generated@@325) $generated@@326) ($generated@@270 $generated@@324 $generated@@326)))))
 :weight 25
 :pattern ( ($generated@@270 ($generated@@256 $generated@@324 $generated@@325) $generated@@326))
 :pattern ( ($generated@@270 $generated@@324 $generated@@326) ($generated@@256 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@330) $generated@@66) (= (type $generated@@331) $generated@@66)) (= (type $generated@@332) $generated@@138)) (= (type $generated@@333) $generated@@138)) (= (type $generated@@334) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@328 $generated@@334)) (= ($generated@@76 ($generated@@284 $generated@@332 $generated@@333) ($generated@@156 $generated@@330 $generated@@331) $generated@@334)  (and ($generated@@329 $generated@@332 $generated@@330 $generated@@334) ($generated@@329 $generated@@333 $generated@@331 $generated@@334))))
 :pattern ( ($generated@@76 ($generated@@284 $generated@@332 $generated@@333) ($generated@@156 $generated@@330 $generated@@331) $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 Int) ) (! (let (($generated@@337 ($generated@@140 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@137 $generated@@337)) (=> (and (<= 0 $generated@@336) (<= $generated@@336 ($generated@@184 $generated@@335))) (= ($generated@@184 ($generated@@182 $generated@@335 $generated@@336)) (- ($generated@@184 $generated@@335) $generated@@336)))))
 :pattern ( ($generated@@184 ($generated@@182 $generated@@335 $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@70)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@157) (= ($generated@@155 $generated@@340) (= ($generated@@338 $generated@@340) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@140 (type $generated@@342))))
 (=> (and (= (type $generated@@342) ($generated@@137 $generated@@344)) (= (type $generated@@343) ($generated@@137 $generated@@344))) (= ($generated@@341 $generated@@342 $generated@@343)  (and (= ($generated@@184 $generated@@342) ($generated@@184 $generated@@343)) (forall (($generated@@345 Int) ) (!  (=> (and (<= 0 $generated@@345) (< $generated@@345 ($generated@@184 $generated@@342))) (= ($generated@@270 $generated@@342 $generated@@345) ($generated@@270 $generated@@343 $generated@@345)))
 :pattern ( ($generated@@270 $generated@@342 $generated@@345))
 :pattern ( ($generated@@270 $generated@@343 $generated@@345))
))))))
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 Int) ) (! (let (($generated@@349 ($generated@@140 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@137 $generated@@349)) (=> (and (<= 0 $generated@@348) (< $generated@@348 ($generated@@184 $generated@@347))) (< ($generated@@346 ($generated@@256 $generated@@347 $generated@@348)) ($generated@@346 $generated@@347)))))
 :pattern ( ($generated@@346 ($generated@@256 $generated@@347 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@157) ($generated@@155 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@138) (= (type $generated@@352) $generated@@138)) (= $generated@@350 ($generated@@284 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@155 $generated@@350))
)))
(assert (forall (($generated@@353 T@T) ) (! (= ($generated@@184 ($generated@@299 $generated@@353)) 0)
 :pattern ( ($generated@@299 $generated@@353))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@354) $generated@@66) (= (type $generated@@355) ($generated@@137 $generated@@138))) (or ($generated@@279 $generated@@354 $generated@@355) (and (not (= 0 $generated@@170)) (and ($generated@@153 $generated@@355 ($generated@@172 $generated@@354)) (> ($generated@@184 $generated@@355) 0))))) (and (= ($generated@@184 ($generated@@278 $generated@@354 $generated@@355)) (- ($generated@@184 $generated@@355) 1)) ($generated@@153 ($generated@@278 $generated@@354 $generated@@355) ($generated@@172 $generated@@354))))
 :pattern ( ($generated@@278 $generated@@354 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 Int) ) (! (let (($generated@@358 ($generated@@140 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@137 $generated@@358)) (=> (and (< 0 $generated@@357) (<= $generated@@357 ($generated@@184 $generated@@356))) (< ($generated@@346 ($generated@@182 $generated@@356 $generated@@357)) ($generated@@346 $generated@@356)))))
 :pattern ( ($generated@@346 ($generated@@182 $generated@@356 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
 (=> (= (type $generated@@359) ($generated@@137 $generated@@361)) (= ($generated@@184 ($generated@@183 $generated@@359 $generated@@360)) (+ 1 ($generated@@184 $generated@@359)))))
 :pattern ( ($generated@@183 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@138)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@66) (= (type $generated@@366) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@329 ($generated@@362 $generated@@364) $generated@@365 $generated@@366) ($generated@@76 $generated@@364 $generated@@365 $generated@@366)))
 :pattern ( ($generated@@329 ($generated@@362 $generated@@364) $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 Int) ($generated@@369 Int) ) (! (let (($generated@@370 ($generated@@140 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@137 $generated@@370)) (=> (and (and (<= 0 $generated@@368) (<= 0 $generated@@369)) (< $generated@@369 (- ($generated@@184 $generated@@367) $generated@@368))) (= ($generated@@270 ($generated@@182 $generated@@367 $generated@@368) $generated@@369) ($generated@@270 $generated@@367 (+ $generated@@369 $generated@@368))))))
 :weight 25
 :pattern ( ($generated@@270 ($generated@@182 $generated@@367 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@373 T@T) ) (! (= (type ($generated@@372 $generated@@373)) ($generated@@78 $generated@@373 $generated@@2))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@81 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@78 $generated@@375 $generated@@2)) (and (= (= ($generated@@371 $generated@@374) 0) (= $generated@@374 ($generated@@372 $generated@@375))) (=> (not (= ($generated@@371 $generated@@374) 0)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (< 0 ($generated ($generated@@83 $generated@@374 $generated@@376))))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert  (and (and (and (and (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (= ($generated@@1 ($generated@@379 $generated@@382 $generated@@383)) 19)) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@380 ($generated@@379 $generated@@384 $generated@@385)) $generated@@384)
 :pattern ( ($generated@@379 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= ($generated@@381 ($generated@@379 $generated@@386 $generated@@387)) $generated@@387)
 :pattern ( ($generated@@379 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@380 (type $generated@@388))))
(= (type ($generated@@377 $generated@@388)) ($generated@@78 $generated@@389 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@388))
))) (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (! (= (type ($generated@@378 $generated@@390 $generated@@391)) ($generated@@379 $generated@@390 $generated@@391))
 :pattern ( ($generated@@378 $generated@@390 $generated@@391))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@T) ) (! (let (($generated@@394 (type $generated@@392)))
 (not ($generated@@0 ($generated@@83 ($generated@@377 ($generated@@378 $generated@@394 $generated@@393)) $generated@@392))))
 :pattern ( (let (($generated@@394 (type $generated@@392)))
($generated@@83 ($generated@@377 ($generated@@378 $generated@@394 $generated@@393)) $generated@@392)))
)))
(assert  (and (and (and (and (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (= ($generated@@1 ($generated@@397 $generated@@400 $generated@@401)) 20)) (forall (($generated@@402 T@T) ($generated@@403 T@T) ) (! (= ($generated@@398 ($generated@@397 $generated@@402 $generated@@403)) $generated@@402)
 :pattern ( ($generated@@397 $generated@@402 $generated@@403))
))) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= ($generated@@399 ($generated@@397 $generated@@404 $generated@@405)) $generated@@405)
 :pattern ( ($generated@@397 $generated@@404 $generated@@405))
))) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@398 (type $generated@@406))))
(= (type ($generated@@395 $generated@@406)) ($generated@@78 $generated@@407 $generated@@4)))
 :pattern ( ($generated@@395 $generated@@406))
))) (forall (($generated@@408 T@T) ($generated@@409 T@T) ) (! (= (type ($generated@@396 $generated@@408 $generated@@409)) ($generated@@397 $generated@@408 $generated@@409))
 :pattern ( ($generated@@396 $generated@@408 $generated@@409))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@T) ) (! (let (($generated@@412 (type $generated@@410)))
 (not ($generated@@0 ($generated@@83 ($generated@@395 ($generated@@396 $generated@@412 $generated@@411)) $generated@@410))))
 :pattern ( (let (($generated@@412 (type $generated@@410)))
($generated@@83 ($generated@@395 ($generated@@396 $generated@@412 $generated@@411)) $generated@@410)))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@413) $generated@@66) (= (type $generated@@414) ($generated@@137 $generated@@138))) (or ($generated@@269 $generated@@413 ($generated@@297 $generated@@414)) (and (not (= 0 $generated@@170)) (and ($generated@@153 $generated@@414 ($generated@@172 $generated@@413)) (> ($generated@@184 ($generated@@297 $generated@@414)) 0))))) (= ($generated@@268 $generated@@413 ($generated@@297 $generated@@414)) ($generated@@270 ($generated@@297 $generated@@414) (- ($generated@@184 ($generated@@297 $generated@@414)) 1))))
 :weight 3
 :pattern ( ($generated@@268 $generated@@413 ($generated@@297 $generated@@414)))
))))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@415) $generated@@66) (= (type $generated@@416) ($generated@@137 $generated@@138))) (or ($generated@@279 $generated@@415 ($generated@@297 $generated@@416)) (and (not (= 0 $generated@@170)) (and ($generated@@153 $generated@@416 ($generated@@172 $generated@@415)) (> ($generated@@184 ($generated@@297 $generated@@416)) 0))))) (= ($generated@@278 $generated@@415 ($generated@@297 $generated@@416)) ($generated@@256 ($generated@@297 $generated@@416) (- ($generated@@184 ($generated@@297 $generated@@416)) 1))))
 :weight 3
 :pattern ( ($generated@@278 $generated@@415 ($generated@@297 $generated@@416)))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@140 (type $generated@@417))))
 (=> (and (= (type $generated@@417) ($generated@@137 $generated@@419)) (= (type $generated@@418) ($generated@@137 $generated@@419))) (= ($generated@@184 ($generated@@257 $generated@@417 $generated@@418)) (+ ($generated@@184 $generated@@417) ($generated@@184 $generated@@418)))))
 :pattern ( ($generated@@184 ($generated@@257 $generated@@417 $generated@@418)))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@81 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@78 $generated@@421 $generated@@2)) (= ($generated@@196 $generated@@420) (forall (($generated@@422 T@U) ) (!  (=> (= (type $generated@@422) $generated@@421) (and (<= 0 ($generated ($generated@@83 $generated@@420 $generated@@422))) (<= ($generated ($generated@@83 $generated@@420 $generated@@422)) ($generated@@371 $generated@@420))))
 :pattern ( ($generated@@83 $generated@@420 $generated@@422))
)))))
 :pattern ( ($generated@@196 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@138) ($generated@@285 $generated@@423 $generated@@150)) (and (= ($generated@@362 ($generated@@300 $generated@@2 $generated@@423)) $generated@@423) ($generated@@153 ($generated@@300 $generated@@2 $generated@@423) $generated@@150)))
 :pattern ( ($generated@@285 $generated@@423 $generated@@150))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 Int) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
 (=> (= (type $generated@@424) ($generated@@137 $generated@@427)) (and (=> (= $generated@@425 ($generated@@184 $generated@@424)) (= ($generated@@270 ($generated@@183 $generated@@424 $generated@@426) $generated@@425) $generated@@426)) (=> (not (= $generated@@425 ($generated@@184 $generated@@424))) (= ($generated@@270 ($generated@@183 $generated@@424 $generated@@426) $generated@@425) ($generated@@270 $generated@@424 $generated@@425))))))
 :pattern ( ($generated@@270 ($generated@@183 $generated@@424 $generated@@426) $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@381 (type $generated@@428))))
(let (($generated@@430 ($generated@@380 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@379 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@378 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) ($generated@@0 ($generated@@83 ($generated@@377 $generated@@428) $generated@@431)))
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@377 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@381 (type $generated@@433))))
(= (type ($generated@@432 $generated@@433)) ($generated@@78 $generated@@434 $generated@@4)))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@381 (type $generated@@435))))
(let (($generated@@437 ($generated@@380 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@379 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@378 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@436) ($generated@@0 ($generated@@83 ($generated@@432 $generated@@435) $generated@@438)))
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@432 $generated@@435))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@399 (type $generated@@439))))
(let (($generated@@441 ($generated@@398 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@397 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@396 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ) (!  (and (= (type $generated@@442) $generated@@441) ($generated@@0 ($generated@@83 ($generated@@395 $generated@@439) $generated@@442)))
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@395 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@399 (type $generated@@444))))
(= (type ($generated@@443 $generated@@444)) ($generated@@78 $generated@@445 $generated@@4)))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@399 (type $generated@@446))))
(let (($generated@@448 ($generated@@398 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@397 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@396 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@447) ($generated@@0 ($generated@@83 ($generated@@443 $generated@@446) $generated@@449)))
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@443 $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@78 $generated@@138 $generated@@2)) (= (type $generated@@451) $generated@@66)) (= ($generated@@153 $generated@@450 ($generated@@195 $generated@@451)) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@138) (< 0 ($generated ($generated@@83 $generated@@450 $generated@@452)))) ($generated@@285 $generated@@452 $generated@@451))
 :pattern ( ($generated@@83 $generated@@450 $generated@@452))
))))
 :pattern ( ($generated@@153 $generated@@450 ($generated@@195 $generated@@451)))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@453) ($generated@@78 $generated@@138 $generated@@4)) (= (type $generated@@454) $generated@@66)) (= (type $generated@@455) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@453 ($generated@@309 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@138) ($generated@@0 ($generated@@83 $generated@@453 $generated@@456))) ($generated@@329 $generated@@456 $generated@@454 $generated@@455))
 :pattern ( ($generated@@83 $generated@@453 $generated@@456))
))))
 :pattern ( ($generated@@76 $generated@@453 ($generated@@309 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@78 $generated@@138 $generated@@4)) (= (type $generated@@458) $generated@@66)) (= (type $generated@@459) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@457 ($generated@@314 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@138) ($generated@@0 ($generated@@83 $generated@@457 $generated@@460))) ($generated@@329 $generated@@460 $generated@@458 $generated@@459))
 :pattern ( ($generated@@83 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@76 $generated@@457 ($generated@@314 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
(= ($generated ($generated@@83 ($generated@@372 $generated@@462) $generated@@461)) 0))
 :pattern ( (let (($generated@@462 (type $generated@@461)))
($generated@@83 ($generated@@372 $generated@@462) $generated@@461)))
)))
(assert  (and (forall (($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@465)) ($generated@@78 $generated@@138 $generated@@4))
 :pattern ( ($generated@@463 $generated@@465))
)) (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@381 (type $generated@@466))))
(let (($generated@@468 ($generated@@380 (type $generated@@466))))
(= (type ($generated@@464 $generated@@466)) ($generated@@78 $generated@@468 $generated@@467))))
 :pattern ( ($generated@@464 $generated@@466))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) ($generated@@379 $generated@@138 $generated@@138)) (= (type $generated@@470) $generated@@138)) (= ($generated@@0 ($generated@@83 ($generated@@463 $generated@@469) $generated@@470))  (and ($generated@@0 ($generated@@83 ($generated@@377 $generated@@469) ($generated@@164 ($generated@@300 $generated@@157 $generated@@470)))) (= ($generated@@83 ($generated@@464 $generated@@469) ($generated@@164 ($generated@@300 $generated@@157 $generated@@470))) ($generated@@165 ($generated@@300 $generated@@157 $generated@@470))))))
 :pattern ( ($generated@@83 ($generated@@463 $generated@@469) $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) ($generated@@78 $generated@@138 $generated@@4))
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@399 (type $generated@@474))))
(let (($generated@@476 ($generated@@398 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474)) ($generated@@78 $generated@@476 $generated@@475))))
 :pattern ( ($generated@@472 $generated@@474))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) ($generated@@397 $generated@@138 $generated@@138)) (= (type $generated@@478) $generated@@138)) (= ($generated@@0 ($generated@@83 ($generated@@471 $generated@@477) $generated@@478))  (and ($generated@@0 ($generated@@83 ($generated@@395 $generated@@477) ($generated@@164 ($generated@@300 $generated@@157 $generated@@478)))) (= ($generated@@83 ($generated@@472 $generated@@477) ($generated@@164 ($generated@@300 $generated@@157 $generated@@478))) ($generated@@165 ($generated@@300 $generated@@157 $generated@@478))))))
 :pattern ( ($generated@@83 ($generated@@471 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(let (($generated@@482 ($generated@@380 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@379 $generated@@482 $generated@@481)) (= ($generated@@0 ($generated@@83 ($generated@@432 $generated@@479) $generated@@480)) (exists (($generated@@483 T@U) ) (!  (and (= (type $generated@@483) $generated@@482) (and ($generated@@0 ($generated@@83 ($generated@@377 $generated@@479) $generated@@483)) (= $generated@@480 ($generated@@83 ($generated@@464 $generated@@479) $generated@@483))))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@479) $generated@@483))
 :pattern ( ($generated@@83 ($generated@@464 $generated@@479) $generated@@483))
))))))
 :pattern ( ($generated@@83 ($generated@@432 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(let (($generated@@487 ($generated@@398 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@397 $generated@@487 $generated@@486)) (= ($generated@@0 ($generated@@83 ($generated@@443 $generated@@484) $generated@@485)) (exists (($generated@@488 T@U) ) (!  (and (= (type $generated@@488) $generated@@487) (and ($generated@@0 ($generated@@83 ($generated@@395 $generated@@484) $generated@@488)) (= $generated@@485 ($generated@@83 ($generated@@472 $generated@@484) $generated@@488))))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@484) $generated@@488))
 :pattern ( ($generated@@83 ($generated@@472 $generated@@484) $generated@@488))
))))))
 :pattern ( ($generated@@83 ($generated@@443 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (and (= (type $generated@@492) ($generated@@379 $generated@@138 $generated@@138)) (= (type $generated@@493) $generated@@66)) (= (type $generated@@494) $generated@@66)) (= (type $generated@@495) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@492 ($generated@@489 $generated@@493 $generated@@494) $generated@@495) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@377 $generated@@492) $generated@@496))) (and ($generated@@329 ($generated@@83 ($generated@@464 $generated@@492) $generated@@496) $generated@@494 $generated@@495) ($generated@@329 $generated@@496 $generated@@493 $generated@@495)))
 :pattern ( ($generated@@83 ($generated@@464 $generated@@492) $generated@@496))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@492) $generated@@496))
))))
 :pattern ( ($generated@@76 $generated@@492 ($generated@@489 $generated@@493 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) ($generated@@397 $generated@@138 $generated@@138)) (= (type $generated@@501) $generated@@66)) (= (type $generated@@502) $generated@@66)) (= (type $generated@@503) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@500 ($generated@@497 $generated@@501 $generated@@502) $generated@@503) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@395 $generated@@500) $generated@@504))) (and ($generated@@329 ($generated@@83 ($generated@@472 $generated@@500) $generated@@504) $generated@@502 $generated@@503) ($generated@@329 $generated@@504 $generated@@501 $generated@@503)))
 :pattern ( ($generated@@83 ($generated@@472 $generated@@500) $generated@@504))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@500) $generated@@504))
))))
 :pattern ( ($generated@@76 $generated@@500 ($generated@@497 $generated@@501 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@140 (type $generated@@505))))
 (=> (and (and (= (type $generated@@505) ($generated@@137 $generated@@507)) (= (type $generated@@506) ($generated@@137 $generated@@507))) ($generated@@341 $generated@@505 $generated@@506)) (= $generated@@505 $generated@@506)))
 :pattern ( ($generated@@341 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 Int) ) (! (let (($generated@@510 ($generated@@140 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@137 $generated@@510)) (=> (and (<= 0 $generated@@509) (<= $generated@@509 ($generated@@184 $generated@@508))) (= ($generated@@184 ($generated@@256 $generated@@508 $generated@@509)) $generated@@509))))
 :pattern ( ($generated@@184 ($generated@@256 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@512 T@T) ) (! (= (type ($generated@@511 $generated@@512)) ($generated@@78 $generated@@512 $generated@@4))
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@399 (type $generated@@513))))
(let (($generated@@515 ($generated@@398 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@397 $generated@@515 $generated@@514)) (= (= $generated@@513 ($generated@@396 $generated@@515 $generated@@514)) (= ($generated@@395 $generated@@513) ($generated@@511 $generated@@515))))))
 :pattern ( ($generated@@395 $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@399 (type $generated@@516))))
(let (($generated@@518 ($generated@@398 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@397 $generated@@518 $generated@@517)) (= (= $generated@@516 ($generated@@396 $generated@@518 $generated@@517)) (= ($generated@@443 $generated@@516) ($generated@@511 $generated@@517))))))
 :pattern ( ($generated@@443 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@399 (type $generated@@519))))
(let (($generated@@521 ($generated@@398 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@397 $generated@@521 $generated@@520)) (= (= $generated@@519 ($generated@@396 $generated@@521 $generated@@520)) (= ($generated@@471 $generated@@519) ($generated@@511 $generated@@138))))))
 :pattern ( ($generated@@471 $generated@@519))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@381 (type $generated@@522))))
(let (($generated@@524 ($generated@@380 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@379 $generated@@524 $generated@@523)) (or (= $generated@@522 ($generated@@378 $generated@@524 $generated@@523)) (exists (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (and (and (= (type $generated@@525) $generated@@138) (= (type $generated@@526) $generated@@138)) ($generated@@0 ($generated@@83 ($generated@@463 $generated@@522) ($generated@@362 ($generated@@284 $generated@@525 $generated@@526)))))
 :no-pattern (type $generated@@525)
 :no-pattern (type $generated@@526)
 :no-pattern ($generated $generated@@525)
 :no-pattern ($generated@@0 $generated@@525)
 :no-pattern ($generated $generated@@526)
 :no-pattern ($generated@@0 $generated@@526)
))))))
 :pattern ( ($generated@@463 $generated@@522))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@399 (type $generated@@527))))
(let (($generated@@529 ($generated@@398 (type $generated@@527))))
 (=> (= (type $generated@@527) ($generated@@397 $generated@@529 $generated@@528)) (or (= $generated@@527 ($generated@@396 $generated@@529 $generated@@528)) (exists (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (and (and (= (type $generated@@530) $generated@@138) (= (type $generated@@531) $generated@@138)) ($generated@@0 ($generated@@83 ($generated@@471 $generated@@527) ($generated@@362 ($generated@@284 $generated@@530 $generated@@531)))))
 :no-pattern (type $generated@@530)
 :no-pattern (type $generated@@531)
 :no-pattern ($generated $generated@@530)
 :no-pattern ($generated@@0 $generated@@530)
 :no-pattern ($generated $generated@@531)
 :no-pattern ($generated@@0 $generated@@531)
))))))
 :pattern ( ($generated@@471 $generated@@527))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@138) ($generated@@285 $generated@@532 $generated@@46)) (and (= ($generated@@362 ($generated@@300 $generated@@2 $generated@@532)) $generated@@532) ($generated@@153 ($generated@@300 $generated@@2 $generated@@532) $generated@@46)))
 :pattern ( ($generated@@285 $generated@@532 $generated@@46))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@138) ($generated@@285 $generated@@533 $generated@@47)) (and (= ($generated@@362 ($generated@@300 $generated@@3 $generated@@533)) $generated@@533) ($generated@@153 ($generated@@300 $generated@@3 $generated@@533) $generated@@47)))
 :pattern ( ($generated@@285 $generated@@533 $generated@@47))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@138) ($generated@@285 $generated@@534 $generated@@44)) (and (= ($generated@@362 ($generated@@300 $generated@@4 $generated@@534)) $generated@@534) ($generated@@153 ($generated@@300 $generated@@4 $generated@@534) $generated@@44)))
 :pattern ( ($generated@@285 $generated@@534 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@535) 21))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@138) ($generated@@285 $generated@@536 $generated@@45)) (and (= ($generated@@362 ($generated@@300 $generated@@535 $generated@@536)) $generated@@536) ($generated@@153 ($generated@@300 $generated@@535 $generated@@536) $generated@@45)))
 :pattern ( ($generated@@285 $generated@@536 $generated@@45))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@66) (= ($generated@@285 ($generated@@362 $generated@@537) $generated@@538) ($generated@@153 $generated@@537 $generated@@538)))
 :pattern ( ($generated@@285 ($generated@@362 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@81 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@78 $generated@@540 $generated@@2)) (<= 0 ($generated@@371 $generated@@539))))
 :pattern ( ($generated@@371 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@140 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@137 $generated@@542)) (<= 0 ($generated@@184 $generated@@541))))
 :pattern ( ($generated@@184 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 Int) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@140 (type $generated@@543))))
 (=> (= (type $generated@@543) ($generated@@137 $generated@@546)) (=> (and (and (<= 0 $generated@@544) (< $generated@@544 $generated@@545)) (<= $generated@@545 ($generated@@184 $generated@@543))) (< ($generated@@346 ($generated@@257 ($generated@@256 $generated@@543 $generated@@544) ($generated@@182 $generated@@543 $generated@@545))) ($generated@@346 $generated@@543)))))
 :pattern ( ($generated@@346 ($generated@@257 ($generated@@256 $generated@@543 $generated@@544) ($generated@@182 $generated@@543 $generated@@545))))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@66)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@66) (= (type $generated@@550) $generated@@66)) (= ($generated@@547 ($generated@@489 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@489 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@66)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@66) (= (type $generated@@554) $generated@@66)) (= ($generated@@551 ($generated@@489 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@489 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@66) (= (type $generated@@556) $generated@@66)) (= ($generated@@74 ($generated@@489 $generated@@555 $generated@@556)) $generated@@58))
 :pattern ( ($generated@@489 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@66)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@66) (= (type $generated@@560) $generated@@66)) (= ($generated@@557 ($generated@@497 $generated@@559 $generated@@560)) $generated@@559))
 :pattern ( ($generated@@497 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@66)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@66) (= (type $generated@@564) $generated@@66)) (= ($generated@@561 ($generated@@497 $generated@@563 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@497 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@66) (= (type $generated@@566) $generated@@66)) (= ($generated@@74 ($generated@@497 $generated@@565 $generated@@566)) $generated@@59))
 :pattern ( ($generated@@497 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@138) (= (type $generated@@568) $generated@@138)) (= ($generated@@338 ($generated@@284 $generated@@567 $generated@@568)) $generated@@61))
 :pattern ( ($generated@@284 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@66)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@66) (= (type $generated@@572) $generated@@66)) (= ($generated@@569 ($generated@@156 $generated@@571 $generated@@572)) $generated@@571))
 :pattern ( ($generated@@156 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@66)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@66) (= (type $generated@@576) $generated@@66)) (= ($generated@@573 ($generated@@156 $generated@@575 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@156 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@138) (= (type $generated@@578) $generated@@138)) (= ($generated@@164 ($generated@@284 $generated@@577 $generated@@578)) $generated@@577))
 :pattern ( ($generated@@284 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@138) (= (type $generated@@580) $generated@@138)) (= ($generated@@165 ($generated@@284 $generated@@579 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@284 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@137 $generated@@138)) (= (type $generated@@582) $generated@@66)) (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@581 ($generated@@172 $generated@@582) $generated@@583) (forall (($generated@@584 Int) ) (!  (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@184 $generated@@581))) ($generated@@329 ($generated@@270 $generated@@581 $generated@@584) $generated@@582 $generated@@583))
 :pattern ( ($generated@@270 $generated@@581 $generated@@584))
))))
 :pattern ( ($generated@@76 $generated@@581 ($generated@@172 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@585 ($generated@@77 $generated@@586)) $generated@@586)
 :pattern ( ($generated@@77 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@66)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@66) (= ($generated@@587 ($generated@@309 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@309 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@66) (= ($generated@@74 ($generated@@309 $generated@@590)) $generated@@54))
 :pattern ( ($generated@@309 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@66)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@66) (= ($generated@@591 ($generated@@314 $generated@@593)) $generated@@593))
 :pattern ( ($generated@@314 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@66) (= ($generated@@74 ($generated@@314 $generated@@594)) $generated@@55))
 :pattern ( ($generated@@314 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@66)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@66) (= ($generated@@595 ($generated@@195 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@195 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@66) (= ($generated@@74 ($generated@@195 $generated@@598)) $generated@@56))
 :pattern ( ($generated@@195 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@66)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@66) (= ($generated@@599 ($generated@@172 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@172 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@66) (= ($generated@@74 ($generated@@172 $generated@@602)) $generated@@57))
 :pattern ( ($generated@@172 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
(= ($generated@@300 $generated@@604 ($generated@@362 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@362 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@605) ($generated@@379 $generated@@138 $generated@@138)) (= (type $generated@@606) $generated@@66)) (= (type $generated@@607) $generated@@66)) (= ($generated@@153 $generated@@605 ($generated@@489 $generated@@606 $generated@@607)) (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@377 $generated@@605) $generated@@608))) (and ($generated@@285 ($generated@@83 ($generated@@464 $generated@@605) $generated@@608) $generated@@607) ($generated@@285 $generated@@608 $generated@@606)))
 :pattern ( ($generated@@83 ($generated@@464 $generated@@605) $generated@@608))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@605) $generated@@608))
))))
 :pattern ( ($generated@@153 $generated@@605 ($generated@@489 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@397 $generated@@138 $generated@@138)) (= (type $generated@@610) $generated@@66)) (= (type $generated@@611) $generated@@66)) (= ($generated@@153 $generated@@609 ($generated@@497 $generated@@610 $generated@@611)) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@395 $generated@@609) $generated@@612))) (and ($generated@@285 ($generated@@83 ($generated@@472 $generated@@609) $generated@@612) $generated@@611) ($generated@@285 $generated@@612 $generated@@610)))
 :pattern ( ($generated@@83 ($generated@@472 $generated@@609) $generated@@612))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@609) $generated@@612))
))))
 :pattern ( ($generated@@153 $generated@@609 ($generated@@497 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@138) (= (type $generated@@616) $generated@@138)) (< ($generated@@613 $generated@@615) ($generated@@614 ($generated@@284 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@284 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@138) (= (type $generated@@618) $generated@@138)) (< ($generated@@613 $generated@@618) ($generated@@614 ($generated@@284 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@284 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@138) (= (type $generated@@620) $generated@@66)) (= (type $generated@@621) $generated@@66)) ($generated@@285 $generated@@619 ($generated@@489 $generated@@620 $generated@@621))) (and (= ($generated@@362 ($generated@@300 ($generated@@379 $generated@@138 $generated@@138) $generated@@619)) $generated@@619) ($generated@@153 ($generated@@300 ($generated@@379 $generated@@138 $generated@@138) $generated@@619) ($generated@@489 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@285 $generated@@619 ($generated@@489 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@138) (= (type $generated@@623) $generated@@66)) (= (type $generated@@624) $generated@@66)) ($generated@@285 $generated@@622 ($generated@@497 $generated@@623 $generated@@624))) (and (= ($generated@@362 ($generated@@300 ($generated@@397 $generated@@138 $generated@@138) $generated@@622)) $generated@@622) ($generated@@153 ($generated@@300 ($generated@@397 $generated@@138 $generated@@138) $generated@@622) ($generated@@497 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@285 $generated@@622 ($generated@@497 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@66) (= (type $generated@@626) $generated@@66)) (= (type $generated@@627) $generated@@138)) ($generated@@285 $generated@@627 ($generated@@156 $generated@@625 $generated@@626))) (and (= ($generated@@362 ($generated@@300 $generated@@157 $generated@@627)) $generated@@627) ($generated@@153 ($generated@@300 $generated@@157 $generated@@627) ($generated@@156 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@285 $generated@@627 ($generated@@156 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
 (not ($generated@@0 ($generated@@83 ($generated@@511 $generated@@629) $generated@@628))))
 :pattern ( (let (($generated@@629 (type $generated@@628)))
($generated@@83 ($generated@@511 $generated@@629) $generated@@628)))
)))
(assert (forall (($generated@@631 T@U) ) (! (= (type ($generated@@630 $generated@@631)) $generated@@71)
 :pattern ( ($generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@66) (= (type $generated@@633) $generated@@66)) (and (= ($generated@@74 ($generated@@156 $generated@@632 $generated@@633)) $generated@@62) (= ($generated@@630 ($generated@@156 $generated@@632 $generated@@633)) $generated@@64)))
 :pattern ( ($generated@@156 $generated@@632 $generated@@633))
)))
(assert  (and (forall (($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@140 (type $generated@@636))))
(= (type ($generated@@634 $generated@@636)) ($generated@@137 $generated@@637)))
 :pattern ( ($generated@@634 $generated@@636))
)) (forall (($generated@@638 T@U) ) (! (let (($generated@@639 ($generated@@140 (type $generated@@638))))
(= (type ($generated@@635 $generated@@638)) $generated@@639))
 :pattern ( ($generated@@635 $generated@@638))
))))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (! (let (($generated@@642 (type $generated@@641)))
 (=> (= (type $generated@@640) ($generated@@137 $generated@@642)) (and (= ($generated@@634 ($generated@@183 $generated@@640 $generated@@641)) $generated@@640) (= ($generated@@635 ($generated@@183 $generated@@640 $generated@@641)) $generated@@641))))
 :pattern ( ($generated@@183 $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@157) (= ($generated@@613 ($generated@@362 $generated@@643)) ($generated@@614 $generated@@643)))
 :pattern ( ($generated@@613 ($generated@@362 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@138) ($generated@@285 $generated@@644 ($generated@@77 0))) (and (= ($generated@@362 ($generated@@300 $generated@@2 $generated@@644)) $generated@@644) ($generated@@153 ($generated@@300 ($generated@@78 $generated@@138 $generated@@4) $generated@@644) ($generated@@77 0))))
 :pattern ( ($generated@@285 $generated@@644 ($generated@@77 0)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@138) (= (type $generated@@646) $generated@@66)) ($generated@@285 $generated@@645 ($generated@@309 $generated@@646))) (and (= ($generated@@362 ($generated@@300 ($generated@@78 $generated@@138 $generated@@4) $generated@@645)) $generated@@645) ($generated@@153 ($generated@@300 ($generated@@78 $generated@@138 $generated@@4) $generated@@645) ($generated@@309 $generated@@646))))
 :pattern ( ($generated@@285 $generated@@645 ($generated@@309 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@138) (= (type $generated@@648) $generated@@66)) ($generated@@285 $generated@@647 ($generated@@314 $generated@@648))) (and (= ($generated@@362 ($generated@@300 ($generated@@78 $generated@@138 $generated@@4) $generated@@647)) $generated@@647) ($generated@@153 ($generated@@300 ($generated@@78 $generated@@138 $generated@@4) $generated@@647) ($generated@@314 $generated@@648))))
 :pattern ( ($generated@@285 $generated@@647 ($generated@@314 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@649) $generated@@138) (= (type $generated@@650) $generated@@66)) ($generated@@285 $generated@@649 ($generated@@195 $generated@@650))) (and (= ($generated@@362 ($generated@@300 ($generated@@78 $generated@@138 $generated@@2) $generated@@649)) $generated@@649) ($generated@@153 ($generated@@300 ($generated@@78 $generated@@138 $generated@@2) $generated@@649) ($generated@@195 $generated@@650))))
 :pattern ( ($generated@@285 $generated@@649 ($generated@@195 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@138) (= (type $generated@@652) $generated@@66)) ($generated@@285 $generated@@651 ($generated@@172 $generated@@652))) (and (= ($generated@@362 ($generated@@300 ($generated@@137 $generated@@138) $generated@@651)) $generated@@651) ($generated@@153 ($generated@@300 ($generated@@137 $generated@@138) $generated@@651) ($generated@@172 $generated@@652))))
 :pattern ( ($generated@@285 $generated@@651 ($generated@@172 $generated@@652)))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@66) (= (type $generated@@654) ($generated@@137 $generated@@138))) (or ($generated@@269 $generated@@653 $generated@@654) (and (not (= 0 $generated@@170)) (and ($generated@@153 $generated@@654 ($generated@@172 $generated@@653)) (> ($generated@@184 $generated@@654) 0))))) ($generated@@285 ($generated@@268 $generated@@653 $generated@@654) $generated@@653))
 :pattern ( ($generated@@268 $generated@@653 $generated@@654))
))))
(assert (= ($generated@@74 $generated@@150) $generated@@63))
(assert (= ($generated@@630 $generated@@150) $generated@@65))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ($generated@@657 Int) ) (! (let (($generated@@658 ($generated@@140 (type $generated@@655))))
 (=> (= (type $generated@@655) ($generated@@137 $generated@@658)) (=> (and (and (<= 0 $generated@@656) (<= $generated@@656 $generated@@657)) (< $generated@@657 ($generated@@184 $generated@@655))) (= ($generated@@270 ($generated@@182 $generated@@655 $generated@@656) (- $generated@@657 $generated@@656)) ($generated@@270 $generated@@655 $generated@@657)))))
 :weight 25
 :pattern ( ($generated@@270 $generated@@655 $generated@@657) ($generated@@182 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@659) ($generated@@78 $generated@@138 $generated@@2)) (= (type $generated@@660) $generated@@66)) (= (type $generated@@661) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@659 ($generated@@195 $generated@@660) $generated@@661) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@138) (< 0 ($generated ($generated@@83 $generated@@659 $generated@@662)))) ($generated@@329 $generated@@662 $generated@@660 $generated@@661))
 :pattern ( ($generated@@83 $generated@@659 $generated@@662))
))))
 :pattern ( ($generated@@76 $generated@@659 ($generated@@195 $generated@@660) $generated@@661))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) $generated@@66) (= (type $generated@@664) $generated@@136)) (= (type $generated@@665) ($generated@@137 $generated@@138))) (or ($generated@@171 $generated@@663 $generated@@665) (and (not (= 0 $generated@@170)) ($generated@@153 $generated@@665 ($generated@@172 ($generated@@172 $generated@@663)))))) (and (=> (not (= ($generated@@184 $generated@@665) ($generated@@298 0))) ($generated@@171 $generated@@663 ($generated@@182 $generated@@665 ($generated@@298 1)))) (= ($generated@@134 $generated@@663 ($generated@@177 $generated@@664) $generated@@665) (ite (= ($generated@@184 $generated@@665) ($generated@@298 0)) ($generated@@299 $generated@@138) ($generated@@257 ($generated@@300 ($generated@@137 $generated@@138) ($generated@@270 $generated@@665 ($generated@@298 0))) ($generated@@134 $generated@@663 $generated@@664 ($generated@@182 $generated@@665 ($generated@@298 1))))))))
 :pattern ( ($generated@@134 $generated@@663 ($generated@@177 $generated@@664) $generated@@665))
))))
(assert (forall (($generated@@666 T@U) ($generated@@667 Int) ($generated@@668 Int) ) (! (let (($generated@@669 ($generated@@140 (type $generated@@666))))
 (=> (= (type $generated@@666) ($generated@@137 $generated@@669)) (=> (and (and (<= 0 $generated@@667) (<= 0 $generated@@668)) (<= (+ $generated@@667 $generated@@668) ($generated@@184 $generated@@666))) (= ($generated@@182 ($generated@@182 $generated@@666 $generated@@667) $generated@@668) ($generated@@182 $generated@@666 (+ $generated@@667 $generated@@668))))))
 :pattern ( ($generated@@182 ($generated@@182 $generated@@666 $generated@@667) $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) $generated@@157) (= (type $generated@@671) $generated@@66)) (= (type $generated@@672) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@328 $generated@@672) (and ($generated@@155 $generated@@670) (exists (($generated@@673 T@U) ) (!  (and (= (type $generated@@673) $generated@@66) ($generated@@76 $generated@@670 ($generated@@156 $generated@@671 $generated@@673) $generated@@672))
 :pattern ( ($generated@@76 $generated@@670 ($generated@@156 $generated@@671 $generated@@673) $generated@@672))
))))) ($generated@@329 ($generated@@164 $generated@@670) $generated@@671 $generated@@672))
 :pattern ( ($generated@@329 ($generated@@164 $generated@@670) $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) $generated@@157) (= (type $generated@@675) $generated@@66)) (= (type $generated@@676) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@328 $generated@@676) (and ($generated@@155 $generated@@674) (exists (($generated@@677 T@U) ) (!  (and (= (type $generated@@677) $generated@@66) ($generated@@76 $generated@@674 ($generated@@156 $generated@@677 $generated@@675) $generated@@676))
 :pattern ( ($generated@@76 $generated@@674 ($generated@@156 $generated@@677 $generated@@675) $generated@@676))
))))) ($generated@@329 ($generated@@165 $generated@@674) $generated@@675 $generated@@676))
 :pattern ( ($generated@@329 ($generated@@165 $generated@@674) $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 Int) ) (! (let (($generated@@681 ($generated@@140 (type $generated@@678))))
 (=> (and (= (type $generated@@678) ($generated@@137 $generated@@681)) (= (type $generated@@679) ($generated@@137 $generated@@681))) (and (=> (< $generated@@680 ($generated@@184 $generated@@678)) (= ($generated@@270 ($generated@@257 $generated@@678 $generated@@679) $generated@@680) ($generated@@270 $generated@@678 $generated@@680))) (=> (<= ($generated@@184 $generated@@678) $generated@@680) (= ($generated@@270 ($generated@@257 $generated@@678 $generated@@679) $generated@@680) ($generated@@270 $generated@@679 (- $generated@@680 ($generated@@184 $generated@@678))))))))
 :pattern ( ($generated@@270 ($generated@@257 $generated@@678 $generated@@679) $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@2) (= ($generated@@153 $generated@@682 $generated@@150)  (and (<= ($generated@@298 0) ($generated $generated@@682)) (< ($generated $generated@@682) 4294967296))))
 :pattern ( ($generated@@153 $generated@@682 $generated@@150))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@138) (= (type $generated@@684) $generated@@138)) (= ($generated@@284 ($generated@@297 $generated@@683) ($generated@@297 $generated@@684)) ($generated@@297 ($generated@@284 $generated@@683 $generated@@684))))
 :pattern ( ($generated@@284 ($generated@@297 $generated@@683) ($generated@@297 $generated@@684)))
)))
(assert (forall (($generated@@685 Int) ) (! (= ($generated@@362 ($generated@@8 ($generated@@298 $generated@@685))) ($generated@@297 ($generated@@362 ($generated@@8 $generated@@685))))
 :pattern ( ($generated@@362 ($generated@@8 ($generated@@298 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ) (! (= ($generated@@362 ($generated@@297 $generated@@686)) ($generated@@297 ($generated@@362 $generated@@686)))
 :pattern ( ($generated@@362 ($generated@@297 $generated@@686)))
)))
(assert (forall (($generated@@687 T@U) ) (! (let (($generated@@688 ($generated@@140 (type $generated@@687))))
 (=> (and (= (type $generated@@687) ($generated@@137 $generated@@688)) (= ($generated@@184 $generated@@687) 0)) (= $generated@@687 ($generated@@299 $generated@@688))))
 :pattern ( ($generated@@184 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 Int) ) (! (let (($generated@@691 ($generated@@140 (type $generated@@689))))
 (=> (and (= (type $generated@@689) ($generated@@137 $generated@@691)) (= $generated@@690 0)) (= ($generated@@256 $generated@@689 $generated@@690) ($generated@@299 $generated@@691))))
 :pattern ( ($generated@@256 $generated@@689 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (! (let (($generated@@695 (type $generated@@693)))
 (=> (and (and (= (type $generated@@692) ($generated@@78 $generated@@695 $generated@@2)) (= (type $generated@@694) $generated@@2)) (<= 0 ($generated $generated@@694))) (= ($generated@@371 ($generated@@84 $generated@@692 $generated@@693 $generated@@694)) (+ (- ($generated@@371 $generated@@692) ($generated ($generated@@83 $generated@@692 $generated@@693))) ($generated $generated@@694)))))
 :pattern ( ($generated@@371 ($generated@@84 $generated@@692 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@697) $generated@@2)) ($generated@@76 $generated@@697 $generated@@46 $generated@@696))
 :pattern ( ($generated@@76 $generated@@697 $generated@@46 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@699) $generated@@3)) ($generated@@76 $generated@@699 $generated@@47 $generated@@698))
 :pattern ( ($generated@@76 $generated@@699 $generated@@47 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@700) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@701) $generated@@4)) ($generated@@76 $generated@@701 $generated@@44 $generated@@700))
 :pattern ( ($generated@@76 $generated@@701 $generated@@44 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@703) $generated@@535)) ($generated@@76 $generated@@703 $generated@@45 $generated@@702))
 :pattern ( ($generated@@76 $generated@@703 $generated@@45 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@705) $generated@@138)) ($generated@@76 $generated@@705 $generated@@48 $generated@@704))
 :pattern ( ($generated@@76 $generated@@705 $generated@@48 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) ($generated@@137 $generated@@138)) (= (type $generated@@707) $generated@@66)) (= ($generated@@153 $generated@@706 ($generated@@172 $generated@@707)) (forall (($generated@@708 Int) ) (!  (=> (and (<= 0 $generated@@708) (< $generated@@708 ($generated@@184 $generated@@706))) ($generated@@285 ($generated@@270 $generated@@706 $generated@@708) $generated@@707))
 :pattern ( ($generated@@270 $generated@@706 $generated@@708))
))))
 :pattern ( ($generated@@153 $generated@@706 ($generated@@172 $generated@@707)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 Int) ) (!  (=> (= (type $generated@@709) ($generated@@137 $generated@@138)) (=> (and (<= 0 $generated@@710) (< $generated@@710 ($generated@@184 $generated@@709))) (< ($generated@@614 ($generated@@300 $generated@@157 ($generated@@270 $generated@@709 $generated@@710))) ($generated@@346 $generated@@709))))
 :pattern ( ($generated@@614 ($generated@@300 $generated@@157 ($generated@@270 $generated@@709 $generated@@710))))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (and (= (type $generated@@711) ($generated@@379 $generated@@138 $generated@@138)) (= (type $generated@@712) $generated@@66)) (= (type $generated@@713) $generated@@66)) ($generated@@153 $generated@@711 ($generated@@489 $generated@@712 $generated@@713))) (and (and ($generated@@153 ($generated@@377 $generated@@711) ($generated@@309 $generated@@712)) ($generated@@153 ($generated@@432 $generated@@711) ($generated@@309 $generated@@713))) ($generated@@153 ($generated@@463 $generated@@711) ($generated@@309 ($generated@@156 $generated@@712 $generated@@713)))))
 :pattern ( ($generated@@153 $generated@@711 ($generated@@489 $generated@@712 $generated@@713)))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (and (= (type $generated@@714) ($generated@@397 $generated@@138 $generated@@138)) (= (type $generated@@715) $generated@@66)) (= (type $generated@@716) $generated@@66)) ($generated@@153 $generated@@714 ($generated@@497 $generated@@715 $generated@@716))) (and (and ($generated@@153 ($generated@@395 $generated@@714) ($generated@@314 $generated@@715)) ($generated@@153 ($generated@@443 $generated@@714) ($generated@@314 $generated@@716))) ($generated@@153 ($generated@@471 $generated@@714) ($generated@@314 ($generated@@156 $generated@@715 $generated@@716)))))
 :pattern ( ($generated@@153 $generated@@714 ($generated@@497 $generated@@715 $generated@@716)))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@2) ($generated@@153 $generated@@717 $generated@@46))
 :pattern ( ($generated@@153 $generated@@717 $generated@@46))
)))
(assert (forall (($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@3) ($generated@@153 $generated@@718 $generated@@47))
 :pattern ( ($generated@@153 $generated@@718 $generated@@47))
)))
(assert (forall (($generated@@719 T@U) ) (!  (=> (= (type $generated@@719) $generated@@4) ($generated@@153 $generated@@719 $generated@@44))
 :pattern ( ($generated@@153 $generated@@719 $generated@@44))
)))
(assert (forall (($generated@@720 T@U) ) (!  (=> (= (type $generated@@720) $generated@@535) ($generated@@153 $generated@@720 $generated@@45))
 :pattern ( ($generated@@153 $generated@@720 $generated@@45))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@138) ($generated@@153 $generated@@721 $generated@@48))
 :pattern ( ($generated@@153 $generated@@721 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () T@U)
(declare-fun $generated@@726 (T@U) Bool)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@722) ($generated@@137 $generated@@138)) (= (type $generated@@723) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@724) $generated@@66)) (= (type $generated@@725) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@727) ($generated@@137 $generated@@138))) (= (type $generated@@728) ($generated@@202 $generated@@79 $generated@@4))) (= (type $generated@@729) $generated@@79)) (= (type $generated@@730) ($generated@@137 $generated@@138))) (= (type $generated@@731) ($generated@@137 $generated@@138))) (= (type $generated@@732) ($generated@@137 $generated@@138))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@733 true))
(let (($generated@@734  (=> (and (and ($generated@@76 $generated@@722 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@723) ($generated@@171 $generated@@150 $generated@@722)) (and ($generated@@171 $generated@@150 $generated@@722) (= $generated@@724 $generated@@150))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (> ($generated@@184 $generated@@722) 0)) (=> (> ($generated@@184 $generated@@722) 0) (=> (and ($generated@@328 $generated@@725) ($generated@@726 $generated@@725)) (=> (and (and (and ($generated@@171 $generated@@724 $generated@@722) (and (and ($generated@@279 ($generated@@172 $generated@@724) $generated@@722) ($generated@@171 $generated@@724 ($generated@@278 ($generated@@172 $generated@@724) $generated@@722))) ($generated@@269 ($generated@@172 $generated@@724) $generated@@722))) ($generated@@341 ($generated@@134 $generated@@724 ($generated@@177 ($generated@@177 $generated@@139)) $generated@@722) ($generated@@257 ($generated@@134 $generated@@724 ($generated@@177 ($generated@@177 $generated@@139)) ($generated@@278 ($generated@@172 $generated@@724) $generated@@722)) ($generated@@300 ($generated@@137 $generated@@138) ($generated@@268 ($generated@@172 $generated@@724) $generated@@722))))) (and (= $generated@@723 $generated@@725) ($generated@@76 $generated@@722 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@725))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (> ($generated@@184 $generated@@722) 0)) (=> ($generated@@279 ($generated@@172 $generated@@150) $generated@@722) (=> (and (and (= $generated@@727 ($generated@@278 ($generated@@172 $generated@@150) $generated@@722)) ($generated@@76 $generated@@727 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@725)) (and ($generated@@171 $generated@@150 ($generated@@278 ($generated@@172 $generated@@150) $generated@@722)) ($generated@@76 $generated@@722 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@725))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (> ($generated@@184 $generated@@722) 0)) (=> ($generated@@269 ($generated@@172 $generated@@150) $generated@@722) (=> (and (and (and ($generated@@279 ($generated@@172 $generated@@150) $generated@@722) ($generated@@171 $generated@@150 ($generated@@278 ($generated@@172 $generated@@150) $generated@@722))) ($generated@@269 ($generated@@172 $generated@@150) $generated@@722)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@341 ($generated@@134 $generated@@150 ($generated@@177 ($generated@@177 $generated@@139)) $generated@@722) ($generated@@257 ($generated@@134 $generated@@150 ($generated@@177 ($generated@@177 $generated@@139)) ($generated@@278 ($generated@@172 $generated@@150) $generated@@722)) ($generated@@300 ($generated@@137 $generated@@138) ($generated@@268 ($generated@@172 $generated@@150) $generated@@722)))))))))))))))))
(let (($generated@@735 true))
(let (($generated@@736  (=> (and (= $generated@@728 ($generated@@201 $generated@@729 $generated@@723 $generated@@60 false)) (= $generated@@722 ($generated@@257 $generated@@730 ($generated@@183 ($generated@@299 $generated@@138) ($generated@@362 $generated@@731))))) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@735) (=> (= (ControlFlow 0 8) 3) $generated@@734)) (=> (= (ControlFlow 0 8) 7) $generated@@733)))))
(let (($generated@@737  (=> (and ($generated@@328 $generated@@723) ($generated@@726 $generated@@723)) (=> (and (and ($generated@@153 $generated@@730 ($generated@@172 ($generated@@172 $generated@@150))) ($generated@@76 $generated@@730 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@723)) (and ($generated@@153 $generated@@731 ($generated@@172 $generated@@150)) ($generated@@76 $generated@@731 ($generated@@172 $generated@@150) $generated@@723))) (=> (and (and (and ($generated@@153 $generated@@732 ($generated@@172 ($generated@@172 $generated@@150))) ($generated@@76 $generated@@732 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@723)) true) (and (= 2 $generated@@170) (= (ControlFlow 0 9) 8))) $generated@@736)))))
$generated@@737))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U Int) T@U)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U) Int)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@200 (T@U T@U T@U) T@U)
(declare-fun $generated@@201 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@202 (T@T T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@256 (T@U Int) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U T@U) T@U)
(declare-fun $generated@@269 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U Int) T@U)
(declare-fun $generated@@278 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) Bool)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (Int) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@294 (T@T T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@322 (T@U) Bool)
(declare-fun $generated@@323 (T@U T@U T@U) Bool)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@335 (T@U T@U) Bool)
(declare-fun $generated@@340 (T@U) Int)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@363 (T@U) Int)
(declare-fun $generated@@364 (T@T) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@T T@T) T@U)
(declare-fun $generated@@371 (T@T T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@T T@T) T@U)
(declare-fun $generated@@389 (T@T T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@391 (T@T) T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (T@U T@U) T@U)
(declare-fun $generated@@501 (T@T) T@U)
(declare-fun $generated@@525 () T@T)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@575 (T@U) Int)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(declare-fun $generated@@604 (T@U) Int)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@625 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@141 T@T) ) (= ($generated@@1 ($generated@@137 $generated@@141)) 15))) (forall (($generated@@142 T@T) ) (! (= ($generated@@140 ($generated@@137 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@137 $generated@@142))
))) (= ($generated@@1 $generated@@138) 16)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@134 $generated@@143 $generated@@144 $generated@@145)) ($generated@@137 $generated@@138))
 :pattern ( ($generated@@134 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@135 $generated@@146)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@146))
))) (= (type $generated@@139) $generated@@136)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@147) $generated@@66) (= (type $generated@@148) $generated@@136)) (= (type $generated@@149) ($generated@@137 $generated@@138))) (= ($generated@@134 $generated@@147 $generated@@148 $generated@@149) ($generated@@134 $generated@@147 $generated@@139 $generated@@149)))
 :pattern ( ($generated@@134 $generated@@147 ($generated@@135 $generated@@148) $generated@@149))
)))
(assert (= (type $generated@@150) $generated@@66))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@151 $generated@@150 $generated@@152))
 :pattern ( ($generated@@76 $generated@@151 $generated@@150 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@153 $generated@@154 ($generated@@77 0)))
 :pattern ( ($generated@@153 $generated@@154 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 17) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@66)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@66) (= (type $generated@@161) $generated@@66)) (= (type $generated@@162) $generated@@157)) ($generated@@153 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@153 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@138)
 :pattern ( ($generated@@164 $generated@@166))
)) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@138)
 :pattern ( ($generated@@165 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@157) (= (type $generated@@169) $generated@@157)) true) (= ($generated@@163 $generated@@168 $generated@@169)  (and (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)) (= ($generated@@165 $generated@@168) ($generated@@165 $generated@@169)))))
 :pattern ( ($generated@@163 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@66)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@66) (= (type $generated@@175) $generated@@136)) (= (type $generated@@176) ($generated@@137 $generated@@138))) (or ($generated@@171 $generated@@174 $generated@@176) (and (not (= 0 $generated@@170)) ($generated@@153 $generated@@176 ($generated@@172 ($generated@@172 $generated@@174)))))) ($generated@@153 ($generated@@134 $generated@@174 $generated@@175 $generated@@176) ($generated@@172 $generated@@174)))
 :pattern ( ($generated@@134 $generated@@174 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@136)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@66) (= (type $generated@@180) $generated@@136)) (= (type $generated@@181) ($generated@@137 $generated@@138))) (= ($generated@@134 $generated@@179 ($generated@@177 $generated@@180) $generated@@181) ($generated@@134 $generated@@179 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@134 $generated@@179 ($generated@@177 $generated@@180) $generated@@181))
)))
(assert  (and (forall (($generated@@185 T@U) ($generated@@186 Int) ) (! (let (($generated@@187 ($generated@@140 (type $generated@@185))))
(= (type ($generated@@182 $generated@@185 $generated@@186)) ($generated@@137 $generated@@187)))
 :pattern ( ($generated@@182 $generated@@185 $generated@@186))
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(= (type ($generated@@183 $generated@@188 $generated@@189)) ($generated@@137 $generated@@190)))
 :pattern ( ($generated@@183 $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 Int) ) (! (let (($generated@@194 (type $generated@@192)))
 (=> (= (type $generated@@191) ($generated@@137 $generated@@194)) (=> (and (<= 0 $generated@@193) (<= $generated@@193 ($generated@@184 $generated@@191))) (= ($generated@@182 ($generated@@183 $generated@@191 $generated@@192) $generated@@193) ($generated@@183 ($generated@@182 $generated@@191 $generated@@193) $generated@@192)))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@191 $generated@@192) $generated@@193))
)))
(assert (forall (($generated@@197 T@U) ) (! (= (type ($generated@@195 $generated@@197)) $generated@@66)
 :pattern ( ($generated@@195 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) ($generated@@78 $generated@@138 $generated@@2)) (= (type $generated@@199) $generated@@66)) ($generated@@153 $generated@@198 ($generated@@195 $generated@@199))) ($generated@@196 $generated@@198))
 :pattern ( ($generated@@153 $generated@@198 ($generated@@195 $generated@@199)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@206 $generated@@207)) 18)) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@208 $generated@@209)) $generated@@208)
 :pattern ( ($generated@@202 $generated@@208 $generated@@209))
))) (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (! (= ($generated@@204 ($generated@@202 $generated@@210 $generated@@211)) $generated@@211)
 :pattern ( ($generated@@202 $generated@@210 $generated@@211))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@204 (type $generated@@212))))
(= (type ($generated@@200 $generated@@212 $generated@@213 $generated@@214)) $generated@@215))
 :pattern ( ($generated@@200 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 (type $generated@@219)))
(let (($generated@@221 (type $generated@@217)))
(= (type ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@202 $generated@@221 $generated@@220))))
 :pattern ( ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@204 (type $generated@@222))))
 (=> (= (type $generated@@225) $generated@@226) (= ($generated@@200 ($generated@@205 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@223 $generated@@224) $generated@@225)))
 :weight 0
))) (and (and (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@200 ($generated@@205 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@200 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@236 $generated@@238) (= ($generated@@200 ($generated@@205 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@200 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or true (= ($generated@@200 ($generated@@205 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@200 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
)))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ) (! (= (type ($generated@@201 $generated@@245 $generated@@246 $generated@@247 $generated@@248)) ($generated@@202 $generated@@79 $generated@@4))
 :pattern ( ($generated@@201 $generated@@245 $generated@@246 $generated@@247 $generated@@248))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Bool) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@69 (type $generated@@254))))
 (=> (and (and (and (and (= (type $generated@@249) $generated@@79) (= (type $generated@@250) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@251) ($generated@@68 $generated@@4))) (= (type $generated@@253) $generated@@79)) (= (type $generated@@254) ($generated@@68 $generated@@255))) (= ($generated@@0 ($generated@@200 ($generated@@201 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))  (=> (and (not (= $generated@@253 $generated@@249)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@250 $generated@@253) $generated@@251))) $generated@@252))))
 :pattern ( ($generated@@200 ($generated@@201 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))
)))
(assert  (and (forall (($generated@@258 T@U) ($generated@@259 Int) ) (! (let (($generated@@260 ($generated@@140 (type $generated@@258))))
(= (type ($generated@@256 $generated@@258 $generated@@259)) ($generated@@137 $generated@@260)))
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)) (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@140 (type $generated@@261))))
(= (type ($generated@@257 $generated@@261 $generated@@262)) ($generated@@137 $generated@@263)))
 :pattern ( ($generated@@257 $generated@@261 $generated@@262))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 Int) ) (! (let (($generated@@267 ($generated@@140 (type $generated@@264))))
 (=> (and (and (= (type $generated@@264) ($generated@@137 $generated@@267)) (= (type $generated@@265) ($generated@@137 $generated@@267))) (= $generated@@266 ($generated@@184 $generated@@264))) (and (= ($generated@@256 ($generated@@257 $generated@@264 $generated@@265) $generated@@266) $generated@@264) (= ($generated@@182 ($generated@@257 $generated@@264 $generated@@265) $generated@@266) $generated@@265))))
 :pattern ( ($generated@@256 ($generated@@257 $generated@@264 $generated@@265) $generated@@266))
 :pattern ( ($generated@@182 ($generated@@257 $generated@@264 $generated@@265) $generated@@266))
)))
(assert  (and (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (= (type ($generated@@268 $generated@@271 $generated@@272)) $generated@@138)
 :pattern ( ($generated@@268 $generated@@271 $generated@@272))
)) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (! (let (($generated@@275 ($generated@@140 (type $generated@@273))))
(= (type ($generated@@270 $generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@270 $generated@@273 $generated@@274))
))))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (= (type $generated@@276) $generated@@66) (= (type $generated@@277) ($generated@@137 $generated@@138))) (or ($generated@@269 $generated@@276 $generated@@277) (and (not (= 0 $generated@@170)) (and ($generated@@153 $generated@@277 ($generated@@172 $generated@@276)) (> ($generated@@184 $generated@@277) 0))))) (= ($generated@@268 $generated@@276 $generated@@277) ($generated@@270 $generated@@277 (- ($generated@@184 $generated@@277) 1))))
 :pattern ( ($generated@@268 $generated@@276 $generated@@277))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (= (type ($generated@@278 $generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@278 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (= (type $generated@@282) $generated@@66) (= (type $generated@@283) $generated@@66)) (= (type $generated@@284) $generated@@138)) (= (type $generated@@285) $generated@@138)) (= ($generated@@153 ($generated@@278 $generated@@284 $generated@@285) ($generated@@156 $generated@@282 $generated@@283))  (and ($generated@@279 $generated@@284 $generated@@282) ($generated@@279 $generated@@285 $generated@@283))))
 :pattern ( ($generated@@153 ($generated@@278 $generated@@284 $generated@@285) ($generated@@156 $generated@@282 $generated@@283)))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@157) (= (type $generated@@287) $generated@@157)) (= ($generated@@163 $generated@@286 $generated@@287) (= $generated@@286 $generated@@287)))
 :pattern ( ($generated@@163 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 Int) ) (! (let (($generated@@290 ($generated@@140 (type $generated@@288))))
 (=> (and (= (type $generated@@288) ($generated@@137 $generated@@290)) (= $generated@@289 0)) (= ($generated@@182 $generated@@288 $generated@@289) $generated@@288)))
 :pattern ( ($generated@@182 $generated@@288 $generated@@289))
)))
(assert  (and (and (forall (($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
(= (type ($generated@@291 $generated@@295)) $generated@@296))
 :pattern ( ($generated@@291 $generated@@295))
)) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@293 $generated@@297)) ($generated@@137 $generated@@297))
 :pattern ( ($generated@@293 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@U) ) (! (= (type ($generated@@294 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@294 $generated@@298 $generated@@299))
))))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@300) $generated@@66) (= (type $generated@@301) $generated@@136)) (= (type $generated@@302) ($generated@@137 $generated@@138))) (or ($generated@@171 $generated@@300 ($generated@@291 $generated@@302)) (and (not (= 0 $generated@@170)) ($generated@@153 $generated@@302 ($generated@@172 ($generated@@172 $generated@@300)))))) (and (=> (not (= ($generated@@184 ($generated@@291 $generated@@302)) ($generated@@292 0))) ($generated@@171 $generated@@300 ($generated@@291 ($generated@@182 ($generated@@291 $generated@@302) ($generated@@292 1))))) (= ($generated@@134 $generated@@300 ($generated@@177 $generated@@301) ($generated@@291 $generated@@302)) (ite (= ($generated@@184 ($generated@@291 $generated@@302)) ($generated@@292 0)) ($generated@@293 $generated@@138) ($generated@@257 ($generated@@294 ($generated@@137 $generated@@138) ($generated@@270 ($generated@@291 $generated@@302) ($generated@@292 0))) ($generated@@134 $generated@@300 ($generated@@177 $generated@@301) ($generated@@291 ($generated@@182 ($generated@@291 $generated@@302) ($generated@@292 1)))))))))
 :weight 3
 :pattern ( ($generated@@134 $generated@@300 ($generated@@177 $generated@@301) ($generated@@291 $generated@@302)))
))))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@66)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) ($generated@@78 $generated@@138 $generated@@4)) (= (type $generated@@306) $generated@@66)) (= ($generated@@153 $generated@@305 ($generated@@303 $generated@@306)) (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@138) ($generated@@0 ($generated@@83 $generated@@305 $generated@@307))) ($generated@@279 $generated@@307 $generated@@306))
 :pattern ( ($generated@@83 $generated@@305 $generated@@307))
))))
 :pattern ( ($generated@@153 $generated@@305 ($generated@@303 $generated@@306)))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@66)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@78 $generated@@138 $generated@@4)) (= (type $generated@@311) $generated@@66)) (= ($generated@@153 $generated@@310 ($generated@@308 $generated@@311)) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@138) ($generated@@0 ($generated@@83 $generated@@310 $generated@@312))) ($generated@@279 $generated@@312 $generated@@311))
 :pattern ( ($generated@@83 $generated@@310 $generated@@312))
))))
 :pattern ( ($generated@@153 $generated@@310 ($generated@@308 $generated@@311)))
)))
(assert (forall (($generated@@313 Int) ) (! (= ($generated@@292 $generated@@313) $generated@@313)
 :pattern ( ($generated@@292 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (= ($generated@@291 $generated@@314) $generated@@314)
 :pattern ( ($generated@@291 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@315) ($generated@@137 $generated@@138)) (= (type $generated@@316) $generated@@138)) (= (type $generated@@317) $generated@@66)) (and ($generated@@153 $generated@@315 ($generated@@172 $generated@@317)) ($generated@@279 $generated@@316 $generated@@317))) ($generated@@153 ($generated@@183 $generated@@315 $generated@@316) ($generated@@172 $generated@@317)))
 :pattern ( ($generated@@153 ($generated@@183 $generated@@315 $generated@@316) ($generated@@172 $generated@@317)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 Int) ($generated@@320 Int) ) (! (let (($generated@@321 ($generated@@140 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@137 $generated@@321)) (=> (and (and (<= 0 $generated@@320) (< $generated@@320 $generated@@319)) (< $generated@@320 ($generated@@184 $generated@@318))) (= ($generated@@270 ($generated@@256 $generated@@318 $generated@@319) $generated@@320) ($generated@@270 $generated@@318 $generated@@320)))))
 :weight 25
 :pattern ( ($generated@@270 ($generated@@256 $generated@@318 $generated@@319) $generated@@320))
 :pattern ( ($generated@@270 $generated@@318 $generated@@320) ($generated@@256 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@324) $generated@@66) (= (type $generated@@325) $generated@@66)) (= (type $generated@@326) $generated@@138)) (= (type $generated@@327) $generated@@138)) (= (type $generated@@328) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@322 $generated@@328)) (= ($generated@@76 ($generated@@278 $generated@@326 $generated@@327) ($generated@@156 $generated@@324 $generated@@325) $generated@@328)  (and ($generated@@323 $generated@@326 $generated@@324 $generated@@328) ($generated@@323 $generated@@327 $generated@@325 $generated@@328))))
 :pattern ( ($generated@@76 ($generated@@278 $generated@@326 $generated@@327) ($generated@@156 $generated@@324 $generated@@325) $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 Int) ) (! (let (($generated@@331 ($generated@@140 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@137 $generated@@331)) (=> (and (<= 0 $generated@@330) (<= $generated@@330 ($generated@@184 $generated@@329))) (= ($generated@@184 ($generated@@182 $generated@@329 $generated@@330)) (- ($generated@@184 $generated@@329) $generated@@330)))))
 :pattern ( ($generated@@184 ($generated@@182 $generated@@329 $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@70)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@157) (= ($generated@@155 $generated@@334) (= ($generated@@332 $generated@@334) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@140 (type $generated@@336))))
 (=> (and (= (type $generated@@336) ($generated@@137 $generated@@338)) (= (type $generated@@337) ($generated@@137 $generated@@338))) (= ($generated@@335 $generated@@336 $generated@@337)  (and (= ($generated@@184 $generated@@336) ($generated@@184 $generated@@337)) (forall (($generated@@339 Int) ) (!  (=> (and (<= 0 $generated@@339) (< $generated@@339 ($generated@@184 $generated@@336))) (= ($generated@@270 $generated@@336 $generated@@339) ($generated@@270 $generated@@337 $generated@@339)))
 :pattern ( ($generated@@270 $generated@@336 $generated@@339))
 :pattern ( ($generated@@270 $generated@@337 $generated@@339))
))))))
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 Int) ) (! (let (($generated@@343 ($generated@@140 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@137 $generated@@343)) (=> (and (<= 0 $generated@@342) (< $generated@@342 ($generated@@184 $generated@@341))) (< ($generated@@340 ($generated@@256 $generated@@341 $generated@@342)) ($generated@@340 $generated@@341)))))
 :pattern ( ($generated@@340 ($generated@@256 $generated@@341 $generated@@342)))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@157) ($generated@@155 $generated@@344)) (exists (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (and (and (= (type $generated@@345) $generated@@138) (= (type $generated@@346) $generated@@138)) (= $generated@@344 ($generated@@278 $generated@@345 $generated@@346)))
 :no-pattern (type $generated@@345)
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
)))
 :pattern ( ($generated@@155 $generated@@344))
)))
(assert (forall (($generated@@347 T@T) ) (! (= ($generated@@184 ($generated@@293 $generated@@347)) 0)
 :pattern ( ($generated@@293 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 Int) ) (! (let (($generated@@350 ($generated@@140 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@137 $generated@@350)) (=> (and (< 0 $generated@@349) (<= $generated@@349 ($generated@@184 $generated@@348))) (< ($generated@@340 ($generated@@182 $generated@@348 $generated@@349)) ($generated@@340 $generated@@348)))))
 :pattern ( ($generated@@340 ($generated@@182 $generated@@348 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
 (=> (= (type $generated@@351) ($generated@@137 $generated@@353)) (= ($generated@@184 ($generated@@183 $generated@@351 $generated@@352)) (+ 1 ($generated@@184 $generated@@351)))))
 :pattern ( ($generated@@183 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@138)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@66) (= (type $generated@@358) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@323 ($generated@@354 $generated@@356) $generated@@357 $generated@@358) ($generated@@76 $generated@@356 $generated@@357 $generated@@358)))
 :pattern ( ($generated@@323 ($generated@@354 $generated@@356) $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 Int) ($generated@@361 Int) ) (! (let (($generated@@362 ($generated@@140 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@137 $generated@@362)) (=> (and (and (<= 0 $generated@@360) (<= 0 $generated@@361)) (< $generated@@361 (- ($generated@@184 $generated@@359) $generated@@360))) (= ($generated@@270 ($generated@@182 $generated@@359 $generated@@360) $generated@@361) ($generated@@270 $generated@@359 (+ $generated@@361 $generated@@360))))))
 :weight 25
 :pattern ( ($generated@@270 ($generated@@182 $generated@@359 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@365 T@T) ) (! (= (type ($generated@@364 $generated@@365)) ($generated@@78 $generated@@365 $generated@@2))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@81 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@78 $generated@@367 $generated@@2)) (and (= (= ($generated@@363 $generated@@366) 0) (= $generated@@366 ($generated@@364 $generated@@367))) (=> (not (= ($generated@@363 $generated@@366) 0)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (< 0 ($generated ($generated@@83 $generated@@366 $generated@@368))))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert  (and (and (and (and (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (= ($generated@@1 ($generated@@371 $generated@@374 $generated@@375)) 19)) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= ($generated@@372 ($generated@@371 $generated@@376 $generated@@377)) $generated@@376)
 :pattern ( ($generated@@371 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= ($generated@@373 ($generated@@371 $generated@@378 $generated@@379)) $generated@@379)
 :pattern ( ($generated@@371 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@372 (type $generated@@380))))
(= (type ($generated@@369 $generated@@380)) ($generated@@78 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@380))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= (type ($generated@@370 $generated@@382 $generated@@383)) ($generated@@371 $generated@@382 $generated@@383))
 :pattern ( ($generated@@370 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@T) ) (! (let (($generated@@386 (type $generated@@384)))
 (not ($generated@@0 ($generated@@83 ($generated@@369 ($generated@@370 $generated@@386 $generated@@385)) $generated@@384))))
 :pattern ( (let (($generated@@386 (type $generated@@384)))
($generated@@83 ($generated@@369 ($generated@@370 $generated@@386 $generated@@385)) $generated@@384)))
)))
(assert  (and (and (and (and (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (= ($generated@@1 ($generated@@389 $generated@@392 $generated@@393)) 20)) (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (! (= ($generated@@390 ($generated@@389 $generated@@394 $generated@@395)) $generated@@394)
 :pattern ( ($generated@@389 $generated@@394 $generated@@395))
))) (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (! (= ($generated@@391 ($generated@@389 $generated@@396 $generated@@397)) $generated@@397)
 :pattern ( ($generated@@389 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@390 (type $generated@@398))))
(= (type ($generated@@387 $generated@@398)) ($generated@@78 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@387 $generated@@398))
))) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= (type ($generated@@388 $generated@@400 $generated@@401)) ($generated@@389 $generated@@400 $generated@@401))
 :pattern ( ($generated@@388 $generated@@400 $generated@@401))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@T) ) (! (let (($generated@@404 (type $generated@@402)))
 (not ($generated@@0 ($generated@@83 ($generated@@387 ($generated@@388 $generated@@404 $generated@@403)) $generated@@402))))
 :pattern ( (let (($generated@@404 (type $generated@@402)))
($generated@@83 ($generated@@387 ($generated@@388 $generated@@404 $generated@@403)) $generated@@402)))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@405) $generated@@66) (= (type $generated@@406) ($generated@@137 $generated@@138))) (or ($generated@@269 $generated@@405 ($generated@@291 $generated@@406)) (and (not (= 0 $generated@@170)) (and ($generated@@153 $generated@@406 ($generated@@172 $generated@@405)) (> ($generated@@184 ($generated@@291 $generated@@406)) 0))))) (= ($generated@@268 $generated@@405 ($generated@@291 $generated@@406)) ($generated@@270 ($generated@@291 $generated@@406) (- ($generated@@184 ($generated@@291 $generated@@406)) 1))))
 :weight 3
 :pattern ( ($generated@@268 $generated@@405 ($generated@@291 $generated@@406)))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@140 (type $generated@@407))))
 (=> (and (= (type $generated@@407) ($generated@@137 $generated@@409)) (= (type $generated@@408) ($generated@@137 $generated@@409))) (= ($generated@@184 ($generated@@257 $generated@@407 $generated@@408)) (+ ($generated@@184 $generated@@407) ($generated@@184 $generated@@408)))))
 :pattern ( ($generated@@184 ($generated@@257 $generated@@407 $generated@@408)))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@81 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@78 $generated@@411 $generated@@2)) (= ($generated@@196 $generated@@410) (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@411) (and (<= 0 ($generated ($generated@@83 $generated@@410 $generated@@412))) (<= ($generated ($generated@@83 $generated@@410 $generated@@412)) ($generated@@363 $generated@@410))))
 :pattern ( ($generated@@83 $generated@@410 $generated@@412))
)))))
 :pattern ( ($generated@@196 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@138) ($generated@@279 $generated@@413 $generated@@150)) (and (= ($generated@@354 ($generated@@294 $generated@@2 $generated@@413)) $generated@@413) ($generated@@153 ($generated@@294 $generated@@2 $generated@@413) $generated@@150)))
 :pattern ( ($generated@@279 $generated@@413 $generated@@150))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 Int) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
 (=> (= (type $generated@@414) ($generated@@137 $generated@@417)) (and (=> (= $generated@@415 ($generated@@184 $generated@@414)) (= ($generated@@270 ($generated@@183 $generated@@414 $generated@@416) $generated@@415) $generated@@416)) (=> (not (= $generated@@415 ($generated@@184 $generated@@414))) (= ($generated@@270 ($generated@@183 $generated@@414 $generated@@416) $generated@@415) ($generated@@270 $generated@@414 $generated@@415))))))
 :pattern ( ($generated@@270 ($generated@@183 $generated@@414 $generated@@416) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@373 (type $generated@@418))))
(let (($generated@@420 ($generated@@372 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@371 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@370 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@83 ($generated@@369 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@369 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@373 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@78 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@373 (type $generated@@425))))
(let (($generated@@427 ($generated@@372 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@371 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@370 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@83 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@391 (type $generated@@429))))
(let (($generated@@431 ($generated@@390 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@389 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@388 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@429) $generated@@432)))
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@387 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@391 (type $generated@@434))))
(= (type ($generated@@433 $generated@@434)) ($generated@@78 $generated@@435 $generated@@4)))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@391 (type $generated@@436))))
(let (($generated@@438 ($generated@@390 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@389 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@388 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@437) ($generated@@0 ($generated@@83 ($generated@@433 $generated@@436) $generated@@439)))
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@433 $generated@@436))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@78 $generated@@138 $generated@@2)) (= (type $generated@@441) $generated@@66)) (= ($generated@@153 $generated@@440 ($generated@@195 $generated@@441)) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@138) (< 0 ($generated ($generated@@83 $generated@@440 $generated@@442)))) ($generated@@279 $generated@@442 $generated@@441))
 :pattern ( ($generated@@83 $generated@@440 $generated@@442))
))))
 :pattern ( ($generated@@153 $generated@@440 ($generated@@195 $generated@@441)))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (= (type $generated@@443) ($generated@@78 $generated@@138 $generated@@4)) (= (type $generated@@444) $generated@@66)) (= (type $generated@@445) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@443 ($generated@@303 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@138) ($generated@@0 ($generated@@83 $generated@@443 $generated@@446))) ($generated@@323 $generated@@446 $generated@@444 $generated@@445))
 :pattern ( ($generated@@83 $generated@@443 $generated@@446))
))))
 :pattern ( ($generated@@76 $generated@@443 ($generated@@303 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@447) ($generated@@78 $generated@@138 $generated@@4)) (= (type $generated@@448) $generated@@66)) (= (type $generated@@449) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@447 ($generated@@308 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@138) ($generated@@0 ($generated@@83 $generated@@447 $generated@@450))) ($generated@@323 $generated@@450 $generated@@448 $generated@@449))
 :pattern ( ($generated@@83 $generated@@447 $generated@@450))
))))
 :pattern ( ($generated@@76 $generated@@447 ($generated@@308 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(= ($generated ($generated@@83 ($generated@@364 $generated@@452) $generated@@451)) 0))
 :pattern ( (let (($generated@@452 (type $generated@@451)))
($generated@@83 ($generated@@364 $generated@@452) $generated@@451)))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@78 $generated@@138 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@373 (type $generated@@456))))
(let (($generated@@458 ($generated@@372 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@78 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@371 $generated@@138 $generated@@138)) (= (type $generated@@460) $generated@@138)) (= ($generated@@0 ($generated@@83 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@83 ($generated@@369 $generated@@459) ($generated@@164 ($generated@@294 $generated@@157 $generated@@460)))) (= ($generated@@83 ($generated@@454 $generated@@459) ($generated@@164 ($generated@@294 $generated@@157 $generated@@460))) ($generated@@165 ($generated@@294 $generated@@157 $generated@@460))))))
 :pattern ( ($generated@@83 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert  (and (forall (($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@463)) ($generated@@78 $generated@@138 $generated@@4))
 :pattern ( ($generated@@461 $generated@@463))
)) (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@391 (type $generated@@464))))
(let (($generated@@466 ($generated@@390 (type $generated@@464))))
(= (type ($generated@@462 $generated@@464)) ($generated@@78 $generated@@466 $generated@@465))))
 :pattern ( ($generated@@462 $generated@@464))
))))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) ($generated@@389 $generated@@138 $generated@@138)) (= (type $generated@@468) $generated@@138)) (= ($generated@@0 ($generated@@83 ($generated@@461 $generated@@467) $generated@@468))  (and ($generated@@0 ($generated@@83 ($generated@@387 $generated@@467) ($generated@@164 ($generated@@294 $generated@@157 $generated@@468)))) (= ($generated@@83 ($generated@@462 $generated@@467) ($generated@@164 ($generated@@294 $generated@@157 $generated@@468))) ($generated@@165 ($generated@@294 $generated@@157 $generated@@468))))))
 :pattern ( ($generated@@83 ($generated@@461 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
(let (($generated@@472 ($generated@@372 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@371 $generated@@472 $generated@@471)) (= ($generated@@0 ($generated@@83 ($generated@@422 $generated@@469) $generated@@470)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@472) (and ($generated@@0 ($generated@@83 ($generated@@369 $generated@@469) $generated@@473)) (= $generated@@470 ($generated@@83 ($generated@@454 $generated@@469) $generated@@473))))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@469) $generated@@473))
 :pattern ( ($generated@@83 ($generated@@454 $generated@@469) $generated@@473))
))))))
 :pattern ( ($generated@@83 ($generated@@422 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 (type $generated@@475)))
(let (($generated@@477 ($generated@@390 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@389 $generated@@477 $generated@@476)) (= ($generated@@0 ($generated@@83 ($generated@@433 $generated@@474) $generated@@475)) (exists (($generated@@478 T@U) ) (!  (and (= (type $generated@@478) $generated@@477) (and ($generated@@0 ($generated@@83 ($generated@@387 $generated@@474) $generated@@478)) (= $generated@@475 ($generated@@83 ($generated@@462 $generated@@474) $generated@@478))))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@474) $generated@@478))
 :pattern ( ($generated@@83 ($generated@@462 $generated@@474) $generated@@478))
))))))
 :pattern ( ($generated@@83 ($generated@@433 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@371 $generated@@138 $generated@@138)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) $generated@@66)) (= (type $generated@@485) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@369 $generated@@482) $generated@@486))) (and ($generated@@323 ($generated@@83 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@323 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@83 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (and (= (type $generated@@490) ($generated@@389 $generated@@138 $generated@@138)) (= (type $generated@@491) $generated@@66)) (= (type $generated@@492) $generated@@66)) (= (type $generated@@493) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@490 ($generated@@487 $generated@@491 $generated@@492) $generated@@493) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@490) $generated@@494))) (and ($generated@@323 ($generated@@83 ($generated@@462 $generated@@490) $generated@@494) $generated@@492 $generated@@493) ($generated@@323 $generated@@494 $generated@@491 $generated@@493)))
 :pattern ( ($generated@@83 ($generated@@462 $generated@@490) $generated@@494))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@490) $generated@@494))
))))
 :pattern ( ($generated@@76 $generated@@490 ($generated@@487 $generated@@491 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@140 (type $generated@@495))))
 (=> (and (and (= (type $generated@@495) ($generated@@137 $generated@@497)) (= (type $generated@@496) ($generated@@137 $generated@@497))) ($generated@@335 $generated@@495 $generated@@496)) (= $generated@@495 $generated@@496)))
 :pattern ( ($generated@@335 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 Int) ) (! (let (($generated@@500 ($generated@@140 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@137 $generated@@500)) (=> (and (<= 0 $generated@@499) (<= $generated@@499 ($generated@@184 $generated@@498))) (= ($generated@@184 ($generated@@256 $generated@@498 $generated@@499)) $generated@@499))))
 :pattern ( ($generated@@184 ($generated@@256 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@502 T@T) ) (! (= (type ($generated@@501 $generated@@502)) ($generated@@78 $generated@@502 $generated@@4))
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@391 (type $generated@@503))))
(let (($generated@@505 ($generated@@390 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@389 $generated@@505 $generated@@504)) (= (= $generated@@503 ($generated@@388 $generated@@505 $generated@@504)) (= ($generated@@387 $generated@@503) ($generated@@501 $generated@@505))))))
 :pattern ( ($generated@@387 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@391 (type $generated@@506))))
(let (($generated@@508 ($generated@@390 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@389 $generated@@508 $generated@@507)) (= (= $generated@@506 ($generated@@388 $generated@@508 $generated@@507)) (= ($generated@@433 $generated@@506) ($generated@@501 $generated@@507))))))
 :pattern ( ($generated@@433 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@391 (type $generated@@509))))
(let (($generated@@511 ($generated@@390 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@389 $generated@@511 $generated@@510)) (= (= $generated@@509 ($generated@@388 $generated@@511 $generated@@510)) (= ($generated@@461 $generated@@509) ($generated@@501 $generated@@138))))))
 :pattern ( ($generated@@461 $generated@@509))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@373 (type $generated@@512))))
(let (($generated@@514 ($generated@@372 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@371 $generated@@514 $generated@@513)) (or (= $generated@@512 ($generated@@370 $generated@@514 $generated@@513)) (exists (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (and (and (= (type $generated@@515) $generated@@138) (= (type $generated@@516) $generated@@138)) ($generated@@0 ($generated@@83 ($generated@@453 $generated@@512) ($generated@@354 ($generated@@278 $generated@@515 $generated@@516)))))
 :no-pattern (type $generated@@515)
 :no-pattern (type $generated@@516)
 :no-pattern ($generated $generated@@515)
 :no-pattern ($generated@@0 $generated@@515)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
))))))
 :pattern ( ($generated@@453 $generated@@512))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@391 (type $generated@@517))))
(let (($generated@@519 ($generated@@390 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@389 $generated@@519 $generated@@518)) (or (= $generated@@517 ($generated@@388 $generated@@519 $generated@@518)) (exists (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (and (and (= (type $generated@@520) $generated@@138) (= (type $generated@@521) $generated@@138)) ($generated@@0 ($generated@@83 ($generated@@461 $generated@@517) ($generated@@354 ($generated@@278 $generated@@520 $generated@@521)))))
 :no-pattern (type $generated@@520)
 :no-pattern (type $generated@@521)
 :no-pattern ($generated $generated@@520)
 :no-pattern ($generated@@0 $generated@@520)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
))))))
 :pattern ( ($generated@@461 $generated@@517))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@138) ($generated@@279 $generated@@522 $generated@@46)) (and (= ($generated@@354 ($generated@@294 $generated@@2 $generated@@522)) $generated@@522) ($generated@@153 ($generated@@294 $generated@@2 $generated@@522) $generated@@46)))
 :pattern ( ($generated@@279 $generated@@522 $generated@@46))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@138) ($generated@@279 $generated@@523 $generated@@47)) (and (= ($generated@@354 ($generated@@294 $generated@@3 $generated@@523)) $generated@@523) ($generated@@153 ($generated@@294 $generated@@3 $generated@@523) $generated@@47)))
 :pattern ( ($generated@@279 $generated@@523 $generated@@47))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@138) ($generated@@279 $generated@@524 $generated@@44)) (and (= ($generated@@354 ($generated@@294 $generated@@4 $generated@@524)) $generated@@524) ($generated@@153 ($generated@@294 $generated@@4 $generated@@524) $generated@@44)))
 :pattern ( ($generated@@279 $generated@@524 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@525) 21))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@138) ($generated@@279 $generated@@526 $generated@@45)) (and (= ($generated@@354 ($generated@@294 $generated@@525 $generated@@526)) $generated@@526) ($generated@@153 ($generated@@294 $generated@@525 $generated@@526) $generated@@45)))
 :pattern ( ($generated@@279 $generated@@526 $generated@@45))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@66) (= ($generated@@279 ($generated@@354 $generated@@527) $generated@@528) ($generated@@153 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@279 ($generated@@354 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@81 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@78 $generated@@530 $generated@@2)) (<= 0 ($generated@@363 $generated@@529))))
 :pattern ( ($generated@@363 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@140 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@137 $generated@@532)) (<= 0 ($generated@@184 $generated@@531))))
 :pattern ( ($generated@@184 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 Int) ($generated@@535 Int) ) (! (let (($generated@@536 ($generated@@140 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@137 $generated@@536)) (=> (and (and (<= 0 $generated@@534) (< $generated@@534 $generated@@535)) (<= $generated@@535 ($generated@@184 $generated@@533))) (< ($generated@@340 ($generated@@257 ($generated@@256 $generated@@533 $generated@@534) ($generated@@182 $generated@@533 $generated@@535))) ($generated@@340 $generated@@533)))))
 :pattern ( ($generated@@340 ($generated@@257 ($generated@@256 $generated@@533 $generated@@534) ($generated@@182 $generated@@533 $generated@@535))))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@66) (= (type $generated@@540) $generated@@66)) (= ($generated@@537 ($generated@@479 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@479 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@66)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@66) (= (type $generated@@544) $generated@@66)) (= ($generated@@541 ($generated@@479 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@479 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@66) (= (type $generated@@546) $generated@@66)) (= ($generated@@74 ($generated@@479 $generated@@545 $generated@@546)) $generated@@58))
 :pattern ( ($generated@@479 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@66)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@66) (= (type $generated@@550) $generated@@66)) (= ($generated@@547 ($generated@@487 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@487 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@66)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@66) (= (type $generated@@554) $generated@@66)) (= ($generated@@551 ($generated@@487 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@487 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@66) (= (type $generated@@556) $generated@@66)) (= ($generated@@74 ($generated@@487 $generated@@555 $generated@@556)) $generated@@59))
 :pattern ( ($generated@@487 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@138) (= (type $generated@@558) $generated@@138)) (= ($generated@@332 ($generated@@278 $generated@@557 $generated@@558)) $generated@@61))
 :pattern ( ($generated@@278 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@66)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@66) (= (type $generated@@562) $generated@@66)) (= ($generated@@559 ($generated@@156 $generated@@561 $generated@@562)) $generated@@561))
 :pattern ( ($generated@@156 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@66)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@66) (= (type $generated@@566) $generated@@66)) (= ($generated@@563 ($generated@@156 $generated@@565 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@156 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@138) (= (type $generated@@568) $generated@@138)) (= ($generated@@164 ($generated@@278 $generated@@567 $generated@@568)) $generated@@567))
 :pattern ( ($generated@@278 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@138) (= (type $generated@@570) $generated@@138)) (= ($generated@@165 ($generated@@278 $generated@@569 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@278 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@137 $generated@@138)) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@571 ($generated@@172 $generated@@572) $generated@@573) (forall (($generated@@574 Int) ) (!  (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@184 $generated@@571))) ($generated@@323 ($generated@@270 $generated@@571 $generated@@574) $generated@@572 $generated@@573))
 :pattern ( ($generated@@270 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@76 $generated@@571 ($generated@@172 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@576 Int) ) (! (= ($generated@@575 ($generated@@77 $generated@@576)) $generated@@576)
 :pattern ( ($generated@@77 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@66)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@66) (= ($generated@@577 ($generated@@303 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@303 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@66) (= ($generated@@74 ($generated@@303 $generated@@580)) $generated@@54))
 :pattern ( ($generated@@303 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@66)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@66) (= ($generated@@581 ($generated@@308 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@308 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@66) (= ($generated@@74 ($generated@@308 $generated@@584)) $generated@@55))
 :pattern ( ($generated@@308 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@66)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@66) (= ($generated@@585 ($generated@@195 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@195 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@66) (= ($generated@@74 ($generated@@195 $generated@@588)) $generated@@56))
 :pattern ( ($generated@@195 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@66)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@66) (= ($generated@@589 ($generated@@172 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@172 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@66) (= ($generated@@74 ($generated@@172 $generated@@592)) $generated@@57))
 :pattern ( ($generated@@172 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
(= ($generated@@294 $generated@@594 ($generated@@354 $generated@@593)) $generated@@593))
 :pattern ( ($generated@@354 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@371 $generated@@138 $generated@@138)) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) $generated@@66)) (= ($generated@@153 $generated@@595 ($generated@@479 $generated@@596 $generated@@597)) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@369 $generated@@595) $generated@@598))) (and ($generated@@279 ($generated@@83 ($generated@@454 $generated@@595) $generated@@598) $generated@@597) ($generated@@279 $generated@@598 $generated@@596)))
 :pattern ( ($generated@@83 ($generated@@454 $generated@@595) $generated@@598))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@595) $generated@@598))
))))
 :pattern ( ($generated@@153 $generated@@595 ($generated@@479 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@389 $generated@@138 $generated@@138)) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) $generated@@66)) (= ($generated@@153 $generated@@599 ($generated@@487 $generated@@600 $generated@@601)) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@599) $generated@@602))) (and ($generated@@279 ($generated@@83 ($generated@@462 $generated@@599) $generated@@602) $generated@@601) ($generated@@279 $generated@@602 $generated@@600)))
 :pattern ( ($generated@@83 ($generated@@462 $generated@@599) $generated@@602))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@599) $generated@@602))
))))
 :pattern ( ($generated@@153 $generated@@599 ($generated@@487 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@138) (= (type $generated@@606) $generated@@138)) (< ($generated@@603 $generated@@605) ($generated@@604 ($generated@@278 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@278 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@138) (= (type $generated@@608) $generated@@138)) (< ($generated@@603 $generated@@608) ($generated@@604 ($generated@@278 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@278 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@138) (= (type $generated@@610) $generated@@66)) (= (type $generated@@611) $generated@@66)) ($generated@@279 $generated@@609 ($generated@@479 $generated@@610 $generated@@611))) (and (= ($generated@@354 ($generated@@294 ($generated@@371 $generated@@138 $generated@@138) $generated@@609)) $generated@@609) ($generated@@153 ($generated@@294 ($generated@@371 $generated@@138 $generated@@138) $generated@@609) ($generated@@479 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@279 $generated@@609 ($generated@@479 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@138) (= (type $generated@@613) $generated@@66)) (= (type $generated@@614) $generated@@66)) ($generated@@279 $generated@@612 ($generated@@487 $generated@@613 $generated@@614))) (and (= ($generated@@354 ($generated@@294 ($generated@@389 $generated@@138 $generated@@138) $generated@@612)) $generated@@612) ($generated@@153 ($generated@@294 ($generated@@389 $generated@@138 $generated@@138) $generated@@612) ($generated@@487 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@279 $generated@@612 ($generated@@487 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@66) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) $generated@@138)) ($generated@@279 $generated@@617 ($generated@@156 $generated@@615 $generated@@616))) (and (= ($generated@@354 ($generated@@294 $generated@@157 $generated@@617)) $generated@@617) ($generated@@153 ($generated@@294 $generated@@157 $generated@@617) ($generated@@156 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@279 $generated@@617 ($generated@@156 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@618)))
 (not ($generated@@0 ($generated@@83 ($generated@@501 $generated@@619) $generated@@618))))
 :pattern ( (let (($generated@@619 (type $generated@@618)))
($generated@@83 ($generated@@501 $generated@@619) $generated@@618)))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@71)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@66) (= (type $generated@@623) $generated@@66)) (and (= ($generated@@74 ($generated@@156 $generated@@622 $generated@@623)) $generated@@62) (= ($generated@@620 ($generated@@156 $generated@@622 $generated@@623)) $generated@@64)))
 :pattern ( ($generated@@156 $generated@@622 $generated@@623))
)))
(assert  (and (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@140 (type $generated@@626))))
(= (type ($generated@@624 $generated@@626)) ($generated@@137 $generated@@627)))
 :pattern ( ($generated@@624 $generated@@626))
)) (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@140 (type $generated@@628))))
(= (type ($generated@@625 $generated@@628)) $generated@@629))
 :pattern ( ($generated@@625 $generated@@628))
))))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@631)))
 (=> (= (type $generated@@630) ($generated@@137 $generated@@632)) (and (= ($generated@@624 ($generated@@183 $generated@@630 $generated@@631)) $generated@@630) (= ($generated@@625 ($generated@@183 $generated@@630 $generated@@631)) $generated@@631))))
 :pattern ( ($generated@@183 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@157) (= ($generated@@603 ($generated@@354 $generated@@633)) ($generated@@604 $generated@@633)))
 :pattern ( ($generated@@603 ($generated@@354 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@138) ($generated@@279 $generated@@634 ($generated@@77 0))) (and (= ($generated@@354 ($generated@@294 $generated@@2 $generated@@634)) $generated@@634) ($generated@@153 ($generated@@294 ($generated@@78 $generated@@138 $generated@@4) $generated@@634) ($generated@@77 0))))
 :pattern ( ($generated@@279 $generated@@634 ($generated@@77 0)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@138) (= (type $generated@@636) $generated@@66)) ($generated@@279 $generated@@635 ($generated@@303 $generated@@636))) (and (= ($generated@@354 ($generated@@294 ($generated@@78 $generated@@138 $generated@@4) $generated@@635)) $generated@@635) ($generated@@153 ($generated@@294 ($generated@@78 $generated@@138 $generated@@4) $generated@@635) ($generated@@303 $generated@@636))))
 :pattern ( ($generated@@279 $generated@@635 ($generated@@303 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@138) (= (type $generated@@638) $generated@@66)) ($generated@@279 $generated@@637 ($generated@@308 $generated@@638))) (and (= ($generated@@354 ($generated@@294 ($generated@@78 $generated@@138 $generated@@4) $generated@@637)) $generated@@637) ($generated@@153 ($generated@@294 ($generated@@78 $generated@@138 $generated@@4) $generated@@637) ($generated@@308 $generated@@638))))
 :pattern ( ($generated@@279 $generated@@637 ($generated@@308 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@138) (= (type $generated@@640) $generated@@66)) ($generated@@279 $generated@@639 ($generated@@195 $generated@@640))) (and (= ($generated@@354 ($generated@@294 ($generated@@78 $generated@@138 $generated@@2) $generated@@639)) $generated@@639) ($generated@@153 ($generated@@294 ($generated@@78 $generated@@138 $generated@@2) $generated@@639) ($generated@@195 $generated@@640))))
 :pattern ( ($generated@@279 $generated@@639 ($generated@@195 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@138) (= (type $generated@@642) $generated@@66)) ($generated@@279 $generated@@641 ($generated@@172 $generated@@642))) (and (= ($generated@@354 ($generated@@294 ($generated@@137 $generated@@138) $generated@@641)) $generated@@641) ($generated@@153 ($generated@@294 ($generated@@137 $generated@@138) $generated@@641) ($generated@@172 $generated@@642))))
 :pattern ( ($generated@@279 $generated@@641 ($generated@@172 $generated@@642)))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@66) (= (type $generated@@644) ($generated@@137 $generated@@138))) (or ($generated@@269 $generated@@643 $generated@@644) (and (not (= 0 $generated@@170)) (and ($generated@@153 $generated@@644 ($generated@@172 $generated@@643)) (> ($generated@@184 $generated@@644) 0))))) ($generated@@279 ($generated@@268 $generated@@643 $generated@@644) $generated@@643))
 :pattern ( ($generated@@268 $generated@@643 $generated@@644))
))))
(assert (= ($generated@@74 $generated@@150) $generated@@63))
(assert (= ($generated@@620 $generated@@150) $generated@@65))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ($generated@@647 Int) ) (! (let (($generated@@648 ($generated@@140 (type $generated@@645))))
 (=> (= (type $generated@@645) ($generated@@137 $generated@@648)) (=> (and (and (<= 0 $generated@@646) (<= $generated@@646 $generated@@647)) (< $generated@@647 ($generated@@184 $generated@@645))) (= ($generated@@270 ($generated@@182 $generated@@645 $generated@@646) (- $generated@@647 $generated@@646)) ($generated@@270 $generated@@645 $generated@@647)))))
 :weight 25
 :pattern ( ($generated@@270 $generated@@645 $generated@@647) ($generated@@182 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@649) ($generated@@78 $generated@@138 $generated@@2)) (= (type $generated@@650) $generated@@66)) (= (type $generated@@651) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@649 ($generated@@195 $generated@@650) $generated@@651) (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@138) (< 0 ($generated ($generated@@83 $generated@@649 $generated@@652)))) ($generated@@323 $generated@@652 $generated@@650 $generated@@651))
 :pattern ( ($generated@@83 $generated@@649 $generated@@652))
))))
 :pattern ( ($generated@@76 $generated@@649 ($generated@@195 $generated@@650) $generated@@651))
)))
(assert  (=> (<= 0 $generated@@170) (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) $generated@@66) (= (type $generated@@654) $generated@@136)) (= (type $generated@@655) ($generated@@137 $generated@@138))) (or ($generated@@171 $generated@@653 $generated@@655) (and (not (= 0 $generated@@170)) ($generated@@153 $generated@@655 ($generated@@172 ($generated@@172 $generated@@653)))))) (and (=> (not (= ($generated@@184 $generated@@655) ($generated@@292 0))) ($generated@@171 $generated@@653 ($generated@@182 $generated@@655 ($generated@@292 1)))) (= ($generated@@134 $generated@@653 ($generated@@177 $generated@@654) $generated@@655) (ite (= ($generated@@184 $generated@@655) ($generated@@292 0)) ($generated@@293 $generated@@138) ($generated@@257 ($generated@@294 ($generated@@137 $generated@@138) ($generated@@270 $generated@@655 ($generated@@292 0))) ($generated@@134 $generated@@653 $generated@@654 ($generated@@182 $generated@@655 ($generated@@292 1))))))))
 :pattern ( ($generated@@134 $generated@@653 ($generated@@177 $generated@@654) $generated@@655))
))))
(assert (forall (($generated@@656 T@U) ($generated@@657 Int) ($generated@@658 Int) ) (! (let (($generated@@659 ($generated@@140 (type $generated@@656))))
 (=> (= (type $generated@@656) ($generated@@137 $generated@@659)) (=> (and (and (<= 0 $generated@@657) (<= 0 $generated@@658)) (<= (+ $generated@@657 $generated@@658) ($generated@@184 $generated@@656))) (= ($generated@@182 ($generated@@182 $generated@@656 $generated@@657) $generated@@658) ($generated@@182 $generated@@656 (+ $generated@@657 $generated@@658))))))
 :pattern ( ($generated@@182 ($generated@@182 $generated@@656 $generated@@657) $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) $generated@@157) (= (type $generated@@661) $generated@@66)) (= (type $generated@@662) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@322 $generated@@662) (and ($generated@@155 $generated@@660) (exists (($generated@@663 T@U) ) (!  (and (= (type $generated@@663) $generated@@66) ($generated@@76 $generated@@660 ($generated@@156 $generated@@661 $generated@@663) $generated@@662))
 :pattern ( ($generated@@76 $generated@@660 ($generated@@156 $generated@@661 $generated@@663) $generated@@662))
))))) ($generated@@323 ($generated@@164 $generated@@660) $generated@@661 $generated@@662))
 :pattern ( ($generated@@323 ($generated@@164 $generated@@660) $generated@@661 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) $generated@@157) (= (type $generated@@665) $generated@@66)) (= (type $generated@@666) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@322 $generated@@666) (and ($generated@@155 $generated@@664) (exists (($generated@@667 T@U) ) (!  (and (= (type $generated@@667) $generated@@66) ($generated@@76 $generated@@664 ($generated@@156 $generated@@667 $generated@@665) $generated@@666))
 :pattern ( ($generated@@76 $generated@@664 ($generated@@156 $generated@@667 $generated@@665) $generated@@666))
))))) ($generated@@323 ($generated@@165 $generated@@664) $generated@@665 $generated@@666))
 :pattern ( ($generated@@323 ($generated@@165 $generated@@664) $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 Int) ) (! (let (($generated@@671 ($generated@@140 (type $generated@@668))))
 (=> (and (= (type $generated@@668) ($generated@@137 $generated@@671)) (= (type $generated@@669) ($generated@@137 $generated@@671))) (and (=> (< $generated@@670 ($generated@@184 $generated@@668)) (= ($generated@@270 ($generated@@257 $generated@@668 $generated@@669) $generated@@670) ($generated@@270 $generated@@668 $generated@@670))) (=> (<= ($generated@@184 $generated@@668) $generated@@670) (= ($generated@@270 ($generated@@257 $generated@@668 $generated@@669) $generated@@670) ($generated@@270 $generated@@669 (- $generated@@670 ($generated@@184 $generated@@668))))))))
 :pattern ( ($generated@@270 ($generated@@257 $generated@@668 $generated@@669) $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) (= ($generated@@153 $generated@@672 $generated@@150)  (and (<= ($generated@@292 0) ($generated $generated@@672)) (< ($generated $generated@@672) 4294967296))))
 :pattern ( ($generated@@153 $generated@@672 $generated@@150))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@138) (= (type $generated@@674) $generated@@138)) (= ($generated@@278 ($generated@@291 $generated@@673) ($generated@@291 $generated@@674)) ($generated@@291 ($generated@@278 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@278 ($generated@@291 $generated@@673) ($generated@@291 $generated@@674)))
)))
(assert (forall (($generated@@675 Int) ) (! (= ($generated@@354 ($generated@@8 ($generated@@292 $generated@@675))) ($generated@@291 ($generated@@354 ($generated@@8 $generated@@675))))
 :pattern ( ($generated@@354 ($generated@@8 ($generated@@292 $generated@@675))))
)))
(assert (forall (($generated@@676 T@U) ) (! (= ($generated@@354 ($generated@@291 $generated@@676)) ($generated@@291 ($generated@@354 $generated@@676)))
 :pattern ( ($generated@@354 ($generated@@291 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (! (let (($generated@@678 ($generated@@140 (type $generated@@677))))
 (=> (and (= (type $generated@@677) ($generated@@137 $generated@@678)) (= ($generated@@184 $generated@@677) 0)) (= $generated@@677 ($generated@@293 $generated@@678))))
 :pattern ( ($generated@@184 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 Int) ) (! (let (($generated@@681 ($generated@@140 (type $generated@@679))))
 (=> (and (= (type $generated@@679) ($generated@@137 $generated@@681)) (= $generated@@680 0)) (= ($generated@@256 $generated@@679 $generated@@680) ($generated@@293 $generated@@681))))
 :pattern ( ($generated@@256 $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (! (let (($generated@@685 (type $generated@@683)))
 (=> (and (and (= (type $generated@@682) ($generated@@78 $generated@@685 $generated@@2)) (= (type $generated@@684) $generated@@2)) (<= 0 ($generated $generated@@684))) (= ($generated@@363 ($generated@@84 $generated@@682 $generated@@683 $generated@@684)) (+ (- ($generated@@363 $generated@@682) ($generated ($generated@@83 $generated@@682 $generated@@683))) ($generated $generated@@684)))))
 :pattern ( ($generated@@363 ($generated@@84 $generated@@682 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@687) $generated@@2)) ($generated@@76 $generated@@687 $generated@@46 $generated@@686))
 :pattern ( ($generated@@76 $generated@@687 $generated@@46 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@689) $generated@@3)) ($generated@@76 $generated@@689 $generated@@47 $generated@@688))
 :pattern ( ($generated@@76 $generated@@689 $generated@@47 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@691) $generated@@4)) ($generated@@76 $generated@@691 $generated@@44 $generated@@690))
 :pattern ( ($generated@@76 $generated@@691 $generated@@44 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@693) $generated@@525)) ($generated@@76 $generated@@693 $generated@@45 $generated@@692))
 :pattern ( ($generated@@76 $generated@@693 $generated@@45 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@695) $generated@@138)) ($generated@@76 $generated@@695 $generated@@48 $generated@@694))
 :pattern ( ($generated@@76 $generated@@695 $generated@@48 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) ($generated@@137 $generated@@138)) (= (type $generated@@697) $generated@@66)) (= ($generated@@153 $generated@@696 ($generated@@172 $generated@@697)) (forall (($generated@@698 Int) ) (!  (=> (and (<= 0 $generated@@698) (< $generated@@698 ($generated@@184 $generated@@696))) ($generated@@279 ($generated@@270 $generated@@696 $generated@@698) $generated@@697))
 :pattern ( ($generated@@270 $generated@@696 $generated@@698))
))))
 :pattern ( ($generated@@153 $generated@@696 ($generated@@172 $generated@@697)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 Int) ) (!  (=> (= (type $generated@@699) ($generated@@137 $generated@@138)) (=> (and (<= 0 $generated@@700) (< $generated@@700 ($generated@@184 $generated@@699))) (< ($generated@@604 ($generated@@294 $generated@@157 ($generated@@270 $generated@@699 $generated@@700))) ($generated@@340 $generated@@699))))
 :pattern ( ($generated@@604 ($generated@@294 $generated@@157 ($generated@@270 $generated@@699 $generated@@700))))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) ($generated@@371 $generated@@138 $generated@@138)) (= (type $generated@@702) $generated@@66)) (= (type $generated@@703) $generated@@66)) ($generated@@153 $generated@@701 ($generated@@479 $generated@@702 $generated@@703))) (and (and ($generated@@153 ($generated@@369 $generated@@701) ($generated@@303 $generated@@702)) ($generated@@153 ($generated@@422 $generated@@701) ($generated@@303 $generated@@703))) ($generated@@153 ($generated@@453 $generated@@701) ($generated@@303 ($generated@@156 $generated@@702 $generated@@703)))))
 :pattern ( ($generated@@153 $generated@@701 ($generated@@479 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) ($generated@@389 $generated@@138 $generated@@138)) (= (type $generated@@705) $generated@@66)) (= (type $generated@@706) $generated@@66)) ($generated@@153 $generated@@704 ($generated@@487 $generated@@705 $generated@@706))) (and (and ($generated@@153 ($generated@@387 $generated@@704) ($generated@@308 $generated@@705)) ($generated@@153 ($generated@@433 $generated@@704) ($generated@@308 $generated@@706))) ($generated@@153 ($generated@@461 $generated@@704) ($generated@@308 ($generated@@156 $generated@@705 $generated@@706)))))
 :pattern ( ($generated@@153 $generated@@704 ($generated@@487 $generated@@705 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@2) ($generated@@153 $generated@@707 $generated@@46))
 :pattern ( ($generated@@153 $generated@@707 $generated@@46))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@3) ($generated@@153 $generated@@708 $generated@@47))
 :pattern ( ($generated@@153 $generated@@708 $generated@@47))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@4) ($generated@@153 $generated@@709 $generated@@44))
 :pattern ( ($generated@@153 $generated@@709 $generated@@44))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@525) ($generated@@153 $generated@@710 $generated@@45))
 :pattern ( ($generated@@153 $generated@@710 $generated@@45))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@138) ($generated@@153 $generated@@711 $generated@@48))
 :pattern ( ($generated@@153 $generated@@711 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 (T@U) Bool)
(declare-fun $generated@@719 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@712) ($generated@@202 $generated@@79 $generated@@4)) (= (type $generated@@713) $generated@@79)) (= (type $generated@@714) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@715) ($generated@@137 $generated@@138))) (= (type $generated@@716) ($generated@@137 $generated@@138))) (= (type $generated@@717) ($generated@@137 $generated@@138))) (= (type $generated@@719) ($generated@@137 $generated@@138))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@720  (=> (= $generated@@712 ($generated@@201 $generated@@713 $generated@@714 $generated@@60 false)) (=> (and (= $generated@@715 ($generated@@257 $generated@@716 ($generated@@183 ($generated@@293 $generated@@138) ($generated@@354 $generated@@717)))) ($generated@@76 $generated@@715 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@714)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (> ($generated@@184 $generated@@715) 0)) (=> (and ($generated@@269 ($generated@@172 $generated@@150) $generated@@715) ($generated@@269 ($generated@@172 $generated@@150) $generated@@715)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@335 ($generated@@294 ($generated@@137 $generated@@138) ($generated@@268 ($generated@@172 $generated@@150) $generated@@715)) $generated@@717)) (=> ($generated@@335 ($generated@@294 ($generated@@137 $generated@@138) ($generated@@268 ($generated@@172 $generated@@150) $generated@@715)) $generated@@717) (=> ($generated@@76 $generated@@716 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@714) (=> (and ($generated@@171 $generated@@150 $generated@@716) ($generated@@76 $generated@@715 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@714)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> ($generated@@184 $generated@@715) 0)) (=> ($generated@@269 ($generated@@172 $generated@@150) $generated@@715) (=> (and ($generated@@76 $generated@@716 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@714) ($generated@@171 $generated@@150 $generated@@716)) (=> (and (and (and ($generated@@171 $generated@@150 $generated@@716) ($generated@@269 ($generated@@172 $generated@@150) $generated@@715)) ($generated@@171 $generated@@150 $generated@@716)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@335 ($generated@@257 ($generated@@134 $generated@@150 ($generated@@177 ($generated@@177 $generated@@139)) $generated@@716) ($generated@@294 ($generated@@137 $generated@@138) ($generated@@268 ($generated@@172 $generated@@150) $generated@@715))) ($generated@@257 ($generated@@134 $generated@@150 ($generated@@177 ($generated@@177 $generated@@139)) $generated@@716) $generated@@717))))))))))))))))
(let (($generated@@721  (=> (and ($generated@@322 $generated@@714) ($generated@@718 $generated@@714)) (=> (and (and ($generated@@153 $generated@@716 ($generated@@172 ($generated@@172 $generated@@150))) ($generated@@76 $generated@@716 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@714)) (and ($generated@@153 $generated@@717 ($generated@@172 $generated@@150)) ($generated@@76 $generated@@717 ($generated@@172 $generated@@150) $generated@@714))) (=> (and (and (and ($generated@@153 $generated@@719 ($generated@@172 ($generated@@172 $generated@@150))) ($generated@@76 $generated@@719 ($generated@@172 ($generated@@172 $generated@@150)) $generated@@714)) true) (and (= 1 $generated@@170) (= (ControlFlow 0 6) 2))) $generated@@720)))))
$generated@@721)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@U Int) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@322 (T@T T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@417 () Int)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) Bool)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@485 (T@U T@U) T@U)
(declare-fun $generated@@486 (T@U T@U) Bool)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert  (and (and (forall (($generated@@257 T@T) ) (= ($generated@@1 ($generated@@254 $generated@@257)) 17)) (forall (($generated@@258 T@T) ) (! (= ($generated@@253 ($generated@@254 $generated@@258)) $generated@@258)
 :pattern ( ($generated@@254 $generated@@258))
))) (forall (($generated@@259 T@U) ($generated@@260 Int) ) (! (let (($generated@@261 ($generated@@253 (type $generated@@259))))
(= (type ($generated@@256 $generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@256 $generated@@259 $generated@@260))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@253 (type $generated@@262))))
 (=> (and (= (type $generated@@262) ($generated@@254 $generated@@264)) (= (type $generated@@263) ($generated@@254 $generated@@264))) (= ($generated@@252 $generated@@262 $generated@@263)  (and (= ($generated@@255 $generated@@262) ($generated@@255 $generated@@263)) (forall (($generated@@265 Int) ) (!  (=> (and (<= 0 $generated@@265) (< $generated@@265 ($generated@@255 $generated@@262))) (= ($generated@@256 $generated@@262 $generated@@265) ($generated@@256 $generated@@263 $generated@@265)))
 :pattern ( ($generated@@256 $generated@@262 $generated@@265))
 :pattern ( ($generated@@256 $generated@@263 $generated@@265))
))))))
 :pattern ( ($generated@@252 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@141) ($generated@@139 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@150) (= (type $generated@@268) $generated@@150)) (= $generated@@266 ($generated@@216 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@139 $generated@@266))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@254 $generated@@270))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@255 ($generated@@269 $generated@@271)) 0)
 :pattern ( ($generated@@269 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@150)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@66) (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@76 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@243 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@78 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@81 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@78 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@83 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 18)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@78 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@83 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@83 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@78 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@81 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@78 $generated@@320 $generated@@2)) (= ($generated@@156 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (and (<= 0 ($generated ($generated@@83 $generated@@319 $generated@@321))) (<= ($generated ($generated@@83 $generated@@319 $generated@@321)) ($generated@@277 $generated@@319))))
 :pattern ( ($generated@@83 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@156 $generated@@319))
)))
(assert (forall (($generated@@323 T@T) ($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@322 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@150) ($generated@@217 $generated@@325 $generated@@134)) (and (= ($generated@@272 ($generated@@322 $generated@@2 $generated@@325)) $generated@@325) ($generated@@137 ($generated@@322 $generated@@2 $generated@@325) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@325 $generated@@134))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@287 (type $generated@@326))))
(let (($generated@@328 ($generated@@286 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@285 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@284 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@83 ($generated@@283 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@283 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@287 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@78 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@287 (type $generated@@333))))
(let (($generated@@335 ($generated@@286 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@285 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@284 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@83 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@305 (type $generated@@337))))
(let (($generated@@339 ($generated@@304 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@303 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@302 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@301 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@305 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@78 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@305 (type $generated@@344))))
(let (($generated@@346 ($generated@@304 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@303 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@302 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@349) $generated@@66)) (= ($generated@@137 $generated@@348 ($generated@@155 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@348 $generated@@350)))) ($generated@@217 $generated@@350 $generated@@349))
 :pattern ( ($generated@@83 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@137 $generated@@348 ($generated@@155 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@352) $generated@@66)) (= (type $generated@@353) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@351 ($generated@@226 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@150) ($generated@@0 ($generated@@83 $generated@@351 $generated@@354))) ($generated@@243 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@83 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@76 $generated@@351 ($generated@@226 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@231 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@150) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@243 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@231 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@83 ($generated@@278 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@83 ($generated@@278 $generated@@360) $generated@@359)))
)))
(assert  (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@363)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@361 $generated@@363))
)) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@287 (type $generated@@364))))
(let (($generated@@366 ($generated@@286 (type $generated@@364))))
(= (type ($generated@@362 $generated@@364)) ($generated@@78 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@362 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@285 $generated@@150 $generated@@150)) (= (type $generated@@368) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@361 $generated@@367) $generated@@368))  (and ($generated@@0 ($generated@@83 ($generated@@283 $generated@@367) ($generated@@148 ($generated@@322 $generated@@141 $generated@@368)))) (= ($generated@@83 ($generated@@362 $generated@@367) ($generated@@148 ($generated@@322 $generated@@141 $generated@@368))) ($generated@@149 ($generated@@322 $generated@@141 $generated@@368))))))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@367) $generated@@368))
)))
(assert  (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@369 $generated@@371))
)) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@305 (type $generated@@372))))
(let (($generated@@374 ($generated@@304 (type $generated@@372))))
(= (type ($generated@@370 $generated@@372)) ($generated@@78 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@376) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@369 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@375) ($generated@@148 ($generated@@322 $generated@@141 $generated@@376)))) (= ($generated@@83 ($generated@@370 $generated@@375) ($generated@@148 ($generated@@322 $generated@@141 $generated@@376))) ($generated@@149 ($generated@@322 $generated@@141 $generated@@376))))))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(let (($generated@@380 ($generated@@286 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@285 $generated@@380 $generated@@379)) (= ($generated@@0 ($generated@@83 ($generated@@330 $generated@@377) $generated@@378)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) (and ($generated@@0 ($generated@@83 ($generated@@283 $generated@@377) $generated@@381)) (= $generated@@378 ($generated@@83 ($generated@@362 $generated@@377) $generated@@381))))
 :pattern ( ($generated@@83 ($generated@@283 $generated@@377) $generated@@381))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@377) $generated@@381))
))))))
 :pattern ( ($generated@@83 ($generated@@330 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@304 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@303 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@83 ($generated@@341 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@83 ($generated@@370 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@382) $generated@@386))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@66)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@285 $generated@@150 $generated@@150)) (= (type $generated@@391) $generated@@66)) (= (type $generated@@392) $generated@@66)) (= (type $generated@@393) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@283 $generated@@390) $generated@@394))) (and ($generated@@243 ($generated@@83 ($generated@@362 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@243 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@390) $generated@@394))
 :pattern ( ($generated@@83 ($generated@@283 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@76 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@66)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@399) $generated@@66)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@398) $generated@@402))) (and ($generated@@243 ($generated@@83 ($generated@@370 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@243 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@398) $generated@@402))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@76 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@253 (type $generated@@403))))
 (=> (and (and (= (type $generated@@403) ($generated@@254 $generated@@405)) (= (type $generated@@404) ($generated@@254 $generated@@405))) ($generated@@252 $generated@@403 $generated@@404)) (= $generated@@403 $generated@@404)))
 :pattern ( ($generated@@252 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@78 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@305 (type $generated@@408))))
(let (($generated@@410 ($generated@@304 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@303 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@302 $generated@@410 $generated@@409)) (= ($generated@@301 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@301 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@305 (type $generated@@411))))
(let (($generated@@413 ($generated@@304 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@303 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@302 $generated@@413 $generated@@412)) (= ($generated@@341 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@341 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@305 (type $generated@@414))))
(let (($generated@@416 ($generated@@304 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@303 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@302 $generated@@416 $generated@@415)) (= ($generated@@369 $generated@@414) ($generated@@406 $generated@@150))))))
 :pattern ( ($generated@@369 $generated@@414))
)))
(assert  (and (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@418 $generated@@421 $generated@@422)) ($generated@@254 $generated@@150))
 :pattern ( ($generated@@418 $generated@@421 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (= (type ($generated@@420 $generated@@423)) $generated@@66)
 :pattern ( ($generated@@420 $generated@@423))
))))
(assert  (=> (<= 0 $generated@@417) (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@424) $generated@@66) (= (type $generated@@425) ($generated@@254 $generated@@150))) (or ($generated@@419 $generated@@424 $generated@@425) (and (not (= 0 $generated@@417)) ($generated@@137 $generated@@425 ($generated@@420 $generated@@424))))) ($generated@@137 ($generated@@418 $generated@@424 $generated@@425) ($generated@@420 $generated@@424)))
 :pattern ( ($generated@@418 $generated@@424 $generated@@425))
))))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@287 (type $generated@@426))))
(let (($generated@@428 ($generated@@286 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@285 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@284 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@150) (= (type $generated@@430) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@361 $generated@@426) ($generated@@272 ($generated@@216 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@361 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@305 (type $generated@@431))))
(let (($generated@@433 ($generated@@304 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@303 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@302 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@150) (= (type $generated@@435) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@369 $generated@@431) ($generated@@272 ($generated@@216 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@369 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@150) ($generated@@217 $generated@@436 $generated@@46)) (and (= ($generated@@272 ($generated@@322 $generated@@2 $generated@@436)) $generated@@436) ($generated@@137 ($generated@@322 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@150) ($generated@@217 $generated@@437 $generated@@47)) (and (= ($generated@@272 ($generated@@322 $generated@@3 $generated@@437)) $generated@@437) ($generated@@137 ($generated@@322 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@150) ($generated@@217 $generated@@438 $generated@@44)) (and (= ($generated@@272 ($generated@@322 $generated@@4 $generated@@438)) $generated@@438) ($generated@@137 ($generated@@322 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@150) ($generated@@217 $generated@@440 $generated@@45)) (and (= ($generated@@272 ($generated@@322 $generated@@439 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@322 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@66) (= ($generated@@217 ($generated@@272 $generated@@441) $generated@@442) ($generated@@137 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@217 ($generated@@272 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@81 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@78 $generated@@444 $generated@@2)) (<= 0 ($generated@@277 $generated@@443))))
 :pattern ( ($generated@@277 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@253 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@254 $generated@@446)) (<= 0 ($generated@@255 $generated@@445))))
 :pattern ( ($generated@@255 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@387 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@387 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@387 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@387 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@387 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@387 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@395 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@395 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@395 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@395 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@74 ($generated@@395 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@395 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@150) (= (type $generated@@468) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@216 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@140 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@140 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@140 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@140 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@150) (= (type $generated@@478) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@216 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@150) (= (type $generated@@480) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@216 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@254 $generated@@150)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@420 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@255 $generated@@481))) ($generated@@243 ($generated@@256 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@256 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@420 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (! (= (type ($generated@@485 $generated@@487 $generated@@488)) ($generated@@254 $generated@@150))
 :pattern ( ($generated@@485 $generated@@487 $generated@@488))
)))
(assert  (=> (<= 0 $generated@@417) (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@489) $generated@@66) (= (type $generated@@490) ($generated@@254 $generated@@150))) (or ($generated@@486 $generated@@489 $generated@@490) (and (not (= 0 $generated@@417)) ($generated@@137 $generated@@490 ($generated@@420 ($generated@@420 $generated@@489)))))) ($generated@@137 ($generated@@485 $generated@@489 $generated@@490) ($generated@@420 $generated@@489)))
 :pattern ( ($generated@@485 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@77 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@77 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@493 ($generated@@226 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@226 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@231 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@231 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@155 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@155 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@420 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@420 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@420 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@420 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@322 $generated@@510 ($generated@@272 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@272 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@285 $generated@@150 $generated@@150)) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) $generated@@66)) (= ($generated@@137 $generated@@511 ($generated@@387 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@283 $generated@@511) $generated@@514))) (and ($generated@@217 ($generated@@83 ($generated@@362 $generated@@511) $generated@@514) $generated@@513) ($generated@@217 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@511) $generated@@514))
 :pattern ( ($generated@@83 ($generated@@283 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@137 $generated@@511 ($generated@@387 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@516) $generated@@66)) (= (type $generated@@517) $generated@@66)) (= ($generated@@137 $generated@@515 ($generated@@395 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@515) $generated@@518))) (and ($generated@@217 ($generated@@83 ($generated@@370 $generated@@515) $generated@@518) $generated@@517) ($generated@@217 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@515) $generated@@518))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@137 $generated@@515 ($generated@@395 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@150) (= (type $generated@@522) $generated@@150)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@216 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@216 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@150) (= (type $generated@@524) $generated@@150)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@216 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@216 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@387 $generated@@526 $generated@@527))) (and (= ($generated@@272 ($generated@@322 ($generated@@285 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@322 ($generated@@285 $generated@@150 $generated@@150) $generated@@525) ($generated@@387 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@387 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@150) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) ($generated@@217 $generated@@528 ($generated@@395 $generated@@529 $generated@@530))) (and (= ($generated@@272 ($generated@@322 ($generated@@303 $generated@@150 $generated@@150) $generated@@528)) $generated@@528) ($generated@@137 ($generated@@322 ($generated@@303 $generated@@150 $generated@@150) $generated@@528) ($generated@@395 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@217 $generated@@528 ($generated@@395 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= (type $generated@@533) $generated@@150)) ($generated@@217 $generated@@533 ($generated@@140 $generated@@531 $generated@@532))) (and (= ($generated@@272 ($generated@@322 $generated@@141 $generated@@533)) $generated@@533) ($generated@@137 ($generated@@322 $generated@@141 $generated@@533) ($generated@@140 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@217 $generated@@533 ($generated@@140 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@83 ($generated@@406 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@83 ($generated@@406 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@538 $generated@@539)) $generated@@62) (= ($generated@@536 ($generated@@140 $generated@@538 $generated@@539)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@141) (= ($generated@@519 ($generated@@272 $generated@@540)) ($generated@@520 $generated@@540)))
 :pattern ( ($generated@@519 ($generated@@272 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@150) ($generated@@217 $generated@@541 ($generated@@77 0))) (and (= ($generated@@272 ($generated@@322 $generated@@2 $generated@@541)) $generated@@541) ($generated@@137 ($generated@@322 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@77 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@226 $generated@@543))) (and (= ($generated@@272 ($generated@@322 ($generated@@78 $generated@@150 $generated@@4) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@322 ($generated@@78 $generated@@150 $generated@@4) $generated@@542) ($generated@@226 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@226 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@150) (= (type $generated@@545) $generated@@66)) ($generated@@217 $generated@@544 ($generated@@231 $generated@@545))) (and (= ($generated@@272 ($generated@@322 ($generated@@78 $generated@@150 $generated@@4) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@322 ($generated@@78 $generated@@150 $generated@@4) $generated@@544) ($generated@@231 $generated@@545))))
 :pattern ( ($generated@@217 $generated@@544 ($generated@@231 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@66)) ($generated@@217 $generated@@546 ($generated@@155 $generated@@547))) (and (= ($generated@@272 ($generated@@322 ($generated@@78 $generated@@150 $generated@@2) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@322 ($generated@@78 $generated@@150 $generated@@2) $generated@@546) ($generated@@155 $generated@@547))))
 :pattern ( ($generated@@217 $generated@@546 ($generated@@155 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@150) (= (type $generated@@549) $generated@@66)) ($generated@@217 $generated@@548 ($generated@@420 $generated@@549))) (and (= ($generated@@272 ($generated@@322 ($generated@@254 $generated@@150) $generated@@548)) $generated@@548) ($generated@@137 ($generated@@322 ($generated@@254 $generated@@150) $generated@@548) ($generated@@420 $generated@@549))))
 :pattern ( ($generated@@217 $generated@@548 ($generated@@420 $generated@@549)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@536 $generated@@134) $generated@@65))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@550 $generated@@553)))) ($generated@@243 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@83 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@141) (= (type $generated@@555) $generated@@66)) (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@556) (and ($generated@@139 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@66) ($generated@@76 $generated@@554 ($generated@@140 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@76 $generated@@554 ($generated@@140 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@243 ($generated@@148 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@141) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@560) (and ($generated@@139 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@66) ($generated@@76 $generated@@558 ($generated@@140 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@76 $generated@@558 ($generated@@140 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@243 ($generated@@149 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@2) (= ($generated@@137 $generated@@562 $generated@@134)  (and (<= ($generated@@236 0) ($generated $generated@@562)) (< ($generated $generated@@562) 4294967296))))
 :pattern ( ($generated@@137 $generated@@562 $generated@@134))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@150) (= (type $generated@@564) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@563) ($generated@@238 $generated@@564)) ($generated@@238 ($generated@@216 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@563) ($generated@@238 $generated@@564)))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@272 ($generated@@8 ($generated@@236 $generated@@565))) ($generated@@238 ($generated@@272 ($generated@@8 $generated@@565))))
 :pattern ( ($generated@@272 ($generated@@8 ($generated@@236 $generated@@565))))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@272 ($generated@@238 $generated@@566)) ($generated@@238 ($generated@@272 $generated@@566)))
 :pattern ( ($generated@@272 ($generated@@238 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@253 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@254 $generated@@568)) (= ($generated@@255 $generated@@567) 0)) (= $generated@@567 ($generated@@269 $generated@@568))))
 :pattern ( ($generated@@255 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@78 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@277 ($generated@@84 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@277 $generated@@569) ($generated ($generated@@83 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@277 ($generated@@84 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@2)) ($generated@@76 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@3)) ($generated@@76 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@578) $generated@@4)) ($generated@@76 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@76 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@439)) ($generated@@76 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@582) $generated@@150)) ($generated@@76 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@76 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@254 $generated@@150)) (= (type $generated@@584) $generated@@66)) (= ($generated@@137 $generated@@583 ($generated@@420 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@255 $generated@@583))) ($generated@@217 ($generated@@256 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@256 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@137 $generated@@583 ($generated@@420 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@254 $generated@@150)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@255 $generated@@587))) (< ($generated@@520 ($generated@@322 $generated@@141 ($generated@@256 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@520 ($generated@@322 $generated@@141 ($generated@@256 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@285 $generated@@150 $generated@@150)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) ($generated@@137 $generated@@589 ($generated@@387 $generated@@590 $generated@@591))) (and (and ($generated@@137 ($generated@@283 $generated@@589) ($generated@@226 $generated@@590)) ($generated@@137 ($generated@@330 $generated@@589) ($generated@@226 $generated@@591))) ($generated@@137 ($generated@@361 $generated@@589) ($generated@@226 ($generated@@140 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@137 $generated@@589 ($generated@@387 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@593) $generated@@66)) (= (type $generated@@594) $generated@@66)) ($generated@@137 $generated@@592 ($generated@@395 $generated@@593 $generated@@594))) (and (and ($generated@@137 ($generated@@301 $generated@@592) ($generated@@231 $generated@@593)) ($generated@@137 ($generated@@341 $generated@@592) ($generated@@231 $generated@@594))) ($generated@@137 ($generated@@369 $generated@@592) ($generated@@231 ($generated@@140 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@137 $generated@@592 ($generated@@395 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@137 $generated@@595 $generated@@46))
 :pattern ( ($generated@@137 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@137 $generated@@596 $generated@@47))
 :pattern ( ($generated@@137 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@137 $generated@@597 $generated@@44))
 :pattern ( ($generated@@137 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@439) ($generated@@137 $generated@@598 $generated@@45))
 :pattern ( ($generated@@137 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@150) ($generated@@137 $generated@@599 $generated@@48))
 :pattern ( ($generated@@137 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@600) ($generated@@254 $generated@@150)) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@602) $generated@@66)) (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@605) ($generated@@254 $generated@@150))) (= (type $generated@@606) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@607) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@608 true))
(let (($generated@@609  (=> (and ($generated@@76 $generated@@600 ($generated@@420 ($generated@@420 $generated@@134)) $generated@@601) ($generated@@486 $generated@@134 $generated@@600)) (=> (and (and ($generated@@486 $generated@@134 $generated@@600) (= $generated@@602 $generated@@134)) (and ($generated@@242 $generated@@603) ($generated@@604 $generated@@603))) (=> (and (and (and (and ($generated@@486 $generated@@602 $generated@@600) (and ($generated@@419 ($generated@@420 $generated@@602) $generated@@600) ($generated@@486 $generated@@602 ($generated@@418 ($generated@@420 $generated@@602) $generated@@600)))) ($generated@@252 ($generated@@485 $generated@@602 $generated@@600) ($generated@@485 $generated@@602 ($generated@@418 ($generated@@420 $generated@@602) $generated@@600)))) (and (= $generated@@601 $generated@@603) ($generated@@76 $generated@@600 ($generated@@420 ($generated@@420 $generated@@134)) $generated@@603))) (and (and (and ($generated@@419 ($generated@@420 $generated@@134) $generated@@600) (= $generated@@605 ($generated@@418 ($generated@@420 $generated@@134) $generated@@600))) (and ($generated@@76 $generated@@605 ($generated@@420 ($generated@@420 $generated@@134)) $generated@@603) ($generated@@486 $generated@@134 ($generated@@418 ($generated@@420 $generated@@134) $generated@@600)))) (and (and ($generated@@419 ($generated@@420 $generated@@134) $generated@@600) ($generated@@486 $generated@@134 ($generated@@418 ($generated@@420 $generated@@134) $generated@@600))) (= (ControlFlow 0 3) (- 0 2))))) ($generated@@252 ($generated@@485 $generated@@134 $generated@@600) ($generated@@485 $generated@@134 ($generated@@418 ($generated@@420 $generated@@134) $generated@@600))))))))
(let (($generated@@610 true))
(let (($generated@@611  (=> (= $generated@@606 ($generated@@161 $generated@@607 $generated@@601 $generated@@60 false)) (and (and (=> (= (ControlFlow 0 5) 1) $generated@@610) (=> (= (ControlFlow 0 5) 3) $generated@@609)) (=> (= (ControlFlow 0 5) 4) $generated@@608)))))
(let (($generated@@612  (=> (and ($generated@@242 $generated@@601) ($generated@@604 $generated@@601)) (=> (and (and ($generated@@137 $generated@@600 ($generated@@420 ($generated@@420 $generated@@134))) ($generated@@76 $generated@@600 ($generated@@420 ($generated@@420 $generated@@134)) $generated@@601)) (and (= 2 $generated@@417) (= (ControlFlow 0 6) 5))) $generated@@611))))
$generated@@612))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@U Int) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@322 (T@T T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@417 () Int)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) Bool)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@485 (T@U T@U) T@U)
(declare-fun $generated@@486 (T@U T@U) Bool)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert  (and (and (forall (($generated@@257 T@T) ) (= ($generated@@1 ($generated@@254 $generated@@257)) 17)) (forall (($generated@@258 T@T) ) (! (= ($generated@@253 ($generated@@254 $generated@@258)) $generated@@258)
 :pattern ( ($generated@@254 $generated@@258))
))) (forall (($generated@@259 T@U) ($generated@@260 Int) ) (! (let (($generated@@261 ($generated@@253 (type $generated@@259))))
(= (type ($generated@@256 $generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@256 $generated@@259 $generated@@260))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@253 (type $generated@@262))))
 (=> (and (= (type $generated@@262) ($generated@@254 $generated@@264)) (= (type $generated@@263) ($generated@@254 $generated@@264))) (= ($generated@@252 $generated@@262 $generated@@263)  (and (= ($generated@@255 $generated@@262) ($generated@@255 $generated@@263)) (forall (($generated@@265 Int) ) (!  (=> (and (<= 0 $generated@@265) (< $generated@@265 ($generated@@255 $generated@@262))) (= ($generated@@256 $generated@@262 $generated@@265) ($generated@@256 $generated@@263 $generated@@265)))
 :pattern ( ($generated@@256 $generated@@262 $generated@@265))
 :pattern ( ($generated@@256 $generated@@263 $generated@@265))
))))))
 :pattern ( ($generated@@252 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@141) ($generated@@139 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@150) (= (type $generated@@268) $generated@@150)) (= $generated@@266 ($generated@@216 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@139 $generated@@266))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@254 $generated@@270))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@255 ($generated@@269 $generated@@271)) 0)
 :pattern ( ($generated@@269 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@150)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@66) (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@76 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@243 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@78 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@81 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@78 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@83 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 18)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@78 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@83 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@83 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@78 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@81 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@78 $generated@@320 $generated@@2)) (= ($generated@@156 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (and (<= 0 ($generated ($generated@@83 $generated@@319 $generated@@321))) (<= ($generated ($generated@@83 $generated@@319 $generated@@321)) ($generated@@277 $generated@@319))))
 :pattern ( ($generated@@83 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@156 $generated@@319))
)))
(assert (forall (($generated@@323 T@T) ($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@322 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@150) ($generated@@217 $generated@@325 $generated@@134)) (and (= ($generated@@272 ($generated@@322 $generated@@2 $generated@@325)) $generated@@325) ($generated@@137 ($generated@@322 $generated@@2 $generated@@325) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@325 $generated@@134))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@287 (type $generated@@326))))
(let (($generated@@328 ($generated@@286 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@285 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@284 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@83 ($generated@@283 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@283 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@287 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@78 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@287 (type $generated@@333))))
(let (($generated@@335 ($generated@@286 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@285 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@284 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@83 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@305 (type $generated@@337))))
(let (($generated@@339 ($generated@@304 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@303 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@302 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@301 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@305 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@78 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@305 (type $generated@@344))))
(let (($generated@@346 ($generated@@304 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@303 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@302 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@349) $generated@@66)) (= ($generated@@137 $generated@@348 ($generated@@155 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@348 $generated@@350)))) ($generated@@217 $generated@@350 $generated@@349))
 :pattern ( ($generated@@83 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@137 $generated@@348 ($generated@@155 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@352) $generated@@66)) (= (type $generated@@353) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@351 ($generated@@226 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@150) ($generated@@0 ($generated@@83 $generated@@351 $generated@@354))) ($generated@@243 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@83 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@76 $generated@@351 ($generated@@226 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@231 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@150) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@243 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@231 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@83 ($generated@@278 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@83 ($generated@@278 $generated@@360) $generated@@359)))
)))
(assert  (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@363)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@361 $generated@@363))
)) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@287 (type $generated@@364))))
(let (($generated@@366 ($generated@@286 (type $generated@@364))))
(= (type ($generated@@362 $generated@@364)) ($generated@@78 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@362 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@285 $generated@@150 $generated@@150)) (= (type $generated@@368) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@361 $generated@@367) $generated@@368))  (and ($generated@@0 ($generated@@83 ($generated@@283 $generated@@367) ($generated@@148 ($generated@@322 $generated@@141 $generated@@368)))) (= ($generated@@83 ($generated@@362 $generated@@367) ($generated@@148 ($generated@@322 $generated@@141 $generated@@368))) ($generated@@149 ($generated@@322 $generated@@141 $generated@@368))))))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@367) $generated@@368))
)))
(assert  (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@369 $generated@@371))
)) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@305 (type $generated@@372))))
(let (($generated@@374 ($generated@@304 (type $generated@@372))))
(= (type ($generated@@370 $generated@@372)) ($generated@@78 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@376) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@369 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@375) ($generated@@148 ($generated@@322 $generated@@141 $generated@@376)))) (= ($generated@@83 ($generated@@370 $generated@@375) ($generated@@148 ($generated@@322 $generated@@141 $generated@@376))) ($generated@@149 ($generated@@322 $generated@@141 $generated@@376))))))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(let (($generated@@380 ($generated@@286 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@285 $generated@@380 $generated@@379)) (= ($generated@@0 ($generated@@83 ($generated@@330 $generated@@377) $generated@@378)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) (and ($generated@@0 ($generated@@83 ($generated@@283 $generated@@377) $generated@@381)) (= $generated@@378 ($generated@@83 ($generated@@362 $generated@@377) $generated@@381))))
 :pattern ( ($generated@@83 ($generated@@283 $generated@@377) $generated@@381))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@377) $generated@@381))
))))))
 :pattern ( ($generated@@83 ($generated@@330 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@304 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@303 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@83 ($generated@@341 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@83 ($generated@@370 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@382) $generated@@386))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@66)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@285 $generated@@150 $generated@@150)) (= (type $generated@@391) $generated@@66)) (= (type $generated@@392) $generated@@66)) (= (type $generated@@393) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@283 $generated@@390) $generated@@394))) (and ($generated@@243 ($generated@@83 ($generated@@362 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@243 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@390) $generated@@394))
 :pattern ( ($generated@@83 ($generated@@283 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@76 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@66)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@399) $generated@@66)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@398) $generated@@402))) (and ($generated@@243 ($generated@@83 ($generated@@370 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@243 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@398) $generated@@402))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@76 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@253 (type $generated@@403))))
 (=> (and (and (= (type $generated@@403) ($generated@@254 $generated@@405)) (= (type $generated@@404) ($generated@@254 $generated@@405))) ($generated@@252 $generated@@403 $generated@@404)) (= $generated@@403 $generated@@404)))
 :pattern ( ($generated@@252 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@78 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@305 (type $generated@@408))))
(let (($generated@@410 ($generated@@304 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@303 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@302 $generated@@410 $generated@@409)) (= ($generated@@301 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@301 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@305 (type $generated@@411))))
(let (($generated@@413 ($generated@@304 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@303 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@302 $generated@@413 $generated@@412)) (= ($generated@@341 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@341 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@305 (type $generated@@414))))
(let (($generated@@416 ($generated@@304 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@303 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@302 $generated@@416 $generated@@415)) (= ($generated@@369 $generated@@414) ($generated@@406 $generated@@150))))))
 :pattern ( ($generated@@369 $generated@@414))
)))
(assert  (and (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@418 $generated@@421 $generated@@422)) ($generated@@254 $generated@@150))
 :pattern ( ($generated@@418 $generated@@421 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (= (type ($generated@@420 $generated@@423)) $generated@@66)
 :pattern ( ($generated@@420 $generated@@423))
))))
(assert  (=> (<= 0 $generated@@417) (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@424) $generated@@66) (= (type $generated@@425) ($generated@@254 $generated@@150))) (or ($generated@@419 $generated@@424 $generated@@425) (and (not (= 0 $generated@@417)) ($generated@@137 $generated@@425 ($generated@@420 $generated@@424))))) ($generated@@137 ($generated@@418 $generated@@424 $generated@@425) ($generated@@420 $generated@@424)))
 :pattern ( ($generated@@418 $generated@@424 $generated@@425))
))))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@287 (type $generated@@426))))
(let (($generated@@428 ($generated@@286 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@285 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@284 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@150) (= (type $generated@@430) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@361 $generated@@426) ($generated@@272 ($generated@@216 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@361 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@305 (type $generated@@431))))
(let (($generated@@433 ($generated@@304 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@303 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@302 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@150) (= (type $generated@@435) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@369 $generated@@431) ($generated@@272 ($generated@@216 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@369 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@150) ($generated@@217 $generated@@436 $generated@@46)) (and (= ($generated@@272 ($generated@@322 $generated@@2 $generated@@436)) $generated@@436) ($generated@@137 ($generated@@322 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@150) ($generated@@217 $generated@@437 $generated@@47)) (and (= ($generated@@272 ($generated@@322 $generated@@3 $generated@@437)) $generated@@437) ($generated@@137 ($generated@@322 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@150) ($generated@@217 $generated@@438 $generated@@44)) (and (= ($generated@@272 ($generated@@322 $generated@@4 $generated@@438)) $generated@@438) ($generated@@137 ($generated@@322 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@150) ($generated@@217 $generated@@440 $generated@@45)) (and (= ($generated@@272 ($generated@@322 $generated@@439 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@322 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@66) (= ($generated@@217 ($generated@@272 $generated@@441) $generated@@442) ($generated@@137 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@217 ($generated@@272 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@81 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@78 $generated@@444 $generated@@2)) (<= 0 ($generated@@277 $generated@@443))))
 :pattern ( ($generated@@277 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@253 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@254 $generated@@446)) (<= 0 ($generated@@255 $generated@@445))))
 :pattern ( ($generated@@255 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@387 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@387 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@387 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@387 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@387 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@387 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@395 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@395 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@395 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@395 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@74 ($generated@@395 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@395 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@150) (= (type $generated@@468) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@216 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@140 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@140 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@140 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@140 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@150) (= (type $generated@@478) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@216 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@150) (= (type $generated@@480) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@216 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@254 $generated@@150)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@420 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@255 $generated@@481))) ($generated@@243 ($generated@@256 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@256 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@420 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (! (= (type ($generated@@485 $generated@@487 $generated@@488)) ($generated@@254 $generated@@150))
 :pattern ( ($generated@@485 $generated@@487 $generated@@488))
)))
(assert  (=> (<= 0 $generated@@417) (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@489) $generated@@66) (= (type $generated@@490) ($generated@@254 $generated@@150))) (or ($generated@@486 $generated@@489 $generated@@490) (and (not (= 0 $generated@@417)) ($generated@@137 $generated@@490 ($generated@@420 ($generated@@420 $generated@@489)))))) ($generated@@137 ($generated@@485 $generated@@489 $generated@@490) ($generated@@420 $generated@@489)))
 :pattern ( ($generated@@485 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@77 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@77 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@493 ($generated@@226 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@226 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@231 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@231 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@155 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@155 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@420 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@420 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@420 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@420 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@322 $generated@@510 ($generated@@272 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@272 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@285 $generated@@150 $generated@@150)) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) $generated@@66)) (= ($generated@@137 $generated@@511 ($generated@@387 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@283 $generated@@511) $generated@@514))) (and ($generated@@217 ($generated@@83 ($generated@@362 $generated@@511) $generated@@514) $generated@@513) ($generated@@217 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@511) $generated@@514))
 :pattern ( ($generated@@83 ($generated@@283 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@137 $generated@@511 ($generated@@387 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@516) $generated@@66)) (= (type $generated@@517) $generated@@66)) (= ($generated@@137 $generated@@515 ($generated@@395 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@515) $generated@@518))) (and ($generated@@217 ($generated@@83 ($generated@@370 $generated@@515) $generated@@518) $generated@@517) ($generated@@217 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@515) $generated@@518))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@137 $generated@@515 ($generated@@395 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@150) (= (type $generated@@522) $generated@@150)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@216 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@216 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@150) (= (type $generated@@524) $generated@@150)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@216 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@216 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@387 $generated@@526 $generated@@527))) (and (= ($generated@@272 ($generated@@322 ($generated@@285 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@322 ($generated@@285 $generated@@150 $generated@@150) $generated@@525) ($generated@@387 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@387 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@150) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) ($generated@@217 $generated@@528 ($generated@@395 $generated@@529 $generated@@530))) (and (= ($generated@@272 ($generated@@322 ($generated@@303 $generated@@150 $generated@@150) $generated@@528)) $generated@@528) ($generated@@137 ($generated@@322 ($generated@@303 $generated@@150 $generated@@150) $generated@@528) ($generated@@395 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@217 $generated@@528 ($generated@@395 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= (type $generated@@533) $generated@@150)) ($generated@@217 $generated@@533 ($generated@@140 $generated@@531 $generated@@532))) (and (= ($generated@@272 ($generated@@322 $generated@@141 $generated@@533)) $generated@@533) ($generated@@137 ($generated@@322 $generated@@141 $generated@@533) ($generated@@140 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@217 $generated@@533 ($generated@@140 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@83 ($generated@@406 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@83 ($generated@@406 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@538 $generated@@539)) $generated@@62) (= ($generated@@536 ($generated@@140 $generated@@538 $generated@@539)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@141) (= ($generated@@519 ($generated@@272 $generated@@540)) ($generated@@520 $generated@@540)))
 :pattern ( ($generated@@519 ($generated@@272 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@150) ($generated@@217 $generated@@541 ($generated@@77 0))) (and (= ($generated@@272 ($generated@@322 $generated@@2 $generated@@541)) $generated@@541) ($generated@@137 ($generated@@322 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@77 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@226 $generated@@543))) (and (= ($generated@@272 ($generated@@322 ($generated@@78 $generated@@150 $generated@@4) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@322 ($generated@@78 $generated@@150 $generated@@4) $generated@@542) ($generated@@226 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@226 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@150) (= (type $generated@@545) $generated@@66)) ($generated@@217 $generated@@544 ($generated@@231 $generated@@545))) (and (= ($generated@@272 ($generated@@322 ($generated@@78 $generated@@150 $generated@@4) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@322 ($generated@@78 $generated@@150 $generated@@4) $generated@@544) ($generated@@231 $generated@@545))))
 :pattern ( ($generated@@217 $generated@@544 ($generated@@231 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@66)) ($generated@@217 $generated@@546 ($generated@@155 $generated@@547))) (and (= ($generated@@272 ($generated@@322 ($generated@@78 $generated@@150 $generated@@2) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@322 ($generated@@78 $generated@@150 $generated@@2) $generated@@546) ($generated@@155 $generated@@547))))
 :pattern ( ($generated@@217 $generated@@546 ($generated@@155 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@150) (= (type $generated@@549) $generated@@66)) ($generated@@217 $generated@@548 ($generated@@420 $generated@@549))) (and (= ($generated@@272 ($generated@@322 ($generated@@254 $generated@@150) $generated@@548)) $generated@@548) ($generated@@137 ($generated@@322 ($generated@@254 $generated@@150) $generated@@548) ($generated@@420 $generated@@549))))
 :pattern ( ($generated@@217 $generated@@548 ($generated@@420 $generated@@549)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@536 $generated@@134) $generated@@65))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@550 $generated@@553)))) ($generated@@243 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@83 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@141) (= (type $generated@@555) $generated@@66)) (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@556) (and ($generated@@139 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@66) ($generated@@76 $generated@@554 ($generated@@140 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@76 $generated@@554 ($generated@@140 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@243 ($generated@@148 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@141) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@560) (and ($generated@@139 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@66) ($generated@@76 $generated@@558 ($generated@@140 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@76 $generated@@558 ($generated@@140 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@243 ($generated@@149 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@2) (= ($generated@@137 $generated@@562 $generated@@134)  (and (<= ($generated@@236 0) ($generated $generated@@562)) (< ($generated $generated@@562) 4294967296))))
 :pattern ( ($generated@@137 $generated@@562 $generated@@134))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@150) (= (type $generated@@564) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@563) ($generated@@238 $generated@@564)) ($generated@@238 ($generated@@216 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@563) ($generated@@238 $generated@@564)))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@272 ($generated@@8 ($generated@@236 $generated@@565))) ($generated@@238 ($generated@@272 ($generated@@8 $generated@@565))))
 :pattern ( ($generated@@272 ($generated@@8 ($generated@@236 $generated@@565))))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@272 ($generated@@238 $generated@@566)) ($generated@@238 ($generated@@272 $generated@@566)))
 :pattern ( ($generated@@272 ($generated@@238 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@253 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@254 $generated@@568)) (= ($generated@@255 $generated@@567) 0)) (= $generated@@567 ($generated@@269 $generated@@568))))
 :pattern ( ($generated@@255 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@78 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@277 ($generated@@84 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@277 $generated@@569) ($generated ($generated@@83 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@277 ($generated@@84 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@2)) ($generated@@76 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@3)) ($generated@@76 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@578) $generated@@4)) ($generated@@76 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@76 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@439)) ($generated@@76 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@582) $generated@@150)) ($generated@@76 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@76 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@254 $generated@@150)) (= (type $generated@@584) $generated@@66)) (= ($generated@@137 $generated@@583 ($generated@@420 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@255 $generated@@583))) ($generated@@217 ($generated@@256 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@256 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@137 $generated@@583 ($generated@@420 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@254 $generated@@150)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@255 $generated@@587))) (< ($generated@@520 ($generated@@322 $generated@@141 ($generated@@256 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@520 ($generated@@322 $generated@@141 ($generated@@256 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@285 $generated@@150 $generated@@150)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) ($generated@@137 $generated@@589 ($generated@@387 $generated@@590 $generated@@591))) (and (and ($generated@@137 ($generated@@283 $generated@@589) ($generated@@226 $generated@@590)) ($generated@@137 ($generated@@330 $generated@@589) ($generated@@226 $generated@@591))) ($generated@@137 ($generated@@361 $generated@@589) ($generated@@226 ($generated@@140 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@137 $generated@@589 ($generated@@387 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@593) $generated@@66)) (= (type $generated@@594) $generated@@66)) ($generated@@137 $generated@@592 ($generated@@395 $generated@@593 $generated@@594))) (and (and ($generated@@137 ($generated@@301 $generated@@592) ($generated@@231 $generated@@593)) ($generated@@137 ($generated@@341 $generated@@592) ($generated@@231 $generated@@594))) ($generated@@137 ($generated@@369 $generated@@592) ($generated@@231 ($generated@@140 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@137 $generated@@592 ($generated@@395 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@137 $generated@@595 $generated@@46))
 :pattern ( ($generated@@137 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@137 $generated@@596 $generated@@47))
 :pattern ( ($generated@@137 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@137 $generated@@597 $generated@@44))
 :pattern ( ($generated@@137 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@439) ($generated@@137 $generated@@598 $generated@@45))
 :pattern ( ($generated@@137 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@150) ($generated@@137 $generated@@599 $generated@@48))
 :pattern ( ($generated@@137 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 (T@U) Bool)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@600) ($generated@@162 $generated@@79 $generated@@4)) (= (type $generated@@601) $generated@@79)) (= (type $generated@@602) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@606) ($generated@@254 $generated@@150))) (= (type $generated@@607) ($generated@@254 $generated@@150))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@608  (=> (and (and (= $generated@@600 ($generated@@161 $generated@@601 $generated@@602 $generated@@60 false)) (= $generated@@603 $generated@@134)) (and ($generated@@242 $generated@@604) ($generated@@605 $generated@@604))) (=> (and (and (and (and ($generated@@486 $generated@@603 $generated@@606) (and ($generated@@419 ($generated@@420 $generated@@603) $generated@@606) ($generated@@486 $generated@@603 ($generated@@418 ($generated@@420 $generated@@603) $generated@@606)))) ($generated@@252 ($generated@@485 $generated@@603 $generated@@606) ($generated@@485 $generated@@603 ($generated@@418 ($generated@@420 $generated@@603) $generated@@606)))) (and (and (= $generated@@602 $generated@@604) ($generated@@76 $generated@@606 ($generated@@420 ($generated@@420 $generated@@134)) $generated@@604)) (and ($generated@@486 $generated@@134 $generated@@606) ($generated@@76 $generated@@606 ($generated@@420 ($generated@@420 $generated@@134)) $generated@@604)))) (and (and (and ($generated@@419 ($generated@@420 $generated@@134) $generated@@606) (= $generated@@607 ($generated@@418 ($generated@@420 $generated@@134) $generated@@606))) (and ($generated@@76 $generated@@607 ($generated@@420 ($generated@@420 $generated@@134)) $generated@@604) ($generated@@486 $generated@@134 ($generated@@418 ($generated@@420 $generated@@134) $generated@@606)))) (and (and ($generated@@486 $generated@@134 $generated@@606) (and ($generated@@419 ($generated@@420 $generated@@134) $generated@@606) ($generated@@486 $generated@@134 ($generated@@418 ($generated@@420 $generated@@134) $generated@@606)))) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@252 ($generated@@485 $generated@@134 $generated@@606) ($generated@@485 $generated@@134 ($generated@@418 ($generated@@420 $generated@@134) $generated@@606)))))))
(let (($generated@@609  (=> (and ($generated@@242 $generated@@602) ($generated@@605 $generated@@602)) (=> (and (and ($generated@@137 $generated@@606 ($generated@@420 ($generated@@420 $generated@@134))) ($generated@@76 $generated@@606 ($generated@@420 ($generated@@420 $generated@@134)) $generated@@602)) (and (= 2 $generated@@417) (= (ControlFlow 0 3) 2))) $generated@@608))))
$generated@@609)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
